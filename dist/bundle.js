(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
arguments[4][1][0].apply(exports,arguments)
},{"dup":1}],3:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":4}],4:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

(function () {
  try {
    cachedSetTimeout = setTimeout;
  } catch (e) {
    cachedSetTimeout = function () {
      throw new Error('setTimeout is not defined');
    }
  }
  try {
    cachedClearTimeout = clearTimeout;
  } catch (e) {
    cachedClearTimeout = function () {
      throw new Error('clearTimeout is not defined');
    }
  }
} ())
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = cachedSetTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    cachedClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        cachedSetTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],5:[function(require,module,exports){
var Incheon = {
    GameEngine: require("./src/GameEngine"),
    ServerEngine: require("./src/ServerEngine"),
    ClientEngine: require("./src/ClientEngine"),
    GameWorld: require("./src/GameWorld"),
    Point: require("./src/Point"),
    Composables: {
        Serializable: require("./src/composables/Serializable")
    },
    SyncStrategies:{
        playerGradualSnap: require("./src/syncStrategies/PlayerGradualSnap")
    }

};

module.exports = Incheon;

},{"./src/ClientEngine":56,"./src/GameEngine":57,"./src/GameWorld":58,"./src/Point":59,"./src/ServerEngine":60,"./src/composables/Serializable":62,"./src/syncStrategies/PlayerGradualSnap":63}],6:[function(require,module,exports){
'use strict';

var has = Object.prototype.hasOwnProperty;

//
// We store our EE objects in a plain object whose properties are event names.
// If `Object.create(null)` is not supported we prefix the event names with a
// `~` to make sure that the built-in object properties are not overridden or
// used as an attack vector.
// We also assume that `Object.create(null)` is available when the event name
// is an ES6 Symbol.
//
var prefix = typeof Object.create !== 'function' ? '~' : false;

/**
 * Representation of a single EventEmitter function.
 *
 * @param {Function} fn Event handler to be called.
 * @param {Mixed} context Context for function execution.
 * @param {Boolean} [once=false] Only emit once
 * @api private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Minimal EventEmitter interface that is molded against the Node.js
 * EventEmitter interface.
 *
 * @constructor
 * @api public
 */
function EventEmitter() { /* Nothing to set */ }

/**
 * Hold the assigned EventEmitters by name.
 *
 * @type {Object}
 * @private
 */
EventEmitter.prototype._events = undefined;

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @api public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var events = this._events
    , names = []
    , name;

  if (!events) return names;

  for (name in events) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return a list of assigned event listeners.
 *
 * @param {String} event The events that should be listed.
 * @param {Boolean} exists We only need to know if there are listeners.
 * @returns {Array|Boolean}
 * @api public
 */
EventEmitter.prototype.listeners = function listeners(event, exists) {
  var evt = prefix ? prefix + event : event
    , available = this._events && this._events[evt];

  if (exists) return !!available;
  if (!available) return [];
  if (available.fn) return [available.fn];

  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
    ee[i] = available[i].fn;
  }

  return ee;
};

/**
 * Emit an event to all registered event listeners.
 *
 * @param {String} event The name of the event.
 * @returns {Boolean} Indication if we've emitted an event.
 * @api public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events || !this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if ('function' === typeof listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Register a new EventListener for the given event.
 *
 * @param {String} event Name of the event.
 * @param {Function} fn Callback function.
 * @param {Mixed} [context=this] The context of the function.
 * @api public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  var listener = new EE(fn, context || this)
    , evt = prefix ? prefix + event : event;

  if (!this._events) this._events = prefix ? {} : Object.create(null);
  if (!this._events[evt]) this._events[evt] = listener;
  else {
    if (!this._events[evt].fn) this._events[evt].push(listener);
    else this._events[evt] = [
      this._events[evt], listener
    ];
  }

  return this;
};

/**
 * Add an EventListener that's only called once.
 *
 * @param {String} event Name of the event.
 * @param {Function} fn Callback function.
 * @param {Mixed} [context=this] The context of the function.
 * @api public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  var listener = new EE(fn, context || this, true)
    , evt = prefix ? prefix + event : event;

  if (!this._events) this._events = prefix ? {} : Object.create(null);
  if (!this._events[evt]) this._events[evt] = listener;
  else {
    if (!this._events[evt].fn) this._events[evt].push(listener);
    else this._events[evt] = [
      this._events[evt], listener
    ];
  }

  return this;
};

/**
 * Remove event listeners.
 *
 * @param {String} event The event we want to remove.
 * @param {Function} fn The listener that we need to find.
 * @param {Mixed} context Only remove listeners matching this context.
 * @param {Boolean} once Only remove once listeners.
 * @api public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events || !this._events[evt]) return this;

  var listeners = this._events[evt]
    , events = [];

  if (fn) {
    if (listeners.fn) {
      if (
           listeners.fn !== fn
        || (once && !listeners.once)
        || (context && listeners.context !== context)
      ) {
        events.push(listeners);
      }
    } else {
      for (var i = 0, length = listeners.length; i < length; i++) {
        if (
             listeners[i].fn !== fn
          || (once && !listeners[i].once)
          || (context && listeners[i].context !== context)
        ) {
          events.push(listeners[i]);
        }
      }
    }
  }

  //
  // Reset the array, or remove it completely if we have no more listeners.
  //
  if (events.length) {
    this._events[evt] = events.length === 1 ? events[0] : events;
  } else {
    delete this._events[evt];
  }

  return this;
};

/**
 * Remove all listeners or only the listeners for the specified event.
 *
 * @param {String} event The event want to remove all listeners for.
 * @api public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  if (!this._events) return this;

  if (event) delete this._events[prefix ? prefix + event : event];
  else this._events = prefix ? {} : Object.create(null);

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// This function doesn't apply anymore.
//
EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
  return this;
};

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
  module.exports = EventEmitter;
}

},{}],7:[function(require,module,exports){
module.exports = require('./lib/gameloop');
},{"./lib/gameloop":8}],8:[function(require,module,exports){
// Taken and modified from https://github.com/timetocode/node-game-loop

var activeLoops = [];

var getLoopId = (function() {
	var staticLoopId = 0;
	return function() {
		return staticLoopId++;
	}
})();

module.exports.setGameLoop = function(update, tickLengthMs) {

	var loopId = getLoopId();
	activeLoops.push(loopId);

	/**
	 * Length of a tick in milliseconds. The denominator is your desired framerate.
	 * e.g. 1000 / 20 = 20 fps, 1000 / 60 = 60 fps
	 */
	tickLengthMs = tickLengthMs || 1000 / 30;

	/* gameLoop related variables */
	// timestamp of each loop
	var previousTick = Date.now();
	// number of times gameLoop gets called
	var actualTicks = 0;

	var gameLoop = function() {
		var now = Date.now();

		actualTicks++
		if (previousTick + tickLengthMs <= now) {
			var delta = (now - previousTick) / 1000;
			previousTick = now;

			// actually run user code
			update(delta);

			actualTicks = 0;
		}

		// do not go on to renew loop if no longer active
		if (activeLoops.indexOf(loopId) === -1) {
			return;
		}

		// otherwise renew loop in 16ms multiples, or immediately
		if (Date.now() - previousTick < tickLengthMs - 16) {
			setTimeout(gameLoop, 16);
		} else {
			setImmediate(gameLoop);
		}
	}

	// begin the loop!
	gameLoop();

	return loopId;
};

module.exports.clearGameLoop = function(loopId) {
	// remove the loop id from the active loops
	activeLoops.splice(activeLoops.indexOf(loopId), 1);
};
},{}],9:[function(require,module,exports){

/**
 * Module dependencies.
 */

var url = require('./url');
var parser = require('socket.io-parser');
var Manager = require('./manager');
var debug = require('debug')('socket.io-client');

/**
 * Module exports.
 */

module.exports = exports = lookup;

/**
 * Managers cache.
 */

var cache = exports.managers = {};

/**
 * Looks up an existing `Manager` for multiplexing.
 * If the user summons:
 *
 *   `io('http://localhost/a');`
 *   `io('http://localhost/b');`
 *
 * We reuse the existing instance based on same scheme/port/host,
 * and we initialize sockets for each namespace.
 *
 * @api public
 */

function lookup(uri, opts) {
  if (typeof uri == 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
                      false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }

  return io.socket(parsed.path);
}

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = parser.protocol;

/**
 * `connect`.
 *
 * @param {String} uri
 * @api public
 */

exports.connect = lookup;

/**
 * Expose constructors for standalone build.
 *
 * @api public
 */

exports.Manager = require('./manager');
exports.Socket = require('./socket');

},{"./manager":10,"./socket":12,"./url":13,"debug":17,"socket.io-parser":50}],10:[function(require,module,exports){

/**
 * Module dependencies.
 */

var eio = require('engine.io-client');
var Socket = require('./socket');
var Emitter = require('component-emitter');
var parser = require('socket.io-parser');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:manager');
var indexOf = require('indexof');
var Backoff = require('backo2');

/**
 * IE6+ hasOwnProperty
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Module exports
 */

module.exports = Manager;

/**
 * `Manager` constructor.
 *
 * @param {String} engine instance or engine uri/opts
 * @param {Object} options
 * @api public
 */

function Manager(uri, opts){
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && ('object' == typeof uri)) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor()
  });
  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  this.encoder = new parser.Encoder();
  this.decoder = new parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
 * Propagate given event to sockets and emit on `this`
 *
 * @api private
 */

Manager.prototype.emitAll = function() {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
 * Update `socket.id` of all sockets
 *
 * @api private
 */

Manager.prototype.updateSocketIds = function(){
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.engine.id;
    }
  }
};

/**
 * Mix in `Emitter`.
 */

Emitter(Manager.prototype);

/**
 * Sets the `reconnection` config.
 *
 * @param {Boolean} true/false if it should automatically reconnect
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnection = function(v){
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
 * Sets the reconnection attempts config.
 *
 * @param {Number} max reconnection attempts before giving up
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionAttempts = function(v){
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
 * Sets the delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelay = function(v){
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function(v){
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
 * Sets the maximum delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelayMax = function(v){
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
 * Sets the connection timeout. `false` to disable
 *
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.timeout = function(v){
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
 * Starts trying to reconnect if reconnection is enabled and we have not
 * started reconnecting yet
 *
 * @api private
 */

Manager.prototype.maybeReconnectOnOpen = function() {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};


/**
 * Sets the current transport `socket`.
 *
 * @param {Function} optional, callback
 * @return {Manager} self
 * @api public
 */

Manager.prototype.open =
Manager.prototype.connect = function(fn){
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function() {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function(data){
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    // set timer
    var timer = setTimeout(function(){
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function(){
        clearTimeout(timer);
      }
    });
  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
 * Called upon transport open.
 *
 * @api private
 */

Manager.prototype.onopen = function(){
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
 * Called upon a ping.
 *
 * @api private
 */

Manager.prototype.onping = function(){
  this.lastPing = new Date;
  this.emitAll('ping');
};

/**
 * Called upon a packet.
 *
 * @api private
 */

Manager.prototype.onpong = function(){
  this.emitAll('pong', new Date - this.lastPing);
};

/**
 * Called with data.
 *
 * @api private
 */

Manager.prototype.ondata = function(data){
  this.decoder.add(data);
};

/**
 * Called when parser fully decodes a packet.
 *
 * @api private
 */

Manager.prototype.ondecoded = function(packet) {
  this.emit('packet', packet);
};

/**
 * Called upon socket error.
 *
 * @api private
 */

Manager.prototype.onerror = function(err){
  debug('error', err);
  this.emitAll('error', err);
};

/**
 * Creates a new socket for the given `nsp`.
 *
 * @return {Socket}
 * @api public
 */

Manager.prototype.socket = function(nsp){
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function(){
      socket.id = self.engine.id;
    });

    if (this.autoConnect) {
      // manually call here since connecting evnet is fired before listening
      onConnecting();
    }
  }

  function onConnecting() {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
 * Called upon a socket close.
 *
 * @param {Socket} socket
 */

Manager.prototype.destroy = function(socket){
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
 * Writes a packet.
 *
 * @param {Object} packet
 * @api private
 */

Manager.prototype.packet = function(packet){
  debug('writing packet %j', packet);
  var self = this;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function(encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else { // add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
 * If packet buffer is non-empty, begins encoding the
 * next packet in line.
 *
 * @api private
 */

Manager.prototype.processPacketQueue = function() {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
 * Clean up transport subscriptions and packet buffer.
 *
 * @api private
 */

Manager.prototype.cleanup = function(){
  debug('cleanup');

  var sub;
  while (sub = this.subs.shift()) sub.destroy();

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
 * Close the current socket.
 *
 * @api private
 */

Manager.prototype.close =
Manager.prototype.disconnect = function(){
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' == this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
 * Called upon engine close.
 *
 * @api private
 */

Manager.prototype.onclose = function(reason){
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
 * Attempt a reconnection.
 *
 * @api private
 */

Manager.prototype.reconnect = function(){
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function(){
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function(err){
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function(){
        clearTimeout(timer);
      }
    });
  }
};

/**
 * Called upon successful reconnect.
 *
 * @api private
 */

Manager.prototype.onreconnect = function(){
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};

},{"./on":11,"./socket":12,"backo2":14,"component-bind":15,"component-emitter":16,"debug":17,"engine.io-client":20,"indexof":47,"socket.io-parser":50}],11:[function(require,module,exports){

/**
 * Module exports.
 */

module.exports = on;

/**
 * Helper for subscriptions.
 *
 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
 * @param {String} event name
 * @param {Function} callback
 * @api public
 */

function on(obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function(){
      obj.removeListener(ev, fn);
    }
  };
}

},{}],12:[function(require,module,exports){

/**
 * Module dependencies.
 */

var parser = require('socket.io-parser');
var Emitter = require('component-emitter');
var toArray = require('to-array');
var on = require('./on');
var bind = require('component-bind');
var debug = require('debug')('socket.io-client:socket');
var hasBin = require('has-binary');

/**
 * Module exports.
 */

module.exports = exports = Socket;

/**
 * Internal events (blacklisted).
 * These events can't be emitted by the user.
 *
 * @api private
 */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1
};

/**
 * Shortcut to `Emitter#emit`.
 */

var emit = Emitter.prototype.emit;

/**
 * `Socket` constructor.
 *
 * @api public
 */

function Socket(io, nsp){
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  if (this.io.autoConnect) this.open();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Subscribe to open, close and packet events
 *
 * @api private
 */

Socket.prototype.subEvents = function() {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
    on(io, 'open', bind(this, 'onopen')),
    on(io, 'packet', bind(this, 'onpacket')),
    on(io, 'close', bind(this, 'onclose'))
  ];
};

/**
 * "Opens" the socket.
 *
 * @api public
 */

Socket.prototype.open =
Socket.prototype.connect = function(){
  if (this.connected) return this;

  this.subEvents();
  this.io.open(); // ensure open
  if ('open' == this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
 * Sends a `message` event.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.send = function(){
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
 * Override `emit`.
 * If the event is in `events`, it's emitted normally.
 *
 * @param {String} event name
 * @return {Socket} self
 * @api public
 */

Socket.prototype.emit = function(ev){
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var parserType = parser.EVENT; // default
  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary
  var packet = { type: parserType, data: args };

  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' == typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  delete this.flags;

  return this;
};

/**
 * Sends a packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.packet = function(packet){
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
 * Called upon engine `open`.
 *
 * @api private
 */

Socket.prototype.onopen = function(){
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' != this.nsp) {
    this.packet({ type: parser.CONNECT });
  }
};

/**
 * Called upon engine `close`.
 *
 * @param {String} reason
 * @api private
 */

Socket.prototype.onclose = function(reason){
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
 * Called with socket packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onpacket = function(packet){
  if (packet.nsp != this.nsp) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;
  }
};

/**
 * Called upon a server event.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onevent = function(packet){
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
 * Produces an ack callback to emit with an event.
 *
 * @api private
 */

Socket.prototype.ack = function(id){
  var self = this;
  var sent = false;
  return function(){
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;
    self.packet({
      type: type,
      id: id,
      data: args
    });
  };
};

/**
 * Called upon a server acknowlegement.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onack = function(packet){
  var ack = this.acks[packet.id];
  if ('function' == typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
 * Called upon server connect.
 *
 * @api private
 */

Socket.prototype.onconnect = function(){
  this.connected = true;
  this.disconnected = false;
  this.emit('connect');
  this.emitBuffered();
};

/**
 * Emit buffered events (received and emitted).
 *
 * @api private
 */

Socket.prototype.emitBuffered = function(){
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
 * Called upon server disconnect.
 *
 * @api private
 */

Socket.prototype.ondisconnect = function(){
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
 * Called upon forced client/server side disconnections,
 * this method ensures the manager stops tracking us and
 * that reconnections don't get triggered for this.
 *
 * @api private.
 */

Socket.prototype.destroy = function(){
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
 * Disconnects the socket manually.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.close =
Socket.prototype.disconnect = function(){
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
 * Sets the compress flag.
 *
 * @param {Boolean} if `true`, compresses the sending data
 * @return {Socket} self
 * @api public
 */

Socket.prototype.compress = function(compress){
  this.flags = this.flags || {};
  this.flags.compress = compress;
  return this;
};

},{"./on":11,"component-bind":15,"component-emitter":16,"debug":17,"has-binary":45,"socket.io-parser":50,"to-array":55}],13:[function(require,module,exports){
(function (global){

/**
 * Module dependencies.
 */

var parseuri = require('parseuri');
var debug = require('debug')('socket.io-client:url');

/**
 * Module exports.
 */

module.exports = url;

/**
 * URL parser.
 *
 * @param {String} url
 * @param {Object} An object meant to mimic window.location.
 *                 Defaults to window.location.
 * @api public
 */

function url(uri, loc){
  var obj = uri;

  // default to window.location
  var loc = loc || global.location;
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' == typeof uri) {
    if ('/' == uri.charAt(0)) {
      if ('/' == uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' != typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    }
    else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));

  return obj;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"debug":17,"parseuri":48}],14:[function(require,module,exports){

/**
 * Expose `Backoff`.
 */

module.exports = Backoff;

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */

Backoff.prototype.duration = function(){
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand =  Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

/**
 * Reset the number of attempts.
 *
 * @api public
 */

Backoff.prototype.reset = function(){
  this.attempts = 0;
};

/**
 * Set the minimum duration
 *
 * @api public
 */

Backoff.prototype.setMin = function(min){
  this.ms = min;
};

/**
 * Set the maximum duration
 *
 * @api public
 */

Backoff.prototype.setMax = function(max){
  this.max = max;
};

/**
 * Set the jitter
 *
 * @api public
 */

Backoff.prototype.setJitter = function(jitter){
  this.jitter = jitter;
};


},{}],15:[function(require,module,exports){
/**
 * Slice reference.
 */

var slice = [].slice;

/**
 * Bind `obj` to `fn`.
 *
 * @param {Object} obj
 * @param {Function|String} fn or string
 * @return {Function}
 * @api public
 */

module.exports = function(obj, fn){
  if ('string' == typeof fn) fn = obj[fn];
  if ('function' != typeof fn) throw new Error('bind() requires a function');
  var args = slice.call(arguments, 2);
  return function(){
    return fn.apply(obj, args.concat(slice.call(arguments)));
  }
};

},{}],16:[function(require,module,exports){

/**
 * Expose `Emitter`.
 */

module.exports = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

},{}],17:[function(require,module,exports){

/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = require('./debug');
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  'lightseagreen',
  'forestgreen',
  'goldenrod',
  'dodgerblue',
  'darkorchid',
  'crimson'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // is webkit? http://stackoverflow.com/a/16459606/376773
  return ('WebkitAppearance' in document.documentElement.style) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (window.console && (console.firebug || (console.exception && console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  return JSON.stringify(v);
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs() {
  var args = arguments;
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return args;

  var c = 'color: ' + this.color;
  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
  return args;
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}
  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage(){
  try {
    return window.localStorage;
  } catch (e) {}
}

},{"./debug":18}],18:[function(require,module,exports){

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = debug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = require('ms');

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lowercased letter, i.e. "n".
 */

exports.formatters = {};

/**
 * Previously assigned color.
 */

var prevColor = 0;

/**
 * Previous log timestamp.
 */

var prevTime;

/**
 * Select a color.
 *
 * @return {Number}
 * @api private
 */

function selectColor() {
  return exports.colors[prevColor++ % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function debug(namespace) {

  // define the `disabled` version
  function disabled() {
  }
  disabled.enabled = false;

  // define the `enabled` version
  function enabled() {

    var self = enabled;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // add the `color` if not set
    if (null == self.useColors) self.useColors = exports.useColors();
    if (null == self.color && self.useColors) self.color = selectColor();

    var args = Array.prototype.slice.call(arguments);

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %o
      args = ['%o'].concat(args);
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    if ('function' === typeof exports.formatArgs) {
      args = exports.formatArgs.apply(self, args);
    }
    var logFn = enabled.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }
  enabled.enabled = true;

  var fn = exports.enabled(namespace) ? enabled : disabled;

  fn.namespace = namespace;

  return fn;
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  var split = (namespaces || '').split(/[\s,]+/);
  var len = split.length;

  for (var i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}

},{"ms":19}],19:[function(require,module,exports){
/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} options
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options){
  options = options || {};
  if ('string' == typeof val) return parse(val);
  return options.long
    ? long(val)
    : short(val);
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = '' + str;
  if (str.length > 10000) return;
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
  if (!match) return;
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function short(ms) {
  if (ms >= d) return Math.round(ms / d) + 'd';
  if (ms >= h) return Math.round(ms / h) + 'h';
  if (ms >= m) return Math.round(ms / m) + 'm';
  if (ms >= s) return Math.round(ms / s) + 's';
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function long(ms) {
  return plural(ms, d, 'day')
    || plural(ms, h, 'hour')
    || plural(ms, m, 'minute')
    || plural(ms, s, 'second')
    || ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) return;
  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
  return Math.ceil(ms / n) + ' ' + name + 's';
}

},{}],20:[function(require,module,exports){

module.exports =  require('./lib/');

},{"./lib/":21}],21:[function(require,module,exports){

module.exports = require('./socket');

/**
 * Exports parser
 *
 * @api public
 *
 */
module.exports.parser = require('engine.io-parser');

},{"./socket":22,"engine.io-parser":32}],22:[function(require,module,exports){
(function (global){
/**
 * Module dependencies.
 */

var transports = require('./transports');
var Emitter = require('component-emitter');
var debug = require('debug')('engine.io-client:socket');
var index = require('indexof');
var parser = require('engine.io-parser');
var parseuri = require('parseuri');
var parsejson = require('parsejson');
var parseqs = require('parseqs');

/**
 * Module exports.
 */

module.exports = Socket;

/**
 * Noop function.
 *
 * @api private
 */

function noop(){}

/**
 * Socket constructor.
 *
 * @param {String|Object} uri or options
 * @param {Object} options
 * @api public
 */

function Socket(uri, opts){
  if (!(this instanceof Socket)) return new Socket(uri, opts);

  opts = opts || {};

  if (uri && 'object' == typeof uri) {
    opts = uri;
    uri = null;
  }

  if (uri) {
    uri = parseuri(uri);
    opts.hostname = uri.host;
    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';
    opts.port = uri.port;
    if (uri.query) opts.query = uri.query;
  } else if (opts.host) {
    opts.hostname = parseuri(opts.host).host;
  }

  this.secure = null != opts.secure ? opts.secure :
    (global.location && 'https:' == location.protocol);

  if (opts.hostname && !opts.port) {
    // if no port is specified manually, use the protocol default
    opts.port = this.secure ? '443' : '80';
  }

  this.agent = opts.agent || false;
  this.hostname = opts.hostname ||
    (global.location ? location.hostname : 'localhost');
  this.port = opts.port || (global.location && location.port ?
       location.port :
       (this.secure ? 443 : 80));
  this.query = opts.query || {};
  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);
  this.upgrade = false !== opts.upgrade;
  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
  this.forceJSONP = !!opts.forceJSONP;
  this.jsonp = false !== opts.jsonp;
  this.forceBase64 = !!opts.forceBase64;
  this.enablesXDR = !!opts.enablesXDR;
  this.timestampParam = opts.timestampParam || 't';
  this.timestampRequests = opts.timestampRequests;
  this.transports = opts.transports || ['polling', 'websocket'];
  this.readyState = '';
  this.writeBuffer = [];
  this.policyPort = opts.policyPort || 843;
  this.rememberUpgrade = opts.rememberUpgrade || false;
  this.binaryType = null;
  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;

  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
    this.perMessageDeflate.threshold = 1024;
  }

  // SSL options for Node.js client
  this.pfx = opts.pfx || null;
  this.key = opts.key || null;
  this.passphrase = opts.passphrase || null;
  this.cert = opts.cert || null;
  this.ca = opts.ca || null;
  this.ciphers = opts.ciphers || null;
  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;

  // other options for Node.js client
  var freeGlobal = typeof global == 'object' && global;
  if (freeGlobal.global === freeGlobal) {
    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
      this.extraHeaders = opts.extraHeaders;
    }
  }

  this.open();
}

Socket.priorWebsocketSuccess = false;

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

Socket.Socket = Socket;
Socket.Transport = require('./transport');
Socket.transports = require('./transports');
Socket.parser = require('engine.io-parser');

/**
 * Creates transport of the given type.
 *
 * @param {String} transport name
 * @return {Transport}
 * @api private
 */

Socket.prototype.createTransport = function (name) {
  debug('creating transport "%s"', name);
  var query = clone(this.query);

  // append engine.io protocol identifier
  query.EIO = parser.protocol;

  // transport name
  query.transport = name;

  // session id if we already have one
  if (this.id) query.sid = this.id;

  var transport = new transports[name]({
    agent: this.agent,
    hostname: this.hostname,
    port: this.port,
    secure: this.secure,
    path: this.path,
    query: query,
    forceJSONP: this.forceJSONP,
    jsonp: this.jsonp,
    forceBase64: this.forceBase64,
    enablesXDR: this.enablesXDR,
    timestampRequests: this.timestampRequests,
    timestampParam: this.timestampParam,
    policyPort: this.policyPort,
    socket: this,
    pfx: this.pfx,
    key: this.key,
    passphrase: this.passphrase,
    cert: this.cert,
    ca: this.ca,
    ciphers: this.ciphers,
    rejectUnauthorized: this.rejectUnauthorized,
    perMessageDeflate: this.perMessageDeflate,
    extraHeaders: this.extraHeaders
  });

  return transport;
};

function clone (obj) {
  var o = {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

/**
 * Initializes transport to use and starts probe.
 *
 * @api private
 */
Socket.prototype.open = function () {
  var transport;
  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {
    transport = 'websocket';
  } else if (0 === this.transports.length) {
    // Emit error on next tick so it can be listened to
    var self = this;
    setTimeout(function() {
      self.emit('error', 'No transports available');
    }, 0);
    return;
  } else {
    transport = this.transports[0];
  }
  this.readyState = 'opening';

  // Retry with the next transport if the transport is disabled (jsonp: false)
  try {
    transport = this.createTransport(transport);
  } catch (e) {
    this.transports.shift();
    this.open();
    return;
  }

  transport.open();
  this.setTransport(transport);
};

/**
 * Sets the current transport. Disables the existing one (if any).
 *
 * @api private
 */

Socket.prototype.setTransport = function(transport){
  debug('setting transport %s', transport.name);
  var self = this;

  if (this.transport) {
    debug('clearing existing transport %s', this.transport.name);
    this.transport.removeAllListeners();
  }

  // set up transport
  this.transport = transport;

  // set up transport listeners
  transport
  .on('drain', function(){
    self.onDrain();
  })
  .on('packet', function(packet){
    self.onPacket(packet);
  })
  .on('error', function(e){
    self.onError(e);
  })
  .on('close', function(){
    self.onClose('transport close');
  });
};

/**
 * Probes a transport.
 *
 * @param {String} transport name
 * @api private
 */

Socket.prototype.probe = function (name) {
  debug('probing transport "%s"', name);
  var transport = this.createTransport(name, { probe: 1 })
    , failed = false
    , self = this;

  Socket.priorWebsocketSuccess = false;

  function onTransportOpen(){
    if (self.onlyBinaryUpgrades) {
      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
      failed = failed || upgradeLosesBinary;
    }
    if (failed) return;

    debug('probe transport "%s" opened', name);
    transport.send([{ type: 'ping', data: 'probe' }]);
    transport.once('packet', function (msg) {
      if (failed) return;
      if ('pong' == msg.type && 'probe' == msg.data) {
        debug('probe transport "%s" pong', name);
        self.upgrading = true;
        self.emit('upgrading', transport);
        if (!transport) return;
        Socket.priorWebsocketSuccess = 'websocket' == transport.name;

        debug('pausing current transport "%s"', self.transport.name);
        self.transport.pause(function () {
          if (failed) return;
          if ('closed' == self.readyState) return;
          debug('changing transport and sending upgrade packet');

          cleanup();

          self.setTransport(transport);
          transport.send([{ type: 'upgrade' }]);
          self.emit('upgrade', transport);
          transport = null;
          self.upgrading = false;
          self.flush();
        });
      } else {
        debug('probe transport "%s" failed', name);
        var err = new Error('probe error');
        err.transport = transport.name;
        self.emit('upgradeError', err);
      }
    });
  }

  function freezeTransport() {
    if (failed) return;

    // Any callback called by transport should be ignored since now
    failed = true;

    cleanup();

    transport.close();
    transport = null;
  }

  //Handle any error that happens while probing
  function onerror(err) {
    var error = new Error('probe error: ' + err);
    error.transport = transport.name;

    freezeTransport();

    debug('probe transport "%s" failed because of error: %s', name, err);

    self.emit('upgradeError', error);
  }

  function onTransportClose(){
    onerror("transport closed");
  }

  //When the socket is closed while we're probing
  function onclose(){
    onerror("socket closed");
  }

  //When the socket is upgraded while we're probing
  function onupgrade(to){
    if (transport && to.name != transport.name) {
      debug('"%s" works - aborting "%s"', to.name, transport.name);
      freezeTransport();
    }
  }

  //Remove all listeners on the transport and on self
  function cleanup(){
    transport.removeListener('open', onTransportOpen);
    transport.removeListener('error', onerror);
    transport.removeListener('close', onTransportClose);
    self.removeListener('close', onclose);
    self.removeListener('upgrading', onupgrade);
  }

  transport.once('open', onTransportOpen);
  transport.once('error', onerror);
  transport.once('close', onTransportClose);

  this.once('close', onclose);
  this.once('upgrading', onupgrade);

  transport.open();

};

/**
 * Called when connection is deemed open.
 *
 * @api public
 */

Socket.prototype.onOpen = function () {
  debug('socket open');
  this.readyState = 'open';
  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;
  this.emit('open');
  this.flush();

  // we check for `readyState` in case an `open`
  // listener already closed the socket
  if ('open' == this.readyState && this.upgrade && this.transport.pause) {
    debug('starting upgrade probes');
    for (var i = 0, l = this.upgrades.length; i < l; i++) {
      this.probe(this.upgrades[i]);
    }
  }
};

/**
 * Handles a packet.
 *
 * @api private
 */

Socket.prototype.onPacket = function (packet) {
  if ('opening' == this.readyState || 'open' == this.readyState) {
    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

    this.emit('packet', packet);

    // Socket is live - any packet counts
    this.emit('heartbeat');

    switch (packet.type) {
      case 'open':
        this.onHandshake(parsejson(packet.data));
        break;

      case 'pong':
        this.setPing();
        this.emit('pong');
        break;

      case 'error':
        var err = new Error('server error');
        err.code = packet.data;
        this.onError(err);
        break;

      case 'message':
        this.emit('data', packet.data);
        this.emit('message', packet.data);
        break;
    }
  } else {
    debug('packet received with socket readyState "%s"', this.readyState);
  }
};

/**
 * Called upon handshake completion.
 *
 * @param {Object} handshake obj
 * @api private
 */

Socket.prototype.onHandshake = function (data) {
  this.emit('handshake', data);
  this.id = data.sid;
  this.transport.query.sid = data.sid;
  this.upgrades = this.filterUpgrades(data.upgrades);
  this.pingInterval = data.pingInterval;
  this.pingTimeout = data.pingTimeout;
  this.onOpen();
  // In case open handler closes socket
  if  ('closed' == this.readyState) return;
  this.setPing();

  // Prolong liveness of socket on heartbeat
  this.removeListener('heartbeat', this.onHeartbeat);
  this.on('heartbeat', this.onHeartbeat);
};

/**
 * Resets ping timeout.
 *
 * @api private
 */

Socket.prototype.onHeartbeat = function (timeout) {
  clearTimeout(this.pingTimeoutTimer);
  var self = this;
  self.pingTimeoutTimer = setTimeout(function () {
    if ('closed' == self.readyState) return;
    self.onClose('ping timeout');
  }, timeout || (self.pingInterval + self.pingTimeout));
};

/**
 * Pings server every `this.pingInterval` and expects response
 * within `this.pingTimeout` or closes connection.
 *
 * @api private
 */

Socket.prototype.setPing = function () {
  var self = this;
  clearTimeout(self.pingIntervalTimer);
  self.pingIntervalTimer = setTimeout(function () {
    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
    self.ping();
    self.onHeartbeat(self.pingTimeout);
  }, self.pingInterval);
};

/**
* Sends a ping packet.
*
* @api private
*/

Socket.prototype.ping = function () {
  var self = this;
  this.sendPacket('ping', function(){
    self.emit('ping');
  });
};

/**
 * Called on `drain` event
 *
 * @api private
 */

Socket.prototype.onDrain = function() {
  this.writeBuffer.splice(0, this.prevBufferLen);

  // setting prevBufferLen = 0 is very important
  // for example, when upgrading, upgrade packet is sent over,
  // and a nonzero prevBufferLen could cause problems on `drain`
  this.prevBufferLen = 0;

  if (0 === this.writeBuffer.length) {
    this.emit('drain');
  } else {
    this.flush();
  }
};

/**
 * Flush write buffers.
 *
 * @api private
 */

Socket.prototype.flush = function () {
  if ('closed' != this.readyState && this.transport.writable &&
    !this.upgrading && this.writeBuffer.length) {
    debug('flushing %d packets in socket', this.writeBuffer.length);
    this.transport.send(this.writeBuffer);
    // keep track of current length of writeBuffer
    // splice writeBuffer and callbackBuffer on `drain`
    this.prevBufferLen = this.writeBuffer.length;
    this.emit('flush');
  }
};

/**
 * Sends a message.
 *
 * @param {String} message.
 * @param {Function} callback function.
 * @param {Object} options.
 * @return {Socket} for chaining.
 * @api public
 */

Socket.prototype.write =
Socket.prototype.send = function (msg, options, fn) {
  this.sendPacket('message', msg, options, fn);
  return this;
};

/**
 * Sends a packet.
 *
 * @param {String} packet type.
 * @param {String} data.
 * @param {Object} options.
 * @param {Function} callback function.
 * @api private
 */

Socket.prototype.sendPacket = function (type, data, options, fn) {
  if('function' == typeof data) {
    fn = data;
    data = undefined;
  }

  if ('function' == typeof options) {
    fn = options;
    options = null;
  }

  if ('closing' == this.readyState || 'closed' == this.readyState) {
    return;
  }

  options = options || {};
  options.compress = false !== options.compress;

  var packet = {
    type: type,
    data: data,
    options: options
  };
  this.emit('packetCreate', packet);
  this.writeBuffer.push(packet);
  if (fn) this.once('flush', fn);
  this.flush();
};

/**
 * Closes the connection.
 *
 * @api private
 */

Socket.prototype.close = function () {
  if ('opening' == this.readyState || 'open' == this.readyState) {
    this.readyState = 'closing';

    var self = this;

    if (this.writeBuffer.length) {
      this.once('drain', function() {
        if (this.upgrading) {
          waitForUpgrade();
        } else {
          close();
        }
      });
    } else if (this.upgrading) {
      waitForUpgrade();
    } else {
      close();
    }
  }

  function close() {
    self.onClose('forced close');
    debug('socket closing - telling transport to close');
    self.transport.close();
  }

  function cleanupAndClose() {
    self.removeListener('upgrade', cleanupAndClose);
    self.removeListener('upgradeError', cleanupAndClose);
    close();
  }

  function waitForUpgrade() {
    // wait for upgrade to finish since we can't send packets while pausing a transport
    self.once('upgrade', cleanupAndClose);
    self.once('upgradeError', cleanupAndClose);
  }

  return this;
};

/**
 * Called upon transport error
 *
 * @api private
 */

Socket.prototype.onError = function (err) {
  debug('socket error %j', err);
  Socket.priorWebsocketSuccess = false;
  this.emit('error', err);
  this.onClose('transport error', err);
};

/**
 * Called upon transport close.
 *
 * @api private
 */

Socket.prototype.onClose = function (reason, desc) {
  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {
    debug('socket close with reason: "%s"', reason);
    var self = this;

    // clear timers
    clearTimeout(this.pingIntervalTimer);
    clearTimeout(this.pingTimeoutTimer);

    // stop event from firing again for transport
    this.transport.removeAllListeners('close');

    // ensure transport won't stay open
    this.transport.close();

    // ignore further transport communication
    this.transport.removeAllListeners();

    // set ready state
    this.readyState = 'closed';

    // clear session id
    this.id = null;

    // emit close event
    this.emit('close', reason, desc);

    // clean buffers after, so users can still
    // grab the buffers on `close` event
    self.writeBuffer = [];
    self.prevBufferLen = 0;
  }
};

/**
 * Filters upgrades, returning only those matching client transports.
 *
 * @param {Array} server upgrades
 * @api private
 *
 */

Socket.prototype.filterUpgrades = function (upgrades) {
  var filteredUpgrades = [];
  for (var i = 0, j = upgrades.length; i<j; i++) {
    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
  }
  return filteredUpgrades;
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./transport":23,"./transports":24,"component-emitter":30,"debug":17,"engine.io-parser":32,"indexof":47,"parsejson":42,"parseqs":43,"parseuri":48}],23:[function(require,module,exports){
/**
 * Module dependencies.
 */

var parser = require('engine.io-parser');
var Emitter = require('component-emitter');

/**
 * Module exports.
 */

module.exports = Transport;

/**
 * Transport abstract constructor.
 *
 * @param {Object} options.
 * @api private
 */

function Transport (opts) {
  this.path = opts.path;
  this.hostname = opts.hostname;
  this.port = opts.port;
  this.secure = opts.secure;
  this.query = opts.query;
  this.timestampParam = opts.timestampParam;
  this.timestampRequests = opts.timestampRequests;
  this.readyState = '';
  this.agent = opts.agent || false;
  this.socket = opts.socket;
  this.enablesXDR = opts.enablesXDR;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;
}

/**
 * Mix in `Emitter`.
 */

Emitter(Transport.prototype);

/**
 * Emits an error.
 *
 * @param {String} str
 * @return {Transport} for chaining
 * @api public
 */

Transport.prototype.onError = function (msg, desc) {
  var err = new Error(msg);
  err.type = 'TransportError';
  err.description = desc;
  this.emit('error', err);
  return this;
};

/**
 * Opens the transport.
 *
 * @api public
 */

Transport.prototype.open = function () {
  if ('closed' == this.readyState || '' == this.readyState) {
    this.readyState = 'opening';
    this.doOpen();
  }

  return this;
};

/**
 * Closes the transport.
 *
 * @api private
 */

Transport.prototype.close = function () {
  if ('opening' == this.readyState || 'open' == this.readyState) {
    this.doClose();
    this.onClose();
  }

  return this;
};

/**
 * Sends multiple packets.
 *
 * @param {Array} packets
 * @api private
 */

Transport.prototype.send = function(packets){
  if ('open' == this.readyState) {
    this.write(packets);
  } else {
    throw new Error('Transport not open');
  }
};

/**
 * Called upon open
 *
 * @api private
 */

Transport.prototype.onOpen = function () {
  this.readyState = 'open';
  this.writable = true;
  this.emit('open');
};

/**
 * Called with data.
 *
 * @param {String} data
 * @api private
 */

Transport.prototype.onData = function(data){
  var packet = parser.decodePacket(data, this.socket.binaryType);
  this.onPacket(packet);
};

/**
 * Called with a decoded packet.
 */

Transport.prototype.onPacket = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon close.
 *
 * @api private
 */

Transport.prototype.onClose = function () {
  this.readyState = 'closed';
  this.emit('close');
};

},{"component-emitter":30,"engine.io-parser":32}],24:[function(require,module,exports){
(function (global){
/**
 * Module dependencies
 */

var XMLHttpRequest = require('xmlhttprequest-ssl');
var XHR = require('./polling-xhr');
var JSONP = require('./polling-jsonp');
var websocket = require('./websocket');

/**
 * Export transports.
 */

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling(opts){
  var xhr;
  var xd = false;
  var xs = false;
  var jsonp = false !== opts.jsonp;

  if (global.location) {
    var isSSL = 'https:' == location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname != location.hostname || port != opts.port;
    xs = opts.secure != isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ('open' in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error('JSONP disabled');
    return new JSONP(opts);
  }
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./polling-jsonp":25,"./polling-xhr":26,"./websocket":28,"xmlhttprequest-ssl":29}],25:[function(require,module,exports){
(function (global){

/**
 * Module requirements.
 */

var Polling = require('./polling');
var inherit = require('component-inherit');

/**
 * Module exports.
 */

module.exports = JSONPPolling;

/**
 * Cached regular expressions.
 */

var rNewline = /\n/g;
var rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

var callbacks;

/**
 * Callbacks count.
 */

var index = 0;

/**
 * Noop.
 */

function empty () { }

/**
 * JSONP Polling constructor.
 *
 * @param {Object} opts.
 * @api public
 */

function JSONPPolling (opts) {
  Polling.call(this, opts);

  this.query = this.query || {};

  // define global callbacks array if not present
  // we do this here (lazily) to avoid unneeded global pollution
  if (!callbacks) {
    // we need to consider multiple engines in the same page
    if (!global.___eio) global.___eio = [];
    callbacks = global.___eio;
  }

  // callback identifier
  this.index = callbacks.length;

  // add callback to jsonp global
  var self = this;
  callbacks.push(function (msg) {
    self.onData(msg);
  });

  // append to query string
  this.query.j = this.index;

  // prevent spurious errors from being emitted when the window is unloaded
  if (global.document && global.addEventListener) {
    global.addEventListener('beforeunload', function () {
      if (self.script) self.script.onerror = empty;
    }, false);
  }
}

/**
 * Inherits from Polling.
 */

inherit(JSONPPolling, Polling);

/*
 * JSONP only supports binary as base64 encoded strings
 */

JSONPPolling.prototype.supportsBinary = false;

/**
 * Closes the socket.
 *
 * @api private
 */

JSONPPolling.prototype.doClose = function () {
  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  if (this.form) {
    this.form.parentNode.removeChild(this.form);
    this.form = null;
    this.iframe = null;
  }

  Polling.prototype.doClose.call(this);
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

JSONPPolling.prototype.doPoll = function () {
  var self = this;
  var script = document.createElement('script');

  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  script.async = true;
  script.src = this.uri();
  script.onerror = function(e){
    self.onError('jsonp poll error',e);
  };

  var insertAt = document.getElementsByTagName('script')[0];
  if (insertAt) {
    insertAt.parentNode.insertBefore(script, insertAt);
  }
  else {
    (document.head || document.body).appendChild(script);
  }
  this.script = script;

  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);
  
  if (isUAgecko) {
    setTimeout(function () {
      var iframe = document.createElement('iframe');
      document.body.appendChild(iframe);
      document.body.removeChild(iframe);
    }, 100);
  }
};

/**
 * Writes with a hidden iframe.
 *
 * @param {String} data to send
 * @param {Function} called upon flush.
 * @api private
 */

JSONPPolling.prototype.doWrite = function (data, fn) {
  var self = this;

  if (!this.form) {
    var form = document.createElement('form');
    var area = document.createElement('textarea');
    var id = this.iframeId = 'eio_iframe_' + this.index;
    var iframe;

    form.className = 'socketio';
    form.style.position = 'absolute';
    form.style.top = '-1000px';
    form.style.left = '-1000px';
    form.target = id;
    form.method = 'POST';
    form.setAttribute('accept-charset', 'utf-8');
    area.name = 'd';
    form.appendChild(area);
    document.body.appendChild(form);

    this.form = form;
    this.area = area;
  }

  this.form.action = this.uri();

  function complete () {
    initIframe();
    fn();
  }

  function initIframe () {
    if (self.iframe) {
      try {
        self.form.removeChild(self.iframe);
      } catch (e) {
        self.onError('jsonp polling iframe removal error', e);
      }
    }

    try {
      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
      var html = '<iframe src="javascript:0" name="'+ self.iframeId +'">';
      iframe = document.createElement(html);
    } catch (e) {
      iframe = document.createElement('iframe');
      iframe.name = self.iframeId;
      iframe.src = 'javascript:0';
    }

    iframe.id = self.iframeId;

    self.form.appendChild(iframe);
    self.iframe = iframe;
  }

  initIframe();

  // escape \n to prevent it from being converted into \r\n by some UAs
  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
  data = data.replace(rEscapedNewline, '\\\n');
  this.area.value = data.replace(rNewline, '\\n');

  try {
    this.form.submit();
  } catch(e) {}

  if (this.iframe.attachEvent) {
    this.iframe.onreadystatechange = function(){
      if (self.iframe.readyState == 'complete') {
        complete();
      }
    };
  } else {
    this.iframe.onload = complete;
  }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./polling":27,"component-inherit":31}],26:[function(require,module,exports){
(function (global){
/**
 * Module requirements.
 */

var XMLHttpRequest = require('xmlhttprequest-ssl');
var Polling = require('./polling');
var Emitter = require('component-emitter');
var inherit = require('component-inherit');
var debug = require('debug')('engine.io-client:polling-xhr');

/**
 * Module exports.
 */

module.exports = XHR;
module.exports.Request = Request;

/**
 * Empty function
 */

function empty(){}

/**
 * XHR Polling constructor.
 *
 * @param {Object} opts
 * @api public
 */

function XHR(opts){
  Polling.call(this, opts);

  if (global.location) {
    var isSSL = 'https:' == location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    this.xd = opts.hostname != global.location.hostname ||
      port != opts.port;
    this.xs = opts.secure != isSSL;
  } else {
    this.extraHeaders = opts.extraHeaders;
  }
}

/**
 * Inherits from Polling.
 */

inherit(XHR, Polling);

/**
 * XHR supports binary
 */

XHR.prototype.supportsBinary = true;

/**
 * Creates a request.
 *
 * @param {String} method
 * @api private
 */

XHR.prototype.request = function(opts){
  opts = opts || {};
  opts.uri = this.uri();
  opts.xd = this.xd;
  opts.xs = this.xs;
  opts.agent = this.agent || false;
  opts.supportsBinary = this.supportsBinary;
  opts.enablesXDR = this.enablesXDR;

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  // other options for Node.js client
  opts.extraHeaders = this.extraHeaders;

  return new Request(opts);
};

/**
 * Sends data.
 *
 * @param {String} data to send.
 * @param {Function} called upon flush.
 * @api private
 */

XHR.prototype.doWrite = function(data, fn){
  var isBinary = typeof data !== 'string' && data !== undefined;
  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
  var self = this;
  req.on('success', fn);
  req.on('error', function(err){
    self.onError('xhr post error', err);
  });
  this.sendXhr = req;
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

XHR.prototype.doPoll = function(){
  debug('xhr poll');
  var req = this.request();
  var self = this;
  req.on('data', function(data){
    self.onData(data);
  });
  req.on('error', function(err){
    self.onError('xhr poll error', err);
  });
  this.pollXhr = req;
};

/**
 * Request constructor
 *
 * @param {Object} options
 * @api public
 */

function Request(opts){
  this.method = opts.method || 'GET';
  this.uri = opts.uri;
  this.xd = !!opts.xd;
  this.xs = !!opts.xs;
  this.async = false !== opts.async;
  this.data = undefined != opts.data ? opts.data : null;
  this.agent = opts.agent;
  this.isBinary = opts.isBinary;
  this.supportsBinary = opts.supportsBinary;
  this.enablesXDR = opts.enablesXDR;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;

  this.create();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Creates the XHR object and sends the request.
 *
 * @api private
 */

Request.prototype.create = function(){
  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  var xhr = this.xhr = new XMLHttpRequest(opts);
  var self = this;

  try {
    debug('xhr open %s: %s', this.method, this.uri);
    xhr.open(this.method, this.uri, this.async);
    try {
      if (this.extraHeaders) {
        xhr.setDisableHeaderCheck(true);
        for (var i in this.extraHeaders) {
          if (this.extraHeaders.hasOwnProperty(i)) {
            xhr.setRequestHeader(i, this.extraHeaders[i]);
          }
        }
      }
    } catch (e) {}
    if (this.supportsBinary) {
      // This has to be done after open because Firefox is stupid
      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension
      xhr.responseType = 'arraybuffer';
    }

    if ('POST' == this.method) {
      try {
        if (this.isBinary) {
          xhr.setRequestHeader('Content-type', 'application/octet-stream');
        } else {
          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
        }
      } catch (e) {}
    }

    // ie6 check
    if ('withCredentials' in xhr) {
      xhr.withCredentials = true;
    }

    if (this.hasXDR()) {
      xhr.onload = function(){
        self.onLoad();
      };
      xhr.onerror = function(){
        self.onError(xhr.responseText);
      };
    } else {
      xhr.onreadystatechange = function(){
        if (4 != xhr.readyState) return;
        if (200 == xhr.status || 1223 == xhr.status) {
          self.onLoad();
        } else {
          // make sure the `error` event handler that's user-set
          // does not throw in the same tick and gets caught here
          setTimeout(function(){
            self.onError(xhr.status);
          }, 0);
        }
      };
    }

    debug('xhr data %s', this.data);
    xhr.send(this.data);
  } catch (e) {
    // Need to defer since .create() is called directly fhrom the constructor
    // and thus the 'error' event can only be only bound *after* this exception
    // occurs.  Therefore, also, we cannot throw here at all.
    setTimeout(function() {
      self.onError(e);
    }, 0);
    return;
  }

  if (global.document) {
    this.index = Request.requestsCount++;
    Request.requests[this.index] = this;
  }
};

/**
 * Called upon successful response.
 *
 * @api private
 */

Request.prototype.onSuccess = function(){
  this.emit('success');
  this.cleanup();
};

/**
 * Called if we have data.
 *
 * @api private
 */

Request.prototype.onData = function(data){
  this.emit('data', data);
  this.onSuccess();
};

/**
 * Called upon error.
 *
 * @api private
 */

Request.prototype.onError = function(err){
  this.emit('error', err);
  this.cleanup(true);
};

/**
 * Cleans up house.
 *
 * @api private
 */

Request.prototype.cleanup = function(fromError){
  if ('undefined' == typeof this.xhr || null === this.xhr) {
    return;
  }
  // xmlhttprequest
  if (this.hasXDR()) {
    this.xhr.onload = this.xhr.onerror = empty;
  } else {
    this.xhr.onreadystatechange = empty;
  }

  if (fromError) {
    try {
      this.xhr.abort();
    } catch(e) {}
  }

  if (global.document) {
    delete Request.requests[this.index];
  }

  this.xhr = null;
};

/**
 * Called upon load.
 *
 * @api private
 */

Request.prototype.onLoad = function(){
  var data;
  try {
    var contentType;
    try {
      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];
    } catch (e) {}
    if (contentType === 'application/octet-stream') {
      data = this.xhr.response;
    } else {
      if (!this.supportsBinary) {
        data = this.xhr.responseText;
      } else {
        try {
          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));
        } catch (e) {
          var ui8Arr = new Uint8Array(this.xhr.response);
          var dataArray = [];
          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {
            dataArray.push(ui8Arr[idx]);
          }

          data = String.fromCharCode.apply(null, dataArray);
        }
      }
    }
  } catch (e) {
    this.onError(e);
  }
  if (null != data) {
    this.onData(data);
  }
};

/**
 * Check if it has XDomainRequest.
 *
 * @api private
 */

Request.prototype.hasXDR = function(){
  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;
};

/**
 * Aborts the request.
 *
 * @api public
 */

Request.prototype.abort = function(){
  this.cleanup();
};

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

if (global.document) {
  Request.requestsCount = 0;
  Request.requests = {};
  if (global.attachEvent) {
    global.attachEvent('onunload', unloadHandler);
  } else if (global.addEventListener) {
    global.addEventListener('beforeunload', unloadHandler, false);
  }
}

function unloadHandler() {
  for (var i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./polling":27,"component-emitter":30,"component-inherit":31,"debug":17,"xmlhttprequest-ssl":29}],27:[function(require,module,exports){
/**
 * Module dependencies.
 */

var Transport = require('../transport');
var parseqs = require('parseqs');
var parser = require('engine.io-parser');
var inherit = require('component-inherit');
var yeast = require('yeast');
var debug = require('debug')('engine.io-client:polling');

/**
 * Module exports.
 */

module.exports = Polling;

/**
 * Is XHR2 supported?
 */

var hasXHR2 = (function() {
  var XMLHttpRequest = require('xmlhttprequest-ssl');
  var xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

/**
 * Polling interface.
 *
 * @param {Object} opts
 * @api private
 */

function Polling(opts){
  var forceBase64 = (opts && opts.forceBase64);
  if (!hasXHR2 || forceBase64) {
    this.supportsBinary = false;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(Polling, Transport);

/**
 * Transport name.
 */

Polling.prototype.name = 'polling';

/**
 * Opens the socket (triggers polling). We write a PING message to determine
 * when the transport is open.
 *
 * @api private
 */

Polling.prototype.doOpen = function(){
  this.poll();
};

/**
 * Pauses polling.
 *
 * @param {Function} callback upon buffers are flushed and transport is paused
 * @api private
 */

Polling.prototype.pause = function(onPause){
  var pending = 0;
  var self = this;

  this.readyState = 'pausing';

  function pause(){
    debug('paused');
    self.readyState = 'paused';
    onPause();
  }

  if (this.polling || !this.writable) {
    var total = 0;

    if (this.polling) {
      debug('we are currently polling - waiting to pause');
      total++;
      this.once('pollComplete', function(){
        debug('pre-pause polling complete');
        --total || pause();
      });
    }

    if (!this.writable) {
      debug('we are currently writing - waiting to pause');
      total++;
      this.once('drain', function(){
        debug('pre-pause writing complete');
        --total || pause();
      });
    }
  } else {
    pause();
  }
};

/**
 * Starts polling cycle.
 *
 * @api public
 */

Polling.prototype.poll = function(){
  debug('polling');
  this.polling = true;
  this.doPoll();
  this.emit('poll');
};

/**
 * Overloads onData to detect payloads.
 *
 * @api private
 */

Polling.prototype.onData = function(data){
  var self = this;
  debug('polling got data %s', data);
  var callback = function(packet, index, total) {
    // if its the first message we consider the transport open
    if ('opening' == self.readyState) {
      self.onOpen();
    }

    // if its a close packet, we close the ongoing requests
    if ('close' == packet.type) {
      self.onClose();
      return false;
    }

    // otherwise bypass onData and handle the message
    self.onPacket(packet);
  };

  // decode payload
  parser.decodePayload(data, this.socket.binaryType, callback);

  // if an event did not trigger closing
  if ('closed' != this.readyState) {
    // if we got data we're not polling
    this.polling = false;
    this.emit('pollComplete');

    if ('open' == this.readyState) {
      this.poll();
    } else {
      debug('ignoring poll - transport state "%s"', this.readyState);
    }
  }
};

/**
 * For polling, send a close packet.
 *
 * @api private
 */

Polling.prototype.doClose = function(){
  var self = this;

  function close(){
    debug('writing close packet');
    self.write([{ type: 'close' }]);
  }

  if ('open' == this.readyState) {
    debug('transport open - closing');
    close();
  } else {
    // in case we're trying to close while
    // handshaking is in progress (GH-164)
    debug('transport not open - deferring close');
    this.once('open', close);
  }
};

/**
 * Writes a packets payload.
 *
 * @param {Array} data packets
 * @param {Function} drain callback
 * @api private
 */

Polling.prototype.write = function(packets){
  var self = this;
  this.writable = false;
  var callbackfn = function() {
    self.writable = true;
    self.emit('drain');
  };

  var self = this;
  parser.encodePayload(packets, this.supportsBinary, function(data) {
    self.doWrite(data, callbackfn);
  });
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

Polling.prototype.uri = function(){
  var query = this.query || {};
  var schema = this.secure ? 'https' : 'http';
  var port = '';

  // cache busting is forced
  if (false !== this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  if (!this.supportsBinary && !query.sid) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // avoid port if default for schema
  if (this.port && (('https' == schema && this.port != 443) ||
     ('http' == schema && this.port != 80))) {
    port = ':' + this.port;
  }

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

},{"../transport":23,"component-inherit":31,"debug":17,"engine.io-parser":32,"parseqs":43,"xmlhttprequest-ssl":29,"yeast":44}],28:[function(require,module,exports){
(function (global){
/**
 * Module dependencies.
 */

var Transport = require('../transport');
var parser = require('engine.io-parser');
var parseqs = require('parseqs');
var inherit = require('component-inherit');
var yeast = require('yeast');
var debug = require('debug')('engine.io-client:websocket');
var BrowserWebSocket = global.WebSocket || global.MozWebSocket;

/**
 * Get either the `WebSocket` or `MozWebSocket` globals
 * in the browser or try to resolve WebSocket-compatible
 * interface exposed by `ws` for Node-like environment.
 */

var WebSocket = BrowserWebSocket;
if (!WebSocket && typeof window === 'undefined') {
  try {
    WebSocket = require('ws');
  } catch (e) { }
}

/**
 * Module exports.
 */

module.exports = WS;

/**
 * WebSocket transport constructor.
 *
 * @api {Object} connection options
 * @api public
 */

function WS(opts){
  var forceBase64 = (opts && opts.forceBase64);
  if (forceBase64) {
    this.supportsBinary = false;
  }
  this.perMessageDeflate = opts.perMessageDeflate;
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(WS, Transport);

/**
 * Transport name.
 *
 * @api public
 */

WS.prototype.name = 'websocket';

/*
 * WebSockets support binary
 */

WS.prototype.supportsBinary = true;

/**
 * Opens socket.
 *
 * @api private
 */

WS.prototype.doOpen = function(){
  if (!this.check()) {
    // let probe timeout
    return;
  }

  var self = this;
  var uri = this.uri();
  var protocols = void(0);
  var opts = {
    agent: this.agent,
    perMessageDeflate: this.perMessageDeflate
  };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  if (this.extraHeaders) {
    opts.headers = this.extraHeaders;
  }

  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);

  if (this.ws.binaryType === undefined) {
    this.supportsBinary = false;
  }

  if (this.ws.supports && this.ws.supports.binary) {
    this.supportsBinary = true;
    this.ws.binaryType = 'buffer';
  } else {
    this.ws.binaryType = 'arraybuffer';
  }

  this.addEventListeners();
};

/**
 * Adds event listeners to the socket
 *
 * @api private
 */

WS.prototype.addEventListeners = function(){
  var self = this;

  this.ws.onopen = function(){
    self.onOpen();
  };
  this.ws.onclose = function(){
    self.onClose();
  };
  this.ws.onmessage = function(ev){
    self.onData(ev.data);
  };
  this.ws.onerror = function(e){
    self.onError('websocket error', e);
  };
};

/**
 * Override `onData` to use a timer on iOS.
 * See: https://gist.github.com/mloughran/2052006
 *
 * @api private
 */

if ('undefined' != typeof navigator
  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {
  WS.prototype.onData = function(data){
    var self = this;
    setTimeout(function(){
      Transport.prototype.onData.call(self, data);
    }, 0);
  };
}

/**
 * Writes data to socket.
 *
 * @param {Array} array of packets.
 * @api private
 */

WS.prototype.write = function(packets){
  var self = this;
  this.writable = false;

  // encodePacket efficient as it uses WS framing
  // no need for encodePayload
  var total = packets.length;
  for (var i = 0, l = total; i < l; i++) {
    (function(packet) {
      parser.encodePacket(packet, self.supportsBinary, function(data) {
        if (!BrowserWebSocket) {
          // always create a new object (GH-437)
          var opts = {};
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (self.perMessageDeflate) {
            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;
            if (len < self.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        //Sometimes the websocket has already been closed but the browser didn't
        //have a chance of informing us about it yet, in that case send will
        //throw an error
        try {
          if (BrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            self.ws.send(data);
          } else {
            self.ws.send(data, opts);
          }
        } catch (e){
          debug('websocket closed before onclose event');
        }

        --total || done();
      });
    })(packets[i]);
  }

  function done(){
    self.emit('flush');

    // fake drain
    // defer to next tick to allow Socket to clear writeBuffer
    setTimeout(function(){
      self.writable = true;
      self.emit('drain');
    }, 0);
  }
};

/**
 * Called upon close
 *
 * @api private
 */

WS.prototype.onClose = function(){
  Transport.prototype.onClose.call(this);
};

/**
 * Closes socket.
 *
 * @api private
 */

WS.prototype.doClose = function(){
  if (typeof this.ws !== 'undefined') {
    this.ws.close();
  }
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

WS.prototype.uri = function(){
  var query = this.query || {};
  var schema = this.secure ? 'wss' : 'ws';
  var port = '';

  // avoid port if default for schema
  if (this.port && (('wss' == schema && this.port != 443)
    || ('ws' == schema && this.port != 80))) {
    port = ':' + this.port;
  }

  // append timestamp to URI
  if (this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  // communicate binary support capabilities
  if (!this.supportsBinary) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

/**
 * Feature detection for WebSocket.
 *
 * @return {Boolean} whether this transport is available.
 * @api public
 */

WS.prototype.check = function(){
  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../transport":23,"component-inherit":31,"debug":17,"engine.io-parser":32,"parseqs":43,"ws":2,"yeast":44}],29:[function(require,module,exports){
// browser shim for xmlhttprequest module
var hasCORS = require('has-cors');

module.exports = function(opts) {
  var xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  var xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  var enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) { }

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) { }

  if (!xdomain) {
    try {
      return new ActiveXObject('Microsoft.XMLHTTP');
    } catch(e) { }
  }
}

},{"has-cors":41}],30:[function(require,module,exports){

/**
 * Expose `Emitter`.
 */

module.exports = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  var self = this;
  this._callbacks = this._callbacks || {};

  function on() {
    self.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks[event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks[event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks[event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks[event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

},{}],31:[function(require,module,exports){

module.exports = function(a, b){
  var fn = function(){};
  fn.prototype = b.prototype;
  a.prototype = new fn;
  a.prototype.constructor = a;
};
},{}],32:[function(require,module,exports){
(function (global){
/**
 * Module dependencies.
 */

var keys = require('./keys');
var hasBinary = require('has-binary');
var sliceBuffer = require('arraybuffer.slice');
var base64encoder = require('base64-arraybuffer');
var after = require('after');
var utf8 = require('utf8');

/**
 * Check if we are running an android browser. That requires us to use
 * ArrayBuffer with polling transports...
 *
 * http://ghinda.net/jpeg-blob-ajax-android/
 */

var isAndroid = navigator.userAgent.match(/Android/i);

/**
 * Check if we are running in PhantomJS.
 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
 * https://github.com/ariya/phantomjs/issues/11395
 * @type boolean
 */
var isPhantomJS = /PhantomJS/i.test(navigator.userAgent);

/**
 * When true, avoids using Blobs to encode payloads.
 * @type boolean
 */
var dontSendBlobs = isAndroid || isPhantomJS;

/**
 * Current protocol version.
 */

exports.protocol = 3;

/**
 * Packet types.
 */

var packets = exports.packets = {
    open:     0    // non-ws
  , close:    1    // non-ws
  , ping:     2
  , pong:     3
  , message:  4
  , upgrade:  5
  , noop:     6
};

var packetslist = keys(packets);

/**
 * Premade error packet.
 */

var err = { type: 'error', data: 'parser error' };

/**
 * Create a blob api even for blob builder when vendor prefixes exist
 */

var Blob = require('blob');

/**
 * Encodes a packet.
 *
 *     <packet type id> [ <data> ]
 *
 * Example:
 *
 *     5hello world
 *     3
 *     4
 *
 * Binary is encoded in an identical principle
 *
 * @api private
 */

exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
  if ('function' == typeof supportsBinary) {
    callback = supportsBinary;
    supportsBinary = false;
  }

  if ('function' == typeof utf8encode) {
    callback = utf8encode;
    utf8encode = null;
  }

  var data = (packet.data === undefined)
    ? undefined
    : packet.data.buffer || packet.data;

  if (global.ArrayBuffer && data instanceof ArrayBuffer) {
    return encodeArrayBuffer(packet, supportsBinary, callback);
  } else if (Blob && data instanceof global.Blob) {
    return encodeBlob(packet, supportsBinary, callback);
  }

  // might be an object with { base64: true, data: dataAsBase64String }
  if (data && data.base64) {
    return encodeBase64Object(packet, callback);
  }

  // Sending data as a utf-8 string
  var encoded = packets[packet.type];

  // data fragment is optional
  if (undefined !== packet.data) {
    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);
  }

  return callback('' + encoded);

};

function encodeBase64Object(packet, callback) {
  // packet data is an object { base64: true, data: dataAsBase64String }
  var message = 'b' + exports.packets[packet.type] + packet.data.data;
  return callback(message);
}

/**
 * Encode packet helpers for binary types
 */

function encodeArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var data = packet.data;
  var contentArray = new Uint8Array(data);
  var resultBuffer = new Uint8Array(1 + data.byteLength);

  resultBuffer[0] = packets[packet.type];
  for (var i = 0; i < contentArray.length; i++) {
    resultBuffer[i+1] = contentArray[i];
  }

  return callback(resultBuffer.buffer);
}

function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var fr = new FileReader();
  fr.onload = function() {
    packet.data = fr.result;
    exports.encodePacket(packet, supportsBinary, true, callback);
  };
  return fr.readAsArrayBuffer(packet.data);
}

function encodeBlob(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  if (dontSendBlobs) {
    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
  }

  var length = new Uint8Array(1);
  length[0] = packets[packet.type];
  var blob = new Blob([length.buffer, packet.data]);

  return callback(blob);
}

/**
 * Encodes a packet with binary data in a base64 string
 *
 * @param {Object} packet, has `type` and `data`
 * @return {String} base64 encoded message
 */

exports.encodeBase64Packet = function(packet, callback) {
  var message = 'b' + exports.packets[packet.type];
  if (Blob && packet.data instanceof global.Blob) {
    var fr = new FileReader();
    fr.onload = function() {
      var b64 = fr.result.split(',')[1];
      callback(message + b64);
    };
    return fr.readAsDataURL(packet.data);
  }

  var b64data;
  try {
    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
  } catch (e) {
    // iPhone Safari doesn't let you apply with typed arrays
    var typed = new Uint8Array(packet.data);
    var basic = new Array(typed.length);
    for (var i = 0; i < typed.length; i++) {
      basic[i] = typed[i];
    }
    b64data = String.fromCharCode.apply(null, basic);
  }
  message += global.btoa(b64data);
  return callback(message);
};

/**
 * Decodes a packet. Changes format to Blob if requested.
 *
 * @return {Object} with `type` and `data` (if any)
 * @api private
 */

exports.decodePacket = function (data, binaryType, utf8decode) {
  // String data
  if (typeof data == 'string' || data === undefined) {
    if (data.charAt(0) == 'b') {
      return exports.decodeBase64Packet(data.substr(1), binaryType);
    }

    if (utf8decode) {
      try {
        data = utf8.decode(data);
      } catch (e) {
        return err;
      }
    }
    var type = data.charAt(0);

    if (Number(type) != type || !packetslist[type]) {
      return err;
    }

    if (data.length > 1) {
      return { type: packetslist[type], data: data.substring(1) };
    } else {
      return { type: packetslist[type] };
    }
  }

  var asArray = new Uint8Array(data);
  var type = asArray[0];
  var rest = sliceBuffer(data, 1);
  if (Blob && binaryType === 'blob') {
    rest = new Blob([rest]);
  }
  return { type: packetslist[type], data: rest };
};

/**
 * Decodes a packet encoded in a base64 string
 *
 * @param {String} base64 encoded message
 * @return {Object} with `type` and `data` (if any)
 */

exports.decodeBase64Packet = function(msg, binaryType) {
  var type = packetslist[msg.charAt(0)];
  if (!global.ArrayBuffer) {
    return { type: type, data: { base64: true, data: msg.substr(1) } };
  }

  var data = base64encoder.decode(msg.substr(1));

  if (binaryType === 'blob' && Blob) {
    data = new Blob([data]);
  }

  return { type: type, data: data };
};

/**
 * Encodes multiple messages (payload).
 *
 *     <length>:data
 *
 * Example:
 *
 *     11:hello world2:hi
 *
 * If any contents are binary, they will be encoded as base64 strings. Base64
 * encoded strings are marked with a b before the length specifier
 *
 * @param {Array} packets
 * @api private
 */

exports.encodePayload = function (packets, supportsBinary, callback) {
  if (typeof supportsBinary == 'function') {
    callback = supportsBinary;
    supportsBinary = null;
  }

  var isBinary = hasBinary(packets);

  if (supportsBinary && isBinary) {
    if (Blob && !dontSendBlobs) {
      return exports.encodePayloadAsBlob(packets, callback);
    }

    return exports.encodePayloadAsArrayBuffer(packets, callback);
  }

  if (!packets.length) {
    return callback('0:');
  }

  function setLengthHeader(message) {
    return message.length + ':' + message;
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {
      doneCallback(null, setLengthHeader(message));
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(results.join(''));
  });
};

/**
 * Async array map using after
 */

function map(ary, each, done) {
  var result = new Array(ary.length);
  var next = after(ary.length, done);

  var eachWithIndex = function(i, el, cb) {
    each(el, function(error, msg) {
      result[i] = msg;
      cb(error, result);
    });
  };

  for (var i = 0; i < ary.length; i++) {
    eachWithIndex(i, ary[i], next);
  }
}

/*
 * Decodes data when a payload is maybe expected. Possible binary contents are
 * decoded from their base64 representation
 *
 * @param {String} data, callback method
 * @api public
 */

exports.decodePayload = function (data, binaryType, callback) {
  if (typeof data != 'string') {
    return exports.decodePayloadAsBinary(data, binaryType, callback);
  }

  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var packet;
  if (data == '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

  var length = ''
    , n, msg;

  for (var i = 0, l = data.length; i < l; i++) {
    var chr = data.charAt(i);

    if (':' != chr) {
      length += chr;
    } else {
      if ('' == length || (length != (n = Number(length)))) {
        // parser error - ignoring payload
        return callback(err, 0, 1);
      }

      msg = data.substr(i + 1, n);

      if (length != msg.length) {
        // parser error - ignoring payload
        return callback(err, 0, 1);
      }

      if (msg.length) {
        packet = exports.decodePacket(msg, binaryType, true);

        if (err.type == packet.type && err.data == packet.data) {
          // parser error in individual packet - ignoring payload
          return callback(err, 0, 1);
        }

        var ret = callback(packet, i + n, l);
        if (false === ret) return;
      }

      // advance cursor
      i += n;
      length = '';
    }
  }

  if (length != '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

};

/**
 * Encodes multiple messages (payload) as binary.
 *
 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
 * 255><data>
 *
 * Example:
 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
 *
 * @param {Array} packets
 * @return {ArrayBuffer} encoded payload
 * @api private
 */

exports.encodePayloadAsArrayBuffer = function(packets, callback) {
  if (!packets.length) {
    return callback(new ArrayBuffer(0));
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(data) {
      return doneCallback(null, data);
    });
  }

  map(packets, encodeOne, function(err, encodedPackets) {
    var totalLength = encodedPackets.reduce(function(acc, p) {
      var len;
      if (typeof p === 'string'){
        len = p.length;
      } else {
        len = p.byteLength;
      }
      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
    }, 0);

    var resultArray = new Uint8Array(totalLength);

    var bufferIndex = 0;
    encodedPackets.forEach(function(p) {
      var isString = typeof p === 'string';
      var ab = p;
      if (isString) {
        var view = new Uint8Array(p.length);
        for (var i = 0; i < p.length; i++) {
          view[i] = p.charCodeAt(i);
        }
        ab = view.buffer;
      }

      if (isString) { // not true binary
        resultArray[bufferIndex++] = 0;
      } else { // true binary
        resultArray[bufferIndex++] = 1;
      }

      var lenStr = ab.byteLength.toString();
      for (var i = 0; i < lenStr.length; i++) {
        resultArray[bufferIndex++] = parseInt(lenStr[i]);
      }
      resultArray[bufferIndex++] = 255;

      var view = new Uint8Array(ab);
      for (var i = 0; i < view.length; i++) {
        resultArray[bufferIndex++] = view[i];
      }
    });

    return callback(resultArray.buffer);
  });
};

/**
 * Encode as Blob
 */

exports.encodePayloadAsBlob = function(packets, callback) {
  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(encoded) {
      var binaryIdentifier = new Uint8Array(1);
      binaryIdentifier[0] = 1;
      if (typeof encoded === 'string') {
        var view = new Uint8Array(encoded.length);
        for (var i = 0; i < encoded.length; i++) {
          view[i] = encoded.charCodeAt(i);
        }
        encoded = view.buffer;
        binaryIdentifier[0] = 0;
      }

      var len = (encoded instanceof ArrayBuffer)
        ? encoded.byteLength
        : encoded.size;

      var lenStr = len.toString();
      var lengthAry = new Uint8Array(lenStr.length + 1);
      for (var i = 0; i < lenStr.length; i++) {
        lengthAry[i] = parseInt(lenStr[i]);
      }
      lengthAry[lenStr.length] = 255;

      if (Blob) {
        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
        doneCallback(null, blob);
      }
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(new Blob(results));
  });
};

/*
 * Decodes data when a payload is maybe expected. Strings are decoded by
 * interpreting each byte as a key code for entries marked to start with 0. See
 * description of encodePayloadAsBinary
 *
 * @param {ArrayBuffer} data, callback method
 * @api public
 */

exports.decodePayloadAsBinary = function (data, binaryType, callback) {
  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var bufferTail = data;
  var buffers = [];

  var numberTooLong = false;
  while (bufferTail.byteLength > 0) {
    var tailArray = new Uint8Array(bufferTail);
    var isString = tailArray[0] === 0;
    var msgLength = '';

    for (var i = 1; ; i++) {
      if (tailArray[i] == 255) break;

      if (msgLength.length > 310) {
        numberTooLong = true;
        break;
      }

      msgLength += tailArray[i];
    }

    if(numberTooLong) return callback(err, 0, 1);

    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
    msgLength = parseInt(msgLength);

    var msg = sliceBuffer(bufferTail, 0, msgLength);
    if (isString) {
      try {
        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
      } catch (e) {
        // iPhone Safari doesn't let you apply to typed arrays
        var typed = new Uint8Array(msg);
        msg = '';
        for (var i = 0; i < typed.length; i++) {
          msg += String.fromCharCode(typed[i]);
        }
      }
    }

    buffers.push(msg);
    bufferTail = sliceBuffer(bufferTail, msgLength);
  }

  var total = buffers.length;
  buffers.forEach(function(buffer, i) {
    callback(exports.decodePacket(buffer, binaryType, true), i, total);
  });
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./keys":33,"after":34,"arraybuffer.slice":35,"base64-arraybuffer":36,"blob":37,"has-binary":38,"utf8":40}],33:[function(require,module,exports){

/**
 * Gets the keys for an object.
 *
 * @return {Array} keys
 * @api private
 */

module.exports = Object.keys || function keys (obj){
  var arr = [];
  var has = Object.prototype.hasOwnProperty;

  for (var i in obj) {
    if (has.call(obj, i)) {
      arr.push(i);
    }
  }
  return arr;
};

},{}],34:[function(require,module,exports){
module.exports = after

function after(count, callback, err_cb) {
    var bail = false
    err_cb = err_cb || noop
    proxy.count = count

    return (count === 0) ? callback() : proxy

    function proxy(err, result) {
        if (proxy.count <= 0) {
            throw new Error('after called too many times')
        }
        --proxy.count

        // after first error, rest are passed to err_cb
        if (err) {
            bail = true
            callback(err)
            // future error callbacks will go to error handler
            callback = err_cb
        } else if (proxy.count === 0 && !bail) {
            callback(null, result)
        }
    }
}

function noop() {}

},{}],35:[function(require,module,exports){
/**
 * An abstraction for slicing an arraybuffer even when
 * ArrayBuffer.prototype.slice is not supported
 *
 * @api public
 */

module.exports = function(arraybuffer, start, end) {
  var bytes = arraybuffer.byteLength;
  start = start || 0;
  end = end || bytes;

  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }

  if (start < 0) { start += bytes; }
  if (end < 0) { end += bytes; }
  if (end > bytes) { end = bytes; }

  if (start >= bytes || start >= end || bytes === 0) {
    return new ArrayBuffer(0);
  }

  var abv = new Uint8Array(arraybuffer);
  var result = new Uint8Array(end - start);
  for (var i = start, ii = 0; i < end; i++, ii++) {
    result[ii] = abv[i];
  }
  return result.buffer;
};

},{}],36:[function(require,module,exports){
/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(chars){
  "use strict";

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = chars.indexOf(base64[i]);
      encoded2 = chars.indexOf(base64[i+1]);
      encoded3 = chars.indexOf(base64[i+2]);
      encoded4 = chars.indexOf(base64[i+3]);

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");

},{}],37:[function(require,module,exports){
(function (global){
/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = global.BlobBuilder
  || global.WebKitBlobBuilder
  || global.MSBlobBuilder
  || global.MozBlobBuilder;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  for (var i = 0; i < ary.length; i++) {
    var chunk = ary[i];
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      ary[i] = buf;
    }
  }
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary);

  for (var i = 0; i < ary.length; i++) {
    bb.append(ary[i]);
  }

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  mapArrayBufferViews(ary);
  return new Blob(ary, options || {});
};

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],38:[function(require,module,exports){
(function (global){

/*
 * Module requirements.
 */

var isArray = require('isarray');

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Right now only Buffer and ArrayBuffer are supported..
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary(data) {

  function _hasBinary(obj) {
    if (!obj) return false;

    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||
         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||
         (global.Blob && obj instanceof Blob) ||
         (global.File && obj instanceof File)
        ) {
      return true;
    }

    if (isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
          if (_hasBinary(obj[i])) {
              return true;
          }
      }
    } else if (obj && 'object' == typeof obj) {
      if (obj.toJSON) {
        obj = obj.toJSON();
      }

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {
          return true;
        }
      }
    }

    return false;
  }

  return _hasBinary(data);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"isarray":39}],39:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],40:[function(require,module,exports){
(function (global){
/*! https://mths.be/utf8js v2.0.0 by @mathias */
;(function(root) {

	// Detect free variables `exports`
	var freeExports = typeof exports == 'object' && exports;

	// Detect free variable `module`
	var freeModule = typeof module == 'object' && module &&
		module.exports == freeExports && module;

	// Detect free variable `global`, from Node.js or Browserified code,
	// and use it as `root`
	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	/*--------------------------------------------------------------------------*/

	var stringFromCharCode = String.fromCharCode;

	// Taken from https://mths.be/punycode
	function ucs2decode(string) {
		var output = [];
		var counter = 0;
		var length = string.length;
		var value;
		var extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	// Taken from https://mths.be/punycode
	function ucs2encode(array) {
		var length = array.length;
		var index = -1;
		var value;
		var output = '';
		while (++index < length) {
			value = array[index];
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
		}
		return output;
	}

	function checkScalarValue(codePoint) {
		if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
			throw Error(
				'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
				' is not a scalar value'
			);
		}
	}
	/*--------------------------------------------------------------------------*/

	function createByte(codePoint, shift) {
		return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
	}

	function encodeCodePoint(codePoint) {
		if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
			return stringFromCharCode(codePoint);
		}
		var symbol = '';
		if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
			symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
		}
		else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
			checkScalarValue(codePoint);
			symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
			symbol += createByte(codePoint, 6);
		}
		else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
			symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
			symbol += createByte(codePoint, 12);
			symbol += createByte(codePoint, 6);
		}
		symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
		return symbol;
	}

	function utf8encode(string) {
		var codePoints = ucs2decode(string);
		var length = codePoints.length;
		var index = -1;
		var codePoint;
		var byteString = '';
		while (++index < length) {
			codePoint = codePoints[index];
			byteString += encodeCodePoint(codePoint);
		}
		return byteString;
	}

	/*--------------------------------------------------------------------------*/

	function readContinuationByte() {
		if (byteIndex >= byteCount) {
			throw Error('Invalid byte index');
		}

		var continuationByte = byteArray[byteIndex] & 0xFF;
		byteIndex++;

		if ((continuationByte & 0xC0) == 0x80) {
			return continuationByte & 0x3F;
		}

		// If we end up here, it’s not a continuation byte
		throw Error('Invalid continuation byte');
	}

	function decodeSymbol() {
		var byte1;
		var byte2;
		var byte3;
		var byte4;
		var codePoint;

		if (byteIndex > byteCount) {
			throw Error('Invalid byte index');
		}

		if (byteIndex == byteCount) {
			return false;
		}

		// Read first byte
		byte1 = byteArray[byteIndex] & 0xFF;
		byteIndex++;

		// 1-byte sequence (no continuation bytes)
		if ((byte1 & 0x80) == 0) {
			return byte1;
		}

		// 2-byte sequence
		if ((byte1 & 0xE0) == 0xC0) {
			var byte2 = readContinuationByte();
			codePoint = ((byte1 & 0x1F) << 6) | byte2;
			if (codePoint >= 0x80) {
				return codePoint;
			} else {
				throw Error('Invalid continuation byte');
			}
		}

		// 3-byte sequence (may include unpaired surrogates)
		if ((byte1 & 0xF0) == 0xE0) {
			byte2 = readContinuationByte();
			byte3 = readContinuationByte();
			codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
			if (codePoint >= 0x0800) {
				checkScalarValue(codePoint);
				return codePoint;
			} else {
				throw Error('Invalid continuation byte');
			}
		}

		// 4-byte sequence
		if ((byte1 & 0xF8) == 0xF0) {
			byte2 = readContinuationByte();
			byte3 = readContinuationByte();
			byte4 = readContinuationByte();
			codePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |
				(byte3 << 0x06) | byte4;
			if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
				return codePoint;
			}
		}

		throw Error('Invalid UTF-8 detected');
	}

	var byteArray;
	var byteCount;
	var byteIndex;
	function utf8decode(byteString) {
		byteArray = ucs2decode(byteString);
		byteCount = byteArray.length;
		byteIndex = 0;
		var codePoints = [];
		var tmp;
		while ((tmp = decodeSymbol()) !== false) {
			codePoints.push(tmp);
		}
		return ucs2encode(codePoints);
	}

	/*--------------------------------------------------------------------------*/

	var utf8 = {
		'version': '2.0.0',
		'encode': utf8encode,
		'decode': utf8decode
	};

	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define(function() {
			return utf8;
		});
	}	else if (freeExports && !freeExports.nodeType) {
		if (freeModule) { // in Node.js or RingoJS v0.8.0+
			freeModule.exports = utf8;
		} else { // in Narwhal or RingoJS v0.7.0-
			var object = {};
			var hasOwnProperty = object.hasOwnProperty;
			for (var key in utf8) {
				hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);
			}
		}
	} else { // in Rhino or a web browser
		root.utf8 = utf8;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],41:[function(require,module,exports){

/**
 * Module exports.
 *
 * Logic borrowed from Modernizr:
 *
 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
 */

try {
  module.exports = typeof XMLHttpRequest !== 'undefined' &&
    'withCredentials' in new XMLHttpRequest();
} catch (err) {
  // if XMLHttp support is disabled in IE then it will throw
  // when trying to create
  module.exports = false;
}

},{}],42:[function(require,module,exports){
(function (global){
/**
 * JSON parse.
 *
 * @see Based on jQuery#parseJSON (MIT) and JSON2
 * @api private
 */

var rvalidchars = /^[\],:{}\s]*$/;
var rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
var rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
var rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g;
var rtrimLeft = /^\s+/;
var rtrimRight = /\s+$/;

module.exports = function parsejson(data) {
  if ('string' != typeof data || !data) {
    return null;
  }

  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');

  // Attempt to parse using the native JSON parser first
  if (global.JSON && JSON.parse) {
    return JSON.parse(data);
  }

  if (rvalidchars.test(data.replace(rvalidescape, '@')
      .replace(rvalidtokens, ']')
      .replace(rvalidbraces, ''))) {
    return (new Function('return ' + data))();
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],43:[function(require,module,exports){
/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */

exports.encode = function (obj) {
  var str = '';

  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      if (str.length) str += '&';
      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
    }
  }

  return str;
};

/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */

exports.decode = function(qs){
  var qry = {};
  var pairs = qs.split('&');
  for (var i = 0, l = pairs.length; i < l; i++) {
    var pair = pairs[i].split('=');
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
};

},{}],44:[function(require,module,exports){
'use strict';

var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')
  , length = 64
  , map = {}
  , seed = 0
  , i = 0
  , prev;

/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
  var encoded = '';

  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);

  return encoded;
}

/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
function decode(str) {
  var decoded = 0;

  for (i = 0; i < str.length; i++) {
    decoded = decoded * length + map[str.charAt(i)];
  }

  return decoded;
}

/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
  var now = encode(+new Date());

  if (now !== prev) return seed = 0, prev = now;
  return now +'.'+ encode(seed++);
}

//
// Map each character to its index.
//
for (; i < length; i++) map[alphabet[i]] = i;

//
// Expose the `yeast`, `encode` and `decode` functions.
//
yeast.encode = encode;
yeast.decode = decode;
module.exports = yeast;

},{}],45:[function(require,module,exports){
(function (global){

/*
 * Module requirements.
 */

var isArray = require('isarray');

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Right now only Buffer and ArrayBuffer are supported..
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary(data) {

  function _hasBinary(obj) {
    if (!obj) return false;

    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||
         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||
         (global.Blob && obj instanceof Blob) ||
         (global.File && obj instanceof File)
        ) {
      return true;
    }

    if (isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
          if (_hasBinary(obj[i])) {
              return true;
          }
      }
    } else if (obj && 'object' == typeof obj) {
      // see: https://github.com/Automattic/has-binary/pull/4
      if (obj.toJSON && 'function' == typeof obj.toJSON) {
        obj = obj.toJSON();
      }

      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {
          return true;
        }
      }
    }

    return false;
  }

  return _hasBinary(data);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"isarray":46}],46:[function(require,module,exports){
arguments[4][39][0].apply(exports,arguments)
},{"dup":39}],47:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],48:[function(require,module,exports){
/**
 * Parses an URI
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */

var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

var parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];

module.exports = function parseuri(str) {
    var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }

    var m = re.exec(str || ''),
        uri = {},
        i = 14;

    while (i--) {
        uri[parts[i]] = m[i] || '';
    }

    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }

    return uri;
};

},{}],49:[function(require,module,exports){
(function (global){
/*global Blob,File*/

/**
 * Module requirements
 */

var isArray = require('isarray');
var isBuf = require('./is-buffer');

/**
 * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
 * Anything with blobs or files should be fed through removeBlobs before coming
 * here.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @api public
 */

exports.deconstructPacket = function(packet){
  var buffers = [];
  var packetData = packet.data;

  function _deconstructPacket(data) {
    if (!data) return data;

    if (isBuf(data)) {
      var placeholder = { _placeholder: true, num: buffers.length };
      buffers.push(data);
      return placeholder;
    } else if (isArray(data)) {
      var newData = new Array(data.length);
      for (var i = 0; i < data.length; i++) {
        newData[i] = _deconstructPacket(data[i]);
      }
      return newData;
    } else if ('object' == typeof data && !(data instanceof Date)) {
      var newData = {};
      for (var key in data) {
        newData[key] = _deconstructPacket(data[key]);
      }
      return newData;
    }
    return data;
  }

  var pack = packet;
  pack.data = _deconstructPacket(packetData);
  pack.attachments = buffers.length; // number of binary 'attachments'
  return {packet: pack, buffers: buffers};
};

/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @api public
 */

exports.reconstructPacket = function(packet, buffers) {
  var curPlaceHolder = 0;

  function _reconstructPacket(data) {
    if (data && data._placeholder) {
      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)
      return buf;
    } else if (isArray(data)) {
      for (var i = 0; i < data.length; i++) {
        data[i] = _reconstructPacket(data[i]);
      }
      return data;
    } else if (data && 'object' == typeof data) {
      for (var key in data) {
        data[key] = _reconstructPacket(data[key]);
      }
      return data;
    }
    return data;
  }

  packet.data = _reconstructPacket(packet.data);
  packet.attachments = undefined; // no longer useful
  return packet;
};

/**
 * Asynchronously removes Blobs or Files from data via
 * FileReader's readAsArrayBuffer method. Used before encoding
 * data as msgpack. Calls callback with the blobless data.
 *
 * @param {Object} data
 * @param {Function} callback
 * @api private
 */

exports.removeBlobs = function(data, callback) {
  function _removeBlobs(obj, curKey, containingObject) {
    if (!obj) return obj;

    // convert any blob
    if ((global.Blob && obj instanceof Blob) ||
        (global.File && obj instanceof File)) {
      pendingBlobs++;

      // async filereader
      var fileReader = new FileReader();
      fileReader.onload = function() { // this.result == arraybuffer
        if (containingObject) {
          containingObject[curKey] = this.result;
        }
        else {
          bloblessData = this.result;
        }

        // if nothing pending its callback time
        if(! --pendingBlobs) {
          callback(bloblessData);
        }
      };

      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer
    } else if (isArray(obj)) { // handle array
      for (var i = 0; i < obj.length; i++) {
        _removeBlobs(obj[i], i, obj);
      }
    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object
      for (var key in obj) {
        _removeBlobs(obj[key], key, obj);
      }
    }
  }

  var pendingBlobs = 0;
  var bloblessData = data;
  _removeBlobs(bloblessData);
  if (!pendingBlobs) {
    callback(bloblessData);
  }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./is-buffer":51,"isarray":53}],50:[function(require,module,exports){

/**
 * Module dependencies.
 */

var debug = require('debug')('socket.io-parser');
var json = require('json3');
var isArray = require('isarray');
var Emitter = require('component-emitter');
var binary = require('./binary');
var isBuf = require('./is-buffer');

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = 4;

/**
 * Packet types.
 *
 * @api public
 */

exports.types = [
  'CONNECT',
  'DISCONNECT',
  'EVENT',
  'ACK',
  'ERROR',
  'BINARY_EVENT',
  'BINARY_ACK'
];

/**
 * Packet type `connect`.
 *
 * @api public
 */

exports.CONNECT = 0;

/**
 * Packet type `disconnect`.
 *
 * @api public
 */

exports.DISCONNECT = 1;

/**
 * Packet type `event`.
 *
 * @api public
 */

exports.EVENT = 2;

/**
 * Packet type `ack`.
 *
 * @api public
 */

exports.ACK = 3;

/**
 * Packet type `error`.
 *
 * @api public
 */

exports.ERROR = 4;

/**
 * Packet type 'binary event'
 *
 * @api public
 */

exports.BINARY_EVENT = 5;

/**
 * Packet type `binary ack`. For acks with binary arguments.
 *
 * @api public
 */

exports.BINARY_ACK = 6;

/**
 * Encoder constructor.
 *
 * @api public
 */

exports.Encoder = Encoder;

/**
 * Decoder constructor.
 *
 * @api public
 */

exports.Decoder = Decoder;

/**
 * A socket.io Encoder instance
 *
 * @api public
 */

function Encoder() {}

/**
 * Encode a packet as a single string if non-binary, or as a
 * buffer sequence, depending on packet type.
 *
 * @param {Object} obj - packet object
 * @param {Function} callback - function to handle encodings (likely engine.write)
 * @return Calls callback with Array of encodings
 * @api public
 */

Encoder.prototype.encode = function(obj, callback){
  debug('encoding packet %j', obj);

  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {
    encodeAsBinary(obj, callback);
  }
  else {
    var encoding = encodeAsString(obj);
    callback([encoding]);
  }
};

/**
 * Encode packet as string.
 *
 * @param {Object} packet
 * @return {String} encoded
 * @api private
 */

function encodeAsString(obj) {
  var str = '';
  var nsp = false;

  // first is type
  str += obj.type;

  // attachments if we have them
  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {
    str += obj.attachments;
    str += '-';
  }

  // if we have a namespace other than `/`
  // we append it followed by a comma `,`
  if (obj.nsp && '/' != obj.nsp) {
    nsp = true;
    str += obj.nsp;
  }

  // immediately followed by the id
  if (null != obj.id) {
    if (nsp) {
      str += ',';
      nsp = false;
    }
    str += obj.id;
  }

  // json data
  if (null != obj.data) {
    if (nsp) str += ',';
    str += json.stringify(obj.data);
  }

  debug('encoded %j as %s', obj, str);
  return str;
}

/**
 * Encode packet as 'buffer sequence' by removing blobs, and
 * deconstructing packet into object with placeholders and
 * a list of buffers.
 *
 * @param {Object} packet
 * @return {Buffer} encoded
 * @api private
 */

function encodeAsBinary(obj, callback) {

  function writeEncoding(bloblessData) {
    var deconstruction = binary.deconstructPacket(bloblessData);
    var pack = encodeAsString(deconstruction.packet);
    var buffers = deconstruction.buffers;

    buffers.unshift(pack); // add packet info to beginning of data list
    callback(buffers); // write all the buffers
  }

  binary.removeBlobs(obj, writeEncoding);
}

/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 * @api public
 */

function Decoder() {
  this.reconstructor = null;
}

/**
 * Mix in `Emitter` with Decoder.
 */

Emitter(Decoder.prototype);

/**
 * Decodes an ecoded packet string into packet JSON.
 *
 * @param {String} obj - encoded packet
 * @return {Object} packet
 * @api public
 */

Decoder.prototype.add = function(obj) {
  var packet;
  if ('string' == typeof obj) {
    packet = decodeString(obj);
    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json
      this.reconstructor = new BinaryReconstructor(packet);

      // no attachments, labeled binary but no binary data to follow
      if (this.reconstructor.reconPack.attachments === 0) {
        this.emit('decoded', packet);
      }
    } else { // non-binary full packet
      this.emit('decoded', packet);
    }
  }
  else if (isBuf(obj) || obj.base64) { // raw binary data
    if (!this.reconstructor) {
      throw new Error('got binary data when not reconstructing a packet');
    } else {
      packet = this.reconstructor.takeBinaryData(obj);
      if (packet) { // received final buffer
        this.reconstructor = null;
        this.emit('decoded', packet);
      }
    }
  }
  else {
    throw new Error('Unknown type: ' + obj);
  }
};

/**
 * Decode a packet String (JSON data)
 *
 * @param {String} str
 * @return {Object} packet
 * @api private
 */

function decodeString(str) {
  var p = {};
  var i = 0;

  // look up type
  p.type = Number(str.charAt(0));
  if (null == exports.types[p.type]) return error();

  // look up attachments if type binary
  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {
    var buf = '';
    while (str.charAt(++i) != '-') {
      buf += str.charAt(i);
      if (i == str.length) break;
    }
    if (buf != Number(buf) || str.charAt(i) != '-') {
      throw new Error('Illegal attachments');
    }
    p.attachments = Number(buf);
  }

  // look up namespace (if any)
  if ('/' == str.charAt(i + 1)) {
    p.nsp = '';
    while (++i) {
      var c = str.charAt(i);
      if (',' == c) break;
      p.nsp += c;
      if (i == str.length) break;
    }
  } else {
    p.nsp = '/';
  }

  // look up id
  var next = str.charAt(i + 1);
  if ('' !== next && Number(next) == next) {
    p.id = '';
    while (++i) {
      var c = str.charAt(i);
      if (null == c || Number(c) != c) {
        --i;
        break;
      }
      p.id += str.charAt(i);
      if (i == str.length) break;
    }
    p.id = Number(p.id);
  }

  // look up json data
  if (str.charAt(++i)) {
    try {
      p.data = json.parse(str.substr(i));
    } catch(e){
      return error();
    }
  }

  debug('decoded %s as %j', str, p);
  return p;
}

/**
 * Deallocates a parser's resources
 *
 * @api public
 */

Decoder.prototype.destroy = function() {
  if (this.reconstructor) {
    this.reconstructor.finishedReconstruction();
  }
};

/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 * @api private
 */

function BinaryReconstructor(packet) {
  this.reconPack = packet;
  this.buffers = [];
}

/**
 * Method to be called when binary data received from connection
 * after a BINARY_EVENT packet.
 *
 * @param {Buffer | ArrayBuffer} binData - the raw binary data received
 * @return {null | Object} returns null if more binary data is expected or
 *   a reconstructed packet object if all buffers have been received.
 * @api private
 */

BinaryReconstructor.prototype.takeBinaryData = function(binData) {
  this.buffers.push(binData);
  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list
    var packet = binary.reconstructPacket(this.reconPack, this.buffers);
    this.finishedReconstruction();
    return packet;
  }
  return null;
};

/**
 * Cleans up binary packet reconstruction variables.
 *
 * @api private
 */

BinaryReconstructor.prototype.finishedReconstruction = function() {
  this.reconPack = null;
  this.buffers = [];
};

function error(data){
  return {
    type: exports.ERROR,
    data: 'parser error'
  };
}

},{"./binary":49,"./is-buffer":51,"component-emitter":52,"debug":17,"isarray":53,"json3":54}],51:[function(require,module,exports){
(function (global){

module.exports = isBuf;

/**
 * Returns true if obj is a buffer or an arraybuffer.
 *
 * @api private
 */

function isBuf(obj) {
  return (global.Buffer && global.Buffer.isBuffer(obj)) ||
         (global.ArrayBuffer && obj instanceof ArrayBuffer);
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],52:[function(require,module,exports){
arguments[4][30][0].apply(exports,arguments)
},{"dup":30}],53:[function(require,module,exports){
arguments[4][39][0].apply(exports,arguments)
},{"dup":39}],54:[function(require,module,exports){
(function (global){
/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */
;(function () {
  // Detect the `define` function exposed by asynchronous module loaders. The
  // strict `define` check is necessary for compatibility with `r.js`.
  var isLoader = typeof define === "function" && define.amd;

  // A set of types used to distinguish objects from primitives.
  var objectTypes = {
    "function": true,
    "object": true
  };

  // Detect the `exports` object exposed by CommonJS implementations.
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  // Use the `global` object exposed by Node (including Browserify via
  // `insert-module-globals`), Narwhal, and Ringo as the default context,
  // and the `window` object in browsers. Rhino exports a `global` function
  // instead.
  var root = objectTypes[typeof window] && window || this,
      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == "object" && global;

  if (freeGlobal && (freeGlobal["global"] === freeGlobal || freeGlobal["window"] === freeGlobal || freeGlobal["self"] === freeGlobal)) {
    root = freeGlobal;
  }

  // Public: Initializes JSON 3 using the given `context` object, attaching the
  // `stringify` and `parse` functions to the specified `exports` object.
  function runInContext(context, exports) {
    context || (context = root["Object"]());
    exports || (exports = root["Object"]());

    // Native constructor aliases.
    var Number = context["Number"] || root["Number"],
        String = context["String"] || root["String"],
        Object = context["Object"] || root["Object"],
        Date = context["Date"] || root["Date"],
        SyntaxError = context["SyntaxError"] || root["SyntaxError"],
        TypeError = context["TypeError"] || root["TypeError"],
        Math = context["Math"] || root["Math"],
        nativeJSON = context["JSON"] || root["JSON"];

    // Delegate to the native `stringify` and `parse` implementations.
    if (typeof nativeJSON == "object" && nativeJSON) {
      exports.stringify = nativeJSON.stringify;
      exports.parse = nativeJSON.parse;
    }

    // Convenience aliases.
    var objectProto = Object.prototype,
        getClass = objectProto.toString,
        isProperty, forEach, undef;

    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.
    var isExtended = new Date(-3509827334573292);
    try {
      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical
      // results for certain dates in Opera >= 10.53.
      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&
        // Safari < 2.0.2 stores the internal millisecond time value correctly,
        // but clips the values returned by the date methods to the range of
        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).
        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;
    } catch (exception) {}

    // Internal: Determines whether the native `JSON.stringify` and `parse`
    // implementations are spec-compliant. Based on work by Ken Snyder.
    function has(name) {
      if (has[name] !== undef) {
        // Return cached feature test result.
        return has[name];
      }
      var isSupported;
      if (name == "bug-string-char-index") {
        // IE <= 7 doesn't support accessing string characters using square
        // bracket notation. IE 8 only supports this for primitives.
        isSupported = "a"[0] != "a";
      } else if (name == "json") {
        // Indicates whether both `JSON.stringify` and `JSON.parse` are
        // supported.
        isSupported = has("json-stringify") && has("json-parse");
      } else {
        var value, serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
        // Test `JSON.stringify`.
        if (name == "json-stringify") {
          var stringify = exports.stringify, stringifySupported = typeof stringify == "function" && isExtended;
          if (stringifySupported) {
            // A test function object with a custom `toJSON` method.
            (value = function () {
              return 1;
            }).toJSON = value;
            try {
              stringifySupported =
                // Firefox 3.1b1 and b2 serialize string, number, and boolean
                // primitives as object literals.
                stringify(0) === "0" &&
                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object
                // literals.
                stringify(new Number()) === "0" &&
                stringify(new String()) == '""' &&
                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or
                // does not define a canonical JSON representation (this applies to
                // objects with `toJSON` properties as well, *unless* they are nested
                // within an object or array).
                stringify(getClass) === undef &&
                // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and
                // FF 3.1b3 pass this test.
                stringify(undef) === undef &&
                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,
                // respectively, if the value is omitted entirely.
                stringify() === undef &&
                // FF 3.1b1, 2 throw an error if the given value is not a number,
                // string, array, object, Boolean, or `null` literal. This applies to
                // objects with custom `toJSON` methods as well, unless they are nested
                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`
                // methods entirely.
                stringify(value) === "1" &&
                stringify([value]) == "[1]" &&
                // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of
                // `"[null]"`.
                stringify([undef]) == "[null]" &&
                // YUI 3.0.0b1 fails to serialize `null` literals.
                stringify(null) == "null" &&
                // FF 3.1b1, 2 halts serialization if an array contains a function:
                // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3
                // elides non-JSON values from objects and arrays, unless they
                // define custom `toJSON` methods.
                stringify([undef, getClass, null]) == "[null,null,null]" &&
                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
                // where character escape codes are expected (e.g., `\b` => `\u0008`).
                stringify({ "a": [value, true, false, null, "\x00\b\n\f\r\t"] }) == serialized &&
                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.
                stringify(null, value) === "1" &&
                stringify([1, 2], null, 1) == "[\n 1,\n 2\n]" &&
                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly
                // serialize extended years.
                stringify(new Date(-8.64e15)) == '"-271821-04-20T00:00:00.000Z"' &&
                // The milliseconds are optional in ES 5, but required in 5.1.
                stringify(new Date(8.64e15)) == '"+275760-09-13T00:00:00.000Z"' &&
                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative
                // four-digit years instead of six-digit years. Credits: @Yaffle.
                stringify(new Date(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' &&
                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond
                // values less than 1000. Credits: @Yaffle.
                stringify(new Date(-1)) == '"1969-12-31T23:59:59.999Z"';
            } catch (exception) {
              stringifySupported = false;
            }
          }
          isSupported = stringifySupported;
        }
        // Test `JSON.parse`.
        if (name == "json-parse") {
          var parse = exports.parse;
          if (typeof parse == "function") {
            try {
              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.
              // Conforming implementations should also coerce the initial argument to
              // a string prior to parsing.
              if (parse("0") === 0 && !parse(false)) {
                // Simple parsing test.
                value = parse(serialized);
                var parseSupported = value["a"].length == 5 && value["a"][0] === 1;
                if (parseSupported) {
                  try {
                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.
                    parseSupported = !parse('"\t"');
                  } catch (exception) {}
                  if (parseSupported) {
                    try {
                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading
                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow
                      // certain octal literals.
                      parseSupported = parse("01") !== 1;
                    } catch (exception) {}
                  }
                  if (parseSupported) {
                    try {
                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal
                      // points. These environments, along with FF 3.1b1 and 2,
                      // also allow trailing commas in JSON objects and arrays.
                      parseSupported = parse("1.") !== 1;
                    } catch (exception) {}
                  }
                }
              }
            } catch (exception) {
              parseSupported = false;
            }
          }
          isSupported = parseSupported;
        }
      }
      return has[name] = !!isSupported;
    }

    if (!has("json")) {
      // Common `[[Class]]` name aliases.
      var functionClass = "[object Function]",
          dateClass = "[object Date]",
          numberClass = "[object Number]",
          stringClass = "[object String]",
          arrayClass = "[object Array]",
          booleanClass = "[object Boolean]";

      // Detect incomplete support for accessing string characters by index.
      var charIndexBuggy = has("bug-string-char-index");

      // Define additional utility methods if the `Date` methods are buggy.
      if (!isExtended) {
        var floor = Math.floor;
        // A mapping between the months of the year and the number of days between
        // January 1st and the first of the respective month.
        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
        // Internal: Calculates the number of days between the Unix epoch and the
        // first day of the given month.
        var getDay = function (year, month) {
          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
        };
      }

      // Internal: Determines if a property is a direct property of the given
      // object. Delegates to the native `Object#hasOwnProperty` method.
      if (!(isProperty = objectProto.hasOwnProperty)) {
        isProperty = function (property) {
          var members = {}, constructor;
          if ((members.__proto__ = null, members.__proto__ = {
            // The *proto* property cannot be set multiple times in recent
            // versions of Firefox and SeaMonkey.
            "toString": 1
          }, members).toString != getClass) {
            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but
            // supports the mutable *proto* property.
            isProperty = function (property) {
              // Capture and break the object's prototype chain (see section 8.6.2
              // of the ES 5.1 spec). The parenthesized expression prevents an
              // unsafe transformation by the Closure Compiler.
              var original = this.__proto__, result = property in (this.__proto__ = null, this);
              // Restore the original prototype chain.
              this.__proto__ = original;
              return result;
            };
          } else {
            // Capture a reference to the top-level `Object` constructor.
            constructor = members.constructor;
            // Use the `constructor` property to simulate `Object#hasOwnProperty` in
            // other environments.
            isProperty = function (property) {
              var parent = (this.constructor || constructor).prototype;
              return property in this && !(property in parent && this[property] === parent[property]);
            };
          }
          members = null;
          return isProperty.call(this, property);
        };
      }

      // Internal: Normalizes the `for...in` iteration algorithm across
      // environments. Each enumerated key is yielded to a `callback` function.
      forEach = function (object, callback) {
        var size = 0, Properties, members, property;

        // Tests for bugs in the current environment's `for...in` algorithm. The
        // `valueOf` property inherits the non-enumerable flag from
        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.
        (Properties = function () {
          this.valueOf = 0;
        }).prototype.valueOf = 0;

        // Iterate over a new instance of the `Properties` class.
        members = new Properties();
        for (property in members) {
          // Ignore all properties inherited from `Object.prototype`.
          if (isProperty.call(members, property)) {
            size++;
          }
        }
        Properties = members = null;

        // Normalize the iteration algorithm.
        if (!size) {
          // A list of non-enumerable properties inherited from `Object.prototype`.
          members = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"];
          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable
          // properties.
          forEach = function (object, callback) {
            var isFunction = getClass.call(object) == functionClass, property, length;
            var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;
            for (property in object) {
              // Gecko <= 1.0 enumerates the `prototype` property of functions under
              // certain conditions; IE does not.
              if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {
                callback(property);
              }
            }
            // Manually invoke the callback for each non-enumerable property.
            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));
          };
        } else if (size == 2) {
          // Safari <= 2.0.4 enumerates shadowed properties twice.
          forEach = function (object, callback) {
            // Create a set of iterated properties.
            var members = {}, isFunction = getClass.call(object) == functionClass, property;
            for (property in object) {
              // Store each property name to prevent double enumeration. The
              // `prototype` property of functions is not enumerated due to cross-
              // environment inconsistencies.
              if (!(isFunction && property == "prototype") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {
                callback(property);
              }
            }
          };
        } else {
          // No bugs detected; use the standard `for...in` algorithm.
          forEach = function (object, callback) {
            var isFunction = getClass.call(object) == functionClass, property, isConstructor;
            for (property in object) {
              if (!(isFunction && property == "prototype") && isProperty.call(object, property) && !(isConstructor = property === "constructor")) {
                callback(property);
              }
            }
            // Manually invoke the callback for the `constructor` property due to
            // cross-environment inconsistencies.
            if (isConstructor || isProperty.call(object, (property = "constructor"))) {
              callback(property);
            }
          };
        }
        return forEach(object, callback);
      };

      // Public: Serializes a JavaScript `value` as a JSON string. The optional
      // `filter` argument may specify either a function that alters how object and
      // array members are serialized, or an array of strings and numbers that
      // indicates which properties should be serialized. The optional `width`
      // argument may be either a string or number that specifies the indentation
      // level of the output.
      if (!has("json-stringify")) {
        // Internal: A map of control characters and their escaped equivalents.
        var Escapes = {
          92: "\\\\",
          34: '\\"',
          8: "\\b",
          12: "\\f",
          10: "\\n",
          13: "\\r",
          9: "\\t"
        };

        // Internal: Converts `value` into a zero-padded string such that its
        // length is at least equal to `width`. The `width` must be <= 6.
        var leadingZeroes = "000000";
        var toPaddedString = function (width, value) {
          // The `|| 0` expression is necessary to work around a bug in
          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.
          return (leadingZeroes + (value || 0)).slice(-width);
        };

        // Internal: Double-quotes a string `value`, replacing all ASCII control
        // characters (characters with code unit values between 0 and 31) with
        // their escaped equivalents. This is an implementation of the
        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.
        var unicodePrefix = "\\u00";
        var quote = function (value) {
          var result = '"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;
          var symbols = useCharIndex && (charIndexBuggy ? value.split("") : value);
          for (; index < length; index++) {
            var charCode = value.charCodeAt(index);
            // If the character is a control character, append its Unicode or
            // shorthand escape sequence; otherwise, append the character as-is.
            switch (charCode) {
              case 8: case 9: case 10: case 12: case 13: case 34: case 92:
                result += Escapes[charCode];
                break;
              default:
                if (charCode < 32) {
                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));
                  break;
                }
                result += useCharIndex ? symbols[index] : value.charAt(index);
            }
          }
          return result + '"';
        };

        // Internal: Recursively serializes an object. Implements the
        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.
        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {
          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;
          try {
            // Necessary for host object support.
            value = object[property];
          } catch (exception) {}
          if (typeof value == "object" && value) {
            className = getClass.call(value);
            if (className == dateClass && !isProperty.call(value, "toJSON")) {
              if (value > -1 / 0 && value < 1 / 0) {
                // Dates are serialized according to the `Date#toJSON` method
                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15
                // for the ISO 8601 date time string format.
                if (getDay) {
                  // Manually compute the year, month, date, hours, minutes,
                  // seconds, and milliseconds if the `getUTC*` methods are
                  // buggy. Adapted from @Yaffle's `date-shim` project.
                  date = floor(value / 864e5);
                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);
                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);
                  date = 1 + date - getDay(year, month);
                  // The `time` value specifies the time within the day (see ES
                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used
                  // to compute `A modulo B`, as the `%` operator does not
                  // correspond to the `modulo` operation for negative numbers.
                  time = (value % 864e5 + 864e5) % 864e5;
                  // The hours, minutes, seconds, and milliseconds are obtained by
                  // decomposing the time within the day. See section 15.9.1.10.
                  hours = floor(time / 36e5) % 24;
                  minutes = floor(time / 6e4) % 60;
                  seconds = floor(time / 1e3) % 60;
                  milliseconds = time % 1e3;
                } else {
                  year = value.getUTCFullYear();
                  month = value.getUTCMonth();
                  date = value.getUTCDate();
                  hours = value.getUTCHours();
                  minutes = value.getUTCMinutes();
                  seconds = value.getUTCSeconds();
                  milliseconds = value.getUTCMilliseconds();
                }
                // Serialize extended years correctly.
                value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +
                  "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) +
                  // Months, dates, hours, minutes, and seconds should have two
                  // digits; milliseconds should have three.
                  "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) +
                  // Milliseconds are optional in ES 5.0, but required in 5.1.
                  "." + toPaddedString(3, milliseconds) + "Z";
              } else {
                value = null;
              }
            } else if (typeof value.toJSON == "function" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, "toJSON"))) {
              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the
              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3
              // ignores all `toJSON` methods on these objects unless they are
              // defined directly on an instance.
              value = value.toJSON(property);
            }
          }
          if (callback) {
            // If a replacement function was provided, call it to obtain the value
            // for serialization.
            value = callback.call(object, property, value);
          }
          if (value === null) {
            return "null";
          }
          className = getClass.call(value);
          if (className == booleanClass) {
            // Booleans are represented literally.
            return "" + value;
          } else if (className == numberClass) {
            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as
            // `"null"`.
            return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";
          } else if (className == stringClass) {
            // Strings are double-quoted and escaped.
            return quote("" + value);
          }
          // Recursively serialize objects and arrays.
          if (typeof value == "object") {
            // Check for cyclic structures. This is a linear search; performance
            // is inversely proportional to the number of unique nested objects.
            for (length = stack.length; length--;) {
              if (stack[length] === value) {
                // Cyclic structures cannot be serialized by `JSON.stringify`.
                throw TypeError();
              }
            }
            // Add the object to the stack of traversed objects.
            stack.push(value);
            results = [];
            // Save the current indentation level and indent one additional level.
            prefix = indentation;
            indentation += whitespace;
            if (className == arrayClass) {
              // Recursively serialize array elements.
              for (index = 0, length = value.length; index < length; index++) {
                element = serialize(index, value, callback, properties, whitespace, indentation, stack);
                results.push(element === undef ? "null" : element);
              }
              result = results.length ? (whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : ("[" + results.join(",") + "]")) : "[]";
            } else {
              // Recursively serialize object members. Members are selected from
              // either a user-specified list of property names, or the object
              // itself.
              forEach(properties || value, function (property) {
                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);
                if (element !== undef) {
                  // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}
                  // is not the empty string, let `member` {quote(property) + ":"}
                  // be the concatenation of `member` and the `space` character."
                  // The "`space` character" refers to the literal space
                  // character, not the `space` {width} argument provided to
                  // `JSON.stringify`.
                  results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
                }
              });
              result = results.length ? (whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : ("{" + results.join(",") + "}")) : "{}";
            }
            // Remove the object from the traversed object stack.
            stack.pop();
            return result;
          }
        };

        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.
        exports.stringify = function (source, filter, width) {
          var whitespace, callback, properties, className;
          if (objectTypes[typeof filter] && filter) {
            if ((className = getClass.call(filter)) == functionClass) {
              callback = filter;
            } else if (className == arrayClass) {
              // Convert the property names array into a makeshift set.
              properties = {};
              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));
            }
          }
          if (width) {
            if ((className = getClass.call(width)) == numberClass) {
              // Convert the `width` to an integer and create a string containing
              // `width` number of space characters.
              if ((width -= width % 1) > 0) {
                for (whitespace = "", width > 10 && (width = 10); whitespace.length < width; whitespace += " ");
              }
            } else if (className == stringClass) {
              whitespace = width.length <= 10 ? width : width.slice(0, 10);
            }
          }
          // Opera <= 7.54u2 discards the values associated with empty string keys
          // (`""`) only if they are used directly within an object member list
          // (e.g., `!("" in { "": 1})`).
          return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);
        };
      }

      // Public: Parses a JSON source string.
      if (!has("json-parse")) {
        var fromCharCode = String.fromCharCode;

        // Internal: A map of escaped control characters and their unescaped
        // equivalents.
        var Unescapes = {
          92: "\\",
          34: '"',
          47: "/",
          98: "\b",
          116: "\t",
          110: "\n",
          102: "\f",
          114: "\r"
        };

        // Internal: Stores the parser state.
        var Index, Source;

        // Internal: Resets the parser state and throws a `SyntaxError`.
        var abort = function () {
          Index = Source = null;
          throw SyntaxError();
        };

        // Internal: Returns the next token, or `"$"` if the parser has reached
        // the end of the source string. A token may be a string, number, `null`
        // literal, or Boolean literal.
        var lex = function () {
          var source = Source, length = source.length, value, begin, position, isSigned, charCode;
          while (Index < length) {
            charCode = source.charCodeAt(Index);
            switch (charCode) {
              case 9: case 10: case 13: case 32:
                // Skip whitespace tokens, including tabs, carriage returns, line
                // feeds, and space characters.
                Index++;
                break;
              case 123: case 125: case 91: case 93: case 58: case 44:
                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at
                // the current position.
                value = charIndexBuggy ? source.charAt(Index) : source[Index];
                Index++;
                return value;
              case 34:
                // `"` delimits a JSON string; advance to the next character and
                // begin parsing the string. String tokens are prefixed with the
                // sentinel `@` character to distinguish them from punctuators and
                // end-of-string tokens.
                for (value = "@", Index++; Index < length;) {
                  charCode = source.charCodeAt(Index);
                  if (charCode < 32) {
                    // Unescaped ASCII control characters (those with a code unit
                    // less than the space character) are not permitted.
                    abort();
                  } else if (charCode == 92) {
                    // A reverse solidus (`\`) marks the beginning of an escaped
                    // control character (including `"`, `\`, and `/`) or Unicode
                    // escape sequence.
                    charCode = source.charCodeAt(++Index);
                    switch (charCode) {
                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:
                        // Revive escaped control characters.
                        value += Unescapes[charCode];
                        Index++;
                        break;
                      case 117:
                        // `\u` marks the beginning of a Unicode escape sequence.
                        // Advance to the first character and validate the
                        // four-digit code point.
                        begin = ++Index;
                        for (position = Index + 4; Index < position; Index++) {
                          charCode = source.charCodeAt(Index);
                          // A valid sequence comprises four hexdigits (case-
                          // insensitive) that form a single hexadecimal value.
                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {
                            // Invalid Unicode escape sequence.
                            abort();
                          }
                        }
                        // Revive the escaped character.
                        value += fromCharCode("0x" + source.slice(begin, Index));
                        break;
                      default:
                        // Invalid escape sequence.
                        abort();
                    }
                  } else {
                    if (charCode == 34) {
                      // An unescaped double-quote character marks the end of the
                      // string.
                      break;
                    }
                    charCode = source.charCodeAt(Index);
                    begin = Index;
                    // Optimize for the common case where a string is valid.
                    while (charCode >= 32 && charCode != 92 && charCode != 34) {
                      charCode = source.charCodeAt(++Index);
                    }
                    // Append the string as-is.
                    value += source.slice(begin, Index);
                  }
                }
                if (source.charCodeAt(Index) == 34) {
                  // Advance to the next character and return the revived string.
                  Index++;
                  return value;
                }
                // Unterminated string.
                abort();
              default:
                // Parse numbers and literals.
                begin = Index;
                // Advance past the negative sign, if one is specified.
                if (charCode == 45) {
                  isSigned = true;
                  charCode = source.charCodeAt(++Index);
                }
                // Parse an integer or floating-point value.
                if (charCode >= 48 && charCode <= 57) {
                  // Leading zeroes are interpreted as octal literals.
                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {
                    // Illegal octal literal.
                    abort();
                  }
                  isSigned = false;
                  // Parse the integer component.
                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);
                  // Floats cannot contain a leading decimal point; however, this
                  // case is already accounted for by the parser.
                  if (source.charCodeAt(Index) == 46) {
                    position = ++Index;
                    // Parse the decimal component.
                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);
                    if (position == Index) {
                      // Illegal trailing decimal.
                      abort();
                    }
                    Index = position;
                  }
                  // Parse exponents. The `e` denoting the exponent is
                  // case-insensitive.
                  charCode = source.charCodeAt(Index);
                  if (charCode == 101 || charCode == 69) {
                    charCode = source.charCodeAt(++Index);
                    // Skip past the sign following the exponent, if one is
                    // specified.
                    if (charCode == 43 || charCode == 45) {
                      Index++;
                    }
                    // Parse the exponential component.
                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);
                    if (position == Index) {
                      // Illegal empty exponent.
                      abort();
                    }
                    Index = position;
                  }
                  // Coerce the parsed value to a JavaScript number.
                  return +source.slice(begin, Index);
                }
                // A negative sign may only precede numbers.
                if (isSigned) {
                  abort();
                }
                // `true`, `false`, and `null` literals.
                if (source.slice(Index, Index + 4) == "true") {
                  Index += 4;
                  return true;
                } else if (source.slice(Index, Index + 5) == "false") {
                  Index += 5;
                  return false;
                } else if (source.slice(Index, Index + 4) == "null") {
                  Index += 4;
                  return null;
                }
                // Unrecognized token.
                abort();
            }
          }
          // Return the sentinel `$` character if the parser has reached the end
          // of the source string.
          return "$";
        };

        // Internal: Parses a JSON `value` token.
        var get = function (value) {
          var results, hasMembers;
          if (value == "$") {
            // Unexpected end of input.
            abort();
          }
          if (typeof value == "string") {
            if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {
              // Remove the sentinel `@` character.
              return value.slice(1);
            }
            // Parse object and array literals.
            if (value == "[") {
              // Parses a JSON array, returning a new JavaScript array.
              results = [];
              for (;; hasMembers || (hasMembers = true)) {
                value = lex();
                // A closing square bracket marks the end of the array literal.
                if (value == "]") {
                  break;
                }
                // If the array literal contains elements, the current token
                // should be a comma separating the previous element from the
                // next.
                if (hasMembers) {
                  if (value == ",") {
                    value = lex();
                    if (value == "]") {
                      // Unexpected trailing `,` in array literal.
                      abort();
                    }
                  } else {
                    // A `,` must separate each array element.
                    abort();
                  }
                }
                // Elisions and leading commas are not permitted.
                if (value == ",") {
                  abort();
                }
                results.push(get(value));
              }
              return results;
            } else if (value == "{") {
              // Parses a JSON object, returning a new JavaScript object.
              results = {};
              for (;; hasMembers || (hasMembers = true)) {
                value = lex();
                // A closing curly brace marks the end of the object literal.
                if (value == "}") {
                  break;
                }
                // If the object literal contains members, the current token
                // should be a comma separator.
                if (hasMembers) {
                  if (value == ",") {
                    value = lex();
                    if (value == "}") {
                      // Unexpected trailing `,` in object literal.
                      abort();
                    }
                  } else {
                    // A `,` must separate each object member.
                    abort();
                  }
                }
                // Leading commas are not permitted, object property names must be
                // double-quoted strings, and a `:` must separate each property
                // name and value.
                if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {
                  abort();
                }
                results[value.slice(1)] = get(lex());
              }
              return results;
            }
            // Unexpected token encountered.
            abort();
          }
          return value;
        };

        // Internal: Updates a traversed object member.
        var update = function (source, property, callback) {
          var element = walk(source, property, callback);
          if (element === undef) {
            delete source[property];
          } else {
            source[property] = element;
          }
        };

        // Internal: Recursively traverses a parsed JSON object, invoking the
        // `callback` function for each value. This is an implementation of the
        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.
        var walk = function (source, property, callback) {
          var value = source[property], length;
          if (typeof value == "object" && value) {
            // `forEach` can't be used to traverse an array in Opera <= 8.54
            // because its `Object#hasOwnProperty` implementation returns `false`
            // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).
            if (getClass.call(value) == arrayClass) {
              for (length = value.length; length--;) {
                update(value, length, callback);
              }
            } else {
              forEach(value, function (property) {
                update(value, property, callback);
              });
            }
          }
          return callback.call(source, property, value);
        };

        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.
        exports.parse = function (source, callback) {
          var result, value;
          Index = 0;
          Source = "" + source;
          result = get(lex());
          // If a JSON string contains multiple tokens, it is invalid.
          if (lex() != "$") {
            abort();
          }
          // Reset the parser state.
          Index = Source = null;
          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;
        };
      }
    }

    exports["runInContext"] = runInContext;
    return exports;
  }

  if (freeExports && !isLoader) {
    // Export for CommonJS environments.
    runInContext(root, freeExports);
  } else {
    // Export for web browsers and JavaScript engines.
    var nativeJSON = root.JSON,
        previousJSON = root["JSON3"],
        isRestored = false;

    var JSON3 = runInContext(root, (root["JSON3"] = {
      // Public: Restores the original value of the global `JSON` object and
      // returns a reference to the `JSON3` object.
      "noConflict": function () {
        if (!isRestored) {
          isRestored = true;
          root.JSON = nativeJSON;
          root["JSON3"] = previousJSON;
          nativeJSON = previousJSON = null;
        }
        return JSON3;
      }
    }));

    root.JSON = {
      "parse": JSON3.parse,
      "stringify": JSON3.stringify
    };
  }

  // Export for asynchronous module loaders.
  if (isLoader) {
    define(function () {
      return JSON3;
    });
  }
}).call(this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],55:[function(require,module,exports){
module.exports = toArray

function toArray(list, index) {
    var array = []

    index = index || 0

    for (var i = index || 0; i < list.length; i++) {
        array[i - index] = list[i]
    }

    return array
}

},{}],56:[function(require,module,exports){
"use strict";
var io = require("socket.io-client");
var PlayerSnap = require("./syncStrategies/PlayerSnap");

class ClientEngine {

    constructor(gameEngine, inputOptions){
        var that = this;

        this.options = Object.assign({
            syncStrategy: new PlayerSnap(gameEngine) //default sync strategy
        }, inputOptions);

        this.socket = io();
        this.gameEngine = gameEngine;


        this.worldBuffer=[]; // buffer for server world updates
        this.inboundMessages = [];
        this.outboundMessages = [];


        this.socket.on('playerJoined', function(playerData) {
            that.playerId = playerData.playerId;
        });
    }

    start(){
        var that = this;
        this.socket.on('worldUpdate', function(worldData) {
            that.inboundMessages.push(worldData);
        });

        this.gameEngine.start();
    }

    step(){
        while(this.inboundMessages.length>0){
            this.handleInboundMessage(this.inboundMessages.pop());
        }

        this.handleOutboundInput();
        this.gameEngine.step();
    }

    sendInput(input){
        var message = {
            command: 'move',
            data: {
                messageIndex: this.messageIndex,
                step: this.gameEngine.world.stepCount,
                input: input
            }
        };

        this.gameEngine.processInput(message.data, this.playerId);

        this.outboundMessages.push(message);

        this.messageIndex++;
    };

    handleInboundMessage(worldData) {
        var worldSnapshot = this.gameEngine.options.GameWorld.deserialize(this.gameEngine, worldData);
        // console.log(world.stepCount - this.gameEngine.world.stepCount);
        // console.log("last handled input", world.lastHandledInput);

        // release worldBuffer resources
        if (this.worldBuffer.length > 0) {
            this.worldBuffer[this.worldBuffer.length - 1].release();
        }

        this.worldBuffer.push(worldSnapshot);
        if (this.worldBuffer.length >= 5) { //pick a proper buffer length, make it configurable
            this.worldBuffer.shift();
        }

        for (var objId in worldSnapshot.objects) {
            if (worldSnapshot.objects.hasOwnProperty(objId)) {
                this.options.syncStrategy.handleObject(worldSnapshot, objId);
            }
        }
        if (typeof this.gameEngine.worldUpdateHandler === 'function') {
            this.gameEngine.worldUpdateHandler();
        }

        //finally update the stepCount
        this.gameEngine.world.stepCount = worldSnapshot.stepCount;
    };

    handleOutboundInput (){
        for (var x=0; x<this.outboundMessages.length; x++){
            // console.log("sent", this.outboundMessages[x].data.messageIndex, "step", this.outboundMessages[x].data.step);
            this.socket.emit(this.outboundMessages[x].command, this.outboundMessages[x].data);
        }
        this.outboundMessages = [];
    };

}

module.exports = ClientEngine;

},{"./syncStrategies/PlayerSnap":64,"socket.io-client":9}],57:[function(require,module,exports){
"use strict";
const GameWorld = require('./GameWorld');
const Timer = require('./Timer');
const EventEmitter = require('eventemitter3');

class GameEngine{
    constructor(inputOptions){
        //if no GameWorld is specified, use the default one
        this.options = Object.assign({
            GameWorld: GameWorld
        }, inputOptions);

        this.registeredClasses = {}; //todo be refactored into the serializer

        //set up event emitting and interface
        let eventEmitter = new EventEmitter();
        this.on = eventEmitter.on;
        this.once = eventEmitter.once;
        this.emit = eventEmitter.emit;
    }

    initWorld(){
        var that = this;

        this.world = new GameWorld();

        this.timer = new Timer();
        this.timer.play();

        this.on("step", function(){
            that.timer.tick();
        });
    };

    start(){
        this.initWorld();
    };

    step(){
        this.world.stepCount++;
        this.emit("step",this.world.stepCount);
    }

    registerClass(classObj){
        this.registeredClasses[classObj.properties.id] = classObj;
    };

}

module.exports = GameEngine;
},{"./GameWorld":58,"./Timer":61,"eventemitter3":6}],58:[function(require,module,exports){
"use strict";

const Serializable = require("./composables/Serializable");

class GameWorld{

    constructor(){
        this.stepCount = 0;
        this.objects = {};
        this.playerCount = 0;
    }

    release() {
        for (var objId in this.objects) {
            let o = this.objects[objId];
            if (typeof o.release === 'function') {
                o.release();
            }
        }
    }

    static deserialize(gameEngine, worldData){

        var world = new GameWorld();

        var worldDataDV = new DataView(worldData);
        world.stepCount = worldDataDV.getInt32(0);
        var byteOffset = Int32Array.BYTES_PER_ELEMENT;

        world.lastHandledInput = worldDataDV.getInt16(byteOffset);
        byteOffset += Int16Array.BYTES_PER_ELEMENT;

        //go ever the buffer and deserialize items
        while (byteOffset < worldData.byteLength) {
            var objectClassId = worldDataDV.getUint8(byteOffset);
            var objectClass = gameEngine.registeredClasses[objectClassId];

            if (objectClass == null){
                console.warn(`Object with class id ${objectClassId} not found! Did you forget to register it with the game engine?`);
            }

            var objectByteSize = objectClass.getNetSchemeBufferSize(objectClass);

            var object = Serializable.deserialize(objectClass, worldData.slice(byteOffset, byteOffset + objectByteSize));
            world.objects[object.id] = object;
            byteOffset += objectByteSize;

        }

        return world;
    }

}

module.exports = GameWorld;

},{"./composables/Serializable":62}],59:[function(require,module,exports){
/**
 * @author       Richard Davey <rich@photonstorm.com>
 * @copyright    2016 Photon Storm Ltd.
 * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}
 */

/**
 * A Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.
 * The following code creates a point at (0,0):
 * `var myPoint = new Point();`
 * You can also use them as 2D Vectors and you'll find different vector related methods in this class.
 *
 * @class Point
 * @constructor
 * @param {number} [x=0] - The horizontal position of this Point.
 * @param {number} [y=0] - The vertical position of this Point.
 */
var Point = function (x, y) {

    x = x || 0;
    y = y || 0;

    /**
     * @property {number} x - The x value of the point.
     */
    this.x = x;

    /**
     * @property {number} y - The y value of the point.
     */
    this.y = y;

    /**
     * @property {number} type - The const type of this object.
     * @readonly
     */
    this.type = Point;

};

Point.prototype = {

    /**
     * Copies the x and y properties from any given object to this Point.
     *
     * @method Point#copyFrom
     * @param {any} source - The object to copy from.
     * @return {Point} This Point object.
     */
    copyFrom: function (source) {

        return this.setTo(source.x, source.y);

    },

    /**
     * Inverts the x and y values of this Point
     *
     * @method Point#invert
     * @return {Point} This Point object.
     */
    invert: function () {

        return this.setTo(this.y, this.x);

    },

    /**
     * Sets the `x` and `y` values of this Point object to the given values.
     * If you omit the `y` value then the `x` value will be applied to both, for example:
     * `Point.setTo(2)` is the same as `Point.setTo(2, 2)`
     *
     * @method Point#setTo
     * @param {number} x - The horizontal value of this point.
     * @param {number} [y] - The vertical value of this point. If not given the x value will be used in its place.
     * @return {Point} This Point object. Useful for chaining method calls.
     */
    setTo: function (x, y) {

        this.x = x || 0;
        this.y = y || ( (y !== 0) ? this.x : 0 );

        return this;

    },

    /**
     * Sets the `x` and `y` values of this Point object to the given values.
     * If you omit the `y` value then the `x` value will be applied to both, for example:
     * `Point.set(2)` is the same as `Point.set(2, 2)`
     *
     * @method Point#set
     * @param {number} x - The horizontal value of this point.
     * @param {number} [y] - The vertical value of this point. If not given the x value will be used in its place.
     * @return {Point} This Point object. Useful for chaining method calls.
     */
    set: function (x, y) {

        this.x = x || 0;
        this.y = y || ( (y !== 0) ? this.x : 0 );

        return this;

    },

    /**
     * Adds the given x and y values to this Point.
     *
     * @method Point#add
     * @param {number} x - The value to add to Point.x.
     * @param {number} y - The value to add to Point.y.
     * @return {Point} This Point object. Useful for chaining method calls.
     */
    add: function (x, y) {

        this.x += x;
        this.y += y;
        return this;

    },

    /**
     * Subtracts the given x and y values from this Point.
     *
     * @method Point#subtract
     * @param {number} x - The value to subtract from Point.x.
     * @param {number} y - The value to subtract from Point.y.
     * @return {Point} This Point object. Useful for chaining method calls.
     */
    subtract: function (x, y) {

        this.x -= x;
        this.y -= y;
        return this;

    },

    /**
     * Multiplies Point.x and Point.y by the given x and y values. Sometimes known as `Scale`.
     *
     * @method Point#multiply
     * @param {number} x - The value to multiply Point.x by.
     * @param {number} y - The value to multiply Point.x by.
     * @return {Point} This Point object. Useful for chaining method calls.
     */
    multiply: function (x, y) {

        this.x *= x;
        this.y *= y;
        return this;

    },

    /**
     * Divides Point.x and Point.y by the given x and y values.
     *
     * @method Point#divide
     * @param {number} x - The value to divide Point.x by.
     * @param {number} y - The value to divide Point.x by.
     * @return {Point} This Point object. Useful for chaining method calls.
     */
    divide: function (x, y) {

        this.x /= x;
        this.y /= y;
        return this;

    },

    /**
     * Clamps the x value of this Point to be between the given min and max.
     *
     * @method Point#clampX
     * @param {number} min - The minimum value to clamp this Point to.
     * @param {number} max - The maximum value to clamp this Point to.
     * @return {Point} This Point object.
     */
    clampX: function (min, max) {

        this.x = Phaser.Math.clamp(this.x, min, max);
        return this;

    },

    /**
     * Clamps the y value of this Point to be between the given min and max
     *
     * @method Point#clampY
     * @param {number} min - The minimum value to clamp this Point to.
     * @param {number} max - The maximum value to clamp this Point to.
     * @return {Point} This Point object.
     */
    clampY: function (min, max) {

        this.y = Phaser.Math.clamp(this.y, min, max);
        return this;

    },

    /**
     * Clamps this Point object values to be between the given min and max.
     *
     * @method Point#clamp
     * @param {number} min - The minimum value to clamp this Point to.
     * @param {number} max - The maximum value to clamp this Point to.
     * @return {Point} This Point object.
     */
    clamp: function (min, max) {

        this.x = Phaser.Math.clamp(this.x, min, max);
        this.y = Phaser.Math.clamp(this.y, min, max);
        return this;

    },

    /**
     * Creates a copy of the given Point.
     *
     * @method Point#clone
     * @param {Point} [output] Optional Point object. If given the values will be set into this object, otherwise a brand new Point object will be created and returned.
     * @return {Point} The new Point object.
     */
    clone: function (output) {

        if (output === undefined || output === null)
        {
            output = new Point(this.x, this.y);
        }
        else
        {
            output.setTo(this.x, this.y);
        }

        return output;

    },

    /**
     * Copies the x and y properties from this Point to any given object.
     *
     * @method Point#copyTo
     * @param {any} dest - The object to copy to.
     * @return {object} The dest object.
     */
    copyTo: function (dest) {

        dest.x = this.x;
        dest.y = this.y;

        return dest;

    },

    /**
     * Returns the distance of this Point object to the given object (can be a Circle, Point or anything with x/y properties)
     *
     * @method Point#distance
     * @param {object} dest - The target object. Must have visible x and y properties that represent the center of the object.
     * @param {boolean} [round] - Round the distance to the nearest integer (default false).
     * @return {number} The distance between this Point object and the destination Point object.
     */
    distance: function (dest, round) {

        return Point.distance(this, dest, round);

    },

    /**
     * Determines whether the given objects x/y values are equal to this Point object.
     *
     * @method Point#equals
     * @param {Point|any} a - The object to compare with this Point.
     * @return {boolean} A value of true if the x and y points are equal, otherwise false.
     */
    equals: function (a) {

        return (a.x === this.x && a.y === this.y);

    },

    /**
     * Returns the angle between this Point object and another object with public x and y properties.
     *
     * @method Point#angle
     * @param {Point|any} a - The object to get the angle from this Point to.
     * @param {boolean} [asDegrees=false] - Is the given angle in radians (false) or degrees (true)?
     * @return {number} The angle between the two objects.
     */
    angle: function (a, asDegrees) {

        if (asDegrees === undefined) { asDegrees = false; }

        if (asDegrees)
        {
            return Phaser.Math.radToDeg(Math.atan2(a.y - this.y, a.x - this.x));
        }
        else
        {
            return Math.atan2(a.y - this.y, a.x - this.x);
        }

    },

    /**
     * Rotates this Point around the x/y coordinates given to the desired angle.
     *
     * @method Point#rotate
     * @param {number} x - The x coordinate of the anchor point.
     * @param {number} y - The y coordinate of the anchor point.
     * @param {number} angle - The angle in radians (unless asDegrees is true) to rotate the Point to.
     * @param {boolean} [asDegrees=false] - Is the given angle in radians (false) or degrees (true)?
     * @param {number} [distance] - An optional distance constraint between the Point and the anchor.
     * @return {Point} The modified point object.
     */
    rotate: function (x, y, angle, asDegrees, distance) {

        return Point.rotate(this, x, y, angle, asDegrees, distance);

    },

    /**
     * Calculates the length of the Point object.
     *
     * @method Point#getMagnitude
     * @return {number} The length of the Point.
     */
    getMagnitude: function () {

        return Math.sqrt((this.x * this.x) + (this.y * this.y));

    },

    /**
     * Calculates the length squared of the Point object.
     *
     * @method Point#getMagnitudeSq
     * @return {number} The length ^ 2 of the Point.
     */
    getMagnitudeSq: function () {

        return (this.x * this.x) + (this.y * this.y);

    },

    /**
     * Alters the length of the Point without changing the direction.
     *
     * @method Point#setMagnitude
     * @param {number} magnitude - The desired magnitude of the resulting Point.
     * @return {Point} This Point object.
     */
    setMagnitude: function (magnitude) {

        return this.normalize().multiply(magnitude, magnitude);

    },

    /**
     * Alters the Point object so that its length is 1, but it retains the same direction.
     *
     * @method Point#normalize
     * @return {Point} This Point object.
     */
    normalize: function () {

        if (!this.isZero())
        {
            var m = this.getMagnitude();
            this.x /= m;
            this.y /= m;
        }

        return this;

    },

    /**
     * Determine if this point is at 0,0.
     *
     * @method Point#isZero
     * @return {boolean} True if this Point is 0,0, otherwise false.
     */
    isZero: function () {

        return (this.x === 0 && this.y === 0);

    },

    /**
     * The dot product of this and another Point object.
     *
     * @method Point#dot
     * @param {Point} a - The Point object to get the dot product combined with this Point.
     * @return {number} The result.
     */
    dot: function (a) {

        return ((this.x * a.x) + (this.y * a.y));

    },

    /**
     * The cross product of this and another Point object.
     *
     * @method Point#cross
     * @param {Point} a - The Point object to get the cross product combined with this Point.
     * @return {number} The result.
     */
    cross: function (a) {

        return ((this.x * a.y) - (this.y * a.x));

    },

    /**
     * Make this Point perpendicular (90 degrees rotation)
     *
     * @method Point#perp
     * @return {Point} This Point object.
     */
    perp: function () {

        return this.setTo(-this.y, this.x);

    },

    /**
     * Make this Point perpendicular (-90 degrees rotation)
     *
     * @method Point#rperp
     * @return {Point} This Point object.
     */
    rperp: function () {

        return this.setTo(this.y, -this.x);

    },

    /**
     * Right-hand normalize (make unit length) this Point.
     *
     * @method Point#normalRightHand
     * @return {Point} This Point object.
     */
    normalRightHand: function () {

        return this.setTo(this.y * -1, this.x);

    },

    /**
     * Math.floor() both the x and y properties of this Point.
     *
     * @method Point#floor
     * @return {Point} This Point object.
     */
    floor: function () {

        return this.setTo(Math.floor(this.x), Math.floor(this.y));

    },

    /**
     * Math.ceil() both the x and y properties of this Point.
     *
     * @method Point#ceil
     * @return {Point} This Point object.
     */
    ceil: function () {

        return this.setTo(Math.ceil(this.x), Math.ceil(this.y));

    },

    /**
     * Returns a string representation of this object.
     *
     * @method Point#toString
     * @return {string} A string representation of the instance.
     */
    toString: function () {

        return '[{Point (x=' + this.x + ' y=' + this.y + ')}]';

    }

};

Point.prototype.constructor = Point;

/**
 * Adds the coordinates of two points together to create a new point.
 *
 * @method Point.add
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.add = function (a, b, out) {

    if (out === undefined) { out = new Point(); }

    out.x = a.x + b.x;
    out.y = a.y + b.y;

    return out;

};

/**
 * Subtracts the coordinates of two points to create a new point.
 *
 * @method Point.subtract
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.subtract = function (a, b, out) {

    if (out === undefined) { out = new Point(); }

    out.x = a.x - b.x;
    out.y = a.y - b.y;

    return out;

};

/**
 * Multiplies the coordinates of two points to create a new point.
 *
 * @method Point.multiply
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.multiply = function (a, b, out) {

    if (out === undefined) { out = new Point(); }

    out.x = a.x * b.x;
    out.y = a.y * b.y;

    return out;

};

/**
 * Divides the coordinates of two points to create a new point.
 *
 * @method Point.divide
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.divide = function (a, b, out) {

    if (out === undefined) { out = new Point(); }

    out.x = a.x / b.x;
    out.y = a.y / b.y;

    return out;

};

/**
 * Determines whether the two given Point objects are equal. They are considered equal if they have the same x and y values.
 *
 * @method Point.equals
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @return {boolean} A value of true if the Points are equal, otherwise false.
 */
Point.equals = function (a, b) {

    return (a.x === b.x && a.y === b.y);

};

/**
 * Returns the angle between two Point objects.
 *
 * @method Point.angle
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @return {number} The angle between the two Points.
 */
Point.angle = function (a, b) {

    // return Math.atan2(a.x * b.y - a.y * b.x, a.x * b.x + a.y * b.y);
    return Math.atan2(a.y - b.y, a.x - b.x);

};

/**
 * Creates a negative Point.
 *
 * @method Point.negative
 * @param {Point} a - The first Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.negative = function (a, out) {

    if (out === undefined) { out = new Point(); }

    return out.setTo(-a.x, -a.y);

};

/**
 * Adds two 2D Points together and multiplies the result by the given scalar.
 *
 * @method Point.multiplyAdd
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {number} s - The scaling value.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.multiplyAdd = function (a, b, s, out) {

    if (out === undefined) { out = new Point(); }

    return out.setTo(a.x + b.x * s, a.y + b.y * s);

};

/**
 * Interpolates the two given Points, based on the `f` value (between 0 and 1) and returns a new Point.
 *
 * @method Point.interpolate
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {number} f - The level of interpolation between the two points. Indicates where the new point will be, along the line between pt1 and pt2. If f=1, pt1 is returned; if f=0, pt2 is returned.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.interpolate = function (a, b, f, out) {

    if (out === undefined) { out = new Point(); }

    return out.setTo(a.x + (b.x - a.x) * f, a.y + (b.y - a.y) * f);

};

/**
 * Return a perpendicular vector (90 degrees rotation)
 *
 * @method Point.perp
 * @param {Point} a - The Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.perp = function (a, out) {

    if (out === undefined) { out = new Point(); }

    return out.setTo(-a.y, a.x);

};

/**
 * Return a perpendicular vector (-90 degrees rotation)
 *
 * @method Point.rperp
 * @param {Point} a - The Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.rperp = function (a, out) {

    if (out === undefined) { out = new Point(); }

    return out.setTo(a.y, -a.x);

};

/**
 * Returns the euclidian distance of this Point object to the given object (can be a Circle, Point or anything with x/y properties).
 *
 * @method Point.distance
 * @param {object} a - The target object. Must have visible x and y properties that represent the center of the object.
 * @param {object} b - The target object. Must have visible x and y properties that represent the center of the object.
 * @param {boolean} [round=false] - Round the distance to the nearest integer.
 * @return {number} The distance between this Point object and the destination Point object.
 */
Point.distance = function (a, b, round) {

    var distance = Phaser.Math.distance(a.x, a.y, b.x, b.y);
    return round ? Math.round(distance) : distance;

};

/**
 * Project two Points onto another Point.
 *
 * @method Point.project
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.project = function (a, b, out) {

    if (out === undefined) { out = new Point(); }

    var amt = a.dot(b) / b.getMagnitudeSq();

    if (amt !== 0)
    {
        out.setTo(amt * b.x, amt * b.y);
    }

    return out;

};

/**
 * Project two Points onto a Point of unit length.
 *
 * @method Point.projectUnit
 * @param {Point} a - The first Point object.
 * @param {Point} b - The second Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.projectUnit = function (a, b, out) {

    if (out === undefined) { out = new Point(); }

    var amt = a.dot(b);

    if (amt !== 0)
    {
        out.setTo(amt * b.x, amt * b.y);
    }

    return out;

};

/**
 * Right-hand normalize (make unit length) a Point.
 *
 * @method Point.normalRightHand
 * @param {Point} a - The Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.normalRightHand = function (a, out) {

    if (out === undefined) { out = new Point(); }

    return out.setTo(a.y * -1, a.x);

};

/**
 * Normalize (make unit length) a Point.
 *
 * @method Point.normalize
 * @param {Point} a - The Point object.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.normalize = function (a, out) {

    if (out === undefined) { out = new Point(); }

    var m = a.getMagnitude();

    if (m !== 0)
    {
        out.setTo(a.x / m, a.y / m);
    }

    return out;

};

/**
 * Rotates a Point object, or any object with exposed x/y properties, around the given coordinates by
 * the angle specified. If the angle between the point and coordinates was 45 deg and the angle argument
 * is 45 deg then the resulting angle will be 90 deg, as the angle argument is added to the current angle.
 *
 * The distance allows you to specify a distance constraint for the rotation between the point and the
 * coordinates. If none is given the distance between the two is calculated and used.
 *
 * @method Point.rotate
 * @param {Point} a - The Point object to rotate.
 * @param {number} x - The x coordinate of the anchor point
 * @param {number} y - The y coordinate of the anchor point
 * @param {number} angle - The angle in radians (unless asDegrees is true) to rotate the Point by.
 * @param {boolean} [asDegrees=false] - Is the given angle in radians (false) or degrees (true)?
 * @param {number} [distance] - An optional distance constraint between the Point and the anchor.
 * @return {Point} The modified point object.
 */
Point.rotate = function (a, x, y, angle, asDegrees, distance) {

    if (asDegrees) { angle = Phaser.Math.degToRad(angle); }

    if (distance === undefined)
    {
        a.subtract(x, y);

        var s = Math.sin(angle);
        var c = Math.cos(angle);

        var tx = c * a.x - s * a.y;
        var ty = s * a.x + c * a.y;

        a.x = tx + x;
        a.y = ty + y;
    }
    else
    {
        var t = angle + Math.atan2(a.y - y, a.x - x);
        a.x = x + distance * Math.cos(t);
        a.y = y + distance * Math.sin(t);
    }

    return a;

};

/**
 * Calculates centroid (or midpoint) from an array of points. If only one point is provided, that point is returned.
 *
 * @method Point.centroid
 * @param {Point[]} points - The array of one or more points.
 * @param {Point} [out] - Optional Point to store the value in, if not supplied a new Point object will be created.
 * @return {Point} The new Point object.
 */
Point.centroid = function (points, out) {

    if (out === undefined) { out = new Point(); }

    if (Object.prototype.toString.call(points) !== '[object Array]')
    {
        throw new Error("Point. Parameter 'points' must be an array");
    }

    var pointslength = points.length;

    if (pointslength < 1)
    {
        throw new Error("Point. Parameter 'points' array must not be empty");
    }

    if (pointslength === 1)
    {
        out.copyFrom(points[0]);
        return out;
    }

    for (var i = 0; i < pointslength; i++)
    {
        Point.add(out, points[i], out);
    }

    out.divide(pointslength, pointslength);

    return out;

};

/**
 * Parses an object for x and/or y properties and returns a new Point with matching values.
 * If the object doesn't contain those properties a Point with x/y of zero will be returned.
 *
 * @method Point.parse
 * @static
 * @param {object} obj - The object to parse.
 * @param {string} [xProp='x'] - The property used to set the Point.x value.
 * @param {string} [yProp='y'] - The property used to set the Point.y value.
 * @return {Point} The new Point object.
 */
Point.parse = function(obj, xProp, yProp) {

    xProp = xProp || 'x';
    yProp = yProp || 'y';

    var point = new Point();

    if (obj[xProp])
    {
        point.x = parseInt(obj[xProp], 10);
    }

    if (obj[yProp])
    {
        point.y = parseInt(obj[yProp], 10);
    }

    return point;

};

module.exports = Point;
},{}],60:[function(require,module,exports){
"use strict";

const Gameloop = require('node-gameloop');
const Serializable= require('./composables/Serializable');

class ServerEngine{

    constructor(io, gameEngine, inputOptions){
        this.options = Object.assign({
            updateRate: 6,
            frameRate: 60,
            debug: {
                serverSendLag: false
            }
        }, inputOptions);

        this.io = io;
        this.gameEngine = gameEngine;

        this.connectedPlayers = {};


        io.on('connection', this.onPlayerConnected.bind(this));
    }

    start(){
        var that=this;
        this.gameEngine.start();

        this.gameLoopId = Gameloop.setGameLoop(function(){
            that.step();

        }, 1000 / this.options.frameRate);
    }

    step(){
        var that = this;

        this.serverTime = (new Date().getTime());
        this.gameEngine.step();
        if (this.gameEngine.world.stepCount % this.options.updateRate == 0){

            for (let socketId in this.connectedPlayers) {
                if (this.connectedPlayers.hasOwnProperty(socketId)) {
                    let playerMessage =  this.serializeWorld(socketId);

                    //simulate server send lag
                    if (this.options.debug.serverSendLag !== false){
                        setTimeout(function(){
                            //verify again that the player exists
                            if (that.connectedPlayers[socketId]) {
                                that.connectedPlayers[socketId].emit('worldUpdate', playerMessage);
                            }
                        }, that.options.debug.serverSendLag)
                    }
                    else{
                        this.connectedPlayers[socketId].emit('worldUpdate',playerMessage);
                    }

                }
            }


        }
    };

    serializeWorld(socketId){
        var bufferSize = 0;
        var bufferOffset = 0;
        var world = this.gameEngine.world;

        //count the object byte size to determine what buffer size do we need
        for (let objId in world.objects) {
            if (world.objects.hasOwnProperty(objId)) {
                let obj = world.objects[objId];
                let objClass = obj.class;

                //reminder - object is made from its class id (Uint8) and its payload
                let netSchemeBufferSize = Serializable.getNetSchemeBufferSize(obj.class);
                bufferSize += netSchemeBufferSize;
            }
        }

        //world buffer starts with step count followed by last handled input for player
        bufferSize += Int32Array.BYTES_PER_ELEMENT + Int16Array.BYTES_PER_ELEMENT;
        var worldBuffer = new ArrayBuffer(bufferSize);
        var worldBufferDV = new DataView(worldBuffer);

        //write step count
        worldBufferDV.setInt32(bufferOffset,world.stepCount);
        bufferOffset += Int32Array.BYTES_PER_ELEMENT;

        //write handled input
        worldBufferDV.setInt16(bufferOffset, this.connectedPlayers[socketId].lastHandledInput);
        bufferOffset += Int16Array.BYTES_PER_ELEMENT;

        for (let objId in world.objects) {
            if (world.objects.hasOwnProperty(objId)) {
                let obj = world.objects[objId];
                let netSchemeBufferSize = Serializable.getNetSchemeBufferSize(obj.class);

                var serializedObj = obj.serialize();
                let serializedObjDV = new DataView(serializedObj);

                //go over the serialized object, writing it byte by byte to the world buffer
                for (let y=0; y<netSchemeBufferSize; y++){
                    worldBufferDV.setInt8(bufferOffset + y , serializedObjDV.getInt8(y));
                }
                bufferOffset += netSchemeBufferSize;
            }
        }

        return worldBuffer;
    };

    onPlayerConnected(socket){
        var that=this;

        console.log('Client connected');

        //save player
        this.connectedPlayers[socket.id] = socket;
        var playerId = socket.playerId = ++this.gameEngine.world.playerCount;
        socket.lastHandledInput = null;

        console.log("Client Connected", socket.id);


        socket.emit('playerJoined',{
            playerId: playerId
        });

        socket.on('disconnect', function(){
            that.onPlayerDisconnected(socket.id, playerId)
        });


        //todo rename, use number instead of name
        socket.on('move', function(data){
            that.onReceivedInput(data, socket)
        });
    };

    onPlayerDisconnected(socketId, playerId){
        delete this.connectedPlayers[socketId];
        console.log('Client disconnected')
    };

    onReceivedInput(data, socket){
        if (this.connectedPlayers[socket.id]) {
            this.connectedPlayers[socket.id].lastHandledInput = data.messageIndex;
        }
        // console.log("last handled input", this.connectedPlayers[socket.id].lastHandledInput);
    }
}

module.exports = ServerEngine;

},{"./composables/Serializable":62,"node-gameloop":7}],61:[function(require,module,exports){
"use strict";

class Timer {
    
    constructor(){
        this.currentTime=0;
        this.isActive=false;
        this.idCount = 0;
    
        this.events={};
    };

    play(){
        this.isActive=true;
    };
             
    tick(step){
        var event,eventId;

        if (this.isActive) {
            this.currentTime++;

            for (eventId in this.events){
                event = this.events[eventId];
                if (event){
                    if (event.type=="repeat"){
                        if ((this.currentTime-event.startOffset) % event.time == 0){
                            event.callback.apply(event.thisContext,event.args);
                        }
                    }
                    if(event.type=="single"){
                        if ((this.currentTime-event.startOffset) % event.time == 0) {
                            event.callback.apply(event.thisContext,event.args);
                            event.destroy();
                        }
                    }
    
                }
    
            }
        }
    };

    destroyEvent(eventId){
        delete this.events[eventId];
    };

    loop(time,callback){
        var timerEvent = new TimerEvent(this,
            TimerEvent.TYPES.repeat,
            time,
            callback
        );

        this.events[timerEvent.id]=timerEvent;

        return timerEvent;
    };

    add(time,callback,thisContext,args){
        var timerEvent = new TimerEvent(this,
            TimerEvent.TYPES.single,
            time,
            callback,
            thisContext,
            args
        );

        this.events[timerEvent.id]=timerEvent;
        return timerEvent;
    };

    destroy(id){
        delete this.events[id];
    }
}

class TimerEvent{
    
    constructor(timer,type,time,callback,thisContext,args){
        this.id = ++timer.idCount;
        this.timer=timer;
        this.type=type;
        this.time=time;
        this.callback=callback;
        this.startOffset=timer.currentTime;
        this.thisContext=thisContext;
        this.args=args;

        this.destroy=function(){
            this.timer.destroy(this.id);
        }
    };
}

TimerEvent.TYPES={
    repeat: "repeat",
    single: "single"
};

module.exports = Timer;
},{}],62:[function(require,module,exports){
"use strict";

var Point = require("../Point");

class Serializable{

    serialize(){
        //todo define behaviour when a netScheme is undefined
        if (typeof this.class.netScheme == "undefined"){
            console.warn("no netScheme defined! This will result in awful performance");
        }

        //buffer has one Uint8Array for class id, then payload
        var dataBuffer = new ArrayBuffer(this.class.getNetSchemeBufferSize(this.class));
        var dataView = new DataView(dataBuffer);

        //first set the id of the class, so that the deserializer can fetch information about it
        dataView.setUint8(0, this.class.properties.id);
        //advance the offset counter
        var dataByteOffset = Uint8Array.BYTES_PER_ELEMENT;

        for (var property in this.class.netScheme) {
            if (this.class.netScheme.hasOwnProperty(property)) {

                Serializable.writeDataView(dataView, this[property], dataByteOffset, this.class.netScheme[property]);

                dataByteOffset += Serializable.getTypeByteSize(this.class.netScheme[property]);
            }
        }

        return dataBuffer;
    };

    static deserialize(classObj, dataBuffer){
        var dataBufferIndex = Uint8Array.BYTES_PER_ELEMENT; //object starts with classId
        var dataView = new DataView(dataBuffer);

        var obj = new classObj();
        for (var property in classObj.netScheme) {
            if (classObj.netScheme.hasOwnProperty(property)) {

                let read = Serializable.readDataView(dataView, dataBufferIndex, classObj.netScheme[property]);
                obj[property] = read.data;

                dataBufferIndex += read.bufferSize;
            }
        }
        return obj;
    };

    static getNetSchemeBufferSize(objClass){
        
        if (typeof objClass.netSchemeBufferSize=="undefined"){
            objClass.netSchemeBufferSize = Uint8Array.BYTES_PER_ELEMENT; //every scheme starts with the class id
            for (var property in objClass.netScheme) {
                if (objClass.netScheme.hasOwnProperty(property)) {
                    //count the bytesize required for the netScheme buffer
                    objClass.netSchemeBufferSize += Serializable.getTypeByteSize(objClass.netScheme[property]);
                }
            }
        }

        return objClass.netSchemeBufferSize;
    };

    static writeDataView(dataView, value, bufferOffset, netSchemProp){

        if (netSchemProp.type == Serializable.TYPES.FLOAT32){
            dataView.setFloat32(bufferOffset, value);
        }
        if (netSchemProp.type == Serializable.TYPES.INT16){
             dataView.setInt16(bufferOffset, value);
        }
        else if (netSchemProp.type == Serializable.TYPES.INT8){
            dataView.setInt8(bufferOffset, value);
        }
        else if (netSchemProp.type == Serializable.TYPES.UINT8){
            dataView.setUint8(bufferOffset, value);
        }
        else if (netSchemProp.type == Serializable.TYPES.POINT){

            //TODO write Point

            // let readX = Serializable.readDataView(dataView,bufferOffset, {type: netSchemProp.valueType});
            // let readY = Serializable.readDataView(dataView, readX.bufferSize , {type: netSchemProp.valueType});
            //
            // data = new Point(readX.value, readY.value);
            // bufferSize = readX.bufferSize*2;
        }
    }

    static readDataView(dataView, bufferIndex, netSchemProp){
        let data, bufferSize;

        if (netSchemProp.type == Serializable.TYPES.FLOAT32){
            data = dataView.getFloat32(bufferIndex);
            bufferSize = Float32Array.BYTES_PER_ELEMENT;
        }
        if (netSchemProp.type == Serializable.TYPES.INT16){
            data = dataView.getInt16(bufferIndex);
            bufferSize = Int16Array.BYTES_PER_ELEMENT;
        }
        else if (netSchemProp.type == Serializable.TYPES.INT8){
            data = dataView.getInt8(bufferIndex);
            bufferSize = bufferSize = Float32Array.BYTES_PER_ELEMENT;
        }
        else if (netSchemProp.type == Serializable.TYPES.UINT8){
            data = dataView.getUint8(bufferIndex);
            bufferSize = Uint8Array.BYTES_PER_ELEMENT;
        }
        else if (netSchemProp.type == Serializable.TYPES.POINT){
            let readX = Serializable.readDataView(dataView,bufferIndex, {type: netSchemProp.valueType});
            let readY = Serializable.readDataView(dataView, readX.bufferSize , {type: netSchemProp.valueType});

            data = new Point(readX.value, readY.value);
            bufferSize = readX.bufferSize*2;
        }

        return {data: data, bufferSize: bufferSize}
    }

    static getTypeByteSize(netSchemeProp){
        switch (netSchemeProp.type){
            case Serializable.TYPES.FLOAT32: {
                return Float32Array.BYTES_PER_ELEMENT
            }
            case Serializable.TYPES.INT16: {
                return Int16Array.BYTES_PER_ELEMENT
            }
            case Serializable.TYPES.INT8: {
                return Int8Array.BYTES_PER_ELEMENT
            }
            case Serializable.TYPES.UINT8: {
                return Uint8Array.BYTES_PER_ELEMENT
            }
            case Serializable.TYPES.POINT: {
                return Serializable.getTypeByteSize({ type: netSchemeProp.valueType}) * 2;

            }

        }

    }
};

Serializable.TYPES = {
    FLOAT32: "FLOAT32",
    INT16: "INT16",
    INT8: "INT8",
    UINT8: "UINT8",
    POINT: "POINT"
};

module.exports = Serializable;
},{"../Point":59}],63:[function(require,module,exports){
"use strict";

var SyncStrategy = require("./syncStrategy");

class PlayerGradualSnap extends SyncStrategy{

}

module.exports = PlayerGradualSnap;

},{"./syncStrategy":65}],64:[function(require,module,exports){
"use strict";

var SyncStrategy = require("./syncStrategy");

/**
 * Snaps every object to its updated position from the server. Might cause rubber-banding on lagged connections
 */
class PlayerSnap extends SyncStrategy{

    constructor(gameEngine, inputOptions){
        super(gameEngine, inputOptions);
    }

    handleObject(worldSnapshot, objId){
        //update player character
        var localObj = this.gameEngine.world.objects[objId];

        if (localObj && localObj.isPlayerControlled === true) {

            //todo generalize property assignment
            localObj.x = worldSnapshot.objects[objId].x;
            localObj.y = worldSnapshot.objects[objId].y;
            localObj.velX = worldSnapshot.objects[objId].velX;
            localObj.velY = worldSnapshot.objects[objId].velY;
            localObj.velocity.set(worldSnapshot.objects[objId].velX, worldSnapshot.objects[objId].velY);
            localObj.angle = worldSnapshot.objects[objId].angle;
        }
    }

}

module.exports = PlayerSnap;

},{"./syncStrategy":65}],65:[function(require,module,exports){
"use strict";

class SyncStrategy{

    constructor(gameEngine, inputOptions){
        this.gameEngine = gameEngine;

        this.options = Object.assign({}, inputOptions);
    }


    /**
     * Defines how to handle an object coming from a worldUpdate originating in the server
     * @param worldSnapshot
     * @param objId
     */
    handleObject(worldSnapshot, objId){}
}

module.exports = SyncStrategy;
},{}],66:[function(require,module,exports){
"use strict";
const Point= require('incheon').Point;
const Serializable= require('incheon').Composables.Serializable;

class Fighter extends Serializable {

    static get properties() {
        return  {
            id: 7, // class id
            name: "fighter"
        }
    }

    static get netScheme() {
        return {
            id: { type: Serializable.TYPES.UINT8 },
            x: { type: Serializable.TYPES.INT16 },
            y: { type: Serializable.TYPES.INT16 },
            velX: { type: Serializable.TYPES.FLOAT32 },
            velY: { type: Serializable.TYPES.FLOAT32 },
            angle: { type: Serializable.TYPES.INT16 }
        }
    }

    constructor(id, x, y) {
        super();
        this.id = id; //instance id
        this.x = x;
        this.y = y;
        this.velX = 0;
        this.velY = 0;

        /*
        TODO: remove these
        this.angle = 90;
        this.rotationSpeed = 3;
        this.acceleration = 0.1;
        this.deceleration = 0.99;
        this.maxSpeed = 2;
        this.temp={ accelerationVector: new Point() };
        */

        this.class = Fighter;
    };

    destroy() {
        if (this.physicalObject) {
            this.sumo3D.removeObject(this.physicalObject);
        }
    }

    refreshPhysics(sumo3D, keepMovement) {
        this.sumo3D = sumo3D;
        if (this.physicalObject) {
            if (keepMovement) {
                let pos = this.physicalObject.position;
                let vel = this.physicalObject.getLinearVelocity();
                this.x = pos.x;
                this.y = -pos.y;
                this.velX = vel.x;
                this.velY = -vel.y;
            }
            this.sumo3D.removeObject(this.physicalObject);
        }
        this.physicalObject = this.sumo3D.addObject(this.playerId);
        this.physicalObject.position.set(this.x, 0, -this.y);
        this.physicalObject.setLinearVelocity(new sumo3D.THREE.Vector3(this.velX, 0, - this.velY));
    }

    step(worldSettings) {

        if (this.physicalObject) {
            let pos = this.physicalObject.position;
            let vel = this.physicalObject.getLinearVelocity();

            if (this.x !== pos.x) {
                console.log(`updating pos vel ${pos.x} ${-pos.y} ${vel.x} ${-vel.y}`);
            }
            this.x = pos.x;
            this.y = -pos.y;
            this.velX = vel.x;
            this.velY = -vel.y;
        }

        // handle next move
        if (this.nextMove) { 
            console.log(`Fighter processing move ${JSON.stringify(this.nextMove)}`);

            // calculate the direction of the force from the input
            //  - the screen's X coincides with the scene X
            //  - the screen's Y coincides with the scene -Z
            //  - the screen does not control Y
            var moveDirection = new this.sumo3D.THREE.Vector3(this.nextMove.input.touchX - this.x, 0, (-this.nextMove.input.touchY) - this.y);

            // apply a central impulse
            console.log(`applying impulse towards ${JSON.stringify(moveDirection)}`);
            this.physicalObject.applyCentralImpulse(moveDirection)
            this.nextMove = null;
        }
    }
}

module.exports = Fighter;


},{"incheon":5}],67:[function(require,module,exports){
"use strict";


class Sumo3D {

    // constructor
    constructor() {
        this.objects = {}
        this.scene = null;
        this.camera = null;
        this.renderer = null;
    }

    // setup the 3D scene
    init() {

        // extra work if we need to render (client side only)
        if ((typeof window !== 'undefined') && document) {

            console.log('setting up client-side scene');

            // setup the scene
            this.scene = new Physijs.Scene();

            // setup camera 
            this.camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 0.1, 1000 );
            this.camera.position.set(0, 50, 5);
            this.camera.up = new THREE.Vector3(0,1,0);
            this.camera.lookAt(new THREE.Vector3(0, 0, 0));
            this.scene.add(this.camera);

            // setup light
            var pointLight = new THREE.PointLight(0x0033ff, 3, 150);
            pointLight.position.set( 0, 20, 0 );
            this.scene.add(pointLight);

            // setup the renderer and add the canvas to the body
            this.renderer = new THREE.WebGLRenderer({ antialias: true });
            this.renderer.setPixelRatio( window.devicePixelRatio );
            this.renderer.setSize( window.innerWidth, window.innerHeight );
            document.getElementById( 'viewport' ).appendChild( this.renderer.domElement );

            // TODO: the following two lines of code were created as part of physijs attemp
            this.THREE = THREE;
            this.Physijs = Physijs;
        } else {
            let THREE = require('./server/lib/three.js');
            let Ammo = require('./server/lib/ammo.js');
            let Physijs = require('./server/lib/physi.js')(THREE, Ammo);
            this.scene = new Physijs.Scene();
            this.THREE = THREE;
            this.Physijs = Physijs;
        }

        this.scene.setGravity(new this.THREE.Vector3(0, 0, 0));
    }

    // single step
    draw() {
        this.scene.simulate();
        if (this.renderer) {
            this.renderer.render(this.scene, this.camera);
        }
    }

    // add one object
    addObject(id) {

        // setup a single sphere
        let sphereGeometry = new this.THREE.SphereGeometry(3, 50, 50, 0, Math.PI * 2, 0, Math.PI * 2);
        let sphereMaterial = new this.THREE.MeshNormalMaterial();
        let sphere = new this.Physijs.SphereMesh( sphereGeometry, sphereMaterial );
        this.scene.add(sphere);
        return this.objects[id] = sphere;
    }

    removeObject(o) {
        this.scene.remove(o);
    }
}

module.exports = Sumo3D;

},{"./server/lib/ammo.js":71,"./server/lib/physi.js":72,"./server/lib/three.js":74}],68:[function(require,module,exports){
const ClientEngine = require('incheon').ClientEngine;
const GameWorld = require('incheon').GameWorld;
const Fighter = require('./Fighter');



// The Sumo client-side engine
class SumoClientEngine extends ClientEngine{

    // constructor
    constructor(gameEngine){
        super(gameEngine);
        this.verbose = true;
        this.options.syncStrategy = {
            handleObject: function() {}
        }
    }

    // start then client engine
    start(){
        super.start();
        if (this.verbose) console.log(`starting client, registering input handlers`);

        //  Game input
        let that = this;
        var el = document.getElementsByTagName("body")[0];
        el.addEventListener("click", function( event ) {
            console.log(`click x-y = ${event.clientX} - ${event.clientY}`);
            console.log(`on game plane  ${event.clientX - window.innerWidth / 2  }`);
            console.log(`on game plane  ${window.innerHeight/2 - event.clientY }`);
            that.touchData = event;
        }, false);
    }

    // a single client step processes the inputs and
    // updates the physics engine
    step(){


        // important to process inputs before running the game engine loop
        this.processInputs();
        super.step();

        // update player object
        var world = this.gameEngine.world;
        for (var objId in world.objects) {
            if (world.objects.hasOwnProperty(objId)) {
                if (this.playerId == objId){
                    let objectData = world.objects[objId];

                }
            }
        }

        //todo alter step count based on lag
        var stepToPlay = this.gameEngine.world.stepCount - 6;
        var previousWorldIndex;
        var nextWorldIndex;
        var previousWorld = null;
        var nextWorld = null;


        // get two world snapshots that occur, one before current step,
        // and one equal to or immediately greater than current step
        for (let x=0; x<this.worldBuffer.length; x++ ){
            if (this.worldBuffer[x].stepCount < stepToPlay){
                previousWorld = this.worldBuffer[x];
                previousWorldIndex = x;
            }
            if (this.worldBuffer[x].stepCount >= stepToPlay){
                nextWorld = this.worldBuffer[x];
                nextWorldIndex = x;
                break;
            }
        }

        // determine current positions by interpolating 
        // between the two worlds
        if (!previousWorld || !nextWorld)
            return;
        console.log(`STEP START: ${stepToPlay} prev-next ${previousWorld.stepCount} ${nextWorld.stepCount}`); 

        // step 1: create new objects, interpolate existing objects
        for (let objId in nextWorld.objects) {
            if (nextWorld.objects.hasOwnProperty(objId)) {
                let prevObj = previousWorld.objects[objId];
                let nextObj = nextWorld.objects[objId];

                //todo refactor
                if (prevObj == null) {
                    prevObj = nextObj;
                }

                // if the object is new, add it
                if (!this.gameEngine.world.objects.hasOwnProperty(objId)) {
                    console.log(`adding new object ${objId}`);
                    let localObj = this.gameEngine.world.objects[objId] = new Fighter(nextObj.id, nextObj.x, nextObj.y);
                    localObj.velX = nextObj.velX;
                    localObj.velY = nextObj.velY;
                    localObj.isPlayerControlled = (this.playerId == nextObj.id);
                }

                // update positions with interpolation
                // if the object is not self
                //if (this.playerId != nextObj.id) {

                    var playPercentage = (stepToPlay - previousWorld.stepCount)/(nextWorld.stepCount - previousWorld.stepCount);

                    world.objects[objId].x = (nextObj.x - prevObj.x) * playPercentage + prevObj.x;
                    world.objects[objId].y = (nextObj.y - prevObj.y) * playPercentage + prevObj.y;
                //}
            }
        }

        // step 2: destroy unneeded objects
        for (let objId in previousWorld.objects) {
            if (previousWorld.objects.hasOwnProperty(objId) && !nextWorld.objects.hasOwnProperty(objId)) {
                console.log(`destroying unneeded ${objId}`);
                world.objects[objId].destroy();
                delete world.objects[objId];
            }
        }

        // step 3: refresh physics for objects that survived
        for (let objId in world.objects) {
            if (world.objects.hasOwnProperty(objId)) {
                let obj = world.objects[objId];
                obj.refreshPhysics(this.gameEngine.sumo3D);
                console.log(`refreshing ${objId}`);
            }
        }

    }

    processInputs(){
        if (this.touchData) {
            let input = { 
                touchX: this.touchData.clientX - window.innerWidth / 2,
                touchY: window.innerHeight / 2 - this.touchData.clientY
            };
            console.log(`sending input to server ${JSON.stringify(input)}`);
            this.sendInput(input);
            this.touchData = null;
        }
    }

}


module.exports = SumoClientEngine;

},{"./Fighter":66,"incheon":5}],69:[function(require,module,exports){
"use strict";
const GameEngine = require('incheon').GameEngine;
const Fighter = require('./Fighter');
const Point= require('incheon').Point;
const Sumo3D = require('./Sumo3D');

class SumoGameEngine extends GameEngine {

    constructor() {
        super();
        this.registerClass(Fighter);
        this.sumo3D = new Sumo3D();
        this.sumo3D.init();
    }
    
    start() {
        super.start();

        // TODO: refactor world settings
        this.worldSettings = {
            width: 800,
            height: 600
        };
    };

    step() {
        this.world.stepCount++;
        for (var objId in this.world.objects) {
            if (this.world.objects.hasOwnProperty(objId)) {
                this.world.objects[objId].step(this.worldSettings);
            }
        }
    };

    frameTick() {
        this.sumo3D.draw();
    }

    makeFighter(id) {
        if (id in this.world.objects){
            console.log("warning, object with id ", id, " already exists");
            return null;
        }

        // create a fighter for this client
        let x = Math.random() * 10;
        let y = Math.random() * 10;
        var fighter = new Fighter(id, x, y);
        fighter.refreshPhysics(this.sumo3D);
        this.world.objects[id] = fighter;

        return fighter;
    };

    processInput(inputData, playerId){

        console.log(`game engine processing input ${JSON.stringify(inputData)}`);
        var fighter = this.world.objects[playerId];
        
        if (fighter)
            fighter.nextMove = inputData;
    };

}

module.exports = SumoGameEngine;

},{"./Fighter":66,"./Sumo3D":67,"incheon":5}],70:[function(require,module,exports){
const SumoGameEngine = require('./SumoGameEngine');
const SumoClientEngine = require('./SumoClientEngine');

let gameEngine = new SumoGameEngine();
let sumoClientEngine = new SumoClientEngine(gameEngine);
let startEpoch = (new Date()).getTime();
let currentClientStep = 0;
let stepRate = 60; // number of steps per second
let handleStepInterval = 5;  // at which interval are steps actually handled


// on each render frame
function clientStep() {
    gameEngine.frameTick();

    let currentEpoch = (new Date()).getTime();
    if (currentEpoch > (startEpoch + currentClientStep * (1000/stepRate))) {
        currentClientStep++;
        if (currentClientStep % handleStepInterval === 0) {
            sumoClientEngine.step();
        }
    }
    window.requestAnimationFrame(clientStep);
}


// start the client and kick off the infinite render loop
sumoClientEngine.start();
window.requestAnimationFrame(clientStep);


},{"./SumoClientEngine":68,"./SumoGameEngine":69}],71:[function(require,module,exports){
(function (process,__dirname){
function aa(a){throw a}var fa=void 0,ia=!0,na=null,oa=!1;function pa(){return(function(){})}try{this.Module=Module}catch(aaa){this.Module=Module={}}var qa="object"===typeof process,sa="object"===typeof window,va="function"===typeof importScripts,baa=!sa&&!qa&&!va;if(qa){Module.print=(function(a){process.stdout.write(a+"\n")});Module.printErr=(function(a){process.stderr.write(a+"\n")});var caa=require("fs"),daa=require("path");Module.read=(function(a){var a=daa.normalize(a),d=caa.readFileSync(a).toString();!d&&a!=daa.resolve(a)&&(a=path.join(__dirname,"..","src",a),d=caa.readFileSync(a).toString());return d});Module.load=(function(a){eaa(read(a))});Module.arguments||(Module.arguments=process.argv.slice(2))}baa&&(Module.print=print,"undefined"!=typeof printErr&&(Module.printErr=printErr),Module.read="undefined"!=typeof read?read:(function(a){snarf(a)}),Module.arguments||("undefined"!=typeof scriptArgs?Module.arguments=scriptArgs:"undefined"!=typeof arguments&&(Module.arguments=arguments)));sa&&!va&&(Module.print||(Module.print=(function(a){console.log(a)})),Module.printErr||(Module.printErr=(function(a){console.log(a)})));if(sa||va){Module.read=(function(a){var d=new XMLHttpRequest;d.open("GET",a,oa);d.send(na);return d.responseText}),Module.arguments||"undefined"!=typeof arguments&&(Module.arguments=arguments)}va&&(Module.print||(Module.print=pa()),Module.load=importScripts);!va&&!sa&&!qa&&!baa&&aa("Unknown runtime environment. Where are we?");function eaa(a){eval.call(na,a)}"undefined"==!Module.load&&Module.read&&(Module.load=(function(a){eaa(Module.read(a))}));Module.print||(Module.print=pa());Module.printErr||(Module.printErr=Module.print);Module.arguments||(Module.arguments=[]);Module.print=Module.print;Module.f=Module.printErr;Module.preRun||(Module.preRun=[]);Module.postRun||(Module.postRun=[]);var faa={i1:0,i8:0,i16:0,i32:0,i64:0},gaa={"float":0,"double":0};function wa(a){if(1==xa){return 1}var d={"%i1":1,"%i8":1,"%i16":2,"%i32":4,"%i64":8,"%float":4,"%double":8}["%"+a];d||("*"==a.charAt(a.length-1)?d=xa:"i"==a[0]&&(a=parseInt(a.substr(1)),ya(0==a%8),d=a/8));return d}var Aa;function Ba(){var a=[],d=0;this.J=(function(e){e&=255;d&&(a.push(e),d--);if(0==a.length){if(128>e){return String.fromCharCode(e)}a.push(e);d=191<e&&224>e?1:2;return""}if(0<d){return""}var e=a[0],f=a[1],g=a[2],e=191<e&&224>e?String.fromCharCode((e&31)<<6|f&63):String.fromCharCode((e&15)<<12|(f&63)<<6|g&63);a.length=0;return e});this.Jf=(function(a){for(var a=unescape(encodeURIComponent(a)),d=[],g=0;g<a.length;g++){d.push(a.charCodeAt(g))}return d})}function Da(a){var d=b;b+=a;return d}function haa(a){var d=Ea;Ea+=a;if(Ea>=Fa){for(;Fa<=Ea;){Fa=2*Fa+4095>>12<<12}a=c;Ga=c=new Int32Array(Fa);c.set(a);Ha=new Uint32Array(c.buffer);a=k;k=new Float64Array(Fa);k.set(a)}return d}function Ia(a,d){return Math.ceil(a/(d?d:1))*(d?d:1)}var xa=1,iaa={},Ja,Ka,Ma;function Na(a){Module.print(a+":\n"+Error().stack);aa("Assertion: "+a)}function ya(a,d){a||Na("Assertion failed: "+d)}var jaa=this;function kaa(a,d,e,f){function g(a,d){if("string"==d){if(a===na||a===fa||0===a){return 0}h||(h=b);var e=Da(a.length+1);laa(a,e);return e}return"array"==d?(h||(h=b),e=Da(a.length),maa(a,e),e):a}var h=0;try{var i=eval("_"+a)}catch(j){try{i=jaa.Module["_"+a]}catch(l){}}ya(i,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)");var m=0,a=f?f.map((function(a){return g(a,e[m++])})):[],d=(function(a,d){if("string"==d){return Qa(a)}ya("array"!=d);return a})(i.apply(na,a),d);h&&(b=h);return d}Module.ccall=kaa;Module.cwrap=(function(a,d,e){return(function(){return kaa(a,d,e,Array.prototype.slice.call(arguments))})});function Ta(a,d,e){e=e||"i8";"*"===e.charAt(e.length-1)&&(e="i32");switch(e){case"i1":c[a]=d;break;case"i8":c[a]=d;break;case"i16":c[a]=d;break;case"i32":c[a]=d;break;case"i64":c[a]=d;break;case"float":k[a]=d;break;case"double":k[a]=d;break;default:Na("invalid type for setValue: "+e)}}Module.setValue=Ta;function Ua(a,d){d=d||"i8";"*"===d.charAt(d.length-1)&&(d="i32");switch(d){case"i1":return c[a];case"i8":return c[a];case"i16":return c[a];case"i32":return c[a];case"i64":return c[a];case"float":return k[a];case"double":return k[a];default:Na("invalid type for setValue: "+d)}return na}Module.getValue=Ua;var Va=1,q=2;Module.ALLOC_NORMAL=0;Module.ALLOC_STACK=Va;Module.ALLOC_STATIC=q;function u(a,d,e){var f,g;"number"===typeof a?(f=ia,g=a):(f=oa,g=a.length);var h="string"===typeof d?d:na,e=[Wa,Da,haa][e===fa?q:e](Math.max(g,h?1:d.length));if(f){a=e;for(g=a+g;a<g;a++){c[a]=0,k[a]=0}return e}f=0;for(var i;f<g;){var j=a[f];"function"===typeof j&&(j=iaa.Yf(j));i=h||d[f];0===i?f++:(Ta(e+f,j,i),f+=wa(i))}return e}Module.allocate=u;function Qa(a,d){for(var e=new Ba,f="undefined"==typeof d,g="",h=0,i;;){i=Ha[a+h];if(f&&0==i){break}g+=e.J(i);h+=1;if(!f&&h==d){break}}return g}Module.Pointer_stringify=Qa;Module.Array_stringify=(function(a){for(var d="",e=0;e<a.length;e++){d+=String.fromCharCode(a[e])}return d});var v,naa=4096,Ga,c,Ha,k,b,Ea,oaa=Module.TOTAL_STACK||5242880,Fa=Module.TOTAL_MEMORY||10485760;ya(!!Int32Array&&!!Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"Cannot fallback to non-typed array case: Code is too specialized");Ga=c=new Int32Array(Fa);Ha=new Uint32Array(c.buffer);k=new Float64Array(Fa);Module.HEAP=Ga;Module.IHEAP=c;Module.FHEAP=k;Ea=(b=Ia(1))+oaa+4095>>12<<12;ya(Ea<Fa);var paa=u(Xa("(null)"),"i8",q);function Ya(a){for(;0<a.length;){var d=a.shift(),e=d.j;"number"===typeof e&&(e=v[e]);e(d.s===fa?na:d.s)}}var cb=[],qaa=[],eb=[];function raa(a){for(var d=a;c[d++];){}return d-a-1}Module.String_len=raa;function Xa(a,d,e){a=(new Ba).Jf(a);e&&(a.length=e);d||a.push(0);return a}Module.intArrayFromString=Xa;Module.intArrayToString=(function(a){for(var d=[],e=0;e<a.length;e++){var f=a[e];255<f&&(f&=255);d.push(String.fromCharCode(f))}return d.join("")});function laa(a,d,e){a=Xa(a,e);for(e=0;e<a.length;){c[d+e]=a[e],e+=1}}Module.writeStringToMemory=laa;function maa(a,d){for(var e=0;e<a.length;e++){c[d+e]=a[e]}}Module.writeArrayToMemory=maa;var D=[];function saa(a,d){return 0<=a?a:32>=d?2*Math.abs(1<<d-1)+a:Math.pow(2,d)+a}function taa(a,d){if(0>=a){return a}var e=32>=d?Math.abs(1<<d-1):Math.pow(2,d-1);if(a>=e&&(32>=d||a>e)){a=-2*e+a}return a}var hb=0,kb={},uaa=oa,lb=na;function nb(a){hb++;Module.monitorRunDependencies&&Module.monitorRunDependencies(hb);a?(ya(!kb[a]),kb[a]=1,lb===na&&"undefined"!==typeof setInterval&&(lb=setInterval((function(){var a=oa,e;for(e in kb){a||(a=ia,Module.f("still waiting on run dependencies:")),Module.f("dependency: "+e)}a&&Module.f("(end of list)")}),6e3))):Module.f("warning: run dependency added without ID")}Module.addRunDependency=nb;function sb(a){hb--;Module.monitorRunDependencies&&Module.monitorRunDependencies(hb);a?(ya(kb[a]),delete kb[a]):Module.f("warning: run dependency removed without ID");0==hb&&(lb!==na&&(clearInterval(lb),lb=na),uaa||tb())}Module.removeRunDependency=sb;Module.preloadedImages={};Module.preloadedAudios={};function vaa(){return 44}vaa.X=1;function wb(){return xb(48)}wb.X=1;function yb(a){var d=xb(48);zb(d,a);return d}yb.X=1;function Cb(a,d,e,f,g,h,i,j,l){var m=b;b+=9;var n=m+1,p=m+2,r=m+3,s=m+4,t=m+5,w=m+6,x=m+7,y=m+8;k[m]=a;k[n]=d;k[p]=e;k[r]=f;k[s]=g;k[t]=h;k[w]=i;k[x]=j;k[y]=l;a=xb(48);Db(a,m,n,p,r,s,t,w,x,y);b=m;return a}Cb.X=1;function Fb(a,d){var e=b;b+=4;0==c[Gb]<<24>>24&&Hb(Gb);Jb(e,a,d);c[Kb]=c[e];k[Kb]=k[e];c[Kb+1]=c[e+1];k[Kb+1]=k[e+1];c[Kb+2]=c[e+2];k[Kb+2]=k[e+2];c[Kb+3]=c[e+3];k[Kb+3]=k[e+3];b=e;return Kb}Fb.X=1;function Jb(a,d,e){H(a,d+e,d+4+e,d+8+e)}Jb.X=1;function waa(a,d){Lb(a,d)}waa.X=1;function Lb(a,d){var e;for(e=0;;){Mb((e<<2)+a,(e<<2)+d);var f=e+1;e=f;if(3<=(f|0)){break}}}Lb.X=1;function xaa(a,d){Nb(a,d)}xaa.X=1;function Nb(a,d){var e;for(e=0;;){Ob((e<<2)+a,(e<<2)+d);var f=e+1;e=f;if(3<=(f|0)){break}}}Nb.X=1;function Pb(a,d){var e=b;b+=12;0==c[Qb]<<24>>24&&Hb(Qb);Vb(e,a,d);Wb(Xb,e);b=e;return Xb}Pb.X=1;function Wb(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];var e=a+4,f=d+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+8;f=d+8;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];return a}Wb.X=1;function Vb(a,d,e){var f=b;b+=9;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8;k[f]=k[d]*k[e];k[g]=k[d+1]*k[e+1];k[h]=k[d+2]*k[e+2];k[i]=k[d+4]*k[e];k[j]=k[d+4+1]*k[e+1];k[l]=k[d+4+2]*k[e+2];k[m]=k[d+8]*k[e];k[n]=k[d+8+1]*k[e+1];k[p]=k[d+8+2]*k[e+2];Db(a,f,g,h,i,j,l,m,n,p);b=f}Vb.X=1;function yaa(a,d){return Yb(a,d)}yaa.X=1;function Yb(a,d){var e=b;b+=9;var f=e+1,g=e+2,h=e+3,i=e+4,j=e+5,l=e+6,m=e+7,n=e+8;k[e]=k[a]-k[d];k[f]=k[a+1]-k[d+1];k[g]=k[a+2]-k[d+2];k[h]=k[a+4]-k[d+4];k[i]=k[a+4+1]-k[d+4+1];k[j]=k[a+4+2]-k[d+4+2];k[l]=k[a+8]-k[d+8];k[m]=k[a+8+1]-k[d+8+1];k[n]=k[a+8+2]-k[d+8+2];Db(a,e,f,g,h,i,j,l,m,n);b=e;return a}Yb.X=1;function Zb(a,d){var e=b;b+=12;0==c[ac]<<24>>24&&Hb(ac);bc(e,a,d);Wb(cc,e);b=e;return cc}Zb.X=1;function bc(a,d,e){var f=b;b+=9;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8;k[f]=k[d]*k[0+e]+k[d+4]*k[4+e]+k[d+8]*k[8+e];k[g]=k[d]*k[0+e+1]+k[d+4]*k[4+e+1]+k[d+8]*k[8+e+1];k[h]=k[d]*k[0+e+2]+k[d+4]*k[4+e+2]+k[d+8]*k[8+e+2];k[i]=k[d+1]*k[0+e]+k[d+4+1]*k[4+e]+k[d+8+1]*k[8+e];k[j]=k[d+1]*k[0+e+1]+k[d+4+1]*k[4+e+1]+k[d+8+1]*k[8+e+1];k[l]=k[d+1]*k[0+e+2]+k[d+4+1]*k[4+e+2]+k[d+8+1]*k[8+e+2];k[m]=k[d+2]*k[0+e]+k[d+4+2]*k[4+e]+k[d+8+2]*k[8+e];k[n]=k[d+2]*k[0+e+1]+k[d+4+2]*k[4+e+1]+k[d+8+2]*k[8+e+1];k[p]=k[d+2]*k[0+e+2]+k[d+4+2]*k[4+e+2]+k[d+8+2]*k[8+e+2];Db(a,f,g,h,i,j,l,m,n,p);b=f}bc.X=1;function zaa(a,d){dc(a,d)}zaa.X=1;function dc(a,d){var e=b;b+=4;var f,g,h,i;f=k[a]+k[a+4+1]+k[a+8+2];0<f?(f=ec(f+1),k[e+3]=.5*f,f=.5/f,k[e]=(k[a+8+1]-k[a+4+2])*f,k[e+1]=(k[a+2]-k[a+8])*f,k[e+2]=(k[a+4]-k[a+1])*f):(f=k[a]<k[a+4+1]?k[a+4+1]<k[a+8+2]?2:1:k[a]<k[a+8+2]?2:0,g=(f+1|0)%3,h=(f+2|0)%3,i=ec(k[(f<<2)+a+f]-k[(g<<2)+a+g]-k[(h<<2)+a+h]+1),k[e+f]=.5*i,i=.5/i,k[e+3]=(k[(h<<2)+a+g]-k[(g<<2)+a+h])*i,k[e+g]=(k[(g<<2)+a+f]+k[(f<<2)+a+g])*i,k[e+h]=(k[(h<<2)+a+f]+k[(f<<2)+a+h])*i);jc(d,e,e+1,e+2,e+3);b=e}dc.X=1;function Aaa(a,d){return kc(a,d)}Aaa.X=1;function kc(a,d){return k[a+2]*k[d]+k[a+4+2]*k[d+1]+k[a+8+2]*k[d+2]}kc.X=1;function Baa(a,d){lc(a,d)}Baa.X=1;function lc(a,d){var e;for(e=0;;){mc((e<<2)+a,(e<<2)+d);var f=e+1;e=f;if(3<=(f|0)){break}}}lc.X=1;function Caa(a,d){return nc(a,d)}Caa.X=1;function nc(a,d){return k[a]*k[d]+k[a+4]*k[d+1]+k[a+8]*k[d+2]}nc.X=1;function oc(a){var d=b;b+=12;0==c[pc]<<24>>24&&Hb(pc);qc(d,a);Wb(rc,d);b=d;return rc}oc.X=1;function qc(a,d){var e=b;b+=9;var f=e+1,g=e+2,h=e+3,i=e+4,j=e+5,l=e+6,m=e+7,n=e+8;k[e]=sc(k[d]);k[f]=sc(k[d+1]);k[g]=sc(k[d+2]);k[h]=sc(k[d+4]);k[i]=sc(k[d+4+1]);k[j]=sc(k[d+4+2]);k[l]=sc(k[d+8]);k[m]=sc(k[d+8+1]);k[n]=sc(k[d+8+2]);Db(a,e,f,g,h,i,j,l,m,n);b=e}qc.X=1;function Daa(a,d){return xc(a,d)}Daa.X=1;function xc(a,d){return k[a+1]*k[d]+k[a+4+1]*k[d+1]+k[a+8+1]*k[d+2]}xc.X=1;function yc(a){var d=b;b+=12;0==c[zc]<<24>>24&&Hb(zc);Bc(d,a);Wb(Nc,d);b=d;return Nc}yc.X=1;function Bc(a,d){var e=b;b+=16;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+8,l=e+9,m=e+10,n=e+11,p=e+12,r=e+13,s=e+14,t=e+15;k[f]=Oc(d,1,1,2,2);k[g]=Oc(d,1,2,2,0);k[h]=Oc(d,1,0,2,1);H(e,f,g,h);f=1/J(0+d,e);k[i]=k[e]*f;k[j]=Oc(d,0,2,2,1)*f;k[l]=Oc(d,0,1,1,2)*f;k[m]=k[e+1]*f;k[n]=Oc(d,0,0,2,2)*f;k[p]=Oc(d,0,2,1,0)*f;k[r]=k[e+2]*f;k[s]=Oc(d,0,1,2,0)*f;k[t]=Oc(d,0,0,1,1)*f;Db(a,i,j,l,m,n,p,r,s,t);b=e}Bc.X=1;function Eaa(a,d,e,f,g){return Oc(a,d,e,f,g)}Eaa.X=1;function Oc(a,d,e,f,g){return k[(d<<2)+a+e]*k[(f<<2)+a+g]-k[(d<<2)+a+g]*k[(f<<2)+a+e]}Oc.X=1;function Faa(a,d){Pc(a,d)}Faa.X=1;function Pc(a,d){var e;for(e=0;;){Tc((e<<2)+a,(e<<2)+d);var f=e+1;e=f;if(3<=(f|0)){break}}}Pc.X=1;function Vc(){Wc();return Xc}Vc.X=1;function Wc(){var a=b;b+=9;var d=a+1,e=a+2,f=a+3,g=a+4,h=a+5,i=a+6,j=a+7,l=a+8;0==c[cd]<<24>>24&&0!=(Hb(cd)|0)&&(k[a]=1,k[d]=0,k[e]=0,k[f]=0,k[g]=1,k[h]=0,k[i]=0,k[j]=0,k[l]=1,Db(Xc,a,d,e,f,g,h,i,j,l));b=a;return Xc}Wc.X=1;function dd(a){var d=b;b+=12;0==c[ed]<<24>>24&&Hb(ed);Gaa(d,a);Wb(gd,d);b=d;return gd}dd.X=1;function Gaa(a,d){var e=b;b+=9;var f=e+1,g=e+2,h=e+3,i=e+4,j=e+5,l=e+6,m=e+7,n=e+8;k[e]=Oc(d,1,1,2,2);k[f]=Oc(d,0,2,2,1);k[g]=Oc(d,0,1,1,2);k[h]=Oc(d,1,2,2,0);k[i]=Oc(d,0,0,2,2);k[j]=Oc(d,0,2,1,0);k[l]=Oc(d,1,0,2,1);k[m]=Oc(d,0,1,2,0);k[n]=Oc(d,0,0,1,1);Db(a,e,f,g,h,i,j,l,m,n);b=e}Gaa.X=1;function Haa(a,d){return(d<<2)+a}Haa.X=1;function Iaa(a,d){return kd(a,d)}Iaa.X=1;function kd(a,d){var e=b;b+=9;var f=e+1,g=e+2,h=e+3,i=e+4,j=e+5,l=e+6,m=e+7,n=e+8;k[e]=k[a]+k[d];k[f]=k[a+1]+k[d+1];k[g]=k[a+2]+k[d+2];k[h]=k[a+4]+k[d+4];k[i]=k[a+4+1]+k[d+4+1];k[j]=k[a+4+2]+k[d+4+2];k[l]=k[a+8]+k[d+8];k[m]=k[a+8+1]+k[d+8+1];k[n]=k[a+8+2]+k[d+8+2];Db(a,e,f,g,h,i,j,l,m,n);b=e;return a}kd.X=1;function Jaa(a,d){return ld(a,d)}Jaa.X=1;function ld(a,d){var e=b;b+=9;var f=e+1,g=e+2,h=e+3,i=e+4,j=e+5,l=e+6,m=e+7,n=e+8;k[e]=nc(d,a);k[f]=xc(d,a);k[g]=kc(d,a);k[h]=nc(d,a+4);k[i]=xc(d,a+4);k[j]=kc(d,a+4);k[l]=nc(d,a+8);k[m]=xc(d,a+8);k[n]=kc(d,a+8);Db(a,e,f,g,h,i,j,l,m,n);b=e;return a}ld.X=1;function Kaa(a,d,e,f){md(a,d,e,f)}Kaa.X=1;function md(a,d,e,f){var g,h,i,j,l,m,n,p;qd(d);g=f;for(var r=a+4,s=a+4,t=a+8;0<(f|0);){f=0;h=1;i=2;j=sc(k[a+1]);l=sc(k[a+2]);l>j&&(h=2,i=1,j=l);l=sc(k[r+2]);l>j&&(f=1,h=2,i=0,j=l);l=sc(k[a])+sc(k[s+1]);m=e*(l+sc(k[t+2]));if(j<=m){if(j<=1.1920928955078125e-7*m){break}g=1}n=k[(f<<2)+a+h];m=(k[(h<<2)+a+h]-k[(f<<2)+a+f])/(2*n);l=m*m;j=m;83886080>l*l?(l=ec(l+1),m=0<=j?1/(m+l):1/(m-l),j=1/ec(m*m+1)):(m=1/(j*(.5/l+2)),j=1-.5*m*m);l=j*m;k[(h<<2)+a+f]=0;k[(f<<2)+a+h]=0;p=(f<<2)+a+f;k[p]-=m*n;p=(h<<2)+a+h;k[p]+=m*n;n=k[(i<<2)+a+f];m=k[(i<<2)+a+h];p=j*n-l*m;k[(f<<2)+a+i]=p;k[(i<<2)+a+f]=p;n=j*m+l*n;k[(h<<2)+a+i]=n;k[(i<<2)+a+h]=n;for(i=0;!(p=(i<<2)+d,n=k[p+f],m=k[p+h],k[p+f]=j*n-l*m,k[p+h]=j*m+l*n,i=n=i+1,3<=(n|0));){}g=f=g-1}}md.X=1;function Laa(a,d){zb(a,d)}Laa.X=1;function zb(a,d){var e=b;b+=9;var f,g,h,i,j,l,m,n,p,r=e+1,s=e+2,t=e+3,w=e+4,x=e+5,y=e+6,z=e+7,A=e+8;f=2/rd(d);g=k[d]*f;h=k[d+1]*f;i=k[d+2]*f;f=k[d+3]*g;j=k[d+3]*h;l=k[d+3]*i;g*=k[d];m=k[d]*h;n=k[d]*i;h*=k[d+1];p=k[d+1]*i;i*=k[d+2];k[e]=1-(h+i);k[r]=m-l;k[s]=n+j;k[t]=m+l;k[w]=1-(g+i);k[x]=p-f;k[y]=n-j;k[z]=p+f;k[A]=1-(g+h);Db(a,e,r,s,t,w,x,y,z,A);b=e}zb.X=1;function Maa(a,d,e,f){sd(a,d,e,f)}Maa.X=1;function sd(a,d,e,f){var g=b;b+=9;var h,i,j,l,m,n,p,r=g+1,s=g+2,t=g+3,w=g+4,x=g+5,y=g+6,z=g+7,A=g+8;h=td(d);i=td(e);j=td(f);d=ud(d);e=ud(e);f=ud(f);l=h*j;m=h*f;n=d*j;p=d*f;k[g]=i*j;k[r]=e*n-m;k[s]=e*l+p;k[t]=i*f;k[w]=e*p+l;k[x]=e*m-n;k[y]=-e;k[z]=i*d;k[A]=i*h;Db(a,g,r,s,t,w,x,y,z,A);b=g}sd.X=1;function Naa(a){qd(a)}Naa.X=1;function qd(a){var d=b;b+=9;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5,j=d+6,l=d+7,m=d+8;k[d]=1;k[e]=0;k[f]=0;k[g]=0;k[h]=1;k[i]=0;k[j]=0;k[l]=0;k[m]=1;Db(a,d,e,f,g,h,i,j,l,m);b=d}qd.X=1;function Oaa(a,d){return Wb(a,d)}Oaa.X=1;function vd(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;yd(a,g,h,i,1);b=g}vd.X=1;function zd(a,d){c[a+6]=d&1}zd.X=1;function Ad(a,d){c[a+1]=d}Ad.X=1;function Bd(a){return k[a+3]}Bd.X=1;function Ed(a){return c[a+1]}Ed.X=1;function Fd(a){return c[a+8]&1}Fd.X=1;function Id(a){return c[a+4]&1}Id.X=1;function Jd(a,d){c[a+4]=d&1}Jd.X=1;function Md(a){return c[a+2]}Md.X=1;function Nd(a,d){c[a+12]=d}Nd.X=1;function Od(a){return c[a+12]}Od.X=1;function Paa(a){return k[a]}Paa.X=1;function Pd(a){return k[a+11]}Pd.X=1;function Qd(a){return c[a+6]&1}Qd.X=1;function Sd(a,d){k[a+9]=d}Sd.X=1;function Qaa(a,d){k[a]=d}Qaa.X=1;function Td(a,d){k[a+3]=d}Td.X=1;function Ud(a,d){c[a+10]=d&1}Ud.X=1;function Vd(a){return c[a+10]&1}Vd.X=1;function Wd(a){return k[a+9]}Wd.X=1;function Yd(a,d){k[a+11]=d}Yd.X=1;function ae(a,d){c[a+2]=d}ae.X=1;function be(a){return c[a+7]&1}be.X=1;function ce(a,d){c[a+7]=d&1}ce.X=1;function de(a,d){c[a+8]=d&1}de.X=1;function yd(a,d,e,f,g){var h=b;b+=6;var i=h+3,j;if(1<=sc(k[a+8])){k[h]=0;k[i]=0;j=ee(k[a],k[a+2]);var l=h+1;0<k[a+8]?(k[l]=1.5707963705062866,k[i+1]=1.5707963705062866,k[h+2]=k[h+1]+j,k[i+2]=k[h+1]+j):(k[l]=-1.5707963705062866,k[i+1]=-1.5707963705062866,k[h+2]=-k[h+1]+j,k[i+2]=-k[h+1]+j)}else{k[h+1]=-ie(k[a+8]),k[i+1]=3.1415927410125732-k[h+1],j=k[a+8+1]/td(k[h+1]),k[h+2]=je(j,k[a+8+2]/td(k[h+1])),j=k[a+8+1]/td(k[i+1]),k[i+2]=je(j,k[a+8+2]/td(k[i+1])),j=k[a+4]/td(k[h+1]),k[h]=je(j,k[a]/td(k[h+1])),j=k[a+4]/td(k[i+1]),k[i]=je(j,k[a]/td(k[i+1]))}1==(g|0)?(k[d]=k[h],k[e]=k[h+1],k[f]=k[h+2]):(k[d]=k[i],k[e]=k[i+1],k[f]=k[i+2]);b=h}yd.X=1;function ke(a,d,e,f,g){var h=b;b+=3;var i=h+1,j=h+2;k[h]=d;k[i]=e;k[j]=f;yd(a,h,i,j,g);b=h}ke.X=1;function le(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;Raa(a,g,h,i);b=g}le.X=1;function Raa(a,d,e,f){sd(a,k[f],k[e],k[d])}Raa.X=1;function Saa(a){return me(a)}Saa.X=1;function me(a){return ne(0+a,4+a,8+a)}me.X=1;function oe(a,d,e,f,g,h,i,j,l,m){var n=b;b+=9;var p=n+1,r=n+2,s=n+3,t=n+4,w=n+5,x=n+6,y=n+7,z=n+8;k[n]=d;k[p]=e;k[r]=f;k[s]=g;k[t]=h;k[w]=i;k[x]=j;k[y]=l;k[z]=m;Db(a,n,p,r,s,t,w,x,y,z);b=n}oe.X=1;function Db(a,d,e,f,g,h,i,j,l,m){pe(a,d,e,f);pe(a+4,g,h,i);pe(a+8,j,l,m)}Db.X=1;function Taa(a,d){qe(a,d)}Taa.X=1;function qe(a,d){var e;for(e=0;;){re((e<<2)+a,(e<<2)+d);var f=e+1;e=f;if(3<=(f|0)){break}}}qe.X=1;function se(a){var d=b;b+=12;0==c[te]<<24>>24&&Hb(te);ue(d,a);Wb(ve,d);b=d;return ve}se.X=1;function ue(a,d){Db(a,d,d+4,d+8,d+1,d+4+1,d+8+1,d+2,d+4+2,d+8+2)}ue.X=1;function Uaa(a,d){return(d<<2)+a}Uaa.X=1;function we(a){0!=(a|0)&&xe(a)}we.X=1;function ye(a,d){var e=b;b+=12;0==c[ze]<<24>>24&&Hb(ze);Vaa(e,a,d);Wb(Ae,e);b=e;return Ae}ye.X=1;function Vaa(a,d,e){var f=b;b+=9;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8;k[f]=J(d,0+e);k[g]=J(d,4+e);k[h]=J(d,8+e);k[i]=J(d+4,0+e);k[j]=J(d+4,4+e);k[l]=J(d+4,8+e);k[m]=J(d+8,0+e);k[n]=J(d+8,4+e);k[p]=J(d+8,8+e);Db(a,f,g,h,i,j,l,m,n,p);b=f}Vaa.X=1;function Be(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;Waa(a,g,h,i);b=g}Be.X=1;function Waa(a,d,e,f){k[d]=ee(k[a+4],k[a]);k[e]=ie(-k[a+8]);k[f]=ee(k[a+8+1],k[a+8+2]);1.5707963705062866==sc(k[e])&&(a=k[d],k[d]=0<k[d]?a-3.1415927410125732:a+3.1415927410125732,d=k[f],k[f]=0<k[f]?d-3.1415927410125732:d+3.1415927410125732)}Waa.X=1;function Ce(){var a=xb(44);De(a);return a}Ce.X=1;function Ee(a){0!=(a|0)&&xe(a)}Ee.X=1;function Fe(a,d,e){v[c[c[a]+8]](a,d,e)}Fe.X=1;function Xaa(a){return Ge(a)}Xaa.X=1;function Ge(a){return He(Ie(a))}Ge.X=1;function Je(a,d){c[a+2]=d}Je.X=1;function Ke(a){return c[a+13]}Ke.X=1;function Le(a){return k[a+11]}Le.X=1;function Me(a){return c[a+2]}Me.X=1;function Ie(a){return c[a+1]}Ie.X=1;function Ne(a,d){var e=b;b+=4;0==c[Pe]<<24>>24&&Hb(Pe);v[c[c[a]+15]](e,a,d);c[Qe]=c[e];k[Qe]=k[e];c[Qe+1]=c[e+1];k[Qe+1]=k[e+1];c[Qe+2]=c[e+2];k[Qe+2]=k[e+2];c[Qe+3]=c[e+3];k[Qe+3]=k[e+3];b=e;return Qe}Ne.X=1;function Yaa(a,d){Je(a,d)}Yaa.X=1;function Re(a,d){var e=Se(56);Te(e,a,d);return e}Re.X=1;function Se(a){return Ue(a,16)}Se.X=1;function Zaa(a){return Ke(a)}Zaa.X=1;function Ve(a,d,e){return v[c[c[a]+13]](a,d,e)}Ve.X=1;function We(a){return v[c[c[a]+7]](a)}We.X=1;function Xe(a){return v[c[c[a]+19]](a)}Xe.X=1;function $aa(a){return Ye(a)}$aa.X=1;function Ye(a){return bf(Ie(a))}Ye.X=1;function aba(a){return cf(a)}aba.X=1;function cf(a){return k[a+7+(c[a+13]+2|0)%3]}cf.X=1;function bba(a,d,e,f){df(a,d,e,f)}bba.X=1;function ef(a){return v[c[c[a]+12]](a)}ef.X=1;function ff(a){return v[c[c[a]+9]](a)}ff.X=1;function cba(a){return gf(a)}cba.X=1;function gf(a){return k[a+7+c[a+13]]}gf.X=1;function dba(a){return a+3}dba.X=1;function hf(a,d){var e=b;b+=4;0==c[jf]<<24>>24&&Hb(jf);kf(e,a,d);c[lf]=c[e];k[lf]=k[e];c[lf+1]=c[e+1];k[lf+1]=k[e+1];c[lf+2]=c[e+2];k[lf+2]=k[e+2];c[lf+3]=c[e+3];k[lf+3]=k[e+3];b=e;return lf}hf.X=1;function mf(a,d){var e=b;b+=4;0==c[nf]<<24>>24&&Hb(nf);v[c[c[a]+16]](e,a,d);c[of]=c[e];k[of]=k[e];c[of+1]=c[e+1];k[of+1]=k[e+1];c[of+2]=c[e+2];k[of+2]=k[e+2];c[of+3]=c[e+3];k[of+3]=k[e+3];b=e;return of}mf.X=1;function pf(a,d){v[c[c[a]+6]](a,d)}pf.X=1;function qf(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}qf.X=1;function eba(a){return Le(a)}eba.X=1;function rf(a,d){var e=b;b+=4;0==c[sf]<<24>>24&&Hb(sf);tf(e,a,d);c[uf]=c[e];k[uf]=k[e];c[uf+1]=c[e+1];k[uf+1]=k[e+1];c[uf+2]=c[e+2];k[uf+2]=k[e+2];c[uf+3]=c[e+3];k[uf+3]=k[e+3];b=e;return uf}rf.X=1;function vf(a,d){return v[c[c[a]+5]](a,d)}vf.X=1;function fba(a){return xf(a)}fba.X=1;function xf(a){return yf(Ie(a))}xf.X=1;function gba(a){return zf(a)}gba.X=1;function zf(a){return Af(Ie(a))}zf.X=1;function hba(a){return Me(a)}hba.X=1;function iba(a){return Bf(a)}iba.X=1;function Bf(a){return Cf(Ie(a))}Bf.X=1;function Df(a){return v[c[c[a]+11]](a)}Df.X=1;function Ef(a,d,e){v[c[c[a]+20]](a,d,e)}Ef.X=1;function Ff(a,d){v[c[c[a]+10]](a,d)}Ff.X=1;function jba(a){return Gf(a)}jba.X=1;function Gf(a){return Hf(Ie(a))}Gf.X=1;function kba(a,d){Jf(a,d)}kba.X=1;function Jf(a,d){var e=a+7;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Jf.X=1;function lba(a){return Kf(a)}lba.X=1;function Kf(a){return Lf(Ie(a))}Kf.X=1;function mba(a){return Mf(a)}mba.X=1;function Nf(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Nf.X=1;function Of(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}Of.X=1;function nba(a){return a+7}nba.X=1;function Pf(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}Pf.X=1;function Qf(a){return v[c[c[a]+4]](a)}Qf.X=1;function Rf(a,d){v[c[c[a]+14]](a,d)}Rf.X=1;function Sf(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}Sf.X=1;function oba(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}oba.X=1;function pba(a){return Uf(a)}pba.X=1;function Uf(a){return Yf(Ie(a))}Uf.X=1;function qba(a){return Ie(a)}qba.X=1;function Zf(a,d,e){v[c[c[a]+8]](a,d,e)}Zf.X=1;function $f(a){return v[c[c[a]+26]](a)}$f.X=1;function ag(a,d){var e=b;b+=4;0==c[bg]<<24>>24&&Hb(bg);v[c[c[a]+15]](e,a,d);c[cg]=c[e];k[cg]=k[e];c[cg+1]=c[e+1];k[cg+1]=k[e+1];c[cg+2]=c[e+2];k[cg+2]=k[e+2];c[cg+3]=c[e+3];k[cg+3]=k[e+3];b=e;return cg}ag.X=1;function dg(a){return v[c[c[a]+4]](a)}dg.X=1;function eg(a,d){var e=b;b+=4;0==c[fg]<<24>>24&&Hb(fg);gg(e,a,d);c[hg]=c[e];k[hg]=k[e];c[hg+1]=c[e+1];k[hg+1]=k[e+1];c[hg+2]=c[e+2];k[hg+2]=k[e+2];c[hg+3]=c[e+3];k[hg+3]=k[e+3];b=e;return hg}eg.X=1;function gg(a,d,e){ig(a,jg(d+23,e),d+3)}gg.X=1;function rba(a){return xf(a)}rba.X=1;function kg(a,d,e,f){v[c[c[a]+24]](a,d,e,f)}kg.X=1;function lg(a){return v[c[c[a]+22]](a)}lg.X=1;function mg(a){return v[c[c[a]+7]](a)}mg.X=1;function ng(a){return v[c[c[a]+19]](a)}ng.X=1;function sba(a){return Ye(a)}sba.X=1;function og(a,d,e){v[c[c[a]+25]](a,d,e)}og.X=1;function tba(a){return wg(a)}tba.X=1;function wg(a){return xg(a+23,0)}wg.X=1;function uba(a,d,e,f){df(a,d,e,f)}uba.X=1;function yg(a){return c[a+13]}yg.X=1;function vba(a){return c[a]}vba.X=1;function wba(a,d){c[a]=d}wba.X=1;function zg(a){return c[a+3]}zg.X=1;function Ag(a){return c[a+4]}Ag.X=1;function Bg(a,d){c[a+6]=d}Bg.X=1;function xba(a,d){c[a]=d}xba.X=1;function Cg(a){return c[a+7]}Cg.X=1;function Dg(a){return c[a+5]}Dg.X=1;function yba(a){return c[a]}yba.X=1;function Eg(a,d){c[a+3]=d}Eg.X=1;function Fg(a,d){c[a+7]=d}Fg.X=1;function Gg(a){return c[a+6]}Gg.X=1;function Hg(a,d){c[a+4]=d}Hg.X=1;function Ig(a){return v[c[c[a]+12]](a)}Ig.X=1;function zba(a,d){Je(a,d)}zba.X=1;function Jg(a){return v[c[c[a]+23]](a)}Jg.X=1;function Kg(a){return v[c[c[a]+9]](a)}Kg.X=1;function Lg(a){return Ue(a,16)}Lg.X=1;function Aba(a){return a+3}Aba.X=1;function Mg(a,d){var e=b;b+=4;0==c[Ng]<<24>>24&&Hb(Ng);kf(e,a,d);c[Og]=c[e];k[Og]=k[e];c[Og+1]=c[e+1];k[Og+1]=k[e+1];c[Og+2]=c[e+2];k[Og+2]=k[e+2];c[Og+3]=c[e+3];k[Og+3]=k[e+3];b=e;return Og}Mg.X=1;function Bba(a,d){Jf(a,d)}Bba.X=1;function Pg(a,d){v[c[c[a]+6]](a,d)}Pg.X=1;function Qg(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}Qg.X=1;function Cba(a){return Le(a)}Cba.X=1;function Dba(a){return Gf(a)}Dba.X=1;function Rg(a,d){var e=b;b+=4;0==c[Sg]<<24>>24&&Hb(Sg);tf(e,a,d);c[Tg]=c[e];k[Tg]=k[e];c[Tg+1]=c[e+1];k[Tg+1]=k[e+1];c[Tg+2]=c[e+2];k[Tg+2]=k[e+2];c[Tg+3]=c[e+3];k[Tg+3]=k[e+3];b=e;return Tg}Rg.X=1;function Ug(a,d){return v[c[c[a]+5]](a,d)}Ug.X=1;function Eba(a,d){Vg(a,d)}Eba.X=1;function Fba(a){return zf(a)}Fba.X=1;function Wg(a,d,e){return v[c[c[a]+13]](a,d,e)}Wg.X=1;function Gba(a){return Uf(a)}Gba.X=1;function Hba(a){return Me(a)}Hba.X=1;function Iba(a){return Bf(a)}Iba.X=1;function ah(a){return v[c[c[a]+11]](a)}ah.X=1;function Jba(a){bh(a)}Jba.X=1;function ch(a,d,e){v[c[c[a]+20]](a,d,e)}ch.X=1;function dh(a,d){v[c[c[a]+10]](a,d)}dh.X=1;function Kba(a,d,e,f,g){eh(a,d,e,f,g)}Kba.X=1;function eh(a,d,e,f,g){fh(a+14,a+18,g,d,e,f)}eh.X=1;function gh(a,d){var e=b;b+=4;0==c[hh]<<24>>24&&Hb(hh);v[c[c[a]+16]](e,a,d);c[ih]=c[e];k[ih]=k[e];c[ih+1]=c[e+1];k[ih+1]=k[e+1];c[ih+2]=c[e+2];k[ih+2]=k[e+2];c[ih+3]=c[e+3];k[ih+3]=k[e+3];b=e;return ih}gh.X=1;function Lba(a){return Kf(a)}Lba.X=1;function Mba(a){return Mf(a)}Mba.X=1;function jh(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}jh.X=1;function kh(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}kh.X=1;function Nba(a){return lh(a)}Nba.X=1;function Oba(a){return a+7}Oba.X=1;function mh(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}mh.X=1;function nh(a,d,e){return v[c[c[a]+28]](a,d,e)}nh.X=1;function oh(a,d){v[c[c[a]+14]](a,d)}oh.X=1;function ph(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}ph.X=1;function qh(a,d,e,f){v[c[c[a]+27]](a,d,e,f)}qh.X=1;function Pba(a){return Ge(a)}Pba.X=1;function Qba(a){return yg(a)}Qba.X=1;function Rba(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Rba.X=1;function Sba(a){return Ie(a)}Sba.X=1;function Tba(a){return sh(a)}Tba.X=1;function sh(a){return th(a+23)}sh.X=1;function uh(a){return v[c[c[a]+21]](a)}uh.X=1;function vh(a){0!=(a|0)&&xe(a)}vh.X=1;function wh(a){var d=xb(4);c[d]=a;return d}wh.X=1;function Uba(a){return c[a]}Uba.X=1;function xh(a){0!=(a|0)&&yh(a)}xh.X=1;function zh(){var a=Vba(32);Ah(a);return a}zh.X=1;function Vba(a){return Ue(a,16)}Vba.X=1;function Bh(){var a=Lg(112);Ch(a,0,0,16);return a}Bh.X=1;function Fh(a){var d=Lg(112);Ch(d,a,0,16);return d}Fh.X=1;function Gh(a,d){var e=Lg(112);Ch(e,a,d,16);return e}Gh.X=1;function Hh(a,d,e){var f=Lg(112);Ch(f,a,d,e);return f}Hh.X=1;function Ih(a){return c[a+1]}Ih.X=1;function Jh(a,d){c[a+2]=d}Jh.X=1;function Kh(a,d){c[a+5]=d}Kh.X=1;function Lh(a,d){c[a+1]=d}Lh.X=1;function Mh(a){return c[a+2]}Mh.X=1;function Nh(a){return k[a+56]}Nh.X=1;function Oh(a,d){k[a+46]=d}Oh.X=1;function Ph(a){return k[a+55]}Ph.X=1;function Qh(a,d){k[a+56]=d}Qh.X=1;function Rh(a,d){c[a+49]=d}Rh.X=1;function Sh(a){return 0==(c[a+51]&7|0)}Sh.X=1;function Th(a,d){k[a+62]=d}Th.X=1;function Uh(a){return c[a+52]}Uh.X=1;function Vh(a,d){c[a+53]=d}Vh.X=1;function Wh(a){return k[a+62]}Wh.X=1;function Xh(a,d){c[a+59]=d}Xh.X=1;function Yh(a,d){c[a+52]=d}Yh.X=1;function Zh(a,d){k[a+60]=d}Zh.X=1;function $h(a){return c[a+51]}$h.X=1;function ai(a){return 0!=(c[a+51]&1|0)}ai.X=1;function bi(a){return c[a+48]}bi.X=1;function ci(a){return c[a+47]}ci.X=1;function di(a){return k[a+57]}di.X=1;function ei(a){return c[a+59]}ei.X=1;function fi(a,d){k[a+61]=d}fi.X=1;function gi(a){return k[a+62]*k[a+62]}gi.X=1;function hi(a,d){c[a+48]=d}hi.X=1;function ii(a){return c[a+53]}ii.X=1;function ji(a){return c[a+58]}ji.X=1;function ki(a){return c[a+54]}ki.X=1;function li(a){return 0==(c[a+51]&4|0)}li.X=1;function mi(a){return c[a+50]}mi.X=1;function ni(a){return k[a+46]}ni.X=1;function oi(a){return k[a+60]}oi.X=1;function pi(a){return k[a+61]}pi.X=1;function Wba(a){return Nh(a)}Wba.X=1;function Xba(a,d){Oh(a,d)}Xba.X=1;function Yba(a,d){qi(a,d)}Yba.X=1;function qi(a,d){var e=a+33;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}qi.X=1;function Zba(a){return Ph(a)}Zba.X=1;function $ba(a,d){ri(a,d)}$ba.X=1;function ri(a,d){var e=a+37;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}ri.X=1;function si(a,d,e){return v[c[c[a]+5]](a,d,e)}si.X=1;function aca(a,d){Qh(a,d)}aca.X=1;function bca(a,d){Rh(a,d)}bca.X=1;function ti(a){ui(a,0)}ti.X=1;function vi(a,d){ui(a,d&1)}vi.X=1;function cca(a,d){wi(a,d)}cca.X=1;function wi(a,d){xi(a+17,d)}wi.X=1;function yi(){var a=zi(256);Bi(a);return a}yi.X=1;function zi(a){return Ue(a,16)}zi.X=1;function dca(a){return a+33}dca.X=1;function eca(a){return Sh(a)}eca.X=1;function Ci(a,d){v[c[c[a]+3]](a,d)}Ci.X=1;function fca(a,d){Th(a,d)}fca.X=1;function gca(a){return Uh(a)}gca.X=1;function hca(a,d){Vh(a,d)}hca.X=1;function ica(a){return Wh(a)}ica.X=1;function jca(a,d){Xh(a,d)}jca.X=1;function kca(a,d){return Di(a,d)}kca.X=1;function Di(a,d){return 0!=(c[a+63]|0)?v[c[c[a]]](a,d):1}Di.X=1;function lca(a){return a+41}lca.X=1;function Ei(a){return v[c[c[a]+4]](a)}Ei.X=1;function mca(a){return a+37}mca.X=1;function nca(a,d){Fi(a,d)}nca.X=1;function oca(a){return a+17}oca.X=1;function pca(a,d){Yh(a,d)}pca.X=1;function qca(a,d){Zh(a,d)}qca.X=1;function Gi(a,d){v[c[c[a]+6]](a,d)}Gi.X=1;function rca(a){return $h(a)}rca.X=1;function sca(a){return ai(a)}sca.X=1;function tca(a){return bi(a)}tca.X=1;function uca(a,d){Hi(a,d)}uca.X=1;function Hi(a,d){var e=a+41;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];c[a+45]=(1!=k[d]?1:1!=k[d+1]?1:1!=k[d+2])&1}Hi.X=1;function Ii(a){if(0!=(a|0)){v[c[c[a]+2]](a)}}Ii.X=1;function vca(a){return ci(a)}vca.X=1;function wca(a){return di(a)}wca.X=1;function xca(a){return ei(a)}xca.X=1;function yca(a,d){fi(a,d)}yca.X=1;function zca(a){return a+1}zca.X=1;function Aca(a){return gi(a)}Aca.X=1;function Bca(a,d){Ji(a,d)}Bca.X=1;function Ji(a,d){xi(a+1,d)}Ji.X=1;function Cca(a,d){hi(a,d)}Cca.X=1;function Dca(a){return ii(a)}Dca.X=1;function Eca(a){return Ki(a)}Eca.X=1;function Ki(a){return 2!=(ki(a)|0)?5!=(ki(a)|0):0}Ki.X=1;function Fca(a){return ji(a)}Fca.X=1;function Gca(a){return ki(a)}Gca.X=1;function Hca(a){return li(a)}Hca.X=1;function Ica(a,d){Li(a,d)}Ica.X=1;function Jca(a){return mi(a)}Jca.X=1;function Kca(a){return ni(a)}Kca.X=1;function Lca(a){return oi(a)}Lca.X=1;function Mca(a){return pi(a)}Mca.X=1;function Nca(a,d){Mi(a,d)}Nca.X=1;function Mi(a,d){k[a+55]=d}Mi.X=1;function Ni(a){return c[a+49]}Ni.X=1;function Oi(a,d){c[a+51]=d}Oi.X=1;function Pi(a){return 0!=(c[a+51]&3|0)}Pi.X=1;function Qi(a,d){k[a+57]=d}Qi.X=1;function Ri(a){return 0!=(c[a+45]|0)}Ri.X=1;function Si(a,d){c[a+47]=d}Si.X=1;function Ti(a){return 0!=(c[a+51]&2|0)}Ti.X=1;function Ui(a){return k[a+5]}Ui.X=1;function Vi(a){return c[a+7]&1}Vi.X=1;function Wi(a){return k[a+3]}Wi.X=1;function Xi(a){return k[a+6]}Xi.X=1;function Yi(a){return k[a+2]}Yi.X=1;function Zi(a){return k[a+1]}Zi.X=1;function $i(a){return k[a+4]}$i.X=1;function aj(a,d){c[a+1]=d}aj.X=1;function bj(a,d){c[a+2]=d}bj.X=1;function cj(a){return c[a+2]}cj.X=1;function dj(a){return c[a+1]}dj.X=1;function Oca(a){return Ni(a)}Oca.X=1;function Pca(a,d){Oi(a,d)}Pca.X=1;function Qca(a){return Pi(a)}Qca.X=1;function Rca(a,d){Qi(a,d)}Rca.X=1;function Sca(a){return Ri(a)}Sca.X=1;function Tca(a,d){Si(a,d)}Tca.X=1;function Uca(a){return Ti(a)}Uca.X=1;function ej(a,d,e,f){var g=b;b+=14;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13,r=c[c[a]+6];k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);v[r](a,d,e,f,g,l);b=g}ej.X=1;function fj(a,d,e,f,g){var h=b;b+=7;var i=h+4,j=h+5,l=h+6,m=c[c[a]+6];k[i]=0;k[j]=0;k[l]=0;H(h,i,j,l);v[m](a,d,e,f,g,h);b=h}fj.X=1;function gj(a,d,e,f,g,h){v[c[c[a]+6]](a,d,e,f,g,h)}gj.X=1;function hj(a,d,e,f,g){v[c[c[a]+4]](a,d,e,f,g)}hj.X=1;function ij(a){return v[c[c[a]+9]](a)}ij.X=1;function jj(a,d){v[c[c[a]+12]](a,d)}jj.X=1;function kj(a,d){v[c[c[a]+8]](a,d)}kj.X=1;function lj(a){v[c[c[a]+13]](a)}lj.X=1;function mj(a,d,e,f){v[c[c[a]+5]](a,d,e,f)}mj.X=1;function nj(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}nj.X=1;function oj(a,d,e,f,g,h,i,j,l){return v[c[c[a]+2]](a,d,e,f,g,h,i,j,l)}oj.X=1;function pj(a,d,e){v[c[c[a]+11]](a,d,e)}pj.X=1;function qj(a,d,e){v[c[c[a]+3]](a,d,e)}qj.X=1;function Vca(a){return Ui(a)}Vca.X=1;function rj(){var a=xb(32);sj(a);return a}rj.X=1;function Wca(a){return tj(a)}Wca.X=1;function uj(a,d){var e=b;b+=1;k[e]=d;vj(a,e);b=e}uj.X=1;function wj(a){0!=(a|0)&&xe(a)}wj.X=1;function Xca(a){return Vi(a)}Xca.X=1;function Yca(a){return Wi(a)}Yca.X=1;function Zca(a){return Xi(a)}Zca.X=1;function xj(a,d,e){yj(a,d,e,.8999999761581421,.30000001192092896,1)}xj.X=1;function zj(a,d,e,f){yj(a,d,e,f,.30000001192092896,1)}zj.X=1;function Aj(a,d,e,f,g){yj(a,d,e,f,g,1)}Aj.X=1;function $ca(a,d,e,f,g,h){yj(a,d,e,f,g,h)}$ca.X=1;function ada(a){return Yi(a)}ada.X=1;function bda(a){return Bj(a)}bda.X=1;function cda(a,d){Cj(a,d)}cda.X=1;function dda(a){return Zi(a)}dda.X=1;function eda(a){return Dj(a)}eda.X=1;function fda(a){return $i(a)}fda.X=1;function Ej(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Ej.X=1;function Fj(a){return v[c[c[a]+4]](a)}Fj.X=1;function Gj(){var a=b;b+=8;var d=xb(88);Hj(a);Ij(d,a);b=a;return d}Gj.X=1;function Jj(a){var d=xb(88);Ij(d,a);return d}Jj.X=1;function Kj(a){return v[c[c[a]+2]](a)}Kj.X=1;function Lj(a){return v[c[c[a]+6]](a)}Lj.X=1;function Mj(a){Nj(a,3,3)}Mj.X=1;function Oj(a,d){Nj(a,d,3)}Oj.X=1;function gda(a,d,e){Nj(a,d,e)}gda.X=1;function Pj(a){return v[c[c[a]+3]](a)}Pj.X=1;function Qj(a,d,e){return v[c[c[a]+5]](a,d,e)}Qj.X=1;function Rj(a,d,e,f,g,h,i,j){return v[c[c[a]+3]](a,d,e,f,g,h,i,j)}Rj.X=1;function Sj(a,d){return v[c[c[a]+2]](a,d)}Sj.X=1;function Tj(a,d){v[c[c[a]+4]](a,d)}Tj.X=1;function Uj(a){var d=xb(16);hda(d,a);return d}Uj.X=1;function Vj(a,d,e,f){var g=xb(16);Wj(g,a,d,e,f);return g}Vj.X=1;function Xj(a){return c[a+279]}Xj.X=1;function ida(a,d){c[a]=d}ida.X=1;function Yj(a){return c[a+278]}Yj.X=1;function jda(a){return c[a]}jda.X=1;function Zj(a,d){c[a+284]=d}Zj.X=1;function $j(a){return c[a+277]}$j.X=1;function ak(a,d,e){c[a+277]=d;c[a+278]=e}ak.X=1;function bk(a){return c[a+284]}bk.X=1;function ck(a){return k[a+281]}ck.X=1;function dk(a){return c[a+283]}dk.X=1;function ek(a){return c[a+282]}ek.X=1;function fk(a,d){c[a+283]=d}fk.X=1;function gk(a,d){c[a+282]=d}gk.X=1;function hk(a){return c[a+16]}hk.X=1;function ik(a){return c[a+17]}ik.X=1;function jk(a,d,e,f,g){return v[c[c[a]+3]](a,d,e,f,g)}jk.X=1;function kk(a,d,e,f,g){v[c[c[a]+2]](a,d,e,f,g)}kk.X=1;function lk(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}lk.X=1;function mk(a){return v[c[c[a]+2]](a)}mk.X=1;function nk(a){return v[c[c[a]+4]](a)}nk.X=1;function ok(a){return v[c[c[a]+3]](a)}ok.X=1;function pk(a,d,e){return v[c[c[a]+5]](a,d,e)}pk.X=1;function kda(a){return Xj(a)}kda.X=1;function lda(a){return Yj(a)}lda.X=1;function mda(a,d){return qk(a,d)}mda.X=1;function qk(a,d){var e=k[d+20];return 1<(c[d+36]|0)?e<=rk(a):e<=ck(a)}qk.X=1;function nda(a,d,e){sk(a,d,e)}nda.X=1;function oda(a,d){tk(a,d)}oda.X=1;function uk(){var a=vk(1140);wk(a);return a}uk.X=1;function vk(a){return Ue(a,16)}vk.X=1;function xk(a,d,e,f,g){var h=vk(1140);yk(h,a,d,e,f,g);return h}xk.X=1;function pda(a,d){return zk(a,d)}pda.X=1;function qda(a,d){return Ak(a,d)}qda.X=1;function rda(a){return c[a]}rda.X=1;function sda(a,d){return a+69*d+1}sda.X=1;function tda(a){return rk(a)}tda.X=1;function uda(a){Bk(a)}uda.X=1;function Bk(a){var d;d=0;var e=a+279,f=(d|0)<(c[e]|0);a:do{if(f){for(var g=a+1;;){if(tk(a,g+69*d),d+=1,(d|0)>=(c[e]|0)){break a}}}}while(0);c[a+279]=0}Bk.X=1;function vda(a){return $j(a)}vda.X=1;function wda(a,d,e){ak(a,d,e)}wda.X=1;function xda(a,d){Ck(a,d)}xda.X=1;function Ck(a,d){var e;tk(a,a+69*d+1);e=Xj(a)-1;if((d|0)!=(e|0)){for(var f=a+69*e+1,g=a+69*d+1,h=f+69;f<h;f++,g++){c[g]=c[f],k[g]=k[f]}c[a+69*e+28]=0;k[a+69*e+53]=0;k[a+69*e+61]=0;k[a+69*e+69]=0;k[a+69*e+29]=0;c[a+69*e+30]=0;k[a+69*e+31]=0;k[a+69*e+32]=0;c[a+69*e+37]=0}e=a+279;c[e]-=1}Ck.X=1;function Dk(a){0!=(a|0)&&yh(a)}Dk.X=1;function yda(a){return ck(a)}yda.X=1;function zda(a,d,e){Ek(a,d,e)}zda.X=1;function Ek(a,d,e){var f,g,h,i,j;f=Fk(a+69*e+1);g=k[a+69*e+53];h=k[a+69*e+61];i=k[a+69*e+69];j=c[a+69*e+28];for(var l=a+69*e+1,m=d+69;d<m;d++,l++){c[l]=c[d],k[l]=k[d]}c[a+69*e+28]=j;k[a+69*e+29]=g;k[a+69*e+31]=h;k[a+69*e+32]=i;k[a+69*e+53]=g;k[a+69*e+61]=h;k[a+69*e+69]=i;c[a+69*e+37]=f}Ek.X=1;function Gk(a,d,e){v[c[c[a]+2]](a,d,e)}Gk.X=1;function Hk(a,d,e){v[c[c[a]+8]](a,d,e)}Hk.X=1;function Ada(a){return hk(a)}Ada.X=1;function Bda(a){return xf(a)}Bda.X=1;function Cda(a){return ik(a)}Cda.X=1;function Ik(a,d,e){return v[c[c[a]+13]](a,d,e)}Ik.X=1;function Jk(a){return v[c[c[a]+7]](a)}Jk.X=1;function Dda(a){Kk(a)}Dda.X=1;function Lk(a){return Ue(a,16)}Lk.X=1;function Mk(a){return v[c[c[a]+12]](a)}Mk.X=1;function Eda(a,d){Je(a,d)}Eda.X=1;function Nk(a){return v[c[c[a]+9]](a)}Nk.X=1;function Fda(a){return Ge(a)}Fda.X=1;function Gda(a){return Ye(a)}Gda.X=1;function Ok(a,d){v[c[c[a]+6]](a,d)}Ok.X=1;function Pk(){var a=Lk(92);Qk(a,1);return a}Pk.X=1;function Rk(a){var a=a&1,d=Lk(92);Qk(d,a&1);return d}Rk.X=1;function Sk(a){return c[a+6]}Sk.X=1;function Tk(a,d){c[a+21]=d}Tk.X=1;function Uk(a,d,e,f){f&1?c[a+25]=d:c[a+24]=d;c[a+26]=e}Uk.X=1;function Vk(a){return c[a+23]&1}Vk.X=1;function Wk(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}Wk.X=1;function Xk(a,d){return v[c[c[a]+5]](a,d)}Xk.X=1;function Hda(a,d){return Yk(a,d)}Hda.X=1;function Yk(a,d){return c[Zk(a+3,d)+16]}Yk.X=1;function Ida(a,d,e){$k(a,d,e)}Ida.X=1;function Jda(a){return zf(a)}Jda.X=1;function Kda(a,d){return al(a,d)}Kda.X=1;function al(a,d){return Zk(a+3,d)}al.X=1;function Lda(a){return Me(a)}Lda.X=1;function Mda(a){return Bf(a)}Mda.X=1;function Nda(a){return bl(a)}Nda.X=1;function bl(a){return Zk(a+3,0)}bl.X=1;function cl(a){return v[c[c[a]+11]](a)}cl.X=1;function dl(a,d){v[c[c[a]+10]](a,d)}dl.X=1;function Oda(a){return el(a)}Oda.X=1;function el(a){return fl(a+3)}el.X=1;function Pda(a,d){gl(a,d)}Pda.X=1;function hl(a){v[c[c[a]+16]](a)}hl.X=1;function Qda(a){return Kf(a)}Qda.X=1;function il(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}il.X=1;function jl(a,d,e){kl(a,d,e,1)}jl.X=1;function ll(a,d,e,f){kl(a,d,e,f&1)}ll.X=1;function ml(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}ml.X=1;function nl(a){return v[c[c[a]+4]](a)}nl.X=1;function ol(a,d){v[c[c[a]+14]](a,d)}ol.X=1;function Rda(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Rda.X=1;function Sda(a,d,e,f){pl(a,d,e,f)}Sda.X=1;function ql(a,d){v[c[c[a]+15]](a,d)}ql.X=1;function Tda(a){return Ie(a)}Tda.X=1;function Uda(a){return Uf(a)}Uda.X=1;function Vda(a){return Gf(a)}Vda.X=1;function rl(a,d){v[c[c[a]+17]](a,d)}rl.X=1;function sl(a,d){v[c[c[a]+15]](a,d)}sl.X=1;function Wda(a){return a+27}Wda.X=1;function tl(a,d){v[c[c[a]+11]](a,d)}tl.X=1;function Xda(a){return Sk(a)}Xda.X=1;function ul(a,d){v[c[c[a]+20]](a,d)}ul.X=1;function vl(a,d,e,f){v[c[c[a]+21]](a,d,e,f)}vl.X=1;function wl(a){v[c[c[a]+29]](a)}wl.X=1;function xl(a,d){v[c[c[a]+31]](a,d)}xl.X=1;function zl(a){return v[c[c[a]+4]](a)}zl.X=1;function Yda(a,d){Tk(a,d)}Yda.X=1;function Al(a){v[c[c[a]+10]](a)}Al.X=1;function Zda(a){return a+1}Zda.X=1;function Bl(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}Bl.X=1;function Cl(a,d){v[c[c[a]+14]](a,d)}Cl.X=1;function Dl(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}Dl.X=1;function El(a){return v[c[c[a]+25]](a)}El.X=1;function Fl(a,d){v[c[c[a]+8]](a,d,1,-1)}Fl.X=1;function Gl(a,d,e){v[c[c[a]+8]](a,d,e,-1)}Gl.X=1;function Hl(a,d,e,f){v[c[c[a]+8]](a,d,e,f)}Hl.X=1;function Il(a,d){v[c[c[a]+22]](a,d)}Il.X=1;function $da(a,d,e){Jl(a,d,e)}$da.X=1;function Kl(a,d){Uk(a,d,0,0)}Kl.X=1;function Ll(a,d,e){Uk(a,d,e,0)}Ll.X=1;function Ml(a,d,e,f){Uk(a,d,e,f&1)}Ml.X=1;function aea(a){return Vk(a)}aea.X=1;function Nl(a){v[c[c[a]+2]](a)}Nl.X=1;function Ol(a,d){v[c[c[a]+3]](a,d)}Ol.X=1;function Pl(a){v[c[c[a]+19]](a)}Pl.X=1;function Ql(a,d,e,f,g){Rl(a,d,e,f,g,0)}Ql.X=1;function bea(a,d,e,f,g,h){Rl(a,d,e,f,g,h)}bea.X=1;function cea(a){return Sl(a)}cea.X=1;function Sl(a){return Tl(a+1)}Sl.X=1;function Ul(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Ul.X=1;function Vl(a,d){v[c[c[a]+13]](a,d,0)}Vl.X=1;function Wl(a,d,e){v[c[c[a]+13]](a,d,e&1)}Wl.X=1;function dea(a,d,e,f){Xl(a,d,e,f)}dea.X=1;function Yl(a){var d=b;b+=4;0==c[Zl]<<24>>24&&Hb(Zl);v[c[c[a]+18]](d,a);c[$l]=c[d];k[$l]=k[d];c[$l+1]=c[d+1];k[$l+1]=k[d+1];c[$l+2]=c[d+2];k[$l+2]=k[d+2];c[$l+3]=c[d+3];k[$l+3]=k[d+3];b=d;return $l}Yl.X=1;function am(a){return c[a+21]}am.X=1;function bm(a,d){c[a+23]=d&1}bm.X=1;function cm(a,d){c[a+26]=d}cm.X=1;function dm(a){return c[a+26]}dm.X=1;function em(a,d){k[a+2]=d}em.X=1;function fm(a){return k[a+1]}fm.X=1;function gm(a){return k[a+2]}gm.X=1;function eea(a,d){k[a]=d}eea.X=1;function hm(a,d){k[a+1]=d}hm.X=1;function fea(a){return k[a]}fea.X=1;function im(a,d){var e;e=d+c[a+2];e>>>0<c[a+1]>>>0?(c[a+2]=e,e=c[a]+(c[a+2]-d)):e=0;return e}im.X=1;function jm(a){return c[a+1]-c[a+2]}jm.X=1;function km(a,d){(d|0)==(c[a+3]|0)&&(c[a+3]=c[d],c[a+2]=c[d+1]-8+ -c[a])}km.X=1;function lm(a){v[c[c[a]+5]](a)}lm.X=1;function gea(a){return am(a)}gea.X=1;function hea(a,d,e,f,g,h){mm(a,d,e,f,g,h)}hea.X=1;function nm(a,d){v[c[c[a]+16]](a,d)}nm.X=1;function pm(a,d){bm(a,d&1)}pm.X=1;function iea(a,d){cm(a,d)}iea.X=1;function qm(a,d){v[c[c[a]+33]](a,d)}qm.X=1;function rm(a,d){return v[c[c[a]+26]](a,d)}rm.X=1;function sm(a){return v[c[c[a]+24]](a)}sm.X=1;function tm(a,d){return v[c[c[a]+12]](a,d,1,.01666666753590107)}tm.X=1;function um(a,d,e){return v[c[c[a]+12]](a,d,e,.01666666753590107)}um.X=1;function vm(a,d,e,f){return v[c[c[a]+12]](a,d,e,f)}vm.X=1;function wm(a,d){v[c[c[a]+32]](a,d)}wm.X=1;function xm(a){return v[c[c[a]+28]](a)}xm.X=1;function jea(a,d){ym(a,d)}jea.X=1;function zm(a,d){v[c[c[a]+30]](a,d)}zm.X=1;function kea(a){return Am(a)}kea.X=1;function Am(a){a=c[a+21];return v[c[c[a]+9]](a)}Am.X=1;function lea(a){return dm(a)}lea.X=1;function Bm(a,d){v[c[c[a]+9]](a,d)}Bm.X=1;function Cm(a,d){v[c[c[a]+23]](a,d)}Cm.X=1;function mea(a,d,e,f,g,h,i,j){Dm(a,d,e,f,g,h,i,j)}mea.X=1;function nea(a){return a+7}nea.X=1;function Em(a){var d=xb(8);oea(d,a);return d}Em.X=1;function Fm(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Fm.X=1;function Gm(a,d,e,f){return v[c[c[a]+2]](a,d,e,f)}Gm.X=1;function Hm(a){0!=(a|0)&&xe(a)}Hm.X=1;function Im(){var a=xb(12);Jm(a);return a}Im.X=1;function Km(a){0!=(a|0)&&(Lm(a),xe(a))}Km.X=1;function pea(a,d){Mm(a,d)}pea.X=1;function Mm(a,d){Lm(a);c[a]=Ue(d,16);c[a+1]=d}Mm.X=1;function Nm(a){var d=xb(20);Om(d,a);return d}Nm.X=1;function qea(a,d){return im(a,d)}qea.X=1;function rea(a){Lm(a)}rea.X=1;function Lm(a){0==(c[a+2]|0)&&(!(c[a+4]&1)&&0!=(c[a]|0)&&yh(c[a]),c[a]=0,c[a+2]=0)}Lm.X=1;function sea(a){return Pm(a)}sea.X=1;function Pm(a){var d;d=im(a,8);c[d]=c[a+3];c[d+1]=c[a]+c[a+2];return c[a+3]=d}Pm.X=1;function tea(a){return jm(a)}tea.X=1;function uea(a,d){km(a,d)}uea.X=1;function Qm(){var a=xb(72);Rm(a);return a}Qm.X=1;function Sm(a){0!=(a|0)&&xe(a)}Sm.X=1;function vea(a,d){Tm(a,d)}vea.X=1;function Tm(a,d){var e=2==(ki(a)|0);a:do{if(!e&&4!=(ki(a)|0)){var f=Um(a+76)<k[a+116]*k[a+116];do{if(f&&Um(a+80)<k[a+117]*k[a+117]){e=a+55;k[e]+=d;break a}}while(0);k[a+55]=0;Li(a,0)}}while(0)}Tm.X=1;function wea(a,d){Xh(a,d)}wea.X=1;function xea(a){return Vm(a)}xea.X=1;function Vm(a){var d,e=4==(ki(a)|0);a:do{if(e){d=0}else{if(c[Wm]&1|0==k[Xm]){d=0}else{d=2==(ki(a)|0);do{if(!d&&3!=(ki(a)|0)){if(k[a+55]>k[Xm]){d=1;break a}d=0;break a}}while(0);d=1}}}while(0);return d}Vm.X=1;function Ym(a,d){c[a+151]=d}Ym.X=1;function Zm(a){return k[a+84]}Zm.X=1;function $m(a,d){c[a+124]=d}$m.X=1;function an(a){return k[a+116]}an.X=1;function bn(a){return k[a+110]}bn.X=1;function cn(a){var d=b;b+=4;0==c[dn]<<24>>24&&Hb(dn);yea(d,a);c[en]=c[d];k[en]=k[d];c[en+1]=c[d+1];k[en+1]=k[d+1];c[en+2]=c[d+2];k[en+2]=k[d+2];c[en+3]=c[d+3];k[en+3]=k[d+3];b=d;return en}cn.X=1;function zea(a,d,e){fn(a,d,e)}zea.X=1;function Aea(a,d){gn(a,d)}Aea.X=1;function gn(a,d){c[a+118]=d;if(0!=(c[a+118]|0)){v[c[c[d]+2]](d,a+1)}}gn.X=1;function Bea(a){hn(a)}Bea.X=1;function hn(a){var d=b;b+=6;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5;k[d]=0;k[e]=0;k[f]=0;pe(a+101,d,e,f);k[g]=0;k[h]=0;k[i]=0;pe(a+105,g,h,i);b=d}hn.X=1;function Cea(a){return a+33}Cea.X=1;function jn(a,d){v[c[c[a]+3]](a,d)}jn.X=1;function Dea(a){return oi(a)}Dea.X=1;function Eea(a){return a+146}Eea.X=1;function Fea(a){return a+138}Fea.X=1;function Gea(a,d){Yh(a,d)}Gea.X=1;function Hea(a){return Zm(a)}Hea.X=1;function Iea(a){return $h(a)}Iea.X=1;function Jea(a){return a+101}Jea.X=1;function Kea(a){return a+1+12}Kea.X=1;function Lea(a){return Ph(a)}Lea.X=1;function Mea(a){return mi(a)}Mea.X=1;function Nea(a){return a+93}Nea.X=1;function Oea(a,d){kn(a,d)}Oea.X=1;function Pea(a,d){$m(a,d)}Pea.X=1;function Qea(a){return Ki(a)}Qea.X=1;function Rea(a){return ki(a)}Rea.X=1;function Sea(a){return a+105}Sea.X=1;function Tea(a){return a+64}Tea.X=1;function Uea(a,d,e){return ln(a,d,e)}Uea.X=1;function ln(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+12;N(f,d,a+1+12);qn(g,f,e);rn(i,g,a+64);qn(h,i,f);a=k[a+84]+J(e,h);b=f;return a}ln.X=1;function Vea(a){return an(a)}Vea.X=1;function Wea(a){return Ni(a)}Wea.X=1;function Xea(a,d,e){sn(a,d,e)}Xea.X=1;function sn(a,d,e){var f=b;b+=8;var g=f+4;tn(a,d);ig(g,d,a+85);qn(f,e,g);un(a,f);b=f}sn.X=1;function Yea(a,d,e){vn(a,d,e)}Yea.X=1;function vn(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+12;wn(g,a+76,a+126);wn(i,a+80,a+130);qn(h,i,d);wn(f,g,h);c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];b=f}vn.X=1;function Zea(a){return Sh(a)}Zea.X=1;function $ea(a){return Nh(a)}$ea.X=1;function afa(a,d){Oh(a,d)}afa.X=1;function bfa(a){return a+130}bfa.X=1;function cfa(a,d){tn(a,d)}cfa.X=1;function tn(a,d){var e=b;b+=4;ig(e,d,a+85);xn(a+101,e);b=e}tn.X=1;function dfa(a,d,e){yn(a,d,e)}dfa.X=1;function yn(a,d,e){var f=b;b+=8;var g=f+4;0!=k[a+84]&&(zn(a,d),0!=(a+134|0)&&(ig(g,d,a+85),qn(f,e,g),An(a,f)));b=f}yn.X=1;function efa(a,d){un(a,d)}efa.X=1;function un(a,d){var e=b;b+=4;ig(e,d,a+134);xn(a+105,e);b=e}un.X=1;function ffa(a){return Uh(a)}ffa.X=1;function gfa(a){return a+134}gfa.X=1;function hfa(a,d,e){Bn(a,d,e)}hfa.X=1;function ifa(a){return a+37}ifa.X=1;function jfa(a,d){Fi(a,d)}jfa.X=1;function kfa(a){return a+80}kfa.X=1;function lfa(a){return a+76}lfa.X=1;function Cn(a,d){return v[c[c[a]]](a,d)}Cn.X=1;function mfa(a){return ci(a)}mfa.X=1;function nfa(a){return ei(a)}nfa.X=1;function ofa(a,d){fi(a,d)}ofa.X=1;function pfa(a,d){Dn(a,d)}pfa.X=1;function Dn(a,d){var e=a+80;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Dn.X=1;function qfa(a,d){En(a,d)}qfa.X=1;function rfa(a,d){Fn(a,d)}rfa.X=1;function sfa(a){return Mn(a)}sfa.X=1;function Mn(a){return 0!=(tfa(a)|0)}Mn.X=1;function ufa(a,d){hi(a,d)}ufa.X=1;function vfa(a,d){return Nn(a,d)}vfa.X=1;function Nn(a,d){var e=b;b+=4;rn(e,d,a+64);var f=J(d,e);b=e;return f}Nn.X=1;function wfa(a){return bn(a)}wfa.X=1;function xfa(a,d){On(a,d)}xfa.X=1;function Pn(a){var d=zi(608);Qn(d,a);return d}Pn.X=1;function Rn(a,d,e){var f=b;b+=7;var g=f+4,h=f+5,i=f+6,j=zi(608);k[g]=0;k[h]=0;k[i]=0;H(f,g,h,i);Sn(j,a,d,e,f);b=f;return j}Rn.X=1;function Tn(a,d,e,f){var g=zi(608);Sn(g,a,d,e,f);return g}Tn.X=1;function On(a,d){c[a+47]=d}On.X=1;function Un(a){return c[a+118]}Un.X=1;function Vn(a){return k[a+117]}Vn.X=1;function Wn(a){return c[a+47]}Wn.X=1;function Xn(a){return c[a+48]}Xn.X=1;function Yn(a){return c[a+150]}Yn.X=1;function Zn(a){return c[a+124]}Zn.X=1;function $n(a,d){c[a+150]=d}$n.X=1;function yfa(a,d){ao(a,d)}yfa.X=1;function zfa(a){return a+134}zfa.X=1;function Afa(a){return Pi(a)}Afa.X=1;function Bfa(a,d){Qi(a,d)}Bfa.X=1;function Cfa(a){return Ti(a)}Cfa.X=1;function Dfa(a,d){kn(a,d)}Dfa.X=1;function Efa(a){bo(a)}Efa.X=1;function bo(a){var d=b;b+=8;var e=d+4;0!=k[a+84]&&(wn(d,a+76,a+126),co(a,d),wn(e,a+80,a+130),Dn(a,e));b=d}bo.X=1;function Ffa(a,d){eo(a,d)}Ffa.X=1;function Gfa(a,d){qi(a,d)}Gfa.X=1;function Hfa(a){fo(a)}Hfa.X=1;function go(a,d,e){return v[c[c[a]+5]](a,d,e)}go.X=1;function Ifa(a,d,e,f){ho(a,d,e,f)}Ifa.X=1;function ho(a,d,e,f){var g=b;b+=13;var h=g+1,i=g+5,j=g+9;k[g]=f;0!=k[a+84]&&(Q(h,d,g),xn(a+126,h),Q(j,a+134,g),ig(i,e,j),xn(a+130,i));b=g}ho.X=1;function Jfa(a,d){Rh(a,d)}Jfa.X=1;function io(a){ui(a,0)}io.X=1;function jo(a,d){ui(a,d&1)}jo.X=1;function Kfa(a){return Un(a)}Kfa.X=1;function Lfa(a,d){Vh(a,d)}Lfa.X=1;function Mfa(a,d,e,f){ko(a,d,e,f)}Mfa.X=1;function ko(a,d,e,f){var g=b;b+=13;var h=g+1,i=g+5,j=g+9;k[g]=f;0!=k[a+84]&&(Q(h,d,g),xn(a+142,h),Q(j,a+134,g),ig(i,e,j),xn(a+146,i));b=g}ko.X=1;function Nfa(a,d){Th(a,d)}Nfa.X=1;function lo(a,d){var e=b;b+=4;0==c[mo]<<24>>24&&Hb(mo);no(e,a,d);c[oo]=c[e];k[oo]=k[e];c[oo+1]=c[e+1];k[oo+1]=k[e+1];c[oo+2]=c[e+2];k[oo+2]=k[e+2];c[oo+3]=c[e+3];k[oo+3]=k[e+3];b=e;return oo}lo.X=1;function no(a,d,e){var f=b;b+=4;qn(f,d+80,e);wn(a,d+76,f);b=f}no.X=1;function Ofa(a){return Wh(a)}Ofa.X=1;function Pfa(a){return a+85}Pfa.X=1;function Qfa(a){return a+41}Qfa.X=1;function Rfa(a){return Vn(a)}Rfa.X=1;function Sfa(a){return a+17}Sfa.X=1;function Tfa(a,d,e){po(a,d,e)}Tfa.X=1;function qo(a,d){v[c[c[a]+6]](a,d)}qo.X=1;function Ufa(a,d){ro(a,d)}Ufa.X=1;function ro(a,d){xn(a+1+12,d)}ro.X=1;function Vfa(a){return a+1}Vfa.X=1;function Wfa(a){return Wn(a)}Wfa.X=1;function Xfa(a){return Xn(a)}Xfa.X=1;function Yfa(a,d){Hi(a,d)}Yfa.X=1;function Zfa(a){return a+126}Zfa.X=1;function $fa(a){return li(a)}$fa.X=1;function aga(a){return so(a)}aga.X=1;function so(a){return 0!=(ji(a)&2|0)?a:0}so.X=1;function bga(a){return ii(a)}bga.X=1;function cga(a,d){to(a,d)}cga.X=1;function dga(a,d){Ji(a,d)}dga.X=1;function ega(a,d){Li(a,d)}ega.X=1;function fga(a){return a+130}fga.X=1;function gga(a){return pi(a)}gga.X=1;function hga(a,d){return uo(a,d)}hga.X=1;function uo(a,d){return c[vo(a+119,d)]}uo.X=1;function iga(a,d){Mi(a,d)}iga.X=1;function jga(a){return a+1}jga.X=1;function kga(a){return Ri(a)}kga.X=1;function lga(a,d){Si(a,d)}lga.X=1;function mga(a){return Zn(a)}mga.X=1;function nga(a,d){wo(a,d)}nga.X=1;function oga(a){return gi(a)}oga.X=1;function pga(a,d){xo(a,d)}pga.X=1;function xo(a,d){var e=a+134;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}xo.X=1;function qga(a){return a+142}qga.X=1;function rga(a){yo(a)}rga.X=1;function sga(a,d){ri(a,d)}sga.X=1;function tga(a,d){Qh(a,d)}tga.X=1;function uga(a,d,e){zo(a,d,e)}uga.X=1;function vga(a){return ji(a)}vga.X=1;function Ao(a){return v[c[c[a]+4]](a)}Ao.X=1;function wga(a,d){return Di(a,d)}wga.X=1;function xga(a){return a+97}xga.X=1;function yga(a,d){An(a,d)}yga.X=1;function An(a,d){var e=b;b+=8;var f=e+4;Bo(f,a+64,d);ig(e,f,a+134);xn(a+80,e);b=e}An.X=1;function zga(a){return a+142}zga.X=1;function Aga(a,d){Co(a,d)}Aga.X=1;function Co(a,d){var e=b;b+=4;var f=a+85;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];Q(e,a+85,a+84);f=a+138;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];b=e}Co.X=1;function Bga(a,d){co(a,d)}Bga.X=1;function co(a,d){var e=a+76;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}co.X=1;function Cga(a){return ai(a)}Cga.X=1;function Dga(a,d){zn(a,d)}Dga.X=1;function Ega(){return 0}Ega.X=1;function Do(a,d,e){k[a+116]=d;k[a+117]=e}Do.X=1;function Eo(a){return c[a+151]}Eo.X=1;function Fo(a){return k[a+109]}Fo.X=1;function Go(a){return c[a+15]&1}Go.X=1;function Ho(a){return c[a+8]}Ho.X=1;function Io(a){return c[a+7]}Io.X=1;function Jo(a,d){c[a+4]=d}Jo.X=1;function Ko(a,d){c[a+6]=d&1}Ko.X=1;function Lo(a){return c[a+3]}Lo.X=1;function zn(a,d){var e=b;b+=8;var f=e+4;ig(f,d,a+85);Q(e,f,a+84);xn(a+76,e);b=e}zn.X=1;function Fga(a,d){Oi(a,d)}Fga.X=1;function Gga(a){return a+126}Gga.X=1;function Hga(a,d){Mo(a,d)}Hga.X=1;function Mo(a,d){var e=a+97;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Mo.X=1;function Iga(a,d,e){Do(a,d,e)}Iga.X=1;function No(a){if(0!=(a|0)){v[c[c[a]+2]](a)}}No.X=1;function Jga(a,d){Oo(a,d)}Jga.X=1;function Oo(a,d){var e=b;b+=4;wn(e,a+80,a+130);c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];b=e}Oo.X=1;function Kga(a){return Po(a)}Kga.X=1;function Po(a){return Qo(a+119)}Po.X=1;function Lga(a){return di(a)}Lga.X=1;function Mga(a){return ni(a)}Mga.X=1;function Nga(a){return a+146}Nga.X=1;function Oga(a,d){wi(a,d)}Oga.X=1;function Pga(a,d){Zh(a,d)}Pga.X=1;function Qga(a,d){Ro(a,d)}Qga.X=1;function Rga(a){return Fo(a)}Rga.X=1;function Sga(a){So(a)}Sga.X=1;function To(a,d,e){return 0!=(v[c[c[a]+4]](a,d,e)|0)}To.X=1;function Uo(a,d,e,f){return v[c[c[a]+2]](a,d,e,f&1)}Uo.X=1;function Tga(a){return a+26}Tga.X=1;function Vo(a,d,e){Wo(a,d,e,1)}Vo.X=1;function Uga(a,d,e,f){Wo(a,d,e,f)}Uga.X=1;function Vga(a,d,e,f){Xo(a,d,e,f)}Vga.X=1;function Xo(a,d,e,f){var g=b;b+=8;var h=g+4;N(h,e,a+1);ig(g,h,a+9);a=k[g];0!=(f|0)?(c[d]=(Math.floor(a+1)&65535|1)&65535,c[d+1]=(Math.floor(k[g+1]+1)&65535|1)&65535,c[d+2]=(Math.floor(k[g+2]+1)&65535|1)&65535):(c[d]=Math.floor(a)&65534,c[d+1]=Math.floor(k[g+1])&65534,c[d+2]=Math.floor(k[g+2])&65534);b=g}Xo.X=1;function Wga(a){return Go(a)}Wga.X=1;function Xga(a,d,e,f,g){Yo(a,d,e,f,g)}Xga.X=1;function Yga(a){return Zo(a)}Yga.X=1;function Zga(a){return a+31}Zga.X=1;function $ga(a,d,e,f){$o(a,d,e,f)}$ga.X=1;function aha(a,d,e,f){ap(a,d,e,f)}aha.X=1;function bp(a,d,e,f,g){cp(a,d,e&1,f,g)}bp.X=1;function bha(a,d,e,f){dp(a,d,e,f)}bha.X=1;function ep(a,d,e){return cha(a,d,e&1)}ep.X=1;function dha(a,d,e,f){fp(a,d,e,f)}dha.X=1;function fp(a,d,e,f){var g=b;b+=4;c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];gp(g,a+1);hp(g,a+5);Xo(a,d,g,f);b=g}fp.X=1;function eha(a,d,e,f){ip(a,d,e,f)}eha.X=1;function jp(a,d){v[c[c[a]+6]](a,d)}jp.X=1;function kp(a){return v[c[c[a]+3]](a)}kp.X=1;function lp(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}lp.X=1;function mp(a,d){v[c[c[a]+5]](a,d)}mp.X=1;function np(a,d,e,f){return v[c[c[a]+7]](a,d,e,f&1)}np.X=1;function fha(a){return a+37}fha.X=1;function op(a,d){var e=b;b+=4;0==c[pp]<<24>>24&&Hb(pp);qp(e,a,d);c[rp]=c[e];k[rp]=k[e];c[rp+1]=c[e+1];k[rp+1]=k[e+1];c[rp+2]=c[e+2];k[rp+2]=k[e+2];c[rp+3]=c[e+3];k[rp+3]=k[e+3];b=e;return rp}op.X=1;function qp(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=(c[e]&65535)/k[d+9];k[g]=(c[e+1]&65535)/k[d+9+1];k[h]=(c[e+2]&65535)/k[d+9+2];pe(a,f,g,h);xn(a,d+1);b=f}qp.X=1;function gha(a,d,e,f,g,h){sp(a,d,e,f,g,h)}gha.X=1;function hha(a){return Ue(a,16)}hha.X=1;function iha(a){return Ho(a)}iha.X=1;function tp(a){v[c[c[a]+2]](a)}tp.X=1;function jha(a){return Io(a)}jha.X=1;function up(a,d,e){return v[c[c[a]+10]](a,d,e)}up.X=1;function vp(a,d){Ko(a,d&1)}vp.X=1;function kha(a){return Lo(a)}kha.X=1;function wp(){var a=hha(172);xp(a);return a}wp.X=1;function yp(a){return c[a+4]}yp.X=1;function zp(a,d){k[a+4]=d}zp.X=1;function Ap(a){return c[a+5]&1}Ap.X=1;function Bp(a,d){c[a+3]=d}Bp.X=1;function Cp(a){return c[a+4]}Cp.X=1;function Dp(a){return k[a+10]}Dp.X=1;function Ep(a,d){k[a+9]=d}Ep.X=1;function Fp(a){return c[a+6]&1}Fp.X=1;function Gp(a){return c[a+3]}Gp.X=1;function Hp(a,d){c[a+5]=d&1}Hp.X=1;function Ip(a){return c[a+3]}Ip.X=1;function Jp(a,d){k[a+10]=d}Jp.X=1;function Kp(a,d){c[a+2]=d}Kp.X=1;function Lp(a){return k[a+9]}Lp.X=1;function Mp(a){return k[a+4]}Mp.X=1;function Np(a){return c[a+2]}Np.X=1;function Op(a){return k[a+9]}Op.X=1;function Pp(a,d){c[a+3]=d}Pp.X=1;function Qp(a,d,e){v[c[c[a]+7]](a,d,e,-1)}Qp.X=1;function Rp(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}Rp.X=1;function Sp(a,d){return v[c[c[a]+8]](a,d,-1)}Sp.X=1;function Tp(a,d,e){return v[c[c[a]+8]](a,d,e)}Tp.X=1;function Up(a,d){v[c[c[a]+4]](a,d)}Up.X=1;function Vp(a,d){v[c[c[a]+5]](a,d)}Vp.X=1;function lha(a,d){zp(a,d)}lha.X=1;function Wp(a){return v[c[c[a]+9]](a)}Wp.X=1;function mha(a){return Ap(a)}mha.X=1;function nha(a,d){Bp(a,d)}nha.X=1;function oha(a){return Cp(a)}oha.X=1;function pha(a){return Dp(a)}pha.X=1;function qha(a,d){Ep(a,d)}qha.X=1;function rha(a){return Fp(a)}rha.X=1;function Xp(a){return c[a+4]}Xp.X=1;function sha(a){return Gp(a)}sha.X=1;function Yp(a,d){Hp(a,d&1)}Yp.X=1;function tha(a){return Ip(a)}tha.X=1;function uha(a,d){Jp(a,d)}uha.X=1;function vha(a,d){Kp(a,d)}vha.X=1;function wha(a){return Lp(a)}wha.X=1;function Zp(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Zp.X=1;function $p(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}$p.X=1;function xha(a){return Mp(a)}xha.X=1;function yha(a){return Np(a)}yha.X=1;function aq(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}aq.X=1;function zha(a){return Op(a)}zha.X=1;function Aha(a,d){Pp(a,d)}Aha.X=1;function bq(a,d,e){v[c[c[a]+8]](a,d,e)}bq.X=1;function cq(a){return v[c[c[a]+26]](a)}cq.X=1;function dq(a,d){var e=b;b+=4;0==c[eq]<<24>>24&&Hb(eq);v[c[c[a]+15]](e,a,d);c[fq]=c[e];k[fq]=k[e];c[fq+1]=c[e+1];k[fq+1]=k[e+1];c[fq+2]=c[e+2];k[fq+2]=k[e+2];c[fq+3]=c[e+3];k[fq+3]=k[e+3];b=e;return fq}dq.X=1;function Bha(a,d){Je(a,d)}Bha.X=1;function gq(a,d,e){return v[c[c[a]+28]](a,d,e)}gq.X=1;function hq(a){return v[c[c[a]+22]](a)}hq.X=1;function iq(a){return v[c[c[a]+7]](a)}iq.X=1;function jq(a){return v[c[c[a]+19]](a)}jq.X=1;function Cha(a){return Ye(a)}Cha.X=1;function kq(a,d,e){v[c[c[a]+25]](a,d,e)}kq.X=1;function lq(a,d){var e=b;b+=4;0==c[mq]<<24>>24&&Hb(mq);tf(e,a,d);c[nq]=c[e];k[nq]=k[e];c[nq+1]=c[e+1];k[nq+1]=k[e+1];c[nq+2]=c[e+2];k[nq+2]=k[e+2];c[nq+3]=c[e+3];k[nq+3]=k[e+3];b=e;return nq}lq.X=1;function Dha(a,d,e,f){df(a,d,e,f)}Dha.X=1;function oq(a){return v[c[c[a]+12]](a)}oq.X=1;function pq(a){return v[c[c[a]+23]](a)}pq.X=1;function qq(a){return v[c[c[a]+9]](a)}qq.X=1;function rq(a,d,e,f){v[c[c[a]+24]](a,d,e,f)}rq.X=1;function Eha(a){return a+3}Eha.X=1;function sq(a,d){var e=b;b+=4;0==c[tq]<<24>>24&&Hb(tq);kf(e,a,d);c[uq]=c[e];k[uq]=k[e];c[uq+1]=c[e+1];k[uq+1]=k[e+1];c[uq+2]=c[e+2];k[uq+2]=k[e+2];c[uq+3]=c[e+3];k[uq+3]=k[e+3];b=e;return uq}sq.X=1;function vq(a,d){var e=b;b+=4;0==c[wq]<<24>>24&&Hb(wq);v[c[c[a]+16]](e,a,d);c[xq]=c[e];k[xq]=k[e];c[xq+1]=c[e+1];k[xq+1]=k[e+1];c[xq+2]=c[e+2];k[xq+2]=k[e+2];c[xq+3]=c[e+3];k[xq+3]=k[e+3];b=e;return xq}vq.X=1;function yq(a,d){v[c[c[a]+6]](a,d)}yq.X=1;function zq(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}zq.X=1;function Fha(a){return Le(a)}Fha.X=1;function Gha(a){return Gf(a)}Gha.X=1;function Aq(a,d){return v[c[c[a]+5]](a,d)}Aq.X=1;function Hha(a){return xf(a)}Hha.X=1;function Iha(a){return zf(a)}Iha.X=1;function Bq(a,d,e){return v[c[c[a]+13]](a,d,e)}Bq.X=1;function Jha(a){return Me(a)}Jha.X=1;function Kha(a){return Bf(a)}Kha.X=1;function Cq(a){return v[c[c[a]+11]](a)}Cq.X=1;function Dq(a,d,e){v[c[c[a]+20]](a,d,e)}Dq.X=1;function Eq(a,d){v[c[c[a]+10]](a,d)}Eq.X=1;function Fq(a){return v[c[c[a]+21]](a)}Fq.X=1;function Gq(a,d){c[a+35]=d}Gq.X=1;function Hq(a){return c[a+39]&1}Hq.X=1;function Iq(a,d){c[a+38]=d&1}Iq.X=1;function Jq(a){return c[a+28]}Jq.X=1;function Kq(a,d){c[a+24]=d}Kq.X=1;function Lq(a){return c[a+38]&1}Lq.X=1;function Mq(a,d){c[a+27]=d}Mq.X=1;function Nq(a,d){c[a+39]=d&1}Nq.X=1;function Oq(a,d){c[a+36]=d}Oq.X=1;function Pq(a,d){c[a+30]=d}Pq.X=1;function Qq(a){return c[a+31]}Qq.X=1;function Rq(a,d){c[a+37]=d}Rq.X=1;function Sq(a){return c[a+26]}Sq.X=1;function Tq(a,d){c[a+32]=d}Tq.X=1;function Uq(a,d){c[a+40]=d&1}Uq.X=1;function Vq(a,d){c[a+33]=d}Vq.X=1;function Wq(a){return c[a+27]}Wq.X=1;function Xq(a){return c[a+35]}Xq.X=1;function Yq(a,d){c[a+28]=d}Yq.X=1;function Zq(a){return c[a+36]}Zq.X=1;function $q(a,d){k[a+34]=d}$q.X=1;function ar(a,d){k[a+25]=d}ar.X=1;function br(a){return c[a+32]}br.X=1;function cr(a){return c[a+29]}cr.X=1;function dr(a,d){c[a+29]=d}dr.X=1;function er(a){return k[a+25]}er.X=1;function fr(a){return c[a+37]}fr.X=1;function gr(a){return c[a+40]&1}gr.X=1;function hr(a){return c[a+30]}hr.X=1;function ir(a){return k[a+34]}ir.X=1;function jr(a,d){k[a+25]=d}jr.X=1;function kr(a){return k[a+25]}kr.X=1;function lr(a){return c[a+24]}lr.X=1;function mr(a){return c[a+33]}mr.X=1;function or(a,d){c[a+31]=d}or.X=1;function pr(a,d){c[a+26]=d}pr.X=1;function Lha(a,d){Jf(a,d)}Lha.X=1;function Mha(a){return Kf(a)}Mha.X=1;function Nha(a){return Mf(a)}Nha.X=1;function qr(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}qr.X=1;function Oha(a){return a+7}Oha.X=1;function rr(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}rr.X=1;function sr(a){return v[c[c[a]+4]](a)}sr.X=1;function tr(a,d){v[c[c[a]+14]](a,d)}tr.X=1;function ur(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}ur.X=1;function vr(a,d,e,f){v[c[c[a]+27]](a,d,e,f)}vr.X=1;function Pha(a){return Ge(a)}Pha.X=1;function Qha(a){return yg(a)}Qha.X=1;function Rha(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Rha.X=1;function Sha(a){return Ie(a)}Sha.X=1;function Tha(a){return Uf(a)}Tha.X=1;function wr(){var a=xb(156);xr(a,0);return a}wr.X=1;function yr(a){var d=xb(156);xr(d,a);return d}yr.X=1;function Uha(a,d){zr(a,d)}Uha.X=1;function Ar(a,d){v[c[c[a]+8]](a,d)}Ar.X=1;function Br(a,d,e,f){var g=b;b+=14;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13,r=c[c[a]+6];k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);v[r](a,d,e,f,g,l);b=g}Br.X=1;function Cr(a,d,e,f,g){var h=b;b+=7;var i=h+4,j=h+5,l=h+6,m=c[c[a]+6];k[i]=0;k[j]=0;k[l]=0;H(h,i,j,l);v[m](a,d,e,f,g,h);b=h}Cr.X=1;function Dr(a,d,e,f,g,h){v[c[c[a]+6]](a,d,e,f,g,h)}Dr.X=1;function Er(a,d,e,f,g){v[c[c[a]+4]](a,d,e,f,g)}Er.X=1;function Fr(a,d){v[c[c[a]+12]](a,d)}Fr.X=1;function Gr(a,d,e,f){v[c[c[a]+5]](a,d,e,f)}Gr.X=1;function Vha(a,d){ar(a,d)}Vha.X=1;function Wha(){}Wha.X=1;function Xha(a,d){Hr(a,d)}Xha.X=1;function Ir(a){v[c[c[a]+13]](a)}Ir.X=1;function Jr(a,d,e,f,g,h,i,j,l){return v[c[c[a]+2]](a,d,e,f,g,h,i,j,l)}Jr.X=1;function Yha(a){Kr(a)}Yha.X=1;function Lr(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Lr.X=1;function Mr(a){return v[c[c[a]+9]](a)}Mr.X=1;function Zha(a,d,e,f,g){Nr(a,d,e,f,g)}Zha.X=1;function Or(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}Or.X=1;function $ha(a){return kr(a)}$ha.X=1;function Pr(a,d,e){v[c[c[a]+11]](a,d,e)}Pr.X=1;function Qr(a,d,e){v[c[c[a]+3]](a,d,e)}Qr.X=1;function Rr(a){var d=xb(5388);Sr(d,a);return d}Rr.X=1;function Tr(a,d){c[a+47]=d}Tr.X=1;function Ur(a){return c[a+47]}Ur.X=1;function Vr(a){return c[a+1]}Vr.X=1;function Wr(a,d){c[a+1]=d}Wr.X=1;function Xr(a,d){c[a+1346]=d}Xr.X=1;function Yr(a){return c[a+1346]}Yr.X=1;function Zr(a){return c[a+15]}Zr.X=1;function $r(a,d){v[c[c[a]+15]](a,d)}$r.X=1;function aia(a,d){Tr(a,d)}aia.X=1;function bia(a){return Ur(a)}bia.X=1;function as(a,d,e){return v[c[c[a]+2]](a,d,e,0)}as.X=1;function bs(a,d,e,f){return v[c[c[a]+2]](a,d,e,f)}bs.X=1;function cs(a,d,e){return v[c[c[a]+7]](a,d,e)}cs.X=1;function ds(a,d){v[c[c[a]+4]](a,d)}ds.X=1;function cia(a){return Vr(a)}cia.X=1;function dia(a,d){Wr(a,d)}dia.X=1;function es(a,d){return v[c[c[a]+10]](a,d)}es.X=1;function eia(a,d,e,f){fs(a,d,e,f)}eia.X=1;function gs(a,d,e){return v[c[c[a]+6]](a,d,e)}gs.X=1;function hs(a){return v[c[c[a]+9]](a)}hs.X=1;function fia(a,d){Xr(a,d)}fia.X=1;function is(a,d){v[c[c[a]+5]](a,d)}is.X=1;function js(a,d,e){return v[c[c[a]+3]](a,d,e)}js.X=1;function ks(a,d,e,f){v[c[c[a]+8]](a,d,e,f)}ks.X=1;function ls(a,d){return v[c[c[a]+14]](a,d)}ls.X=1;function ms(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}ms.X=1;function gia(a){return Yr(a)}gia.X=1;function ns(a){return v[c[c[a]+11]](a)}ns.X=1;function hia(a,d,e){os(a,d,e)}hia.X=1;function ps(a){return v[c[c[a]+12]](a)}ps.X=1;function qs(a){return Ue(a,16)}qs.X=1;function iia(a){return Zr(a)}iia.X=1;function jia(a,d,e,f,g,h,i,j){return rs(a,d,e,f,g,h,i,j)}jia.X=1;function rs(a,d,e,f,g,h,i,j){var l=b;b+=6;var m=l+3;ss(a,l,d,0);ss(a,m,e,1);d=kia(a);e=ts(a,d);c[e+4]=d&65535;c[e]=f;c[e+1]=g;c[e+2]=h;c[e+3]=j;f=(c[a+15]&65535)<<1&65535;g=0;h=3>(g&65535|0);a:do{if(h){for(var j=a+17,n=a+19,p=a+19,r=a+19,s=a+19,t=a+19,w=a+19;;){var x=c[j]+(g&65535)+16;c[x]=(c[x]&65535)+2&65535;var x=((f&65535)+1<<1)+c[n+(g&65535)],y=((f&65535)-1<<1)+c[p+(g&65535)];c[x]=c[y];k[x]=k[y];c[x+1]=c[y+1];k[x+1]=k[y+1];c[((f&65535)-1<<1)+c[r+(g&65535)]]=c[l+(g&65535)];c[((f&65535)-1<<1)+c[s+(g&65535)]+1]=d;c[((f&65535)<<1)+c[t+(g&65535)]]=c[m+(g&65535)];c[((f&65535)<<1)+c[w+(g&65535)]+1]=d;c[e+(g&65535)+13]=(f&65535)-1&65535;c[e+(g&65535)+16]=f;g+=1;if(3<=(g&65535|0)){break a}}}}while(0);us(a,0,c[e+13],i,0);vs(a,0,c[e+16],i,0);us(a,1,c[e+14],i,0);vs(a,1,c[e+17],i,0);us(a,2,c[e+15],i,1);vs(a,2,c[e+18],i,1);b=l;return d}rs.X=1;function lia(a,d,e,f){ss(a,d,e,f)}lia.X=1;function ws(a,d){var e=qs(116);xs(e,a,d,16384,0,0);return e}ws.X=1;function ys(a,d,e){var f=qs(116);xs(f,a,d,e,0,0);return f}ys.X=1;function zs(a,d,e,f){var g=qs(116);xs(g,a,d,e,f,0);return g}zs.X=1;function As(a,d,e,f,g){var g=g&1,h=qs(116);xs(h,a,d,e,f,g&1);return h}As.X=1;function Bs(a){return c[a+26]}Bs.X=1;function Cs(a,d,e){var f;$2=a;var g=a=0;a:for(;;){if(3>(g|0)){g=(c[d+(a+16)]&65535|0)<(c[e+(a+13)]&65535|0);do{if(!g&&(c[e+(a+16)]&65535|0)>=(c[d+(a+13)]&65535|0)){a=g=a+1;continue a}}while(0);f=0;break}f=1;break}return f}Cs.X=1;function Ds(a,d){c[a+26]=d}Ds.X=1;function ss(a,d,e,f){var g=b;b+=8;var h=g+4;N(h,e,a+3);ig(g,h,a+11);c[d]=0>=k[g]?f&65535:k[g]>=(c[a+2]&65535|0)?(c[a+1]&65535&c[a+2]&65535|f)&65535:(Math.floor(k[g])&65535&c[a+1]&65535|f)&65535;c[d+1]=0>=k[g+1]?f&65535:k[g+1]>=(c[a+2]&65535|0)?(c[a+1]&65535&c[a+2]&65535|f)&65535:(Math.floor(k[g+1])&65535&c[a+1]&65535|f)&65535;c[d+2]=0>=k[g+2]?f&65535:k[g+2]>=(c[a+2]&65535|0)?(c[a+1]&65535&c[a+2]&65535|f)&65535:(Math.floor(k[g+2])&65535&c[a+1]&65535|f)&65535;b=g}ss.X=1;function mia(a,d,e){Es(a,d,e)}mia.X=1;function Es(a,d,e){var f,g,h,i,j;f=ts(a,d);g=c[a+25];v[c[c[g]+14]](g)||(g=c[a+25],v[c[c[g]+4]](g,f,e));g=(c[a+15]&65535)<<1;h=0;for(var l=a+17;;){var m=c[l]+h+16;c[m]=(c[m]&65535)-2&65535;h=m=h+1;if(3<=(m|0)){break}}h=0;for(var l=a+19,m=a+2,n=a+2,p=a+2;!(i=c[l+h],j=c[f+(h+16)],c[((j&65535)<<1)+i]=c[m],Fs(a,h,j,e,0),j=c[f+(h+13)],c[((j&65535)<<1)+i]=c[n],Gs(a,h,j,e,0),c[(g-1<<1)+i+1]=0,c[(g-1<<1)+i]=c[p],h=i=h+1,3<=(i|0));){}nia(a,d)}Es.X=1;function oia(a){return Bs(a)}oia.X=1;function pia(a,d){qia(a,d)}pia.X=1;function Hs(a,d,e,f){var g=b;b+=14;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13,r=c[c[a]+6];k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);v[r](a,d,e,f,g,l);b=g}Hs.X=1;function Is(a,d,e,f,g){var h=b;b+=7;var i=h+4,j=h+5,l=h+6,m=c[c[a]+6];k[i]=0;k[j]=0;k[l]=0;H(h,i,j,l);v[m](a,d,e,f,g,h);b=h}Is.X=1;function Js(a,d,e,f,g,h){v[c[c[a]+6]](a,d,e,f,g,h)}Js.X=1;function Ks(a,d,e,f,g){v[c[c[a]+4]](a,d,e,f,g)}Ks.X=1;function Ls(a,d){v[c[c[a]+12]](a,d)}Ls.X=1;function ria(a,d,e){return Cs(a,d,e)}ria.X=1;function Ms(a,d,e,f){v[c[c[a]+5]](a,d,e,f)}Ms.X=1;function sia(a,d,e,f,g){Ns(a,d,e,f,g)}sia.X=1;function Ns(a,d,e,f,g){var h=b;b+=6;var i=h+3,j,l,m,n,d=ts(a,d);ss(a,h,e,0);ss(a,i,f,1);for(var e=0,f=a+19,p=a+19,r=a+19,s=a+19;!(j=c[d+(e+13)],l=c[d+(e+16)],m=(c[h+e]&65535)-(c[((j&65535)<<1)+c[f+e]]&65535),n=(c[i+e]&65535)-(c[((l&65535)<<1)+c[p+e]]&65535),c[((j&65535)<<1)+c[r+e]]=c[h+e],c[((l&65535)<<1)+c[s+e]]=c[i+e],0>(m|0)&&us(a,e,j,g,1),0<(n|0)&&Fs(a,e,l,g,1),0<(m|0)&&Gs(a,e,j,g,1),0>(n|0)&&vs(a,e,l,g,1),e=j=e+1,3<=(j|0));){}b=h}Ns.X=1;function Os(a){v[c[c[a]+13]](a)}Os.X=1;function Ps(a,d,e,f,g,h,i,j,l){return v[c[c[a]+2]](a,d,e,f,g,h,i,j,l)}Ps.X=1;function Qs(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Qs.X=1;function tia(a,d){Ds(a,d)}tia.X=1;function Rs(a,d){v[c[c[a]+8]](a,d)}Rs.X=1;function Ss(a){return v[c[c[a]+9]](a)}Ss.X=1;function uia(a,d,e,f){Ts(a,d,e,f)}uia.X=1;function ts(a,d){return c[a+17]+20*(d&65535)}ts.X=1;function via(a,d){c[a]=d}via.X=1;function wia(a){return c[a]}wia.X=1;function Us(a,d){c[a+1]=d}Us.X=1;function Vs(a){return c[a+1]}Vs.X=1;function Ws(a){return c[a+64]&1}Ws.X=1;function xia(a,d){c[a+64]=d&1}xia.X=1;function Ts(a,d,e,f){var g=b;b+=12;var h=g+3,i=g+6,j=g+7,l=g+8,m=g+9,n=g+10,p=g+11;c[g]=c[((c[d+13]&65535)<<1)+c[a+19]];c[h]=(c[((c[d+16]&65535)<<1)+c[a+19]]&65535)+1&65535;c[g+1]=c[((c[d+14]&65535)<<1)+c[a+20]];c[h+1]=(c[((c[d+17]&65535)<<1)+c[a+20]]&65535)+1&65535;c[g+2]=c[((c[d+15]&65535)<<1)+c[a+21]];c[h+2]=(c[((c[d+18]&65535)<<1)+c[a+21]]&65535)+1&65535;k[i]=(c[g]&65535)/k[a+11];k[j]=(c[g+1]&65535)/k[a+11+1];k[l]=(c[g+2]&65535)/k[a+11+2];pe(e,i,j,l);xn(e,a+3);k[m]=(c[h]&65535)/k[a+11];k[n]=(c[h+1]&65535)/k[a+11+1];k[p]=(c[h+2]&65535)/k[a+11+2];pe(f,m,n,p);xn(f,a+3);b=g}Ts.X=1;function Xs(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}Xs.X=1;function Ys(a,d,e){v[c[c[a]+11]](a,d,e)}Ys.X=1;function Zs(a,d,e){v[c[c[a]+3]](a,d,e)}Zs.X=1;function yia(a,d){return ts(a,d)}yia.X=1;function at(a){0!=(a|0)&&xe(a)}at.X=1;function bt(){var a=xb(8);ct(a);return a}bt.X=1;function dt(a){var d=xb(8);c[d]=a;return d}dt.X=1;function et(a,d){v[c[c[a]+17]](a,d)}et.X=1;function ft(a,d){v[c[c[a]+15]](a,d)}ft.X=1;function zia(a){return a+27}zia.X=1;function gt(a){return v[c[c[a]+4]](a)}gt.X=1;function ht(a){v[c[c[a]+41]](a)}ht.X=1;function it(a,d){v[c[c[a]+11]](a,d)}it.X=1;function Aia(a){return Sk(a)}Aia.X=1;function Bia(a){return a}Bia.X=1;function jt(a,d){v[c[c[a]+20]](a,d)}jt.X=1;function kt(a,d,e,f){v[c[c[a]+21]](a,d,e,f)}kt.X=1;function lt(a){v[c[c[a]+29]](a)}lt.X=1;function mt(a,d){v[c[c[a]+31]](a,d)}mt.X=1;function nt(a,d,e,f){var g=xb(268);ot(g,a,d,e,f);return g}nt.X=1;function Cia(a,d){Tk(a,d)}Cia.X=1;function Dia(a){return Ws(a)}Dia.X=1;function pt(a,d){v[c[c[a]+42]](a,d)}pt.X=1;function qt(a,d){xia(a,d&1)}qt.X=1;function Eia(a){return a+1}Eia.X=1;function rt(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}rt.X=1;function st(a,d){v[c[c[a]+14]](a,d)}st.X=1;function tt(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}tt.X=1;function ut(a){return v[c[c[a]+25]](a)}ut.X=1;function vt(a,d){v[c[c[a]+8]](a,d,2,-3)}vt.X=1;function wt(a,d,e){v[c[c[a]+8]](a,d,e,-3)}wt.X=1;function xt(a,d,e,f){v[c[c[a]+8]](a,d,e,f)}xt.X=1;function yt(a,d){v[c[c[a]+22]](a,d)}yt.X=1;function Fia(a,d,e){Jl(a,d,e)}Fia.X=1;function zt(a){v[c[c[a]+10]](a)}zt.X=1;function At(a,d){Uk(a,d,0,0)}At.X=1;function Bt(a,d,e){Uk(a,d,e,0)}Bt.X=1;function Ct(a,d,e,f){Uk(a,d,e,f&1)}Ct.X=1;function Gia(a){return Vk(a)}Gia.X=1;function Dt(a){v[c[c[a]+2]](a)}Dt.X=1;function Et(a,d){v[c[c[a]+3]](a,d)}Et.X=1;function Hia(a,d){Ft(a,d)}Hia.X=1;function Gt(a){v[c[c[a]+5]](a)}Gt.X=1;function Ht(a,d,e,f,g){Rl(a,d,e,f,g,0)}Ht.X=1;function Iia(a,d,e,f,g,h){Rl(a,d,e,f,g,h)}Iia.X=1;function Jia(a){return Sl(a)}Jia.X=1;function Kia(a,d){cm(a,d)}Kia.X=1;function It(a,d){v[c[c[a]+13]](a,d,0)}It.X=1;function Jt(a,d,e){v[c[c[a]+13]](a,d,e&1)}Jt.X=1;function Lia(a){return dm(a)}Lia.X=1;function Mia(a,d,e,f){Xl(a,d,e,f)}Mia.X=1;function Kt(a){return c[a+46]}Kt.X=1;function Lt(a){return c[a+8]}Lt.X=1;function Mt(a){return c[a+7]}Mt.X=1;function Nt(a){return c[a+132]&1}Nt.X=1;function Ot(a,d){c[a+4]=d}Ot.X=1;function Pt(a){return k[a+111]}Pt.X=1;function Qt(a){return k[a+110]}Qt.X=1;function Rt(a){return c[a+4]}Rt.X=1;function St(a,d){k[a+109]=d}St.X=1;function Tt(a){return k[a+127]}Tt.X=1;function Ut(a,d){k[a+146]=d;c[a+141]=1}Ut.X=1;function Vt(a){return c[a+131]&1}Vt.X=1;function Nia(a,d){c[a+140]=d&1}Nia.X=1;function Wt(a){var d=b;b+=4;0==c[Xt]<<24>>24&&Hb(Xt);v[c[c[a]+18]](d,a);c[Yt]=c[d];k[Yt]=k[d];c[Yt+1]=c[d+1];k[Yt+1]=k[d+1];c[Yt+2]=c[d+2];k[Yt+2]=k[d+2];c[Yt+3]=c[d+3];k[Yt+3]=k[d+3];b=d;return Yt}Wt.X=1;function Oia(a){return am(a)}Oia.X=1;function Pia(a,d,e,f,g,h){mm(a,d,e,f,g,h)}Pia.X=1;function Zt(a,d){v[c[c[a]+16]](a,d)}Zt.X=1;function $t(a,d){bm(a,d&1)}$t.X=1;function au(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}au.X=1;function bu(a,d){v[c[c[a]+33]](a,d)}bu.X=1;function cu(a,d){return v[c[c[a]+26]](a,d)}cu.X=1;function du(a){return v[c[c[a]+24]](a)}du.X=1;function eu(a,d){return v[c[c[a]+12]](a,d,1,.01666666753590107)}eu.X=1;function fu(a,d,e){return v[c[c[a]+12]](a,d,e,.01666666753590107)}fu.X=1;function gu(a,d,e,f){return v[c[c[a]+12]](a,d,e,f)}gu.X=1;function hu(a,d){v[c[c[a]+32]](a,d)}hu.X=1;function iu(a){return v[c[c[a]+28]](a)}iu.X=1;function Qia(a,d){ym(a,d)}Qia.X=1;function ju(a,d){v[c[c[a]+43]](a,d)}ju.X=1;function Ria(a,d){ku(a,d)}Ria.X=1;function lu(a,d){v[c[c[a]+30]](a,d)}lu.X=1;function Sia(a){return Am(a)}Sia.X=1;function mu(a){v[c[c[a]+19]](a)}mu.X=1;function Tia(a){return Kt(a)}Tia.X=1;function nu(a,d){v[c[c[a]+9]](a,d)}nu.X=1;function ou(a,d){v[c[c[a]+23]](a,d)}ou.X=1;function Uia(a,d,e,f,g,h,i,j){Dm(a,d,e,f,g,h,i,j)}Uia.X=1;function Via(a){return a+7}Via.X=1;function pu(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}pu.X=1;function Wia(a){return Lt(a)}Wia.X=1;function qu(a){v[c[c[a]+2]](a)}qu.X=1;function Xia(a){return Mt(a)}Xia.X=1;function Yia(a){return Nt(a)}Yia.X=1;function ru(a,d){Hp(a,d&1)}ru.X=1;function Zia(a){return a+74}Zia.X=1;function $ia(a){return a+90}$ia.X=1;function aja(a){return Pt(a)}aja.X=1;function bja(a){return Qt(a)}bja.X=1;function cja(a,d,e,f,g){su(a,d,e,f,g)}cja.X=1;function tu(a,d,e){v[c[c[a]+7]](a,d,e,-1)}tu.X=1;function uu(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}uu.X=1;function vu(a,d){return v[c[c[a]+8]](a,d,-1)}vu.X=1;function wu(a,d,e){return v[c[c[a]+8]](a,d,e)}wu.X=1;function dja(a,d){St(a,d)}dja.X=1;function xu(a,d){v[c[c[a]+4]](a,d)}xu.X=1;function yu(a,d){v[c[c[a]+5]](a,d)}yu.X=1;function eja(a,d){zp(a,d)}eja.X=1;function zu(a,d){var e=xb(600);Au(e,a,d);return e}zu.X=1;function Bu(a,d,e,f){var g=xb(600);Cu(g,a,d,e,f);return g}Bu.X=1;function fja(a,d){Du(a,d)}fja.X=1;function Eu(a){return v[c[c[a]+9]](a)}Eu.X=1;function gja(a,d){Pp(a,d)}gja.X=1;function hja(a){return Ap(a)}hja.X=1;function ija(a,d){Bp(a,d)}ija.X=1;function jja(a){return Cp(a)}jja.X=1;function kja(a){return Tt(a)}kja.X=1;function lja(a,d){Ut(a,d)}lja.X=1;function Fu(a,d){Ko(a,d&1)}Fu.X=1;function mja(a,d){Ep(a,d)}mja.X=1;function nja(a){return Fp(a)}nja.X=1;function Gu(a){return c[a+4]}Gu.X=1;function oja(a){return Vt(a)}oja.X=1;function pja(a){return Gp(a)}pja.X=1;function Hu(a,d){Nia(a,d&1)}Hu.X=1;function sja(a){return a+90}sja.X=1;function tja(a,d){Iu(0,d)}tja.X=1;function Ju(a,d,e){return v[c[c[a]+10]](a,d,e)}Ju.X=1;function uja(a){return Ip(a)}uja.X=1;function vja(a){return Dp(a)}vja.X=1;function Ku(a){return k[a+113]}Ku.X=1;function Lu(a){return c[a+131]&1}Lu.X=1;function wja(a,d){c[a+130]=d&1}wja.X=1;function Mu(a,d,e){3==(d|0)?k[a+112]=e:4==(d|0)?k[a+111]=e:5==(d|0)&&(k[a+110]=e)}Mu.X=1;function Nu(a,d,e,f,g,h,i){k[a+110]=d;k[a+111]=e;k[a+112]=f;k[a+106]=g;k[a+107]=h;k[a+108]=i}Nu.X=1;function Ou(a){return k[a+124]}Ou.X=1;function Pu(a,d){k[a+146]=d;c[a+141]=0}Pu.X=1;function Qu(a,d){k[a+113]=d}Qu.X=1;function Ru(a){return k[a+112]}Ru.X=1;function Su(a){return c[a+8]}Su.X=1;function Tu(a){return c[a+7]}Tu.X=1;function Uu(a,d){c[a+4]=d}Uu.X=1;function Vu(a){return k[a+169]}Vu.X=1;function Wu(a,d){k[a+170]=d}Wu.X=1;function Xu(a){return c[a+4]}Xu.X=1;function xja(a,d,e,f){c[a+184]=d&1;k[a+169]=e;k[a+170]=f}xja.X=1;function Yu(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Yu.X=1;function yja(a,d){Jp(a,d)}yja.X=1;function zja(a){return Ku(a)}zja.X=1;function Aja(a){return Lu(a)}Aja.X=1;function Bja(a,d){Kp(a,d)}Bja.X=1;function Cja(a){return Lp(a)}Cja.X=1;function Zu(a,d){wja(a,d&1)}Zu.X=1;function dv(a,d,e){v[c[c[a]+11]](a,d,e)}dv.X=1;function Dja(a,d,e){Mu(a,d,e)}Dja.X=1;function ev(a,d,e,f){Nu(a,d,e,f,1,.30000001192092896,1)}ev.X=1;function fv(a,d,e,f,g){Nu(a,d,e,f,g,.30000001192092896,1)}fv.X=1;function gv(a,d,e,f,g,h){Nu(a,d,e,f,g,h,1)}gv.X=1;function Eja(a,d,e,f,g,h,i){Nu(a,d,e,f,g,h,i)}Eja.X=1;function Fja(a){return Op(a)}Fja.X=1;function Gja(a){return Ou(a)}Gja.X=1;function Hja(a,d){Pu(a,d)}Hja.X=1;function hv(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}hv.X=1;function Ija(a){return Lo(a)}Ija.X=1;function Jja(){}Jja.X=1;function Kja(a,d,e,f,g,h){iv(a,d,e,f,g,h)}Kja.X=1;function Lja(a,d){Qu(a,d)}Lja.X=1;function Mja(a,d){jv(a,d)}Mja.X=1;function Nja(a){return Mp(a)}Nja.X=1;function Oja(a){return Np(a)}Oja.X=1;function kv(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}kv.X=1;function lv(a,d,e){var f=b;b+=4;0==c[mv]<<24>>24&&Hb(mv);nv(f,a,d,e);c[ov]=c[f];k[ov]=k[f];c[ov+1]=c[f+1];k[ov+1]=k[f+1];c[ov+2]=c[f+2];k[ov+2]=k[f+2];c[ov+3]=c[f+3];k[ov+3]=k[f+3];b=f;return ov}lv.X=1;function Pja(a){pv(a)}Pja.X=1;function Qja(a){return Ru(a)}Qja.X=1;function Rja(a){return a+74}Rja.X=1;function Sja(a){return Su(a)}Sja.X=1;function Tja(a,d,e,f,g,h){qv(a,d,e,f,g,h)}Tja.X=1;function Uja(a){return Tu(a)}Uja.X=1;function Vja(a){return Vu(a)}Vja.X=1;function Wja(a){return a+137}Wja.X=1;function Xja(a){return a+153}Xja.X=1;function rv(a){v[c[c[a]+2]](a)}rv.X=1;function Yja(a,d){Wu(a,d)}Yja.X=1;function Zja(a){return sv(a)}Zja.X=1;function $ja(a,d,e){return tv(a,d,e)}$ja.X=1;function aka(a,d,e){uv(a,d,e)}aka.X=1;function vv(a,d){v[c[c[a]+4]](a,d)}vv.X=1;function bka(a,d,e,f,g,h){wv(a,d,e,f,g,h)}bka.X=1;function xv(a,d){v[c[c[a]+5]](a,d)}xv.X=1;function cka(a){return yv(a)}cka.X=1;function yv(a){return Bj(a+171)}yv.X=1;function zv(a,d,e,f){xja(a,d&1,e,f)}zv.X=1;function dka(a){return Av(a)}dka.X=1;function Av(a){return Xi(a+171)}Av.X=1;function Bv(a,d,e){var f=xb(756);Cv(f,a,d,e,0);return f}Bv.X=1;function Dv(a,d,e,f){var f=f&1,g=xb(756);Cv(g,a,d,e,f&1);return g}Dv.X=1;function Ev(a,d,e,f,g,h){var i=xb(756);Fv(i,a,d,e,f,g,h,0);return i}Ev.X=1;function Gv(a){return k[a+170]}Gv.X=1;function eka(a,d){c[a+186]=d&1}eka.X=1;function Hv(a){return c[a+184]&1}Hv.X=1;function fka(a,d){c[a+184]=d&1}fka.X=1;function Iv(a){return c[a+186]&1}Iv.X=1;function gka(a,d){c[a+183]=d&1}gka.X=1;function Jv(a){return c[a+183]&1}Jv.X=1;function hka(a,d){k[a]=d}hka.X=1;function Kv(a,d){k[a+12]=d}Kv.X=1;function Lv(a,d){k[a+4]=d}Lv.X=1;function Mv(a){var d;0==(c[a+14]|0)?0!=(c[a+11]&1|0)?a=5:(d=0,a=6):a=5;5==a&&(d=1);return d}Mv.X=1;function Nv(a,d){k[a+13]=d}Nv.X=1;function Ov(a){return k[a+8]}Ov.X=1;function Pv(a,d){k[a+8]=d}Pv.X=1;function Qv(a,d){k[a+9]=d}Qv.X=1;function Rv(a,d,e,f,g,h,i){var i=i&1,j=xb(756);Fv(j,a,d,e,f,g,h,i&1);return j}Rv.X=1;function ika(a){return Ap(a)}ika.X=1;function jka(a,d){Bp(a,d)}jka.X=1;function Sv(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}Sv.X=1;function Tv(a,d){Hp(a,d&1)}Tv.X=1;function kka(a){return Cp(a)}kka.X=1;function Uv(a,d){Ko(a,d&1)}Uv.X=1;function lka(a,d){Pp(a,d)}lka.X=1;function mka(a){return Gv(a)}mka.X=1;function nka(a){return Vv(a)}nka.X=1;function Vv(a){return Dj(a+171)}Vv.X=1;function Wv(a,d,e){v[c[c[a]+7]](a,d,e,-1)}Wv.X=1;function Xv(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}Xv.X=1;function Yv(a,d){eka(a,d&1)}Yv.X=1;function oka(a){return Hv(a)}oka.X=1;function pka(a){return Fp(a)}pka.X=1;function Zv(a){return c[a+4]}Zv.X=1;function qka(a){return Gp(a)}qka.X=1;function $v(a,d){fka(a,d&1)}$v.X=1;function rka(a){return a+153}rka.X=1;function ska(a,d){aw(a,d)}ska.X=1;function tka(a,d,e,f,g,h){bw(a,d,e,f,g,h)}tka.X=1;function uka(a){return Ip(a)}uka.X=1;function vka(a){return Dp(a)}vka.X=1;function cw(a,d,e){return v[c[c[a]+10]](a,d,e)}cw.X=1;function wka(a,d){Jp(a,d)}wka.X=1;function xka(a){return Iv(a)}xka.X=1;function yka(a,d){Kp(a,d)}yka.X=1;function zka(a,d){Ep(a,d)}zka.X=1;function Aka(a,d){zp(a,d)}Aka.X=1;function dw(a){return v[c[c[a]+9]](a)}dw.X=1;function Bka(a){return Lp(a)}Bka.X=1;function ew(a,d){gka(a,d&1)}ew.X=1;function fw(a,d){return v[c[c[a]+8]](a,d,-1)}fw.X=1;function gw(a,d,e){return v[c[c[a]+8]](a,d,e)}gw.X=1;function hw(a,d,e){iw(a,d,e,.8999999761581421,.30000001192092896,1)}hw.X=1;function iw(a,d,e,f,g,h){yj(a+171,d,e,f,g,h)}iw.X=1;function jw(a,d,e,f){iw(a,d,e,f,.30000001192092896,1)}jw.X=1;function kw(a,d,e,f,g){iw(a,d,e,f,g,1)}kw.X=1;function Cka(a,d,e,f,g,h){iw(a,d,e,f,g,h)}Cka.X=1;function Dka(a){return lw(a)}Dka.X=1;function lw(a){return Vi(a+171)&1}lw.X=1;function mw(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}mw.X=1;function nw(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}nw.X=1;function Eka(a){return Lo(a)}Eka.X=1;function Fka(){}Fka.X=1;function Gka(a,d,e){ow(a,d,e)}Gka.X=1;function Hka(a){return Mp(a)}Hka.X=1;function Ika(a){return Np(a)}Ika.X=1;function Jka(a){return Jv(a)}Jka.X=1;function Kka(a,d,e){pw(a,d,e)}Kka.X=1;function Lka(a){return Op(a)}Lka.X=1;function Mka(a,d){qw(a,d)}Mka.X=1;function qw(a,d){var e=b;b+=76;var f=e+4,g=e+8,h=e+12,i=e+16,j=e+20,l=e+24,m=e+28,n=e+32,p=e+48,r=e+52,s=e+64;rw(d,e,f);var t=a+137+12;c[g]=c[t];k[g]=k[t];c[g+1]=c[t+1];k[g+1]=k[t+1];c[g+2]=c[t+2];k[g+2]=k[t+2];c[g+3]=c[t+3];k[g+3]=k[t+3];Db(a+137,e,f,d,e+1,f+1,d+1,e+2,f+2,d+2);Bo(h,c[a+7]+1,d);sw(i,d,h);tw(j,i,e);qn(l,h,j);f=a+153+12;uw(n,c[a+8]+1);vw(p,c[a+7]+1,g);vw(m,n,p);c[f]=c[m];k[f]=k[m];c[f+1]=c[m+1];k[f+1]=k[m+1];c[f+2]=c[m+2];k[f+2]=k[m+2];c[f+3]=c[m+3];k[f+3]=k[m+3];Db(a+153,j,l,h,j+1,l+1,h+1,j+2,l+2,h+2);g=a+153;Bc(s,c[a+8]+1);ww(r,s,a+153);Wb(g,r);b=e}qw.X=1;function Nka(a){return a+137}Nka.X=1;function Oka(a){return Mv(a)}Oka.X=1;function Pka(a,d,e,f,g,h){return xw(a,d,e,f,g,h)}Pka.X=1;function yw(a){return k[a+13]}yw.X=1;function zw(a){return k[a+9]}zw.X=1;function Aw(a){return c[a+11]&1}Aw.X=1;function Bw(a,d){c[a+11]=d&1}Bw.X=1;function Cw(a){return k[a+12]}Cw.X=1;function Dw(a,d){k[a+6]=d}Dw.X=1;function Qka(a){return k[a]}Qka.X=1;function Ew(a){return c[a+14]}Ew.X=1;function Fw(a,d){k[a+1]=d}Fw.X=1;function Gw(a){return k[a+10]}Gw.X=1;function Hw(a){return k[a+2]}Hw.X=1;function Iw(a){return k[a+15]}Iw.X=1;function Jw(a,d){k[a+5]=d}Jw.X=1;function Kw(a,d){k[a+3]=d}Kw.X=1;function Lw(a,d){k[a+7]=d}Lw.X=1;function Mw(a){return k[a+4]}Mw.X=1;function Nw(a){return k[a+5]}Nw.X=1;function Ow(a){return k[a+7]}Ow.X=1;function Pw(a){return k[a+1]}Pw.X=1;function Qw(a,d){k[a+15]=d}Qw.X=1;function Rw(a,d){k[a+2]=d}Rw.X=1;function Sw(a){return k[a]>k[a+1]?0:1}Sw.X=1;function Tw(a){return k[a+3]}Tw.X=1;function Uw(a,d){c[a+14]=d}Uw.X=1;function Vw(a,d){k[a+10]=d}Vw.X=1;function Ww(a){return k[a+6]}Ww.X=1;function Xw(a){return k[a+14]}Xw.X=1;function Yw(a){return k[a+15]}Yw.X=1;function Zw(a){return c[a+17]}Zw.X=1;function $w(){var a=xb(64);ax(a);return a}$w.X=1;function bx(a){var d=xb(64);Rka(d,a);return d}bx.X=1;function Ska(a,d){return cx(a,d)}Ska.X=1;function dx(a){0!=(a|0)&&xe(a)}dx.X=1;function Tka(a){return Sw(a)}Tka.X=1;function ex(a,d,e,f){return v[c[c[a]+2]](a,d,e,f)}ex.X=1;function fx(a,d,e){v[c[c[a]+8]](a,d,e)}fx.X=1;function Uka(a){return Ge(a)}Uka.X=1;function gx(a,d){var e=b;b+=4;0==c[hx]<<24>>24&&Hb(hx);v[c[c[a]+15]](e,a,d);c[ix]=c[e];k[ix]=k[e];c[ix+1]=c[e+1];k[ix+1]=k[e+1];c[ix+2]=c[e+2];k[ix+2]=k[e+2];c[ix+3]=c[e+3];k[ix+3]=k[e+3];b=e;return ix}gx.X=1;function Vka(a,d){Je(a,d)}Vka.X=1;function Wka(a){return Le(a)}Wka.X=1;function jx(a,d,e){return v[c[c[a]+13]](a,d,e)}jx.X=1;function kx(a){return v[c[c[a]+7]](a)}kx.X=1;function lx(a){return v[c[c[a]+19]](a)}lx.X=1;function Xka(a){return Ye(a)}Xka.X=1;function Yka(a){return Xw(a)}Yka.X=1;function Zka(a,d,e,f){df(a,d,e,f)}Zka.X=1;function mx(a){return v[c[c[a]+12]](a)}mx.X=1;function nx(a,d){var e=Se(76);ox(e,a,d);return e}nx.X=1;function px(a){return v[c[c[a]+9]](a)}px.X=1;function $ka(a){return Yw(a)}$ka.X=1;function ala(a){return a+3}ala.X=1;function qx(a,d){var e=b;b+=4;0==c[rx]<<24>>24&&Hb(rx);kf(e,a,d);c[sx]=c[e];k[sx]=k[e];c[sx+1]=c[e+1];k[sx+1]=k[e+1];c[sx+2]=c[e+2];k[sx+2]=k[e+2];c[sx+3]=c[e+3];k[sx+3]=k[e+3];b=e;return sx}qx.X=1;function tx(a,d){var e=b;b+=4;0==c[ux]<<24>>24&&Hb(ux);v[c[c[a]+16]](e,a,d);c[vx]=c[e];k[vx]=k[e];c[vx+1]=c[e+1];k[vx+1]=k[e+1];c[vx+2]=c[e+2];k[vx+2]=k[e+2];c[vx+3]=c[e+3];k[vx+3]=k[e+3];b=e;return vx}tx.X=1;function bla(a,d){wx(a,d)}bla.X=1;function xx(a,d){v[c[c[a]+6]](a,d)}xx.X=1;function yx(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}yx.X=1;function zx(a,d){var e=b;b+=4;0==c[Ax]<<24>>24&&Hb(Ax);tf(e,a,d);c[Bx]=c[e];k[Bx]=k[e];c[Bx+1]=c[e+1];k[Bx+1]=k[e+1];c[Bx+2]=c[e+2];k[Bx+2]=k[e+2];c[Bx+3]=c[e+3];k[Bx+3]=k[e+3];b=e;return Bx}zx.X=1;function Cx(a,d){return v[c[c[a]+5]](a,d)}Cx.X=1;function cla(a){return xf(a)}cla.X=1;function dla(a){return zf(a)}dla.X=1;function ela(a){return Me(a)}ela.X=1;function fla(a){return Bf(a)}fla.X=1;function Dx(a){return v[c[c[a]+11]](a)}Dx.X=1;function Ex(a,d,e){v[c[c[a]+20]](a,d,e)}Ex.X=1;function Fx(a,d){v[c[c[a]+10]](a,d)}Fx.X=1;function gla(a){return Gf(a)}gla.X=1;function hla(a,d){Jf(a,d)}hla.X=1;function ila(a){return Kf(a)}ila.X=1;function jla(a){return Mf(a)}jla.X=1;function Gx(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Gx.X=1;function Hx(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}Hx.X=1;function kla(a){return a+7}kla.X=1;function Ix(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}Ix.X=1;function Jx(a){return v[c[c[a]+4]](a)}Jx.X=1;function lla(a){return Zw(a)}lla.X=1;function Kx(a,d){v[c[c[a]+14]](a,d)}Kx.X=1;function Lx(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}Lx.X=1;function mla(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}mla.X=1;function nla(a){return Uf(a)}nla.X=1;function ola(a){return Ie(a)}ola.X=1;function Mx(a){return k[a+43]}Mx.X=1;function Nx(a){return c[a+42]&1}Nx.X=1;function Ox(a,d,e){v[c[c[a]+8]](a,d,e)}Ox.X=1;function pla(a){return Ge(a)}pla.X=1;function Px(a,d){var e=b;b+=4;0==c[Qx]<<24>>24&&Hb(Qx);v[c[c[a]+15]](e,a,d);c[Rx]=c[e];k[Rx]=k[e];c[Rx+1]=c[e+1];k[Rx+1]=k[e+1];c[Rx+2]=c[e+2];k[Rx+2]=k[e+2];c[Rx+3]=c[e+3];k[Rx+3]=k[e+3];b=e;return Rx}Px.X=1;function qla(a,d){Je(a,d)}qla.X=1;function rla(a){return Le(a)}rla.X=1;function Sx(a,d,e){return v[c[c[a]+13]](a,d,e)}Sx.X=1;function Tx(a){return v[c[c[a]+7]](a)}Tx.X=1;function Ux(a){return v[c[c[a]+19]](a)}Ux.X=1;function sla(a){return Ye(a)}sla.X=1;function tla(a){return Xw(a)}tla.X=1;function ula(a,d,e,f){df(a,d,e,f)}ula.X=1;function Vx(a){return v[c[c[a]+12]](a)}Vx.X=1;function Wx(a,d){var e=Se(76);Xx(e,a,d);return e}Wx.X=1;function vla(a){return Yw(a)}vla.X=1;function wla(a){return a+3}wla.X=1;function Yx(a,d){var e=b;b+=4;0==c[Zx]<<24>>24&&Hb(Zx);kf(e,a,d);c[$x]=c[e];k[$x]=k[e];c[$x+1]=c[e+1];k[$x+1]=k[e+1];c[$x+2]=c[e+2];k[$x+2]=k[e+2];c[$x+3]=c[e+3];k[$x+3]=k[e+3];b=e;return $x}Yx.X=1;function ay(a,d){var e=b;b+=4;0==c[by]<<24>>24&&Hb(by);v[c[c[a]+16]](e,a,d);c[cy]=c[e];k[cy]=k[e];c[cy+1]=c[e+1];k[cy+1]=k[e+1];c[cy+2]=c[e+2];k[cy+2]=k[e+2];c[cy+3]=c[e+3];k[cy+3]=k[e+3];b=e;return cy}ay.X=1;function xla(a,d){wx(a,d)}xla.X=1;function dy(a,d){v[c[c[a]+6]](a,d)}dy.X=1;function ey(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}ey.X=1;function fy(a,d){var e=b;b+=4;0==c[gy]<<24>>24&&Hb(gy);tf(e,a,d);c[hy]=c[e];k[hy]=k[e];c[hy+1]=c[e+1];k[hy+1]=k[e+1];c[hy+2]=c[e+2];k[hy+2]=k[e+2];c[hy+3]=c[e+3];k[hy+3]=k[e+3];b=e;return hy}fy.X=1;function iy(a,d){return v[c[c[a]+5]](a,d)}iy.X=1;function yla(a){return xf(a)}yla.X=1;function zla(a){return zf(a)}zla.X=1;function Ala(a){return Uf(a)}Ala.X=1;function Bla(a){return Me(a)}Bla.X=1;function Cla(a){return Bf(a)}Cla.X=1;function jy(a){return v[c[c[a]+11]](a)}jy.X=1;function ky(a,d,e){v[c[c[a]+20]](a,d,e)}ky.X=1;function ly(a,d){v[c[c[a]+10]](a,d)}ly.X=1;function Dla(a){return Gf(a)}Dla.X=1;function Ela(a,d){Jf(a,d)}Ela.X=1;function Fla(a){return Kf(a)}Fla.X=1;function Gla(a){return Mf(a)}Gla.X=1;function my(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}my.X=1;function ny(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}ny.X=1;function Hla(a){return a+7}Hla.X=1;function oy(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}oy.X=1;function py(a){return v[c[c[a]+4]](a)}py.X=1;function Ila(a){return Zw(a)}Ila.X=1;function qy(a,d){v[c[c[a]+14]](a,d)}qy.X=1;function ry(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}ry.X=1;function Jla(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Jla.X=1;function sy(a){return v[c[c[a]+9]](a)}sy.X=1;function Kla(a){return Ie(a)}Kla.X=1;function Lla(a,d){ty(a,d)}Lla.X=1;function uy(a,d){v[c[c[a]+8]](a,d)}uy.X=1;function Mla(a,d,e){vy(a,d,e)}Mla.X=1;function wy(a,d,e){return xy(a,d,e&1)}wy.X=1;function yy(a,d){zy(a,d,2)}yy.X=1;function zy(a,d,e){Ay(a+5,d);c[By(a+5,Cy(a+5)-1)+6]=e}zy.X=1;function Nla(a,d,e){zy(a,d,e)}Nla.X=1;function Dy(a,d,e){v[c[c[a]+12]](a,d,e)}Dy.X=1;function Ola(a){return Nx(a)}Ola.X=1;function Ey(a){return v[c[c[a]+13]](a)}Ey.X=1;function Fy(a){return Ue(a,16)}Fy.X=1;function Pla(a){return a+1}Pla.X=1;function Gy(a,d,e){v[c[c[a]+11]](a,d,e)}Gy.X=1;function Hy(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}Hy.X=1;function Qla(a,d){Iy(a,d)}Qla.X=1;function Iy(a,d){var e=a+1;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Iy.X=1;function Jy(){var a=Fy(172);Ky(a,1,1);return a}Jy.X=1;function Ly(a){var a=a&1,d=Fy(172);Ky(d,a&1,1);return d}Ly.X=1;function My(a,d){var e,f;e=a&1;f=d&1;var g=Fy(172);Ky(g,e&1,f&1);return g}My.X=1;function Ny(a,d){k[a+43]=d}Ny.X=1;function Oy(a){return c[a+41]&1}Oy.X=1;function Py(a,d){c[a+3]=d}Py.X=1;function Rla(a){return c[a]}Rla.X=1;function Qy(a){return c[a+1]}Qy.X=1;function Sla(a,d){c[a]=d}Sla.X=1;function Ry(a,d){c[a+1]=d}Ry.X=1;function Sy(a){return c[a+3]}Sy.X=1;function Ty(a){return c[a+3]}Ty.X=1;function Uy(a){return c[a+2]}Uy.X=1;function Vy(a,d){c[a+3]=d}Vy.X=1;function Wy(a,d){c[a+2]=d}Wy.X=1;function Tla(a){return a+1}Tla.X=1;function Xy(a,d){k[a+8]=d}Xy.X=1;function Yy(a){return k[a+8]}Yy.X=1;function Zy(a){return k[a+1]}Zy.X=1;function $y(a,d){c[a+2]=d}$y.X=1;function az(a,d){k[a+1]=d}az.X=1;function bz(a,d){c[a+3]=d}bz.X=1;function cz(a){return 1>k[a+1]}cz.X=1;function dz(a){return c[a+3]}dz.X=1;function ez(a){return c[a+2]}ez.X=1;function Ula(a){return a+33}Ula.X=1;function fz(a){return c[a+49]}fz.X=1;function Vla(a){return a+1}Vla.X=1;function gz(a,d){c[a+49]=d}gz.X=1;function Wla(a){return a+17}Wla.X=1;function hz(a,d){v[c[c[a]+6]](a,d)}hz.X=1;function iz(a,d,e,f,g,h,i,j,l){v[c[c[a]+4]](a,d,e,f,g,h,i,j,l,0)}iz.X=1;function jz(a,d,e,f,g,h,i,j,l,m){v[c[c[a]+4]](a,d,e,f,g,h,i,j,l,m)}jz.X=1;function kz(a,d){v[c[c[a]+9]](a,d)}kz.X=1;function lz(a,d,e){return v[c[c[a]+14]](a,d,e)}lz.X=1;function Xla(a){return Oy(a)}Xla.X=1;function mz(a,d){v[c[c[a]+5]](a,d)}mz.X=1;function nz(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}nz.X=1;function Yla(a){return oz(a)}Yla.X=1;function Zla(a){return a+5}Zla.X=1;function pz(a){return v[c[c[a]+7]](a)}pz.X=1;function qz(a,d,e,f,g,h,i,j,l){v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,0)}qz.X=1;function rz(a,d,e,f,g,h,i,j,l,m){v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,m)}rz.X=1;function sz(a){return v[c[c[a]+10]](a)}sz.X=1;function tz(a,d,e,f){uz(a,d,e,f,0)}tz.X=1;function vz(a,d,e,f,g){uz(a,d,e,f,g&1)}vz.X=1;function wz(a,d){return v[c[c[a]+2]](a,d)}wz.X=1;function xz(a){0!=(a|0)&&yh(a)}xz.X=1;function yz(){var a=zz(16);Az(a);return a}yz.X=1;function zz(a){return Ue(a,16)}zz.X=1;function Bz(a){var d=zz(16);Cz(d,a);return d}Bz.X=1;function Dz(a,d){var e=zz(16);Ez(e,a,d);return e}Dz.X=1;function Fz(a,d){return v[c[c[a]+2]](a,d)}Fz.X=1;function Gz(a,d){var e=a+1;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Gz.X=1;function Hz(a,d){return v[c[c[a]+2]](a,d)}Hz.X=1;function $la(a){return cz(a)}$la.X=1;function Iz(a,d,e){return v[c[c[a]+3]](a,d,e&1)}Iz.X=1;function Jz(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Jz.X=1;function Kz(a,d){v[c[c[a]+2]](a,d)}Kz.X=1;function Lz(a,d){xi(a+33,d)}Lz.X=1;function xi(a,d){Wb(a,d);var e=a+12,f=d+12;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];return a}xi.X=1;function Mz(a,d){v[c[c[a]+3]](a,d)}Mz.X=1;function Nz(a,d){xi(a+1,d)}Nz.X=1;function Oz(){var a=xb(200);Pz();Pz();Qz(a,Rz,Rz);return a}Oz.X=1;function Pz(){var a=b;b+=7;var d=a+4,e=a+5,f=a+6;0==c[Sz]<<24>>24&&0!=(Hb(Sz)|0)&&(Wc(),k[d]=0,k[e]=0,k[f]=0,H(a,d,e,f),Tz(Rz,Xc,a));b=a;return Rz}Pz.X=1;function Uz(a){var d=xb(200);Pz();Qz(d,a,Rz);return d}Uz.X=1;function Vz(a,d){var e=xb(200);Qz(e,a,d);return e}Vz.X=1;function Wz(a,d){xi(a+17,d)}Wz.X=1;function Xz(a,d,e){v[c[c[a]+8]](a,d,e)}Xz.X=1;function ama(a){return Ge(a)}ama.X=1;function Yz(a,d){var e=b;b+=4;0==c[Zz]<<24>>24&&Hb(Zz);v[c[c[a]+15]](e,a,d);c[$z]=c[e];k[$z]=k[e];c[$z+1]=c[e+1];k[$z+1]=k[e+1];c[$z+2]=c[e+2];k[$z+2]=k[e+2];c[$z+3]=c[e+3];k[$z+3]=k[e+3];b=e;return $z}Yz.X=1;function bma(a,d){Je(a,d)}bma.X=1;function cma(a){return Le(a)}cma.X=1;function aA(a,d,e){return v[c[c[a]+13]](a,d,e)}aA.X=1;function bA(a,d){k[a+52]=d}bA.X=1;function cA(a){return k[a+53]}cA.X=1;function dA(a){return k[a+51]}dA.X=1;function eA(a,d){k[a+54]=d}eA.X=1;function fA(a,d){k[a+53]=d}fA.X=1;function gA(a){return k[a+62]}gA.X=1;function hA(a){return k[a+55]}hA.X=1;function iA(a){return k[a+67]}iA.X=1;function dma(a){return a+23}dma.X=1;function jA(a){return k[a+57]}jA.X=1;function kA(a){return c[a+65]&1}kA.X=1;function lA(a,d){k[a+63]=d}lA.X=1;function mA(a){return k[a+63]}mA.X=1;function nA(a){return k[a+58]}nA.X=1;function oA(a){return k[a+61]}oA.X=1;function pA(a){return k[a+68]}pA.X=1;function qA(a,d){c[a+66]=d}qA.X=1;function rA(a,d){k[a+64]=d}rA.X=1;function sA(a,d){k[a+68]=d}sA.X=1;function tA(a,d){c[a+65]=d&1}tA.X=1;function uA(a,d){k[a+55]=d}uA.X=1;function vA(a,d){k[a+60]=d}vA.X=1;function wA(a){return c[a+66]}wA.X=1;function xA(a,d){k[a+57]=d}xA.X=1;function yA(a){return k[a+70]}yA.X=1;function zA(a){return k[a+56]}zA.X=1;function AA(a){return k[a+52]}AA.X=1;function BA(a,d){k[a+58]=d}BA.X=1;function ema(a){return a+39}ema.X=1;function CA(a){return k[a+64]}CA.X=1;function DA(a,d){k[a+70]=d}DA.X=1;function EA(a){return k[a+69]}EA.X=1;function FA(a,d){k[a+51]=d}FA.X=1;function GA(a,d){k[a+61]=d}GA.X=1;function HA(a){return k[a+59]}HA.X=1;function IA(a,d){k[a+56]=d}IA.X=1;function fma(a){return a+43}fma.X=1;function JA(a){return k[a+54]}JA.X=1;function KA(a,d){k[a+67]=d}KA.X=1;function LA(a,d){k[a+59]=d}LA.X=1;function gma(a){return a+47}gma.X=1;function MA(a){return v[c[c[a]+7]](a)}MA.X=1;function NA(a){return v[c[c[a]+19]](a)}NA.X=1;function hma(a){return Ye(a)}hma.X=1;function ima(a){return Xw(a)}ima.X=1;function OA(a,d){var e=Se(76);PA(e,a,d);return e}OA.X=1;function QA(a){return v[c[c[a]+12]](a)}QA.X=1;function RA(a){return v[c[c[a]+9]](a)}RA.X=1;function jma(a){return Yw(a)}jma.X=1;function kma(a){return a+3}kma.X=1;function SA(a,d){var e=b;b+=4;0==c[TA]<<24>>24&&Hb(TA);kf(e,a,d);c[UA]=c[e];k[UA]=k[e];c[UA+1]=c[e+1];k[UA+1]=k[e+1];c[UA+2]=c[e+2];k[UA+2]=k[e+2];c[UA+3]=c[e+3];k[UA+3]=k[e+3];b=e;return UA}SA.X=1;function VA(a,d){var e=b;b+=4;0==c[WA]<<24>>24&&Hb(WA);v[c[c[a]+16]](e,a,d);c[XA]=c[e];k[XA]=k[e];c[XA+1]=c[e+1];k[XA+1]=k[e+1];c[XA+2]=c[e+2];k[XA+2]=k[e+2];c[XA+3]=c[e+3];k[XA+3]=k[e+3];b=e;return XA}VA.X=1;function lma(a,d){wx(a,d)}lma.X=1;function YA(a,d){v[c[c[a]+6]](a,d)}YA.X=1;function ZA(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}ZA.X=1;function $A(a,d){var e=b;b+=4;0==c[aB]<<24>>24&&Hb(aB);tf(e,a,d);c[bB]=c[e];k[bB]=k[e];c[bB+1]=c[e+1];k[bB+1]=k[e+1];c[bB+2]=c[e+2];k[bB+2]=k[e+2];c[bB+3]=c[e+3];k[bB+3]=k[e+3];b=e;return bB}$A.X=1;function cB(a,d){return v[c[c[a]+5]](a,d)}cB.X=1;function mma(a){return xf(a)}mma.X=1;function nma(a){return zf(a)}nma.X=1;function oma(a,d,e,f){df(a,d,e,f)}oma.X=1;function pma(a){return Me(a)}pma.X=1;function qma(a){return Bf(a)}qma.X=1;function dB(a){return v[c[c[a]+11]](a)}dB.X=1;function eB(a,d,e){v[c[c[a]+20]](a,d,e)}eB.X=1;function fB(a,d){v[c[c[a]+10]](a,d)}fB.X=1;function rma(a){return Gf(a)}rma.X=1;function sma(a,d){Jf(a,d)}sma.X=1;function tma(a){return Kf(a)}tma.X=1;function uma(a){return Mf(a)}uma.X=1;function gB(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}gB.X=1;function hB(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}hB.X=1;function vma(a){return a+7}vma.X=1;function iB(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}iB.X=1;function jB(a){return v[c[c[a]+4]](a)}jB.X=1;function wma(a){return Zw(a)}wma.X=1;function kB(a,d){v[c[c[a]+14]](a,d)}kB.X=1;function lB(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}lB.X=1;function xma(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}xma.X=1;function yma(a){return Uf(a)}yma.X=1;function zma(a){return Ie(a)}zma.X=1;function mB(a,d){var e=a+39;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}mB.X=1;function nB(a,d,e){var f=b,g=e,e=b;b+=23;for(var h=e,i=g+23;g<i;g++,h++){c[h]=c[g],k[h]=k[g]}Ama(a,d,e);b=f}nB.X=1;function oB(a,d){var e=a+43;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}oB.X=1;function Bma(a){return pB(a)}Bma.X=1;function qB(a,d){var e=a+47;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}qB.X=1;function rB(a){var d=xb(284);sB(d,a);return d}rB.X=1;function tB(a){0!=(a|0)&&xe(a)}tB.X=1;function uB(a,d){k[a+69]=d}uB.X=1;function vB(a,d){k[a+62]=d}vB.X=1;function wB(a){return k[a+60]}wB.X=1;function Mb(a,d){var e;for(e=0;;){k[d+e]=k[a+e];var f=e+1;e=f;if(4<=(f|0)){break}}}Mb.X=1;function Ob(a,d){var e;for(e=0;;){k[a+e]=k[d+e];var f=e+1;e=f;if(4<=(f|0)){break}}}Ob.X=1;function xB(a){var d,e;d=-1;e=0xde0b6b000000000;k[a]<e&&(d=0,e=k[a]);k[a+1]<e&&(d=1,e=k[a+1]);k[a+2]<e&&(d=2,e=k[a+2]);k[a+3]<e&&(d=3);return d}xB.X=1;function yB(a,d,e,f){var g;g=1-f;k[a]=g*k[d]+f*k[e];k[a+1]=g*k[d+1]+f*k[e+1];k[a+2]=g*k[d+2]+f*k[e+2]}yB.X=1;function ne(a,d,e){return k[a]*(k[d+1]*k[e+2]-k[d+2]*k[e+1])+k[a+1]*(k[d+2]*k[e]-k[d]*k[e+2])+k[a+2]*(k[d]*k[e+1]-k[d+1]*k[e])}ne.X=1;function Tc(a,d){var e;for(e=0;;){k[a+e]=k[d+e];var f=e+1;e=f;if(4<=(f|0)){break}}}Tc.X=1;function zB(a,d){var e;for(e=0;;){k[d+e]=k[a+e];var f=e+1;e=f;if(4<=(f|0)){break}}}zB.X=1;function AB(a,d){xi(a+23,d)}AB.X=1;function Cma(a,d){hp(a,d)}Cma.X=1;function hp(a,d){BB(a,d);BB(a+1,d+1);BB(a+2,d+2);BB(a+3,d+3)}hp.X=1;function Dma(a,d,e,f){CB(a,d,e,f)}Dma.X=1;function CB(a,d,e,f){var g=b;b+=6;var h=g+1,i=g+2,j=g+3,l=g+4,m=g+5;k[g]=0;k[h]=-k[a+2];pe(d,g,h,a+1);k[i]=0;k[j]=-k[a];pe(e,a+2,i,j);k[l]=-k[a+1];k[m]=0;pe(f,l,a,m);b=g}CB.X=1;function Ema(a,d){Mb(a,d)}Ema.X=1;function Fma(a,d){Ob(a,d)}Fma.X=1;function Gma(a){return k[a]}Gma.X=1;function Hma(a){return xB(a)}Hma.X=1;function DB(a){return k[a+2]}DB.X=1;function Ima(a,d,e,f){yB(a,d,e,f)}Ima.X=1;function Jma(a,d,e){return ne(a,d,e)}Jma.X=1;function EB(a){var d=b;b+=4;0==c[FB]<<24>>24&&Hb(FB);GB(d,a);c[HB]=c[d];k[HB]=k[d];c[HB+1]=c[d+1];k[HB+1]=k[d+1];c[HB+2]=c[d+2];k[HB+2]=k[d+2];c[HB+3]=c[d+3];k[HB+3]=k[d+3];b=d;return HB}EB.X=1;function GB(a,d){var e=b;b+=3;var f=e+1,g=e+2;k[e]=sc(k[d]);k[f]=sc(k[d+1]);k[g]=sc(k[d+2]);H(a,e,f,g);b=e}GB.X=1;function Kma(a){return IB(a)}Kma.X=1;function IB(a){var d=b;b+=1;k[d]=JB(a);a=KB(a,d);b=d;return a}IB.X=1;function Lma(a,d){return LB(a,d)}Lma.X=1;function LB(a,d){var e;e=ec(Um(a)*Um(d));return MB(J(a,d)/e)}LB.X=1;function Mma(a,d){Tc(a,d)}Mma.X=1;function NB(a,d,e){var f=b;b+=5;var g=f+1;k[f]=e;0==c[OB]<<24>>24&&Hb(OB);PB(g,a,d,f);c[QB]=c[g];k[QB]=k[g];c[QB+1]=c[g+1];k[QB+1]=k[g+1];c[QB+2]=c[g+2];k[QB+2]=k[g+2];c[QB+3]=c[g+3];k[QB+3]=k[g+3];b=f;return QB}NB.X=1;function PB(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=k[d]+(k[e]-k[d])*k[f];k[h]=k[d+1]+(k[e+1]-k[d+1])*k[f];k[i]=k[d+2]+(k[e+2]-k[d+2])*k[f];H(a,g,h,i);b=g}PB.X=1;function Nma(a,d){gp(a,d)}Nma.X=1;function gp(a,d){RB(a,d);RB(a+1,d+1);RB(a+2,d+2);RB(a+3,d+3)}gp.X=1;function SB(a,d){var e=b;b+=4;0==c[TB]<<24>>24&&Hb(TB);qn(e,a,d);c[UB]=c[e];k[UB]=k[e];c[UB+1]=c[e+1];k[UB+1]=k[e+1];c[UB+2]=c[e+2];k[UB+2]=k[e+2];c[UB+3]=c[e+3];k[UB+3]=k[e+3];b=e;return UB}SB.X=1;function qn(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=k[d+1]*k[e+2]-k[d+2]*k[e+1];k[g]=k[d+2]*k[e]-k[d]*k[e+2];k[h]=k[d]*k[e+1]-k[d+1]*k[e];H(a,f,g,h);b=f}qn.X=1;function Oma(a,d){zB(a,d)}Oma.X=1;function VB(a){var d=b;b+=4;0==c[WB]<<24>>24&&Hb(WB);XB(d,a);c[YB]=c[d];k[YB]=k[d];c[YB+1]=c[d+1];k[YB+1]=k[d+1];c[YB+2]=c[d+2];k[YB+2]=k[d+2];c[YB+3]=c[d+3];k[YB+3]=k[d+3];b=d;return YB}VB.X=1;function ZB(a){return k[a+3]}ZB.X=1;function $B(a,d,e,f,g){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=k[g]}$B.X=1;function re(a,d){var e;for(e=0;;){k[a+e]=k[d+e];var f=e+1;e=f;if(4<=(f|0)){break}}}re.X=1;function aC(a){return k[a]<k[a+1]?k[a]<k[a+2]?0:2:k[a+1]<k[a+2]?1:2}aC.X=1;function bC(a){return 0==k[a]?0!=k[a+1]?0:0==k[a+2]:0}bC.X=1;function mc(a,d){var e;for(e=0;;){k[d+e]=k[a+e];var f=e+1;e=f;if(4<=(f|0)){break}}}mc.X=1;function cC(a,d){k[a+1]=d}cC.X=1;function dC(a,d){k[a+2]=d}dC.X=1;function eC(a){var d,e;d=-1;e=-0xde0b6b000000000;k[a]>e&&(d=0,e=k[a]);k[a+1]>e&&(d=1,e=k[a+1]);k[a+2]>e&&(d=2,e=k[a+2]);k[a+3]>e&&(d=3);return d}eC.X=1;function fC(a){return k[a]<k[a+1]?k[a+1]<k[a+2]?2:1:k[a]<k[a+2]?2:0}fC.X=1;function gC(a,d){k[a+3]=d}gC.X=1;function XB(a,d){var e=b;b+=4;var f=e+1,g=e+2,h=e+3;k[e]=sc(k[d]);k[f]=sc(k[d+1]);k[g]=sc(k[d+2]);k[h]=sc(k[d+3]);jC(a,e,f,g,h);b=e}XB.X=1;function Pma(a){return ZB(a)}Pma.X=1;function Qma(a,d){return kC(a,d)}Qma.X=1;function kC(a,d){var e=b;b+=4;N(e,d,a);var f=Um(e);b=e;return f}kC.X=1;function Rma(a){return lC(a)}Rma.X=1;function lC(a){var d=b;b+=4;GB(d,a);a=fC(d);b=d;return a}lC.X=1;function mC(a,d,e,f,g){var h=b;b+=4;var i=h+1,j=h+2,l=h+3;k[h]=d;k[i]=e;k[j]=f;k[l]=g;$B(a,h,i,j,l);b=h}mC.X=1;function Sma(a){return nC(a)}Sma.X=1;function nC(a){return 1.1920928955078125e-7>Um(a)}nC.X=1;function Tma(a,d){re(a,d)}Tma.X=1;function Uma(a,d){return oC(a,d)}Uma.X=1;function oC(a,d){var e=b;b+=4;N(e,d,a);var f=JB(e);b=e;return f}oC.X=1;function Vma(a){return aC(a)}Vma.X=1;function pC(){return xb(16)}pC.X=1;function qC(a,d,e,f){var g=b;b+=4;var h=g+1,i=g+2,j=g+3;k[g]=a;k[h]=d;k[i]=e;k[j]=f;a=xb(16);jC(a,g,h,i,j);b=g;return a}qC.X=1;function Wma(a){return bC(a)}Wma.X=1;function Xma(a){return rC(a)}Xma.X=1;function rC(a){var d=b;b+=8;var e,f=d+4,g=d+5,h=d+6,i=d+7;GB(d,a);e=fC(d);0<k[d+e]?(KB(a,d+e),k[f]=JB(a),a=KB(a,f)):(k[g]=1,k[h]=0,k[i]=0,pe(a,g,h,i));b=d;return a}rC.X=1;function sC(a){var d=b;b+=4;0==c[tC]<<24>>24&&Hb(tC);uC(d,a);c[vC]=c[d];k[vC]=k[d];c[vC+1]=c[d+1];k[vC+1]=k[d+1];c[vC+2]=c[d+2];k[vC+2]=k[d+2];c[vC+3]=c[d+3];k[vC+3]=k[d+3];b=d;return vC}sC.X=1;function uC(a,d){var e=b;b+=1;k[e]=JB(d);wC(a,d,e);b=e}uC.X=1;function Yma(a,d){mc(a,d)}Yma.X=1;function Zma(a,d){k[a]=d}Zma.X=1;function $ma(a,d){cC(a,d)}$ma.X=1;function ana(a,d){dC(a,d)}ana.X=1;function bna(a){return eC(a)}bna.X=1;function xC(a){0!=(a|0)&&xe(a)}xC.X=1;function yC(a,d,e){var f=b;b+=4;0==c[zC]<<24>>24&&Hb(zC);AC(f,a,d,e);c[BC]=c[f];k[BC]=k[f];c[BC+1]=c[f+1];k[BC+1]=k[f+1];c[BC+2]=c[f+2];k[BC+2]=k[f+2];c[BC+3]=c[f+3];k[BC+3]=k[f+3];b=f;return BC}yC.X=1;function AC(a,d,e,f){var g=b;b+=31;var h=g+4,i=g+5,j=g+9,l=g+13,m=g+17,n=g+21,p=g+25,r=g+26,s=g+30;k[h]=J(e,d);Q(g,e,h);N(i,d,g);qn(l,e,d);c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3];k[p]=td(f);Q(n,i,p);wn(m,g,n);k[s]=ud(f);Q(r,j,s);wn(a,m,r);b=g}AC.X=1;function cna(a){return fC(a)}cna.X=1;function dna(a){return CC(a)}dna.X=1;function CC(a){var d=b;b+=4;XB(d,a);a=eC(d);b=d;return a}CC.X=1;function DC(a){return k[a+1]}DC.X=1;function ena(a){return Um(a)}ena.X=1;function Um(a){return J(a,a)}Um.X=1;function fna(a){EC(a)}fna.X=1;function EC(a){var d=b;b+=3;var e=d+1,f=d+2;k[d]=0;k[e]=0;k[f]=0;pe(a,d,e,f);b=d}EC.X=1;function gna(a){return JB(a)}gna.X=1;function JB(a){return ec(Um(a))}JB.X=1;function hna(a,d){gC(a,d)}hna.X=1;function ina(a){return FC(a)}ina.X=1;function FC(a){var d=b;b+=4;GB(d,a);a=aC(d);b=d;return a}FC.X=1;function GC(a){return k[a+3]}GC.X=1;function HC(a){return k[a+1]}HC.X=1;function jna(a){return k[a]}jna.X=1;function IC(a){return k[a+2]}IC.X=1;function kna(a,d){return J(a,d)}kna.X=1;function J(a,d){return k[a]*k[d]+k[a+1]*k[d+1]+k[a+2]*k[d+2]}J.X=1;function JC(a,d){k[a]-=k[d];var e=a+1;k[e]-=k[d+1];e=a+2;k[e]-=k[d+2];return a}JC.X=1;function xn(a,d){k[a]+=k[d];var e=a+1;k[e]+=k[d+1];e=a+2;k[e]+=k[d+2];return a}xn.X=1;function KC(a,d){return k[a+3]==k[d+3]?k[a+2]!=k[d+2]?0:k[a+1]!=k[d+1]?0:k[a]==k[d]:0}KC.X=1;function LC(a,d){k[a]*=k[d];var e=a+1;k[e]*=k[d];e=a+2;k[e]*=k[d];return a}LC.X=1;function pe(a,d,e,f){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=0}pe.X=1;function MC(a,d,e){v[c[c[a]+2]](a,d,e)}MC.X=1;function NC(a,d){v[c[c[a]+3]](a,d)}NC.X=1;function lna(a,d){hp(a,d)}lna.X=1;function mna(a,d,e,f){CB(a,d,e,f)}mna.X=1;function nna(a,d){Mb(a,d)}nna.X=1;function ona(a,d){Ob(a,d)}ona.X=1;function pna(a){return k[a]}pna.X=1;function OC(a){return k[a+1]}OC.X=1;function PC(a){return k[a+2]}PC.X=1;function qna(a,d,e,f){yB(a,d,e,f)}qna.X=1;function rna(a,d,e){return ne(a,d,e)}rna.X=1;function sna(a,d){return JC(a,d)}sna.X=1;function QC(a){var d=b;b+=4;0==c[RC]<<24>>24&&Hb(RC);GB(d,a);c[SC]=c[d];k[SC]=k[d];c[SC+1]=c[d+1];k[SC+1]=k[d+1];c[SC+2]=c[d+2];k[SC+2]=k[d+2];c[SC+3]=c[d+3];k[SC+3]=k[d+3];b=d;return SC}QC.X=1;function tna(a){return IB(a)}tna.X=1;function una(a,d){return LB(a,d)}una.X=1;function TC(a,d,e){var f=b;b+=5;var g=f+1;k[f]=e;0==c[UC]<<24>>24&&Hb(UC);PB(g,a,d,f);c[VC]=c[g];k[VC]=k[g];c[VC+1]=c[g+1];k[VC+1]=k[g+1];c[VC+2]=c[g+2];k[VC+2]=k[g+2];c[VC+3]=c[g+3];k[VC+3]=k[g+3];b=f;return VC}TC.X=1;function vna(a,d){gp(a,d)}vna.X=1;function WC(a,d){var e=b;b+=4;0==c[XC]<<24>>24&&Hb(XC);qn(e,a,d);c[YC]=c[e];k[YC]=k[e];c[YC+1]=c[e+1];k[YC+1]=k[e+1];c[YC+2]=c[e+2];k[YC+2]=k[e+2];c[YC+3]=c[e+3];k[YC+3]=k[e+3];b=e;return YC}WC.X=1;function wna(a,d){return xn(a,d)}wna.X=1;function xna(a,d){return KC(a,d)}xna.X=1;function ZC(a){0!=(a|0)&&xe(a)}ZC.X=1;function $C(a,d){var e=b;b+=1;k[e]=d;var f=LC(a,e);b=e;return f}$C.X=1;function yna(a,d){zB(a,d)}yna.X=1;function zna(a){return bC(a)}zna.X=1;function aD(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];return 0!=(a|0)}aD.X=1;function Ana(a,d){return kC(a,d)}Ana.X=1;function Bna(a){return lC(a)}Bna.X=1;function bD(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;pe(a,g,h,i);b=g}bD.X=1;function Cna(a){return nC(a)}Cna.X=1;function Dna(a,d){re(a,d)}Dna.X=1;function cD(a,d){var e=b;b+=1;k[e]=d;var f=KB(a,e);b=e;return f}cD.X=1;function KB(a,d){var e=b;b+=1;k[e]=1/k[d];var f=LC(a,e);b=e;return f}KB.X=1;function Ena(a){return aC(a)}Ena.X=1;function Fna(a){return rC(a)}Fna.X=1;function dD(a){var d=b;b+=4;0==c[eD]<<24>>24&&Hb(eD);uC(d,a);c[fD]=c[d];k[fD]=k[d];c[fD+1]=c[d+1];k[fD+1]=k[d+1];c[fD+2]=c[d+2];k[fD+2]=k[d+2];c[fD+3]=c[d+3];k[fD+3]=k[d+3];b=d;return fD}dD.X=1;function gD(){return xb(16)}gD.X=1;function hD(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=a;k[g]=d;k[h]=e;a=xb(16);H(a,f,g,h);b=f;return a}hD.X=1;function Gna(a,d){mc(a,d)}Gna.X=1;function Hna(a,d){k[a]=d}Hna.X=1;function Ina(a,d){cC(a,d)}Ina.X=1;function Jna(a,d){dC(a,d)}Jna.X=1;function Kna(a,d){return oC(a,d)}Kna.X=1;function iD(a,d,e){var f=b;b+=4;0==c[jD]<<24>>24&&Hb(jD);AC(f,a,d,e);c[kD]=c[f];k[kD]=k[f];c[kD+1]=c[f+1];k[kD+1]=k[f+1];c[kD+2]=c[f+2];k[kD+2]=k[f+2];c[kD+3]=c[f+3];k[kD+3]=k[f+3];b=f;return kD}iD.X=1;function Lna(a){return fC(a)}Lna.X=1;function Mna(a,d){Tc(a,d)}Mna.X=1;function Nna(a){return Um(a)}Nna.X=1;function Ona(a){EC(a)}Ona.X=1;function Pna(a){return JB(a)}Pna.X=1;function Qna(a,d){gC(a,d)}Qna.X=1;function Rna(a,d){return J(a,d)}Rna.X=1;function lD(a){return k[a+3]}lD.X=1;function mD(a){return k[a+1]}mD.X=1;function Sna(a){return k[a]}Sna.X=1;function nD(a){return k[a+2]}nD.X=1;function Tna(a){return FC(a)}Tna.X=1;function oD(a,d){v[c[c[a]+14]](a,d)}oD.X=1;function pD(a,d){return v[c[c[a]+10]](a,d)}pD.X=1;function qD(a){v[c[c[a]+8]](a)}qD.X=1;function rD(a){return v[c[c[a]+13]](a)}rD.X=1;function sD(a){v[c[c[a]+9]](a)}sD.X=1;function tD(a,d){return v[c[c[a]+7]](a,d)}tD.X=1;function uD(a){return v[c[c[a]+2]](a)}uD.X=1;function vD(a){return v[c[c[a]+3]](a)}vD.X=1;function wD(a,d,e,f,g){v[c[c[a]+5]](a,d,e,f,g)}wD.X=1;function xD(a,d){v[c[c[a]+12]](a,d)}xD.X=1;function yD(a,d){k[a+3]=d}yD.X=1;function zD(a){return k[a+2]}zD.X=1;function AD(a){return k[a+1]}AD.X=1;function Una(a,d){c[a]=d}Una.X=1;function BD(a,d){k[a+1]=d}BD.X=1;function CD(a){return k[a+3]}CD.X=1;function DD(a,d){k[a+2]=d}DD.X=1;function Vna(a){return c[a]}Vna.X=1;function ED(a,d){c[a+3]=d}ED.X=1;function Wna(a){return a+10}Wna.X=1;function Xna(a){return a+18}Xna.X=1;function FD(a,d){c[a+2]=d}FD.X=1;function GD(a){return c[a+2]}GD.X=1;function HD(a,d){c[a+5]=d}HD.X=1;function Yna(a){return a+6}Yna.X=1;function ID(a){return c[a+4]}ID.X=1;function JD(a){return k[a+1]}JD.X=1;function KD(a){return c[a+5]}KD.X=1;function LD(a,d){k[a+1]=d}LD.X=1;function MD(a,d){c[a+4]=d}MD.X=1;function ND(a){return 0!=(c[a+2]|0)}ND.X=1;function Zna(a){return a+14}Zna.X=1;function OD(a){return c[a+3]}OD.X=1;function PD(a,d){c[a+1]=d}PD.X=1;function $na(a){return a+2}$na.X=1;function QD(a,d){k[a+6]=d}QD.X=1;function RD(a){return k[a+6]}RD.X=1;function SD(a){return c[a+1]}SD.X=1;function aoa(a,d){c[a]=d}aoa.X=1;function boa(a){return c[a]}boa.X=1;function TD(a){return c[a+29]}TD.X=1;function UD(a){return c[a+22]}UD.X=1;function VD(a,d){c[a+22]=d}VD.X=1;function WD(a){return c[a+30]}WD.X=1;function XD(a,d){c[a+21]=d}XD.X=1;function YD(a,d){return v[c[c[a]+6]](a,d)}YD.X=1;function ZD(a,d,e){v[c[c[a]+11]](a,d,e)}ZD.X=1;function $D(a,d,e){return v[c[c[a]+4]](a,d,e)}$D.X=1;function aE(a){0!=(a|0)&&xe(a)}aE.X=1;function bE(){var a=xb(16);cE(a);return a}bE.X=1;function dE(a,d,e){return v[c[c[a]+3]](a,d,e&1)}dE.X=1;function eE(a,d){var e=a+10;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}eE.X=1;function fE(a,d){return v[c[c[a]+2]](a,d)}fE.X=1;function gE(a,d){var e=a+14;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}gE.X=1;function hE(a,d){var e=a+18;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}hE.X=1;function iE(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}iE.X=1;function coa(a){return ND(a)}coa.X=1;function jE(a,d){var e=xb(84);kE(e,a,d);return e}jE.X=1;function lE(a,d){var e=a+6;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}lE.X=1;function mE(a){0!=(a|0)&&xe(a)}mE.X=1;function nE(a,d){var e=a+2;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}nE.X=1;function oE(a,d,e,f){var g=xb(28);pE(g,a,d,e,f);return g}oE.X=1;function qE(a){v[c[c[a]+5]](a)}qE.X=1;function rE(a,d,e,f){v[c[c[a]+4]](a,d,e,f)}rE.X=1;function sE(a,d,e,f,g,h,i,j,l,m,n){return v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,m,n)}sE.X=1;function tE(a,d,e){v[c[c[a]+2]](a,d,e)}tE.X=1;function doa(a,d){uE(a,d)}doa.X=1;function eoa(a){return TD(a)}eoa.X=1;function foa(a){return UD(a)}foa.X=1;function goa(a,d){return vE(a,d)}goa.X=1;function wE(a,d,e,f,g,h,i,j){return hoa(a,d,e,f,g,h,i,j&1)}wE.X=1;function xE(a,d){yE(a,d,1)}xE.X=1;function zE(a,d,e){yE(a,d,e&1)}zE.X=1;function ioa(a,d){VD(a,d)}ioa.X=1;function joa(a){return AE(a)}joa.X=1;function AE(a){return BE(a+33)}AE.X=1;function koa(a,d){return CE(a,d)}koa.X=1;function loa(a){return WD(a)}loa.X=1;function moa(a,d,e){DE(a,d,e)}moa.X=1;function EE(a){var d=b;b+=4;0==c[FE]<<24>>24&&Hb(FE);noa(d,a);c[GE]=c[d];k[GE]=k[d];c[GE+1]=c[d+1];k[GE+1]=k[d+1];c[GE+2]=c[d+2];k[GE+2]=k[d+2];c[GE+3]=c[d+3];k[GE+3]=k[d+3];b=d;return GE}EE.X=1;function noa(a,d){var e;e=HE(d);H(a,0+e+c[d+32],4+e+c[d+32],8+e+c[d+32])}noa.X=1;function ooa(a,d){return IE(a,d)}ooa.X=1;function poa(a){return HE(a)}poa.X=1;function JE(a,d){KE(a,d,1)}JE.X=1;function LE(a,d,e){KE(a,d,e&1)}LE.X=1;function qoa(a){ME(a)}qoa.X=1;function NE(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}NE.X=1;function roa(a,d){XD(a,d)}roa.X=1;function OE(a,d){v[c[c[a]+3]](a,d)}OE.X=1;function PE(a){return c[a+32]}PE.X=1;function QE(a){return c[a+21]}QE.X=1;function RE(a){return c[a+31]}RE.X=1;function SE(a,d){k[a+26]=d}SE.X=1;function TE(a){return k[a+28]}TE.X=1;function UE(a,d){c[a+3]=d}UE.X=1;function VE(a,d){k[a+1]=d}VE.X=1;function WE(a,d){c[a+4]=d}WE.X=1;function XE(a){return k[a+1]}XE.X=1;function YE(a,d){c[a+5]=d}YE.X=1;function ZE(a){return c[a+4]}ZE.X=1;function soa(a){return a+15}soa.X=1;function $E(a){return c[a+5]}$E.X=1;function toa(a){return a+11}toa.X=1;function aF(a){return c[a+3]}aF.X=1;function bF(a,d){c[a+2]=d}bF.X=1;function cF(a){return c[a+2]}cF.X=1;function dF(a){return c[a+13]}dF.X=1;function eF(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}eF.X=1;function fF(a,d){v[c[c[a]+5]](a,d)}fF.X=1;function gF(a,d,e){a=xb(152);hF(a,0,d,e);return a}gF.X=1;function uoa(a){return PE(a)}uoa.X=1;function voa(a,d){return iF(a,d)}voa.X=1;function woa(a){return QE(a)}woa.X=1;function xoa(a){return RE(a)}xoa.X=1;function yoa(a,d){SE(a,d)}yoa.X=1;function zoa(a){return TE(a)}zoa.X=1;function Aoa(a,d,e){jF(a,d,e)}Aoa.X=1;function Boa(a,d,e){kF(a,d,e)}Boa.X=1;function lF(a,d){v[c[c[a]+4]](a,d)}lF.X=1;function mF(a,d,e){v[c[c[a]+2]](a,d,e)}mF.X=1;function nF(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}nF.X=1;function oF(a,d){return v[c[c[a]+2]](a,d)}oF.X=1;function pF(a,d,e){return v[c[c[a]+3]](a,d,e&1)}pF.X=1;function qF(a,d){var e=a+15;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}qF.X=1;function Coa(a){return ND(a)}Coa.X=1;function rF(a,d){var e=a+11;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}rF.X=1;function sF(a,d){var e=xb(132);Doa(e,a,d);return e}sF.X=1;function tF(a,d,e){v[c[c[a]+8]](a,d,e)}tF.X=1;function Eoa(a){return Ge(a)}Eoa.X=1;function uF(a,d){var e=b;b+=4;0==c[vF]<<24>>24&&Hb(vF);v[c[c[a]+15]](e,a,d);c[wF]=c[e];k[wF]=k[e];c[wF+1]=c[e+1];k[wF+1]=k[e+1];c[wF+2]=c[e+2];k[wF+2]=k[e+2];c[wF+3]=c[e+3];k[wF+3]=k[e+3];b=e;return wF}uF.X=1;function Foa(a,d){Je(a,d)}Foa.X=1;function Goa(a){return dF(a)}Goa.X=1;function xF(a,d,e){return v[c[c[a]+13]](a,d,e)}xF.X=1;function yF(a){return v[c[c[a]+7]](a)}yF.X=1;function zF(a,d){v[c[c[a]+14]](a,d)}zF.X=1;function AF(a){return v[c[c[a]+19]](a)}AF.X=1;function Hoa(a){return Ye(a)}Hoa.X=1;function BF(a){return v[c[c[a]+21]](a)}BF.X=1;function Ioa(a,d,e,f){df(a,d,e,f)}Ioa.X=1;function CF(a){return v[c[c[a]+12]](a)}CF.X=1;function DF(a){return v[c[c[a]+9]](a)}DF.X=1;function Joa(a){return a+3}Joa.X=1;function EF(a,d){var e=b;b+=4;0==c[FF]<<24>>24&&Hb(FF);kf(e,a,d);c[GF]=c[e];k[GF]=k[e];c[GF+1]=c[e+1];k[GF+1]=k[e+1];c[GF+2]=c[e+2];k[GF+2]=k[e+2];c[GF+3]=c[e+3];k[GF+3]=k[e+3];b=e;return GF}EF.X=1;function HF(a,d){var e=b;b+=4;0==c[IF]<<24>>24&&Hb(IF);v[c[c[a]+16]](e,a,d);c[JF]=c[e];k[JF]=k[e];c[JF+1]=c[e+1];k[JF+1]=k[e+1];c[JF+2]=c[e+2];k[JF+2]=k[e+2];c[JF+3]=c[e+3];k[JF+3]=k[e+3];b=e;return JF}HF.X=1;function KF(a,d){v[c[c[a]+6]](a,d)}KF.X=1;function LF(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}LF.X=1;function Koa(a){return Le(a)}Koa.X=1;function MF(a,d){var e=b;b+=4;0==c[NF]<<24>>24&&Hb(NF);tf(e,a,d);c[OF]=c[e];k[OF]=k[e];c[OF+1]=c[e+1];k[OF+1]=k[e+1];c[OF+2]=c[e+2];k[OF+2]=k[e+2];c[OF+3]=c[e+3];k[OF+3]=k[e+3];b=e;return OF}MF.X=1;function PF(a,d){return v[c[c[a]+5]](a,d)}PF.X=1;function Loa(a){return xf(a)}Loa.X=1;function Moa(a){return zf(a)}Moa.X=1;function Noa(a){return Me(a)}Noa.X=1;function Ooa(a){return Bf(a)}Ooa.X=1;function QF(a){return v[c[c[a]+11]](a)}QF.X=1;function RF(a,d,e){v[c[c[a]+20]](a,d,e)}RF.X=1;function Poa(a){return a+7}Poa.X=1;function Qoa(a){return Gf(a)}Qoa.X=1;function Roa(a,d){Jf(a,d)}Roa.X=1;function Soa(a){return Kf(a)}Soa.X=1;function Toa(a){return Mf(a)}Toa.X=1;function SF(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}SF.X=1;function TF(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}TF.X=1;function Uoa(a){return a+7}Uoa.X=1;function UF(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}UF.X=1;function VF(a){return k[a+1]}VF.X=1;function WF(a,d){c[a+3]=d}WF.X=1;function XF(a){return c[a+5]}XF.X=1;function YF(a,d){k[a+1]=d}YF.X=1;function ZF(a,d){c[a+4]=d}ZF.X=1;function $F(a,d){c[a+5]=d}$F.X=1;function aG(a){return c[a+4]}aG.X=1;function bG(a){return c[a+3]}bG.X=1;function cG(a,d){c[a+2]=d}cG.X=1;function dG(a){return c[a+2]}dG.X=1;function eG(a,d){k[a+8]=d}eG.X=1;function Voa(a){return a+4}Voa.X=1;function Woa(a){return a}Woa.X=1;function fG(a){return k[a+8]}fG.X=1;function gG(a,d,e,f){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=0}gG.X=1;function jc(a,d,e,f,g){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=k[g]}jc.X=1;function hG(a,d){return k[a+3]==k[d+3]?k[a+2]!=k[d+2]?0:k[a+1]!=k[d+1]?0:k[a]==k[d]:0}hG.X=1;function iG(a,d){k[a+3]=d}iG.X=1;function jG(a,d){k[a+1]=d}jG.X=1;function kG(a,d){k[a+2]=d}kG.X=1;function lG(a){return v[c[c[a]+4]](a)}lG.X=1;function mG(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}mG.X=1;function nG(a,d){v[c[c[a]+10]](a,d)}nG.X=1;function Xoa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Xoa.X=1;function oG(a){var d=b;b+=4;0==c[pG]<<24>>24&&Hb(pG);qG(d,a);c[rG]=c[d];k[rG]=k[d];c[rG+1]=c[d+1];k[rG+1]=k[d+1];c[rG+2]=c[d+2];k[rG+2]=k[d+2];c[rG+3]=c[d+3];k[rG+3]=k[d+3];b=d;return rG}oG.X=1;function qG(a,d){var e=b;b+=7;var f=e+4,g=e+5,h=e+6,i=d+7;c[a]=c[i];k[a]=k[i];c[a+1]=c[i+1];k[a+1]=k[i+1];c[a+2]=c[i+2];k[a+2]=k[i+2];c[a+3]=c[i+3];k[a+3]=k[i+3];k[f]=v[c[c[d]+11]](d);k[g]=v[c[c[d]+11]](d);k[h]=v[c[c[d]+11]](d);H(e,f,g,h);xn(a,e);b=e}qG.X=1;function Yoa(a){return Uf(a)}Yoa.X=1;function Zoa(a){return Ie(a)}Zoa.X=1;function $oa(a){return ND(a)}$oa.X=1;function sG(a,d,e){return v[c[c[a]+3]](a,d,e&1)}sG.X=1;function tG(a,d){return v[c[c[a]+2]](a,d)}tG.X=1;function uG(a){0!=(a|0)&&xe(a)}uG.X=1;function vG(){var a=xb(36);wG(a);return a}vG.X=1;function xG(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}xG.X=1;function yG(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3]}yG.X=1;function zG(a){0!=(a|0)&&xe(a)}zG.X=1;function apa(a,d){AG(a,d)}apa.X=1;function AG(a,d){BB(a,d);BB(a+1,d+1);BB(a+2,d+2);BB(a+3,d+3)}AG.X=1;function BG(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;gG(a,g,h,i);b=g}BG.X=1;function CG(a,d,e,f,g){var h=b;b+=4;var i=h+1,j=h+2,l=h+3;k[h]=d;k[i]=e;k[j]=f;k[l]=g;jc(a,h,i,j,l);b=h}CG.X=1;function bpa(a,d){DG(a,d)}bpa.X=1;function DG(a,d){RB(a,d);RB(a+1,d+1);RB(a+2,d+2);RB(a+3,d+3)}DG.X=1;function cpa(a,d){return hG(a,d)}cpa.X=1;function dpa(a){return k[a]}dpa.X=1;function EG(a){return k[a+1]}EG.X=1;function FG(a){return k[a+2]}FG.X=1;function epa(a,d){iG(a,d)}epa.X=1;function GG(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];return 0!=(a|0)}GG.X=1;function HG(a){return k[a+3]}HG.X=1;function IG(a){return k[a+1]}IG.X=1;function fpa(a){return k[a]}fpa.X=1;function JG(a){return k[a+2]}JG.X=1;function gpa(a,d){k[a]=d}gpa.X=1;function hpa(a,d){jG(a,d)}hpa.X=1;function ipa(a,d){kG(a,d)}ipa.X=1;function KG(){return xb(16)}KG.X=1;function LG(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=a;k[g]=d;k[h]=e;a=xb(16);jpa(a,f,g,h);b=f;return a}LG.X=1;function MG(a,d,e,f){var g=b;b+=4;var h=g+1,i=g+2,j=g+3;k[g]=a;k[h]=d;k[i]=e;k[j]=f;a=xb(16);NG(a,g,h,i,j);b=g;return a}MG.X=1;function OG(a,d,e){v[c[c[a]+8]](a,d,e)}OG.X=1;function kpa(a){return Ge(a)}kpa.X=1;function PG(a){var d=Se(56);QG(d,a);return d}PG.X=1;function He(a){return 31==(a|0)}He.X=1;function bf(a){return 7>(a|0)}bf.X=1;function yf(a){return 20>(a|0)}yf.X=1;function RG(a,d){k[a+9]=d}RG.X=1;function SG(a){return k[a+9]}SG.X=1;function lpa(a){return a+5}lpa.X=1;function mpa(a){return a+1}mpa.X=1;function npa(a){return c[a]}npa.X=1;function TG(a){return c[a+16]}TG.X=1;function UG(a,d){c[a+16]=d}UG.X=1;function opa(a,d){c[a]=d}opa.X=1;function VG(a){return c[a+13]}VG.X=1;function ppa(a){return a+5}ppa.X=1;function WG(a,d){c[a+4]=d}WG.X=1;function XG(a){return c[a+2]}XG.X=1;function YG(a){return c[a+4]}YG.X=1;function qpa(a){return a+9}qpa.X=1;function ZG(a,d){c[a+3]=d}ZG.X=1;function $G(a,d){c[a+1]=d}$G.X=1;function aH(a,d){var e=b;b+=4;0==c[bH]<<24>>24&&Hb(bH);v[c[c[a]+15]](e,a,d);c[cH]=c[e];k[cH]=k[e];c[cH+1]=c[e+1];k[cH+1]=k[e+1];c[cH+2]=c[e+2];k[cH+2]=k[e+2];c[cH+3]=c[e+3];k[cH+3]=k[e+3];b=e;return cH}aH.X=1;function rpa(a,d){Je(a,d)}rpa.X=1;function spa(a){return dF(a)}spa.X=1;function dH(a,d,e){return v[c[c[a]+13]](a,d,e)}dH.X=1;function eH(a){return v[c[c[a]+7]](a)}eH.X=1;function fH(a){return v[c[c[a]+19]](a)}fH.X=1;function tpa(a){return Ye(a)}tpa.X=1;function gH(a){return v[c[c[a]+21]](a)}gH.X=1;function upa(a,d,e,f){df(a,d,e,f)}upa.X=1;function hH(a){return v[c[c[a]+12]](a)}hH.X=1;function iH(a){return v[c[c[a]+9]](a)}iH.X=1;function vpa(a){return a+3}vpa.X=1;function jH(a,d){var e=b;b+=4;0==c[kH]<<24>>24&&Hb(kH);kf(e,a,d);c[lH]=c[e];k[lH]=k[e];c[lH+1]=c[e+1];k[lH+1]=k[e+1];c[lH+2]=c[e+2];k[lH+2]=k[e+2];c[lH+3]=c[e+3];k[lH+3]=k[e+3];b=e;return lH}jH.X=1;function mH(a,d){var e=b;b+=4;0==c[nH]<<24>>24&&Hb(nH);v[c[c[a]+16]](e,a,d);c[oH]=c[e];k[oH]=k[e];c[oH+1]=c[e+1];k[oH+1]=k[e+1];c[oH+2]=c[e+2];k[oH+2]=k[e+2];c[oH+3]=c[e+3];k[oH+3]=k[e+3];b=e;return oH}mH.X=1;function pH(a,d){v[c[c[a]+6]](a,d)}pH.X=1;function qH(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}qH.X=1;function wpa(a){return Le(a)}wpa.X=1;function rH(a,d){var e=b;b+=4;0==c[sH]<<24>>24&&Hb(sH);tf(e,a,d);c[tH]=c[e];k[tH]=k[e];c[tH+1]=c[e+1];k[tH+1]=k[e+1];c[tH+2]=c[e+2];k[tH+2]=k[e+2];c[tH+3]=c[e+3];k[tH+3]=k[e+3];b=e;return tH}rH.X=1;function uH(a,d){return v[c[c[a]+5]](a,d)}uH.X=1;function xpa(a){return xf(a)}xpa.X=1;function ypa(a){return zf(a)}ypa.X=1;function zpa(a){return Me(a)}zpa.X=1;function Apa(a){return Bf(a)}Apa.X=1;function vH(a){return v[c[c[a]+11]](a)}vH.X=1;function wH(a,d,e){v[c[c[a]+20]](a,d,e)}wH.X=1;function Bpa(a){return a+7}Bpa.X=1;function Cpa(a){return Gf(a)}Cpa.X=1;function Dpa(a,d){Jf(a,d)}Dpa.X=1;function Epa(a){return Kf(a)}Epa.X=1;function Fpa(a){return Mf(a)}Fpa.X=1;function xH(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}xH.X=1;function yH(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}yH.X=1;function Gpa(a){return a+7}Gpa.X=1;function zH(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}zH.X=1;function AH(a){return v[c[c[a]+4]](a)}AH.X=1;function BH(a,d){v[c[c[a]+14]](a,d)}BH.X=1;function CH(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}CH.X=1;function DH(a,d){v[c[c[a]+10]](a,d)}DH.X=1;function Hpa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Hpa.X=1;function EH(a){var d=b;b+=4;0==c[FH]<<24>>24&&Hb(FH);qG(d,a);c[GH]=c[d];k[GH]=k[d];c[GH+1]=c[d+1];k[GH+1]=k[d+1];c[GH+2]=c[d+2];k[GH+2]=k[d+2];c[GH+3]=c[d+3];k[GH+3]=k[d+3];b=d;return GH}EH.X=1;function Ipa(a){return Uf(a)}Ipa.X=1;function Jpa(a){return Ie(a)}Jpa.X=1;function HH(a,d){var e=a+5;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}HH.X=1;function IH(a,d,e,f){v[c[c[a]+4]](a,d,e,f)}IH.X=1;function JH(a,d){var e=a+1;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}JH.X=1;function KH(a,d,e){v[c[c[a]+3]](a,d,e)}KH.X=1;function LH(a,d,e){v[c[c[a]+2]](a,d,e)}LH.X=1;function Kpa(a){return He(a)}Kpa.X=1;function Lpa(a){return bf(a)}Lpa.X=1;function Mpa(a){return yf(a)}Mpa.X=1;function Npa(a){return YG(a)}Npa.X=1;function Opa(a){return Cf(a)}Opa.X=1;function Cf(a){return Yf(a)?25==(a|0)^1:0}Cf.X=1;function MH(a,d){var e=a+5;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}MH.X=1;function NH(a,d,e,f,g){var h=OH(64);PH(h,a,d,e,f,g);return h}NH.X=1;function OH(a){return Ue(a,16)}OH.X=1;function QH(a){var d=Se(56);RH(d,a);return d}QH.X=1;function Lf(a){return 32==(a|0)}Lf.X=1;function Af(a){return 28==(a|0)}Af.X=1;function Yf(a){return 20<(a|0)?30>(a|0):0}Yf.X=1;function Hf(a){return 17==(a|0)?1:18==(a|0)}Hf.X=1;function SH(a){return c[a+4]}SH.X=1;function TH(a,d){c[a+2]=d}TH.X=1;function UH(a,d){c[a+13]=d}UH.X=1;function VH(a){return c[a+3]}VH.X=1;function WH(a){return c[a+1]}WH.X=1;function XH(a,d){c[a+1]=d}XH.X=1;function YH(a,d){c[a+2]=d}YH.X=1;function ZH(a){return c[a+2]}ZH.X=1;function $H(a){return c[a+1]}$H.X=1;function aI(a){return c[a+31]}aI.X=1;function bI(a,d){c[a+31]=d}bI.X=1;function cI(a){return c[a+1]}cI.X=1;function dI(a){return c[a+34]}dI.X=1;function eI(a){return c[a+35]}eI.X=1;function fI(a,d){c[a+1]=d}fI.X=1;function Ppa(a){return Lf(a)}Ppa.X=1;function gI(a,d){var e=a+9;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}gI.X=1;function hI(a){0!=(a|0)&&yh(a)}hI.X=1;function Qpa(a){return Af(a)}Qpa.X=1;function Rpa(a){return Yf(a)}Rpa.X=1;function Spa(a){return Hf(a)}Spa.X=1;function iI(){var a=xb(8);Tpa(a);return a}iI.X=1;function jI(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}jI.X=1;function kI(a,d,e,f,g,h,i,j){return v[c[c[a]+3]](a,d,e,f,g,h,i,j)}kI.X=1;function lI(a,d){return v[c[c[a]+2]](a,d)}lI.X=1;function mI(a){v[c[c[a]+5]](a)}mI.X=1;function nI(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}nI.X=1;function oI(){var a=xb(128);pI(a);return a}oI.X=1;function qI(a,d,e){v[c[c[a]+2]](a,d,e)}qI.X=1;function Upa(a){return rI(a)}Upa.X=1;function Vpa(a){return aI(a)}Vpa.X=1;function Wpa(a,d){bI(a,d)}Wpa.X=1;function sI(a,d,e,f){v[c[c[a]+4]](a,d,e,f)}sI.X=1;function tI(a,d,e,f,g,h,i,j,l,m,n){return v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,m,n)}tI.X=1;function Xpa(a,d){return uI(a,d)}Xpa.X=1;function vI(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}vI.X=1;function Ypa(a){return cI(a)}Ypa.X=1;function Zpa(a){return dI(a)}Zpa.X=1;function wI(a,d,e,f){v[c[c[a]+4]](a,d,e,f)}wI.X=1;function $pa(a){return eI(a)}$pa.X=1;function xI(){var a=xb(160);yI(a);return a}xI.X=1;function zI(a,d){var e=xb(160);AI(e,a,d);return e}zI.X=1;function BI(a,d,e){v[c[c[a]+3]](a,d,e)}BI.X=1;function CI(a,d,e){v[c[c[a]+2]](a,d,e)}CI.X=1;function aqa(a){DI(a)}aqa.X=1;function DI(a){if(0!=(Xj(c[a+1])|0)){var d=c[a+1];($j(c[a+1])|0)!=(c[a+34]|0)&1?sk(d,a+18,a+2):sk(d,a+2,a+18)}}DI.X=1;function bqa(a,d){fI(a,d)}bqa.X=1;function EI(a,d,e){v[c[c[a]+8]](a,d,e)}EI.X=1;function cqa(a){return Ge(a)}cqa.X=1;function FI(a,d){var e=b;b+=4;0==c[GI]<<24>>24&&Hb(GI);v[c[c[a]+15]](e,a,d);c[HI]=c[e];k[HI]=k[e];c[HI+1]=c[e+1];k[HI+1]=k[e+1];c[HI+2]=c[e+2];k[HI+2]=k[e+2];c[HI+3]=c[e+3];k[HI+3]=k[e+3];b=e;return HI}FI.X=1;function dqa(a,d){Je(a,d)}dqa.X=1;function eqa(a){return Le(a)}eqa.X=1;function II(a,d,e){return v[c[c[a]+13]](a,d,e)}II.X=1;function JI(a){return v[c[c[a]+19]](a)}JI.X=1;function fqa(a){return Ye(a)}fqa.X=1;function gqa(a,d){return KI(a,d)}gqa.X=1;function KI(a,d){return k[LI(a+27,d)]}KI.X=1;function MI(a,d){var e=b;b+=4;0==c[NI]<<24>>24&&Hb(NI);tf(e,a,d);c[OI]=c[e];k[OI]=k[e];c[OI+1]=c[e+1];k[OI+1]=k[e+1];c[OI+2]=c[e+2];k[OI+2]=k[e+2];c[OI+3]=c[e+3];k[OI+3]=k[e+3];b=e;return OI}MI.X=1;function hqa(a,d,e,f){df(a,d,e,f)}hqa.X=1;function PI(a){return v[c[c[a]+12]](a)}PI.X=1;function iqa(a){return QI(a)}iqa.X=1;function QI(a){return th(a+22)}QI.X=1;function RI(a){return v[c[c[a]+9]](a)}RI.X=1;function jqa(a){return a+3}jqa.X=1;function SI(a,d){var e=b;b+=4;0==c[TI]<<24>>24&&Hb(TI);kf(e,a,d);c[UI]=c[e];k[UI]=k[e];c[UI+1]=c[e+1];k[UI+1]=k[e+1];c[UI+2]=c[e+2];k[UI+2]=k[e+2];c[UI+3]=c[e+3];k[UI+3]=k[e+3];b=e;return UI}SI.X=1;function VI(a,d,e){var f=Se(128);WI(f,a,d,e);return f}VI.X=1;function XI(a,d){c[a+26]=d&1}XI.X=1;function kqa(a,d){Jf(a,d)}kqa.X=1;function YI(a,d){v[c[c[a]+6]](a,d)}YI.X=1;function ZI(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}ZI.X=1;function lqa(a,d){return $I(a,d)}lqa.X=1;function $I(a,d){return jg(a+22,d)}$I.X=1;function aJ(a,d){return v[c[c[a]+5]](a,d)}aJ.X=1;function mqa(a){return xf(a)}mqa.X=1;function nqa(a){return zf(a)}nqa.X=1;function oqa(a){return Me(a)}oqa.X=1;function pqa(a){return Bf(a)}pqa.X=1;function bJ(a){return v[c[c[a]+11]](a)}bJ.X=1;function qqa(a){cJ(a)}qqa.X=1;function dJ(a,d,e){v[c[c[a]+20]](a,d,e)}dJ.X=1;function eJ(a,d){v[c[c[a]+10]](a,d)}eJ.X=1;function rqa(a){return Gf(a)}rqa.X=1;function fJ(a){return v[c[c[a]+7]](a)}fJ.X=1;function gJ(a,d){var e=b;b+=4;0==c[hJ]<<24>>24&&Hb(hJ);v[c[c[a]+16]](e,a,d);c[iJ]=c[e];k[iJ]=k[e];c[iJ+1]=c[e+1];k[iJ+1]=k[e+1];c[iJ+2]=c[e+2];k[iJ+2]=k[e+2];c[iJ+3]=c[e+3];k[iJ+3]=k[e+3];b=e;return iJ}gJ.X=1;function sqa(a){return Kf(a)}sqa.X=1;function tqa(a){return Mf(a)}tqa.X=1;function jJ(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}jJ.X=1;function kJ(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}kJ.X=1;function uqa(a){return a+7}uqa.X=1;function lJ(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}lJ.X=1;function mJ(a){return v[c[c[a]+4]](a)}mJ.X=1;function nJ(a,d){v[c[c[a]+14]](a,d)}nJ.X=1;function oJ(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}oJ.X=1;function vqa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}vqa.X=1;function wqa(a){return Uf(a)}wqa.X=1;function xqa(a){return Ie(a)}xqa.X=1;function pJ(a,d,e){v[c[c[a]+8]](a,d,e)}pJ.X=1;function yqa(a,d){Je(a,d)}yqa.X=1;function qJ(a,d,e){return v[c[c[a]+13]](a,d,e)}qJ.X=1;function rJ(a){return v[c[c[a]+7]](a)}rJ.X=1;function sJ(a,d,e,f,g,h,i){var h=h&1,i=i&1,j=xb(124);tJ(j,a,d,e,f,g,h&1,i&1);return j}sJ.X=1;function uJ(a,d,e,f,g,h,i,j,l){var l=l&1,m=xb(124);vJ(m,a,d,e,f,g,h,i,j,l&1);return m}uJ.X=1;function wJ(a,d,e,f){v[c[c[a]+15]](a,d,e,f)}wJ.X=1;function xJ(a){return v[c[c[a]+12]](a)}xJ.X=1;function yJ(a){return v[c[c[a]+9]](a)}yJ.X=1;function zqa(a){return Ge(a)}zqa.X=1;function Aqa(a){return Ye(a)}Aqa.X=1;function zJ(a,d){v[c[c[a]+6]](a,d)}zJ.X=1;function AJ(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}AJ.X=1;function BJ(a){XI(a,1)}BJ.X=1;function CJ(a,d){XI(a,d&1)}CJ.X=1;function DJ(a,d){return v[c[c[a]+5]](a,d)}DJ.X=1;function Bqa(a){return xf(a)}Bqa.X=1;function Cqa(a){return zf(a)}Cqa.X=1;function Dqa(a){return Me(a)}Dqa.X=1;function Eqa(a){return Bf(a)}Eqa.X=1;function EJ(a){return v[c[c[a]+11]](a)}EJ.X=1;function FJ(a,d){v[c[c[a]+10]](a,d)}FJ.X=1;function Fqa(a){return Gf(a)}Fqa.X=1;function Gqa(a){return Kf(a)}Gqa.X=1;function GJ(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}GJ.X=1;function Hqa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Hqa.X=1;function Iqa(a){return Uf(a)}Iqa.X=1;function HJ(a){return v[c[c[a]+4]](a)}HJ.X=1;function IJ(a,d){v[c[c[a]+14]](a,d)}IJ.X=1;function JJ(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}JJ.X=1;function Jqa(a){return Ie(a)}Jqa.X=1;function KJ(a,d,e){v[c[c[a]+8]](a,d,e)}KJ.X=1;function Kqa(a){return Ge(a)}Kqa.X=1;function LJ(a,d){var e=b;b+=4;0==c[MJ]<<24>>24&&Hb(MJ);v[c[c[a]+15]](e,a,d);c[NJ]=c[e];k[NJ]=k[e];c[NJ+1]=c[e+1];k[NJ+1]=k[e+1];c[NJ+2]=c[e+2];k[NJ+2]=k[e+2];c[NJ+3]=c[e+3];k[NJ+3]=k[e+3];b=e;return NJ}LJ.X=1;function Lqa(a,d){Je(a,d)}Lqa.X=1;function Mqa(a){return Le(a)}Mqa.X=1;function OJ(a,d,e){return v[c[c[a]+13]](a,d,e)}OJ.X=1;function PJ(a){return v[c[c[a]+7]](a)}PJ.X=1;function QJ(a){return v[c[c[a]+19]](a)}QJ.X=1;function Nqa(a){return Ye(a)}Nqa.X=1;function RJ(a,d){var e=b;b+=4;0==c[SJ]<<24>>24&&Hb(SJ);tf(e,a,d);c[TJ]=c[e];k[TJ]=k[e];c[TJ+1]=c[e+1];k[TJ+1]=k[e+1];c[TJ+2]=c[e+2];k[TJ+2]=k[e+2];c[TJ+3]=c[e+3];k[TJ+3]=k[e+3];b=e;return TJ}RJ.X=1;function Oqa(a,d,e,f){df(a,d,e,f)}Oqa.X=1;function UJ(a){return v[c[c[a]+12]](a)}UJ.X=1;function VJ(a){return v[c[c[a]+9]](a)}VJ.X=1;function Pqa(a){return a+3}Pqa.X=1;function WJ(a,d){var e=b;b+=4;0==c[XJ]<<24>>24&&Hb(XJ);kf(e,a,d);c[YJ]=c[e];k[YJ]=k[e];c[YJ+1]=c[e+1];k[YJ+1]=k[e+1];c[YJ+2]=c[e+2];k[YJ+2]=k[e+2];c[YJ+3]=c[e+3];k[YJ+3]=k[e+3];b=e;return YJ}WJ.X=1;function Qqa(a,d){Jf(a,d)}Qqa.X=1;function ZJ(a,d){v[c[c[a]+6]](a,d)}ZJ.X=1;function $J(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}$J.X=1;function aK(a,d){return v[c[c[a]+5]](a,d)}aK.X=1;function Rqa(a){return xf(a)}Rqa.X=1;function Sqa(a){return zf(a)}Sqa.X=1;function Tqa(a){return Me(a)}Tqa.X=1;function Uqa(a){return Bf(a)}Uqa.X=1;function bK(a){return v[c[c[a]+11]](a)}bK.X=1;function Vqa(a){cJ(a)}Vqa.X=1;function cK(a,d,e){v[c[c[a]+20]](a,d,e)}cK.X=1;function dK(a,d){v[c[c[a]+10]](a,d)}dK.X=1;function Wqa(a){return Gf(a)}Wqa.X=1;function eK(a,d){var e=b;b+=4;0==c[fK]<<24>>24&&Hb(fK);v[c[c[a]+16]](e,a,d);c[gK]=c[e];k[gK]=k[e];c[gK+1]=c[e+1];k[gK+1]=k[e+1];c[gK+2]=c[e+2];k[gK+2]=k[e+2];c[gK+3]=c[e+3];k[gK+3]=k[e+3];b=e;return gK}eK.X=1;function Xqa(a){return Kf(a)}Xqa.X=1;function Yqa(a){return Mf(a)}Yqa.X=1;function hK(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}hK.X=1;function iK(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}iK.X=1;function Zqa(a){return a+7}Zqa.X=1;function jK(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}jK.X=1;function kK(a){return v[c[c[a]+4]](a)}kK.X=1;function lK(a,d){v[c[c[a]+14]](a,d)}lK.X=1;function mK(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}mK.X=1;function $qa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}$qa.X=1;function ara(a){return Uf(a)}ara.X=1;function bra(a){return Ie(a)}bra.X=1;function nK(a,d,e){v[c[c[a]+8]](a,d,e)}nK.X=1;function oK(a,d){var e=b;b+=4;0==c[pK]<<24>>24&&Hb(pK);v[c[c[a]+15]](e,a,d);c[qK]=c[e];k[qK]=k[e];c[qK+1]=c[e+1];k[qK+1]=k[e+1];c[qK+2]=c[e+2];k[qK+2]=k[e+2];c[qK+3]=c[e+3];k[qK+3]=k[e+3];b=e;return qK}oK.X=1;function cra(a,d){Je(a,d)}cra.X=1;function rK(a,d,e){return v[c[c[a]+13]](a,d,e)}rK.X=1;function sK(a){return v[c[c[a]+7]](a)}sK.X=1;function tK(a){return v[c[c[a]+19]](a)}tK.X=1;function dra(a){return Ye(a)}dra.X=1;function uK(a,d){var e=b;b+=4;0==c[vK]<<24>>24&&Hb(vK);tf(e,a,d);c[wK]=c[e];k[wK]=k[e];c[wK+1]=c[e+1];k[wK+1]=k[e+1];c[wK+2]=c[e+2];k[wK+2]=k[e+2];c[wK+3]=c[e+3];k[wK+3]=k[e+3];b=e;return wK}uK.X=1;function era(a,d,e,f){df(a,d,e,f)}era.X=1;function xK(a){return v[c[c[a]+12]](a)}xK.X=1;function yK(a){return v[c[c[a]+9]](a)}yK.X=1;function fra(a){return Ge(a)}fra.X=1;function zK(a,d){var e=b;b+=4;0==c[AK]<<24>>24&&Hb(AK);kf(e,a,d);c[BK]=c[e];k[BK]=k[e];c[BK+1]=c[e+1];k[BK+1]=k[e+1];c[BK+2]=c[e+2];k[BK+2]=k[e+2];c[BK+3]=c[e+3];k[BK+3]=k[e+3];b=e;return BK}zK.X=1;function CK(a,d){v[c[c[a]+6]](a,d)}CK.X=1;function DK(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}DK.X=1;function EK(a,d){return v[c[c[a]+5]](a,d)}EK.X=1;function gra(a){return xf(a)}gra.X=1;function hra(a){return zf(a)}hra.X=1;function ira(a){return Me(a)}ira.X=1;function jra(a){return Bf(a)}jra.X=1;function FK(a){return v[c[c[a]+11]](a)}FK.X=1;function GK(a,d,e){v[c[c[a]+20]](a,d,e)}GK.X=1;function HK(a,d){v[c[c[a]+10]](a,d)}HK.X=1;function kra(a){return Gf(a)}kra.X=1;function IK(a,d){var e=b;b+=4;0==c[JK]<<24>>24&&Hb(JK);v[c[c[a]+16]](e,a,d);c[KK]=c[e];k[KK]=k[e];c[KK+1]=c[e+1];k[KK+1]=k[e+1];c[KK+2]=c[e+2];k[KK+2]=k[e+2];c[KK+3]=c[e+3];k[KK+3]=k[e+3];b=e;return KK}IK.X=1;function lra(a){return Kf(a)}lra.X=1;function mra(a){return Mf(a)}mra.X=1;function LK(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}LK.X=1;function nra(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}nra.X=1;function MK(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}MK.X=1;function NK(a){return v[c[c[a]+4]](a)}NK.X=1;function OK(a,d){v[c[c[a]+14]](a,d)}OK.X=1;function PK(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}PK.X=1;function ora(a){return Uf(a)}ora.X=1;function pra(a){return Ie(a)}pra.X=1;function QK(a,d,e,f){v[c[c[a]+2]](a,d,e,f,0)}QK.X=1;function RK(a,d){c[a+5]=d}RK.X=1;function SK(a,d){c[a+2]=d}SK.X=1;function TK(a){return c[a+5]}TK.X=1;function UK(a){return c[a+1]}UK.X=1;function VK(a,d){c[a+7]=d}VK.X=1;function WK(a){return c[a+6]}WK.X=1;function XK(a,d){c[a+6]=d}XK.X=1;function YK(a){return c[a+4]}YK.X=1;function ZK(a,d){c[a+3]=d}ZK.X=1;function $K(a){return c[a+7]}$K.X=1;function qra(a,d){c[a]=d}qra.X=1;function aL(a){return c[a+2]}aL.X=1;function rra(a){return c[a]}rra.X=1;function bL(a,d){c[a+4]=d}bL.X=1;function cL(a){return c[a+3]}cL.X=1;function dL(a,d){c[a+1]=d}dL.X=1;function sra(a){return a+8}sra.X=1;function tra(a){return a}tra.X=1;function eL(a){return k[a+20]}eL.X=1;function fL(a,d){k[a+20]=d}fL.X=1;function gL(a){return k[a+20]}gL.X=1;function ura(a){return a+12}ura.X=1;function vra(a){return a+4}vra.X=1;function wra(a){return a+16}wra.X=1;function hL(a,d,e,f,g){v[c[c[a]+2]](a,d,e,f,g&1)}hL.X=1;function iL(a){0!=(a|0)&&xe(a)}iL.X=1;function jL(){var a=xb(32);Hj(a);return a}jL.X=1;function kL(a,d){return v[c[c[a]+14]](a,d)}kL.X=1;function lL(a,d){return v[c[c[a]+10]](a,d)}lL.X=1;function mL(a){return v[c[c[a]+9]](a)}mL.X=1;function nL(a,d){v[c[c[a]+5]](a,d)}nL.X=1;function oL(a,d){v[c[c[a]+15]](a,d)}oL.X=1;function pL(a){return v[c[c[a]+11]](a)}pL.X=1;function qL(a,d,e){return v[c[c[a]+2]](a,d,e,0)}qL.X=1;function rL(a,d,e,f){return v[c[c[a]+2]](a,d,e,f)}rL.X=1;function sL(a,d,e){return v[c[c[a]+7]](a,d,e)}sL.X=1;function tL(a,d,e){return v[c[c[a]+3]](a,d,e)}tL.X=1;function uL(a,d,e,f){v[c[c[a]+8]](a,d,e,f)}uL.X=1;function vL(a){return v[c[c[a]+12]](a)}vL.X=1;function wL(a,d,e){return v[c[c[a]+6]](a,d,e)}wL.X=1;function xL(a,d){v[c[c[a]+4]](a,d)}xL.X=1;function yL(a){0!=(a|0)&&xe(a)}yL.X=1;function zL(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3]}zL.X=1;function AL(){return xb(84)}AL.X=1;function BL(a,d,e,f){var g=xb(84);xra(g,a,d,e,f);return g}BL.X=1;function CL(a,d,e,f,g){var h=xb(84);DL(h,a,d,e,f,g);return h}CL.X=1;function EL(a,d,e,f,g,h){var i=xb(84);yra(i,a,d,e,f,g,h);return i}EL.X=1;function FL(a,d,e,f,g,h,i,j,l){var m=xb(84);GL(m,a,d,e,f,g,h,i,j,l);return m}FL.X=1;function HL(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}HL.X=1;function zra(a){return eL(a)}zra.X=1;function Ara(a,d,e,f,g){return IL(a,d,e,f,g)}Ara.X=1;function IL(a,d,e,f,g){var h=b;b+=12;var i=h+4,j=h+8;N(h,d,f);ig(i,e,a+4);ig(j,g,a+8);JL(h,a);xn(i,j);xn(i,h);a=k[i]+k[i+1]+k[i+2]+1.1920928955078125e-7;b=h;return a}IL.X=1;function KL(a,d){var e=a+8;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}KL.X=1;function Bra(a,d,e){return LL(a,d,e)}Bra.X=1;function LL(a,d,e){return e*J(a,d)+J(a+12,d+4)}LL.X=1;function Cra(a,d,e,f){return ML(a,d,e,f)}Cra.X=1;function ML(a,d,e,f){var g=b;b+=34;var h=g+1,i=g+2,j=g+6,l=g+10,m=g+14,n=g+18,p=g+22,r=g+26,s=g+30;k[g]=e;k[h]=f;ig(i,a,d);ig(j,a+12,d+4);ig(l,a+16,d+8);Q(m,i,g);Q(n,i,h);wn(s,j,l);wn(r,s,m);wn(p,r,n);a=k[p]+k[p+1]+k[p+2];b=g;return a}ML.X=1;function NL(a,d){var e=a+16;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}NL.X=1;function OL(a,d){var e=a+12;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}OL.X=1;function PL(a,d,e){return v[c[c[a]+2]](a,d,e)}PL.X=1;function QL(a,d,e,f){return v[c[c[a]+3]](a,d,e,f)}QL.X=1;function RL(a,d,e){v[c[c[a]+4]](a,d,e)}RL.X=1;function SL(a){a=c[a];a+=a<<15^-1;a^=a>>10;a=(a<<3)+a;a^=a>>6;a+=a<<11^-1;return a^a>>16}SL.X=1;function TL(a){return c[a+1]&1}TL.X=1;function UL(a,d){c[a+1]=d&1}UL.X=1;function VL(a,d){var e,f;0==(c[a+(d+46)]|0)?0!=(c[a+(d+27)]&1|0)?e=5:(f=0,e=6):e=5;5==e&&(f=1);return f}VL.X=1;function Dra(a){return a+38}Dra.X=1;function Era(a){return a+42}Era.X=1;function Fra(a){return a+19}Fra.X=1;function Gra(a){return a+23}Gra.X=1;function Hra(a){return a}Hra.X=1;function WL(a,d){k[a+14]=d}WL.X=1;function XL(a,d){k[a+12]=d}XL.X=1;function YL(a){return k[a+14]}YL.X=1;function Ira(a){return a+30}Ira.X=1;function Jra(a){return a+34}Jra.X=1;function ZL(a,d){k[a+13]=d}ZL.X=1;function Kra(a){return a+4}Kra.X=1;function $L(a){return k[a+13]}$L.X=1;function Lra(a){return a+15}Lra.X=1;function aM(a){0!=(a|0)&&xe(a)}aM.X=1;function Mra(a,d){c[a]=d}Mra.X=1;function bM(a){var d=xb(4);c[d]=a;return d}bM.X=1;function Nra(a,d){return cM(a,d)}Nra.X=1;function cM(a,d){return(c[a]|0)==(c[d]|0)}cM.X=1;function Ora(a){return c[a]}Ora.X=1;function Pra(a){return SL(a)}Pra.X=1;function dM(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}dM.X=1;function eM(a,d,e,f){return v[c[c[a]+2]](a,d,e,f)}eM.X=1;function fM(){var a=xb(8);gM(a);return a}fM.X=1;function Qra(a,d){Tk(a,d)}Qra.X=1;function hM(a,d){v[c[c[a]+11]](a,d)}hM.X=1;function Rra(a){return Sk(a)}Rra.X=1;function Sra(a){return a+7}Sra.X=1;function iM(a){return v[c[c[a]+4]](a)}iM.X=1;function jM(a){v[c[c[a]+10]](a)}jM.X=1;function Tra(a){return a+1}Tra.X=1;function kM(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}kM.X=1;function lM(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}lM.X=1;function mM(a,d){v[c[c[a]+8]](a,d,1,-1)}mM.X=1;function nM(a,d,e){v[c[c[a]+8]](a,d,e,-1)}nM.X=1;function oM(a,d,e,f){v[c[c[a]+8]](a,d,e,f)}oM.X=1;function pM(a,d,e){var f=xb(88);qM(f,a,d,e);return f}pM.X=1;function Ura(a,d,e){Jl(a,d,e)}Ura.X=1;function Vra(a){return Vk(a)}Vra.X=1;function rM(a){v[c[c[a]+2]](a)}rM.X=1;function sM(a,d){v[c[c[a]+3]](a,d)}sM.X=1;function tM(a){v[c[c[a]+5]](a)}tM.X=1;function uM(a,d,e,f,g){Rl(a,d,e,f,g,0)}uM.X=1;function Wra(a,d,e,f,g,h){Rl(a,d,e,f,g,h)}Wra.X=1;function Xra(a){return Sl(a)}Xra.X=1;function Yra(a,d,e,f){Xl(a,d,e,f)}Yra.X=1;function Zra(a){return am(a)}Zra.X=1;function $ra(a,d,e,f,g,h){mm(a,d,e,f,g,h)}$ra.X=1;function vM(a,d){bm(a,d&1)}vM.X=1;function wM(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}wM.X=1;function asa(a,d,e,f,g,h,i,j){Dm(a,d,e,f,g,h,i,j)}asa.X=1;function bsa(a,d){ym(a,d)}bsa.X=1;function csa(a){return Am(a)}csa.X=1;function xM(a,d){v[c[c[a]+9]](a,d)}xM.X=1;function yM(a,d){var e=a+38;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}yM.X=1;function dsa(a,d){return VL(a,d)}dsa.X=1;function zM(a,d){var e=a+19;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}zM.X=1;function AM(a,d){var e=a+23;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}AM.X=1;function BM(a,d){var e=a+34;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}BM.X=1;function esa(a,d,e){return CM(a,d,e)}esa.X=1;function DM(a,d){var e=a+42;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}DM.X=1;function EM(a,d){var e=a+8;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}EM.X=1;function FM(){var a=xb(188);GM(a);return a}FM.X=1;function HM(a){var d=xb(188);fsa(d,a);return d}HM.X=1;function IM(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}IM.X=1;function JM(a){0!=(a|0)&&xe(a)}JM.X=1;function KM(a,d){var e=a+15;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}KM.X=1;function LM(a,d){var e=a+30;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}LM.X=1;function gsa(a,d){return MM(a,d)}gsa.X=1;function hsa(a){return a+8}hsa.X=1;function NM(a){return k[a+12]}NM.X=1;function OM(a){$VOID_IS_8=0;a=c[a];a+=a<<15^-1;a^=a>>10;a=(a<<3)+a;a^=a>>6;a+=a<<11^-1;return a^a>>16}OM.X=1;function MM(a,d){return k[a+4+d]>=k[a+d]}MM.X=1;function PM(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3]}PM.X=1;function isa(a,d,e,f,g,h,i,j,l,m){return QM(a,d,e,f,g,h,i,j,l,m)}isa.X=1;function RM(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}RM.X=1;function SM(a,d,e){v[c[c[a]+8]](a,d,e)}SM.X=1;function jsa(a){return Ge(a)}jsa.X=1;function TM(a,d){var e=b;b+=4;0==c[UM]<<24>>24&&Hb(UM);v[c[c[a]+15]](e,a,d);c[VM]=c[e];k[VM]=k[e];c[VM+1]=c[e+1];k[VM+1]=k[e+1];c[VM+2]=c[e+2];k[VM+2]=k[e+2];c[VM+3]=c[e+3];k[VM+3]=k[e+3];b=e;return VM}TM.X=1;function ksa(a,d){Je(a,d)}ksa.X=1;function lsa(a){return Le(a)}lsa.X=1;function WM(a,d,e){return v[c[c[a]+13]](a,d,e)}WM.X=1;function XM(a){return v[c[c[a]+7]](a)}XM.X=1;function YM(a){return v[c[c[a]+19]](a)}YM.X=1;function msa(a){return Ye(a)}msa.X=1;function ZM(a,d){var e=b;b+=4;0==c[$M]<<24>>24&&Hb($M);tf(e,a,d);c[aN]=c[e];k[aN]=k[e];c[aN+1]=c[e+1];k[aN+1]=k[e+1];c[aN+2]=c[e+2];k[aN+2]=k[e+2];c[aN+3]=c[e+3];k[aN+3]=k[e+3];b=e;return aN}ZM.X=1;function nsa(a,d,e,f){df(a,d,e,f)}nsa.X=1;function bN(a){return v[c[c[a]+12]](a)}bN.X=1;function cN(a){return v[c[c[a]+9]](a)}cN.X=1;function osa(a){return a+3}osa.X=1;function dN(a,d){var e=b;b+=4;0==c[eN]<<24>>24&&Hb(eN);kf(e,a,d);c[fN]=c[e];k[fN]=k[e];c[fN+1]=c[e+1];k[fN+1]=k[e+1];c[fN+2]=c[e+2];k[fN+2]=k[e+2];c[fN+3]=c[e+3];k[fN+3]=k[e+3];b=e;return fN}dN.X=1;function psa(a,d){Jf(a,d)}psa.X=1;function gN(a,d){v[c[c[a]+6]](a,d)}gN.X=1;function hN(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}hN.X=1;function iN(a,d){return v[c[c[a]+5]](a,d)}iN.X=1;function qsa(a){return xf(a)}qsa.X=1;function rsa(a){return zf(a)}rsa.X=1;function ssa(a){return Me(a)}ssa.X=1;function tsa(a){return Bf(a)}tsa.X=1;function jN(a){return v[c[c[a]+11]](a)}jN.X=1;function kN(a,d,e){v[c[c[a]+20]](a,d,e)}kN.X=1;function lN(a,d){v[c[c[a]+10]](a,d)}lN.X=1;function usa(a){return Gf(a)}usa.X=1;function mN(a,d){var e=b;b+=4;0==c[nN]<<24>>24&&Hb(nN);v[c[c[a]+16]](e,a,d);c[oN]=c[e];k[oN]=k[e];c[oN+1]=c[e+1];k[oN+1]=k[e+1];c[oN+2]=c[e+2];k[oN+2]=k[e+2];c[oN+3]=c[e+3];k[oN+3]=k[e+3];b=e;return oN}mN.X=1;function vsa(a){return Kf(a)}vsa.X=1;function wsa(a){return Mf(a)}wsa.X=1;function pN(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}pN.X=1;function xsa(a){return a+7}xsa.X=1;function qN(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}qN.X=1;function rN(a){return v[c[c[a]+4]](a)}rN.X=1;function sN(a,d){v[c[c[a]+14]](a,d)}sN.X=1;function tN(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}tN.X=1;function ysa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}ysa.X=1;function zsa(a){return Uf(a)}zsa.X=1;function Asa(a){return Ie(a)}Asa.X=1;function uN(a){0!=(a|0)&&xe(a)}uN.X=1;function Bsa(a,d){return vN(a,d)}Bsa.X=1;function vN(a,d){return(c[a]|0)==(c[d]|0)}vN.X=1;function Csa(a){return OM(a)}Csa.X=1;function wN(a){var d=xb(8);c[d]=a;return d}wN.X=1;function Dsa(a){return c[a]}Dsa.X=1;function xN(a,d){return v[c[c[a]+2]](a,d)}xN.X=1;function yN(a,d,e){v[c[c[a]+8]](a,d,e)}yN.X=1;function Esa(a,d){Je(a,d)}Esa.X=1;function zN(a,d,e){return v[c[c[a]+13]](a,d,e)}zN.X=1;function AN(a){return v[c[c[a]+7]](a)}AN.X=1;function BN(a,d,e,f){v[c[c[a]+15]](a,d,e,f)}BN.X=1;function CN(a){return v[c[c[a]+12]](a)}CN.X=1;function DN(a){return v[c[c[a]+9]](a)}DN.X=1;function Fsa(a){return Ge(a)}Fsa.X=1;function Gsa(a){return Ye(a)}Gsa.X=1;function Hsa(a){return a+12}Hsa.X=1;function EN(a,d){v[c[c[a]+6]](a,d)}EN.X=1;function FN(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}FN.X=1;function GN(a,d){return v[c[c[a]+5]](a,d)}GN.X=1;function Isa(a){return xf(a)}Isa.X=1;function Jsa(a){return zf(a)}Jsa.X=1;function Ksa(a){return Me(a)}Ksa.X=1;function HN(a,d){c[a+4]=d}HN.X=1;function Lsa(a){return Bf(a)}Lsa.X=1;function IN(a){return v[c[c[a]+11]](a)}IN.X=1;function JN(a){return k[a+16]}JN.X=1;function KN(a,d){v[c[c[a]+10]](a,d)}KN.X=1;function Msa(a){return Gf(a)}Msa.X=1;function Nsa(a){return Kf(a)}Nsa.X=1;function LN(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}LN.X=1;function Osa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Osa.X=1;function MN(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}MN.X=1;function NN(a){return v[c[c[a]+4]](a)}NN.X=1;function ON(a,d){v[c[c[a]+14]](a,d)}ON.X=1;function PN(a,d){var e=xb(84);QN(e,a,d);return e}PN.X=1;function Psa(a){return Uf(a)}Psa.X=1;function Qsa(a){return Ie(a)}Qsa.X=1;function RN(a,d){v[c[c[a]+16]](a,d)}RN.X=1;function SN(a,d){v[c[c[a]+15]](a,d)}SN.X=1;function TN(a,d,e){return v[c[c[a]+2]](a,d,e)}TN.X=1;function UN(a,d,e){v[c[c[a]+4]](a,d,e)}UN.X=1;function VN(a){return v[c[c[a]+14]](a)}VN.X=1;function WN(a){return v[c[c[a]+7]](a)}WN.X=1;function XN(a,d,e){return v[c[c[a]+13]](a,d,e)}XN.X=1;function YN(a,d,e){v[c[c[a]+10]](a,d,e)}YN.X=1;function ZN(a,d,e){v[c[c[a]+8]](a,d,e)}ZN.X=1;function $N(a){return v[c[c[a]+9]](a)}$N.X=1;function aO(a,d,e,f){return v[c[c[a]+3]](a,d,e,f)}aO.X=1;function bO(a,d){v[c[c[a]+11]](a,d)}bO.X=1;function cO(a){return v[c[c[a]+5]](a)}cO.X=1;function dO(a,d,e){v[c[c[a]+12]](a,d,e)}dO.X=1;function eO(a,d,e){v[c[c[a]+8]](a,d,e)}eO.X=1;function Rsa(a,d){Je(a,d)}Rsa.X=1;function fO(a,d,e){return v[c[c[a]+13]](a,d,e)}fO.X=1;function gO(a){return v[c[c[a]+7]](a)}gO.X=1;function hO(a){return v[c[c[a]+12]](a)}hO.X=1;function iO(a){return v[c[c[a]+9]](a)}iO.X=1;function Ssa(a){return Ge(a)}Ssa.X=1;function Tsa(a){return Ye(a)}Tsa.X=1;function jO(a,d){v[c[c[a]+6]](a,d)}jO.X=1;function kO(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}kO.X=1;function lO(a,d){return v[c[c[a]+5]](a,d)}lO.X=1;function Usa(a){return xf(a)}Usa.X=1;function Vsa(a){return zf(a)}Vsa.X=1;function Wsa(a){return Me(a)}Wsa.X=1;function Xsa(a){return Bf(a)}Xsa.X=1;function mO(a){return v[c[c[a]+11]](a)}mO.X=1;function nO(a,d){v[c[c[a]+10]](a,d)}nO.X=1;function Ysa(a){return Gf(a)}Ysa.X=1;function Zsa(a){return Kf(a)}Zsa.X=1;function $sa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}$sa.X=1;function oO(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}oO.X=1;function pO(a){return v[c[c[a]+4]](a)}pO.X=1;function qO(a,d){v[c[c[a]+14]](a,d)}qO.X=1;function ata(a){return Uf(a)}ata.X=1;function bta(a){return Ie(a)}bta.X=1;function cta(a){return Ho(a)}cta.X=1;function rO(a){v[c[c[a]+2]](a)}rO.X=1;function sO(a,d,e){v[c[c[a]+7]](a,d,e,-1)}sO.X=1;function tO(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}tO.X=1;function dta(a){return Ip(a)}dta.X=1;function uO(a,d){Hp(a,d&1)}uO.X=1;function eta(a){return a+11}eta.X=1;function fta(a,d){return vO(a,d)}fta.X=1;function gta(a){return a+27}gta.X=1;function hta(a,d,e,f,g,h,i,j){wO(a,d,e,f,g,h,i,j)}hta.X=1;function ita(a){return a+267}ita.X=1;function jta(a){return Lo(a)}jta.X=1;function xO(a,d,e){var e=e&1,f=xb(1304);yO(f,a,d,e&1);return f}xO.X=1;function zO(a,d,e,f,g){var g=g&1,h=xb(1304);AO(h,a,d,e,f,g&1);return h}zO.X=1;function kta(a){return Io(a)}kta.X=1;function lta(a){return Mp(a)}lta.X=1;function BO(a,d){return v[c[c[a]+8]](a,d,-1)}BO.X=1;function mta(a,d){c[a+327]=d&1}mta.X=1;function CO(a,d){return(d<<4)+a+218}CO.X=1;function DO(a){return c[a+327]&1}DO.X=1;function EO(a){return c[a+329]&1}EO.X=1;function FO(a,d){c[a+329]=d&1}FO.X=1;function GO(a){return c[a+4]}GO.X=1;function HO(a,d,e){return v[c[c[a]+8]](a,d,e)}HO.X=1;function IO(a,d){v[c[c[a]+4]](a,d)}IO.X=1;function JO(a,d){v[c[c[a]+5]](a,d)}JO.X=1;function KO(a){v[c[c[a]+11]](a)}KO.X=1;function nta(a,d){LO(a,d)}nta.X=1;function LO(a,d){var e;e=0;for(var f=a+218;;){k[d+e]=k[(e<<4)+f];var g=e+1;e=g;if(3<=(g|0)){break}}}LO.X=1;function MO(a){return v[c[c[a]+9]](a)}MO.X=1;function NO(a,d){var e=b;b+=4;0==c[OO]<<24>>24&&Hb(OO);PO(e,a,d);c[QO]=c[e];k[QO]=k[e];c[QO+1]=c[e+1];k[QO+1]=k[e+1];c[QO+2]=c[e+2];k[QO+2]=k[e+2];c[QO+3]=c[e+3];k[QO+3]=k[e+3];b=e;return QO}NO.X=1;function ota(a){return Lp(a)}ota.X=1;function pta(a){return Ap(a)}pta.X=1;function qta(a,d){Bp(a,d)}qta.X=1;function rta(a,d){RO(a,d)}rta.X=1;function RO(a,d){var e=a+173;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3]}RO.X=1;function sta(a){return Cp(a)}sta.X=1;function SO(a,d){Ko(a,d&1)}SO.X=1;function TO(a,d){mta(a,d&1)}TO.X=1;function tta(a){return Fp(a)}tta.X=1;function UO(a){return c[a+4]}UO.X=1;function uta(a,d){return CO(a,d)}uta.X=1;function vta(a,d){VO(a,d)}vta.X=1;function WO(a,d,e){return v[c[c[a]+10]](a,d,e)}WO.X=1;function wta(a,d){XO(a,d)}wta.X=1;function XO(a,d){var e=a+169;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}XO.X=1;function xta(a){return Dp(a)}xta.X=1;function yta(a,d){YO(a,d)}yta.X=1;function YO(a,d){var e=a+169;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3]}YO.X=1;function zta(a,d){Jp(a,d)}zta.X=1;function Ata(a,d){return ZO(a,d)}Ata.X=1;function ZO(a,d){return 3>(d|0)?MM(a+169,d):Sw((d-3<<4)+a+218)}ZO.X=1;function Bta(a){return DO(a)}Bta.X=1;function Cta(a,d){Kp(a,d)}Cta.X=1;function Dta(a){return a+283}Dta.X=1;function Eta(a){$O(a)}Eta.X=1;function Fta(a,d,e){aP(a,d,e)}Fta.X=1;function Gta(a,d){Ep(a,d)}Gta.X=1;function Hta(a,d){zp(a,d)}Hta.X=1;function bP(a,d,e,f,g,h,i,j,l,m,n,p){return cP(a,d,e,f,g,h,i,j,l,m,n,p,0)}bP.X=1;function Ita(a,d,e,f,g,h,i,j,l,m,n,p,r){return cP(a,d,e,f,g,h,i,j,l,m,n,p,r)}Ita.X=1;function Jta(a){return Op(a)}Jta.X=1;function Kta(a,d,e,f){dP(a,d,e,f)}Kta.X=1;function dP(a,d,e,f){3>(d|0)?(k[a+169+d]=e,k[a+173+d]=f):(e=eP(e),f=eP(f),k[(d-3<<4)+a+218]=e,k[(d-3<<4)+a+219]=f)}dP.X=1;function Lta(a){return a+169}Lta.X=1;function fP(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}fP.X=1;function gP(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}gP.X=1;function Mta(a,d){return hP(a,d)}Mta.X=1;function Nta(){}Nta.X=1;function Ota(a,d){iP(a,d)}Ota.X=1;function iP(a,d){var e;e=0;for(var f=a+218;;){k[d+e]=k[(e<<4)+f+1];var g=e+1;e=g;if(3<=(g|0)){break}}}iP.X=1;function Pta(a,d){jP(a,d)}Pta.X=1;function jP(a,d){var e;e=0;for(var f=a+218;;){k[(e<<4)+f]=eP(k[d+e]);var g=e+1;e=g;if(3<=(g|0)){break}}}jP.X=1;function Qta(a){return Np(a)}Qta.X=1;function kP(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}kP.X=1;function Rta(a){return Gp(a)}Rta.X=1;function Sta(a,d,e){lP(a,d,e)}Sta.X=1;function Tta(a,d){mP(a,d)}Tta.X=1;function mP(a,d){var e=a+173;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}mP.X=1;function Uta(a,d){nP(a,d)}Uta.X=1;function nP(a,d){var e;e=0;for(var f=a+218;;){k[(e<<4)+f+1]=eP(k[d+e]);var g=e+1;e=g;if(3<=(g|0)){break}}}nP.X=1;function Vta(a,d,e){oP(a,d,e)}Vta.X=1;function Wta(a,d){Pp(a,d)}Wta.X=1;function Xta(a,d){return pP(a,d)}Xta.X=1;function qP(a){return k[a+26]}qP.X=1;function rP(a){return c[a+29]&1}rP.X=1;function Yta(a,d){k[a]=d}Yta.X=1;function sP(a,d){c[a+29]=d&1}sP.X=1;function tP(a,d){k[a+28]=d}tP.X=1;function uP(a,d){k[a+24]=d}uP.X=1;function vP(a){return k[a+27]}vP.X=1;function wP(a,d){k[a+25]=d}wP.X=1;function xP(a){return k[a+23]}xP.X=1;function yP(a){return k[a+24]}yP.X=1;function Zta(a){return k[a]}Zta.X=1;function zP(a,d){k[a+23]=d}zP.X=1;function AP(a,d){k[a+26]=d}AP.X=1;function BP(a){return k[a+33]}BP.X=1;function CP(a){return k[a+32]}CP.X=1;function DP(a,d){c[a+18]=d}DP.X=1;function EP(a,d){k[a+32]=d}EP.X=1;function FP(a,d){k[a+31]=d}FP.X=1;function GP(a){return c[a+18]}GP.X=1;function HP(a,d){c[a+1]=d}HP.X=1;function IP(a){return k[a+25]}IP.X=1;function JP(a,d){k[a+27]=d}JP.X=1;function $ta(a){return a+2}$ta.X=1;function aua(a){return a+19}aua.X=1;function KP(a){return c[a+1]}KP.X=1;function LP(a){return k[a+30]}LP.X=1;function MP(a){return k[a+31]}MP.X=1;function bua(a,d){NP(a,d)}bua.X=1;function NP(a,d){cua(a,d);pe(a+12,d+12,d+13,d+14)}NP.X=1;function dua(a,d){Wb(a,d)}dua.X=1;function eua(a){return a+12}eua.X=1;function fua(a,d){OP(a,d)}fua.X=1;function OP(a,d){Nb(a,d);Ob(a+12,d+12)}OP.X=1;function gua(a,d){PP(a,d)}gua.X=1;function PP(a,d){Pc(a,d);Tc(a+12,d+12)}PP.X=1;function QP(a){var d=b;b+=4;0==c[RP]<<24>>24&&Hb(RP);dc(a,d);c[SP]=c[d];k[SP]=k[d];c[SP+1]=c[d+1];k[SP+1]=k[d+1];c[SP+2]=c[d+2];k[SP+2]=k[d+2];c[SP+3]=c[d+3];k[SP+3]=k[d+3];b=d;return SP}QP.X=1;function TP(a){var d=b;b+=16;0==c[UP]<<24>>24&&Hb(UP);uw(d,a);xi(VP,d);b=d;return VP}TP.X=1;function uw(a,d){var e=b;b+=20;var f=e+12,g=e+16;ue(e,d);WP(g,d+12);Bo(f,e,g);Tz(a,e,f);b=e}uw.X=1;function XP(){Pz();return Rz}XP.X=1;function YP(a,d){var e=b;b+=16;0==c[ZP]<<24>>24&&Hb(ZP);$P(e,a,d);xi(aQ,e);b=e;return aQ}YP.X=1;function $P(a,d,e){var f=b;b+=20;var g=f+4,h=f+16;N(f,e+12,d+12);bc(g,d,e);rn(h,f,d);Tz(a,g,h);b=f}$P.X=1;function bQ(a,d){var e=b;b+=4;0==c[cQ]<<24>>24&&Hb(cQ);vw(e,a,d);c[dQ]=c[e];k[dQ]=k[e];c[dQ+1]=c[e+1];k[dQ+1]=k[e+1];c[dQ+2]=c[e+2];k[dQ+2]=k[e+2];c[dQ+3]=c[e+3];k[dQ+3]=k[e+3];b=e;return dQ}bQ.X=1;function hua(a,d){zb(a,d)}hua.X=1;function iua(a){eQ(a)}iua.X=1;function eQ(a){var d=b;b+=3;var e=d+1,f=d+2;qd(a);k[d]=0;k[e]=0;k[f]=0;pe(a+12,d,e,f);b=d}eQ.X=1;function jua(a,d){return xi(a,d)}jua.X=1;function kua(a,d){fQ(a,d)}kua.X=1;function fQ(a,d){lua(a,d);k[d+12]=k[a+12];k[d+13]=k[a+12+1];k[d+14]=k[a+12+2];k[d+15]=1}fQ.X=1;function mua(a,d){gQ(a,d)}mua.X=1;function gQ(a,d){Lb(a,d);Mb(a+12,d+12)}gQ.X=1;function nua(a,d){hQ(a,d)}nua.X=1;function hQ(a,d){qe(a,d);re(a+12,d+12)}hQ.X=1;function iQ(a,d){var e=b;b+=4;0==c[jQ]<<24>>24&&Hb(jQ);kQ(e,a,d);c[lQ]=c[e];k[lQ]=k[e];c[lQ+1]=c[e+1];k[lQ+1]=k[e+1];c[lQ+2]=c[e+2];k[lQ+2]=k[e+2];c[lQ+3]=c[e+3];k[lQ+3]=k[e+3];b=e;return lQ}iQ.X=1;function kQ(a,d,e){var f=b;b+=16;var g=f+4;N(f,e,d+12);ue(g,d);Bo(a,g,f);b=f}kQ.X=1;function oua(a,d){mQ(a,d)}oua.X=1;function mQ(a,d){lc(a,d);mc(a+12,d+12)}mQ.X=1;function pua(a,d,e){nQ(a,d,e)}pua.X=1;function nQ(a,d,e){var f=b;b+=16;var g=f+12;ww(f,d,e);Wb(a,f);vw(g,d,e+12);a+=12;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];b=f}nQ.X=1;function oQ(a){0!=(a|0)&&xe(a)}oQ.X=1;function qua(a){return a}qua.X=1;function rua(a,d){pQ(a,d)}rua.X=1;function pQ(a,d){var e=a+12;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}pQ.X=1;function qQ(){return xb(64)}qQ.X=1;function rQ(a){var d=xb(64);sQ(d,a);return d}rQ.X=1;function tQ(a,d){var e=xb(64);uQ(e,a,d);return e}tQ.X=1;function vQ(a,d,e){var f=b;b+=7;var g=f+4,h=f+5,i=f+6,j=xb(136);k[g]=0;k[h]=0;k[i]=0;H(f,g,h,i);wQ(j,a,d,e,f);b=f;return j}vQ.X=1;function xQ(a,d,e,f){var g=xb(136);wQ(g,a,d,e,f);return g}xQ.X=1;function yQ(a,d){xi(a+2,d)}yQ.X=1;function zQ(a,d){var e=a+19;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}zQ.X=1;function AQ(a){0!=(a|0)&&xe(a)}AQ.X=1;function BQ(a,d){k[a+30]=d}BQ.X=1;function CQ(a){return k[a+28]}CQ.X=1;function DQ(a,d){k[a+33]=d}DQ.X=1;function EQ(a){return k[a+32]}EQ.X=1;function sua(a){return a}sua.X=1;function tua(a){return a+16}tua.X=1;function FQ(a,d){c[a+33]=d}FQ.X=1;function GQ(a){return c[a+33]}GQ.X=1;function HQ(a,d){k[a+32]=d}HQ.X=1;function IQ(a){return c[a+16]&1}IQ.X=1;function JQ(a){return c[a+12]}JQ.X=1;function KQ(a,d){c[a+14]=d}KQ.X=1;function LQ(a){return c[a+15]&1}LQ.X=1;function MQ(a){return c[a+14]}MQ.X=1;function NQ(a){return c[a+13]}NQ.X=1;function OQ(a,d){xi(a+16,d)}OQ.X=1;function PQ(){var a=xb(136);QQ(a);return a}PQ.X=1;function uua(a,d){xi(a,d)}uua.X=1;function RQ(a){0!=(a|0)&&xe(a)}RQ.X=1;function SQ(a,d,e){v[c[c[a]+8]](a,d,e)}SQ.X=1;function vua(a){return a+8}vua.X=1;function TQ(a){return Ue(a,16)}TQ.X=1;function UQ(a,d){v[c[c[a]+19]](a,d)}UQ.X=1;function VQ(a,d,e){return v[c[c[a]+13]](a,d,e)}VQ.X=1;function WQ(a,d){var e=b;b+=4;0==c[XQ]<<24>>24&&Hb(XQ);v[c[c[a]+16]](e,a,d);c[YQ]=c[e];k[YQ]=k[e];c[YQ+1]=c[e+1];k[YQ+1]=k[e+1];c[YQ+2]=c[e+2];k[YQ+2]=k[e+2];c[YQ+3]=c[e+3];k[YQ+3]=k[e+3];b=e;return YQ}WQ.X=1;function ZQ(a){return v[c[c[a]+7]](a)}ZQ.X=1;function wua(a){return IQ(a)}wua.X=1;function xua(a){return JQ(a)}xua.X=1;function $Q(a,d,e,f){v[c[c[a]+15]](a,d,e,f)}$Q.X=1;function yua(a,d,e){aR(a,d,e)}yua.X=1;function bR(a){return v[c[c[a]+12]](a)}bR.X=1;function zua(a,d){Je(a,d)}zua.X=1;function Aua(a,d,e,f){cR(a,d,e,f)}Aua.X=1;function Bua(a,d){KQ(a,d)}Bua.X=1;function Cua(a){return LQ(a)}Cua.X=1;function dR(a){return v[c[c[a]+9]](a)}dR.X=1;function Dua(a){return MQ(a)}Dua.X=1;function Eua(a){return Ge(a)}Eua.X=1;function Fua(a){return Ye(a)}Fua.X=1;function eR(a,d){v[c[c[a]+6]](a,d)}eR.X=1;function fR(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}fR.X=1;function Gua(a){return NQ(a)}Gua.X=1;function Hua(a){return a+4}Hua.X=1;function gR(a,d){return v[c[c[a]+5]](a,d)}gR.X=1;function Iua(a){return xf(a)}Iua.X=1;function Jua(a){return zf(a)}Jua.X=1;function Kua(a){hR(a)}Kua.X=1;function Lua(a){return Uf(a)}Lua.X=1;function Mua(a){return Me(a)}Mua.X=1;function Nua(a){return Bf(a)}Nua.X=1;function iR(a){return v[c[c[a]+11]](a)}iR.X=1;function Oua(a){jR(a)}Oua.X=1;function kR(a,d){v[c[c[a]+10]](a,d)}kR.X=1;function Pua(a,d,e){lR(a,d,e)}Pua.X=1;function Qua(a,d,e,f,g,h){mR(a,d,e,f,g,h)}Qua.X=1;function nR(a,d){var e=b;b+=4;0==c[oR]<<24>>24&&Hb(oR);v[c[c[a]+17]](e,a,d);c[pR]=c[e];k[pR]=k[e];c[pR+1]=c[e+1];k[pR+1]=k[e+1];c[pR+2]=c[e+2];k[pR+2]=k[e+2];c[pR+3]=c[e+3];k[pR+3]=k[e+3];b=e;return pR}nR.X=1;function Rua(a){return Kf(a)}Rua.X=1;function qR(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}qR.X=1;function Sua(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Sua.X=1;function rR(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}rR.X=1;function sR(a){return v[c[c[a]+4]](a)}sR.X=1;function tR(a,d){v[c[c[a]+14]](a,d)}tR.X=1;function Tua(a){return Ie(a)}Tua.X=1;function uR(a,d){v[c[c[a]+18]](a,d)}uR.X=1;function vR(a,d){var e=b;b+=7;var f=e+4,g=e+5,h=e+6;k[f]=1;k[g]=1;k[h]=1;H(e,f,g,h);wR(a,d,e);b=e}vR.X=1;function xR(a,d){var e;e=d&1;var f=TQ(76);yR(f,a,e&1,1);return f}xR.X=1;function zR(a,d,e){var d=d&1,e=e&1,f=TQ(76);yR(f,a,d&1,e&1);return f}zR.X=1;function AR(a,d,e,f){var d=d&1,g=TQ(76);BR(g,a,d&1,e,f,1);return g}AR.X=1;function CR(a,d,e,f,g){var d=d&1,g=g&1,h=TQ(76);BR(h,a,d&1,e,f,g&1);return h}CR.X=1;function DR(a){return c[a+8]}DR.X=1;function ER(a){return c[a+7]}ER.X=1;function FR(a){return k[a+273]}FR.X=1;function GR(a){return k[a+280]}GR.X=1;function HR(a){return k[a+272]}HR.X=1;function IR(a,d){k[a+63]=d}IR.X=1;function JR(a){return c[a+275]&1}JR.X=1;function Uua(a,d){c[a+12]=d&1}Uua.X=1;function KR(a,d){k[a+58]=d}KR.X=1;function LR(a,d){k[a+56]=d}LR.X=1;function MR(a){return c[a+74]&1}MR.X=1;function NR(a){return c[a+12]&1}NR.X=1;function OR(a){return k[a+281]}OR.X=1;function PR(a,d){k[a+55]=d}PR.X=1;function QR(a){return k[a+277]}QR.X=1;function RR(a,d){k[a+68]=d}RR.X=1;function SR(a){return c[a+75]&1}SR.X=1;function Vua(a,d){c[a+279]=d&1}Vua.X=1;function TR(a){return k[a+271]}TR.X=1;function UR(a){return c[a+4]}UR.X=1;function VR(a,d){k[a+52]=d}VR.X=1;function WR(a){return k[a+49]}WR.X=1;function XR(a){return k[a+63]}XR.X=1;function YR(a){return k[a+66]}YR.X=1;function ZR(a,d){k[a+46]=d}ZR.X=1;function $R(a){return k[a+51]}$R.X=1;function aS(a,d){k[a+59]=d}aS.X=1;function bS(a,d){k[a+276]=d}bS.X=1;function cS(a){return k[a+47]}cS.X=1;function dS(a,d){k[a+277]=d}dS.X=1;function eS(a){return k[a+48]}eS.X=1;function fS(a,d){k[a+50]=d}fS.X=1;function Wua(a,d,e){wR(a,d,e)}Wua.X=1;function Xua(a){return Gf(a)}Xua.X=1;function gS(a,d,e){return v[c[c[a]+2]](a,d,e)}gS.X=1;function hS(a,d){v[c[c[a]+4]](a,d)}hS.X=1;function iS(a,d,e,f,g){return v[c[c[a]+3]](a,d,e,f,g)}iS.X=1;function jS(a,d,e,f,g){v[c[c[a]+2]](a,d,e,f,g)}jS.X=1;function Yua(a){return DR(a)}Yua.X=1;function Zua(a){return ER(a)}Zua.X=1;function $ua(a){return FR(a)}$ua.X=1;function kS(a){v[c[c[a]+2]](a)}kS.X=1;function ava(a){return GR(a)}ava.X=1;function bva(a){return HR(a)}bva.X=1;function cva(a,d){IR(a,d)}cva.X=1;function lS(a,d){return v[c[c[a]+8]](a,d,-1)}lS.X=1;function mS(a,d,e){return v[c[c[a]+8]](a,d,e)}mS.X=1;function nS(a,d){v[c[c[a]+4]](a,d)}nS.X=1;function oS(a,d){v[c[c[a]+5]](a,d)}oS.X=1;function dva(a){return Ap(a)}dva.X=1;function eva(a){return JR(a)}eva.X=1;function pS(a,d){Uua(a,d&1)}pS.X=1;function fva(a,d){KR(a,d)}fva.X=1;function qS(a){var d=b;b+=4;0==c[rS]<<24>>24&&Hb(rS);gva(d,a);c[sS]=c[d];k[sS]=k[d];c[sS+1]=c[d+1];k[sS+1]=k[d+1];c[sS+2]=c[d+2];k[sS+2]=k[d+2];c[sS+3]=c[d+3];k[sS+3]=k[d+3];b=d;return sS}qS.X=1;function tS(a){var d=b;b+=4;0==c[uS]<<24>>24&&Hb(uS);hva(d,a);c[vS]=c[d];k[vS]=k[d];c[vS+1]=c[d+1];k[vS+1]=k[d+1];c[vS+2]=c[d+2];k[vS+2]=k[d+2];c[vS+3]=c[d+3];k[vS+3]=k[d+3];b=d;return vS}tS.X=1;function iva(a,d){LR(a,d)}iva.X=1;function jva(a){return MR(a)}jva.X=1;function kva(a){return NR(a)}kva.X=1;function lva(a){return OR(a)}lva.X=1;function mva(a,d){PR(a,d)}mva.X=1;function wS(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}wS.X=1;function nva(a){return Fp(a)}nva.X=1;function ova(a){return QR(a)}ova.X=1;function xS(a){return c[a+4]}xS.X=1;function pva(a,d){RR(a,d)}pva.X=1;function qva(a){return SR(a)}qva.X=1;function yS(a,d){Vua(a,d&1)}yS.X=1;function zS(a,d){Ko(a,d&1)}zS.X=1;function rva(a){return TR(a)}rva.X=1;function sva(a){return a+223}sva.X=1;function tva(a){return a+207}tva.X=1;function uva(a){AS(a)}uva.X=1;function vva(a,d){zp(a,d)}vva.X=1;function wva(a,d){VR(a,d)}wva.X=1;function xva(a){return WR(a)}xva.X=1;function yva(a,d){BS(a,d)}yva.X=1;function BS(a,d){k[a+49]=eP(d)}BS.X=1;function zva(a){return XR(a)}zva.X=1;function Ava(a){return YR(a)}Ava.X=1;function Bva(a,d){ZR(a,d)}Bva.X=1;function Cva(a){return $R(a)}Cva.X=1;function Dva(a,d){CS(0,d)}Dva.X=1;function Eva(a,d){aS(a,d)}Eva.X=1;function Fva(a){return Ip(a)}Fva.X=1;function Gva(a,d){bS(a,d)}Gva.X=1;function Hva(a){return cS(a)}Hva.X=1;function Iva(a,d){dS(a,d)}Iva.X=1;function Jva(a){return eS(a)}Jva.X=1;function Kva(a){return Mp(a)}Kva.X=1;function Lva(a,d){fS(a,d)}Lva.X=1;function Mva(a,d){Pp(a,d)}Mva.X=1;function Nva(a,d,e,f,g,h,i,j){DS(a,d,e,f,g,h,i,j)}Nva.X=1;function ES(a,d){c[a+4]=d}ES.X=1;function FS(a){return k[a+56]}FS.X=1;function GS(a){return k[a+59]}GS.X=1;function HS(a){return k[a+70]}HS.X=1;function IS(a,d){k[a+66]=d}IS.X=1;function JS(a,d){k[a+62]=d}JS.X=1;function KS(a){return k[a+52]}KS.X=1;function LS(a){return k[a+58]}LS.X=1;function Ova(a,d){c[a+275]=d&1}Ova.X=1;function MS(a){return k[a+60]}MS.X=1;function NS(a){return k[a+55]}NS.X=1;function OS(a){return k[a+64]}OS.X=1;function PS(a,d){k[a+67]=d}PS.X=1;function QS(a,d){k[a+51]=d}QS.X=1;function RS(a,d){k[a+64]=d}RS.X=1;function SS(a,d){k[a+54]=d}SS.X=1;function TS(a,d){k[a+47]=d}TS.X=1;function US(a,d){k[a+280]=d}US.X=1;function VS(a){return k[a+54]}VS.X=1;function WS(a,d){k[a+281]=d}WS.X=1;function XS(a){return c[a+279]&1}XS.X=1;function YS(a){return k[a+72]}YS.X=1;function ZS(a){return k[a+67]}ZS.X=1;function $S(a){return k[a+276]}$S.X=1;function aT(a){return k[a+46]}aT.X=1;function bT(a,d){k[a+72]=d}bT.X=1;function cT(a,d){k[a+71]=d}cT.X=1;function dT(a){return k[a+71]}dT.X=1;function eT(a){return k[a+68]}eT.X=1;function fT(a){return k[a+62]}fT.X=1;function gT(a,d){k[a+70]=d}gT.X=1;function hT(a,d){k[a+60]=d}hT.X=1;function iT(a){return k[a+50]}iT.X=1;function Pva(a){return a+13}Pva.X=1;function Qva(a){return a+29}Qva.X=1;function Rva(a){return FS(a)}Rva.X=1;function Sva(a){return GS(a)}Sva.X=1;function Tva(a){return HS(a)}Tva.X=1;function Uva(a,d){IS(a,d)}Uva.X=1;function Vva(a,d){JS(a,d)}Vva.X=1;function Wva(a){return KS(a)}Wva.X=1;function Xva(a){return Dp(a)}Xva.X=1;function Yva(a){return Gp(a)}Yva.X=1;function Zva(a){return LS(a)}Zva.X=1;function jT(a,d){Hp(a,d&1)}jT.X=1;function kT(a,d){Ova(a,d&1)}kT.X=1;function $va(a,d){Jp(a,d)}$va.X=1;function awa(a,d,e){lT(a,d,e)}awa.X=1;function bwa(a){return mT(a)}bwa.X=1;function mT(a){return k[a+259]}mT.X=1;function nT(a,d,e){return v[c[c[a]+10]](a,d,e)}nT.X=1;function cwa(a){return MS(a)}cwa.X=1;function dwa(a){return NS(a)}dwa.X=1;function oT(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}oT.X=1;function ewa(a){return Op(a)}ewa.X=1;function pT(a,d,e){v[c[c[a]+7]](a,d,e,-1)}pT.X=1;function qT(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}qT.X=1;function fwa(a){return OS(a)}fwa.X=1;function gwa(a,d){PS(a,d)}gwa.X=1;function hwa(a,d){QS(a,d)}hwa.X=1;function iwa(a,d){RS(a,d)}iwa.X=1;function rT(a,d,e){var e=e&1,f=xb(1120);sT(f,a,d,e&1);return f}rT.X=1;function tT(a,d,e,f,g){var g=g&1,h=xb(1120);uT(h,a,d,e,f,g&1);return h}tT.X=1;function jwa(a){return Lo(a)}jwa.X=1;function kwa(a,d){SS(a,d)}kwa.X=1;function lwa(a,d){TS(a,d)}lwa.X=1;function vT(a){return v[c[c[a]+9]](a)}vT.X=1;function mwa(a,d){US(a,d)}mwa.X=1;function nwa(a){return VS(a)}nwa.X=1;function owa(a,d){WS(a,d)}owa.X=1;function pwa(a,d){wT(a,d)}pwa.X=1;function wT(a,d){k[a+48]=eP(d)}wT.X=1;function qwa(a,d){Bp(a,d)}qwa.X=1;function rwa(a){return Cp(a)}rwa.X=1;function swa(a){return XS(a)}swa.X=1;function twa(a){return YS(a)}twa.X=1;function uwa(a,d){Ep(a,d)}uwa.X=1;function vwa(a){return ZS(a)}vwa.X=1;function wwa(a){return $S(a)}wwa.X=1;function xwa(a){xT(a)}xwa.X=1;function ywa(a){return aT(a)}ywa.X=1;function zwa(a,d){bT(a,d)}zwa.X=1;function Awa(a){return Np(a)}Awa.X=1;function Bwa(a,d){cT(a,d)}Bwa.X=1;function Cwa(a){return dT(a)}Cwa.X=1;function Dwa(a,d){Kp(a,d)}Dwa.X=1;function Ewa(a){return eT(a)}Ewa.X=1;function Fwa(a){return Lp(a)}Fwa.X=1;function Gwa(a){return fT(a)}Gwa.X=1;function yT(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}yT.X=1;function Hwa(a,d){gT(a,d)}Hwa.X=1;function Iwa(a,d){hT(a,d)}Iwa.X=1;function Jwa(a,d,e){zT(a,d,e)}Jwa.X=1;function zT(a,d,e){xi(a+13,d);xi(a+29,e);lT(a,c[a+7]+1,c[a+8]+1);v[c[c[a]+2]](a)}zT.X=1;function Kwa(a){return iT(a)}Kwa.X=1;function Lwa(a){return AT(a)}Lwa.X=1;function AT(a){return c[a+45]&1}AT.X=1;function BT(a,d){k[a+1]=d}BT.X=1;function CT(a,d){k[a+3]=d}CT.X=1;function DT(a){return k[a+3]}DT.X=1;function Mwa(a,d){k[a]=d}Mwa.X=1;function ET(a){return k[a+4]}ET.X=1;function FT(a){return k[a+2]}FT.X=1;function Nwa(a){return k[a]}Nwa.X=1;function GT(a){return k[a+1]}GT.X=1;function HT(a,d){k[a+2]=d}HT.X=1;function IT(a,d){k[a+4]=d}IT.X=1;function JT(a,d){k[a+5]=d}JT.X=1;function KT(a){return k[a+5]}KT.X=1;function LT(a,d){c[a+4]=d}LT.X=1;function MT(a){return c[a+4]}MT.X=1;function NT(a){return k[a+34]}NT.X=1;function OT(a){return k[a+35]}OT.X=1;function PT(a,d){k[a+28]=d}PT.X=1;function QT(a,d){k[a+34]=d}QT.X=1;function RT(a){return k[a+21]}RT.X=1;function ST(a){return c[a+23]}ST.X=1;function TT(a){return c[a+24]}TT.X=1;function Owa(a){return a+16}Owa.X=1;function UT(a,d){k[a+21]=d}UT.X=1;function VT(a){return c[a+26]}VT.X=1;function WT(a){return c[a+25]}WT.X=1;function XT(a,d){c[a+27]=d}XT.X=1;function YT(a,d){k[a+35]=d}YT.X=1;function ZT(a){return k[a+28]}ZT.X=1;function $T(a){return c[a+27]}$T.X=1;function aU(a){return k[a+20]}aU.X=1;function bU(a){return c[a+36]}bU.X=1;function cU(a,d){c[a+23]=d}cU.X=1;function dU(a,d){c[a+24]=d}dU.X=1;function eU(a,d){k[a+20]=d}eU.X=1;function fU(a){return k[a+30]}fU.X=1;function gU(a){return k[a+31]}gU.X=1;function hU(a,d){c[a+29]=d&1}hU.X=1;function Fk(a){return c[a+36]}Fk.X=1;function iU(a,d){c[a+25]=d}iU.X=1;function jU(){var a=xb(24);Pwa(a);return a}jU.X=1;function kU(a){0!=(a|0)&&xe(a)}kU.X=1;function Qwa(a){return Ho(a)}Qwa.X=1;function lU(a){v[c[c[a]+2]](a)}lU.X=1;function Rwa(a){return Io(a)}Rwa.X=1;function mU(a,d,e){return v[c[c[a]+10]](a,d,e)}mU.X=1;function nU(a,d){Ko(a,d&1)}nU.X=1;function Swa(a){return a+11}Swa.X=1;function Twa(a){return Lo(a)}Twa.X=1;function oU(a,d,e){v[c[c[a]+7]](a,d,e,-1)}oU.X=1;function pU(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}pU.X=1;function qU(a,d){return v[c[c[a]+8]](a,d,-1)}qU.X=1;function rU(a,d,e){return v[c[c[a]+8]](a,d,e)}rU.X=1;function sU(a,d){v[c[c[a]+4]](a,d)}sU.X=1;function tU(a,d){v[c[c[a]+5]](a,d)}tU.X=1;function Uwa(a,d){zp(a,d)}Uwa.X=1;function uU(a){return v[c[c[a]+9]](a)}uU.X=1;function Vwa(a){return Ap(a)}Vwa.X=1;function Wwa(a,d){Bp(a,d)}Wwa.X=1;function Xwa(a,d){vU(a,d)}Xwa.X=1;function Ywa(a){return Cp(a)}Ywa.X=1;function Zwa(a){return Dp(a)}Zwa.X=1;function $wa(a,d){Ep(a,d)}$wa.X=1;function axa(a){return Fp(a)}axa.X=1;function wU(a){return c[a+4]}wU.X=1;function bxa(a){return Gp(a)}bxa.X=1;function xU(a,d){Hp(a,d&1)}xU.X=1;function cxa(a){return Ip(a)}cxa.X=1;function dxa(a,d){Jp(a,d)}dxa.X=1;function exa(a,d){Kp(a,d)}exa.X=1;function fxa(a){return Lp(a)}fxa.X=1;function yU(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}yU.X=1;function zU(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}zU.X=1;function gxa(a){return Mp(a)}gxa.X=1;function hxa(a){return Np(a)}hxa.X=1;function AU(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}AU.X=1;function ixa(a){return Op(a)}ixa.X=1;function jxa(a,d){Pp(a,d)}jxa.X=1;function BU(){var a=xb(276);CU(a);return a}BU.X=1;function DU(a,d,e,f){var g=xb(276);EU(g,a,d,e,f);return g}DU.X=1;function FU(a,d){var e=a+37;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}FU.X=1;function kxa(a){return aU(a)}kxa.X=1;function lxa(a){return a+8}lxa.X=1;function mxa(a){return a+12}mxa.X=1;function GU(a,d){var e=a+12;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}GU.X=1;function nxa(a,d){eU(a,d)}nxa.X=1;function HU(a,d){var e=a+8;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}HU.X=1;function IU(a){0!=(a|0)&&xe(a)}IU.X=1;function oxa(a){return Fk(a)}oxa.X=1;function JU(a){return k[a+32]}JU.X=1;function KU(a){return k[a+33]}KU.X=1;function LU(a,d){c[a+26]=d}LU.X=1;function pxa(a){return a+37}pxa.X=1;function MU(a,d){k[a+22]=d}MU.X=1;function qxa(a){return a+12}qxa.X=1;function rxa(a){return a+41}rxa.X=1;function sxa(a){return a+8}sxa.X=1;function NU(a,d){k[a+30]=d}NU.X=1;function OU(a,d){k[a+31]=d}OU.X=1;function PU(a){return c[a+29]&1}PU.X=1;function QU(a){return k[a+22]}QU.X=1;function RU(a,d){k[a+32]=d}RU.X=1;function SU(a,d){k[a+33]=d}SU.X=1;function txa(a){return a+4}txa.X=1;function uxa(a){return a}uxa.X=1;function TU(a,d){k[a+20]=d}TU.X=1;function UU(a){return k[a+20]}UU.X=1;function VU(a){return k[a+28]}VU.X=1;function WU(a,d){c[a+36]=d}WU.X=1;function XU(a,d){c[a+4]=d}XU.X=1;function vxa(a){return c[a+4]}vxa.X=1;function wxa(a,d){c[a+85]=d&1}wxa.X=1;function xxa(a){return a+86}xxa.X=1;function yxa(a,d){var e=a+16;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}yxa.X=1;function zxa(a,d){var e=a+41;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}zxa.X=1;function Axa(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Axa.X=1;function Bxa(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3]}Bxa.X=1;function Cxa(a){return VU(a)}Cxa.X=1;function Dxa(a,d,e,f,g,h,i,j,l){v[c[c[a]+4]](a,d,e,f,g,h,i,j,l,0)}Dxa.X=1;function Exa(a,d,e,f,g,h,i,j,l,m){v[c[c[a]+4]](a,d,e,f,g,h,i,j,l,m)}Exa.X=1;function Fxa(a,d){v[c[c[a]+9]](a,d)}Fxa.X=1;function Gxa(a,d,e){vy(a,d,e)}Gxa.X=1;function Hxa(a,d,e){return v[c[c[a]+14]](a,d,e)}Hxa.X=1;function Ixa(a,d){v[c[c[a]+8]](a,d)}Ixa.X=1;function Jxa(a){return v[c[c[a]+13]](a)}Jxa.X=1;function Kxa(a,d){Iy(a,d)}Kxa.X=1;function Lxa(a){return a+1}Lxa.X=1;function Mxa(a,d,e){v[c[c[a]+11]](a,d,e)}Mxa.X=1;function Nxa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}Nxa.X=1;function Oxa(a,d,e){v[c[c[a]+12]](a,d,e)}Oxa.X=1;function Pxa(a){return v[c[c[a]+7]](a)}Pxa.X=1;function Qxa(a,d,e,f,g,h,i,j,l){v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,0)}Qxa.X=1;function Rxa(a,d,e,f,g,h,i,j,l,m){v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,m)}Rxa.X=1;function Sxa(a){return v[c[c[a]+10]](a)}Sxa.X=1;function Txa(a,d){v[c[c[a]+5]](a,d)}Txa.X=1;function Uxa(a,d){v[c[c[a]+6]](a,d)}Uxa.X=1;function Vxa(a){return Ho(a)}Vxa.X=1;function Wxa(a,d,e,f){YU(a,d,e,f)}Wxa.X=1;function Xxa(a,d,e){v[c[c[a]+7]](a,d,e,-1)}Xxa.X=1;function Yxa(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}Yxa.X=1;function Zxa(a){return Ip(a)}Zxa.X=1;function $xa(a,d){Hp(a,d&1)}$xa.X=1;function aya(a,d){Bp(a,d)}aya.X=1;function bya(a,d,e){return v[c[c[a]+10]](a,d,e)}bya.X=1;function cya(a){v[c[c[a]+2]](a)}cya.X=1;function dya(a){return Lo(a)}dya.X=1;function eya(a){return Io(a)}eya.X=1;function fya(a,d){return v[c[c[a]+8]](a,d,-1)}fya.X=1;function gya(a,d,e){return v[c[c[a]+8]](a,d,e)}gya.X=1;function hya(a,d){var e=xb(352);iya(e,a,d);return e}hya.X=1;function jya(a,d,e,f){var g=xb(352);kya(g,a,d,e,f);return g}jya.X=1;function lya(a){return c[a+4]}lya.X=1;function mya(a,d){v[c[c[a]+5]](a,d)}mya.X=1;function nya(a){return v[c[c[a]+9]](a)}nya.X=1;function oya(a){return a+74}oya.X=1;function pya(a){return a+78}pya.X=1;function qya(a){return Ap(a)}qya.X=1;function rya(a,d){var e=a+86;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2]}rya.X=1;function sya(a){return Cp(a)}sya.X=1;function tya(a,d){Ko(a,d&1)}tya.X=1;function uya(a,d){Ep(a,d)}uya.X=1;function vya(a){return Fp(a)}vya.X=1;function wya(a,d){xya(a,d)}wya.X=1;function xya(a,d){var e=a+74;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}xya.X=1;function yya(a){return Gp(a)}yya.X=1;function zya(a){return c[a+85]&1}zya.X=1;function Aya(a){return c[a+7]}Aya.X=1;function Bya(a){return c[a+6]}Bya.X=1;function Cya(a,d){c[a+6]=d}Cya.X=1;function ZU(a,d){c[a]=c[d];c[a+1]=c[d+1];c[a+2]=c[d+2];c[a+3]=c[d+3];c[a+4]=c[d+4];c[a+5]=c[d+5]}ZU.X=1;function Dya(a,d){Eya(a,d)}Dya.X=1;function Eya(a,d){var e=a+78;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Eya.X=1;function Fya(a,d){$U(a,d)}Fya.X=1;function Gya(a,d){v[c[c[a]+4]](a,d)}Gya.X=1;function Hya(a){return Dp(a)}Hya.X=1;function Iya(a,d){Jp(a,d)}Iya.X=1;function Jya(a,d){Kp(a,d)}Jya.X=1;function Kya(a,d){zp(a,d)}Kya.X=1;function Lya(a){return Lp(a)}Lya.X=1;function Mya(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Mya.X=1;function Nya(a,d,e,f,g){v[c[c[a]+3]](a,d,e,f,g)}Nya.X=1;function Oya(){}Oya.X=1;function Pya(a){return Mp(a)}Pya.X=1;function Qya(a){return Np(a)}Qya.X=1;function Rya(a,d,e,f){v[c[c[a]+6]](a,d,e,f)}Rya.X=1;function Sya(a){return Op(a)}Sya.X=1;function Tya(a,d){Pp(a,d)}Tya.X=1;function Uya(a,d,e){v[c[c[a]+8]](a,d,e)}Uya.X=1;function Vya(a){return Ge(a)}Vya.X=1;function Wya(a,d){var e=b;b+=4;0==c[Xya]<<24>>24&&Hb(Xya);v[c[c[a]+15]](e,a,d);c[aV]=c[e];k[aV]=k[e];c[aV+1]=c[e+1];k[aV+1]=k[e+1];c[aV+2]=c[e+2];k[aV+2]=k[e+2];c[aV+3]=c[e+3];k[aV+3]=k[e+3];b=e;return aV}Wya.X=1;function Yya(a,d){Je(a,d)}Yya.X=1;function Zya(a){return dF(a)}Zya.X=1;function $ya(a,d,e){return v[c[c[a]+13]](a,d,e)}$ya.X=1;function aza(a){return v[c[c[a]+7]](a)}aza.X=1;function bza(a){return v[c[c[a]+19]](a)}bza.X=1;function cza(a){return Ye(a)}cza.X=1;function dza(a){return v[c[c[a]+21]](a)}dza.X=1;function eza(a,d,e,f){df(a,d,e,f)}eza.X=1;function fza(a){return v[c[c[a]+12]](a)}fza.X=1;function gza(a){return v[c[c[a]+9]](a)}gza.X=1;function hza(a){return a+3}hza.X=1;function iza(a,d){var e=b;b+=4;0==c[jza]<<24>>24&&Hb(jza);kf(e,a,d);c[bV]=c[e];k[bV]=k[e];c[bV+1]=c[e+1];k[bV+1]=k[e+1];c[bV+2]=c[e+2];k[bV+2]=k[e+2];c[bV+3]=c[e+3];k[bV+3]=k[e+3];b=e;return bV}iza.X=1;function kza(a,d){Jf(a,d)}kza.X=1;function lza(a,d){v[c[c[a]+6]](a,d)}lza.X=1;function mza(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}mza.X=1;function nza(a){return Le(a)}nza.X=1;function oza(a,d){var e=b;b+=4;0==c[pza]<<24>>24&&Hb(pza);tf(e,a,d);c[cV]=c[e];k[cV]=k[e];c[cV+1]=c[e+1];k[cV+1]=k[e+1];c[cV+2]=c[e+2];k[cV+2]=k[e+2];c[cV+3]=c[e+3];k[cV+3]=k[e+3];b=e;return cV}oza.X=1;function qza(a,d){return v[c[c[a]+5]](a,d)}qza.X=1;function rza(a){return xf(a)}rza.X=1;function sza(a){return zf(a)}sza.X=1;function tza(a){return Me(a)}tza.X=1;function uza(a){return Bf(a)}uza.X=1;function vza(a){return v[c[c[a]+11]](a)}vza.X=1;function wza(a,d,e){v[c[c[a]+20]](a,d,e)}wza.X=1;function xza(a){return a+7}xza.X=1;function yza(a){return Gf(a)}yza.X=1;function zza(a,d){var e=b;b+=4;0==c[Aza]<<24>>24&&Hb(Aza);v[c[c[a]+16]](e,a,d);c[dV]=c[e];k[dV]=k[e];c[dV+1]=c[e+1];k[dV+1]=k[e+1];c[dV+2]=c[e+2];k[dV+2]=k[e+2];c[dV+3]=c[e+3];k[dV+3]=k[e+3];b=e;return dV}zza.X=1;function Bza(a){return Kf(a)}Bza.X=1;function Cza(a){return Mf(a)}Cza.X=1;function Dza(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}Dza.X=1;function Eza(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}Eza.X=1;function Fza(a){return a+7}Fza.X=1;function Gza(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}Gza.X=1;function Hza(a){return v[c[c[a]+4]](a)}Hza.X=1;function Iza(a,d){v[c[c[a]+14]](a,d)}Iza.X=1;function Jza(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}Jza.X=1;function Kza(a,d){v[c[c[a]+10]](a,d)}Kza.X=1;function Lza(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}Lza.X=1;function Mza(a){var d=b;b+=4;0==c[Nza]<<24>>24&&Hb(Nza);qG(d,a);c[eV]=c[d];k[eV]=k[d];c[eV+1]=c[d+1];k[eV+1]=k[d+1];c[eV+2]=c[d+2];k[eV+2]=k[d+2];c[eV+3]=c[d+3];k[eV+3]=k[d+3];b=d;return eV}Mza.X=1;function Oza(a){return Uf(a)}Oza.X=1;function Pza(a){return Ie(a)}Pza.X=1;function Qza(a){0!=(a|0)&&yh(a)}Qza.X=1;function Rza(a,d){ZU(a,d)}Rza.X=1;function Sza(){return Tza(32)}Sza.X=1;function Uza(a){var d=Se(56);Vza(d,a);return d}Uza.X=1;function Wza(a,d){c[a+7]=d}Wza.X=1;function Xza(a){return a+8}Xza.X=1;function Yza(a,d){c[a+2]=d}Yza.X=1;function Zza(a,d){k[a+1]=d}Zza.X=1;function $za(a){return k[a+1]}$za.X=1;function aAa(a){return c[a+20]}aAa.X=1;function bAa(a,d){c[a+20]=d}bAa.X=1;function cAa(a){return a+12}cAa.X=1;function dAa(a){return a+16}dAa.X=1;function eAa(a){return c[a+3]}eAa.X=1;function fAa(a){return a+4}fAa.X=1;function gAa(a){return c[a+2]}gAa.X=1;function hAa(a,d){c[a+3]=d}hAa.X=1;function iAa(a){return k[a+22]}iAa.X=1;function jAa(a){return c[a]}jAa.X=1;function kAa(a,d){c[a]=d}kAa.X=1;function lAa(a,d){c[a+3]=d}lAa.X=1;function mAa(a){return a+5}mAa.X=1;function nAa(a,d){c[a+4]=d}nAa.X=1;function oAa(a){return c[a+2]}oAa.X=1;function pAa(a){return a+9}pAa.X=1;function qAa(a,d){c[a+1]=d}qAa.X=1;function rAa(a){return c[a+4]}rAa.X=1;function sAa(a,d){c[a+2]=d}sAa.X=1;function tAa(a){return c[a+3]}tAa.X=1;function uAa(a){return c[a+1]}uAa.X=1;function Tza(a){return Ue(a,16)}Tza.X=1;function vAa(a,d){v[c[c[a]+3]](a,d)}vAa.X=1;function wAa(a,d){v[c[c[a]+2]](a,d)}wAa.X=1;function xAa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}xAa.X=1;function yAa(a,d){return v[c[c[a]+2]](a,d)}yAa.X=1;function zAa(a,d,e){return v[c[c[a]+3]](a,d,e&1)}zAa.X=1;function AAa(a){return cz(a)}AAa.X=1;function BAa(a,d){var e=a+16;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}BAa.X=1;function CAa(a,d){var e=a+8;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}CAa.X=1;function DAa(a,d){var e=xb(80);fV(e,a,d);return e}DAa.X=1;function EAa(a,d){var e=a+12;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}EAa.X=1;function FAa(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}FAa.X=1;function GAa(a,d,e){HAa(a,d,e)}GAa.X=1;function HAa(a,d,e){var f=b;b+=28;var g,h,i=f+4,j=f+8,l=f+12,m=f+16,n=f+20,p=f+24;g=d+12;h=e+12;dc(d,f);dc(e,i);0<k[a+22]&&(IAa(a+8,g,a,f,1,j,l),IAa(a+12,h,a+4,i,1,m,n),d=JB(l)*k[a+20],n=JB(n),n=d+n*k[a+21],N(p,m,j),j=J(p,a+16),0>j&&(j=0),m=a+22,k[m]-=n+j);j=a+8;c[j]=c[g];k[j]=k[g];c[j+1]=c[g+1];k[j+1]=k[g+1];c[j+2]=c[g+2];k[j+2]=k[g+2];c[j+3]=c[g+3];k[j+3]=k[g+3];g=a+12;c[g]=c[h];k[g]=k[h];c[g+1]=c[h+1];k[g+1]=k[h+1];c[g+2]=c[h+2];k[g+2]=k[h+2];c[g+3]=c[h+3];k[g+3]=k[h+3];c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];a+=4;c[a]=c[i];k[a]=k[i];c[a+1]=c[i+1];k[a+1]=k[i+1];c[a+2]=c[i+2];k[a+2]=k[i+2];c[a+3]=c[i+3];k[a+3]=k[i+3];b=f}HAa.X=1;function JAa(a){0!=(a|0)&&xe(a)}JAa.X=1;function KAa(a,d){var e=xb(92);LAa(e,a,d);return e}KAa.X=1;function MAa(a){return iAa(a)}MAa.X=1;function NAa(a,d,e,f,g){OAa(a,d,e,f,g)}NAa.X=1;function OAa(a,d,e,f,g){var h=b;b+=8;var i=h+4;k[a+22]=e;0<k[a+22]&&(e=a+16,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],e=f+12,d=g+12,dc(f,h),dc(g,i),f=a+8,c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3],f=a+12,c[f]=c[d],k[f]=k[d],c[f+1]=c[d+1],k[f+1]=k[d+1],c[f+2]=c[d+2],k[f+2]=k[d+2],c[f+3]=c[d+3],k[f+3]=k[d+3],c[a]=c[h],k[a]=k[h],c[a+1]=c[h+1],k[a+1]=k[h+1],c[a+2]=c[h+2],k[a+2]=k[h+2],c[a+3]=c[h+3],k[a+3]=k[h+3],a+=4,c[a]=c[i],k[a]=k[i],c[a+1]=c[i+1],k[a+1]=k[i+1],c[a+2]=c[i+2],k[a+2]=k[i+2],c[a+3]=c[i+3],k[a+3]=k[i+3]);b=h}OAa.X=1;function PAa(a){return Af(a)}PAa.X=1;function QAa(){var a=OH(48);gV(a);return a}QAa.X=1;function RAa(a,d,e,f,g){var h=OH(48);hV(h,a,d,e,f,g,0);return h}RAa.X=1;function SAa(a,d,e,f,g,h){var i=OH(48);hV(i,a,d,e,f,g,h);return i}SAa.X=1;function TAa(a){return He(a)}TAa.X=1;function UAa(a){return bf(a)}UAa.X=1;function VAa(a){return yf(a)}VAa.X=1;function WAa(a){return YG(a)}WAa.X=1;function XAa(a){return Cf(a)}XAa.X=1;function YAa(a,d){var e=a+5;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}YAa.X=1;function ZAa(a){return Hf(a)}ZAa.X=1;function $Aa(a){return Lf(a)}$Aa.X=1;function aBa(a,d){var e=a+9;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}aBa.X=1;function bBa(a){0!=(a|0)&&yh(a)}bBa.X=1;function cBa(a){return Yf(a)}cBa.X=1;function dBa(a,d,e,f,g,h,i,j,l){v[c[c[a]+4]](a,d,e,f,g,h,i,j,l,0)}dBa.X=1;function eBa(a,d,e,f,g,h,i,j,l,m){v[c[c[a]+4]](a,d,e,f,g,h,i,j,l,m)}eBa.X=1;function fBa(a,d){v[c[c[a]+9]](a,d)}fBa.X=1;function gBa(a,d,e){vy(a,d,e)}gBa.X=1;function hBa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}hBa.X=1;function iBa(a,d){v[c[c[a]+8]](a,d)}iBa.X=1;function jBa(a,d,e){return v[c[c[a]+14]](a,d,e)}jBa.X=1;function kBa(a){return a+5}kBa.X=1;function lBa(){var a=Fy(84);mBa(a);return a}lBa.X=1;function nBa(a,d){Iy(a,d)}nBa.X=1;function oBa(a){return a+1}oBa.X=1;function pBa(a){return v[c[c[a]+13]](a)}pBa.X=1;function qBa(a,d,e){v[c[c[a]+11]](a,d,e)}qBa.X=1;function rBa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}rBa.X=1;function sBa(a,d,e){v[c[c[a]+12]](a,d,e)}sBa.X=1;function tBa(a,d){zy(a,d,2)}tBa.X=1;function uBa(a,d,e){zy(a,d,e)}uBa.X=1;function vBa(a){return v[c[c[a]+7]](a)}vBa.X=1;function wBa(a,d,e,f,g,h,i,j,l){v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,0)}wBa.X=1;function xBa(a,d,e,f,g,h,i,j,l,m){v[c[c[a]+3]](a,d,e,f,g,h,i,j,l,m)}xBa.X=1;function yBa(a){return v[c[c[a]+10]](a)}yBa.X=1;function zBa(a,d){v[c[c[a]+5]](a,d)}zBa.X=1;function ABa(a,d){v[c[c[a]+6]](a,d)}ABa.X=1;function BBa(a,d,e){v[c[c[a]+8]](a,d,e)}BBa.X=1;function CBa(a){return v[c[c[a]+26]](a)}CBa.X=1;function DBa(a,d){var e=b;b+=4;0==c[EBa]<<24>>24&&Hb(EBa);v[c[c[a]+15]](e,a,d);c[iV]=c[e];k[iV]=k[e];c[iV+1]=c[e+1];k[iV+1]=k[e+1];c[iV+2]=c[e+2];k[iV+2]=k[e+2];c[iV+3]=c[e+3];k[iV+3]=k[e+3];b=e;return iV}DBa.X=1;function FBa(a,d){Je(a,d)}FBa.X=1;function GBa(a,d,e){return v[c[c[a]+28]](a,d,e)}GBa.X=1;function HBa(a){return v[c[c[a]+22]](a)}HBa.X=1;function IBa(a){return v[c[c[a]+7]](a)}IBa.X=1;function JBa(a){return Ye(a)}JBa.X=1;function KBa(a){return v[c[c[a]+19]](a)}KBa.X=1;function LBa(a,d){var e=b;b+=4;0==c[MBa]<<24>>24&&Hb(MBa);kf(e,a,d);c[jV]=c[e];k[jV]=k[e];c[jV+1]=c[e+1];k[jV+1]=k[e+1];c[jV+2]=c[e+2];k[jV+2]=k[e+2];c[jV+3]=c[e+3];k[jV+3]=k[e+3];b=e;return jV}LBa.X=1;function NBa(a,d,e){v[c[c[a]+25]](a,d,e)}NBa.X=1;function OBa(a,d,e){v[c[c[a]+29]](a,d,e)}OBa.X=1;function PBa(a,d){var e=b;b+=4;0==c[QBa]<<24>>24&&Hb(QBa);tf(e,a,d);c[kV]=c[e];k[kV]=k[e];c[kV+1]=c[e+1];k[kV+1]=k[e+1];c[kV+2]=c[e+2];k[kV+2]=k[e+2];c[kV+3]=c[e+3];k[kV+3]=k[e+3];b=e;return kV}PBa.X=1;function RBa(a,d,e,f){df(a,d,e,f)}RBa.X=1;function SBa(a){return v[c[c[a]+12]](a)}SBa.X=1;function TBa(a){return v[c[c[a]+23]](a)}TBa.X=1;function UBa(a){return v[c[c[a]+9]](a)}UBa.X=1;function VBa(a,d,e,f){v[c[c[a]+24]](a,d,e,f)}VBa.X=1;function WBa(a){return a+3}WBa.X=1;function XBa(a,d){Jf(a,d)}XBa.X=1;function YBa(a){return Ge(a)}YBa.X=1;function ZBa(a,d){v[c[c[a]+6]](a,d)}ZBa.X=1;function $Ba(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}$Ba.X=1;function aCa(a){return Le(a)}aCa.X=1;function bCa(a,d){return v[c[c[a]+5]](a,d)}bCa.X=1;function cCa(a){return xf(a)}cCa.X=1;function dCa(a){return zf(a)}dCa.X=1;function eCa(a,d,e){return v[c[c[a]+13]](a,d,e)}eCa.X=1;function fCa(a){return Me(a)}fCa.X=1;function gCa(a){return Bf(a)}gCa.X=1;function hCa(a){return v[c[c[a]+11]](a)}hCa.X=1;function iCa(a,d,e){v[c[c[a]+20]](a,d,e)}iCa.X=1;function jCa(a){return a+7}jCa.X=1;function kCa(a){return v[c[c[a]+21]](a)}kCa.X=1;function lCa(a,d){var e=b;b+=4;0==c[mCa]<<24>>24&&Hb(mCa);v[c[c[a]+16]](e,a,d);c[lV]=c[e];k[lV]=k[e];c[lV+1]=c[e+1];k[lV+1]=k[e+1];c[lV+2]=c[e+2];k[lV+2]=k[e+2];c[lV+3]=c[e+3];k[lV+3]=k[e+3];b=e;return lV}lCa.X=1;function nCa(a){return Kf(a)}nCa.X=1;function oCa(a){return Mf(a)}oCa.X=1;function pCa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}pCa.X=1;function qCa(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}qCa.X=1;function rCa(a){return a+7}rCa.X=1;function sCa(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}sCa.X=1;function tCa(a){return v[c[c[a]+4]](a)}tCa.X=1;function uCa(a,d){v[c[c[a]+14]](a,d)}uCa.X=1;function vCa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}vCa.X=1;function wCa(a,d,e,f,g,h){var i=Fy(84);mV(i,a,d,e,f,g,h);return i}wCa.X=1;function xCa(a){var d=Se(56);yCa(d,a);return d}xCa.X=1;function zCa(a,d,e,f){v[c[c[a]+27]](a,d,e,f)}zCa.X=1;function ACa(a,d){v[c[c[a]+10]](a,d)}ACa.X=1;function BCa(a){return yg(a)}BCa.X=1;function CCa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}CCa.X=1;function DCa(a){return Ie(a)}DCa.X=1;function ECa(a){var d=b;b+=4;0==c[FCa]<<24>>24&&Hb(FCa);nV(d,a);c[oV]=c[d];k[oV]=k[d];c[oV+1]=c[d+1];k[oV+1]=k[d+1];c[oV+2]=c[d+2];k[oV+2]=k[d+2];c[oV+3]=c[d+3];k[oV+3]=k[d+3];b=d;return oV}ECa.X=1;function nV(a,d){var e=b;b+=7;var f=e+4,g=e+5,h=e+6,i=d+7;c[a]=c[i];k[a]=k[i];c[a+1]=c[i+1];k[a+1]=k[i+1];c[a+2]=c[i+2];k[a+2]=k[i+2];c[a+3]=c[i+3];k[a+3]=k[i+3];k[f]=v[c[c[d]+11]](d);k[g]=v[c[c[d]+11]](d);k[h]=v[c[c[d]+11]](d);H(e,f,g,h);xn(a,e);b=e}nV.X=1;function GCa(a){return Uf(a)}GCa.X=1;function HCa(a){return Gf(a)}HCa.X=1;function ICa(a,d,e){v[c[c[a]+3]](a,d,e)}ICa.X=1;function JCa(a,d,e){v[c[c[a]+2]](a,d,e)}JCa.X=1;function KCa(a,d,e,f){v[c[c[a]+4]](a,d,e,f)}KCa.X=1;function LCa(a,d,e){v[c[c[a]+8]](a,d,e)}LCa.X=1;function MCa(a){return v[c[c[a]+26]](a)}MCa.X=1;function NCa(a,d){var e=b;b+=4;0==c[OCa]<<24>>24&&Hb(OCa);v[c[c[a]+15]](e,a,d);c[pV]=c[e];k[pV]=k[e];c[pV+1]=c[e+1];k[pV+1]=k[e+1];c[pV+2]=c[e+2];k[pV+2]=k[e+2];c[pV+3]=c[e+3];k[pV+3]=k[e+3];b=e;return pV}NCa.X=1;function PCa(a,d){Je(a,d)}PCa.X=1;function QCa(a,d,e){return v[c[c[a]+28]](a,d,e)}QCa.X=1;function RCa(a){return v[c[c[a]+22]](a)}RCa.X=1;function SCa(a){return v[c[c[a]+7]](a)}SCa.X=1;function TCa(a){return v[c[c[a]+19]](a)}TCa.X=1;function UCa(a){return Ye(a)}UCa.X=1;function VCa(a,d,e){v[c[c[a]+25]](a,d,e)}VCa.X=1;function WCa(a,d){var e=b;b+=4;0==c[XCa]<<24>>24&&Hb(XCa);tf(e,a,d);c[qV]=c[e];k[qV]=k[e];c[qV+1]=c[e+1];k[qV+1]=k[e+1];c[qV+2]=c[e+2];k[qV+2]=k[e+2];c[qV+3]=c[e+3];k[qV+3]=k[e+3];b=e;return qV}WCa.X=1;function YCa(a,d,e,f){df(a,d,e,f)}YCa.X=1;function ZCa(a){return v[c[c[a]+12]](a)}ZCa.X=1;function $Ca(a){return v[c[c[a]+23]](a)}$Ca.X=1;function aDa(a){return v[c[c[a]+9]](a)}aDa.X=1;function bDa(a,d,e,f){v[c[c[a]+24]](a,d,e,f)}bDa.X=1;function cDa(a){return a+3}cDa.X=1;function dDa(a,d){var e=b;b+=4;0==c[eDa]<<24>>24&&Hb(eDa);kf(e,a,d);c[rV]=c[e];k[rV]=k[e];c[rV+1]=c[e+1];k[rV+1]=k[e+1];c[rV+2]=c[e+2];k[rV+2]=k[e+2];c[rV+3]=c[e+3];k[rV+3]=k[e+3];b=e;return rV}dDa.X=1;function fDa(a,d){var e=b;b+=4;0==c[gDa]<<24>>24&&Hb(gDa);v[c[c[a]+16]](e,a,d);c[sV]=c[e];k[sV]=k[e];c[sV+1]=c[e+1];k[sV+1]=k[e+1];c[sV+2]=c[e+2];k[sV+2]=k[e+2];c[sV+3]=c[e+3];k[sV+3]=k[e+3];b=e;return sV}fDa.X=1;function hDa(a,d){v[c[c[a]+6]](a,d)}hDa.X=1;function iDa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}iDa.X=1;function jDa(a){return Gf(a)}jDa.X=1;function kDa(a,d){return v[c[c[a]+5]](a,d)}kDa.X=1;function lDa(a){return xf(a)}lDa.X=1;function mDa(a){return zf(a)}mDa.X=1;function nDa(a,d,e){return v[c[c[a]+13]](a,d,e)}nDa.X=1;function oDa(a){return Me(a)}oDa.X=1;function pDa(a){return Bf(a)}pDa.X=1;function qDa(a){return v[c[c[a]+11]](a)}qDa.X=1;function rDa(a){bh(a)}rDa.X=1;function sDa(a,d,e){v[c[c[a]+20]](a,d,e)}sDa.X=1;function tDa(a,d){v[c[c[a]+10]](a,d)}tDa.X=1;function uDa(a){return v[c[c[a]+21]](a)}uDa.X=1;function vDa(a){return Le(a)}vDa.X=1;function wDa(a,d){Jf(a,d)}wDa.X=1;function xDa(a){return Kf(a)}xDa.X=1;function yDa(a){return Mf(a)}yDa.X=1;function zDa(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}zDa.X=1;function ADa(a){return a+7}ADa.X=1;function BDa(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}BDa.X=1;function CDa(a){return v[c[c[a]+4]](a)}CDa.X=1;function DDa(a,d){v[c[c[a]+14]](a,d)}DDa.X=1;function EDa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}EDa.X=1;function FDa(a,d,e,f){v[c[c[a]+27]](a,d,e,f)}FDa.X=1;function GDa(a){return Ge(a)}GDa.X=1;function HDa(a){return yg(a)}HDa.X=1;function IDa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}IDa.X=1;function JDa(a){return Ie(a)}JDa.X=1;function KDa(a){return Uf(a)}KDa.X=1;function LDa(a,d,e,f,g){eh(a,d,e,f,g)}LDa.X=1;function MDa(a,d,e){v[c[c[a]+8]](a,d,e)}MDa.X=1;function NDa(a){return Ge(a)}NDa.X=1;function ODa(a,d){var e=b;b+=4;0==c[PDa]<<24>>24&&Hb(PDa);v[c[c[a]+15]](e,a,d);c[tV]=c[e];k[tV]=k[e];c[tV+1]=c[e+1];k[tV+1]=k[e+1];c[tV+2]=c[e+2];k[tV+2]=k[e+2];c[tV+3]=c[e+3];k[tV+3]=k[e+3];b=e;return tV}ODa.X=1;function QDa(a,d){Je(a,d)}QDa.X=1;function RDa(a){return Ke(a)}RDa.X=1;function SDa(a,d,e){return v[c[c[a]+13]](a,d,e)}SDa.X=1;function TDa(a){return v[c[c[a]+7]](a)}TDa.X=1;function UDa(a){return v[c[c[a]+19]](a)}UDa.X=1;function VDa(a){return Ye(a)}VDa.X=1;function WDa(a){return cf(a)}WDa.X=1;function XDa(a,d,e,f){df(a,d,e,f)}XDa.X=1;function YDa(a){return v[c[c[a]+12]](a)}YDa.X=1;function ZDa(a){return v[c[c[a]+9]](a)}ZDa.X=1;function $Da(a){return gf(a)}$Da.X=1;function aEa(a){return a+3}aEa.X=1;function bEa(a,d){var e=b;b+=4;0==c[cEa]<<24>>24&&Hb(cEa);kf(e,a,d);c[uV]=c[e];k[uV]=k[e];c[uV+1]=c[e+1];k[uV+1]=k[e+1];c[uV+2]=c[e+2];k[uV+2]=k[e+2];c[uV+3]=c[e+3];k[uV+3]=k[e+3];b=e;return uV}bEa.X=1;function dEa(a,d){var e=b;b+=4;0==c[eEa]<<24>>24&&Hb(eEa);v[c[c[a]+16]](e,a,d);c[vV]=c[e];k[vV]=k[e];c[vV+1]=c[e+1];k[vV+1]=k[e+1];c[vV+2]=c[e+2];k[vV+2]=k[e+2];c[vV+3]=c[e+3];k[vV+3]=k[e+3];b=e;return vV}dEa.X=1;function fEa(a,d){v[c[c[a]+6]](a,d)}fEa.X=1;function gEa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}gEa.X=1;function hEa(a){return Le(a)}hEa.X=1;function iEa(a,d){var e=b;b+=4;0==c[jEa]<<24>>24&&Hb(jEa);tf(e,a,d);c[wV]=c[e];k[wV]=k[e];c[wV+1]=c[e+1];k[wV+1]=k[e+1];c[wV+2]=c[e+2];k[wV+2]=k[e+2];c[wV+3]=c[e+3];k[wV+3]=k[e+3];b=e;return wV}iEa.X=1;function kEa(a,d){return v[c[c[a]+5]](a,d)}kEa.X=1;function lEa(a){return xf(a)}lEa.X=1;function mEa(a){return zf(a)}mEa.X=1;function nEa(a,d){var e=Se(56);oEa(e,a,d);return e}nEa.X=1;function pEa(a){return Me(a)}pEa.X=1;function qEa(a){return Bf(a)}qEa.X=1;function rEa(a){return v[c[c[a]+11]](a)}rEa.X=1;function sEa(a,d,e){v[c[c[a]+20]](a,d,e)}sEa.X=1;function tEa(a,d){v[c[c[a]+10]](a,d)}tEa.X=1;function uEa(a){return Gf(a)}uEa.X=1;function vEa(a,d){Jf(a,d)}vEa.X=1;function wEa(a){return Kf(a)}wEa.X=1;function xEa(a){return Mf(a)}xEa.X=1;function yEa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}yEa.X=1;function zEa(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}zEa.X=1;function AEa(a){return a+7}AEa.X=1;function BEa(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}BEa.X=1;function CEa(a){return v[c[c[a]+4]](a)}CEa.X=1;function DEa(a,d){v[c[c[a]+14]](a,d)}DEa.X=1;function EEa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}EEa.X=1;function FEa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}FEa.X=1;function GEa(a){return Uf(a)}GEa.X=1;function HEa(a){return Ie(a)}HEa.X=1;function IEa(a,d){var e=b;b+=4;0==c[JEa]<<24>>24&&Hb(JEa);KEa(e,a,d);c[xV]=c[e];k[xV]=k[e];c[xV+1]=c[e+1];k[xV+1]=k[e+1];c[xV+2]=c[e+2];k[xV+2]=k[e+2];c[xV+3]=c[e+3];k[xV+3]=k[e+3];b=e;return xV}IEa.X=1;function KEa(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+12;LEa(h,d,e);c[f]=c[h];k[f]=k[h];c[f+1]=c[h+1];k[f+1]=k[h+1];c[f+2]=c[h+2];k[f+2]=k[h+2];c[f+3]=c[h+3];k[f+3]=k[h+3];MEa(i,d,e);c[g]=c[i];k[g]=k[i];c[g+1]=c[i+1];k[g+1]=k[i+1];c[g+2]=c[i+2];k[g+2]=k[i+2];c[g+3]=c[i+3];k[g+3]=k[i+3];yV(f,f)<yV(g,g)?(c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1],c[a+2]=c[e+2],k[a+2]=k[e+2],c[a+3]=c[e+3],k[a+3]=k[e+3]):NEa(a,e);b=f}KEa.X=1;function OEa(a,d){AG(a,d)}OEa.X=1;function PEa(a,d){var e=b;b+=4;0==c[QEa]<<24>>24&&Hb(QEa);REa(e,a,d);c[zV]=c[e];k[zV]=k[e];c[zV+1]=c[e+1];k[zV+1]=k[e+1];c[zV+2]=c[e+2];k[zV+2]=k[e+2];c[zV+3]=c[e+3];k[zV+3]=k[e+3];b=e;return zV}PEa.X=1;function REa(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+12;LEa(h,d,e);c[f]=c[h];k[f]=k[h];c[f+1]=c[h+1];k[f+1]=k[h+1];c[f+2]=c[h+2];k[f+2]=k[h+2];c[f+3]=c[h+3];k[f+3]=k[h+3];MEa(i,d,e);c[g]=c[i];k[g]=k[i];c[g+1]=c[i+1];k[g+1]=k[i+1];c[g+2]=c[i+2];k[g+2]=k[i+2];c[g+3]=c[i+3];k[g+3]=k[i+3];yV(f,f)>yV(g,g)?(c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1],c[a+2]=c[e+2],k[a+2]=k[e+2],c[a+3]=c[e+3],k[a+3]=k[e+3]):NEa(a,e);b=f}REa.X=1;function SEa(a){return k[a]}SEa.X=1;function TEa(a){return k[a+1]}TEa.X=1;function UEa(a){return k[a+2]}UEa.X=1;function VEa(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;WEa(a,g,h,i);b=g}VEa.X=1;function WEa(a,d,e,f){var g=b;b+=4;var h,i,j,l=g+1,m=g+2,n=g+3,d=.5*k[d];h=.5*k[e];e=.5*k[f];f=td(d);d=ud(d);i=td(h);h=ud(h);j=td(e);e=ud(e);k[g]=j*h*f+e*i*d;k[l]=j*i*d-e*h*f;k[m]=e*i*f-j*h*d;k[n]=j*i*f+e*h*d;jc(a,g,l,m,n);b=g}WEa.X=1;function XEa(a,d){return YEa(a,d)}XEa.X=1;function YEa(a,d){k[a]-=k[d];var e=a+1;k[e]-=k[d+1];e=a+2;k[e]-=k[d+2];e=a+3;k[e]-=k[d+3];return a}YEa.X=1;function ZEa(a){return k[a+3]}ZEa.X=1;function $Ea(a){return AV(a)}$Ea.X=1;function AV(a){var d=b;b+=1;k[d]=BV(a);a=aFa(a,d);b=d;return a}AV.X=1;function bFa(a,d,e){var f=b;b+=5;var g=f+1;k[f]=e;0==c[cFa]<<24>>24&&Hb(cFa);dFa(g,a,d,f);c[CV]=c[g];k[CV]=k[g];c[CV+1]=c[g+1];k[CV+1]=k[g+1];c[CV+2]=c[g+2];k[CV+2]=k[g+2];c[CV+3]=c[g+3];k[CV+3]=k[g+3];b=f;return CV}bFa.X=1;function eFa(a,d){k[a]*=k[d];var e=a+1;k[e]*=k[d];e=a+2;k[e]*=k[d];e=a+3;k[e]*=k[d];return a}eFa.X=1;function dFa(a,d,e,f){var g=b;b+=8;var h,i,j,l=g+1,m=g+2,n=g+3,p=g+4,r=g+5,s=g+6,t=g+7;h=DV(d,e);if(0!=h){i=1/ud(h);j=ud((1-k[f])*h);f=ud(k[f]*h);h=k[d]*j;var w=k[e];0>yV(d,e)?(k[g]=(h+ -w*f)*i,k[l]=(k[d+1]*j+ -k[e+1]*f)*i,k[m]=(k[d+2]*j+ -k[e+2]*f)*i,k[n]=(k[d+3]*j+ -k[e+3]*f)*i,NG(a,g,l,m,n)):(k[p]=(h+w*f)*i,k[r]=(k[d+1]*j+k[e+1]*f)*i,k[s]=(k[d+2]*j+k[e+2]*f)*i,k[t]=(k[d+3]*j+k[e+3]*f)*i,NG(a,p,r,s,t))}else{c[a]=c[d],k[a]=k[d],c[a+1]=c[d+1],k[a+1]=k[d+1],c[a+2]=c[d+2],k[a+2]=k[d+2],c[a+3]=c[d+3],k[a+3]=k[d+3]}b=g}dFa.X=1;function fFa(a){var d=b;b+=4;0==c[gFa]<<24>>24&&Hb(gFa);EV(d,a);c[FV]=c[d];k[FV]=k[d];c[FV+1]=c[d+1];k[FV+1]=k[d+1];c[FV+2]=c[d+2];k[FV+2]=k[d+2];c[FV+3]=c[d+3];k[FV+3]=k[d+3];b=d;return FV}fFa.X=1;function EV(a,d){var e=b;b+=3;var f=e+1,g=e+2;k[e]=-k[d];k[f]=-k[d+1];k[g]=-k[d+2];NG(a,e,f,g,d+3);b=e}EV.X=1;function hFa(a,d){return DV(a,d)}hFa.X=1;function DV(a,d){var e;e=ec(rd(a)*rd(d));return MB(yV(a,d)/e)}DV.X=1;function iFa(a){var d=b;b+=4;0==c[jFa]<<24>>24&&Hb(jFa);kFa(d,a);c[GV]=c[d];k[GV]=k[d];c[GV+1]=c[d+1];k[GV+1]=k[d+1];c[GV+2]=c[d+2];k[GV+2]=k[d+2];c[GV+3]=c[d+3];k[GV+3]=k[d+3];b=d;return GV}iFa.X=1;function kFa(a,d){var e=b;b+=6;var f,g=e+1,h=e+2,i=e+3,j=e+4,l=e+5;f=1-lFa(k[d+3],2);11920928955078125e-22>f?(k[e]=1,k[g]=0,k[h]=0,H(a,e,g,h)):(f=ec(f),k[i]=k[d]/f,k[j]=k[d+1]/f,k[l]=k[d+2]/f,H(a,i,j,l));b=e}kFa.X=1;function mFa(){nFa();return HV}mFa.X=1;function nFa(){var a=b;b+=4;var d=a+1,e=a+2,f=a+3;0==c[oFa]<<24>>24&&0!=(Hb(oFa)|0)&&(k[a]=0,k[d]=0,k[e]=0,k[f]=1,NG(HV,a,d,e,f));b=a;return HV}nFa.X=1;function pFa(a,d){DG(a,d)}pFa.X=1;function qFa(a,d){return rFa(a,d)}qFa.X=1;function rFa(a,d){k[a]+=k[d];var e=a+1;k[e]+=k[d+1];e=a+2;k[e]+=k[d+2];e=a+3;k[e]+=k[d+3];return a}rFa.X=1;function sFa(a,d){var e=b;b+=1;k[e]=d;var f=eFa(a,e);b=e;return f}sFa.X=1;function tFa(a,d,e){var f=b;b+=1;k[f]=e;IV(a,d,f);b=f}tFa.X=1;function IV(a,d,e){var f=b;b+=4;var g,h=f+1,i=f+2,j=f+3;g=JB(d);g=ud(.5*k[e])/g;k[f]=k[d]*g;k[h]=k[d+1]*g;k[i]=k[d+2]*g;k[j]=td(.5*k[e]);jc(a,f,h,i,j);b=f}IV.X=1;function uFa(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;vFa(a,g,h,i);b=g}uFa.X=1;function vFa(a,d,e,f){var g=b;b+=4;var h,i,j,l=g+1,m=g+2,n=g+3,d=.5*k[d];h=.5*k[e];e=.5*k[f];f=td(d);d=ud(d);i=td(h);h=ud(h);j=td(e);e=ud(e);k[g]=e*i*f-j*h*d;k[l]=j*h*f+e*i*d;k[m]=j*i*d-e*h*f;k[n]=j*i*f+e*h*d;jc(a,g,l,m,n);b=g}vFa.X=1;function wFa(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=d;k[h]=e;k[i]=f;gG(a,g,h,i);b=g}wFa.X=1;function xFa(a,d,e,f,g){var h=b;b+=4;var i=h+1,j=h+2,l=h+3;k[h]=d;k[i]=e;k[j]=f;k[l]=g;jc(a,h,i,j,l);b=h}xFa.X=1;function yFa(){return xb(16)}yFa.X=1;function zFa(a,d){var e=b;b+=1;k[e]=d;var f=xb(16);IV(f,a,e);b=e;return f}zFa.X=1;function AFa(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=a;k[g]=d;k[h]=e;a=xb(16);WEa(a,f,g,h);b=f;return a}AFa.X=1;function BFa(a,d,e,f){var g=b;b+=4;var h=g+1,i=g+2,j=g+3;k[g]=a;k[h]=d;k[i]=e;k[j]=f;a=xb(16);NG(a,g,h,i,j);b=g;return a}BFa.X=1;function CFa(a,d){var e=b;b+=1;k[e]=d;var f=aFa(a,e);b=e;return f}CFa.X=1;function aFa(a,d){var e=b;b+=1;k[e]=1/k[d];var f=eFa(a,e);b=e;return f}aFa.X=1;function DFa(a,d){iG(a,d)}DFa.X=1;function EFa(a){var d=b;b+=4;0==c[FFa]<<24>>24&&Hb(FFa);GFa(d,a);c[JV]=c[d];k[JV]=k[d];c[JV+1]=c[d+1];k[JV+1]=k[d+1];c[JV+2]=c[d+2];k[JV+2]=k[d+2];c[JV+3]=c[d+3];k[JV+3]=k[d+3];b=d;return JV}EFa.X=1;function GFa(a,d){var e=b;b+=1;k[e]=BV(d);HFa(a,d,e);b=e}GFa.X=1;function IFa(a,d){k[a]=d}IFa.X=1;function JFa(a,d){jG(a,d)}JFa.X=1;function KFa(a,d){kG(a,d)}KFa.X=1;function LFa(a){0!=(a|0)&&xe(a)}LFa.X=1;function MFa(a){return KV(a)}MFa.X=1;function KV(a){return 2*MB(k[a+3])}KV.X=1;function NFa(a){return rd(a)}NFa.X=1;function rd(a){return yV(a,a)}rd.X=1;function OFa(a){return BV(a)}OFa.X=1;function BV(a){return ec(rd(a))}BV.X=1;function PFa(a){return k[a+3]}PFa.X=1;function QFa(a){return k[a+1]}QFa.X=1;function RFa(a){return k[a]}RFa.X=1;function SFa(a){return k[a+2]}SFa.X=1;function TFa(a,d){return yV(a,d)}TFa.X=1;function yV(a,d){return k[a]*k[d]+k[a+1]*k[d+1]+k[a+2]*k[d+2]+k[a+3]*k[d+3]}yV.X=1;function UFa(a,d,e){v[c[c[a]+8]](a,d,e)}UFa.X=1;function VFa(a){return Ge(a)}VFa.X=1;function WFa(a,d){var e=b;b+=4;0==c[XFa]<<24>>24&&Hb(XFa);v[c[c[a]+15]](e,a,d);c[LV]=c[e];k[LV]=k[e];c[LV+1]=c[e+1];k[LV+1]=k[e+1];c[LV+2]=c[e+2];k[LV+2]=k[e+2];c[LV+3]=c[e+3];k[LV+3]=k[e+3];b=e;return LV}WFa.X=1;function YFa(a,d){Je(a,d)}YFa.X=1;function ZFa(a){return Ke(a)}ZFa.X=1;function $Fa(a,d,e){return v[c[c[a]+13]](a,d,e)}$Fa.X=1;function aGa(a){return v[c[c[a]+7]](a)}aGa.X=1;function bGa(a){return v[c[c[a]+19]](a)}bGa.X=1;function cGa(a){return Ye(a)}cGa.X=1;function dGa(a){return cf(a)}dGa.X=1;function eGa(a,d,e,f){df(a,d,e,f)}eGa.X=1;function fGa(a){return v[c[c[a]+12]](a)}fGa.X=1;function gGa(a){return v[c[c[a]+9]](a)}gGa.X=1;function hGa(a){return gf(a)}hGa.X=1;function iGa(a){return a+3}iGa.X=1;function jGa(a,d){var e=b;b+=4;0==c[kGa]<<24>>24&&Hb(kGa);kf(e,a,d);c[MV]=c[e];k[MV]=k[e];c[MV+1]=c[e+1];k[MV+1]=k[e+1];c[MV+2]=c[e+2];k[MV+2]=k[e+2];c[MV+3]=c[e+3];k[MV+3]=k[e+3];b=e;return MV}jGa.X=1;function lGa(a,d){var e=b;b+=4;0==c[mGa]<<24>>24&&Hb(mGa);v[c[c[a]+16]](e,a,d);c[NV]=c[e];k[NV]=k[e];c[NV+1]=c[e+1];k[NV+1]=k[e+1];c[NV+2]=c[e+2];k[NV+2]=k[e+2];c[NV+3]=c[e+3];k[NV+3]=k[e+3];b=e;return NV}lGa.X=1;function nGa(a,d){v[c[c[a]+6]](a,d)}nGa.X=1;function oGa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}oGa.X=1;function pGa(a){return Le(a)}pGa.X=1;function qGa(a,d){var e=b;b+=4;0==c[rGa]<<24>>24&&Hb(rGa);tf(e,a,d);c[OV]=c[e];k[OV]=k[e];c[OV+1]=c[e+1];k[OV+1]=k[e+1];c[OV+2]=c[e+2];k[OV+2]=k[e+2];c[OV+3]=c[e+3];k[OV+3]=k[e+3];b=e;return OV}qGa.X=1;function sGa(a,d){return v[c[c[a]+5]](a,d)}sGa.X=1;function tGa(a){return xf(a)}tGa.X=1;function uGa(a){return zf(a)}uGa.X=1;function vGa(a,d){var e=Se(56);wGa(e,a,d);return e}vGa.X=1;function xGa(a){return Me(a)}xGa.X=1;function yGa(a){return Bf(a)}yGa.X=1;function zGa(a){return v[c[c[a]+11]](a)}zGa.X=1;function AGa(a,d,e){v[c[c[a]+20]](a,d,e)}AGa.X=1;function BGa(a,d){v[c[c[a]+10]](a,d)}BGa.X=1;function CGa(a){return Gf(a)}CGa.X=1;function DGa(a,d){Jf(a,d)}DGa.X=1;function EGa(a){return Kf(a)}EGa.X=1;function FGa(a){return Mf(a)}FGa.X=1;function GGa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}GGa.X=1;function HGa(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}HGa.X=1;function IGa(a){return a+7}IGa.X=1;function JGa(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}JGa.X=1;function KGa(a){return v[c[c[a]+4]](a)}KGa.X=1;function LGa(a,d){v[c[c[a]+14]](a,d)}LGa.X=1;function MGa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}MGa.X=1;function NGa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}NGa.X=1;function OGa(a){return Uf(a)}OGa.X=1;function PGa(a){return Ie(a)}PGa.X=1;function QGa(a,d,e){v[c[c[a]+8]](a,d,e)}QGa.X=1;function RGa(a,d){Je(a,d)}RGa.X=1;function SGa(a,d,e){return v[c[c[a]+13]](a,d,e)}SGa.X=1;function TGa(a){return v[c[c[a]+7]](a)}TGa.X=1;function UGa(a,d,e,f){v[c[c[a]+15]](a,d,e,f)}UGa.X=1;function VGa(a){return v[c[c[a]+12]](a)}VGa.X=1;function WGa(a){return v[c[c[a]+9]](a)}WGa.X=1;function XGa(a){return Ge(a)}XGa.X=1;function YGa(a){return Ye(a)}YGa.X=1;function ZGa(a,d){v[c[c[a]+6]](a,d)}ZGa.X=1;function $Ga(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}$Ga.X=1;function aHa(a,d){return v[c[c[a]+5]](a,d)}aHa.X=1;function bHa(a){return xf(a)}bHa.X=1;function cHa(a){return zf(a)}cHa.X=1;function dHa(a){return Me(a)}dHa.X=1;function eHa(a){return Bf(a)}eHa.X=1;function fHa(a){return v[c[c[a]+11]](a)}fHa.X=1;function gHa(a,d){v[c[c[a]+10]](a,d)}gHa.X=1;function hHa(a){return Gf(a)}hHa.X=1;function iHa(a){return Kf(a)}iHa.X=1;function jHa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}jHa.X=1;function kHa(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}kHa.X=1;function lHa(a){return v[c[c[a]+4]](a)}lHa.X=1;function mHa(a){return k[a+26]}mHa.X=1;function nHa(a){return k[a+25]}nHa.X=1;function oHa(a,d){k[a+21]=d}oHa.X=1;function pHa(a){return k[a+24]}pHa.X=1;function qHa(a,d){k[a+23]=d}qHa.X=1;function rHa(a,d){k[a+22]=d}rHa.X=1;function sHa(a){return k[a+23]}sHa.X=1;function tHa(a){return k[a+21]}tHa.X=1;function uHa(a,d){k[a+24]=d}uHa.X=1;function vHa(a,d){k[a+25]=d}vHa.X=1;function wHa(a,d){k[a+26]=d}wHa.X=1;function xHa(a){return k[a+22]}xHa.X=1;function yHa(a,d){c[a+1]=d}yHa.X=1;function zHa(a){return a+2}zHa.X=1;function AHa(a){return c[a]}AHa.X=1;function BHa(a,d){k[a+10]=d}BHa.X=1;function CHa(a,d){c[a]=d}CHa.X=1;function DHa(a){return k[a+10]}DHa.X=1;function EHa(a){return c[a+1]}EHa.X=1;function FHa(a){return a+6}FHa.X=1;function GHa(a){return c[a+15]}GHa.X=1;function HHa(a,d){v[c[c[a]+14]](a,d)}HHa.X=1;function IHa(a){return Uf(a)}IHa.X=1;function JHa(a){return Ie(a)}JHa.X=1;function KHa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}KHa.X=1;function LHa(a){return v[c[c[a]+2]](a)}LHa.X=1;function MHa(a,d){NHa(a,d)}MHa.X=1;function NHa(a,d){var e=b;b+=7;var f,g=e+1,h=e+2,i=e+6;k[a+21]=k[d+4];k[a+22]=k[d+5];k[a+23]=k[d+6];k[a+24]=k[d+7];k[a+26]=k[d+8];f=c[d+10];c[e]=0;PV(a+4,f,e);f=0;var j=(f|0)<(c[d+10]|0);a:do{if(j){for(var l=a+4;;){if(c[QV(l,f)]=c[c[d]+f],f+=1,(f|0)>=(c[d+10]|0)){break a}}}}while(0);f=c[d+9];c[g]=0;PV(a+9,f,g);f=0;g=(f|0)<(c[d+9]|0);a:do{if(g){for(j=a+9;;){if(c[QV(j,f)]=c[c[d+1]+f],f+=1,(f|0)>=(c[d+9]|0)){break a}}}}while(0);f=c[d+11];cE(h);OHa(a+14,f,h);f=0;h=(f|0)<(c[d+11]|0);a:do{if(h){for(var g=a+14,j=a+14,l=a+14,m=a+14;;){if(k[RV(g,f)+1]=k[(f<<2)+c[d+2]+1],k[RV(j,f)+2]=k[(f<<2)+c[d+2]+2],k[RV(l,f)+3]=k[(f<<2)+c[d+2]+3],c[RV(m,f)]=c[(f<<2)+c[d+2]],f+=1,(f|0)>=(c[d+11]|0)){break a}}}}while(0);f=c[d+12];c[i]=0;PHa(a+19,f,i);f=0;i=(f|0)<(c[d+12]|0);a:do{if(i){for(h=a+19;;){if(c[QHa(h,f)]=c[c[d+3]+f],f+=1,(f|0)>=(c[d+12]|0)){break a}}}}while(0);b=e}NHa.X=1;function RHa(a,d,e){return v[c[c[a]+3]](a,d,e)}RHa.X=1;function SHa(a){0!=(a|0)&&xe(a)}SHa.X=1;function THa(a,d){var e=a+2;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}THa.X=1;function UHa(a,d,e,f,g){var h=xb(44);SV(h,a,d,e,f,g);return h}UHa.X=1;function VHa(a,d){var e=a+6;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}VHa.X=1;function WHa(a){return GHa(a)}WHa.X=1;function XHa(a,d,e,f,g,h,i,j){return TV(a,d,e,f,g,h,i,j)}XHa.X=1;function TV(a,d,e,f,g,h,i,j){var l=b;b+=6;var m=l+3;UV(a,l,d,0);UV(a,m,e,1);d=YHa(a);e=VV(a,d);c[e+4]=d;c[e]=f;c[e+1]=g;c[e+2]=h;c[e+3]=j;for(var f=c[a+15]<<1,g=0,h=a+17,j=a+19,n=a+19,p=a+19,r=a+19,s=a+19,t=a+19;;){var w=c[h]+g+16;c[w]+=2;var w=(f+1<<1)+c[j+g],x=(f-1<<1)+c[n+g];c[w]=c[x];k[w]=k[x];c[w+1]=c[x+1];k[w+1]=k[x+1];c[(f-1<<1)+c[p+g]]=c[l+g];c[(f-1<<1)+c[r+g]+1]=d;c[(f<<1)+c[s+g]]=c[m+g];c[(f<<1)+c[t+g]+1]=d;c[e+(g+13)]=f-1;c[e+(g+16)]=f;g=w=g+1;if(3<=w>>>0){break}}WV(a,0,c[e+13],i,0);XV(a,0,c[e+16],i,0);WV(a,1,c[e+14],i,0);XV(a,1,c[e+17],i,0);WV(a,2,c[e+15],i,1);XV(a,2,c[e+18],i,1);b=l;return d}TV.X=1;function ZHa(a,d,e,f){UV(a,d,e,f)}ZHa.X=1;function $Ha(a){return c[a+26]}$Ha.X=1;function YV(a,d,e){var f;$2=a;var g=a=0;a:for(;;){if(3>(g|0)){g=c[d+(a+16)]>>>0<c[e+(a+13)]>>>0;do{if(!g&&c[e+(a+16)]>>>0>=c[d+(a+13)]>>>0){a=g=a+1;continue a}}while(0);f=0;break}f=1;break}return f}YV.X=1;function UV(a,d,e,f){var g=b;b+=8;var h=g+4;N(h,e,a+3);ig(g,h,a+11);c[d]=0>=k[g]?f:k[g]>=c[a+2]>>>0?c[a+1]&c[a+2]|f:Math.floor(k[g])&c[a+1]|f;c[d+1]=0>=k[g+1]?f:k[g+1]>=c[a+2]>>>0?c[a+1]&c[a+2]|f:Math.floor(k[g+1])&c[a+1]|f;c[d+2]=0>=k[g+2]?f:k[g+2]>=c[a+2]>>>0?c[a+1]&c[a+2]|f:Math.floor(k[g+2])&c[a+1]|f;b=g}UV.X=1;function aIa(a,d,e){ZV(a,d,e)}aIa.X=1;function ZV(a,d,e){var f,g,h,i,j;f=VV(a,d);g=c[a+25];v[c[c[g]+14]](g)||(g=c[a+25],v[c[c[g]+4]](g,f,e));g=c[a+15]<<1;h=0;for(var l=a+17;;){var m=c[l]+h+16;c[m]-=2;h=m=h+1;if(3<=(m|0)){break}}h=0;for(var l=a+19,m=a+2,n=a+2,p=a+2;!(i=c[l+h],j=c[f+(h+16)],c[(j<<1)+i]=c[m],bIa(a,h,j,e,0),j=c[f+(h+13)],c[(j<<1)+i]=c[n],cIa(a,h,j,e,0),c[(g-1<<1)+i+1]=0,c[(g-1<<1)+i]=c[p],h=i=h+1,3<=(i|0));){}dIa(a,d)}ZV.X=1;function eIa(a){return $Ha(a)}eIa.X=1;function fIa(a,d){gIa(a,d)}fIa.X=1;function hIa(a,d,e,f){var g=b;b+=14;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13,r=c[c[a]+6];k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);v[r](a,d,e,f,g,l);b=g}hIa.X=1;function iIa(a,d,e,f,g){var h=b;b+=7;var i=h+4,j=h+5,l=h+6,m=c[c[a]+6];k[i]=0;k[j]=0;k[l]=0;H(h,i,j,l);v[m](a,d,e,f,g,h);b=h}iIa.X=1;function jIa(a,d,e,f,g,h){v[c[c[a]+6]](a,d,e,f,g,h)}jIa.X=1;function kIa(a,d,e,f,g){v[c[c[a]+4]](a,d,e,f,g)}kIa.X=1;function lIa(a,d){v[c[c[a]+12]](a,d)}lIa.X=1;function mIa(a,d,e){return YV(a,d,e)}mIa.X=1;function nIa(a,d,e,f){v[c[c[a]+5]](a,d,e,f)}nIa.X=1;function oIa(a,d,e,f,g){$V(a,d,e,f,g)}oIa.X=1;function $V(a,d,e,f,g){var h=b;b+=6;var i=h+3,j,l,m,n,d=VV(a,d);UV(a,h,e,0);UV(a,i,f,1);for(var e=0,f=a+19,p=a+19,r=a+19,s=a+19;!(j=c[d+(e+13)],l=c[d+(e+16)],m=c[h+e]-c[(j<<1)+c[f+e]],n=c[i+e]-c[(l<<1)+c[p+e]],c[(j<<1)+c[r+e]]=c[h+e],c[(l<<1)+c[s+e]]=c[i+e],0>(m|0)&&WV(a,e,j,g,1),0<(n|0)&&bIa(a,e,l,g,1),0<(m|0)&&cIa(a,e,j,g,1),0>(n|0)&&XV(a,e,l,g,1),e=j=e+1,3<=(j|0));){}b=h}$V.X=1;function aW(a){return Ue(a,16)}aW.X=1;function pIa(a){v[c[c[a]+13]](a)}pIa.X=1;function qIa(a,d,e,f,g,h,i,j,l){return v[c[c[a]+2]](a,d,e,f,g,h,i,j,l)}qIa.X=1;function rIa(a,d){var e=aW(124);bW(e,a,d,15e5,0,0);return e}rIa.X=1;function sIa(a,d,e){var f=aW(124);bW(f,a,d,e,0,0);return f}sIa.X=1;function tIa(a,d,e,f){var g=aW(124);bW(g,a,d,e,f,0);return g}tIa.X=1;function uIa(a,d,e,f,g){var g=g&1,h=aW(124);bW(h,a,d,e,f,g&1);return h}uIa.X=1;function vIa(a,d){c[a+26]=d}vIa.X=1;function VV(a,d){return c[a+17]+20*d}VV.X=1;function wIa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}wIa.X=1;function xIa(a,d){vIa(a,d)}xIa.X=1;function yIa(a,d){v[c[c[a]+8]](a,d)}yIa.X=1;function zIa(a){return v[c[c[a]+9]](a)}zIa.X=1;function AIa(a,d,e,f){BIa(a,d,e,f)}AIa.X=1;function BIa(a,d,e,f){var g=b;b+=12;var h=g+3,i=g+6,j=g+7,l=g+8,m=g+9,n=g+10,p=g+11;c[g]=c[(c[d+13]<<1)+c[a+19]]&65535;c[h]=c[(c[d+16]<<1)+c[a+19]]+1&65535;c[g+1]=c[(c[d+14]<<1)+c[a+20]]&65535;c[h+1]=c[(c[d+17]<<1)+c[a+20]]+1&65535;c[g+2]=c[(c[d+15]<<1)+c[a+21]]&65535;c[h+2]=c[(c[d+18]<<1)+c[a+21]]+1&65535;k[i]=(c[g]&65535)/k[a+11];k[j]=(c[g+1]&65535)/k[a+11+1];k[l]=(c[g+2]&65535)/k[a+11+2];pe(e,i,j,l);xn(e,a+3);k[m]=(c[h]&65535)/k[a+11];k[n]=(c[h+1]&65535)/k[a+11+1];k[p]=(c[h+2]&65535)/k[a+11+2];pe(f,m,n,p);xn(f,a+3);b=g}BIa.X=1;function CIa(a,d,e,f){v[c[c[a]+7]](a,d,e,f)}CIa.X=1;function DIa(a,d,e){v[c[c[a]+11]](a,d,e)}DIa.X=1;function EIa(a,d,e){v[c[c[a]+3]](a,d,e)}EIa.X=1;function FIa(a,d){return VV(a,d)}FIa.X=1;function GIa(a,d){v[c[c[a]+4]](a,d)}GIa.X=1;function HIa(a,d,e,f,g){return v[c[c[a]+3]](a,d,e,f,g)}HIa.X=1;function IIa(a,d,e,f,g){v[c[c[a]+2]](a,d,e,f,g)}IIa.X=1;function JIa(a,d,e){v[c[c[a]+8]](a,d,e)}JIa.X=1;function KIa(a){return Ge(a)}KIa.X=1;function LIa(a,d){var e=b;b+=4;0==c[MIa]<<24>>24&&Hb(MIa);v[c[c[a]+15]](e,a,d);c[cW]=c[e];k[cW]=k[e];c[cW+1]=c[e+1];k[cW+1]=k[e+1];c[cW+2]=c[e+2];k[cW+2]=k[e+2];c[cW+3]=c[e+3];k[cW+3]=k[e+3];b=e;return cW}LIa.X=1;function NIa(a,d){Je(a,d)}NIa.X=1;function OIa(a){return Le(a)}OIa.X=1;function PIa(a,d,e){return v[c[c[a]+13]](a,d,e)}PIa.X=1;function QIa(a){return v[c[c[a]+7]](a)}QIa.X=1;function RIa(a){return v[c[c[a]+19]](a)}RIa.X=1;function SIa(a){return Ye(a)}SIa.X=1;function TIa(a){return dW(a)}TIa.X=1;function dW(a){return k[a+7]*k[a+3]}dW.X=1;function UIa(a,d,e,f){df(a,d,e,f)}UIa.X=1;function VIa(a){return v[c[c[a]+12]](a)}VIa.X=1;function WIa(a){return v[c[c[a]+9]](a)}WIa.X=1;function XIa(a){return a+3}XIa.X=1;function YIa(a,d){var e=b;b+=4;0==c[ZIa]<<24>>24&&Hb(ZIa);kf(e,a,d);c[eW]=c[e];k[eW]=k[e];c[eW+1]=c[e+1];k[eW+1]=k[e+1];c[eW+2]=c[e+2];k[eW+2]=k[e+2];c[eW+3]=c[e+3];k[eW+3]=k[e+3];b=e;return eW}YIa.X=1;function $Ia(a,d){Jf(a,d)}$Ia.X=1;function aJa(a,d){v[c[c[a]+6]](a,d)}aJa.X=1;function bJa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}bJa.X=1;function cJa(a,d){dJa(a,d)}cJa.X=1;function dJa(a,d){k[a+7]=d;fW(a,d)}dJa.X=1;function eJa(a,d){var e=b;b+=4;0==c[fJa]<<24>>24&&Hb(fJa);tf(e,a,d);c[gW]=c[e];k[gW]=k[e];c[gW+1]=c[e+1];k[gW+1]=k[e+1];c[gW+2]=c[e+2];k[gW+2]=k[e+2];c[gW+3]=c[e+3];k[gW+3]=k[e+3];b=e;return gW}eJa.X=1;function gJa(a,d){return v[c[c[a]+5]](a,d)}gJa.X=1;function hJa(a){return xf(a)}hJa.X=1;function iJa(a){return zf(a)}iJa.X=1;function jJa(a){return Me(a)}jJa.X=1;function kJa(a){return Bf(a)}kJa.X=1;function lJa(a){return v[c[c[a]+11]](a)}lJa.X=1;function mJa(a,d,e){v[c[c[a]+20]](a,d,e)}mJa.X=1;function nJa(a,d){v[c[c[a]+10]](a,d)}nJa.X=1;function oJa(a){return Gf(a)}oJa.X=1;function pJa(a){var d=qJa(52);hW(d,a);return d}pJa.X=1;function qJa(a){return Ue(a,16)}qJa.X=1;function rJa(a,d){var e=b;b+=4;0==c[sJa]<<24>>24&&Hb(sJa);v[c[c[a]+16]](e,a,d);c[iW]=c[e];k[iW]=k[e];c[iW+1]=c[e+1];k[iW+1]=k[e+1];c[iW+2]=c[e+2];k[iW+2]=k[e+2];c[iW+3]=c[e+3];k[iW+3]=k[e+3];b=e;return iW}rJa.X=1;function tJa(a){return Kf(a)}tJa.X=1;function uJa(a){return Mf(a)}uJa.X=1;function vJa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}vJa.X=1;function wJa(a,d,e,f){v[c[c[a]+17]](a,d,e,f)}wJa.X=1;function xJa(a){return a+7}xJa.X=1;function yJa(a,d,e){var f=b;b+=1;k[f]=e;v[c[c[a]+3]](a,d,f);b=f}yJa.X=1;function zJa(a){return v[c[c[a]+4]](a)}zJa.X=1;function AJa(a,d){v[c[c[a]+14]](a,d)}AJa.X=1;function BJa(){return 0}BJa.X=1;function CJa(){}CJa.X=1;function DJa(){}DJa.X=1;function EJa(){}EJa.X=1;function FJa(a,d){c[a+36]=d}FJa.X=1;function GJa(a){return c[a]}GJa.X=1;function HJa(a,d){c[a+1]=d}HJa.X=1;function IJa(a,d){c[a]=d}IJa.X=1;function JJa(a){return c[a+1]}JJa.X=1;function KJa(a,d,e){$1=a;a=d;for(d=0;;){var f=(c[a]&255)-(c[e]&255),d=f;if(0!=(f|0)){var g=f;break}if(0==c[e]<<24>>24){g=d;break}a+=1;e+=1}0>(g|0)?d=-1:0<(d|0)&&(d=1);return d}KJa.X=1;function LJa(a){return c[a+1]}LJa.X=1;function MJa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}MJa.X=1;function NJa(a,d,e,f,g,h,i){Tf(a,d,e,f,g,h,i)}NJa.X=1;function OJa(a){return Uf(a)}OJa.X=1;function PJa(a){return Ie(a)}PJa.X=1;function QJa(a,d){FJa(a,d)}QJa.X=1;function RJa(a){So(a)}RJa.X=1;function SJa(a,d,e){return 0!=(v[c[c[a]+4]](a,d,e)|0)}SJa.X=1;function TJa(a,d,e,f){return v[c[c[a]+2]](a,d,e,f&1)}TJa.X=1;function UJa(a){return a+26}UJa.X=1;function VJa(a,d,e){Wo(a,d,e,1)}VJa.X=1;function WJa(a,d,e,f){Wo(a,d,e,f)}WJa.X=1;function XJa(a,d,e,f){Xo(a,d,e,f)}XJa.X=1;function YJa(a){return Go(a)}YJa.X=1;function ZJa(a){return Zo(a)}ZJa.X=1;function $Ja(a){return a+31}$Ja.X=1;function aKa(a,d,e,f){$o(a,d,e,f)}aKa.X=1;function bKa(a,d,e,f){ap(a,d,e,f)}bKa.X=1;function cKa(a,d,e){return dKa(a,d,e&1)}cKa.X=1;function eKa(a,d,e,f){fp(a,d,e,f)}eKa.X=1;function fKa(a,d){v[c[c[a]+6]](a,d)}fKa.X=1;function gKa(a){return v[c[c[a]+3]](a)}gKa.X=1;function hKa(a){if(0!=(a|0)){v[c[c[a]+1]](a)}}hKa.X=1;function iKa(a){return Ue(a,16)}iKa.X=1;function jKa(a,d){v[c[c[a]+5]](a,d)}jKa.X=1;function kKa(a){return a+37}kKa.X=1;function lKa(a,d){var e=b;b+=4;0==c[mKa]<<24>>24&&Hb(mKa);qp(e,a,d);c[jW]=c[e];k[jW]=k[e];c[jW+1]=c[e+1];k[jW+1]=k[e+1];c[jW+2]=c[e+2];k[jW+2]=k[e+2];c[jW+3]=c[e+3];k[jW+3]=k[e+3];b=e;return jW}lKa.X=1;function nKa(a,d,e,f,g,h){sp(a,d,e,f,g,h)}nKa.X=1;function oKa(a){0!=(a|0)&&xe(a)}oKa.X=1;function pKa(a){var d=xb(8);qKa(d,a);return d}pKa.X=1;function rKa(a,d){return sKa(a,d)}rKa.X=1;function sKa(a,d){return(c[a]|0)==(c[d]|0)?1:0==(KJa(a,c[a],c[d])|0)}sKa.X=1;function tKa(a){return JJa(a)}tKa.X=1;function uKa(a,d,e){return KJa(a,d,e)}uKa.X=1;function vKa(){}vKa.X=1;function wKa(a){xe(a)}wKa.X=1;function WV(a,d,e,f,g){var h=b;b+=2;var i,j,l,m;$5=f;f=g&1;e=(e<<1)+c[a+(d+19)];g=e-2;i=VV(a,c[e+1]);var n=c[e]>>>0<c[g]>>>0;a:do{if(n){for(var p=a+25,r=a+26,s=a+26,t=h,w=h;;){if(j=VV(a,c[g+1]),l=d,0!=(kW(g)|0)?(l=1<<l&3,m=1<<l&3,f&1&&lW(a,i,j,l,m)&&(l=c[p],v[c[c[l]+2]](l,i,j),0!=(c[r]|0)&&(l=c[s],v[c[c[l]+2]](l,i,j))),j+=d+16):j+=l+13,c[j]+=1,j=i+(d+13),c[j]-=1,j=e,c[t]=c[j],k[t]=k[j],c[t+1]=c[j+1],k[t+1]=k[j+1],j=e,l=g,c[j]=c[l],k[j]=k[l],c[j+1]=c[l+1],k[j+1]=k[l+1],j=g,c[j]=c[w],k[j]=k[w],c[j+1]=c[w+1],k[j+1]=k[w+1],e-=2,g-=2,c[e]>>>0>=c[g]>>>0){break a}}}}while(0);b=h}WV.X=1;function xKa(){var a=iKa(172);mW(a);return a}xKa.X=1;function kW(a){return c[a]&1}kW.X=1;function lW(a,d,e,f,g){var h;$2=a;c[d+(f+16)]>>>0<c[e+(f+13)]>>>0?a=6:c[e+(f+16)]>>>0<c[d+(f+13)]>>>0?a=6:c[d+(g+16)]>>>0<c[e+(g+13)]>>>0?a=6:c[e+(g+16)]>>>0<c[d+(g+13)]>>>0?a=6:(h=1,a=8);6==a&&(h=0);return h}lW.X=1;function nW(a,d){c[a+13]=d}nW.X=1;function yKa(a){return c[a+13]}yKa.X=1;function bIa(a,d,e,f,g){var h=b;b+=2;var i,j,l,m;$5=f;f=g&1;e=(e<<1)+c[a+(d+19)];g=e+2;i=VV(a,c[e+1]);for(var n=a+25,p=a+26,r=a+26;0!=(c[g+1]|0)&&c[e]>>>0>=c[g]>>>0;){j=VV(a,c[g+1]);l=1<<d&3;m=1<<l&3;if(0!=(kW(g)|0)){j+=d+16}else{if(f&1&&lW(a,i,j,l,m)){l=VV(a,c[e+1]);m=VV(a,c[g+1]);var s=c[n];v[c[c[s]+2]](s,l,m);0!=(c[p]|0)&&(s=c[r],v[c[c[s]+2]](s,l,m))}j+=d+13}c[j]-=1;j=i+(d+16);c[j]+=1;j=e;c[h]=c[j];k[h]=k[j];c[h+1]=c[j+1];k[h+1]=k[j+1];j=e;l=g;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];j=g;c[j]=c[h];k[j]=k[h];c[j+1]=c[h+1];k[j+1]=k[h+1];e+=2;g+=2}b=h}bIa.X=1;function cIa(a,d,e,f,g){var h=b;b+=2;var i,j,l,m,n,p,r,g=g&1,e=(e<<1)+c[a+(d+19)];i=e+2;j=VV(a,c[e+1]);for(var s=a+25,t=a+26,w=a+26;0!=(c[i+1]|0)&&c[e]>>>0>=c[i]>>>0;){l=VV(a,c[i+1]),0!=(kW(i)|0)?(m=VV(a,c[e+1]),n=VV(a,c[i+1]),p=1<<d&3,r=1<<p&3,g&1&&lW(a,m,n,p,r)&&(p=c[s],v[c[c[p]+3]](p,m,n,f),0!=(c[t]|0)&&(p=c[w],v[c[c[p]+3]](p,m,n,f))),l+=d+16):l+=d+13,c[l]-=1,l=j+(d+13),c[l]+=1,l=e,c[h]=c[l],k[h]=k[l],c[h+1]=c[l+1],k[h+1]=k[l+1],l=e,m=i,c[l]=c[m],k[l]=k[m],c[l+1]=c[m+1],k[l+1]=k[m+1],l=i,c[l]=c[h],k[l]=k[h],c[l+1]=c[h+1],k[l+1]=k[h+1],e+=2,i+=2}b=h}cIa.X=1;function XV(a,d,e,f,g){var h=b;b+=2;var i,j,l,m,n,p,r,g=g&1,e=(e<<1)+c[a+(d+19)];i=e-2;j=VV(a,c[e+1]);var s=c[e]>>>0<c[i]>>>0;a:do{if(s){for(var t=h,w=h,x=a+25,y=a+26,z=a+26;;){if(l=VV(a,c[i+1]),0!=(kW(i)|0)?l+=d+16:(m=VV(a,c[e+1]),n=VV(a,c[i+1]),p=1<<d&3,r=1<<p&3,g&1&&lW(a,m,n,p,r)&&(p=c[x],v[c[c[p]+3]](p,m,n,f),0!=(c[y]|0)&&(p=c[z],v[c[c[p]+3]](p,m,n,f))),l+=d+13),c[l]+=1,l=j+(d+16),c[l]-=1,l=e,c[t]=c[l],k[t]=k[l],c[t+1]=c[l+1],k[t+1]=k[l+1],l=e,m=i,c[l]=c[m],k[l]=k[m],c[l+1]=c[m+1],k[l+1]=k[m+1],l=i,c[l]=c[w],k[l]=k[w],c[l+1]=c[w+1],k[l+1]=k[w+1],e-=2,i-=2,c[e]>>>0>=c[i]>>>0){break a}}}}while(0);b=h}XV.X=1;function dIa(a,d){nW(VV(a,d),c[a+18]);c[a+18]=d;var e=a+15;c[e]-=1}dIa.X=1;function ig(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=k[d]*k[e];k[g]=k[d+1]*k[e+1];k[h]=k[d+2]*k[e+2];H(a,f,g,h);b=f}ig.X=1;function N(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=k[d]-k[e];k[g]=k[d+1]-k[e+1];k[h]=k[d+2]-k[e+2];H(a,f,g,h);b=f}N.X=1;function YHa(a){var d;d=c[a+18];c[a+18]=yKa(VV(a,d));a+=15;c[a]+=1;return d}YHa.X=1;function us(a,d,e,f,g){var h=b;b+=2;var i,j,l,m;$5=f;f=g&1;e=((e&65535)<<1)+c[a+(d+19)];g=e-2;i=ts(a,c[e+1]);var n=(c[e]&65535|0)<(c[g]&65535|0);a:do{if(n){for(var p=a+25,r=a+26,s=a+26,t=h,w=h;;){if(j=ts(a,c[g+1]),l=d,0!=oW(g)<<16>>16?(l=1<<l&3,m=1<<l&3,f&1&&pW(a,i,j,l,m)&&(l=c[p],v[c[c[l]+2]](l,i,j),0!=(c[r]|0)&&(l=c[s],v[c[c[l]+2]](l,i,j))),j+=d+16):j+=l+13,c[j]+=1,j=i+(d+13),c[j]-=1,j=e,c[t]=c[j],k[t]=k[j],c[t+1]=c[j+1],k[t+1]=k[j+1],j=e,l=g,c[j]=c[l],k[j]=k[l],c[j+1]=c[l+1],k[j+1]=k[l+1],j=g,c[j]=c[w],k[j]=k[w],c[j+1]=c[w+1],k[j+1]=k[w+1],e-=2,g-=2,(c[e]&65535|0)>=(c[g]&65535|0)){break a}}}}while(0);b=h}us.X=1;function zKa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}zKa.X=1;function AKa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}AKa.X=1;function BKa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}BKa.X=1;function oW(a){return c[a]&1}oW.X=1;function pW(a,d,e,f,g){var h;$2=a;(c[d+(f+16)]&65535|0)<(c[e+(f+13)]&65535|0)?a=6:(c[e+(f+16)]&65535|0)<(c[d+(f+13)]&65535|0)?a=6:(c[d+(g+16)]&65535|0)<(c[e+(g+13)]&65535|0)?a=6:(c[e+(g+16)]&65535|0)<(c[d+(g+13)]&65535|0)?a=6:(h=1,a=8);6==a&&(h=0);return h}pW.X=1;function qW(a,d){c[a+13]=d}qW.X=1;function CKa(a){return c[a+13]}CKa.X=1;function rW(a){return c[a+1]}rW.X=1;function sW(a,d){return c[a+3]+d}sW.X=1;function tW(a){return c[a+1]}tW.X=1;function uW(a){return c[a+1]}uW.X=1;function DKa(a,d){return c[a+3]+d}DKa.X=1;function vW(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}vW.X=1;function Fs(a,d,e,f,g){var h=b;b+=2;var i,j,l,m;$5=f;f=g&1;e=((e&65535)<<1)+c[a+(d+19)];g=e+2;i=ts(a,c[e+1]);for(var n=a+25,p=a+26,r=a+26;0!=c[g+1]<<16>>16&&(c[e]&65535|0)>=(c[g]&65535|0);){j=ts(a,c[g+1]);l=1<<d&3;m=1<<l&3;if(0!=oW(g)<<16>>16){j+=d+16}else{if(f&1&&pW(a,i,j,l,m)){l=ts(a,c[e+1]);m=ts(a,c[g+1]);var s=c[n];v[c[c[s]+2]](s,l,m);0!=(c[p]|0)&&(s=c[r],v[c[c[s]+2]](s,l,m))}j+=d+13}c[j]-=1;j=i+(d+16);c[j]+=1;j=e;c[h]=c[j];k[h]=k[j];c[h+1]=c[j+1];k[h+1]=k[j+1];j=e;l=g;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];j=g;c[j]=c[h];k[j]=k[h];c[j+1]=c[h+1];k[j+1]=k[h+1];e+=2;g+=2}b=h}Fs.X=1;function Gs(a,d,e,f,g){var h=b;b+=2;var i,j,l,m,n,p,r,g=g&1,e=((e&65535)<<1)+c[a+(d+19)];i=e+2;j=ts(a,c[e+1]);for(var s=a+25,t=a+26,w=a+26;0!=c[i+1]<<16>>16&&(c[e]&65535|0)>=(c[i]&65535|0);){l=ts(a,c[i+1]),0!=oW(i)<<16>>16?(m=ts(a,c[e+1]),n=ts(a,c[i+1]),p=1<<d&3,r=1<<p&3,g&1&&pW(a,m,n,p,r)&&(p=c[s],v[c[c[p]+3]](p,m,n,f),0!=(c[t]|0)&&(p=c[w],v[c[c[p]+3]](p,m,n,f))),l+=d+16):l+=d+13,c[l]-=1,l=j+(d+13),c[l]+=1,l=e,c[h]=c[l],k[h]=k[l],c[h+1]=c[l+1],k[h+1]=k[l+1],l=e,m=i,c[l]=c[m],k[l]=k[m],c[l+1]=c[m+1],k[l+1]=k[m+1],l=i,c[l]=c[h],k[l]=k[h],c[l+1]=c[h+1],k[l+1]=k[h+1],e+=2,i+=2}b=h}Gs.X=1;function vs(a,d,e,f,g){var h=b;b+=2;var i,j,l,m,n,p,r,g=g&1,e=((e&65535)<<1)+c[a+(d+19)];i=e-2;j=ts(a,c[e+1]);var s=(c[e]&65535|0)<(c[i]&65535|0);a:do{if(s){for(var t=h,w=h,x=a+25,y=a+26,z=a+26;;){if(l=ts(a,c[i+1]),0!=oW(i)<<16>>16?l+=d+16:(m=ts(a,c[e+1]),n=ts(a,c[i+1]),p=1<<d&3,r=1<<p&3,g&1&&pW(a,m,n,p,r)&&(p=c[x],v[c[c[p]+3]](p,m,n,f),0!=(c[y]|0)&&(p=c[z],v[c[c[p]+3]](p,m,n,f))),l+=d+13),c[l]+=1,l=j+(d+16),c[l]-=1,l=e,c[t]=c[l],k[t]=k[l],c[t+1]=c[l+1],k[t+1]=k[l+1],l=e,m=i,c[l]=c[m],k[l]=k[m],c[l+1]=c[m+1],k[l+1]=k[m+1],l=i,c[l]=c[w],k[l]=k[w],c[l+1]=c[w+1],k[l+1]=k[w+1],e-=2,i-=2,(c[e]&65535|0)>=(c[i]&65535|0)){break a}}}}while(0);b=h}vs.X=1;function nia(a,d){qW(ts(a,d),c[a+18]);c[a+18]=d;var e=a+15;c[e]-=1}nia.X=1;function kia(a){var d;d=c[a+18];c[a+18]=CKa(ts(a,d));a+=15;c[a]+=1;return d}kia.X=1;function wW(a){zKa(a,0,rW(a));EKa(a);vW(a)}wW.X=1;function EKa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&FKa(a,c[a+3]),c[a+3]=0)}EKa.X=1;function FKa(a,d){$1=a;yh(d)}FKa.X=1;function GKa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&HKa(a,c[a+3]),c[a+3]=0)}GKa.X=1;function HKa(a,d){$1=a;yh(d)}HKa.X=1;function IKa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&JKa(a,c[a+3]),c[a+3]=0)}IKa.X=1;function qKa(a,d){var e,f;c[a]=d;f=0;var g=0!=c[c[a]+f]<<24>>24,h=-2128831035;a:do{if(g){var i=a;for(e=h;;){if(e^=c[c[i]+f]<<24>>24,e*=16777619,f+=1,0==c[c[a]+f]<<24>>24){var j=e;break a}}}else{j=h}}while(0);c[a+1]=j}qKa.X=1;function fW(a,d){k[a+11]=d}fW.X=1;function QV(a,d){return c[a+3]+d}QV.X=1;function RV(a,d){return(d<<2)+c[a+3]}RV.X=1;function QHa(a,d){return c[a+3]+d}QHa.X=1;function KKa(a){return c[a+2]}KKa.X=1;function xW(a){return c[a+2]}xW.X=1;function LKa(a){return c[a+2]}LKa.X=1;function MKa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}MKa.X=1;function NG(a,d,e,f,g){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=k[g]}NG.X=1;function JKa(a,d){$1=a;yh(d)}JKa.X=1;function hW(a,d){yW(a);c[a]=NKa+2;c[a+1]=8;k[a+7]=d;k[a+11]=d}hW.X=1;function SV(a,d,e,f,g,h){c[a]=d;c[a+1]=e;d=a+2;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];f=a+6;c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];k[a+10]=h}SV.X=1;function PV(a,d,e){var f,g;f=rW(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(rW(a)|0)&&OKa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}PV.X=1;function OHa(a,d,e){var f,g;f=tW(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(tW(a)|0)&&PKa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=(g<<2)+c[i];if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}OHa.X=1;function PHa(a,d,e){var f,g;f=uW(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(uW(a)|0)&&QKa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}PHa.X=1;function QKa(a,d){var e;(KKa(a)|0)<(d|0)&&(e=RKa(a,d),SKa(a,0,uW(a),e),BKa(a,0,uW(a)),IKa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}QKa.X=1;function RKa(a,d){return 0!=(d|0)?TKa(a,d,0):0}RKa.X=1;function SKa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;if(0!=(i|0)){var j=c[h]+d;c[i]=c[j];k[i]=k[j]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}SKa.X=1;function TKa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}TKa.X=1;function PKa(a,d){var e;(xW(a)|0)<(d|0)&&(e=UKa(a,d),VKa(a,0,tW(a),e),AKa(a,0,tW(a)),GKa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}PKa.X=1;function UKa(a,d){return 0!=(d|0)?WKa(a,d,0):0}UKa.X=1;function VKa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<2)+f;if(0!=(i|0)){var j=(d<<2)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}VKa.X=1;function WKa(a,d,e){$1=a;$3=e;return Ue(d<<4,16)}WKa.X=1;function OKa(a,d){var e;(LKa(a)|0)<(d|0)&&(e=XKa(a,d),MKa(a,0,rW(a),e),zKa(a,0,rW(a)),EKa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}OKa.X=1;function XKa(a,d){return 0!=(d|0)?YKa(a,d,0):0}XKa.X=1;function YKa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}YKa.X=1;function MB(a){var d=a;-1>d?a=-1:1<d&&(a=1);return ZKa(a)}MB.X=1;function HFa(a,d,e){var f=b;b+=1;k[f]=1/k[e];$Ka(a,d,f);b=f}HFa.X=1;function $Ka(a,d,e){var f=b;b+=4;var g=f+1,h=f+2,i=f+3;k[f]=k[d]*k[e];k[g]=k[d+1]*k[e];k[h]=k[d+2]*k[e];k[i]=k[d+3]*k[e];NG(a,f,g,h,i);b=f}$Ka.X=1;function aLa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}aLa.X=1;function Cy(a){return c[a+1]}Cy.X=1;function zW(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}zW.X=1;function bLa(a){c[a]=cLa+2;k[a+1]=1;c[a+2]=1;c[a+3]=-1}bLa.X=1;function LEa(a,d,e){var f=b;b+=4;var g=f+1,h=f+2,i=f+3;k[f]=k[d]-k[e];k[g]=k[d+1]-k[e+1];k[h]=k[d+2]-k[e+2];k[i]=k[d+3]-k[e+3];NG(a,f,g,h,i);b=f}LEa.X=1;function MEa(a,d,e){var f=b;b+=4;var g=f+1,h=f+2,i=f+3;k[f]=k[d]+k[e];k[g]=k[d+1]+k[e+1];k[h]=k[d+2]+k[e+2];k[i]=k[d+3]+k[e+3];NG(a,f,g,h,i);b=f}MEa.X=1;function NEa(a,d){var e=b;b+=4;var f=e+1,g=e+2,h=e+3;k[e]=-k[d];k[f]=-k[d+1];k[g]=-k[d+2];k[h]=-k[d+3];NG(a,e,f,g,h);b=e}NEa.X=1;function mBa(a){dLa(a);c[a]=AW+2;zW(a+5);c[a+12]=0}mBa.X=1;function dLa(a){var d=b;b+=3;var e=d+1,f=d+2;c[a]=eLa+2;k[d]=1;k[e]=1;k[f]=1;H(a+1,d,e,f);b=d}dLa.X=1;function fLa(a){aLa(a,0,Cy(a));gLa(a);zW(a)}fLa.X=1;function gLa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&hLa(a,c[a+3]),c[a+3]=0)}gLa.X=1;function hLa(a,d){$1=a;yh(d)}hLa.X=1;function hV(a,d,e,f,g,h,i){c[a]=f;c[a+1]=g;c[a+2]=h;f=a+5;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];d=a+9;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[a+3]=i}hV.X=1;function gV(a){c[a]=0;c[a+3]=0}gV.X=1;function LAa(a,d,e){k[a+20]=d;k[a+21]=e;k[a+22]=0}LAa.X=1;function IAa(a,d,e,f,g,h,i){var j=b;b+=25;var l=j+1,m=j+5,n=j+9,p=j+13,r=j+14,s=j+18,t=j+22,w=j+23,x=j+24;k[j]=g;N(m,d,a);wC(l,m,j);c[h]=c[l];k[h]=k[l];c[h+1]=c[l+1];k[h+1]=k[l+1];c[h+2]=c[l+2];k[h+2]=k[l+2];c[h+3]=c[l+3];k[h+3]=k[l+3];iLa(e,f)?(jLa(e,f,n,p),Q(s,n,p),wC(r,s,j),c[i]=c[r],k[i]=k[r],c[i+1]=c[r+1],k[i+1]=k[r+1],c[i+2]=c[r+2],k[i+2]=k[r+2],c[i+3]=c[r+3],k[i+3]=k[r+3]):(k[t]=0,k[w]=0,k[x]=0,pe(i,t,w,x));b=j}IAa.X=1;function wC(a,d,e){var f=b;b+=1;k[f]=1/k[e];Q(a,d,f);b=f}wC.X=1;function iLa(a,d){return hG(a,d)^1}iLa.X=1;function jLa(a,d,e,f){var g=b;b+=24;var h=g+4,i=g+8,j=g+12,l=g+16,m=g+20,n=g+21,p=g+22,r=g+23;KEa(g,a,d);EV(i,a);BW(h,g,i);k[f]=KV(h);H(j,h,h+1,h+2);c[e]=c[j];k[e]=k[j];c[e+1]=c[j+1];k[e+1]=k[j+1];c[e+2]=c[j+2];k[e+2]=k[j+2];c[e+3]=c[j+3];k[e+3]=k[j+3];k[e+3]=0;a=Um(e);1.4210854715202004e-14>a?(k[m]=1,k[n]=0,k[p]=0,H(l,m,n,p),c[e]=c[l],k[e]=k[l],c[e+1]=c[l+1],k[e+1]=k[l+1],c[e+2]=c[l+2],k[e+2]=k[l+2],c[e+3]=c[l+3],k[e+3]=k[l+3]):(k[r]=ec(a),KB(e,r));b=g}jLa.X=1;function Q(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=k[d]*k[e];k[g]=k[d+1]*k[e];k[h]=k[d+2]*k[e];H(a,f,g,h);b=f}Q.X=1;function BW(a,d,e){var f=b;b+=4;var g=f+1,h=f+2,i=f+3;k[f]=k[d+3]*k[e]+k[d]*k[e+3]+k[d+1]*k[e+2]-k[d+2]*k[e+1];k[g]=k[d+3]*k[e+1]+k[d+1]*k[e+3]+k[d+2]*k[e]-k[d]*k[e+2];k[h]=k[d+3]*k[e+2]+k[d+2]*k[e+3]+k[d]*k[e+1]-k[d+1]*k[e];k[i]=k[d+3]*k[e+3]-k[d]*k[e]-k[d+1]*k[e+1]-k[d+2]*k[e+2];NG(a,f,g,h,i);b=f}BW.X=1;function fV(a,d,e){bLa(a);c[a]=kLa+2;var f=a+4;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];d=a+8;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[a+20]=0}fV.X=1;function lLa(){}lLa.X=1;function mLa(a){xe(a)}mLa.X=1;function yCa(a,d){var e=b;b+=15;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11;CW(a);c[a]=nLa+2;c[a+1]=0;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);ig(j,d,a+3);N(i,j,e);f=a+7;c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];c[f+2]=c[i+2];k[f+2]=k[i+2];c[f+3]=c[i+3];k[f+3]=k[i+3];b=e}yCa.X=1;function oLa(a,d){var e;e=0!=(c[a+3]<<16>>16&c[d+1]<<16>>16|0)&1;e=(e&1?0!=(c[d+2]<<16>>16&c[a+2]<<16>>16|0):0)&1;return e&1}oLa.X=1;function Pwa(a){k[a]=5.880000114440918;k[a+1]=.8299999833106995;k[a+2]=.8799999952316284;k[a+3]=500;k[a+4]=10.5;k[a+5]=6e3}Pwa.X=1;function DW(a,d,e){var f=b;b+=4;k[a+1]=k[d+10];c[a+20]=c[d];var g=a+12;e&1?(e=d+2,c[g]=c[e],k[g]=k[e],c[g+1]=c[e+1],k[g+1]=k[e+1],c[g+2]=c[e+2],k[g+2]=k[e+2],c[g+3]=c[e+3],k[g+3]=k[e+3]):(Bo(f,c[a+20]+1,d+2),c[g]=c[f],k[g]=k[f],c[g+1]=c[f+1],k[g+1]=k[f+1],c[g+2]=c[f+2],k[g+2]=k[f+2],c[g+3]=c[f+3],k[g+3]=k[f+3]);a+=16;g=d+6;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];d=k[d+10];b=f;return d}DW.X=1;function Bo(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=J(0+d,e);k[g]=J(4+d,e);k[h]=J(8+d,e);H(a,f,g,h);b=f}Bo.X=1;function pLa(){}pLa.X=1;function qLa(a){xe(a)}qLa.X=1;function EU(a,d,e,f,g){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];d=a+4;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];e=a+16;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];k[a+20]=g;k[a+21]=0;k[a+22]=0;c[a+27]=0;k[a+28]=0;c[a+29]=0;f=a+30;c[f]=0;k[f]=0;c[f+1]=0;k[f+1]=0;c[f+2]=0;k[f+2]=0;c[f+3]=0;k[f+3]=0;c[f+4]=0;k[f+4]=0;c[f+5]=0;k[f+5]=0;c[f+6]=0;k[f+6]=0;k[a+52]=0;k[a+60]=0;k[a+68]=0}EU.X=1;function CU(a){c[a+27]=0;k[a+28]=0;c[a+29]=0;a+=30;c[a]=0;k[a]=0;c[a+1]=0;k[a+1]=0;c[a+2]=0;k[a+2]=0;c[a+3]=0;k[a+3]=0;c[a+4]=0;k[a+4]=0;c[a+5]=0;k[a+5]=0;c[a+6]=0;k[a+6]=0}CU.X=1;function eP(a){var d,a=d=a%6.2831854820251465;return a=-3.1415927410125732>d?a+6.2831854820251465:3.1415927410125732<a?d-6.2831854820251465:d}eP.X=1;function QQ(a){k[a+32]=0xde0b6b000000000;c[a+33]=0}QQ.X=1;function wQ(a,d,e,f,g){k[a]=d;c[a+1]=e;c[a+18]=f;d=a+19;c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];c[d+2]=c[g+2];k[d+2]=k[g+2];c[d+3]=c[g+3];k[d+3]=k[g+3];k[a+23]=0;k[a+24]=0;k[a+25]=.5;k[a+26]=0;k[a+27]=.800000011920929;k[a+28]=1;c[a+29]=0;k[a+30]=.004999999888241291;k[a+31]=.009999999776482582;k[a+32]=.009999999776482582;k[a+33]=.009999999776482582;eQ(a+2)}wQ.X=1;function uQ(a,d,e){zb(a,d);a+=12;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}uQ.X=1;function sQ(a,d){EW(a,d);var e=a+12,f=d+12;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3]}sQ.X=1;function EW(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];var e=a+4,f=d+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+8;f=d+8;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3]}EW.X=1;function ww(a,d,e){var f=b;b+=9;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8;k[f]=nc(e,0+d);k[g]=xc(e,0+d);k[h]=kc(e,0+d);k[i]=nc(e,4+d);k[j]=xc(e,4+d);k[l]=kc(e,4+d);k[m]=nc(e,8+d);k[n]=xc(e,8+d);k[p]=kc(e,8+d);Db(a,f,g,h,i,j,l,m,n,p);b=f}ww.X=1;function vw(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=J(0+d,e)+k[d+12];k[g]=J(4+d,e)+k[d+12+1];k[h]=J(8+d,e)+k[d+12+2];H(a,f,g,h);b=f}vw.X=1;function lua(a,d){k[d]=k[a];k[d+1]=k[a+4];k[d+2]=k[a+8];k[d+3]=0;k[d+4]=k[a+1];k[d+5]=k[a+4+1];k[d+6]=k[a+8+1];k[d+7]=0;k[d+8]=k[a+2];k[d+9]=k[a+4+2];k[d+10]=k[a+8+2];k[d+11]=0}lua.X=1;function rn(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=nc(e,d);k[g]=xc(e,d);k[h]=kc(e,d);H(a,f,g,h);b=f}rn.X=1;function Tz(a,d,e){EW(a,d);a+=12;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}Tz.X=1;function WP(a,d){var e=b;b+=3;var f=e+1,g=e+2;k[e]=-k[d];k[f]=-k[d+1];k[g]=-k[d+2];H(a,e,f,g);b=e}WP.X=1;function cua(a,d){pe(a,d,d+4,d+8);pe(a+4,d+1,d+5,d+9);pe(a+8,d+2,d+6,d+10)}cua.X=1;function fsa(a,d){var e;c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];e=a+4;var f=d+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+8;f=d+8;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];k[a+12]=k[d+12];k[a+13]=k[d+13];k[a+14]=k[d+14];e=a+15;f=d+15;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+19;f=d+19;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+23;f=d+23;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=0;for(var f=a+27,g=a+30,h=a+34;;){c[f+e]=c[d+(e+27)]&1;k[g+e]=k[d+30+e];k[h+e]=k[d+34+e];var i=e+1;e=i;if(3<=(i|0)){break}}}fsa.X=1;function rLa(){return 0}rLa.X=1;function sLa(){return 0}sLa.X=1;function RB(a,d){k[a]<k[d]&&(k[a]=k[d])}RB.X=1;function BB(a,d){k[d]<k[a]&&(k[a]=k[d])}BB.X=1;function FW(a){c[a]=tLa+2}FW.X=1;function gM(a){c[a]=uLa+2;c[a+1]=0}gM.X=1;function JL(a,d){k[a]*=k[d];var e=a+1;k[e]*=k[d+1];e=a+2;k[e]*=k[d+2];return a}JL.X=1;function jg(a,d){return(d<<2)+c[a+3]}jg.X=1;function th(a){return c[a+1]}th.X=1;function LI(a,d){return c[a+3]+d}LI.X=1;function vLa(a){c[a]=wLa+2;c[a+1]=1;c[a+2]=-1}vLa.X=1;function xLa(a,d){var e;e=0!=(c[a+2]<<16>>16&c[d+1]<<16>>16|0)&1;e=(e&1?0!=(c[d+2]<<16>>16&c[a+1]<<16>>16|0):0)&1;return e&1}xLa.X=1;function jpa(a,d,e,f){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=0}jpa.X=1;function GW(a){c[a]=yLa+2;k[a+1]=1;c[a+2]=0;c[a+3]=1;c[a+4]=-1;c[a+5]=0}GW.X=1;function GM(a){var d=b;b+=18;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5,j=d+6,l=d+7,m=d+8,n=d+9,p=d+10,r=d+11,s=d+12,t=d+13,w=d+14,x=d+15,y=d+16,z=d+17;k[d]=0;k[e]=0;k[f]=0;pe(a,d,e,f);k[g]=0;k[h]=0;k[i]=0;pe(a+4,g,h,i);k[j]=0;k[l]=0;k[m]=0;pe(a+8,j,l,m);k[n]=0;k[p]=0;k[r]=0;pe(a+15,n,p,r);k[s]=.20000000298023224;k[t]=.20000000298023224;k[w]=.20000000298023224;pe(a+19,s,t,w);k[x]=0;k[y]=0;k[z]=0;pe(a+23,x,y,z);k[a+12]=.699999988079071;k[a+13]=1;k[a+14]=.5;e=0;f=a+27;g=a+30;for(a+=34;!(c[f+e]=0,k[g+e]=0,k[a+e]=0,e=h=e+1,3<=(h|0));){}b=d}GM.X=1;function zLa(){}zLa.X=1;function ALa(a){xe(a)}ALa.X=1;function wn(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=k[d]+k[e];k[g]=k[d+1]+k[e+1];k[h]=k[d+2]+k[e+2];H(a,f,g,h);b=f}wn.X=1;function GL(a,d,e,f,g,h,i,j,l,m){var n=b;b+=28;var p=n+4,r=n+8,s=n+12,t=n+16,w=n+20,x=n+24;c[a]=c[h];k[a]=k[h];c[a+1]=c[h+1];k[a+1]=k[h+1];c[a+2]=c[h+2];k[a+2]=k[h+2];c[a+3]=c[h+3];k[a+3]=k[h+3];qn(p,f,a);Bo(n,d,p);d=a+4;c[d]=c[n];k[d]=k[n];c[d+1]=c[n+1];k[d+1]=k[n+1];c[d+2]=c[n+2];k[d+2]=k[n+2];c[d+3]=c[n+3];k[d+3]=k[n+3];WP(t,a);qn(s,g,t);Bo(r,e,s);e=a+8;c[e]=c[r];k[e]=k[r];c[e+1]=c[r+1];k[e+1]=k[r+1];c[e+2]=c[r+2];k[e+2]=k[r+2];c[e+3]=c[r+3];k[e+3]=k[r+3];ig(w,i,a+4);i=a+12;c[i]=c[w];k[i]=k[w];c[i+1]=c[w+1];k[i+1]=k[w+1];c[i+2]=c[w+2];k[i+2]=k[w+2];c[i+3]=c[w+3];k[i+3]=k[w+3];ig(x,l,a+8);l=a+16;c[l]=c[x];k[l]=k[x];c[l+1]=c[x+1];k[l+1]=k[x+1];c[l+2]=c[x+2];k[l+2]=k[x+2];c[l+3]=c[x+3];k[l+3]=k[x+3];k[a+20]=j+J(a+12,a+4)+m+J(a+16,a+8);b=n}GL.X=1;function yra(a,d,e,f,g,h,i){var j=b;b+=31;var l=j+4,m=j+8,n=j+12,p=j+16,r=j+20,s=j+24,t=j+28,w=j+29,x=j+30;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];qn(l,e,g);Bo(j,d,l);e=a+4;c[e]=c[j];k[e]=k[j];c[e+1]=c[j+1];k[e+1]=k[j+1];c[e+2]=c[j+2];k[e+2]=k[j+2];c[e+3]=c[j+3];k[e+3]=k[j+3];WP(p,g);qn(n,f,p);Bo(m,d,n);d=a+8;c[d]=c[m];k[d]=k[m];c[d+1]=c[m+1];k[d+1]=k[m+1];c[d+2]=c[m+2];k[d+2]=k[m+2];c[d+3]=c[m+3];k[d+3]=k[m+3];ig(r,h,a+4);h=a+12;c[h]=c[r];k[h]=k[r];c[h+1]=c[r+1];k[h+1]=k[r+1];c[h+2]=c[r+2];k[h+2]=k[r+2];c[h+3]=c[r+3];k[h+3]=k[r+3];k[t]=0;k[w]=0;k[x]=0;H(s,t,w,x);r=a+16;c[r]=c[s];k[r]=k[s];c[r+1]=c[s+1];k[r+1]=k[s+1];c[r+2]=c[s+2];k[r+2]=k[s+2];c[r+3]=c[s+3];k[r+3]=k[s+3];k[a+20]=i+J(a+12,a+4);b=j}yra.X=1;function DL(a,d,e,f,g,h){var i=b;b+=23;var j=i+1,l=i+2,m=i+3,n=i+7,p=i+11,r=i+15,s=i+19;k[i]=0;k[j]=0;k[l]=0;H(a,i,j,l);Bo(m,e,d);e=a+4;c[e]=c[m];k[e]=k[m];c[e+1]=c[m+1];k[e+1]=k[m+1];c[e+2]=c[m+2];k[e+2]=k[m+2];c[e+3]=c[m+3];k[e+3]=k[m+3];WP(p,d);Bo(n,f,p);d=a+8;c[d]=c[n];k[d]=k[n];c[d+1]=c[n+1];k[d+1]=k[n+1];c[d+2]=c[n+2];k[d+2]=k[n+2];c[d+3]=c[n+3];k[d+3]=k[n+3];ig(r,g,a+4);g=a+12;c[g]=c[r];k[g]=k[r];c[g+1]=c[r+1];k[g+1]=k[r+1];c[g+2]=c[r+2];k[g+2]=k[r+2];c[g+3]=c[r+3];k[g+3]=k[r+3];ig(s,h,a+8);h=a+16;c[h]=c[s];k[h]=k[s];c[h+1]=c[s+1];k[h+1]=k[s+1];c[h+2]=c[s+2];k[h+2]=k[s+2];c[h+3]=c[s+3];k[h+3]=k[s+3];k[a+20]=J(a+12,a+4)+J(a+16,a+8);b=i}DL.X=1;function xra(a,d,e,f,g){var h=b;b+=11;var i=h+1,j=h+2,l=h+3,m=h+7;k[h]=0;k[i]=0;k[j]=0;H(a,h,i,j);i=a+4;c[i]=c[d];k[i]=k[d];c[i+1]=c[d+1];k[i+1]=k[d+1];c[i+2]=c[d+2];k[i+2]=k[d+2];c[i+3]=c[d+3];k[i+3]=k[d+3];WP(a+8,e);ig(l,f,a+4);d=a+12;c[d]=c[l];k[d]=k[l];c[d+1]=c[l+1];k[d+1]=k[l+1];c[d+2]=c[l+2];k[d+2]=k[l+2];c[d+3]=c[l+3];k[d+3]=k[l+3];ig(m,g,a+8);g=a+16;c[g]=c[m];k[g]=k[m];c[g+1]=c[m+1];k[g+1]=k[m+1];c[g+2]=c[m+2];k[g+2]=k[m+2];c[g+3]=c[m+3];k[g+3]=k[m+3];k[a+20]=J(a+12,a+4)+J(a+16,a+8);b=h}xra.X=1;function yI(a){FW(a);c[a]=HW+2;a+=36;c[a]=-1;k[a]=-1;c[a+1]=-1;k[a+1]=-1;c[a+2]=-1;k[a+2]=-1;c[a+3]=-1;k[a+3]=-1}yI.X=1;function BLa(){}BLa.X=1;function CLa(a){xe(a)}CLa.X=1;function Tpa(a){vLa(a);c[a]=DLa+2}Tpa.X=1;function ELa(){}ELa.X=1;function FLa(a){xe(a)}FLa.X=1;function GLa(){}GLa.X=1;function HLa(a){xe(a)}HLa.X=1;function PH(a,d,e,f,g,h){hV(a,d,e,f,g,h,0);c[a+15]=0;c[a+14]=0}PH.X=1;function wG(a){k[a+8]=-1}wG.X=1;function Doa(a,d,e){GW(a);c[a]=IW+2;JW(a+6);var f=a+11;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];d=a+15;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];KW(a+19);KW(a+24);LW(a+29)}Doa.X=1;function ILa(a){JLa(a)}ILa.X=1;function KLa(a){JLa(a);xe(a)}KLa.X=1;function LLa(a,d){$1=a;return 0!=(d|0)?d<<1:1}LLa.X=1;function MLa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}MLa.X=1;function NLa(a,d){$1=a;return 0!=(d|0)?d<<1:1}NLa.X=1;function OLa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}OLa.X=1;function PLa(a,d){$1=a;return 0!=(d|0)?d<<1:1}PLa.X=1;function QLa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}QLa.X=1;function RLa(a,d){var e;e=0!=(c[a+4]<<16>>16&c[d+1]<<16>>16|0)&1;e=(e&1?0!=(c[d+2]<<16>>16&c[a+3]<<16>>16|0):0)&1;return e&1}RLa.X=1;function MW(a){return c[a+1]}MW.X=1;function SLa(a){return c[a+2]}SLa.X=1;function TLa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(k[i]=k[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}TLa.X=1;function NW(a){return c[a+2]}NW.X=1;function Tl(a){return c[a+1]}Tl.X=1;function ULa(a){return c[a+2]}ULa.X=1;function VLa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}VLa.X=1;function WLa(a,d,e){var f=b;b+=12;var g=f+4,h=f+8,e=e&1;c[a+2]=c[d];OW(a+6,d);e&1?g=d+2:Bo(g,c[a+2]+1,d+2);c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];PW(a+19,f);yB(h,a+11,a+15,k[d+6]);PW(a+24,h);QW(a+29,d+6);a=k[a+1];b=f;return a}WLa.X=1;function OW(a,d){(Tl(a)|0)==(ULa(a)|0)&&XLa(a,PLa(a,Tl(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}OW.X=1;function PW(a,d){(th(a)|0)==(NW(a)|0)&&RW(a,NLa(a,th(a)));var e=(c[a+1]<<2)+c[a+3];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3]);e=a+1;c[e]+=1}PW.X=1;function QW(a,d){(MW(a)|0)==(SLa(a)|0)&&YLa(a,LLa(a,MW(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(k[e]=k[d]);e=a+1;c[e]+=1}QW.X=1;function YLa(a,d){var e;(SLa(a)|0)<(d|0)&&(e=ZLa(a,d),TLa(a,0,MW(a),e),MLa(a,0,MW(a)),$La(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}YLa.X=1;function ZLa(a,d){return 0!=(d|0)?aMa(a,d,0):0}ZLa.X=1;function $La(a){0!=(c[a+3]|0)&&(c[a+4]&1&&bMa(a,c[a+3]),c[a+3]=0)}$La.X=1;function bMa(a,d){$1=a;yh(d)}bMa.X=1;function aMa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}aMa.X=1;function RW(a,d){var e;(NW(a)|0)<(d|0)&&(e=cMa(a,d),dMa(a,0,th(a),e),OLa(a,0,th(a)),eMa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}RW.X=1;function cMa(a,d){return 0!=(d|0)?fMa(a,d,0):0}cMa.X=1;function dMa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<2)+f;if(0!=(i|0)){var j=(d<<2)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}dMa.X=1;function eMa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&gMa(a,c[a+3]),c[a+3]=0)}eMa.X=1;function gMa(a,d){$1=a;yh(d)}gMa.X=1;function fMa(a,d,e){$1=a;$3=e;return Ue(d<<4,16)}fMa.X=1;function XLa(a,d){var e;(ULa(a)|0)<(d|0)&&(e=hMa(a,d),VLa(a,0,Tl(a),e),QLa(a,0,Tl(a)),iMa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}XLa.X=1;function hMa(a,d){return 0!=(d|0)?jMa(a,d,0):0}hMa.X=1;function iMa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&kMa(a,c[a+3]),c[a+3]=0)}iMa.X=1;function kMa(a,d){$1=a;yh(d)}kMa.X=1;function jMa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}jMa.X=1;function lMa(a,d){$1=a;return 0!=(d|0)?d<<1:1}lMa.X=1;function mMa(a){c[a]=nMa+2}mMa.X=1;function LW(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}LW.X=1;function JW(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}JW.X=1;function KW(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}KW.X=1;function BE(a){return c[a+1]}BE.X=1;function cE(a){k[a+1]=6.2831854820251465;k[a+2]=6.2831854820251465;k[a+3]=6.2831854820251465;c[a]=0}cE.X=1;function H(a,d,e,f){k[a]=k[d];k[a+1]=k[e];k[a+2]=k[f];k[a+3]=0}H.X=1;function Ez(a,d,e){(c[d+4]|0)<(c[e+4]|0)?(c[a]=d,c[a+1]=e):(c[a]=e,c[a+1]=d);c[a+2]=0;c[a+3]=0}Ez.X=1;function Cz(a,d){c[a]=c[d];c[a+1]=c[d+1];c[a+2]=c[d+2];c[a+3]=c[d+3]}Cz.X=1;function By(a,d){return(d<<3)+c[a+3]}By.X=1;function oMa(a){return c[a+2]}oMa.X=1;function SW(a){MLa(a,0,MW(a));$La(a);LW(a)}SW.X=1;function TW(a){QLa(a,0,Tl(a));iMa(a);JW(a)}TW.X=1;function UW(a){OLa(a,0,th(a));eMa(a);KW(a)}UW.X=1;function pMa(){}pMa.X=1;function qMa(a){xe(a)}qMa.X=1;function pE(a,d,e,f,g){c[a]=d;c[a+1]=e;d=a+2;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];k[a+6]=g}pE.X=1;function kE(a,d,e){GW(a);c[a]=rMa+2;var f=a+6;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];a+=10;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}kE.X=1;function sMa(){}sMa.X=1;function tMa(a){xe(a)}tMa.X=1;function uMa(a,d,e){var f=b;b+=4;k[a+1]=k[d+6];c[a+2]=c[d];var g=a+14;e&1?(e=d+2,c[g]=c[e],k[g]=k[e],c[g+1]=c[e+1],k[g+1]=k[e+1],c[g+2]=c[e+2],k[g+2]=k[e+2],c[g+3]=c[e+3],k[g+3]=k[e+3]):(Bo(f,c[a+2]+1,d+2),c[g]=c[f],k[g]=k[f],c[g+1]=c[f+1],k[g+1]=k[f+1],c[g+2]=c[f+2],k[g+2]=k[f+2],c[g+3]=c[f+3],k[g+3]=k[f+3]);yB(a+18,a+6,a+10,k[d+6]);a=k[d+6];b=f;return a}uMa.X=1;function jC(a,d,e,f,g){H(a,d,e,f);k[a+3]=k[g]}jC.X=1;function VW(a){return sc(a)}VW.X=1;function sB(a,d){k[a+51]=k[d+12];k[a+52]=k[d+13];k[a+53]=k[d+14];k[a+54]=k[d+15];k[a+55]=k[d+16];k[a+56]=k[d+17];var e=a+39;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];var e=a+43,f=d+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+47;f=d+8;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];k[a+57]=k[d+18];k[a+58]=0;k[a+63]=0;k[a+59]=0;k[a+60]=0;k[a+64]=0;k[a+61]=.10000000149011612;c[a+65]=c[d+20]&1;k[a+62]=k[d+19]}sB.X=1;function Qz(a,d,e){mMa(a);c[a]=vMa+2;sQ(a+1,d);sQ(a+17,e);sQ(a+33,d);c[a+49]=0}Qz.X=1;function wMa(){}wMa.X=1;function xMa(a){xe(a)}xMa.X=1;function yMa(a,d){var e=b;b+=32;var f=e+16;uw(f,a+17);WW(e,f,a+1);xi(d,e);b=e}yMa.X=1;function zMa(a,d){var e=b;b+=16;WW(e,d,a+17);xi(a+1,e);b=e}zMa.X=1;function WW(a,d,e){var f=b;b+=16;var g=f+12;ww(f,d,e);vw(g,d,e+12);Tz(a,f,g);b=f}WW.X=1;function AMa(){}AMa.X=1;function BMa(a){xe(a)}BMa.X=1;function Az(a){c[a]=0;k[a]=0;c[a+1]=0;k[a+1]=0;c[a+2]=0;k[a+2]=0;c[a+3]=0;k[a+3]=0}Az.X=1;function Ay(a,d){(Cy(a)|0)==(oMa(a)|0)&&CMa(a,lMa(a,Cy(a)));var e=(c[a+1]<<3)+c[a+3];c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];c[e+4]=c[d+4];k[e+4]=k[d+4];c[e+5]=c[d+5];k[e+5]=k[d+5];c[e+6]=c[d+6];k[e+6]=k[d+6];c[e+7]=c[d+7];k[e+7]=k[d+7];e=a+1;c[e]+=1}Ay.X=1;function CMa(a,d){var e;(oMa(a)|0)<(d|0)&&(e=DMa(a,d),EMa(a,0,Cy(a),e),aLa(a,0,Cy(a)),gLa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}CMa.X=1;function DMa(a,d){return 0!=(d|0)?FMa(a,d,0):0}DMa.X=1;function JLa(a){c[a]=IW+2;SW(a+29);UW(a+24);UW(a+19);TW(a+6)}JLa.X=1;function GMa(a){c[a]=HMa+2}GMa.X=1;function Rka(a,d){k[a+2]=k[d+2];k[a+3]=k[d+3];k[a+6]=k[d+6];k[a]=k[d];k[a+1]=k[d+1];k[a+7]=k[d+7];k[a+8]=k[d+8];k[a+9]=k[d+9];k[a+10]=k[d+10];c[a+14]=c[d+14];k[a+12]=k[d+12];c[a+11]=c[d+11]&1}Rka.X=1;function ax(a){k[a+15]=0;k[a+2]=0;k[a+3]=.10000000149011612;k[a+4]=300;k[a]=1;k[a+1]=-1;k[a+7]=0;k[a+8]=.20000000298023224;k[a+9]=0;k[a+10]=0;k[a+5]=1;k[a+6]=.5;c[a+14]=0;k[a+12]=0;c[a+11]=0}ax.X=1;function ct(a){c[a]=0;c[a+1]=0}ct.X=1;function Qo(a){return c[a+1]}Qo.X=1;function vo(a,d){return c[a+3]+d}vo.X=1;function tfa(a){return c[a+47]}tfa.X=1;function Rm(a){k[a]=.6000000238418579;k[a+1]=1;k[a+2]=.30000001192092896;k[a+4]=0;k[a+6]=20;c[a+5]=10;k[a+8]=.20000000298023224;k[a+9]=.10000000149011612;k[a+10]=0;k[a+7]=1;c[a+11]=0;k[a+12]=-.019999999552965164;k[a+13]=0;k[a+14]=.8500000238418579;c[a+15]=260;c[a+16]=2;c[a+17]=128}Rm.X=1;function Jm(a){k[a]=.30000001192092896;k[a+1]=1;k[a+2]=0}Jm.X=1;function fl(a){return c[a+1]}fl.X=1;function Zk(a,d){return c[a+3]+20*d}Zk.X=1;function EMa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<3)+f,j=(d<<3)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];c[i+4]=c[j+4];k[i+4]=k[j+4];c[i+5]=c[j+5];k[i+5]=k[j+5];c[i+6]=c[j+6];k[i+6]=k[j+6];c[i+7]=c[j+7];k[i+7]=k[j+7];d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}EMa.X=1;function FMa(a,d,e){$1=a;$3=e;return Ue(d<<5,16)}FMa.X=1;function rw(a,d,e){var f,g;.7071067690849304<sc(k[a+2])?(f=k[a+1]*k[a+1]+k[a+2]*k[a+2],g=1/ec(f),k[d]=0,k[d+1]=-k[a+2]*g,k[d+2]=k[a+1]*g,k[e]=f*g,k[e+1]=-k[a]*k[d+2],k[e+2]=k[a]*k[d+1]):(f=k[a]*k[a]+k[a+1]*k[a+1],g=1/ec(f),k[d]=-k[a+1]*g,k[d+1]=k[a]*g,k[d+2]=0,k[e]=-k[a+2]*k[d+1],k[e+1]=k[a+2]*k[d],k[e+2]=f*g)}rw.X=1;function sw(a,d,e){var f=b;b+=17;var g=f+4,h=f+8,i=f+12,j=f+13,l=f+14,m=f+15,n=f+16;qn(f,d,e);e=J(d,e);-.9999998807907104>e?(rw(d,g,h),k[i]=0,NG(a,g,g+1,g+2,i)):(d=ec(2*(e+1)),g=1/d,k[j]=k[f]*g,k[l]=k[f+1]*g,k[m]=k[f+2]*g,k[n]=.5*d,NG(a,j,l,m,n));b=f}sw.X=1;function tw(a,d,e){var f=b;b+=8;var g=f+4;IMa(f,d,e);EV(g,d);JMa(f,g);H(a,f,f+1,f+2);b=f}tw.X=1;function IMa(a,d,e){var f=b;b+=4;var g=f+1,h=f+2,i=f+3;k[f]=k[d+3]*k[e]+k[d+1]*k[e+2]-k[d+2]*k[e+1];k[g]=k[d+3]*k[e+1]+k[d+2]*k[e]-k[d]*k[e+2];k[h]=k[d+3]*k[e+2]+k[d]*k[e+1]-k[d+1]*k[e];k[i]=-k[d]*k[e]-k[d+1]*k[e+1]-k[d+2]*k[e+2];NG(a,f,g,h,i);b=f}IMa.X=1;function JMa(a,d){var e=b;b+=4;var f=e+1,g=e+2,h=e+3;k[e]=k[a+3]*k[d]+k[a]*k[d+3]+k[a+1]*k[d+2]-k[a+2]*k[d+1];k[f]=k[a+3]*k[d+1]+k[a+1]*k[d+3]+k[a+2]*k[d]-k[a]*k[d+2];k[g]=k[a+3]*k[d+2]+k[a+2]*k[d+3]+k[a]*k[d+1]-k[a+1]*k[d];k[h]=k[a+3]*k[d+3]-k[a]*k[d]-k[a+1]*k[d+1]-k[a+2]*k[d+2];jc(a,e,f,g,h);b=e;return a}JMa.X=1;function Om(a,d){KMa(a);Mm(a,d)}Om.X=1;function KMa(a){c[a]=0;k[a]=0;c[a+1]=0;k[a+1]=0;c[a+2]=0;k[a+2]=0;c[a+3]=0;k[a+3]=0;c[a+4]=0;k[a+4]=0}KMa.X=1;function oea(a,d){GMa(a);c[a]=LMa+2;c[a+1]=d}oea.X=1;function MMa(){}MMa.X=1;function NMa(a){xe(a)}NMa.X=1;function XW(a){c[a]=OMa+2}XW.X=1;function Hj(a){c[a]=0;c[a+1]=0;c[a+2]=0;c[a+3]=4096;c[a+4]=4096;c[a+5]=0;c[a+6]=0;c[a+7]=1}Hj.X=1;function sj(a){k[a]=0;k[a+1]=-1;k[a+2]=.8999999761581421;k[a+3]=.30000001192092896;k[a+4]=1;k[a+5]=0;k[a+6]=0;c[a+7]=0}sj.X=1;function Ah(a){c[a+6]=2;c[a+7]=0}Ah.X=1;function xg(a,d){return(d<<2)+c[a+3]}xg.X=1;function De(a){k[a]=0;c[a+1]=0;c[a+2]=1;k[a+3]=1;c[a+4]=1;c[a+5]=0;c[a+6]=0;c[a+7]=1;c[a+8]=1;k[a+9]=.03999999910593033;c[a+10]=0;k[a+11]=0;c[a+12]=0}De.X=1;function yk(a,d,e,f,g,h){$5=f;c[a]=1025;f=a+1;CU(f);f+=69;CU(f);f+=69;CU(f);CU(f+69);c[a+277]=d;c[a+278]=e;c[a+279]=0;k[a+280]=g;k[a+281]=h}yk.X=1;function hda(a,d){PMa(a,d);c[a]=YW+2}hda.X=1;function lh(a){return jg(a+23,0)}lh.X=1;function fh(a,d,e,f,g,h){var i=b;b+=54;var j=i+1,l=i+5,m=i+6,n=i+10,p=i+14,r=i+18,s=i+19,t=i+23,w=i+35,x=i+39,y=i+43,z=i+44,A=i+45,C=i+46,B=i+50;k[i]=e;k[l]=.5;N(m,d,a);Q(j,m,l);H(n,i,i,i);xn(j,n);k[r]=.5;wn(s,d,a);Q(p,s,r);qc(t,f);vw(w,f,p);k[y]=J(0+t,j);k[z]=J(4+t,j);k[A]=J(8+t,j);H(x,y,z,A);N(C,w,x);c[g]=c[C];k[g]=k[C];c[g+1]=c[C+1];k[g+1]=k[C+1];c[g+2]=c[C+2];k[g+2]=k[C+2];c[g+3]=c[C+3];k[g+3]=k[C+3];wn(B,w,x);c[h]=c[B];k[h]=k[B];c[h+1]=c[B+1];k[h+1]=k[B+1];c[h+2]=c[B+2];k[h+2]=k[B+2];c[h+3]=c[B+3];k[h+3]=k[B+3];b=i}fh.X=1;function je(a,d){return ee(a,d)}je.X=1;function ie(a){var d=a;-1>d?a=-1:1<d&&(a=1);return QMa(a)}ie.X=1;function RMa(a,d,e,f){XW(a);c[a]=SMa+2;c[a+1]=d;c[a+2]=e;k[a+3]=f}RMa.X=1;function TMa(a,d,e,f,g){var h=b;b+=54;var i=h+4,j=h+8,l=h+9,m=h+10,n=h+26,p=h+30,r=h+34,s=h+38,t=h+42,w=h+46,x=h+50;$4=f;g&=1;f=d+16;k[j]=1;k[l]=0;$P(m,f,d);UMa(a,m+12,h,i,l,j,k[a+3])&&(g&1?(Bo(n,f,i),WP(p,n),vw(s,f,h),Q(t,n,l),wn(r,s,t),v[c[c[e]+4]](e,p,r,k[l])):(a=c[c[e]+4],Bo(w,f,i),vw(x,f,h),v[a](e,w,x,k[l])));b=h}TMa.X=1;function UMa(a,d,e,f,g,h,i){var j=b;b+=46;var l,m,n=j+4,p=j+8,r=j+12,s=j+16,t=j+17,w=j+18,x=j+22,y=j+26,z=j+30,A=j+34,C=j+38,B=j+42;$7=h;m=VMa(c[a+2],0);h=dW(c[a+1]);i=h+i;N(n,m+4,m);N(p,m+8,m);qn(j,n,p);IB(j);N(r,d,m);k[s]=J(r,j);0>k[s]&&(k[s]*=-1,k[t]=-1,LC(j,t));p=k[s]<i&1;n=0;p&=1;a:do{if(p){if(WMa(a,d,m,j)){n=1,Q(y,j,s),N(x,d,y),r=w,t=x,c[r]=c[t],k[r]=k[t],c[r+1]=c[t+1],k[r+1]=k[t+1],c[r+2]=c[t+2],k[r+2]=k[t+2],c[r+3]=c[t+3],k[r+3]=k[t+3]}else{var r=i*i,t=0,K=a+2,E=c[K];if((t|0)<(v[c[c[E]+23]](E)|0)){for(var E=a+2,G=w,M=z;;){var L=c[E];v[c[c[L]+24]](L,t,A,C);XMa(A,C,d,z)<r&&(n=1,c[G]=c[M],k[G]=k[M],c[G+1]=c[M+1],k[G+1]=k[M+1],c[G+2]=c[M+2],k[G+2]=k[M+2],c[G+3]=c[M+3],k[G+3]=k[M+3]);t+=1;L=c[K];if((t|0)>=(v[c[c[L]+23]](L)|0)){break a}}}}}}while(0);n&1?(N(B,d,w),a=Um(B),a<i*i?(1.1920928955078125e-7<a?(l=ec(a),c[f]=c[B],k[f]=k[B],c[f+1]=c[B+1],k[f+1]=k[B+1],c[f+2]=c[B+2],k[f+2]=k[B+2],c[f+3]=c[B+3],k[f+3]=k[B+3],IB(f),c[e]=c[w],k[e]=k[w],c[e+1]=c[w+1],k[e+1]=k[w+1],c[e+2]=c[w+2],k[e+2]=k[w+2],c[e+3]=c[w+3],k[e+3]=k[w+3],k[g]=-(h-l)):($distance2=0,c[f]=c[j],k[f]=k[j],c[f+1]=c[j+1],k[f+1]=k[j+1],c[f+2]=c[j+2],k[f+2]=k[j+2],c[f+3]=c[j+3],k[f+3]=k[j+3],c[e]=c[w],k[e]=k[w],c[e+1]=c[w+1],k[e+1]=k[w+1],c[e+2]=c[w+2],k[e+2]=k[w+2],c[e+3]=c[w+3],k[e+3]=k[w+3],k[g]=-h),l=1,e=19):e=18):e=18;18==e&&(l=0);b=j;return l}UMa.X=1;function XMa(a,d,e,f){var g=b;b+=21;var h=g+4,i=g+8,j=g+9,l=g+13,m=g+17;N(g,e,a);N(h,d,a);k[i]=J(h,g);0<k[i]?(d=J(h,h),k[i]<d?(k[i]/=d,Q(j,h,i),JC(g,j)):(k[i]=1,JC(g,h))):k[i]=0;Q(m,h,i);wn(l,a,m);c[f]=c[l];k[f]=k[l];c[f+1]=c[l+1];k[f+1]=k[l+1];c[f+2]=c[l+2];k[f+2]=k[l+2];c[f+3]=c[l+3];k[f+3]=k[l+3];a=J(g,g);b=g;return a}XMa.X=1;function WMa(a,d,e,f){var g=b;b+=8;var h=g+4;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];c[h]=c[f];k[h]=k[f];c[h+1]=c[f+1];k[h+1]=k[f+1];c[h+2]=c[f+2];k[h+2]=k[f+2];c[h+3]=c[f+3];k[h+3]=k[f+3];a=YMa(a,e,h,g);b=g;return a}WMa.X=1;function YMa(a,d,e,f){var g=b;b+=36;var h,i,j,l=g+4,m=g+8,n=g+12,p=g+16,r=g+20,s=g+24,t=g+28;h=g+32;$2=a;a=d+4;j=d+8;N(g,a,d);N(l,j,a);N(m,d,j);N(n,f,d);N(p,f,a);N(r,f,j);qn(s,g,e);qn(t,l,e);qn(h,m,e);d=J(s,n);p=J(t,p);r=J(h,r);t=0<d;do{if(t){if(0<p&&0<r){h=9;break}var w=d}else{w=d}h=6}while(0);a:do{if(6==h){h=0>=w;do{if(h&&0>=p&&0>=r){h=9;break a}}while(0);i=0;h=11}}while(0);9==h&&(i=1);b=g;return i}YMa.X=1;function VMa(a,d){return(d<<2)+a+14}VMa.X=1;function ZMa(){}ZMa.X=1;function $Ma(a){xe(a)}$Ma.X=1;function aNa(){}aNa.X=1;function bNa(a){xe(a)}bNa.X=1;function PMa(a,d){ZW(a,d);c[a]=$W+2}PMa.X=1;function aX(a,d,e,f){$3=e;$4=f;ZW(a,d);c[a]=$W+2}aX.X=1;function cNa(a){xe(a)}cNa.X=1;function dNa(){}dNa.X=1;function xs(a,d,e,f,g,h){eNa(a,d,e,-2,-1,f,g,h&1);c[a]=fNa+2}xs.X=1;function eNa(a,d,e,f,g,h,i,j){var l=b;b+=15;var m=l+4,n=l+8,p=l+12,r=l+13,s=l+14,j=j&1;bX(a);c[a]=cX+2;c[a+1]=f;c[a+2]=g;c[a+25]=i;c[a+26]=0;c[a+27]=0;c[a+28]=0;c[a+29]=0;f=(h&65535)+1&65535;0==(c[a+25]|0)&&(g=Ue(76,16),0==(g|0)?g=0:dX(g),c[a+25]=g,c[a+27]=1);j&1||(j=Ue(24,16),0==(j|0)?j=0:(c[j]=0,k[j]=0,c[j+1]=0,k[j+1]=0,c[j+2]=0,k[j+2]=0,c[j+3]=0,k[j+3]=0,c[j+4]=0,k[j+4]=0,c[j+5]=0,k[j+5]=0,gNa(j)),c[a+30]=j,j=Ue(156,16),0==(j|0)?j=0:xr(j,c[a+30]),c[a+29]=j,c[c[a+29]+39]=1);j=a+3;c[j]=c[d];k[j]=k[d];c[j+1]=c[d+1];k[j+1]=k[d+1];c[j+2]=c[d+2];k[j+2]=k[d+2];c[j+3]=c[d+3];k[j+3]=k[d+3];d=a+7;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];N(l,a+7,a+3);e=c[a+2];k[p]=e&65535;k[r]=e&65535;k[s]=e&65535;H(n,p,r,s);eX(m,n,l);n=a+11;c[n]=c[m];k[n]=k[m];c[n+1]=c[m+1];k[n+1]=k[m+1];c[n+2]=c[m+2];k[n+2]=k[m+2];c[n+3]=c[m+3];k[n+3]=k[m+3];m=f&65535;n=hNa(m,64);n=iNa(n.A?-1:n.v);p=0==(m|0);a:do{if(!p){r=n+20*m;for(s=n;;){if(gV(s),s+=20,(s|0)==(r|0)){break a}}}}while(0);c[a+17]=n;c[a+16]=f;c[a+15]=0;c[a+18]=1;m=c[a+18];n=(m&65535|0)<(f&65535|0);a:do{if(n){for(p=a+17;;){if(qW(c[p]+20*(m&65535),(m&65535)+1&65535),m+=1,(m&65535|0)>=(f&65535|0)){break a}}}}while(0);qW(c[a+17]+20*((f&65535)-1),0);m=0;n=a+22;p=a+22;r=a+19;for(s=0;3>(s|0);){c[n+m]=Ue((f&65535)<<3,16),s=c[p+m],c[r+m]=0==(s|0)?0:s,m=s=m+1}f=c[c[a+17]]=0;m=a+17;n=a+17;p=a+19;r=a+19;s=a+2;e=a+19;for(a+=19;!(c[c[m]+f+13]=0,c[c[n]+f+16]=1,c[c[p+f]]=0,c[c[r+f]+1]=0,c[c[e+f]+2]=c[s],c[c[a+f]+3]=0,f=d=f+1,3<=(d|0));){}b=l}eNa.X=1;function bW(a,d,e,f,g,h){jNa(a,d,e,-2,2147483647,f,g,h&1);c[a]=kNa+2}bW.X=1;function jNa(a,d,e,f,g,h,i,j){var l=b;b+=15;var m=l+4,n=l+8,p=l+12,r=l+13,s=l+14,j=j&1;bX(a);c[a]=fX+2;c[a+1]=f;c[a+2]=g;c[a+25]=i;c[a+26]=0;c[a+27]=0;c[a+28]=0;c[a+29]=0;f=h+1;0==(c[a+25]|0)&&(g=Ue(76,16),0==(g|0)?g=0:dX(g),c[a+25]=g,c[a+27]=1);j&1||(j=Ue(24,16),0==(j|0)?j=0:(c[j]=0,k[j]=0,c[j+1]=0,k[j+1]=0,c[j+2]=0,k[j+2]=0,c[j+3]=0,k[j+3]=0,c[j+4]=0,k[j+4]=0,c[j+5]=0,k[j+5]=0,gNa(j)),c[a+30]=j,j=Ue(156,16),0==(j|0)?j=0:xr(j,c[a+30]),c[a+29]=j,c[c[a+29]+39]=1);j=a+3;c[j]=c[d];k[j]=k[d];c[j+1]=c[d+1];k[j+1]=k[d+1];c[j+2]=c[d+2];k[j+2]=k[d+2];c[j+3]=c[d+3];k[j+3]=k[d+3];d=a+7;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];N(l,a+7,a+3);e=c[a+2];k[p]=e>>>0;k[r]=e>>>0;k[s]=e>>>0;H(n,p,r,s);eX(m,n,l);n=a+11;c[n]=c[m];k[n]=k[m];c[n+1]=c[m+1];k[n+1]=k[m+1];c[n+2]=c[m+2];k[n+2]=k[m+2];c[n+3]=c[m+3];k[n+3]=k[m+3];m=hNa(f,76);m=lNa(m.A?-1:m.v);n=0==(f|0);a:do{if(!n){p=m+20*f;for(r=m;;){if(gV(r),r+=20,(r|0)==(p|0)){break a}}}}while(0);c[a+17]=m;c[a+16]=f;c[a+15]=0;c[a+18]=1;m=c[a+18];n=m>>>0<f>>>0;a:do{if(n){for(p=a+17;;){if(nW(c[p]+20*m,m+1),m+=1,m>>>0>=f>>>0){break a}}}}while(0);nW(c[a+17]+20*(f-1),0);m=0;n=a+22;p=a+22;r=a+19;for(s=0;3>(s|0);){c[n+m]=Ue(f<<4,16),s=c[p+m],c[r+m]=0==(s|0)?0:s,m=s=m+1}f=c[c[a+17]]=0;m=a+17;n=a+17;p=a+19;r=a+19;s=a+2;e=a+19;for(a+=19;!(c[c[m]+f+13]=0,c[c[n]+f+16]=1,c[c[p+f]]=0,c[c[r+f]+1]=0,c[c[e+f]+2]=c[s],c[c[a+f]+3]=0,f=d=f+1,3<=(d|0));){}b=l}jNa.X=1;function mNa(a){gX(a)}mNa.X=1;function nNa(){}nNa.X=1;function oNa(a){return c[a+25]}oNa.X=1;function pNa(a){return c[a+25]}pNa.X=1;function qNa(a,d,e,f,g,h,i,j,l){l=VV(a,TV(a,d,e,g,h,i,j,l));0!=(c[a+29]|0)&&(a=c[a+29],c[l+19]=v[c[c[a]+2]](a,d,e,f,g,h,i,j,0));return l}qNa.X=1;function rNa(a,d,e){if(0!=(c[a+29]|0)){var f=c[a+29];v[c[c[f]+3]](f,c[d+19],e)}ZV(a,c[d+4],e)}rNa.X=1;function sNa(a,d,e,f,g){var h=d+5;c[h]=c[e];k[h]=k[e];c[h+1]=c[e+1];k[h+1]=k[e+1];c[h+2]=c[e+2];k[h+2]=k[e+2];c[h+3]=c[e+3];k[h+3]=k[e+3];h=d+9;c[h]=c[f];k[h]=k[f];c[h+1]=c[f+1];k[h+1]=k[f+1];c[h+2]=c[f+2];k[h+2]=k[f+2];c[h+3]=c[f+3];k[h+3]=k[f+3];$V(a,c[d+4],e,f,g);0!=(c[a+29]|0)&&(a=c[a+29],v[c[c[a]+4]](a,c[d+19],e,f,g))}sNa.X=1;function tNa(a,d,e,f){$1=a;a=d+5;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3];d+=9;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3]}tNa.X=1;function uNa(a,d,e,f,g,h){var i,j=0!=(c[a+29]|0);a:do{if(j){i=c[a+29],v[c[c[i]+6]](i,d,e,f,g,h)}else{i=1;var l=a+15;if(i>>>0<(c[l]<<1)+1>>>0){for(var m=a+19,n=a+19;;){if(0!=(kW((i<<1)+c[m+0])|0)){var p=f;v[c[c[p]+2]](p,VV(a,c[(i<<1)+c[n+0]+1]))}i+=1;if(i>>>0>=(c[l]<<1)+1>>>0){break a}}}}}while(0)}uNa.X=1;function vNa(a,d,e,f){var g,h,i=0!=(c[a+29]|0);a:do{if(i){g=c[a+29],v[c[c[g]+7]](g,d,e,f)}else{g=1;var j=a+15;if(g>>>0<(c[j]<<1)+1>>>0){for(var l=a+19,m=a+19;;){if(0!=(kW((g<<1)+c[l+0])|0)&&(h=VV(a,c[(g<<1)+c[m+0]+1]),hX(d,e,h+5,h+9))){var n=f;v[c[c[n]+2]](n,h)}g+=1;if(g>>>0>=(c[j]<<1)+1>>>0){break a}}}}}while(0)}vNa.X=1;function wNa(a,d){var e=b;b+=12;var f,g,h=e+4,i,j,l=e+8;f=c[a+25];if(v[c[c[f]+14]](f)){f=c[a+25];f=v[c[c[f]+7]](f);iX(f);g=jX(f)-c[a+28];Az(e);kX(f,g,e);c[a+28]=0;Az(h);c[h]=0;c[h+1]=0;g=c[h+2]=0;var m=(g|0)<(jX(f)|0);a:do{if(m){var n=h,p=a+25,r=a+28;for(i=f;;){i=lX(i,g);j=mX(i,h)&1;var s=i;c[n]=c[s];k[n]=k[s];c[n+1]=c[s+1];k[n+1]=k[s+1];c[n+2]=c[s+2];k[n+2]=k[s+2];c[n+3]=c[s+3];k[n+3]=k[s+3];j=j&1?1:YV(a,c[i],c[i+1])&1?0:1;j&1&&(j=c[p],v[c[c[j]+8]](j,i,d),c[i]=0,c[i+1]=0,c[r]+=1,c[nX]-=1);g+=1;i=f;if((g|0)>=(jX(f)|0)){var t=i;break a}}}else{t=f}}while(0);iX(t);h=jX(f)-c[a+28];Az(l);kX(f,h,l);c[a+28]=0}b=e}wNa.X=1;function xNa(a,d,e){var f=a+3;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];a+=7;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}xNa.X=1;function yNa(a,d){var e;$2=d;if(0==(c[a+15]|0)){c[a+18]=1;e=c[a+18];var f=a+16,g=e>>>0<c[f]>>>0;a:do{if(g){for(var h=a+17;;){if(nW(c[h]+20*e,e+1),e+=1,e>>>0>=c[f]>>>0){break a}}}}while(0);nW(c[a+17]+20*(c[a+16]-1),0)}}yNa.X=1;function zNa(a){oX(a)}zNa.X=1;function ANa(a,d,e,f,g,h,i,j,l){l=ts(a,rs(a,d,e,g,h,i,j,l));0!=(c[a+29]|0)&&(a=c[a+29],c[l+19]=v[c[c[a]+2]](a,d,e,f,g,h,i,j,0));return l}ANa.X=1;function BNa(a,d,e){if(0!=(c[a+29]|0)){var f=c[a+29];v[c[c[f]+3]](f,c[d+19],e)}Es(a,c[d+4]&65535,e)}BNa.X=1;function CNa(a,d,e,f,g){var h=d+5;c[h]=c[e];k[h]=k[e];c[h+1]=c[e+1];k[h+1]=k[e+1];c[h+2]=c[e+2];k[h+2]=k[e+2];c[h+3]=c[e+3];k[h+3]=k[e+3];h=d+9;c[h]=c[f];k[h]=k[f];c[h+1]=c[f+1];k[h+1]=k[f+1];c[h+2]=c[f+2];k[h+2]=k[f+2];c[h+3]=c[f+3];k[h+3]=k[f+3];Ns(a,c[d+4]&65535,e,f,g);0!=(c[a+29]|0)&&(a=c[a+29],v[c[c[a]+4]](a,c[d+19],e,f,g))}CNa.X=1;function DNa(a){gX(a);yh(a)}DNa.X=1;function ENa(a){oX(a);yh(a)}ENa.X=1;function FNa(){}FNa.X=1;function GNa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}GNa.X=1;function HNa(a){return c[a+25]}HNa.X=1;function INa(a){return c[a+25]}INa.X=1;function jX(a){return c[a+1]}jX.X=1;function lX(a,d){return(d<<2)+c[a+3]}lX.X=1;function mX(a,d){return(c[a]|0)==(c[d]|0)?(c[a+1]|0)==(c[d+1]|0):0}mX.X=1;function pX(a){return c[a+2]}pX.X=1;function JNa(a,d,e,f){$1=a;a=d+5;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3];d+=9;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3]}JNa.X=1;function KNa(a,d,e,f,g,h){var i,j=0!=(c[a+29]|0);a:do{if(j){i=c[a+29],v[c[c[i]+6]](i,d,e,f,g,h)}else{i=1;var l=a+15;if((i&65535|0)<(((c[l]&65535)<<1)+1|0)){for(var m=a+19,n=a+19;;){if(0!=oW(((i&65535)<<1)+c[m+0])<<16>>16){var p=f;v[c[c[p]+2]](p,ts(a,c[((i&65535)<<1)+c[n+0]+1]))}i+=1;if((i&65535|0)>=(((c[l]&65535)<<1)+1|0)){break a}}}}}while(0)}KNa.X=1;function LNa(a,d,e,f){var g,h,i=0!=(c[a+29]|0);a:do{if(i){g=c[a+29],v[c[c[g]+7]](g,d,e,f)}else{g=1;var j=a+15;if((g&65535|0)<(((c[j]&65535)<<1)+1|0)){for(var l=a+19,m=a+19;;){if(0!=oW(((g&65535)<<1)+c[l+0])<<16>>16&&(h=ts(a,c[((g&65535)<<1)+c[m+0]+1]),hX(d,e,h+5,h+9))){var n=f;v[c[c[n]+2]](n,h)}g+=1;if((g&65535|0)>=(((c[j]&65535)<<1)+1|0)){break a}}}}}while(0)}LNa.X=1;function MNa(a,d){var e=b;b+=12;var f,g,h=e+4,i,j,l=e+8;f=c[a+25];if(v[c[c[f]+14]](f)){f=c[a+25];f=v[c[c[f]+7]](f);iX(f);g=jX(f)-c[a+28];Az(e);kX(f,g,e);c[a+28]=0;Az(h);c[h]=0;c[h+1]=0;g=c[h+2]=0;var m=(g|0)<(jX(f)|0);a:do{if(m){var n=h,p=a+25,r=a+28;for(i=f;;){i=lX(i,g);j=mX(i,h)&1;var s=i;c[n]=c[s];k[n]=k[s];c[n+1]=c[s+1];k[n+1]=k[s+1];c[n+2]=c[s+2];k[n+2]=k[s+2];c[n+3]=c[s+3];k[n+3]=k[s+3];j=j&1?1:Cs(a,c[i],c[i+1])&1?0:1;j&1&&(j=c[p],v[c[c[j]+8]](j,i,d),c[i]=0,c[i+1]=0,c[r]+=1,c[nX]-=1);g+=1;i=f;if((g|0)>=(jX(f)|0)){var t=i;break a}}}else{t=f}}while(0);iX(t);h=jX(f)-c[a+28];Az(l);kX(f,h,l);c[a+28]=0}b=e}MNa.X=1;function NNa(a,d,e){var f=a+3;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];a+=7;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}NNa.X=1;function ONa(a,d){var e;$2=d;if(0==(c[a+15]&65535|0)){c[a+18]=1;e=c[a+18];var f=a+16,g=(e&65535|0)<(c[f]&65535|0);a:do{if(g){for(var h=a+17;;){if(qW(c[h]+20*(e&65535),(e&65535)+1&65535),e+=1,(e&65535|0)>=(c[f]&65535|0)){break a}}}}while(0);qW(c[a+17]+20*((c[a+16]&65535)-1),0)}}ONa.X=1;function iX(a){1<(jX(a)|0)&&qX(a,0,jX(a)-1)}iX.X=1;function kX(a,d,e){var f,g;f=jX(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(jX(a)|0)&&rX(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){if(Cz((g<<2)+c[i],e),g+=1,(g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}kX.X=1;function rX(a,d){var e;(pX(a)|0)<(d|0)&&(e=PNa(a,d),QNa(a,0,jX(a),e),GNa(a,0,jX(a)),RNa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}rX.X=1;function PNa(a,d){return 0!=(d|0)?SNa(a,d,0):0}PNa.X=1;function QNa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){if(Cz((d<<2)+f,(d<<2)+c[h]),d+=1,(d|0)>=(e|0)){break a}}}}while(0)}QNa.X=1;function RNa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&TNa(a,c[a+3]),c[a+3]=0)}RNa.X=1;function TNa(a,d){$1=a;yh(d)}TNa.X=1;function SNa(a,d,e){$1=a;$3=e;return Ue(d<<4,16)}SNa.X=1;function UNa(){return 0}UNa.X=1;function VNa(){return 0}VNa.X=1;function WNa(){}WNa.X=1;function bX(a){c[a]=XNa+2}bX.X=1;function sX(a,d,e){var f;$1=a;var g=0!=(c[d]|0)?c[c[d]+4]:-1,h=0!=(c[e]|0)?c[c[e]+4]:-1,a=0!=(c[d+1]|0)?c[c[d+1]+4]:-1;f=0!=(c[e+1]|0)?c[c[e+1]+4]:-1;return(g|0)>(h|0)?1:(c[d]|0)==(c[e]|0)&&(a|0)>(f|0)?1:(c[d]|0)!=(c[e]|0)?0:(c[d+1]|0)!=(c[e+1]|0)?0:c[d+2]>>>0>c[e+2]>>>0}sX.X=1;function qX(a,d,e){var f=b;b+=5;var g,h,i=f+1;g=d;h=e;Cz(i,(((e+d|0)/2&-1)<<2)+c[a+3]);for(var j=a+3,l=a+3;;){if(sX(f,(g<<2)+c[j],i)){g+=1}else{var m=sX(f,i,(h<<2)+c[l]);a:do{if(m){for(;;){if(h-=1,!sX(f,i,(h<<2)+c[l])){break a}}}}while(0);(g|0)<=(h|0)&&(tX(a,g,h),g+=1,h-=1);if(!((g|0)<=(h|0))){break}}}(d|0)<(h|0)&&qX(a,d,h);(g|0)<(e|0)&&qX(a,g,e);b=f}qX.X=1;function tX(a,d,e){var f=b;b+=4;Cz(f,(d<<2)+c[a+3]);var d=(d<<2)+c[a+3],g=(e<<2)+c[a+3];c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];c[d+2]=c[g+2];k[d+2]=k[g+2];c[d+3]=c[g+3];k[d+3]=k[g+3];a=(e<<2)+c[a+3];c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];b=f}tX.X=1;function hX(a,d,e,f){var g;g=(k[a]>k[f]?0:k[d]<k[e]?0:1)&1;g=(k[a+2]>k[f+2]?0:k[d+2]<k[e+2]?0:g&1)&1;g=(k[a+1]>k[f+1]?0:k[d+1]<k[e+1]?0:g&1)&1;return g&1}hX.X=1;function oX(a){var d;c[a]=cX+2;0!=(c[a+29]|0)&&(d=c[a+30],v[c[c[d]]](d),yh(c[a+30]),d=c[a+29],v[c[c[d]]](d),yh(c[a+29]));d=2;for(var e=a+22,f=2;0<=(f|0);){yh(c[e+d]),d=f=d-1}d=c[a+17];0!=(d|0)&&yh(d);c[a+27]&1&&(d=c[a+25],v[c[c[d]]](d),yh(c[a+25]))}oX.X=1;function YNa(a){oX(a)}YNa.X=1;function gX(a){var d;c[a]=fX+2;0!=(c[a+29]|0)&&(d=c[a+30],v[c[c[d]]](d),yh(c[a+30]),d=c[a+29],v[c[c[d]]](d),yh(c[a+29]));d=2;for(var e=a+22,f=2;0<=(f|0);){yh(c[e+d]),d=f=d-1}d=c[a+17];0!=(d|0)&&yh(d);c[a+27]&1&&(d=c[a+25],v[c[c[d]]](d),yh(c[a+25]))}gX.X=1;function ZNa(a){gX(a)}ZNa.X=1;function eX(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;k[f]=k[d]/k[e];k[g]=k[d+1]/k[e+1];k[h]=k[d+2]/k[e+2];H(a,f,g,h);b=f}eX.X=1;function lNa(a){return Ue(a,16)}lNa.X=1;function gNa(a){uX(a);c[a]=vX+2;wX(a+1)}gNa.X=1;function uX(a){$Na(a);c[a]=aOa+2}uX.X=1;function bOa(a){cOa(a)}bOa.X=1;function dOa(a){cOa(a);xe(a)}dOa.X=1;function eOa(a){return lX(a+1,0)}eOa.X=1;function fOa(a){return xX(a+1,0)}fOa.X=1;function gOa(a){oX(a);yh(a)}gOa.X=1;function hOa(a){gX(a);yh(a)}hOa.X=1;function iOa(){}iOa.X=1;function jOa(){return 0}jOa.X=1;function kOa(){}kOa.X=1;function lOa(){}lOa.X=1;function mOa(){}mOa.X=1;function nOa(){return 0}nOa.X=1;function oOa(){return 1}oOa.X=1;function pOa(){}pOa.X=1;function qOa(){}qOa.X=1;function rOa(){}rOa.X=1;function sOa(){return 1}sOa.X=1;function $Na(a){c[a]=tOa+2}$Na.X=1;function uOa(a){return a+1}uOa.X=1;function xX(a,d){return(d<<2)+c[a+3]}xX.X=1;function wX(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}wX.X=1;function cOa(a){c[a]=vX+2;yX(a+1)}cOa.X=1;function yX(a){GNa(a,0,jX(a));RNa(a);wX(a)}yX.X=1;function vOa(){}vOa.X=1;function wOa(a){xe(a)}wOa.X=1;function xOa(){}xOa.X=1;function yOa(a){xe(a)}yOa.X=1;function zOa(){}zOa.X=1;function AOa(a){xe(a)}AOa.X=1;function iNa(a){return Ue(a,16)}iNa.X=1;function BOa(a,d,e,f,g){aX(a,e,f,g);c[a]=zX+2;c[a+2]=0;c[a+3]=d;0==(c[a+3]|0)&&(d=c[a+1],v[c[c[d]+6]](d,f,g)&&(d=c[a+1],c[a+3]=v[c[c[d]+3]](d,f,g),c[a+2]=1))}BOa.X=1;function COa(a){DOa(a);xe(a)}COa.X=1;function DOa(a){c[a]=zX+2;if(c[a+2]&1&&0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3])}}DOa.X=1;function EOa(a,d,e,f,g){var h;$4=f;0!=(c[a+3]|0)&&(f=bi(d),h=bi(e),fI(g,c[a+3]),FOa(g,f,d+1,h,e+1),c[a+2]&1&&DI(g))}EOa.X=1;function FOa(a,d,e,f,g){var h=b;b+=123;var i,j=h+1,l,m,n,p=h+2,r=h+18,s,t=h+34,w=h+44,x=h+48,y=h+52,z=h+56,A=h+60,C=h+64,B=h+68,K=h+69,E=h+70,G=h+71,M=h+75,L=h+79,F=h+89,I=h+90,R=h+91,O=h+92,Z=h+93,P=h+94,S=h+95,da=h+105,V=h+106,ba=h+107,$=h+108,Y=h+109,la=h+110,ka=h+111,ja=h+115,ea=h+119;c[h]=0;i=GOa(h,d,e,f,g);var ca=0<i;a:do{if(!ca&&(c[j]=0,l=GOa(j,f,g,d,e),0>=l)){$k_relativeTol=.9800000190734863;$k_absoluteTol=.0010000000474974513;l>.9800000190734863*i+.0010000000474974513?(m=f,n=d,xi(p,g),xi(r,e),s=c[j],l=1):(m=d,n=f,xi(p,e),xi(r,g),s=c[h],l=0);HOa(t,m,p,s,n,r);m+=18;n=w;var W=(s<<2)+m;c[n]=c[W];k[n]=k[W];c[n+1]=c[W+1];k[n+1]=k[W+1];c[n+2]=c[W+2];k[n+2]=k[W+2];c[n+3]=c[W+3];k[n+3]=k[W+3];n=x;s=4>(s+1|0)?(s+1<<2)+m:m;c[n]=c[s];k[n]=k[s];c[n+1]=c[s+1];k[n+1]=k[s+1];c[n+2]=c[s+2];k[n+2]=k[s+2];c[n+3]=c[s+3];k[n+3]=k[s+3];N(y,x,w);s=p;N(A,x,w);Bo(z,s,A);IB(z);k[B]=k[z+1];k[K]=-1*k[z];k[E]=0;H(C,B,K,E);vw(G,p,w);s=w;m=G;c[s]=c[m];k[s]=k[m];c[s+1]=c[m+1];k[s+1]=k[m+1];c[s+2]=c[m+2];k[s+2]=k[m+2];c[s+3]=c[m+3];k[s+3]=k[m+3];vw(M,p,x);s=x;m=M;c[s]=c[m];k[s]=k[m];c[s+1]=c[m+1];k[s+1]=k[m+1];c[s+2]=c[m+2];k[s+2]=k[m+2];c[s+3]=c[m+3];k[s+3]=k[m+3];s=J(C,w);m=-J(z,w);n=J(z,x);k[F]=0;k[I]=0;k[R]=0;pe(L,F,I,R);k[O]=0;k[Z]=0;k[P]=0;pe(L+5,O,Z,P);k[da]=0;k[V]=0;k[ba]=0;pe(S,da,V,ba);k[$]=0;k[Y]=0;k[la]=0;pe(S+5,$,Y,la);WP(ka,z);if(2<=(IOa(L,t,ka,m)|0)&&(m=IOa(S,L,z,n),2<=(m|0)&&(0!=l<<24>>24?WP(ja,C):(l=ja,m=C,c[l]=c[m],k[l]=k[m],c[l+1]=c[m+1],k[l+1]=k[m+1],c[l+2]=c[m+2],k[l+2]=k[m+2],c[l+3]=c[m+3],k[l+3]=k[m+3]),l=0,(l|0)<(c[JOa]|0)))){for(;;){if(m=J(C,S+5*l)-s,0>=m&&(n=a,W=c[c[n]+4],WP(ea,ja),v[W](n,ea,S+5*l,m)),l+=1,(l|0)>=(c[JOa]|0)){break a}}}}}while(0);b=h}FOa.X=1;function KOa(a,d){$1=a;return 0!=(d|0)?d<<1:1}KOa.X=1;function LOa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}LOa.X=1;function AX(a){return c[a+1]}AX.X=1;function MOa(a){return c[a+2]}MOa.X=1;function NOa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}NOa.X=1;function GOa(a,d,e,f,g){var h=b;b+=28;var i,j,l,m=h+4;i=h+8;var n=h+12,p=h+16,r,s,t,w,x;l=d+34;vw(m,g,f+14);vw(i,e,d+14);N(h,m,i);ue(p,e);Bo(n,p,h);m=0;i=-0xde0b6b000000000;p=0;s=4>(p|0);a:do{if(s){for(;;){if(r=J((p<<2)+l,n),r>i&&(i=r,m=p),p+=1,4<=(p|0)){break a}}}}while(0);l=n=BX(d,e,m,f,g);n=0<n;a:do{if(n){j=l}else{if(i=0<=(m-1|0)?m-1:3,p=r=BX(d,e,i,f,g),0<r){j=p}else{r=4>(m+1|0)?m+1:0;var y=BX(d,e,r,f,g);s=y;if(0<y){j=s}else{if(p>l){if(p>s){x=-1;t=i;w=p;var z=-1;i=23}else{i=20}}else{i=20}if(20==i){if(s<=l){c[a]=m;j=l;break}x=1;t=r;w=s;z=1}for(;;){m=t;m=-1==(z|0)?0<=(m-1|0)?t-1:3:4>(m+1|0)?t+1:0;i=l=z=BX(d,e,m,f,g);if(0<z){j=i;break a}if(i<=w){c[a]=t;j=w;break a}t=m;w=l;z=x}}}}}while(0);b=h;return j}GOa.X=1;function HOa(a,d,e,f,g,h){var i=b;b+=28;var j,l=i+4,m=i+16,n=i+20,p=i+24;j=d+34;d=g+18;g+=34;ue(l,h);Bo(m,e,(f<<2)+j);Bo(i,l,m);e=0;f=0xde0b6b000000000;l=0;j=4>(l|0);a:do{if(j){for(;;){if(m=J(i,(l<<2)+g),m<f&&(f=m,e=l),l+=1,4<=(l|0)){break a}}}}while(0);g=e;e=4>(g+1|0)?g+1:0;vw(n,h,(g<<2)+d);c[a]=c[n];k[a]=k[n];c[a+1]=c[n+1];k[a+1]=k[n+1];c[a+2]=c[n+2];k[a+2]=k[n+2];c[a+3]=c[n+3];k[a+3]=k[n+3];vw(p,h,(e<<2)+d);a+=5;c[a]=c[p];k[a]=k[p];c[a+1]=c[p+1];k[a+1]=k[p+1];c[a+2]=c[p+2];k[a+2]=k[p+2];c[a+3]=c[p+3];k[a+3]=k[p+3];b=i}HOa.X=1;function IOa(a,d,e,f){var g=b;b+=13;var h,i,j=g+1,l=g+5,m=g+9;h=0;i=J(e,d)-f;e=J(e,d+5)-f;0>=i&&(f=h,h=f+1,f=a+5*f,c[f]=c[d],k[f]=k[d],c[f+1]=c[d+1],k[f+1]=k[d+1],c[f+2]=c[d+2],k[f+2]=k[d+2],c[f+3]=c[d+3],k[f+3]=k[d+3],c[f+4]=c[d+4],k[f+4]=k[d+4]);f=e;if(0>=f){f=h;h=f+1;var f=a+5*f,n=d+5;c[f]=c[n];k[f]=k[n];c[f+1]=c[n+1];k[f+1]=k[n+1];c[f+2]=c[n+2];k[f+2]=k[n+2];c[f+3]=c[n+3];k[f+3]=k[n+3];c[f+4]=c[n+4];k[f+4]=k[n+4]}0>i*e&&(k[g]=i/(i-e),N(m,d+5,d),Q(l,m,g),wn(j,d,l),l=a+5*h,c[l]=c[j],k[l]=k[j],c[l+1]=c[j+1],k[l+1]=k[j+1],c[l+2]=c[j+2],k[l+2]=k[j+2],c[l+3]=c[j+3],k[l+3]=k[j+3],c[a+5*h+4]=0<i?c[d+4]:c[d+9],h+=1);b=g;return h}IOa.X=1;function OOa(a,d){0!=(c[a+3]|0)&&c[a+2]&1&&CX(d,a+3)}OOa.X=1;function CX(a,d){(AX(a)|0)==(MOa(a)|0)&&POa(a,KOa(a,AX(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}CX.X=1;function POa(a,d){var e;(MOa(a)|0)<(d|0)&&(e=QOa(a,d),NOa(a,0,AX(a),e),LOa(a,0,AX(a)),ROa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}POa.X=1;function QOa(a,d){return 0!=(d|0)?SOa(a,d,0):0}QOa.X=1;function ROa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&TOa(a,c[a+3]),c[a+3]=0)}ROa.X=1;function TOa(a,d){$1=a;yh(d)}TOa.X=1;function SOa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}SOa.X=1;function UOa(){return D.Nd}UOa.X=1;function VOa(){return 52}VOa.X=1;function WOa(){return 6}WOa.X=1;function XOa(){return 4}XOa.X=1;function YOa(){return 12}YOa.X=1;function ZOa(a){return a+3}ZOa.X=1;function $Oa(a){return k[a+11]}$Oa.X=1;function BX(a,d,e,f,g){var h=b;b+=32;var i,j=h+4,l=h+8,m,n,p=h+20,r=h+24,s=h+28;i=a+18;f+=18;Bo(h,d,(e<<2)+(a+34));ue(l,g);Bo(j,l,h);a=0;l=0xde0b6b000000000;m=0;var t=4>(m|0);a:do{if(t){for(;;){if(n=J((m<<2)+f,j),n<l&&(l=n,a=m),m+=1,4<=(m|0)){break a}}}}while(0);vw(p,d,(e<<2)+i);vw(r,g,(a<<2)+f);N(s,r,p);d=J(s,h);b=h;return d}BX.X=1;function aPa(a,d,e,f){DX(a+7,v[c[c[a]+11]](a),d,e,f)}aPa.X=1;function DX(a,d,e,f,g){var h=b;b+=40;var i=h+1,j=h+5,l=h+9,m=h+21,n=h+25,p=h+29,r=h+30,s=h+31,t=h+32,w=h+36;k[h]=d;H(j,h,h,h);wn(i,a,j);qc(l,e);a=e+12;c[m]=c[a];k[m]=k[a];c[m+1]=c[a+1];k[m+1]=k[a+1];c[m+2]=c[a+2];k[m+2]=k[a+2];c[m+3]=c[a+3];k[m+3]=k[a+3];k[p]=J(0+l,i);k[r]=J(4+l,i);k[s]=J(8+l,i);H(n,p,r,s);N(t,m,n);c[f]=c[t];k[f]=k[t];c[f+1]=c[t+1];k[f+1]=k[t+1];c[f+2]=c[t+2];k[f+2]=k[t+2];c[f+3]=c[t+3];k[f+3]=k[t+3];wn(w,m,n);c[g]=c[w];k[g]=k[w];c[g+1]=c[w+1];k[g+1]=k[w+1];c[g+2]=c[w+2];k[g+2]=k[w+2];c[g+3]=c[w+3];k[g+3]=k[w+3];b=h}DX.X=1;function bPa(a,d,e){var f=b;b+=7;var g,h,i=f+4,j=f+5,l=f+6;cPa(f,a);a=2*k[f];g=2*k[f+1];h=2*k[f+2];k[i]=d/12*(g*g+h*h);k[j]=d/12*(a*a+h*h);k[l]=d/12*(a*a+g*g);pe(e,i,j,l);b=f}bPa.X=1;function cPa(a,d){var e=b;b+=7;var f=e+4,g=e+5,h=e+6,i=d+7;c[a]=c[i];k[a]=k[i];c[a+1]=c[i+1];k[a+1]=k[i+1];c[a+2]=c[i+2];k[a+2]=k[i+2];c[a+3]=c[i+3];k[a+3]=k[i+3];k[f]=v[c[c[d]+11]](d);k[g]=v[c[c[d]+11]](d);k[h]=v[c[c[d]+11]](d);H(e,f,g,h);xn(a,e);b=e}cPa.X=1;function dPa(a){EX(a)}dPa.X=1;function ePa(a,d){var e=b;b+=23;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+19;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);eX(j,i,a+3);FX(a,d);ig(m,j,a+3);N(l,m,e);f=a+7;c[f]=c[l];k[f]=k[l];c[f+1]=c[l+1];k[f+1]=k[l+1];c[f+2]=c[l+2];k[f+2]=k[l+2];c[f+3]=c[l+3];k[f+3]=k[l+3];b=e}ePa.X=1;function fPa(a,d){var e=b;b+=22;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+16,n=e+17,p=e+18;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);fW(a,d);k[l]=v[c[c[a]+11]](a);k[m]=v[c[c[a]+11]](a);k[n]=v[c[c[a]+11]](a);H(j,l,m,n);N(p,i,j);f=a+7;c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];b=e}fPa.X=1;function GX(a,d,e){HX(a,d,e);mc(a+7,d+10);mc(a+3,d+6);k[d+14]=k[a+11];return D.nf}GX.X=1;function gPa(a,d,e){var f=b;b+=14;var g=f+4,h=f+8,i=f+9,j=f+10,l=f+11,m=f+12,n=f+13,p=d+7;c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];k[h]=v[c[c[d]+11]](d);k[i]=v[c[c[d]+11]](d);k[j]=v[c[c[d]+11]](d);H(g,h,i,j);xn(f,g);k[l]=0<=k[e]?k[f]:-k[f];k[m]=0<=k[e+1]?k[f+1]:-k[f+1];k[n]=0<=k[e+2]?k[f+2]:-k[f+2];H(a,l,m,n);b=f}gPa.X=1;function hPa(a,d,e){var f=b;b+=3;var g=f+1,h=f+2,d=d+7;k[f]=0<=k[e]?k[d]:-k[d];k[g]=0<=k[e+1]?k[d+1]:-k[d+1];k[h]=0<=k[e+2]?k[d+2]:-k[d+2];H(a,f,g,h);b=f}hPa.X=1;function iPa(a,d,e,f){var g=b;b+=3;var h,i,j=g+1,l=g+2,a=a+7;h=0;var m=(h|0)<(f|0);a:do{if(m){for(;;){if(i=(h<<2)+d,k[g]=0<=k[i]?k[a]:-k[a],k[j]=0<=k[i+1]?k[a+1]:-k[a+1],k[l]=0<=k[i+2]?k[a+2]:-k[a+2],pe((h<<2)+e,g,j,l),h+=1,(h|0)>=(f|0)){break a}}}}while(0);b=g}iPa.X=1;function jPa(a,d,e){var f=b;b+=18;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8,r=f+9,s=f+10,t=f+11,w=f+12,x=f+13,y=f+14,z=f+15,A=f+16,C=f+17;$1=a;0==(d|0)?(k[f]=1,k[g]=0,k[h]=0,pe(e,f,g,h)):1==(d|0)?(k[i]=-1,k[j]=0,k[l]=0,pe(e,i,j,l)):2==(d|0)?(k[m]=0,k[n]=1,k[p]=0,pe(e,m,n,p)):3==(d|0)?(k[r]=0,k[s]=-1,k[t]=0,pe(e,r,s,t)):4==(d|0)?(k[w]=0,k[x]=0,k[y]=1,pe(e,w,x,y)):5==(d|0)&&(k[z]=0,k[A]=0,k[C]=-1,pe(e,z,A,C));b=f}jPa.X=1;function kPa(a){EX(a);yh(a)}kPa.X=1;function lPa(){return 6}lPa.X=1;function mPa(){return 1}mPa.X=1;function nPa(a,d,e,f){var g,h;h=g=0;0==(d|0)?(g=0,h=1):1==(d|0)?(g=0,h=2):2==(d|0)?(g=1,h=3):3==(d|0)?(g=2,h=3):4==(d|0)?(g=0,h=4):5==(d|0)?(g=1,h=5):6==(d|0)?(g=2,h=6):7==(d|0)?(g=3,h=7):8==(d|0)?(g=4,h=5):9==(d|0)?(g=4,h=6):10==(d|0)?(g=5,h=7):11==(d|0)&&(g=6,h=7);v[c[c[a]+25]](a,g,e);v[c[c[a]+25]](a,h,f)}nPa.X=1;function oPa(a,d,e){var f=b;b+=11;var g=f+4,h=f+8,i=f+9,j=f+10,a=a+7;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];k[h]=k[f]*(1-(d&1)|0)-k[f]*(d&1|0);k[i]=k[f+1]*(1-((d&2)>>1)|0)-k[f+1]*((d&2)>>1|0);k[j]=k[f+2]*(1-((d&4)>>2)|0)-k[f+2]*((d&4)>>2|0);H(g,h,i,j);c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];b=f}oPa.X=1;function pPa(a,d,e,f){var g=b;b+=16;var h=g+4,i=g+8,j=g+12;v[c[c[a]+29]](a,g,f);H(h,g,g+1,g+2);c[d]=c[h];k[d]=k[h];c[d+1]=c[h+1];k[d+1]=k[h+1];c[d+2]=c[h+2];k[d+2]=k[h+2];c[d+3]=c[h+3];k[d+3]=k[h+3];f=c[c[a]+15];WP(j,d);v[f](i,a,j);c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];c[e+2]=c[i+2];k[e+2]=k[i+2];c[e+3]=c[i+3];k[e+3]=k[i+3];b=g}pPa.X=1;function qPa(a,d,e){var f=b;b+=4;a+=7;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];d=(k[d]<=k[f]+e?k[d]>=-k[f]-e?k[d+1]<=k[f+1]+e?k[d+1]>=-k[f+1]-e?k[d+2]<=k[f+2]+e?k[d+2]>=-k[f+2]-e:0:0:0:0:0)&1;b=f;return d}qPa.X=1;function rPa(a,d,e){var f=b;b+=28;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+8,m=f+9,n=f+10,p=f+11,r=f+12,s=f+13,t=f+14,w=f+15,x=f+16,y=f+17,z=f+18,A=f+19,C=f+20,B=f+21,K=f+22,E=f+23,G=f+24,M=f+25,L=f+26,F=f+27,a=a+7;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];0==(e|0)?(k[g]=1,k[h]=0,k[i]=0,k[j]=-k[f],$B(d,g,h,i,j)):1==(e|0)?(k[l]=-1,k[m]=0,k[n]=0,k[p]=-k[f],$B(d,l,m,n,p)):2==(e|0)?(k[r]=0,k[s]=1,k[t]=0,k[w]=-k[f+1],$B(d,r,s,t,w)):3==(e|0)?(k[x]=0,k[y]=-1,k[z]=0,k[A]=-k[f+1],$B(d,x,y,z,A)):4==(e|0)?(k[C]=0,k[B]=0,k[K]=1,k[E]=-k[f+2],$B(d,C,B,K,E)):5==(e|0)&&(k[G]=0,k[M]=0,k[L]=-1,k[F]=-k[f+2],$B(d,G,M,L,F));b=f}rPa.X=1;function sPa(a,d,e,f,g){aX(a,e,f,g);c[a]=IX+2;c[a+2]=0;c[a+3]=d;0==(c[a+3]|0)&&(d=c[a+1],v[c[c[d]+6]](d,f,g)&&(d=c[a+1],c[a+3]=v[c[c[d]+3]](d,f,g),c[a+2]=1))}sPa.X=1;function tPa(a){uPa(a);xe(a)}tPa.X=1;function uPa(a){c[a]=IX+2;if(c[a+2]&1&&0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3])}}uPa.X=1;function vPa(a,d,e,f,g){var h=b;b+=37;var i,j,l=h+34;0!=(c[a+3]|0)&&(i=bi(d),j=bi(e),fI(g,c[a+3]),QQ(h),k[h+32]=0xde0b6b000000000,xi(h,d+1),xi(h+16,e+1),wPa(l,i,j),xPa(l,h,g,c[f+5],0),c[a+2]&1&&DI(g));b=h}vPa.X=1;function yPa(){}yPa.X=1;function zPa(a,d){0!=(c[a+3]|0)&&c[a+2]&1&&CX(d,a+3)}zPa.X=1;function wPa(a,d,e){XW(a);c[a]=APa+2;c[a+1]=d;c[a+2]=e}wPa.X=1;function BPa(a,d,e,f,g,h){var i=b;b+=4;k[i]=k[e]-k[a];k[i+1]=k[e+1]-k[a+1];k[i+2]=k[e+2]-k[a+2];a=JX(d,f);d=JX(d,i);f=-JX(f,i);e=1-a*a;9999999747378752e-20>=e?(k[g]=0,k[h]=0):(e=1/e,k[g]=(d+a*f)*e,k[h]=(a*d+f)*e);b=i}BPa.X=1;function JX(a,d){return k[a]*k[d]+k[a+1]*k[d+1]+k[a+2]*k[d+2]}JX.X=1;function CPa(a,d,e,f,g){var h=b;b+=16;var i,j,l,m,n,p=h+8;if(1==(a|0)){l=k[d],m=k[d+1]}else{if(2==(a|0)){l=.5*(k[d]+k[d+2]),m=.5*(k[d+1]+k[d+3])}else{i=m=l=j=0;var r=(i|0)<(a-1|0);a:do{if(r){for(;;){if(n=k[(i<<1)+d]*k[(i<<1)+d+3]-k[(i<<1)+d+2]*k[(i<<1)+d+1],j+=n,l+=n*(k[(i<<1)+d]+k[(i<<1)+d+2]),m+=n*(k[(i<<1)+d+1]+k[(i<<1)+d+3]),i+=1,(i|0)>=(a-1|0)){break a}}}}while(0);n=k[d+((a<<1)-2)]*k[d+1]-k[d]*k[d+((a<<1)-1)];j=1.1920928955078125e-7<sc(j+n)?1/(3*(j+n)):0xde0b6b000000000;l=j*(l+n*(k[d+((a<<1)-2)]+k[d]));m=j*(m+n*(k[d+((a<<1)-1)]+k[d+1]))}}i=0;j=(i|0)<(a|0);a:do{if(j){for(;;){if(k[h+i]=ee(k[(i<<1)+d+1]-m,k[(i<<1)+d]-l),i+=1,(i|0)>=(a|0)){break a}}}}while(0);i=0;j=(i|0)<(a|0);a:do{if(j){for(;;){if(c[p+i]=1,i+=1,(i|0)>=(a|0)){break a}}}}while(0);c[p+f]=0;c[g]=f;g+=1;d=1;l=(d|0)<(e|0);a:do{if(l){for(;;){j=i=(d|0)*(6.2831854820251465/(e|0))+k[h+f];3.1415927410125732<i&&(j-=6.2831854820251465);m=1e9;c[g]=f;i=0;r=(i|0)<(a|0);b:do{if(r){for(;;){if(0!=(c[p+i]|0)&&(n=sc(k[h+i]-j),3.1415927410125732<n&&(n=6.2831854820251465-n),n<m&&(m=n,c[g]=i)),i+=1,(i|0)>=(a|0)){break b}}}}while(0);c[p+c[g]]=0;g+=1;d+=1;if((d|0)>=(e|0)){break a}}}}while(0);b=h}CPa.X=1;function DPa(a,d,e,f,g,h,i,j,l,m,n,p,r){var s=b;b+=169;var t,w,x,y=s+4,z=s+8,A=s+12,C=s+13,B=s+14,K,E=s+15,G=s+18,M,L,F,I,R,O,Z,P,S,da,V,ba,$,Y,la,ka,ja,ea,ca,W,U,X,ma,ga,ha,ta=s+21,ra=s+25,ua,za=s+29,Za=s+33,ib=s+34,Ca=s+35,Sa=s+39,mb=s+47,Oa,Pa,fc,jb,La,fb,Rb=s+51,pb=s+55,Sb=s+59,ab,Ib,Fc,Ac=s+63,ob,Gc,Yc,Cc=s+67,Ub,Uc,nd,Ic,tc,hd,Tb,Jc,ub,uc,Kc=s+75,gb=s+77,gc,Lc=s+93,Dc=s+117,Eb,Ra,qb,Ab,hc=s+125,Hc=s+129,ic=s+133,db=s+137,bb,id,Zc=s+141,vb=s+149,rb=s+153,vc=s+157,Qc=s+161,Rc=s+165;x=m;$14=n;$15=p;$fudge_factor=1.0499999523162842;k[A]=0;k[C]=0;k[B]=0;H(z,A,C,B);K=0;N(ta,f,a);c[s]=c[ta];k[s]=k[ta];c[s+1]=c[ta+1];k[s+1]=k[ta+1];c[s+2]=c[ta+2];k[s+2]=k[ta+2];c[s+3]=c[ta+3];k[s+3]=k[ta+3];k[y]=KX(d,s);k[y+1]=KX(d+1,s);k[y+2]=KX(d+2,s);k[E]=.5*k[e];k[E+1]=.5*k[e+1];k[E+2]=.5*k[e+2];k[G]=.5*k[h];k[G+1]=.5*k[h+1];k[G+2]=.5*k[h+2];M=LX(d,g);L=LX(d,g+1);F=LX(d,g+2);I=LX(d+1,g);R=LX(d+1,g+1);O=LX(d+1,g+2);Z=LX(d+2,g);P=LX(d+2,g+1);S=LX(d+2,g+2);da=sc(M);V=sc(L);ba=sc(F);$=sc(I);Y=sc(R);la=sc(O);ka=sc(Z);ja=sc(P);ea=sc(S);ca=-3.4028234663852886e+38;ha=ga=0;W=sc(k[y])-(k[E]+k[G]*da+k[G+1]*V+k[G+2]*ba);var Xd=0<W;a:do{if(Xd){w=0}else{W>ca&&(ca=W,K=d,ga=0>k[y]&1,ha=1);var Sc=sc(k[y+1])-(k[E+1]+k[G]*$+k[G+1]*Y+k[G+2]*la);W=Sc;if(0<Sc){w=0}else{W>ca&&(ca=W,K=d+1,ga=0>k[y+1]&1,ha=2);var Mc=sc(k[y+2])-(k[E+2]+k[G]*ka+k[G+1]*ja+k[G+2]*ea);W=Mc;if(0<Mc){w=0}else{W>ca&&(ca=W,K=d+2,ga=0>k[y+2]&1,ha=3);var $c=sc(KX(g,s))-(k[E]*da+k[E+1]*$+k[E+2]*ka+k[G]);W=$c;if(0<$c){w=0}else{W>ca&&(ca=W,K=g,ga=0>KX(g,s)&1,ha=4);var Cd=sc(KX(g+1,s))-(k[E]*V+k[E+1]*Y+k[E+2]*ja+k[G+1]);W=Cd;if(0<Cd){w=0}else{W>ca&&(ca=W,K=g+1,ga=0>KX(g+1,s)&1,ha=5);var wc=sc(KX(g+2,s))-(k[E]*ba+k[E+1]*la+k[E+2]*ea+k[G+2]);W=wc;if(0<wc){w=0}else{W>ca&&(ca=W,K=g+2,ga=0>KX(g+2,s)&1,ha=6);da+=9999999747378752e-21;V+=9999999747378752e-21;ba+=9999999747378752e-21;$+=9999999747378752e-21;Y+=9999999747378752e-21;la+=9999999747378752e-21;ka+=9999999747378752e-21;ja+=9999999747378752e-21;ea+=9999999747378752e-21;var Bb=sc(k[y+2]*I-k[y+1]*Z)-(k[E+1]*ka+k[E+2]*$+k[G+1]*ba+k[G+2]*V);W=Bb;if(1.1920928955078125e-7<Bb){w=0}else{U=ec(-Z*-Z+I*I);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=0,k[z+1]=-Z/U,k[z+2]=I/U,ga=0>k[y+2]*I-k[y+1]*Z&1,ha=7));var fd=sc(k[y+2]*R-k[y+1]*P)-(k[E+1]*ja+k[E+2]*Y+k[G]*ba+k[G+2]*da);W=fd;if(1.1920928955078125e-7<fd){w=0}else{U=ec(-P*-P+R*R);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=0,k[z+1]=-P/U,k[z+2]=R/U,ga=0>k[y+2]*R-k[y+1]*P&1,ha=8));var ad=sc(k[y+2]*O-k[y+1]*S)-(k[E+1]*ea+k[E+2]*la+k[G]*V+k[G+1]*da);W=ad;if(1.1920928955078125e-7<ad){w=0}else{U=ec(-S*-S+O*O);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=0,k[z+1]=-S/U,k[z+2]=O/U,ga=0>k[y+2]*O-k[y+1]*S&1,ha=9));var wd=sc(k[y]*Z-k[y+2]*M)-(k[E]*ka+k[E+2]*da+k[G+1]*la+k[G+2]*Y);W=wd;if(1.1920928955078125e-7<wd){w=0}else{U=ec(Z*Z+ -M*-M);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=Z/U,k[z+1]=0,k[z+2]=-M/U,ga=0>k[y]*Z-k[y+2]*M&1,ha=10));var Kd=sc(k[y]*P-k[y+2]*L)-(k[E]*ja+k[E+2]*V+k[G]*la+k[G+2]*$);W=Kd;if(1.1920928955078125e-7<Kd){w=0}else{U=ec(P*P+ -L*-L);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=P/U,k[z+1]=0,k[z+2]=-L/U,ga=0>k[y]*P-k[y+2]*L&1,ha=11));var Rd=sc(k[y]*S-k[y+2]*F)-(k[E]*ea+k[E+2]*ba+k[G]*Y+k[G+1]*$);W=Rd;if(1.1920928955078125e-7<Rd){w=0}else{U=ec(S*S+ -F*-F);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=S/U,k[z+1]=0,k[z+2]=-F/U,ga=0>k[y]*S-k[y+2]*F&1,ha=12));var Ec=sc(k[y+1]*M-k[y]*I)-(k[E]*$+k[E+1]*da+k[G+1]*ea+k[G+2]*ja);W=Ec;if(1.1920928955078125e-7<Ec){w=0}else{U=ec(-I*-I+M*M);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=-I/U,k[z+1]=M/U,k[z+2]=0,ga=0>k[y+1]*M-k[y]*I&1,ha=13));var xd=sc(k[y+1]*L-k[y]*R)-(k[E]*Y+k[E+1]*V+k[G]*ea+k[G+2]*ka);W=xd;if(1.1920928955078125e-7<xd){w=0}else{U=ec(-R*-R+L*L);1.1920928955078125e-7<U&&(W/=U,1.0499999523162842*W>ca&&(ca=W,K=0,k[z]=-R/U,k[z+1]=L/U,k[z+2]=0,ga=0>k[y+1]*L-k[y]*R&1,ha=14));var od=sc(k[y+1]*F-k[y]*O)-(k[E]*la+k[E+1]*ba+k[G]*ja+k[G+1]*ka);W=od;if(1.1920928955078125e-7<od){w=0}else{U=ec(-O*-O+F*F);1.1920928955078125e-7<U?(W/=U,1.0499999523162842*W>ca?(ca=W,K=0,k[z]=-O/U,k[z+1]=F/U,k[z+2]=0,ga=0>k[y+1]*F-k[y]*O&1,ha=15,t=73):t=71):t=71;do{if(71==t&&0==(ha|0)){w=0;break a}}while(0);0!=(K|0)?(k[i]=k[K],k[i+1]=k[K+4],k[i+2]=k[K+8]):(k[i]=JX(d,z),k[i+1]=JX(d+4,z),k[i+2]=JX(d+8,z));0!=(ga|0)&&(k[i]=-k[i],k[i+1]=-k[i+1],k[i+2]=-k[i+2]);k[j]=-ca;if(6<(ha|0)){for(X=0;;){k[ra+X]=k[a+X];var pd=X+1;X=pd;if(3<=(pd|0)){break}}for(ma=0;;){ua=0<MX(i,d+ma)?1:-1;for(X=0;;){var bd=ra+X;k[bd]+=ua*k[E+ma]*k[(X<<2)+d+ma];var jd=X+1;X=jd;if(3<=(jd|0)){break}}var Ld=ma+1;ma=Ld;if(3<=(Ld|0)){break}}for(X=0;;){k[za+X]=k[f+X];var Gd=X+1;X=Gd;if(3<=(Gd|0)){break}}for(ma=0;;){ua=0<MX(i,g+ma)?-1:1;for(X=0;;){var Dd=za+X;k[Dd]+=ua*k[G+ma]*k[(X<<2)+g+ma];var fe=X+1;X=fe;if(3<=(fe|0)){break}}var ge=ma+1;ma=ge;if(3<=(ge|0)){break}}for(X=0;;){k[Ca+X]=k[(X<<2)+d+((ha-7|0)/3&-1)];var Hd=X+1;X=Hd;if(3<=(Hd|0)){break}}for(X=0;;){k[Sa+X]=k[(X<<2)+g+(ha-7|0)%3];var he=X+1;X=he;if(3<=(he|0)){break}}BPa(ra,Ca,za,Sa,Za,ib);for(X=0;;){var Zd=ra+X;k[Zd]+=k[Ca+X]*k[Za];var $d=X+1;X=$d;if(3<=($d|0)){break}}for(X=0;;){var pg=za+X;k[pg]+=k[Sa+X]*k[ib];var Ze=X+1;X=Ze;if(3<=(Ze|0)){break}}var Xg=r,Dh=c[c[Xg]+4];WP(mb,i);v[Dh](Xg,mb,za,-k[j]);c[l]=ha;w=1}else{3>=(ha|0)?(Oa=d,Pa=g,fc=a,jb=f,La=E,fb=G):(Oa=g,Pa=d,fc=f,jb=a,La=G,fb=E);var wf=k[i];3>=(ha|0)?(k[Rb]=wf,k[Rb+1]=k[i+1],k[Rb+2]=k[i+2]):(k[Rb]=-wf,k[Rb+1]=-k[i+1],k[Rb+2]=-k[i+2]);k[pb]=KX(Pa,Rb);k[pb+1]=KX(Pa+1,Rb);k[pb+2]=KX(Pa+2,Rb);var Oe=sc(k[pb]);k[Sb]=Oe;var If=sc(k[pb+1]);k[Sb+1]=If;var Ai=sc(k[pb+2]);k[Sb+2]=Ai;var qg=Sb;if(k[Sb+1]>k[Sb]){var Yg=k[qg+1];Ib=0;Yg>k[Sb+2]?(ab=1,Fc=2):(Fc=1,ab=2)}else{k[qg]>k[Sb+2]?(ab=0,Ib=1,Fc=2):(Ib=0,Fc=1,ab=2)}var Zg=0>k[pb+ab];X=0;b:do{if(Zg){for(;;){k[Ac+X]=k[jb+X]-k[fc+X]+k[fb+ab]*k[(X<<2)+Pa+ab];var Vf=X+1;X=Vf;if(3<=(Vf|0)){break b}}}else{for(;;){k[Ac+X]=k[jb+X]-k[fc+X]-k[fb+ab]*k[(X<<2)+Pa+ab];var rg=X+1;X=rg;if(3<=(rg|0)){break b}}}}while(0);var sg=ha;if(3>=(ha|0)){var om=sg-1,mn=ob=om}else{var yl=sg-4,mn=ob=yl}0==(mn|0)?(Gc=1,Yc=2):(Gc=0,Yc=1==(ob|0)?2:1);Ub=MX(Ac,Oa+Gc);Uc=MX(Ac,Oa+Yc);nd=LX(Oa+Gc,Pa+Ib);Ic=LX(Oa+Gc,Pa+Fc);tc=LX(Oa+Yc,Pa+Ib);hd=LX(Oa+Yc,Pa+Fc);Tb=nd*k[fb+Ib];Jc=tc*k[fb+Ib];ub=Ic*k[fb+Fc];uc=hd*k[fb+Fc];k[Cc]=Ub-Tb-ub;k[Cc+1]=Uc-Jc-uc;k[Cc+2]=Ub-Tb+ub;k[Cc+3]=Uc-Jc+uc;k[Cc+4]=Ub+Tb+ub;k[Cc+5]=Uc+Jc+uc;k[Cc+6]=Ub+Tb-ub;k[Cc+7]=Uc+Jc-uc;k[Kc]=k[La+Gc];k[Kc+1]=k[La+Yc];var tg=EPa(Kc,Cc,gb);gc=tg;if(1<=(tg|0)){Eb=1/(nd*hd-Ic*tc);nd*=Eb;Ic*=Eb;tc*=Eb;hd*=Eb;ma=Ra=0;var $e=(ma|0)<(gc|0);do{if($e){for(var af=Lc;;){qb=hd*(k[(ma<<1)+gb]-Ub)-Ic*(k[(ma<<1)+gb+1]-Uc);Ab=-tc*(k[(ma<<1)+gb]-Ub)+nd*(k[(ma<<1)+gb+1]-Uc);for(X=0;;){k[Lc+3*Ra+X]=k[Ac+X]+qb*k[(X<<2)+Pa+Ib]+Ab*k[(X<<2)+Pa+Fc];var Wf=X+1;X=Wf;if(3<=(Wf|0)){break}}k[Dc+Ra]=k[La+ob]-JX(Rb,af+3*Ra);0<=k[Dc+Ra]&&(k[(Ra<<1)+gb]=k[(ma<<1)+gb],k[(Ra<<1)+gb+1]=k[(ma<<1)+gb+1],Ra+=1);ma+=1;if((ma|0)>=(gc|0)){break}}if(1<=(Ra|0)){var Xf=x;if((Xf|0)>(Ra|0)){var ug=Ra,vg=x=ug}else{vg=Xf}1>(vg|0)&&(x=1);var rh=(Ra|0)<=(x|0);b:do{if(rh){ma=0;var nn=(ma|0)<(Ra|0);if(4>(ha|0)){if(nn){for(;;){for(X=0;;){k[hc+X]=k[Lc+3*ma+X]+k[fc+X];var on=X+1;X=on;if(3<=(on|0)){break}}var $g=r,Eh=c[c[$g]+4];WP(Hc,i);v[Eh]($g,Hc,hc,-k[Dc+ma]);ma+=1;if((ma|0)>=(Ra|0)){break b}}}}else{if(nn){for(;;){for(X=0;;){k[ic+X]=k[Lc+3*ma+X]+k[fc+X]-k[i+X]*k[Dc+ma];var pn=X+1;X=pn;if(3<=(pn|0)){break}}var $u=r,qja=c[c[$u]+4];WP(db,i);v[qja]($u,db,ic,-k[Dc+ma]);ma+=1;if((ma|0)>=(Ra|0)){break b}}}}}else{bb=0;id=k[Dc];X=1;var hC=(X|0)<(Ra|0);c:do{if(hC){for(;;){if(k[Dc+X]>id&&(id=k[Dc+X],bb=X),X+=1,(X|0)>=(Ra|0)){break c}}}}while(0);CPa(Ra,gb,x,bb,Zc);ma=0;var iC=(ma|0)<(x|0);c:do{if(iC){for(;;){for(X=0;;){k[vb+X]=k[Lc+3*c[Zc+ma]+X]+k[fc+X];var av=X+1;X=av;if(3<=(av|0)){break}}var nr=r,bv=c[c[nr]+4],cv=i;4>(ha|0)?(WP(rb,cv),v[bv](nr,rb,vb,-k[Dc+c[Zc+ma]])):(WP(vc,cv),Q(Rc,i,Dc+c[Zc+ma]),N(Qc,vb,Rc),v[bv](nr,vc,Qc,-k[Dc+c[Zc+ma]]));ma+=1;if((ma|0)>=(x|0)){break c}}}}while(0);Ra=x}}while(0);c[l]=ha;w=Ra;break a}}}while(0)}w=0}}}}}}}}}}}}}}}}}while(0);var rja=w;b=s;return rja}DPa.X=1;function FPa(){return D.Sd}FPa.X=1;function KX(a,d){return k[a]*k[d]+k[a+4]*k[d+1]+k[a+8]*k[d+2]}KX.X=1;function LX(a,d){return k[a]*k[d]+k[a+4]*k[d+4]+k[a+8]*k[d+8]}LX.X=1;function MX(a,d){return k[a]*k[d]+k[a+1]*k[d+4]+k[a+2]*k[d+8]}MX.X=1;function EPa(a,d,e){var f=b;b+=16;var g,h,i,j,l,m,n,p,r;g=4;h=0;i=e;var s=j=0;a:for(;1>=(s|0);){var t=l=-1;b:for(;;){if(!(1>=(t|0))){s=j=l=j+1;continue a}m=d;n=i;h=0;for(p=r=g;;){if(0>=(r|0)){d=i;i=(d|0)==(e|0)?f:e;g=h;t=l=m=l+2;continue b}r=(l|0)*k[m+j]<k[a+j];do{if(r&&(k[n]=k[m],k[n+1]=k[m+1],n+=2,h+=1,0!=(h&8|0))){d=i;break a}}while(0);r=1<(p|0)?m+2:d;var w=0!=((l|0)*k[r+j]<k[a+j]&1^(l|0)*k[m+j]<k[a+j]&1|0);do{if(w&&(k[n+(1-j)]=k[m+(1-j)]+(k[r+(1-j)]-k[m+(1-j)])/(k[r+j]-k[m+j])*((l|0)*k[a+j]-k[m+j]),k[n+j]=(l|0)*k[a+j],n+=2,h+=1,0!=(h&8|0))){d=i;break a}}while(0);m+=2;p=r=p-1}}}if((d|0)!=(e|0)){a=d;for(g=a+1*((h<<3)/4);a<g;a++,e++){c[e]=c[a],k[e]=k[a]}}b=f;return h}EPa.X=1;function xPa(a,d,e,f,g){var h=b;b+=48;var i=h+12,j=h+24,l=h+28,m=h+29,n=h+30,p=h+34,r=h+35,s=h+39,t=h+43,w=h+44;$6=f;$7=g&1;f=d+16;for(g=0;;){k[(g<<2)+h]=k[(g<<2)+d];k[(g<<2)+i]=k[(g<<2)+f];k[(g<<2)+h+1]=k[(g<<2)+d+1];k[(g<<2)+i+1]=k[(g<<2)+f+1];k[(g<<2)+h+2]=k[(g<<2)+d+2];k[(g<<2)+i+2]=k[(g<<2)+f+2];var x=g+1,g=x;if(3<=(x|0)){break}}d+=12;k[p]=2;nV(r,c[a+1]);Q(n,r,p);p=f+12;k[t]=2;nV(w,c[a+2]);Q(s,w,t);DPa(d,h,n,p,i,s,j,l,m,4,0,0,e);b=h}xPa.X=1;function GPa(a){xe(a)}GPa.X=1;function HPa(a,d,e,f){DX(a+7,v[c[c[a]+11]](a),d,e,f)}HPa.X=1;function IPa(a,d,e){var f=b;b+=7;var g,h,i=f+4,j=f+5,l=f+6;nV(f,a);a=2*k[f];g=2*k[f+1];h=2*k[f+2];k[i]=d/12*(g*g+h*h);k[j]=d/12*(a*a+h*h);k[l]=d/12*(a*a+g*g);pe(e,i,j,l);b=f}IPa.X=1;function JPa(a){EX(a)}JPa.X=1;function KPa(a,d){var e=b;b+=23;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+19;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);eX(j,i,a+3);FX(a,d);ig(m,j,a+3);N(l,m,e);f=a+7;c[f]=c[l];k[f]=k[l];c[f+1]=c[l+1];k[f+1]=k[l+1];c[f+2]=c[l+2];k[f+2]=k[l+2];c[f+3]=c[l+3];k[f+3]=k[l+3];b=e}KPa.X=1;function LPa(a,d){var e=b;b+=22;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+16,n=e+17,p=e+18;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);fW(a,d);k[l]=v[c[c[a]+11]](a);k[m]=v[c[c[a]+11]](a);k[n]=v[c[c[a]+11]](a);H(j,l,m,n);N(p,i,j);f=a+7;c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];b=e}LPa.X=1;function MPa(a,d,e){var f=b;b+=14;var g=f+4,h=f+8,i=f+9,j=f+10,l=f+11,m=f+12,n=f+13,p=d+7;c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];k[h]=v[c[c[d]+11]](d);k[i]=v[c[c[d]+11]](d);k[j]=v[c[c[d]+11]](d);H(g,h,i,j);xn(f,g);k[l]=0<=k[e]?k[f]:-k[f];k[m]=0<=k[e+1]?k[f+1]:-k[f+1];k[n]=0<=k[e+2]?k[f+2]:-k[f+2];H(a,l,m,n);b=f}MPa.X=1;function NPa(a,d,e){var f=b;b+=3;var g=f+1,h=f+2,d=d+7;k[f]=0<=k[e]?k[d]:-k[d];k[g]=0<=k[e+1]?k[d+1]:-k[d+1];k[h]=0<=k[e+2]?k[d+2]:-k[d+2];H(a,f,g,h);b=f}NPa.X=1;function OPa(a){EX(a);yh(a)}OPa.X=1;function PPa(){return 6}PPa.X=1;function QPa(){return 8}QPa.X=1;function RPa(){return 12}RPa.X=1;function SPa(){return 6}SPa.X=1;function TPa(a,d){return d}TPa.X=1;function UPa(a,d,e,f){var g=b;b+=3;var h,i,j=g+1,l=g+2,a=a+7;h=0;var m=(h|0)<(f|0);a:do{if(m){for(;;){if(i=(h<<2)+d,k[g]=0<=k[i]?k[a]:-k[a],k[j]=0<=k[i+1]?k[a+1]:-k[a+1],k[l]=0<=k[i+2]?k[a+2]:-k[a+2],pe((h<<2)+e,g,j,l),h+=1,(h|0)>=(f|0)){break a}}}}while(0);b=g}UPa.X=1;function VPa(a,d,e){var f=b;b+=18;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8,r=f+9,s=f+10,t=f+11,w=f+12,x=f+13,y=f+14,z=f+15,A=f+16,C=f+17;$1=a;0==(d|0)?(k[f]=1,k[g]=0,k[h]=0,pe(e,f,g,h)):1==(d|0)?(k[i]=-1,k[j]=0,k[l]=0,pe(e,i,j,l)):2==(d|0)?(k[m]=0,k[n]=1,k[p]=0,pe(e,m,n,p)):3==(d|0)?(k[r]=0,k[s]=-1,k[t]=0,pe(e,r,s,t)):4==(d|0)?(k[w]=0,k[x]=0,k[y]=1,pe(e,w,x,y)):5==(d|0)&&(k[z]=0,k[A]=0,k[C]=-1,pe(e,z,A,C));b=f}VPa.X=1;function WPa(a,d,e,f){var g,h;h=g=0;0==(d|0)?(g=0,h=1):1==(d|0)?(g=0,h=2):2==(d|0)?(g=1,h=3):3==(d|0)?(g=2,h=3):4==(d|0)?(g=0,h=4):5==(d|0)?(g=1,h=5):6==(d|0)?(g=2,h=6):7==(d|0)?(g=3,h=7):8==(d|0)?(g=4,h=5):9==(d|0)?(g=4,h=6):10==(d|0)?(g=5,h=7):11==(d|0)&&(g=6,h=7);v[c[c[a]+25]](a,g,e);v[c[c[a]+25]](a,h,f)}WPa.X=1;function XPa(a,d,e){var f=b;b+=11;var g=f+4,h=f+8,i=f+9,j=f+10;nV(f,a);k[h]=k[f]*(1-(d&1)|0)-k[f]*(d&1|0);k[i]=k[f+1]*(1-((d&2)>>1)|0)-k[f+1]*((d&2)>>1|0);k[j]=k[f+2]*(1-((d&4)>>2)|0)-k[f+2]*((d&4)>>2|0);H(g,h,i,j);c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];b=f}XPa.X=1;function YPa(a,d,e,f){var g=b;b+=16;var h=g+4,i=g+8,j=g+12;v[c[c[a]+29]](a,g,f);H(h,g,g+1,g+2);c[d]=c[h];k[d]=k[h];c[d+1]=c[h+1];k[d+1]=k[h+1];c[d+2]=c[h+2];k[d+2]=k[h+2];c[d+3]=c[h+3];k[d+3]=k[h+3];f=c[c[a]+15];WP(j,d);v[f](i,a,j);c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];c[e+2]=c[i+2];k[e+2]=k[i+2];c[e+3]=c[i+3];k[e+3]=k[i+3];b=g}YPa.X=1;function ZPa(a,d,e){var f=b;b+=4;a+=7;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];d=(k[d]<=k[f]+e?k[d]>=-k[f]-e?k[d+1]<=k[f+1]+e?k[d+1]>=-k[f+1]-e?k[d+2]<=k[f+2]+e?k[d+2]>=-k[f+2]-e:0:0:0:0:0)&1;b=f;return d}ZPa.X=1;function $Pa(a,d,e){var f=b;b+=28;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+8,m=f+9,n=f+10,p=f+11,r=f+12,s=f+13,t=f+14,w=f+15,x=f+16,y=f+17,z=f+18,A=f+19,C=f+20,B=f+21,K=f+22,E=f+23,G=f+24,M=f+25,L=f+26,F=f+27,a=a+7;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];0==(e|0)?(k[g]=1,k[h]=0,k[i]=0,k[j]=-k[f],$B(d,g,h,i,j)):1==(e|0)?(k[l]=-1,k[m]=0,k[n]=0,k[p]=-k[f],$B(d,l,m,n,p)):2==(e|0)?(k[r]=0,k[s]=1,k[t]=0,k[w]=-k[f+1],$B(d,r,s,t,w)):3==(e|0)?(k[x]=0,k[y]=-1,k[z]=0,k[A]=-k[f+1],$B(d,x,y,z,A)):4==(e|0)?(k[C]=0,k[B]=0,k[K]=1,k[E]=-k[f+2],$B(d,C,B,K,E)):5==(e|0)&&(k[G]=0,k[M]=0,k[L]=-1,k[F]=-k[f+2],$B(d,G,M,L,F));b=f}$Pa.X=1;function yR(a,d,e,f){e&=1;f&=1;NX(a,d);c[a]=OX+2;c[a+13]=0;c[a+14]=0;c[a+15]=e&1;c[a+16]=0;c[a+1]=21;f&1&&hR(a)}yR.X=1;function hR(a){if(c[a+16]&1){var d=c[a+13];v[c[c[d]]](d);yh(c[a+13])}d=TPa(0,Ue(172,16));xp(d);c[a+13]=d;cp(c[a+13],c[a+12],c[a+15]&1,a+4,a+8);c[a+16]=1}hR.X=1;function BR(a,d,e,f,g,h){e&=1;h&=1;NX(a,d);c[a]=OX+2;c[a+13]=0;c[a+14]=0;c[a+15]=e&1;c[a+16]=0;c[a+1]=21;h&1&&(h=TPa(0,Ue(172,16)),xp(h),c[a+13]=h,cp(c[a+13],d,c[a+15]&1,f,g),c[a+16]=1)}BR.X=1;function lR(a,d,e){dp(c[a+13],c[a+12],d,e);hp(a+4,d);gp(a+8,e)}lR.X=1;function aR(a,d,e){ip(c[a+13],c[a+12],d,e);jR(a)}aR.X=1;function aQa(a){bQa(a);yh(a)}aQa.X=1;function cQa(){return D.Vd}cQa.X=1;function dQa(){return 60}dQa.X=1;function PX(a){c[a]=eQa+2}PX.X=1;function fQa(a,d){k[a+3]=d}fQa.X=1;function gQa(a){return k[a+3]}gQa.X=1;function bQa(a){c[a]=OX+2;if(c[a+16]&1){var d=c[a+13];v[c[c[d]]](d);yh(c[a+13])}}bQa.X=1;function cR(a,d,e,f){var g=b;b+=3;hQa(g,d,c[a+12]);ap(c[a+13],g,e,f);b=g}cR.X=1;function mR(a,d,e,f,g,h){var i=b;b+=3;iQa(i,d,c[a+12]);sp(c[a+13],i,e,f,g,h);b=i}mR.X=1;function jQa(a,d,e,f){var g=b;b+=15;kQa(g,d,c[a+12]);$o(c[a+13],g,e,f);b=g}jQa.X=1;function lQa(a,d){var e=b;b+=4;N(e,v[c[c[a]+7]](a),d);1.1920928955078125e-7<Um(e)&&(QX(a,d),hR(a));b=e}lQa.X=1;function wR(a,d,e){var f=b;b+=4;c[a+13]=d;c[a+16]=0;N(f,v[c[c[a]+7]](a),e);1.1920928955078125e-7<Um(f)&&QX(a,e);b=f}wR.X=1;function mQa(a,d,e){var f,g;HX(a,d,e);f=c[a+12];v[c[c[f]+14]](f,d+6,e);k[d+19]=k[a+3];0!=(c[a+13]|0)?0!=(v[c[c[e]+13]](e)&1|0)?f=7:(f=v[c[c[e]+6]](e,c[a+13]),0!=(f|0)?(c[d+16]=f,c[d+17]=0):(c[d+16]=v[c[c[e]+7]](e,c[a+13]),c[d+17]=0,f=c[a+13],f=v[c[c[f]+3]](f),f=v[c[c[e]+4]](e,f,1),g=c[a+13],g=v[c[c[g]+4]](g,c[f+2],e),v[c[c[e]+5]](e,f,g,1213612625,c[a+13])),f=8):f=7;7==f&&(c[d+16]=0,c[d+17]=0);0!=(c[a+14]|0)?0!=(v[c[c[e]+13]](e)&2|0)?f=13:(f=v[c[c[e]+6]](e,c[a+14]),0!=(f|0)?c[d+18]=f:(c[d+18]=v[c[c[e]+7]](e,c[a+14]),f=c[a+14],f=v[c[c[f]+2]](f),f=v[c[c[e]+4]](e,f,1),g=c[a+14],g=v[c[c[g]+3]](g,c[f+2],e),v[c[c[e]+5]](e,f,g,1346456916,c[a+14])),f=14):f=13;13==f&&(c[d+18]=0);return D.me}mQa.X=1;function nQa(a,d){var e,f;0!=(c[a+13]|0)&&(e=c[a+13],e=v[c[c[e]+3]](e),e=v[c[c[d]+4]](d,e,1),f=c[a+13],f=v[c[c[f]+4]](f,c[e+2],d),v[c[c[d]+5]](d,e,f,1213612625,c[a+13]))}nQa.X=1;function oQa(a,d){var e,f;0!=(c[a+14]|0)&&(e=c[a+14],e=v[c[c[e]+2]](e),e=v[c[c[d]+4]](d,e,1),f=c[a+14],f=v[c[c[f]+3]](f,c[e+2],d),v[c[c[d]+5]](d,e,f,1346456916,c[a+14]))}oQa.X=1;function pQa(a,d,e){v[c[c[d]+16]](a,d,e)}pQa.X=1;function qQa(){}qQa.X=1;function kQa(a,d,e){PX(a);c[a]=rQa+2;c[a+1]=e;c[a+2]=d}kQa.X=1;function sQa(a){xe(a)}sQa.X=1;function tQa(a,d,e){var f=b;b+=22;var g=f+2,h=f+3,i=f+4,j=f+5,l=f+7,m,n,p=f+8,r=f+12,s=f+13,t=f+14,w=f+15,x=f+19,y=f+20,z=f+21;m=c[a+1];v[c[c[m]+4]](m,f,f+1,g,h,i,j,f+6,l,d);i=c[i]+c[j]*e;j=c[a+1]+1;m=2;for(var A=a+3,C=a+3;;){if(3==(c[l]|0)){n=c[i+m]&65535}else{n=m;var B=i;n=2==(c[l]|0)?c[B+n]:c[B+n]&255}n=c[f]+c[h]*n;0==(c[g]|0)?(k[r]=k[n]*k[j],k[s]=k[n+1]*k[j+1],k[t]=k[n+2]*k[j+2],H(p,r,s,t),n=(m<<2)+A,c[n]=c[p],k[n]=k[p],c[n+1]=c[p+1],k[n+1]=k[p+1],c[n+2]=c[p+2],k[n+2]=k[p+2],c[n+3]=c[p+3],k[n+3]=k[p+3]):(k[x]=k[n]*k[j],k[y]=k[n+1]*k[j+1],k[z]=k[n+2]*k[j+2],H(w,x,y,z),n=(m<<2)+C,c[n]=c[w],k[n]=k[w],c[n+1]=c[w+1],k[n+1]=k[w+1],c[n+2]=c[w+2],k[n+2]=k[w+2],c[n+3]=c[w+3],k[n+3]=k[w+3]);m=n=m-1;if(!(0<=(n|0))){break}}g=c[a+2];v[c[c[g]+2]](g,a+3,d,e);a=c[a+1];v[c[c[a]+6]](a,d);b=f}tQa.X=1;function uQa(){}uQa.X=1;function vQa(a){xe(a)}vQa.X=1;function wQa(){}wQa.X=1;function iQa(a,d,e){PX(a);c[a]=xQa+2;c[a+1]=e;c[a+2]=d}iQa.X=1;function yQa(a){xe(a)}yQa.X=1;function zQa(a,d,e){var f=b;b+=34;var g=f+12,h=f+14,i=f+15,j=f+16,l=f+17,m=f+19,n,p,r=f+20,s=f+24,t=f+25,w=f+26,x=f+27,y=f+31,z=f+32,A=f+33;n=c[a+1];v[c[c[n]+4]](n,g,f+13,h,i,j,l,f+18,m,d);j=c[j]+c[l]*e;l=c[a+1]+1;for(n=2;;){p=n;var C=j;p=c[g]+c[i]*(3==(c[m]|0)?c[C+p]&65535:c[C+p]);0==(c[h]|0)?(k[s]=k[p]*k[l],k[t]=k[p+1]*k[l+1],k[w]=k[p+2]*k[l+2],H(r,s,t,w),p=(n<<2)+f,c[p]=c[r],k[p]=k[r],c[p+1]=c[r+1],k[p+1]=k[r+1],c[p+2]=c[r+2],k[p+2]=k[r+2],c[p+3]=c[r+3],k[p+3]=k[r+3]):(k[y]=k[p]*k[l],k[z]=k[p+1]*k[l+1],k[A]=k[p+2]*k[l+2],H(x,y,z,A),p=(n<<2)+f,c[p]=c[x],k[p]=k[x],c[p+1]=c[x+1],k[p+1]=k[x+1],c[p+2]=c[x+2],k[p+2]=k[x+2],c[p+3]=c[x+3],k[p+3]=k[x+3]);n=p=n-1;if(!(0<=(p|0))){break}}g=c[a+2];v[c[c[g]+2]](g,f,d,e);a=c[a+1];v[c[c[a]+6]](a,d);b=f}zQa.X=1;function AQa(){}AQa.X=1;function hQa(a,d,e){PX(a);c[a]=BQa+2;c[a+1]=e;c[a+2]=d}hQa.X=1;function CQa(a){xe(a)}CQa.X=1;function DQa(a,d,e){var f=b;b+=34;var g=f+12,h=f+14,i=f+15,j=f+16,l=f+17,m=f+19,n,p,r=f+20,s=f+24,t=f+25,w=f+26,x=f+27,y=f+31,z=f+32,A=f+33;n=c[a+1];v[c[c[n]+4]](n,g,f+13,h,i,j,l,f+18,m,d);j=c[j]+c[l]*e;l=c[a+1]+1;for(n=2;;){p=n;var C=j;p=c[g]+c[i]*(3==(c[m]|0)?c[C+p]&65535:c[C+p]);0==(c[h]|0)?(k[s]=k[p]*k[l],k[t]=k[p+1]*k[l+1],k[w]=k[p+2]*k[l+2],H(r,s,t,w),p=(n<<2)+f,c[p]=c[r],k[p]=k[r],c[p+1]=c[r+1],k[p+1]=k[r+1],c[p+2]=c[r+2],k[p+2]=k[r+2],c[p+3]=c[r+3],k[p+3]=k[r+3]):(k[y]=k[p]*k[l],k[z]=k[p+1]*k[l+1],k[A]=k[p+2]*k[l+2],H(x,y,z,A),p=(n<<2)+f,c[p]=c[x],k[p]=k[x],c[p+1]=c[x+1],k[p+1]=k[x+1],c[p+2]=c[x+2],k[p+2]=k[x+2],c[p+3]=c[x+3],k[p+3]=k[x+3]);n=p=n-1;if(!(0<=(p|0))){break}}g=c[a+2];v[c[c[g]+2]](g,f,d,e);a=c[a+1];v[c[c[a]+6]](a,d);b=f}DQa.X=1;function Te(a,d,e){var f=b;b+=2;var g=f+1;k[f]=d;yW(a);c[a]=RX+2;c[a+1]=10;c[a+13]=1;k[g]=.5*e;pe(a+7,f,g,f);b=f}Te.X=1;function EQa(a,d,e){var f=b;b+=72;var g=f+1,h=f+2,i=f+3,j=f+7,l=f+8,m=f+9,n=f+10,p=f+11,r=f+15,s=f+16,t=f+20,w=f+21,x=f+22,y=f+23,z=f+27,A=f+31,C=f+35,B=f+39,K=f+43,E=f+44,G=f+48,M=f+49,L=f+50,F=f+51,I=f+55,R=f+59,O=f+63,Z=f+67,P=f+71;k[f]=0;k[g]=0;k[h]=0;H(a,f,g,h);g=-0xde0b6b000000000;c[i]=c[e];k[i]=k[e];c[i+1]=c[e+1];k[i+1]=k[e+1];c[i+2]=c[e+2];k[i+2]=k[e+2];c[i+3]=c[e+3];k[i+3]=k[e+3];e=Um(i);9999999747378752e-20>e?(k[j]=1,k[l]=0,k[m]=0,pe(i,j,l,m)):(k[n]=1/ec(e),LC(i,n));k[r]=cf(d);k[t]=0;k[w]=0;k[x]=0;H(s,t,w,x);k[s+Ke(d)]=gf(d);ig(C,i,d+3);Q(A,C,r);wn(z,s,A);k[K]=v[c[c[d]+11]](d);Q(B,i,K);N(y,z,B);c[p]=c[y];k[p]=k[y];c[p+1]=c[y+1];k[p+1]=k[y+1];c[p+2]=c[y+2];k[p+2]=k[y+2];c[p+3]=c[y+3];k[p+3]=k[y+3];j=J(i,p);j>g&&(g=j,c[a]=c[p],k[a]=k[p],c[a+1]=c[p+1],k[a+1]=k[p+1],c[a+2]=c[p+2],k[a+2]=k[p+2],c[a+3]=c[p+3],k[a+3]=k[p+3]);k[G]=0;k[M]=0;k[L]=0;H(E,G,M,L);k[E+Ke(d)]=-gf(d);ig(O,i,d+3);Q(R,O,r);wn(I,E,R);k[P]=v[c[c[d]+11]](d);Q(Z,i,P);N(F,I,Z);c[p]=c[F];k[p]=k[F];c[p+1]=c[F+1];k[p+1]=k[F+1];c[p+2]=c[F+2];k[p+2]=k[F+2];c[p+3]=c[F+3];k[p+3]=k[F+3];j=J(i,p);j>g&&(c[a]=c[p],k[a]=k[p],c[a+1]=c[p+1],k[a+1]=k[p+1],c[a+2]=c[p+2],k[a+2]=k[p+2],c[a+3]=c[p+3],k[a+3]=k[p+3]);b=f}EQa.X=1;function FQa(a,d,e,f){var g=b;b+=61;var h,i,j,l=g+1,m,n=g+5,p=g+9,r=g+10,s=g+11,t=g+12,w=g+16,x=g+20,y=g+24,z=g+28,A=g+32,C=g+33,B=g+37,K=g+38,E=g+39,G=g+40,M=g+44,L=g+48,F=g+52,I=g+56,R=g+60;k[g]=cf(a);h=0;var O=(h|0)<(f|0);a:do{if(O){for(var Z=a+3,P=a,S=P,da=l,V=t,ba=l,$=a+3,Y=a,la=Y,ka=l,ja=G,ea=l;;){if(i=-0xde0b6b000000000,j=(h<<2)+d,k[p]=0,k[r]=0,k[s]=0,H(n,p,r,s),k[n+Ke(a)]=gf(a),ig(y,j,Z),Q(x,y,g),wn(w,n,x),k[A]=v[c[c[S]+11]](P),Q(z,j,A),N(t,w,z),c[da]=c[V],k[da]=k[V],c[da+1]=c[V+1],k[da+1]=k[V+1],c[da+2]=c[V+2],k[da+2]=k[V+2],c[da+3]=c[V+3],k[da+3]=k[V+3],m=J(j,l),m>i&&(i=m,m=(h<<2)+e,c[m]=c[ba],k[m]=k[ba],c[m+1]=c[ba+1],k[m+1]=k[ba+1],c[m+2]=c[ba+2],k[m+2]=k[ba+2],c[m+3]=c[ba+3],k[m+3]=k[ba+3]),k[B]=0,k[K]=0,k[E]=0,H(C,B,K,E),k[C+Ke(a)]=-gf(a),ig(F,j,$),Q(L,F,g),wn(M,C,L),k[R]=v[c[c[la]+11]](Y),Q(I,j,R),N(G,M,I),c[ka]=c[ja],k[ka]=k[ja],c[ka+1]=c[ja+1],k[ka+1]=k[ja+1],c[ka+2]=c[ja+2],k[ka+2]=k[ja+2],c[ka+3]=c[ja+3],k[ka+3]=k[ja+3],m=J(j,l),m>i&&(i=(h<<2)+e,c[i]=c[ea],k[i]=k[ea],c[i+1]=c[ea+1],k[i+1]=k[ea+1],c[i+2]=c[ea+2],k[i+2]=k[ea+2],c[i+3]=c[ea+3],k[i+3]=k[ea+3]),h+=1,(h|0)>=(f|0)){break a}}}}while(0);b=g}FQa.X=1;function GQa(a,d,e){var f=b;b+=21;var g=f+16,h=f+17,i;eQ(f);k[g]=cf(a);H(h,g,g,g);g=h+Ke(a);k[g]+=gf(a);i=2*(k[h]+.03999999910593033);a=2*(k[h+1]+.03999999910593033);g=2*(k[h+2]+.03999999910593033);h=i*i;a*=a;g*=g;d*=.0833333283662796;k[e]=d*(a+g);k[e+1]=d*(h+g);k[e+2]=d*(h+a);b=f}GQa.X=1;function oEa(a,d,e){var f=b;b+=2;var g=f+1;k[f]=d;HQa(a);c[a]=IQa+2;c[a+13]=0;k[g]=.5*e;pe(a+7,g,f,f);b=f}oEa.X=1;function JQa(){return D.Ve}JQa.X=1;function KQa(){return 60}KQa.X=1;function LQa(){return 0}LQa.X=1;function MQa(){}MQa.X=1;function NQa(){return D.ee}NQa.X=1;function OQa(){return D.Ne}OQa.X=1;function PQa(a){c[a]=QQa+2}PQa.X=1;function ZW(a,d){c[a]=RQa+2;c[a+1]=c[d]}ZW.X=1;function fs(a,d,e,f){c[a+36*d+e+50]=f}fs.X=1;function HQa(a){yW(a);c[a]=RX+2;c[a+1]=10}HQa.X=1;function wGa(a,d,e){var f=b;b+=2;var g=f+1;k[f]=d;HQa(a);c[a]=SQa+2;c[a+13]=2;k[g]=.5*e;pe(a+7,f,f,g);b=f}wGa.X=1;function TQa(){}TQa.X=1;function UQa(a){yh(a)}UQa.X=1;function VQa(a,d,e,f){var g=b;b+=45;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13,r=g+14,s=g+26,t=g+30,w=g+34,x=g+35,y=g+36,z=g+37,A=g+41;k[h]=cf(a);k[i]=cf(a);k[j]=cf(a);H(g,h,i,j);k[g+c[a+13]]=cf(a)+gf(a);k[m]=v[c[c[a]+11]](a);k[n]=v[c[c[a]+11]](a);k[p]=v[c[c[a]+11]](a);H(l,m,n,p);xn(g,l);qc(r,d);a=d+12;c[s]=c[a];k[s]=k[a];c[s+1]=c[a+1];k[s+1]=k[a+1];c[s+2]=c[a+2];k[s+2]=k[a+2];c[s+3]=c[a+3];k[s+3]=k[a+3];k[w]=J(0+r,g);k[x]=J(4+r,g);k[y]=J(8+r,g);H(t,w,x,y);N(z,s,t);c[e]=c[z];k[e]=k[z];c[e+1]=c[z+1];k[e+1]=k[z+1];c[e+2]=c[z+2];k[e+2]=k[z+2];c[e+3]=c[z+3];k[e+3]=k[z+3];wn(A,s,t);c[f]=c[A];k[f]=k[A];c[f+1]=c[A+1];k[f+1]=k[A+1];c[f+2]=c[A+2];k[f+2]=k[A+2];c[f+3]=c[A+3];k[f+3]=k[A+3];b=g}VQa.X=1;function WQa(a,d){var e=b;b+=23;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+19;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);eX(j,i,a+3);FX(a,d);ig(m,j,a+3);N(l,m,e);f=a+7;c[f]=c[l];k[f]=k[l];c[f+1]=c[l+1];k[f+1]=k[l+1];c[f+2]=c[l+2];k[f+2]=k[l+2];c[f+3]=c[l+3];k[f+3]=k[l+3];b=e}WQa.X=1;function XQa(a,d){var e=b;b+=22;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+16,n=e+17,p=e+18;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);fW(a,d);k[l]=v[c[c[a]+11]](a);k[m]=v[c[c[a]+11]](a);k[n]=v[c[c[a]+11]](a);H(j,l,m,n);N(p,i,j);f=a+7;c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];b=e}XQa.X=1;function YQa(a,d,e){GX(a,d,e);c[d+16]=c[a+13];return D.Ae}YQa.X=1;function ZQa(){}ZQa.X=1;function $Qa(a){yh(a)}$Qa.X=1;function aRa(){}aRa.X=1;function bRa(a){yh(a)}bRa.X=1;function cRa(){}cRa.X=1;function dRa(a){xe(a)}dRa.X=1;function os(a,d,e){var f=b;b+=40;var g,h;g=c[c[a]];h=c[c[a+1]];if(v[c[c[d]+6]](d,g,h)&&(0==(c[a+2]|0)&&(c[a+2]=v[c[c[d]+2]](d,g,h,0)),0!=(c[a+2]|0))){if(AI(f,g,h),a=c[a+2],1==(c[e+2]|0)){v[c[c[a]+2]](a,g,h,e,f)}else{g=v[c[c[a]+3]](a,g,h,e,f),k[e+3]>g&&(k[e+3]=g)}}b=f}os.X=1;function eRa(){}eRa.X=1;function fRa(a){gRa(a);xe(a)}fRa.X=1;function gRa(a){c[a]=SX+2;TX(a+2)}gRa.X=1;function hRa(a,d,e){var f=b;b+=5;var g,h,i;i=f+1;var j;j=f+2;g=f+3;var l,m=f+4;c[UX]+=1;0!=(c[a+1]&2|0)?(l=bi(d),k[f]=v[c[c[l]+5]](l,k[VX]),l=bi(e),k[i]=v[c[c[l]+5]](l,k[VX]),i=k[WX(f,i)]):i=k[VX];k[j]=ni(d);k[g]=ni(e);j=k[WX(j,g)];l=0;0!=(iRa(c[a+49])|0)?(l=jRa(c[a+49],1140),g=10):0==(c[a+1]&4|0)?(l=Ue(1140,16),g=10):(h=0,g=11);10==g&&(h=l,yk(h,d,e,0,i,j),c[m]=h,c[c[m]+284]=AX(a+2),CX(a+2,m),h=c[m]);b=f;return h}hRa.X=1;function Sr(a,d){var e,f;PQa(a);c[a]=SX+2;c[a+1]=2;XX(a+2);yI(a+7);c[a+1346]=d;Tr(a,2);c[a+48]=v[c[c[d]+3]](d);c[a+49]=v[c[c[d]+2]](d);e=0;var g=a+1346,h=a+50;for(f=0;36>(f|0);){for(var i=f=0;36>(i|0);){i=c[g],c[h+36*e+f]=v[c[c[i]+5]](i,e,f),f=i=f+1}e=f=e+1}}Sr.X=1;function kRa(){}kRa.X=1;function WX(a,d){return k[a]<k[d]?a:d}WX.X=1;function YX(a){c[a]=lRa+2}YX.X=1;function iRa(a){return c[a+2]}iRa.X=1;function jRa(a,d){var e;$2=d;e=c[a+3];c[a+3]=c[c[a+3]];var f=a+2;c[f]-=1;return e}jRa.X=1;function mRa(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}mRa.X=1;function ZX(a,d){return c[a+3]+d}ZX.X=1;function nRa(a){a+=1;c[a]-=1}nRa.X=1;function oRa(a,d){var e,f;0!=(d|0)?d>>>0>=c[a+4]>>>0?d>>>0<c[a+4]+c[a]*c[a+1]>>>0?(f=1,e=7):e=6:e=6:e=6;6==e&&(f=0);return f}oRa.X=1;function pRa(a,d){if(0!=(d|0)){c[d]=c[a+3];c[a+3]=d;var e=a+2;c[e]+=1}}pRa.X=1;function qRa(a){return c[a+49]}qRa.X=1;function rRa(a){return c[a+49]}rRa.X=1;function XX(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}XX.X=1;function Li(a,d){4!=(c[a+54]|0)&&5!=(c[a+54]|0)&&(c[a+54]=d)}Li.X=1;function Fi(a,d){c[a+54]=d}Fi.X=1;function sRa(a,d){$1=a;Bk(d)}sRa.X=1;function tRa(a,d){var e;c[UX]-=1;v[c[c[a]+5]](a,d);e=c[d+284];mRa(a+2,e,AX(a+2)-1);c[c[ZX(a+2,e)]+284]=e;nRa(a+2);oRa(c[a+49],d)?pRa(c[a+49],d):yh(d)}tRa.X=1;function uRa(a,d,e,f){var g=b;b+=2;ct(g);c[g]=a;c[g+1]=f;a=c[a+36*Ie(bi(d))+Ie(bi(e))+50];d=v[c[c[a]+2]](a,g,d,e);b=g;return d}uRa.X=1;function vRa(a,d,e){$1=a;a=(li(d)?li(e):0)&1;a=(a&1?Pi(d)?Pi(e)^1:1:0)&1;return a&1}vRa.X=1;function wRa(a,d,e){var f;$1=a;f=1;Ki(d)?a=5:Ki(e)?a=5:(f=0,a=7);5==a&&!Di(d,e)&&(f=0);return f&1}wRa.X=1;function xRa(a,d,e,f){var g=b;b+=3;yRa(g,e,a);v[c[c[d]+12]](d,g,f);b=g}xRa.X=1;function zRa(){}zRa.X=1;function ARa(a,d){return 0!=(iRa(c[a+48])|0)?jRa(c[a+48],d):Ue(d,16)}ARa.X=1;function BRa(a,d){oRa(c[a+48],d)?pRa(c[a+48],d):yh(d)}BRa.X=1;function CRa(a){return AX(a+2)}CRa.X=1;function DRa(a,d){return c[ZX(a+2,d)]}DRa.X=1;function ERa(a){return ZX(a+2,0)}ERa.X=1;function TX(a){LOa(a,0,AX(a));ROa(a);XX(a)}TX.X=1;function yRa(a,d,e){YX(a);c[a]=FRa+2;c[a+1]=d;c[a+2]=e}yRa.X=1;function GRa(a){xe(a)}GRa.X=1;function HRa(a,d){v[Ur(c[a+2])](d,c[a+2],c[a+1]);return 0}HRa.X=1;function IRa(){}IRa.X=1;function JRa(a){xe(a)}JRa.X=1;function Bi(a){var d=b;b+=3;var e=d+1,f=d+2;c[a]=KRa+2;k[d]=1;k[e]=1;k[f]=1;H(a+41,d,e,f);c[a+45]=0;k[a+46]=0xde0b6b000000000;e=a+47;c[e]=0;k[e]=0;c[e+1]=0;k[e+1]=0;c[e+2]=0;k[e+2]=0;c[e+3]=0;k[e+3]=0;c[a+51]=1;c[a+52]=-1;c[a+53]=-1;c[a+54]=1;k[a+55]=0;k[a+56]=.5;k[a+57]=0;c[a+58]=1;c[a+59]=0;k[a+60]=1;k[a+61]=0;k[a+62]=0;c[a+63]=0;eQ(a+1);b=d}Bi.X=1;function LRa(a){yh(a)}LRa.X=1;function ui(a,d){if(4==(d&1?4:0!=(c[a+51]&3|0)?5:4)){Li(a,1),k[a+55]=0}}ui.X=1;function MRa(){return 1}MRa.X=1;function NRa(){return 248}NRa.X=1;function ORa(){return 12}ORa.X=1;function PRa(a,d){c[a+48]=d;c[a+50]=d}PRa.X=1;function $X(a,d){return c[a+3]+d}$X.X=1;function QRa(a,d,e){var f;gQ(a+1,d+4);gQ(a+17,d+20);Mb(a+33,d+36);Mb(a+37,d+40);Mb(a+41,d+44);c[d+55]=c[a+45];k[d+48]=k[a+46];c[d]=0;c[d+1]=v[c[c[e]+7]](e,c[a+48]);c[d+2]=0;c[d+56]=c[a+51];c[d+57]=c[a+52];c[d+58]=c[a+53];c[d+59]=c[a+54];c[d+59]=c[a+54];k[d+49]=k[a+55];k[d+50]=k[a+56];k[d+51]=k[a+57];c[d+60]=c[a+58];f=v[c[c[e]+10]](e,a);c[d+3]=v[c[c[e]+7]](e,f);if(0!=(c[d+3]|0)){v[c[c[e]+12]](e,f)}k[d+52]=k[a+60];k[d+53]=k[a+61];k[d+54]=k[a+62];k[d+54]=k[a+62];c[d+61]=c[a+63];return D.bf}QRa.X=1;function RRa(a,d){var e,f;e=v[c[c[a]+4]](a);e=v[c[c[d]+4]](d,e,1);f=v[c[c[a]+5]](a,c[e+2],d);v[c[c[d]+5]](d,e,f,1245859651,a)}RRa.X=1;function SRa(a,d,e){var f=b;b+=37;var g=f+16,h=f+20,i=f+24,j=f+28,l=f+32,m=f+36;eQ(f);v[c[c[a]+2]](a,f,g,h);N(i,h,g);k[e]=.5*JB(i);wn(l,g,h);k[m]=.5;Q(j,l,m);c[d]=c[j];k[d]=k[j];c[d+1]=c[j+1];k[d+1]=k[j+1];c[d+2]=c[j+2];k[d+2]=k[j+2];c[d+3]=c[j+3];k[d+3]=k[j+3];b=f}SRa.X=1;function TRa(a,d){return v[c[c[a]+4]](a)*d}TRa.X=1;function URa(a){var d=b;b+=5;var e=d+4;v[c[c[a]+3]](a,d,e);a=JB(d);k[e]+=a;e=k[e];b=d;return e}URa.X=1;function Tf(a,d,e,f,g,h,i){var j=b;b+=24;var l=j+1,m=j+2,n=j+3,p=j+4,r=j+5,s=j+6,t=j+7,w=j+11,x=j+12,y=j+16,z=j+20;k[j]=g;v[c[c[a]+2]](a,d,h,i);k[l]=k[i];k[m]=k[i+1];k[n]=k[i+2];k[p]=k[h];k[r]=k[h+1];k[s]=k[h+2];Q(t,e,j);d=k[t];0<k[t]?k[l]+=d:k[p]+=d;d=k[t+1];0<k[t+1]?k[m]+=d:k[r]+=d;d=k[t+2];0<k[t+2]?k[n]+=d:k[s]+=d;a=JB(f)*v[c[c[a]+4]](a);k[w]=a*k[j];H(x,w,w,w);H(y,p,r,s);c[h]=c[y];k[h]=k[y];c[h+1]=c[y+1];k[h+1]=k[y+1];c[h+2]=c[y+2];k[h+2]=k[y+2];c[h+3]=c[y+3];k[h+3]=k[y+3];H(z,l,m,n);c[i]=c[z];k[i]=k[z];c[i+1]=c[z+1];k[i+1]=k[z+1];c[i+2]=c[z+2];k[i+2]=k[z+2];c[i+3]=c[z+3];k[i+3]=k[z+3];JC(h,x);xn(i,x);b=j}Tf.X=1;function HX(a,d,e){var f;f=v[c[c[e]+10]](e,a);c[d]=v[c[c[e]+7]](e,f);if(0!=(c[d]|0)){v[c[c[e]+12]](e,f)}c[d+1]=c[a+1];return D.jf}HX.X=1;function VRa(a,d){var e,f;e=v[c[c[a]+12]](a);e=v[c[c[d]+4]](d,e,1);f=v[c[c[a]+13]](a,c[e+2],d);v[c[c[d]+5]](d,e,f,1346455635,a)}VRa.X=1;function WRa(){}WRa.X=1;function XRa(a){xe(a)}XRa.X=1;function YRa(a){aY(a);xe(a)}YRa.X=1;function ZRa(a,d,e,f){var g=b;b+=25;var h=g+1,i=g+17,j=g+21;c[g]=d;OW(a+1,g);sQ(h,c[g]+1);d=bi(c[g]);v[c[c[d]+2]](d,h,i,j);h=am(a);Si(c[g],v[c[c[h]+2]](h,i,j,Ie(bi(c[g])),c[g],e,f,c[a+6],0));b=g}ZRa.X=1;function qM(a,d,e,f){c[a]=bY+2;JW(a+1);c[a+6]=d;De(a+7);c[a+21]=e;c[a+22]=0;c[a+23]=1;c[a+20]=v[c[c[f]+4]](f);c[a+19]=c[a+20]}qM.X=1;function aY(a){var d,e,f;c[a]=bY+2;d=0;for(var g=a+1,h=a+1,i=a+6,j=a+6;(d|0)<(Tl(g)|0);){e=c[$X(h,d)];f=ci(e);if(0!=(f|0)){var l=am(a),l=v[c[c[l]+9]](l);v[c[c[l]+10]](l,f,c[i]);l=am(a);v[c[c[l]+3]](l,f,c[j]);Si(e,0)}d+=1}TW(h)}aY.X=1;function $Ra(a){return c[a+16]}$Ra.X=1;function ym(a,d){var e=b;b+=24;var f,g=e+4,h=e+8,i=e+12,j=e+16;f=e+20;var l=bi(d);v[c[c[l]+2]](l,d+1,e,g);H(h,VX,VX,VX);JC(e,h);xn(g,h);c[a+7+4]&1&&2==(ji(d)|0)&&(l=bi(d),v[c[c[l]+2]](l,d+17,i,j),JC(i,h),xn(j,h),hp(e,i),gp(g,j));h=c[a+21];if(ai(d)){f=7}else{if(N(f,g,e),999999995904>Um(f)){f=7}else{Li(d,5);if((c[aSa]?0:1)&1&&0!=(c[a+22]|0)){c[aSa]=1,f=c[a+22],v[c[c[f]+9]](f,D.pf),f=c[a+22],v[c[c[f]+9]](f,D.oe),f=c[a+22],v[c[c[f]+9]](f,D.Fe),f=c[a+22],v[c[c[f]+9]](f,D.Pe)}f=11}}if(7==f){v[c[c[h]+4]](h,ci(d),e,g,c[a+6])}b=e}ym.X=1;function cY(a,d){var e=b;b+=1;var f;c[e]=d;f=ci(c[e]);if(0!=(f|0)){var g=am(a),g=v[c[c[g]+9]](g);v[c[c[g]+10]](g,f,c[a+6]);g=am(a);v[c[c[g]+3]](g,f,c[a+6]);Si(c[e],0)}bSa(a+1,e);b=e}cY.X=1;function bSa(a,d){var e;e=dY(a,d);(e|0)<(Tl(a)|0)&&(cSa(a,e,Tl(a)-1),eY(a))}bSa.X=1;function mm(a,d,e,f,g,h){var i=b;b+=326;var j=i+13,l=i+57,m=i+148,n=i+152,p=i+156,r,s=i+163,t=i+179,w=i+183,x=i+187,y=i+217,z=i+233,A=i+237,C=i+241,B=i+271,K=i+275,E,G=i+279,M=i+286,L=i+290,F=i+306,I=i+310,R,O;hW(i,0);fW(i,0);var Z=xf(f);do{if(Z){fY(j),k[j+41]=k[h+1],gY(l),hY(m,i,f,l),iY(m,a,d,g,g,j)&&9999999747378752e-20<Um(j+33)&&k[j+41]<k[h+1]&&(Bo(n,a,j+33),r=j+33,E=n,c[r]=c[E],k[r]=k[E],c[r+1]=c[E+1],k[r+1]=k[E+1],c[r+2]=c[E+2],k[r+2]=k[E+2],c[r+3]=c[E+3],k[r+3]=k[E+3],IB(j+33),pE(p,e,0,j+33,k[j+41]),r=h,v[c[c[r]+3]](r,p,1))}else{if(r=f,Uf(f)){if(E=f,21==(Ie(r)|0)){r=E,uw(s,g),vw(t,s,a+12),vw(w,s,d+12),dSa(x,t,w,h,e,r,g),k[x+10]=k[h+1],cR(r,x,t,w)}else{r=E;uw(y,g);vw(z,y,a+12);vw(A,y,d+12);eSa(C,z,A,h,e,r,g);k[C+10]=k[h+1];E=B;var P=z;c[E]=c[P];k[E]=k[P];c[E+1]=c[P+1];k[E+1]=k[P+1];c[E+2]=c[P+2];k[E+2]=k[P+2];c[E+3]=c[P+3];k[E+3]=k[P+3];hp(B,A);E=K;P=z;c[E]=c[P];k[E]=k[P];c[E+1]=c[P+1];k[E+1]=k[P+1];c[E+2]=c[P+2];k[E+2]=k[P+2];c[E+3]=c[P+3];k[E+3]=k[P+3];gp(K,A);v[c[c[r]+15]](r,C,B,K)}}else{if(Ge(r)){r=f;E=$Ra(r);fSa(G,e,r,g,a,d,h);P=0!=(E|0);a:do{if(P){$P(L,g,a),R=M,O=L+12,c[R]=c[O],k[R]=k[O],c[R+1]=c[O+1],k[R+1]=k[O+1],c[R+2]=c[O+2],k[R+2]=k[O+2],c[R+3]=c[O+3],k[R+3]=k[O+3],$P(I,g,d),R=F,O=I+12,c[R]=c[O],k[R]=k[O],c[R+1]=c[O+1],k[R+1]=k[O+1],c[R+2]=c[O+2],k[R+2]=k[O+2],c[R+3]=c[O+3],k[R+3]=k[O+3],gSa(c[E],M,F,G)}else{R=0;for(O=el(r);;){if((R|0)>=(O|0)){break a}hSa(G,R);R+=1}}}while(0)}}}}while(0);b=i}mm.X=1;function iSa(a,d){fW(a,d)}iSa.X=1;function jSa(){}jSa.X=1;function kSa(){}kSa.X=1;function lSa(a){var d=b;b+=17;var e,f,g;jY(d,D.Ye);f=0;for(var h=a+1,i=a+1,j=a+23;(f|0)<(Tl(h)|0);){g=c[$X(i,f)],e=c[j]&1?6:Ki(g)?6:8,6==e&&ym(a,g),f+=1}kY(d);b=d}lSa.X=1;function mSa(a){var d=b;b+=3;var e,f=d+1,g=d+2;jY(d,D.$e);e=a+7;v[c[c[a]+2]](a);jY(f,D.hf);var h=c[a+21];v[c[c[h]+8]](h,c[a+6]);kY(f);f=Sk(a);jY(g,D.sf);if(0!=(f|0)){var h=c[c[f]+8],i=c[a+21],i=v[c[c[i]+9]](i);v[h](f,i,e,c[a+6])}kY(g);kY(d);b=d}mSa.X=1;function hSa(a,d){var e=b;b+=24;var f,g,h=e+16;f=lY(c[a+2],d);WW(e,c[a+3],mY(c[a+2],d));g=bi(c[a+1]);hi(c[a+1],f);nSa(h,d,c[a+6]);mm(c[a+4],c[a+5],c[a+1],f,e,h);hi(c[a+1],g);b=e}hSa.X=1;function oSa(){}oSa.X=1;function pSa(){}pSa.X=1;function qSa(){}qSa.X=1;function mY(a,d){return nY(a+3,d)}mY.X=1;function lY(a,d){return c[nY(a+3,d)+16]}lY.X=1;function gSa(a,d,e,f){var g=b;b+=35;var h=g+4,i=g+8,j=g+11,l=g+19,m,n=g+24,p=g+25,r=g+33,s=g+34;if(0!=(a|0)){N(g,e,d);IB(g);k[h]=0==k[g]?0xde0b6b000000000:1/k[g];k[h+1]=0==k[g+1]?0xde0b6b000000000:1/k[g+1];k[h+2]=0==k[g+2]?0xde0b6b000000000:1/k[g+2];c[i]=0>k[h]&1;m=i+1;c[m]=0>k[h+1]&1;c[m+1]=0>k[h+2]&1;N(j,e,d);e=J(g,j);oY(l);j=1;m=126;c[n]=0;pY(l,128,n);c[qY(l,0)]=a;for(a=p+4;;){var j=n=j-1,t=n=c[qY(l,n)];c[p]=c[t];k[p]=k[t];c[p+1]=c[t+1];k[p+1]=k[t+1];c[p+2]=c[t+2];k[p+2]=k[t+2];c[p+3]=c[t+3];k[p+3]=k[t+3];t=n+4;c[a]=c[t];k[a]=k[t];c[a+1]=c[t+1];k[a+1]=k[t+1];c[a+2]=c[t+2];k[a+2]=k[t+2];c[a+3]=c[t+3];k[a+3]=k[t+3];k[r]=1;$result1=t=rY(d,h,i,p,r,0,e)&1;if(0!=(t|0)){if(sY(n)){(j|0)>(m|0)&&(m=tY(l)<<1,c[s]=0,pY(l,m,s),m=tY(l)-2);var t=c[n+9],w=j,j=w+1;c[qY(l,w)]=t;n=c[n+10];t=j;j=t+1;c[qY(l,t)]=n}else{t=f,v[c[c[t]+3]](t,n)}}if(0==(j|0)){break}}uY(l)}b=g}gSa.X=1;function Dm(a,d,e,f,g,h,i,j){var l=b;b+=507;var m=l+44,n=l+135,p=l+136,r=l+142,s,t=l+153,w=l+169,x=l+173,y=l+177,z=l+193,A=l+205,C=l+209,B=l+210,K=l+211,E=l+212,G=l+268,M=l+272,L=l+276,F=l+320,I=l+326,R=l+337,O=l+353,Z=l+357,P=l+361,S=l+377,da=l+389,V=l+393,ba=l+394,$=l+395,Y=l+396,la=l+452,ka=l+456,ja=l+460,ea=l+464,ca=l+468,W,U=l+469,X,ma=l+485,ga,ha=l+501,ta=xf(g);if(ta){fY(l),k[l+43]=j,k[l+41]=k[i+1],gY(m),vY(n),wY(p,a,g,m,n),s=p,v[c[c[s]+2]](s,d,e,h,h,l)&&9999999747378752e-20<Um(l+33)&&k[l+41]<k[i+1]&&(IB(l+33),SV(r,f,0,l+33,l+37,k[l+41]),s=i,v[c[c[s]+3]](s,r,1))}else{if(s=g,Uf(g)){W=g,21==(Ie(s)|0)?(s=W,uw(t,h),vw(w,t,d+12),vw(x,t,e+12),ww(z,t,e),k[C]=0,k[B]=0,k[K]=0,H(A,C,B,K),Tz(y,z,A),rSa(E,a,d,e,i,f,s,h),k[E+50]=k[i+1],k[E+52]=j,W=a,v[c[c[W]+2]](W,y,G,M),mR(s,E,w,x,G,M)):28==(Ie(W)|0)?(fY(L),k[L+43]=j,k[L+41]=k[i+1],sSa(F,a,g),s=F,v[c[c[s]+2]](s,d,e,h,h,L)&&9999999747378752e-20<Um(L+33)&&k[L+41]<k[i+1]&&(IB(L+33),SV(I,f,0,L+33,L+37,k[L+41]),s=i,v[c[c[s]+3]](s,I,1))):(s=g,uw(R,h),vw(O,R,d+12),vw(Z,R,e+12),ww(S,R,e),k[V]=0,k[ba]=0,k[$]=0,H(da,V,ba,$),Tz(P,S,da),tSa(Y,a,d,e,i,f,s,h),k[Y+50]=k[i+1],k[Y+52]=j,W=a,v[c[c[W]+2]](W,P,la,ka),W=ja,X=O,c[W]=c[X],k[W]=k[X],c[W+1]=c[X+1],k[W+1]=k[X+1],c[W+2]=c[X+2],k[W+2]=k[X+2],c[W+3]=c[X+3],k[W+3]=k[X+3],hp(ja,Z),W=ea,X=O,c[W]=c[X],k[W]=k[X],c[W+1]=c[X+1],k[W+1]=k[X+1],c[W+2]=c[X+2],k[W+2]=k[X+2],c[W+3]=c[X+3],k[W+3]=k[X+3],gp(ea,Z),xn(ja,la),xn(ea,ka),v[c[c[s]+15]](s,Y,ja,ea))}else{if(Ge(s)){jY(ca,D.tf);s=g;W=0;for(var ra=ha;(W|0)<(el(s)|0);){sQ(U,mY(s,W)),X=lY(s,W),WW(ma,h,U),ga=bi(f),hi(f,X),uSa(ha,W,i),Dm(a,d,e,f,X,ma,ra,j),hi(f,ga),W+=1}kY(ca)}}}b=l}Dm.X=1;function vSa(a,d,e,f){var g=b;b+=69;var h=g+55,i=g+59,j=g+60,l=g+61,m=g+62,n=g+66,p=g+67,r=g+68;wSa(g,d,e,a,f);a=c[a+21];f=c[c[a]+6];k[i]=0;k[j]=0;k[l]=0;H(h,i,j,l);k[n]=0;k[p]=0;k[r]=0;H(m,n,p,r);v[f](a,d,e,g,h,m);b=g}vSa.X=1;function xSa(){}xSa.X=1;function xY(a,d,e,f,g){var h=b;b+=22;var i=h+1,j=h+5,l=h+9,m=h+13,n=h+14,p=h+18;k[h]=e;N(j,d+12,a+12);wC(i,j,h);c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];c[f+2]=c[i+2];k[f+2]=k[i+2];c[f+3]=c[i+3];k[f+3]=k[i+3];ySa(a,d,l,m);Q(p,l,m);wC(n,p,h);c[g]=c[n];k[g]=k[n];c[g+1]=c[n+1];k[g+1]=k[n+1];c[g+2]=c[n+2];k[g+2]=k[n+2];c[g+3]=c[n+3];k[g+3]=k[n+3];b=h}xY.X=1;function zSa(){}zSa.X=1;function Jl(a,d,e){var f=b;b+=12;var g=f+4,h=f+8,i=bi(d);v[c[c[i]+2]](i,d+1,f,g);ASa(h,d,a,e);a=c[a+21];v[c[c[a]+7]](a,f,g,h);b=f}Jl.X=1;function BSa(){}BSa.X=1;function Xl(a,d,e,f){var g=b;b+=41;var h;h=Sk(a);h=v[c[c[h]+2]](h,d,e,0);0!=(h|0)&&(CSa(g,d,e,f),v[c[c[h]+2]](h,d,e,a+7,g),v[c[c[h]]](h),a=Sk(a),v[c[c[a]+15]](a,h));b=g}Xl.X=1;function DSa(){}DSa.X=1;function Rl(a,d,e,f,g,h){var i=b;b+=125;var j=i+1,l=i+17,m=i+33,n=i+37,p=i+41,r=i+45,s=i+49,t=i+53,w=i+54,x=i+55,y=i+56,z=i+72,A=i+76;jY(i,D.zf);xi(j,e);xi(l,f);xY(j,l,1,p,r);k[t]=0;k[w]=0;k[x]=0;pe(s,t,w,x);eQ(y);dc(j,z);zb(y,z);Tf(d,y,s,r,1,m,n);ESa(A,d,e,f,a,g,h);a=c[a+21];v[c[c[a]+6]](a,j+12,l+12,A,m,n);kY(i);b=i}Rl.X=1;function FSa(a){return c[a+23]}FSa.X=1;function yY(a){return c[a+1]}yY.X=1;function zY(a,d){return c[a+3]+14*d}zY.X=1;function GSa(a,d,e,f){var g=b;b+=205;var h,i,j,l=g+16,m=g+32,n=g+36,p,r,s=g+40,t,w=g+56,x,y,z,A,C,B,K,E,G,M,L,F,I=g+72,R,O,Z,P=g+76,S=g+80,da=g+81,V=g+82,ba=g+83,$=g+87,Y=g+88,la=g+89,ka=g+90,ja=g+113,ea=g+117,ca=g+118,W=g+119,U=g+120,X=g+124,ma=g+125,ga=g+126,ha=g+127,ta,ra,ua,za=g+150,Za=g+154,ib=g+155,Ca=g+156,Sa,mb,Oa,Pa,fc=g+157,jb=g+161,La=g+165,fb=g+166,Rb=g+170,pb=g+171,Sb=g+172,ab=g+173,Ib=g+177,Fc=g+181,Ac=g+185,ob=g+189,Gc=g+193,Yc=g+197,Cc=g+201,Ub=v[c[c[a]+4]](a);v[c[c[Ub]+14]](Ub,d,1);var Uc=31==(Ie(e)|0);a:do{if(Uc){h=e;var nd=el(h)-1;i=nd;if(0<=(nd|0)){for(var Ic=a;;){sQ(g,mY(h,i));j=lY(h,i);var tc=c[c[Ic]+6];WW(l,d,g);v[tc](a,l,j,f);var hd=i-1;i=hd;if(!(0<=(hd|0))){break a}}}}else{var Tb=Ie(e);if(0==(Tb|0)){nV(m,e);var Jc=v[c[c[a]+4]](a),ub=c[c[Jc]+18];WP(n,m);v[ub](Jc,n,m,d,f)}else{if(8==(Tb|0)){var uc=e;p=v[c[c[uc]+11]](uc);var Kc=v[c[c[a]+4]](a);v[c[c[Kc]+4]](Kc,p,d,f)}else{if(9==(Tb|0)){r=e;eQ(s);var gb=QI(r)-1;t=gb;if(0<=(gb|0)){for(var gc=a;;){pQ(s,$I(r,t));var Lc=v[c[c[gc]+4]](a),Dc=c[c[Lc]+4],Eb=KI(r,t);WW(w,d,s);v[Dc](Lc,Eb,w,f);var Ra=t-1;t=Ra;if(!(0<=(Ra|0))){break a}}}}else{if(10==(Tb|0)){x=e;y=cf(x);z=gf(x);A=Ke(x);var qb=v[c[c[a]+4]](a);v[c[c[qb]+19]](qb,y,z,A,d,f)}else{if(11==(Tb|0)){C=e;B=Xw(C);K=Yw(C);E=Zw(C);var Ab=v[c[c[a]+4]](a);v[c[c[Ab]+21]](Ab,B,K,E,d,f)}else{if(13==(Tb|0)){G=e;M=dF(G);var hc=G;L=v[c[c[hc]+21]](hc);qG(I,G);F=k[I+M];var Hc=v[c[c[a]+4]](a);v[c[c[Hc]+20]](Hc,L,F,M,d,f)}else{if(28==(Tb|0)){R=e;O=k[R+16];Z=R+12;var ic=v[c[c[a]+4]](a);v[c[c[ic]+22]](ic,Z,O,d,f)}else{if(Uf(e)){k[S]=0xde0b6b000000000;k[da]=0xde0b6b000000000;k[V]=0xde0b6b000000000;H(P,S,da,V);k[$]=-0xde0b6b000000000;k[Y]=-0xde0b6b000000000;k[la]=-0xde0b6b000000000;H(ba,$,Y,la);var db=v[c[c[a]+4]](a);HSa(ka,db,d,f);var bb=e;v[c[c[bb]+15]](bb,ka,ba,P)}if(3==(Ie(e)|0)){k[ea]=0xde0b6b000000000;k[ca]=0xde0b6b000000000;k[W]=0xde0b6b000000000;H(ja,ea,ca,W);k[X]=-0xde0b6b000000000;k[ma]=-0xde0b6b000000000;k[ga]=-0xde0b6b000000000;H(U,X,ma,ga);var id=v[c[c[a]+4]](a);HSa(ha,id,d,f);var Zc=FSa(e);v[c[c[Zc]+2]](Zc,0==(ha|0)?0:ha+4,U,ja)}if(Ye(e)){if(ta=e,0!=(yg(ta)|0)){if(ua=yg(ta),ra=0,(ra|0)<(yY(ua+6)|0)){for(var vb=a,rb=a;;){k[Za]=0;k[ib]=0;k[Ca]=0;H(za,Za,ib,Ca);var vc=rW(zY(ua+6,ra));Sa=vc;var Qc=0!=(vc|0);b:do{if(Qc&&(mb=c[sW(zY(ua+6,ra),Sa-1)],Oa=0,(Oa|0)<(rW(zY(ua+6,ra))|0))){for(;;){Pa=c[sW(zY(ua+6,ra),Oa)];xn(za,jg(ua+1,Pa));var Rc=v[c[c[vb]+4]](a),Xd=c[c[Rc]+2];vw(fc,d,jg(ua+1,mb));vw(jb,d,jg(ua+1,Pa));v[Xd](Rc,fc,jb,f);mb=Pa;Oa+=1;if((Oa|0)>=(rW(zY(ua+6,ra))|0)){break b}}}}while(0);k[La]=1/(Sa|0);LC(za,La);k[Rb]=1;k[pb]=1;k[Sb]=0;H(fb,Rb,pb,Sb);H(ab,zY(ua+6,ra)+10,zY(ua+6,ra)+11,zY(ua+6,ra)+12);var Sc=v[c[c[rb]+4]](a),Mc=c[c[Sc]+2];vw(Ib,d,za);wn(Ac,za,ab);vw(Fc,d,Ac);v[Mc](Sc,Ib,Fc,fb);ra+=1;if((ra|0)>=(yY(ua+6)|0)){break a}}}}else{ra=0;var $c=ta;if((ra|0)<(v[c[c[$c]+23]]($c)|0)){for(var Cd=a;;){var wc=ta;v[c[c[wc]+24]](wc,ra,ob,Gc);vw(Yc,d,ob);vw(Cc,d,Gc);var Bb=v[c[c[Cd]+4]](a);v[c[c[Bb]+2]](Bb,Yc,Cc,f);ra+=1;var fd=ta;if((ra|0)>=(v[c[c[fd]+23]](fd)|0)){break a}}}}}}}}}}}}}}while(0);b=g}GSa.X=1;function ISa(){}ISa.X=1;function JSa(a,d){c[a+22]=d}JSa.X=1;function KSa(a){return c[a+22]}KSa.X=1;function AY(a){return c[a+2]}AY.X=1;function BY(a,d){return c[a+3]+d}BY.X=1;function CY(a){return c[a+1]}CY.X=1;function LSa(a){var d=b;b+=83;var e,f=d+4,g=d+5,h=d+6,i,j,l,m,n,p,r=d+7,s=d+11,t=d+12,w=d+13,x=d+14,y=d+18,z=d+19,A=d+20,C=d+21,B=d+25,K=d+26,E=d+27,G=d+28,M=d+32,L=d+33,F=d+34,I=d+35,R=d+39,O=d+40,Z=d+41,P=d+42,S=d+46,da=d+47,V=d+48,ba=d+49,$=d+53,Y=d+54,la=d+55,ka=d+56,ja=d+60,ea=d+64,ca=d+68,W=d+69,U=d+70,X=d+71,ma=d+75,ga=d+79,ha=0!=(v[c[c[a]+4]](a)|0);a:do{if(ha&&(e=v[c[c[a]+4]](a),0!=(v[c[c[e]+12]](e)&8|0)&&(e=Sk(a),e=v[c[c[e]+9]](e),k[f]=0,k[g]=0,k[h]=0,H(d,f,g,h),i=0,(i|0)<(e|0)))){for(var ta=a;;){j=Sk(a);j=v[c[c[j]+10]](j,i);l=Xj(j);m=0;var ra=(m|0)<(l|0);b:do{if(ra){for(;;){n=j+69*m+1;var ua=v[c[c[ta]+4]](a);v[c[c[ua]+8]](ua,n+8,n+16,aU(n),Fk(n),d);m+=1;if((m|0)>=(l|0)){break b}}}}while(0);i+=1;if((i|0)>=(e|0)){break a}}}}while(0);f=0!=(v[c[c[a]+4]](a)|0);a:do{if(f&&(g=v[c[c[a]+4]](a),0!=(v[c[c[g]+12]](g)&3|0)&&(g=0,h=a+1,(g|0)<(Tl(h)|0)))){ha=a+1;i=e=a;ta=r;j=ba;l=a;m=r;n=x;for(var ra=r,ua=C,za=r,Za=G,ib=r,Ca=I,Sa=r,mb=P,Oa=a+22,Pa=a+22,fc=a+22;;){p=c[$X(ha,g)];if(0==($h(p)&32|0)){if(0!=(v[c[c[e]+4]](a)|0)){var jb=v[c[c[i]+4]](a);0!=(v[c[c[jb]+12]](jb)&1|0)&&(k[s]=1,k[t]=1,k[w]=1,H(r,s,t,w),jb=ki(p),1==(jb|0)?(k[y]=1,k[z]=1,k[A]=1,H(x,y,z,A),c[m]=c[n],k[m]=k[n],c[m+1]=c[n+1],k[m+1]=k[n+1],c[m+2]=c[n+2],k[m+2]=k[n+2],c[m+3]=c[n+3],k[m+3]=k[n+3]):2==(jb|0)?(k[B]=0,k[K]=1,k[E]=0,H(C,B,K,E),c[ra]=c[ua],k[ra]=k[ua],c[ra+1]=c[ua+1],k[ra+1]=k[ua+1],c[ra+2]=c[ua+2],k[ra+2]=k[ua+2],c[ra+3]=c[ua+3],k[ra+3]=k[ua+3]):3==(jb|0)?(k[M]=0,k[L]=1,k[F]=1,H(G,M,L,F),c[za]=c[Za],k[za]=k[Za],c[za+1]=c[Za+1],k[za+1]=k[Za+1],c[za+2]=c[Za+2],k[za+2]=k[Za+2],c[za+3]=c[Za+3],k[za+3]=k[Za+3]):4==(jb|0)?(k[R]=1,k[O]=0,k[Z]=0,H(I,R,O,Z),c[ib]=c[Ca],k[ib]=k[Ca],c[ib+1]=c[Ca+1],k[ib+1]=k[Ca+1],c[ib+2]=c[Ca+2],k[ib+2]=k[Ca+2],c[ib+3]=c[Ca+3],k[ib+3]=k[Ca+3]):5==(jb|0)?(k[S]=1,k[da]=1,k[V]=0,H(P,S,da,V),c[Sa]=c[mb],k[Sa]=k[mb],c[Sa+1]=c[mb+1],k[Sa+1]=k[mb+1],c[Sa+2]=c[mb+2],k[Sa+2]=k[mb+2],c[Sa+3]=c[mb+3],k[Sa+3]=k[mb+3]):(k[$]=1,k[Y]=0,k[la]=0,H(ba,$,Y,la),c[ta]=c[j],k[ta]=k[j],c[ta+1]=c[j+1],k[ta+1]=k[j+1],c[ta+2]=c[j+2],k[ta+2]=k[j+2],c[ta+3]=c[j+3],k[ta+3]=k[j+3]),v[c[c[l]+6]](a,p+1,bi(p),r))}0!=(c[Oa]|0)&&(jb=c[Pa],0!=(v[c[c[jb]+12]](jb)&2|0)&&(k[ca]=1,k[W]=0,k[U]=0,H(ea,ca,W,U),jb=bi(p),v[c[c[jb]+2]](jb,p+1,ka,ja),H(X,VX,VX,VX),JC(ka,X),xn(ja,X),2==(ji(p)|0)&&(jb=bi(p),v[c[c[jb]+2]](jb,p+17,ma,ga),JC(ma,X),xn(ga,X),hp(ka,ma),gp(ja,ga)),p=c[fc],v[c[c[p]+13]](p,ka,ja,ea)))}g+=1;if((g|0)>=(Tl(h)|0)){break a}}}}while(0);b=d}LSa.X=1;function MSa(a,d){var e;e=NSa(a,d);return-1==(e|0)?0:BY(a+10,e)}MSa.X=1;function OSa(a,d,e){var f,g,h;f=OM(d);f&=AY(a+10)-1;g=NSa(a,d);-1!=(g|0)?c[BY(a+10,g)]=c[e]:(g=CY(a+10),h=AY(a+10),PSa(a+10,e),QSa(a+15,d),(h|0)<(AY(a+10)|0)&&(RSa(a,d),d=OM(d),f=AY(a+10)-1&d),c[QV(a+5,g)]=c[QV(a,f)],c[QV(a,f)]=g)}OSa.X=1;function SSa(a,d){v[c[c[d]+8]](d);TSa(a,d);v[c[c[d]+9]](d)}SSa.X=1;function NSa(a,d){var e;e=OM(d);e&=AY(a+10)-1;if(e>>>0>=rW(a)>>>0){e=-1}else{var f=c[sW(a,e)];e=f;for(var g=a+15,h=a+5;-1!=(f|0)&&0==(vN(d,USa(g,e))&1|0);){e=f=c[sW(h,e)]}}return e}NSa.X=1;function PSa(a,d){(CY(a)|0)==(AY(a)|0)&&VSa(a,WSa(a,CY(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}PSa.X=1;function QSa(a,d){(DY(a)|0)==(XSa(a)|0)&&YSa(a,ZSa(a,DY(a)));var e=(c[a+1]<<1)+c[a+3];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1]);e=a+1;c[e]+=1}QSa.X=1;function TSa(a,d){var e=b;b+=25;var f,g,h=e+20,i=e+21,j=e+23;f=0;var l=a+1,m=(f|0)<(Tl(l)|0);a:do{if(m){for(var n=a+1;;){g=c[$X(n,f)];if(1==(ji(g)|0)){v[c[c[g]+6]](g,d)}f+=1;if((f|0)>=(Tl(l)|0)){break a}}}}while(0);$Sa(e);f=0;l=a+1;for(m=a+1;(f|0)<(Tl(l)|0);){c[h]=bi(c[$X(m,f)]),c[i]=c[h],0==(MSa(e,i)|0)&&(c[j]=c[h],OSa(e,j,h),n=c[h],v[c[c[n]+14]](n,d)),f+=1}aTa(e);b=e}TSa.X=1;function ZSa(a,d){$1=a;return 0!=(d|0)?d<<1:1}ZSa.X=1;function bTa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}bTa.X=1;function WSa(a,d){$1=a;return 0!=(d|0)?d<<1:1}WSa.X=1;function cTa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}cTa.X=1;function dTa(a,d){return(d<<1)+c[a+3]}dTa.X=1;function DY(a){return c[a+1]}DY.X=1;function XSa(a){return c[a+2]}XSa.X=1;function eTa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}eTa.X=1;function USa(a,d){return(d<<1)+c[a+3]}USa.X=1;function cSa(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}cSa.X=1;function eY(a){a+=1;c[a]-=1}eY.X=1;function fTa(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}fTa.X=1;function gTa(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}gTa.X=1;function RSa(a,d){var e=b;b+=2;var f,g,h=e+1,i,j;$3=d;f=AY(a+10);var l=(rW(a)|0)<(f|0);a:do{if(l){g=rW(a);c[e]=0;PV(a,f,e);c[h]=0;PV(a+5,f,h);i=0;var m=(i|0)<(f|0);b:do{if(m){for(var n=a;;){if(c[QV(n,i)]=-1,i+=1,(i|0)>=(f|0)){break b}}}}while(0);i=0;m=(i|0)<(f|0);b:do{if(m){for(n=a+5;;){if(c[QV(n,i)]=-1,i+=1,(i|0)>=(f|0)){break b}}}}while(0);i=0;if((i|0)<(g|0)){for(var m=a+15,n=a+10,p=a,r=a+5,s=a;;){if(j=OM(dTa(m,i)),j&=AY(n)-1,c[QV(r,i)]=c[QV(p,j)],c[QV(s,j)]=i,i+=1,(i|0)>=(g|0)){break a}}}}}while(0);b=e}RSa.X=1;function YSa(a,d){var e;(XSa(a)|0)<(d|0)&&(e=hTa(a,d),iTa(a,0,DY(a),e),bTa(a,0,DY(a)),jTa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}YSa.X=1;function hTa(a,d){return 0!=(d|0)?kTa(a,d,0):0}hTa.X=1;function iTa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;if(0!=(i|0)){var j=(d<<1)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}iTa.X=1;function jTa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&lTa(a,c[a+3]),c[a+3]=0)}jTa.X=1;function lTa(a,d){$1=a;yh(d)}lTa.X=1;function kTa(a,d,e){$1=a;$3=e;return Ue(d<<3,16)}kTa.X=1;function VSa(a,d){var e;(AY(a)|0)<(d|0)&&(e=mTa(a,d),eTa(a,0,CY(a),e),cTa(a,0,CY(a)),nTa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}VSa.X=1;function mTa(a,d){return 0!=(d|0)?oTa(a,d,0):0}mTa.X=1;function nTa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&pTa(a,c[a+3]),c[a+3]=0)}nTa.X=1;function pTa(a,d){$1=a;yh(d)}pTa.X=1;function oTa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}oTa.X=1;function dY(a,d){var e,f;e=Tl(a);f=0;for(var g=a+3;(f|0)<(Tl(a)|0);){var h=f;if((c[c[g]+f]|0)==(c[d]|0)){e=h;break}f=h+1}return e}dY.X=1;function qTa(a){cTa(a,0,CY(a));nTa(a);fTa(a)}qTa.X=1;function rTa(a){bTa(a,0,DY(a));jTa(a);gTa(a)}rTa.X=1;function $Sa(a){vW(a);vW(a+5);fTa(a+10);gTa(a+15)}$Sa.X=1;function aTa(a){rTa(a+15);qTa(a+10);wW(a+5);wW(a)}aTa.X=1;function EY(a){c[a]=sTa+2}EY.X=1;function FY(a){c[a]=tTa+2}FY.X=1;function uTa(a){c[a]=vTa+2}uTa.X=1;function wTa(a,d,e){c[a+36]=d;c[a+38]=e}wTa.X=1;function xTa(a,d,e){c[a+37]=d;c[a+39]=e}xTa.X=1;function yTa(){}yTa.X=1;function HSa(a,d,e,f){EY(a);FY(a+4);c[a]=GY+2;c[a+4]=GY+8;c[a+2]=d;d=a+3;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];sQ(a+7,e)}HSa.X=1;function zTa(a){xe(a)}zTa.X=1;function ATa(a,d,e,f){var g=b;b+=60;var h=g+4,i=g+8,j=g+12,l=g+16,m=g+20,n=g+24,p=g+28,r=g+32,s=g+36,t=g+37,w=g+41,x=g+45,y=g+49,z=g+53,A=g+54,C=g+55,B=g+56;$3=e;$4=f;vw(j,a+7,d);c[g]=c[j];k[g]=k[j];c[g+1]=c[j+1];k[g+1]=k[j+1];c[g+2]=c[j+2];k[g+2]=k[j+2];c[g+3]=c[j+3];k[g+3]=k[j+3];vw(l,a+7,d+4);c[h]=c[l];k[h]=k[l];c[h+1]=c[l+1];k[h+1]=k[l+1];c[h+2]=c[l+2];k[h+2]=k[l+2];c[h+3]=c[l+3];k[h+3]=k[l+3];vw(m,a+7,d+8);c[i]=c[m];k[i]=k[m];c[i+1]=c[m+1];k[i+1]=k[m+1];c[i+2]=c[m+2];k[i+2]=k[m+2];c[i+3]=c[m+3];k[i+3]=k[m+3];wn(r,g,h);wn(p,r,i);k[s]=.3333333432674408;Q(n,p,s);N(w,h,g);N(x,i,g);qn(t,w,x);IB(t);k[z]=1;k[A]=1;k[C]=0;H(y,z,A,C);d=c[a+2];e=c[c[d]+2];wn(B,n,t);v[e](d,n,B,y);n=c[a+2];v[c[c[n]+2]](n,g,h,a+3);n=c[a+2];v[c[c[n]+2]](n,h,i,a+3);h=c[a+2];v[c[c[h]+2]](h,i,g,a+3);b=g}ATa.X=1;function BTa(a,d,e,f){v[c[c[a]+2]](a,d,e,f)}BTa.X=1;function CTa(a){xe(a-4)}CTa.X=1;function DTa(a,d,e,f){BTa(a-4,d,e,f)}DTa.X=1;function CSa(a,d,e,f){AI(a,d,e);c[a]=ETa+2;c[a+40]=f}CSa.X=1;function FTa(a){xe(a)}FTa.X=1;function GTa(a,d,e,f){var g=b;b+=102;var h=g+1,i=g+5,j=g+9,l=g+13,m=g+17,n=g+21,p=g+25,r=g+29,s=g+33;k[g]=f;f=($j(c[a+1])|0)!=(c[a+34]|0)&1;Q(i,d,g);wn(h,e,i);f&1?(kQ(m,a+18,h),c[j]=c[m],k[j]=k[m],c[j+1]=c[m+1],k[j+1]=k[m+1],c[j+2]=c[m+2],k[j+2]=k[m+2],c[j+3]=c[m+3],k[j+3]=k[m+3],kQ(n,a+2,e),c[l]=c[n],k[l]=k[n],c[l+1]=c[n+1],k[l+1]=k[n+1],c[l+2]=c[n+2],k[l+2]=k[n+2],c[l+3]=c[n+3],k[l+3]=k[n+3]):(kQ(p,a+2,h),c[j]=c[p],k[j]=k[p],c[j+1]=c[p+1],k[j+1]=k[p+1],c[j+2]=c[p+2],k[j+2]=k[p+2],c[j+3]=c[p+3],k[j+3]=k[p+3],kQ(r,a+18,e),c[l]=c[r],k[l]=k[r],c[l+1]=c[r+1],k[l+1]=k[r+1],c[l+2]=c[r+2],k[l+2]=k[r+2],c[l+3]=c[r+3],k[l+3]=k[r+3]);EU(s,j,l,d,k[g]);d=s+12;c[d]=c[h];k[d]=k[h];c[d+1]=c[h+1];k[d+1]=k[h+1];c[d+2]=c[h+2];k[d+2]=k[h+2];c[d+3]=c[h+3];k[d+3]=k[h+3];h=s+8;c[h]=c[e];k[h]=k[e];c[h+1]=c[e+1];k[h+1]=k[e+1];c[h+2]=c[e+2];k[h+2]=k[e+2];c[h+3]=c[e+3];k[h+3]=k[e+3];f&1?(c[s+23]=c[a+37],c[s+24]=c[a+36],c[s+25]=c[a+39],c[s+26]=c[a+38]):(c[s+23]=c[a+36],c[s+24]=c[a+37],c[s+25]=c[a+38],c[s+26]=c[a+39]);e=c[a+40];v[c[c[e]+3]](e,s,f&1?c[a+35]:c[a+34],c[s+23],c[s+25],f&1?c[a+34]:c[a+35],c[s+24],c[s+26]);b=g}GTa.X=1;function ASa(a,d,e,f){uTa(a);c[a]=HTa+2;c[a+1]=d;c[a+2]=e;c[a+3]=f}ASa.X=1;function ITa(a){xe(a)}ITa.X=1;function JTa(a,d){var e=b;b+=41;var f,g;f=c[d];(f|0)!=(c[a+1]|0)&&(g=c[a+3],v[c[c[g]+2]](g,ci(f))&&(g=Sk(c[a+2]),g=v[c[c[g]+2]](g,c[a+1],f,0),0!=(g|0)&&(CSa(e,c[a+1],f,c[a+3]),v[c[c[g]+2]](g,c[a+1],f,c[a+2]+7,e),v[c[c[g]]](g),f=Sk(c[a+2]),v[c[c[f]+15]](f,g))));b=e;return 1}JTa.X=1;function KTa(){}KTa.X=1;function LTa(a){xe(a)}LTa.X=1;function ESa(a,d,e,f,g,h,i){var j=b;b+=8;var l=j+4;MTa(a);c[a]=NTa+2;sQ(a+9,e);sQ(a+25,f);c[a+45]=g;c[a+46]=h;k[a+47]=i;c[a+48]=d;N(j,a+25+12,a+9+12);uC(l,j);k[a+1]=0==k[l]?0xde0b6b000000000:1/k[l];k[a+1+1]=0==k[l+1]?0xde0b6b000000000:1/k[l+1];k[a+1+2]=0==k[l+2]?0xde0b6b000000000:1/k[l+2];c[a+5]=0>k[a+1]&1;c[a+6]=0>k[a+1+1]&1;c[a+7]=0>k[a+1+2]&1;k[a+8]=J(l,j);b=j}ESa.X=1;function MTa(a){uTa(a);c[a]=OTa+2}MTa.X=1;function PTa(a){xe(a)}PTa.X=1;function QTa(a){c[a]=RTa+2}QTa.X=1;function nY(a,d){return c[a+3]+20*d}nY.X=1;function STa(a,d){var e;if(0==k[c[a+46]+1]){e=0}else{e=c[d];var f=c[a+46];v[c[c[f]+2]](f,ci(e))&&Dm(c[a+48],a+9,a+25,e,bi(e),e+1,c[a+46],k[a+47]);e=1}return e}STa.X=1;function TTa(){}TTa.X=1;function UTa(a){xe(a)}UTa.X=1;function ySa(a,d,e,f){var g=b;b+=40;var h=g+12,i=g+24,j=g+28,l=g+32,m=g+36,n=g+37,p=g+38,r=g+39;Bc(h,a);ww(g,d,h);dc(g,i);AV(i);k[f]=KV(i);H(j,i,i+1,i+2);c[e]=c[j];k[e]=k[j];c[e+1]=c[j+1];k[e+1]=k[j+1];c[e+2]=c[j+2];k[e+2]=k[j+2];c[e+3]=c[j+3];k[e+3]=k[j+3];k[e+3]=0;a=Um(e);1.4210854715202004e-14>a?(k[m]=1,k[n]=0,k[p]=0,H(l,m,n,p),c[e]=c[l],k[e]=k[l],c[e+1]=c[l+1],k[e+1]=k[l+1],c[e+2]=c[l+2],k[e+2]=k[l+2],c[e+3]=c[l+3],k[e+3]=k[l+3]):(k[r]=ec(a),KB(e,r));b=g}ySa.X=1;function wSa(a,d,e,f,g){var h=b;b+=8;var i=h+4;MTa(a);c[a]=VTa+2;var j=a+9;c[j]=c[d];k[j]=k[d];c[j+1]=c[d+1];k[j+1]=k[d+1];c[j+2]=c[d+2];k[j+2]=k[d+2];c[j+3]=c[d+3];k[j+3]=k[d+3];j=a+13;c[j]=c[e];k[j]=k[e];c[j+1]=c[e+1];k[j+1]=k[e+1];c[j+2]=c[e+2];k[j+2]=k[e+2];c[j+3]=c[e+3];k[j+3]=k[e+3];c[a+53]=f;c[a+54]=g;eQ(a+17);pQ(a+17,a+9);eQ(a+33);pQ(a+33,a+13);N(h,e,d);IB(h);k[a+1]=0==k[h]?0xde0b6b000000000:1/k[h];k[a+1+1]=0==k[h+1]?0xde0b6b000000000:1/k[h+1];k[a+1+2]=0==k[h+2]?0xde0b6b000000000:1/k[h+2];c[a+5]=0>k[a+1]&1;c[a+6]=0>k[a+1+1]&1;c[a+7]=0>k[a+1+2]&1;N(i,a+13,a+9);k[a+8]=J(h,i);b=h}wSa.X=1;function WTa(a){xe(a)}WTa.X=1;function XTa(a,d){var e;if(0==k[c[a+54]+1]){e=0}else{e=c[d];var f=c[a+54];v[c[c[f]+2]](f,ci(e))&&mm(a+17,a+33,e,bi(e),e+1,c[a+54]);e=1}return e}XTa.X=1;function YTa(){}YTa.X=1;function uSa(a,d,e){bLa(a);c[a]=ZTa+2;c[a+4]=e;c[a+5]=d;k[a+1]=k[c[a+4]+1]}uSa.X=1;function $Ta(a){xe(a)}$Ta.X=1;function aUa(a,d){var e=c[a+4];return v[c[c[e]+2]](e,d)}aUa.X=1;function bUa(a,d,e){var f=b;b+=2;c[f]=-1;c[f+1]=c[a+5];0==(c[d+1]|0)&&(c[d+1]=f);var g=c[a+4],d=v[c[c[g]+3]](g,d,e&1);k[a+1]=k[c[a+4]+1];b=f;return d}bUa.X=1;function cUa(){}cUa.X=1;function tSa(a,d,e,f,g,h,i,j){dUa(a,d,e,f,j,v[c[c[i]+11]](i));c[a]=eUa+2;c[a+53]=g;c[a+54]=h;c[a+55]=i}tSa.X=1;function fUa(a){xe(a)}fUa.X=1;function gUa(a,d,e,f,g,h){var i=b;b+=13;var j;j=i+2;c[i]=g;c[i+1]=h;f<=k[c[a+53]+1]?(SV(j,c[a+54],i,d,e,f),a=c[a+53],j=v[c[c[a]+3]](a,j,0)):j=f;b=i;return j}gUa.X=1;function hUa(){}hUa.X=1;function rSa(a,d,e,f,g,h,i,j){dUa(a,d,e,f,j,v[c[c[i]+11]](i));c[a]=iUa+2;c[a+53]=g;c[a+54]=h;c[a+55]=i}rSa.X=1;function jUa(a){xe(a)}jUa.X=1;function kUa(a,d,e,f,g,h){var i=b;b+=13;var j;j=i+2;c[i]=g;c[i+1]=h;f<=k[c[a+53]+1]?(SV(j,c[a+54],i,d,e,f),a=c[a+53],j=v[c[c[a]+3]](a,j,1)):j=f;b=i;return j}kUa.X=1;function vY(a){QTa(a);c[a]=lUa+2}vY.X=1;function mUa(){}mUa.X=1;function nUa(a){xe(a)}nUa.X=1;function oUa(){}oUa.X=1;function pUa(){}pUa.X=1;function nSa(a,d,e){GW(a);c[a]=qUa+2;c[a+6]=e;c[a+7]=d;k[a+1]=k[c[a+6]+1]}nSa.X=1;function rUa(a){xe(a)}rUa.X=1;function sUa(a,d){var e=c[a+6];return v[c[c[e]+2]](e,d)}sUa.X=1;function tUa(){}tUa.X=1;function uUa(){return 1}uUa.X=1;function vUa(){return 1}vUa.X=1;function wUa(){}wUa.X=1;function xUa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}xUa.X=1;function HY(a){c[a]=yUa+2}HY.X=1;function qY(a,d){return c[a+3]+d}qY.X=1;function tY(a){return c[a+1]}tY.X=1;function oY(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}oY.X=1;function IY(a){return 0==(c[a+10]|0)}IY.X=1;function zUa(a){return c[a+2]}zUa.X=1;function AUa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}AUa.X=1;function BUa(a,d,e){var f=b;b+=2;c[f]=-1;c[f+1]=c[a+7];0==(c[d+1]|0)&&(c[d+1]=f);var g=c[a+6],d=v[c[c[g]+3]](g,d,e&1);k[a+1]=k[c[a+6]+1];b=f;return d}BUa.X=1;function pY(a,d,e){var f,g;f=tY(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(tY(a)|0)&&JY(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}pY.X=1;function rY(a,d,e,f,g,h,i){var j,l,m,n,p;k[g]=(k[(c[e]<<2)+f]-k[a])*k[d];m=(k[(1-c[e]<<2)+f]-k[a])*k[d];n=(k[(c[e+1]<<2)+f+1]-k[a+1])*k[d+1];p=(k[(1-c[e+1]<<2)+f+1]-k[a+1])*k[d+1];var r=k[g]>p;a:do{if(r){j=4}else{if(n>m){j=4}else{n>k[g]&&(k[g]=n);p<m&&(m=p);j=(k[(c[e+2]<<2)+f+2]-k[a+2])*k[d+2];l=(k[(1-c[e+2]<<2)+f+2]-k[a+2])*k[d+2];var s=k[g]>l;do{if(!s&&j<=m){j>k[g]&&(k[g]=j);l<m&&(m=l);l=k[g]<i?m>h:0;j=19;break a}}while(0);l=0;j=19}}}while(0);4==j&&(l=0);return l}rY.X=1;function sY(a){return IY(a)^1}sY.X=1;function uY(a){xUa(a,0,tY(a));CUa(a);oY(a)}uY.X=1;function CUa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&DUa(a,c[a+3]),c[a+3]=0)}CUa.X=1;function DUa(a,d){$1=a;yh(d)}DUa.X=1;function JY(a,d){var e;(zUa(a)|0)<(d|0)&&(e=EUa(a,d),AUa(a,0,tY(a),e),xUa(a,0,tY(a)),CUa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}JY.X=1;function EUa(a,d){return 0!=(d|0)?FUa(a,d,0):0}EUa.X=1;function FUa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}FUa.X=1;function fSa(a,d,e,f,g,h,i){HY(a);c[a]=GUa+2;c[a+1]=d;c[a+2]=e;c[a+3]=f;c[a+4]=g;c[a+5]=h;c[a+6]=i}fSa.X=1;function HUa(a){xe(a)}HUa.X=1;function IUa(a,d){hSa(a,c[d+9])}IUa.X=1;function JUa(a,d,e){$4=e;v[c[c[a]+3]](a,d)}JUa.X=1;function KUa(){}KUa.X=1;function LUa(a){xe(a)}LUa.X=1;function MUa(){}MUa.X=1;function eSa(a,d,e,f,g,h,i){NUa(a,d,e,c[f+5]);c[a]=OUa+2;c[a+11]=f;c[a+12]=g;c[a+13]=h;sQ(a+14,i)}eSa.X=1;function PUa(a){xe(a)}PUa.X=1;function QUa(a,d,e,f,g){var h=b;b+=13;var i=h+2,j=h+6;c[h]=f;c[h+1]=g;Bo(i,a+14,d);pE(j,c[a+12],h,i,e);a=c[a+11];j=v[c[c[a]+3]](a,j,1);b=h;return j}QUa.X=1;function RUa(){}RUa.X=1;function SUa(){}SUa.X=1;function TUa(){}TUa.X=1;function KY(a){c[a]&=-2;c[a]&=-3;c[a]&=-5;c[a]&=-9}KY.X=1;function LY(a,d){return c[a+3]+d}LY.X=1;function MY(a){return c[a+1]}MY.X=1;function UUa(){}UUa.X=1;function dSa(a,d,e,f,g,h,i){NUa(a,d,e,c[f+5]);c[a]=VUa+2;c[a+11]=f;c[a+12]=g;c[a+13]=h;sQ(a+14,i)}dSa.X=1;function WUa(a){xe(a)}WUa.X=1;function XUa(a,d,e,f,g){var h=b;b+=13;var i=h+2,j=h+6;c[h]=f;c[h+1]=g;Bo(i,a+14,d);pE(j,c[a+12],h,i,e);a=c[a+11];j=v[c[c[a]+3]](a,j,1);b=h;return j}XUa.X=1;function gY(a){k[a+77]=9999999747378752e-20;YUa(a+79)}gY.X=1;function YUa(a){KY(a+4)}YUa.X=1;function fY(a){c[a]=ZUa+2;k[a+41]=0xde0b6b000000000;c[a+42]=0;k[a+43]=0}fY.X=1;function $Ua(a){xe(a)}$Ua.X=1;function kY(a){$1=a;aVa()}kY.X=1;function jY(a,d){$1=a;bVa(d)}jY.X=1;function cVa(a,d,e){var f=b;b+=1;var g,h,i,j;g=c[a+7]&1?e:d;d=c[a+7]&1?d:e;e=bi(g);h=el(e);c[f]=0;dVa(a+2,h,f);i=0;var l=(i|0)<(h|0);a:do{if(l){for(var m=a+2,n=a+1,p=a+8,r=a+2;;){if(0!=(hk(e)|0)){c[LY(m,i)]=0}else{j=bi(g);hi(g,Yk(e,i));var s=c[n],s=v[c[c[s]+2]](s,g,d,c[p]);c[LY(r,i)]=s;hi(g,j)}i+=1;if((i|0)>=(h|0)){break a}}}}while(0);b=f}cVa.X=1;function dVa(a,d,e){var f,g;f=MY(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(MY(a)|0)&&eVa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}dVa.X=1;function fVa(a){var d,e;d=MY(a+2);e=0;var f=(e|0)<(d|0);a:do{if(f){for(var g=a+2,h=a+2,i=a+1,j=a+2;;){if(0!=(c[LY(g,e)]|0)){var l=c[LY(h,e)];v[c[c[l]]](l);l=c[i];v[c[c[l]+15]](l,c[LY(j,e)])}e+=1;if((e|0)>=(d|0)){break a}}}}while(0)}fVa.X=1;function gVa(a){hVa(a);xe(a)}gVa.X=1;function NY(a,d,e,f,g){g&=1;aX(a,d,e,f);c[a]=OY+2;iVa(a+2);c[a+7]=g&1;c[a+8]=c[d+1];c[a+9]=0;c[a+10]=ik(bi(c[a+7]&1?f:e));cVa(a,e,f)}NY.X=1;function hVa(a){c[a]=OY+2;fVa(a);jVa(a+2)}hVa.X=1;function PY(a,d,e){var f,g;f=AX(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(AX(a)|0)&&POa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}PY.X=1;function QY(a,d,e){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];a+=4;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}QY.X=1;function kVa(a,d,e){var f=b;b+=86;var g,h=f+16,i=f+32,j=f+48,l=f+52,m=f+56,n=f+60,p=f+72,r=f+76,s=f+77,t=f+78,w=f+79,x=f+83,y=f+84,z=f+85;g=bi(c[a+1]);sQ(f,c[a+1]+1);sQ(h,c[a+1]+17);WW(i,f,al(g,e));v[c[c[d]+2]](d,i,j,l);g=bi(c[a+2]);v[c[c[g]+2]](g,c[a+2]+1,m,n);if(hX(j,l,m,n)){Ji(c[a+1],i);wi(c[a+1],i);i=bi(c[a+1]);hi(c[a+1],d);0==(c[c[a+6]+e]|0)&&(d=c[a+3],d=v[c[c[d]+2]](d,c[a+1],c[a+2],c[a+7]),c[c[a+6]+e]=d);d=c[a+5];g=c[d];if((dI(c[a+5])|0)==(c[a+1]|0)){v[c[g+2]](d,-1,e)}else{v[c[g+3]](d,-1,e)}e=c[c[a+6]+e];v[c[c[e]+2]](e,c[a+1],c[a+2],c[a+4],c[a+5]);0!=(c[c[a+4]+5]|0)&&(e=c[c[a+4]+5],0!=(v[c[c[e]+12]](e)&2|0)&&(e=c[c[a+4]+5],d=c[c[e]+13],k[r]=1,k[s]=1,k[t]=1,H(p,r,s,t),v[d](e,j,l,p),j=c[c[a+4]+5],l=c[c[j]+13],k[x]=1,k[y]=1,k[z]=1,H(w,x,y,z),v[l](j,m,n,w)));hi(c[a+1],i);Ji(c[a+1],f);wi(c[a+1],h)}b=f}kVa.X=1;function lVa(){}lVa.X=1;function mVa(a,d,e,f,g){var h=b;b+=163;var i,j,l,m=h+8,n,p=h+13,r=h+14,s=h+18,t=h+22,w=h+38,x=h+54,y=h+70,z=h+78,A=h+83,C=h+99,B=h+115,K=h+131,E=h+135,G=h+139,M=h+143,L=h+147;i=c[a+7]&1?e:d;j=c[a+7]&1?d:e;l=bi(i);(ik(l)|0)!=(c[a+10]|0)&&(fVa(a),cVa(a,d,e));d=hk(l);nVa(h,i,j,c[a+1],f,g,LY(a+2,0),c[a+8]);XX(m);for(var f=0,e=a+2,F=a+2,I=a+2;(f|0)<(MY(e)|0);){if(0!=(c[LY(F,f)]|0)){n=c[LY(I,f)];v[c[c[n]+4]](n,m);for(n=0;(n|0)<(AX(m)|0);){0!=(Xj(c[ZX(m,n)])|0)&&(fI(g,c[ZX(m,n)]),DI(g),fI(g,0)),n+=1}c[p]=0;PY(m,0,p)}f+=1}TX(m);g=0!=(d|0);a:do{if(g){uw(x,i+1),WW(w,x,j+1),xi(t,w),m=bi(j),v[c[c[m]+2]](m,t,r,s),QY(y,r,s),RY(d,c[d],y,h)}else{m=MY(a+2);for(p=0;;){if((p|0)>=(m|0)){break a}kVa(h,Yk(l,p),p);p+=1}}}while(0);r=MY(a+2);XX(z);s=0;t=a+2;w=a+2;x=a+1;y=a+2;for(a+=2;(s|0)<(r|0);){0!=(c[LY(t,s)]|0)&&(d=Yk(l,s),xi(A,i+1),xi(C,i+17),WW(L,A,al(l,s)),xi(B,L),v[c[c[d]+2]](d,B,K,E),d=bi(j),v[c[c[d]+2]](d,j+1,G,M),hX(K,E,G,M)||(d=c[LY(w,s)],v[c[c[d]]](d),d=c[x],v[c[c[d]+15]](d,c[LY(y,s)]),c[LY(a,s)]=0)),s+=1}TX(z);b=h}mVa.X=1;function RY(a,d,e,f){var g=b;b+=17;var h=g+1,i=g+9,j=g+14,l=g+15,m=g+16;$1=a;c[g]=d;if(0!=(c[g]|0)){c[h]=c[e];k[h]=k[e];c[h+1]=c[e+1];k[h+1]=k[e+1];c[h+2]=c[e+2];k[h+2]=k[e+2];c[h+3]=c[e+3];k[h+3]=k[e+3];c[h+4]=c[e+4];k[h+4]=k[e+4];c[h+5]=c[e+5];k[h+5]=k[e+5];c[h+6]=c[e+6];k[h+6]=k[e+6];c[h+7]=c[e+7];k[h+7]=k[e+7];oY(i);c[j]=0;pY(i,0,j);JY(i,64);for(SY(i,g);!(a=c[qY(i,tY(i)-1)],oVa(i),TY(a,h)&&(sY(a)?(c[l]=c[a+9],SY(i,l),c[m]=c[a+10],SY(i,m)):(d=f,v[c[c[d]+3]](d,a))),0>=(tY(i)|0));){}uY(i)}b=g}RY.X=1;function pVa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}pVa.X=1;function qVa(a,d){$1=a;return 0!=(d|0)?d<<1:1}qVa.X=1;function rVa(a){return c[a+2]}rVa.X=1;function sVa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}sVa.X=1;function iVa(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}iVa.X=1;function oVa(a){a+=1;c[a]-=1}oVa.X=1;function UY(a){c[a]=tVa+2;c[a+1]=35;c[a+2]=0}UY.X=1;function uVa(a,d,e,f,g){var h=b;b+=32;var i,j,l,m,n,p=h+16,r;i=c[a+7]&1?e:d;d=c[a+7]&1?d:e;e=bi(i);j=1;l=MY(a+2);m=0;var s=(m|0)<(l|0);a:do{if(s){for(var t=a+2;;){if(n=Yk(e,m),xi(h,i+1),WW(p,h,al(e,m)),Ji(i,p),r=bi(i),hi(i,n),n=c[LY(t,m)],n=v[c[c[n]+3]](n,i,d,f,g),n<j&&(j=n),hi(i,r),Ji(i,h),m+=1,(m|0)>=(l|0)){break a}}}}while(0);b=h;return j}uVa.X=1;function vVa(a,d){var e;e=0;var f=a+2,g=(e|0)<(MY(f)|0);a:do{if(g){for(var h=a+2,i=a+2;;){if(0!=(c[LY(h,e)]|0)){var j=c[LY(i,e)];v[c[c[j]+4]](j,d)}e+=1;if((e|0)>=(MY(f)|0)){break a}}}}while(0)}vVa.X=1;function eVa(a,d){var e;(rVa(a)|0)<(d|0)&&(e=wVa(a,d),sVa(a,0,MY(a),e),pVa(a,0,MY(a)),xVa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}eVa.X=1;function wVa(a,d){return 0!=(d|0)?yVa(a,d,0):0}wVa.X=1;function xVa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&zVa(a,c[a+3]),c[a+3]=0)}xVa.X=1;function zVa(a,d){$1=a;yh(d)}zVa.X=1;function yVa(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}yVa.X=1;function jVa(a){pVa(a,0,MY(a));xVa(a);iVa(a)}jVa.X=1;function SY(a,d){(tY(a)|0)==(zUa(a)|0)&&JY(a,qVa(a,tY(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}SY.X=1;function TY(a,d){return k[a]<=k[d+4]?k[a+4]>=k[d]?k[a+1]<=k[d+4+1]?k[a+4+1]>=k[d+1]?k[a+2]<=k[d+4+2]?k[a+4+2]>=k[d+2]:0:0:0:0:0}TY.X=1;function nVa(a,d,e,f,g,h,i,j){HY(a);c[a]=AVa+2;c[a+1]=d;c[a+2]=e;c[a+3]=f;c[a+4]=g;c[a+5]=h;c[a+6]=i;c[a+7]=j}nVa.X=1;function BVa(a){xe(a)}BVa.X=1;function CVa(a,d){var e=b;b+=31;var f,g,h=e+4,i=e+8,j=e+24,l=e+28,m=e+29,n=e+30;f=c[d+9];g=Yk(bi(c[a+1]),f);if(0!=(c[c[a+4]+5]|0)){var p=c[c[a+4]+5];0!=(v[c[c[p]+12]](p)&2|0)&&(sQ(i,c[a+1]+1),fh(d,d+4,0,i,e,h),i=c[c[a+4]+5],p=c[c[i]+13],k[l]=1,k[m]=0,k[n]=0,H(j,l,m,n),v[p](i,e,h,j))}kVa(a,g,f);b=e}CVa.X=1;function Qk(a,d){var e=b;b+=9;var f,g=e+1,h=e+2,i=e+3,j=e+4,l=e+5,m=e+6,n=e+7,p=e+8;f=d&1;UY(a);c[a]=VY+2;DVa(a+3);k[e]=0xde0b6b000000000;k[g]=0xde0b6b000000000;k[h]=0xde0b6b000000000;H(a+8,e,g,h);k[i]=-0xde0b6b000000000;k[j]=-0xde0b6b000000000;k[l]=-0xde0b6b000000000;H(a+12,i,j,l);c[a+16]=0;c[a+17]=1;k[a+18]=0;k[m]=1;k[n]=1;k[p]=1;H(a+19,m,n,p);c[a+1]=31;f&1&&(f=Ue(40,16),0==(f|0)?f=0:WY(f),c[a+16]=f);b=e}Qk.X=1;function EVa(a){FVa(a);yh(a)}EVa.X=1;function GVa(a){a+=1;c[a]-=1}GVa.X=1;function $k(a,d,e){var f=b;b+=36;var g=f+20,h=f+24,i=f+28,j=a+17;c[j]+=1;c[f+19]=0;xi(f,d);c[f+16]=e;c[f+17]=Ie(e);k[f+18]=v[c[c[e]+11]](e);v[c[c[e]+2]](e,d,g,h);for(var d=0,e=a+8,j=a+8,l=a+12,m=a+12;;){k[e+d]>k[g+d]&&(k[j+d]=k[g+d]);k[l+d]<k[h+d]&&(k[m+d]=k[h+d]);var n=d+1,d=n;if(3<=(n|0)){break}}0!=(c[a+16]|0)&&(QY(i,g,h),g=fl(a+3),c[f+19]=XY(c[a+16],i,g));HVa(a+3,f);b=f}$k.X=1;function HVa(a,d){(fl(a)|0)==(IVa(a)|0)&&JVa(a,KVa(a,fl(a)));YY(c[a+3]+20*c[a+1],d);var e=a+1;c[e]+=1}HVa.X=1;function kl(a,d,e,f){var g=b;b+=16;var h=g+4,i=g+8,f=f&1;xi(Zk(a+3,d),e);if(0!=(c[a+16]|0)){var j=c[Zk(a+3,d)+16];v[c[c[j]+2]](j,e,g,h);QY(i,g,h);ZY(c[a+16],c[Zk(a+3,d)+19],i)}if(f&1){v[c[c[a]+16]](a)}b=g}kl.X=1;function gl(a,d){var e=a+17;c[e]+=1;0!=(c[a+16]|0)&&$Y(c[a+16],c[Zk(a+3,d)+19]);LVa(a+3,d,fl(a+3)-1);0!=(c[a+16]|0)&&(c[c[Zk(a+3,d)+19]+9]=d);GVa(a+3)}gl.X=1;function LVa(a,d,e){var f=b;b+=20;YY(f,c[a+3]+20*d);MVa(c[a+3]+20*d,c[a+3]+20*e);MVa(c[a+3]+20*e,f);b=f}LVa.X=1;function NVa(a,d){var e;e=a+17;c[e]+=1;var f=fl(a+3)-1;e=f;f=0<=(f|0);a:do{if(f){for(var g=a+3;;){(c[Zk(g,e)+16]|0)==(d|0)&&gl(a,e);var h=e-1;e=h;if(!(0<=(h|0))){break a}}}}while(0);v[c[c[a]+16]](a)}NVa.X=1;function OVa(a){var d=b;b+=22;var e=d+4,f=d+5,g=d+6,h=d+7,i=d+11,j=d+12,l=d+13,m=d+14,n=d+18,p;k[e]=0xde0b6b000000000;k[f]=0xde0b6b000000000;k[g]=0xde0b6b000000000;H(d,e,f,g);e=a+8;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];k[i]=-0xde0b6b000000000;k[j]=-0xde0b6b000000000;k[l]=-0xde0b6b000000000;H(h,i,j,l);i=a+12;c[i]=c[h];k[i]=k[h];c[i+1]=c[h+1];k[i+1]=k[h+1];c[i+2]=c[h+2];k[i+2]=k[h+2];c[i+3]=c[h+3];k[i+3]=k[h+3];h=0;i=a+3;j=(h|0)<(fl(i)|0);a:do{if(j){for(var l=a+3,e=a+3,f=a+8,g=a+8,r=a+12,s=a+12;;){p=c[Zk(l,h)+16];v[c[c[p]+2]](p,Zk(e,h),m,n);for(p=0;;){k[f+p]>k[m+p]&&(k[g+p]=k[m+p]);k[r+p]<k[n+p]&&(k[s+p]=k[n+p]);var t=p+1;p=t;if(3<=(t|0)){break}}h+=1;if((h|0)>=(fl(i)|0)){break a}}}}while(0);b=d}OVa.X=1;function PVa(a,d,e,f){var g=b;b+=62;var h=g+4,i=g+5,j=g+9,l=g+13,m=g+14,n=g+18,p=g+19,r=g+20,s=g+21,t=g+22,w=g+23,x=g+24,y=g+28,z=g+29,A=g+30,C=g+31,B=g+43,K=g+47,E=g+51,G=g+52,M=g+53,L=g+54,F=g+58;k[h]=.5;N(i,a+12,a+8);Q(g,i,h);k[l]=.5;wn(m,a+12,a+8);Q(j,m,l);0==(fl(a+3)|0)&&(k[n]=0,k[p]=0,k[r]=0,pe(g,n,p,r),k[s]=0,k[t]=0,k[w]=0,pe(j,s,t,w));k[y]=v[c[c[a]+11]](a);k[z]=v[c[c[a]+11]](a);k[A]=v[c[c[a]+11]](a);H(x,y,z,A);xn(g,x);qc(C,d);vw(B,d,j);k[E]=J(0+C,g);k[G]=J(4+C,g);k[M]=J(8+C,g);H(K,E,G,M);N(L,B,K);c[e]=c[L];k[e]=k[L];c[e+1]=c[L+1];k[e+1]=k[L+1];c[e+2]=c[L+2];k[e+2]=k[L+2];c[e+3]=c[L+3];k[e+3]=k[L+3];wn(F,B,K);c[f]=c[F];k[f]=k[F];c[f+1]=c[F+1];k[f+1]=k[F+1];c[f+2]=c[F+2];k[f+2]=k[F+2];c[f+3]=c[F+3];k[f+3]=k[F+3];b=g}PVa.X=1;function QVa(a,d,e){var f=b;b+=33;var g=f+16,h=f+20,i=f+24,j=f+28,l=f+32;eQ(f);v[c[c[a]+2]](a,f,g,h);N(j,h,g);k[l]=.5;Q(i,j,l);a=2*k[i];g=2*k[i+1];i=2*k[i+2];k[e]=d/12*(g*g+i*i);k[e+1]=d/12*(a*a+i*i);k[e+2]=d/12*(a*a+g*g);b=f}QVa.X=1;function FVa(a){c[a]=VY+2;0!=(c[a+16]|0)&&(aZ(c[a+16]),yh(c[a+16]));RVa(a+3)}FVa.X=1;function SVa(){return D.He}SVa.X=1;function TVa(){return 24}TVa.X=1;function KVa(a,d){$1=a;return 0!=(d|0)?d<<1:1}KVa.X=1;function UVa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}UVa.X=1;function VVa(a){return a+19}VVa.X=1;function WVa(a,d){k[a+18]=d}WVa.X=1;function XVa(a){return k[a+18]}XVa.X=1;function IVa(a){return c[a+2]}IVa.X=1;function pl(a,d,e,f){var g=b;b+=99;var h,i=g+1,j=g+5,l=g+6,m=g+7,n=g+8,p=g+12,r=g+24,s=g+25,t=g+26,w=g+27,x=g+28,y=g+29,z=g+30,A=g+31,C=g+32,B=g+33,K=g+37,E=g+41,G=g+53,M=g+65,L=g+66,F=g+67,I=g+68,R=g+69,O=g+70,Z=g+71,P=g+72,S=g+76,da=g+77,V=g+81,ba=g+82,$=g+86,Y=g+87,la=g+91,ka=g+95;h=fl(a+3);k[g]=0;k[j]=0;k[l]=0;k[m]=0;H(i,j,l,m);j=0;l=(j|0)<(h|0);a:do{if(l){for(m=a+3;;){if(Q(n,nY(m,j)+12,d+j),xn(i,n),k[g]+=k[d+j],j+=1,(j|0)>=(h|0)){break a}}}}while(0);KB(i,g);pQ(e,i);k[r]=0;k[s]=0;k[t]=0;k[w]=0;k[x]=0;k[y]=0;k[z]=0;k[A]=0;k[C]=0;Db(p,r,s,t,w,x,y,z,A,C);j=0;n=(j|0)<(h|0);a:do{if(n){r=a+3;for(s=a+3;;){if(t=c[nY(r,j)+16],v[c[c[t]+8]](t,k[d+j],B),t=nY(s,j),N(K,t+12,i),ue(E,t),LC(0+E,B),LC(4+E,B+1),LC(8+E,B+2),ww(G,t,E),Wb(E,G),xn(0+p,0+E),xn(4+p,4+E),xn(8+p,8+E),k[M]=Um(K),t=0+E,k[L]=0,k[F]=0,pe(t,M,L,F),t=4+E,k[I]=0,k[R]=0,pe(t,I,M,R),t=8+E,k[O]=0,k[Z]=0,pe(t,O,Z,M),t=0+E,k[S]=-k[K],Q(P,K,S),xn(t,P),t=4+E,k[V]=-k[K+1],Q(da,K,V),xn(t,da),t=8+E,k[$]=-k[K+2],Q(ba,K,$),xn(t,ba),t=0+p,Q(Y,0+E,d+j),xn(t,Y),t=4+p,Q(la,4+E,d+j),xn(t,la),t=8+p,Q(ka,8+E,d+j),xn(t,ka),j+=1,(j|0)>=(h|0)){break a}}}}while(0);md(p,e,9999999747378752e-21,20);pe(f,0+p,4+p+1,8+p+2);b=g}pl.X=1;function YVa(a,d){var e=b;b+=32;var f,g=e+16,h=e+20,i=e+24,j=e+28;f=0;var l=a+3,m=(f|0)<(fl(l)|0);a:do{if(m){for(var n=a+3,p=g,r=a+19,s=g,t=h,w=a+3;;){sQ(e,al(a,f));var x=c[Zk(n,f)+16],x=v[c[c[x]+7]](x);c[p]=c[x];k[p]=k[x];c[p+1]=c[x+1];k[p+1]=k[x+1];c[p+2]=c[x+2];k[p+2]=k[x+2];c[p+3]=c[x+3];k[p+3]=k[x+3];ig(i,g,d);eX(h,i,r);c[s]=c[t];k[s]=k[t];c[s+1]=c[t+1];k[s+1]=k[t+1];c[s+2]=c[t+2];k[s+2]=k[t+2];c[s+3]=c[t+3];k[s+3]=k[t+3];x=c[Zk(w,f)+16];v[c[c[x]+6]](x,g);ig(j,e+12,d);pQ(e,j);kl(a,f,e,0);f+=1;if((f|0)>=(fl(l)|0)){break a}}}}while(0);f=a+19;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];v[c[c[a]+16]](a);b=e}YVa.X=1;function Kk(a){var d=b;b+=16;var e,f,g=d+4,h=d+8,i=0!=(c[a+16]|0);a:do{if(!i){e=Ue(40,16);0==(e|0)?e=0:WY(e);c[a+16]=e;e=0;var j=a+3;if((e|0)<(fl(j)|0)){for(var l=a+3,m=a+16;;){f=Zk(l,e);var n=c[f+16];v[c[c[n]+2]](n,f,d,g);QY(h,d,g);c[f+19]=XY(c[m],h,e);e+=1;if((e|0)>=(fl(j)|0)){break a}}}}}while(0);b=d}Kk.X=1;function ZVa(a,d,e){var f,g,h,i,j;HX(a,d,e);k[d+8]=k[a+18];c[d+7]=fl(a+3);c[d+6]=0;if(0!=(c[d+7]|0)){f=v[c[c[e]+4]](e,76,c[d+7]);g=c[f+2];c[d+6]=v[c[c[e]+7]](e,g);h=0;var l=(h|0)<(c[d+7]|0);a:do{if(l){for(var m=a+3,n=a+3,p=a+3,r=a+3,s=a+3,t=a+3,w=a+3,x=a+3;;){k[g+18]=k[nY(m,h)+18];i=e;c[g+16]=v[c[c[i]+7]](i,c[nY(n,h)+16]);i=e;if(0==(v[c[c[i]+6]](i,c[nY(p,h)+16])|0)){i=e;j=c[nY(t,h)+16];i=v[c[c[i]+4]](i,v[c[c[j]+12]](j),1);j=c[nY(w,h)+16];j=v[c[c[j]+13]](j,c[i+2],e);var y=e;v[c[c[y]+5]](y,i,j,1346455635,c[nY(x,h)+16])}c[g+17]=c[nY(r,h)+17];mQ(nY(s,h),g);h+=1;g+=19;if((h|0)>=(c[d+7]|0)){break a}}}}while(0);v[c[c[e]+5]](e,f,D.Af,1497453121,c[f+2])}return D.qe}ZVa.X=1;function MVa(a,d){xi(a,d);c[a+16]=c[d+16];c[a+17]=c[d+17];k[a+18]=k[d+18];c[a+19]=c[d+19];return a}MVa.X=1;function YY(a,d){sQ(a,d);c[a+16]=c[d+16];c[a+17]=c[d+17];k[a+18]=k[d+18];c[a+19]=c[d+19]}YY.X=1;function JVa(a,d){var e;(IVa(a)|0)<(d|0)&&(e=$Va(a,d),aWa(a,0,fl(a),e),UVa(a,0,fl(a)),bWa(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}JVa.X=1;function $Va(a,d){return 0!=(d|0)?cWa(a,d,0):0}$Va.X=1;function aWa(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){if(YY(f+20*d,c[h]+20*d),d+=1,(d|0)>=(e|0)){break a}}}}while(0)}aWa.X=1;function bWa(a){0!=(c[a+3]|0)&&(c[a+4]&1&&dWa(a,c[a+3]),c[a+3]=0)}bWa.X=1;function dWa(a,d){$1=a;yh(d)}dWa.X=1;function eWa(){return D.Pd}eWa.X=1;function bZ(a){c[a]=fWa+2}bZ.X=1;function DVa(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}DVa.X=1;function wx(a,d){0==(d|0)?(c[a+16]=1,c[a+17]=0,c[a+18]=2):1==(d|0)?(c[a+16]=0,c[a+17]=1,c[a+18]=2):2==(d|0)&&(c[a+16]=0,c[a+17]=2,c[a+18]=1)}wx.X=1;function cWa(a,d,e){$1=a;$3=e;return Ue(80*d,16)}cWa.X=1;function RVa(a){UVa(a,0,fl(a));bWa(a);DVa(a)}RVa.X=1;function cZ(a){UY(a);c[a]=gWa+2;k[a+3]=0}cZ.X=1;function hWa(a){xe(a)}hWa.X=1;function iWa(){}iWa.X=1;function PA(a,d,e){var f=b;b+=4;yW(a);c[a]=jWa+2;k[a+14]=d;k[a+15]=e;c[a+1]=11;wx(a,1);k[a+13]=k[a+14]/ec(k[a+14]*k[a+14]+k[a+15]*k[a+15]);b=f}PA.X=1;function ox(a,d,e){PA(a,d,e);c[a]=kWa+2;wx(a,2)}ox.X=1;function Xx(a,d,e){PA(a,d,e);c[a]=lWa+2;wx(a,0)}Xx.X=1;function dZ(a,d,e){var f=b;b+=12;var g,h,i,j=f+4;i=f+8;g=.5*k[d+15];h=k[e+c[d+17]];var l=JB(e);h>l*k[d+13]?(k[f+c[d+16]]=0,k[f+c[d+17]]=g,k[f+c[d+18]]=0,c[a]=c[f],k[a]=k[f],c[a+1]=c[f+1],k[a+1]=k[f+1],c[a+2]=c[f+2],k[a+2]=k[f+2],c[a+3]=c[f+3],k[a+3]=k[f+3]):(h=ec(k[e+c[d+16]]*k[e+c[d+16]]+k[e+c[d+18]]*k[e+c[d+18]]),1.1920928955078125e-7<h?(i=k[d+14]/h,k[j+c[d+16]]=k[e+c[d+16]]*i,k[j+c[d+17]]=-g,k[j+c[d+18]]=k[e+c[d+18]]*i,c[a]=c[j],k[a]=k[j],c[a+1]=c[j+1],k[a+1]=k[j+1],c[a+2]=c[j+2],k[a+2]=k[j+2],c[a+3]=c[j+3],k[a+3]=k[j+3]):(k[i+c[d+16]]=0,k[i+c[d+17]]=-g,k[i+c[d+18]]=0,c[a]=c[i],k[a]=k[i],c[a+1]=c[i+1],k[a+1]=k[i+1],c[a+2]=c[i+2],k[a+2]=k[i+2],c[a+3]=c[i+3],k[a+3]=k[i+3]));b=f}dZ.X=1;function mWa(a,d,e){dZ(a,d,e)}mWa.X=1;function nWa(a,d,e,f){var g=b;b+=4;var h;h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=g;;){dZ(g,a,(h<<2)+d);var l=(h<<2)+e;c[l]=c[j];k[l]=k[j];c[l+1]=c[j+1];k[l+1]=k[j+1];c[l+2]=c[j+2];k[l+2]=k[j+2];c[l+3]=c[j+3];k[l+3]=k[j+3];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}nWa.X=1;function oWa(a,d,e){var f=b;b+=12;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+11;dZ(a,d,e);0!=v[c[c[d]+11]](d)&&(c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3],1.4210854715202004e-14>Um(f)&&(k[g]=-1,k[h]=-1,k[i]=-1,pe(f,g,h,i)),IB(f),k[l]=v[c[c[d]+11]](d),Q(j,f,l),xn(a,j));b=f}oWa.X=1;function pWa(a,d){var e,f,g;e=c[a+17];f=c[a+16];g=c[a+18];var h=a+15;k[h]*=k[d+e]/k[a+3+e];e=a+14;k[e]*=(k[d+f]/k[a+3+f]+k[d+g]/k[a+3+g])/2;k[a+13]=k[a+14]/ec(k[a+14]*k[a+14]+k[a+15]*k[a+15]);FX(a,d)}pWa.X=1;function qWa(){}qWa.X=1;function rWa(a){yh(a)}rWa.X=1;function sWa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}sWa.X=1;function tWa(a,d,e){var f=b;b+=45;var g=f+16,h=f+20,i=f+24,j=f+28,l=f+32,m=f+33,n=f+34,p=f+38,r=f+42,s=f+43,t=f+44;eQ(f);v[c[c[a]+2]](a,f,g,h);N(j,h,g);k[l]=.5;Q(i,j,l);h=v[c[c[a]+11]](a);g=2*(k[i]+h);a=2*(k[i+1]+h);i=2*(k[i+2]+h);g*=g;a*=a;i*=i;k[m]=.0833333283662796*d;k[r]=a+i;k[s]=g+i;k[t]=g+a;H(p,r,s,t);Q(n,p,m);c[e]=c[n];k[e]=k[n];c[e+1]=c[n+1];k[e+1]=k[n+1];c[e+2]=c[n+2];k[e+2]=k[n+2];c[e+3]=c[n+3];k[e+3]=k[n+3];b=f}tWa.X=1;function uWa(){}uWa.X=1;function vWa(a){yh(a)}vWa.X=1;function wWa(){}wWa.X=1;function xWa(a){yh(a)}xWa.X=1;function wY(a,d,e,f,g){bZ(a);c[a]=eZ+2;c[a+1]=f;c[a+2]=g;c[a+3]=d;c[a+4]=e;c[a+5]=0}wY.X=1;function sSa(a,d,e){bZ(a);c[a]=eZ+2;c[a+1]=0;c[a+2]=0;c[a+3]=d;c[a+4]=0;c[a+5]=e}sSa.X=1;function yWa(){}yWa.X=1;function zWa(){}zWa.X=1;function AWa(a,d,e,f){var g=b;b+=198;var h=g+19,i,j=g+53,l=g+69,m=g+85,n=g+101,p=g+117,r=g+133,s=g+149,t=g+165,w=g+169,x=g+173,y=g+177,z=g+181,A=g+182,C=g+186,B=g+190,K=g+194;0!=(c[a+4]|0)?(fZ(c[a+1]),l=c[a+3],p=c[a+4],t=Ie(c[a+3]),w=Ie(c[a+4]),x=c[a+3],x=v[c[c[x]+11]](x),y=c[a+4],y=v[c[c[y]+11]](y),BWa(g,l,p,t,w,x,y,c[a+1],c[a+2]),QQ(h),xi(h,d),xi(h+16,e),gZ(g,h,f,0,0)):(h=c[a+3],i=c[a+5],$hasCollision=0,a=i+12,i+=16,sQ(j,d),uw(n,e),WW(m,n,j),xi(l,m),uw(s,j),WW(r,s,e),xi(p,r),d=c[c[h]+15],WP(x,a),Bo(w,p,x),v[d](t,h,w),vw(y,l,t),k[z]=J(a,y)-k[i],Q(C,a,z),N(A,y,C),vw(B,e,A),Bo(K,e,a),v[c[c[f]+4]](f,K,B,k[z]));b=g}AWa.X=1;function CWa(){}CWa.X=1;function DWa(a,d,e,f,g,h){var i=b;b+=142;var j,l=i+4,m=i+8,n=i+12,p=i+16,r=i+20,s=i+24,t=i+28,w=i+29,x=i+30,y=i+31,z=i+35,A=i+36,C=i+37,B=i+38,K=i+42,E,G=i+53,M=i+57,L=i+58,F=i+59,I=i+60,R=i+76,O=i+92,Z=i+108,P=i+124,S=i+128,da=i+129,V=i+130,ba=i+131;xY(d,e,1,i,l);xY(f,g,1,m,n);e=c[a+3];e=v[c[c[e]+4]](e);0!=(c[a+4]|0)?(g=c[a+4],g=v[c[c[g]+4]](g)):g=0;e=JB(l)*e+JB(n)*g;N(p,m,i);N(r,m,i);if(0==JB(r)+e){j=0}else{r=0;k[t]=1;k[w]=0;k[x]=0;H(s,t,w,x);k[z]=0;k[A]=0;k[C]=0;pe(y,z,A,C);s=r;t=0;hZ(K);AWa(a,d,f,K);w=c[K+10]&1;x=K+5;c[B]=c[x];k[B]=k[x];c[B+1]=c[x+1];k[B+1]=k[x+1];c[B+2]=c[x+2];k[B+2]=k[x+2];c[B+3]=c[x+3];k[B+3]=k[x+3];x=w&1;a:do{if(x){if(w=k[K+9]+k[h+43],z=y,A=K+1,c[z]=c[A],k[z]=k[A],c[z+1]=c[A+1],k[z+1]=k[A+1],c[z+2]=c[A+2],k[z+2]=k[A+2],c[z+3]=c[A+3],k[z+3]=k[A+3],E=J(p,y),1.1920928955078125e-7>=E+e){j=0}else{for(var z=ba+10,A=ba+9,C=B,g=ba+5,$=y,Y=ba+1;;){if(.0010000000474974513>=w){k[h+41]=r;a=h+33;c[a]=c[y];k[a]=k[y];c[a+1]=c[y+1];k[a+1]=k[y+1];c[a+2]=c[y+2];k[a+2]=k[y+2];c[a+3]=c[y+3];k[a+3]=k[y+3];h+=37;c[h]=c[B];k[h]=k[B];c[h+1]=c[B+1];k[h+1]=k[B+1];c[h+2]=c[B+2];k[h+2]=k[B+2];c[h+3]=c[B+3];k[h+3]=k[B+3];j=1;break a}if(0!=(c[h+42]|0)){E=c[h+42];var la=c[c[E]+5];k[M]=1;k[L]=1;k[F]=1;H(G,M,L,F);v[la](E,B,.20000000298023224,G)}E=J(p,y);if(1.1920928955078125e-7>=E+e){j=0;break a}E=w/(E+e);r+=E;if(1<r){j=0;break a}if(0>r){j=0;break a}if(r<=s){j=0;break a}s=r;iZ(d,i,l,r,I);iZ(f,m,n,r,R);$P(Z,R,I);xi(O,Z);if(0!=(c[h+42]|0)){E=c[h+42];var la=c[c[E]+5],ka=I+12;k[S]=1;k[da]=0;k[V]=0;H(P,S,da,V);v[la](E,ka,.20000000298023224,P)}E=h;v[c[c[E]]](E,r);hZ(ba);AWa(a,I,R,ba);c[z]&1?(w=k[A]+k[h+43],c[C]=c[g],k[C]=k[g],c[C+1]=c[g+1],k[C+1]=k[g+1],c[C+2]=c[g+2],k[C+2]=k[g+2],c[C+3]=c[g+3],k[C+3]=k[g+3],c[$]=c[Y],k[$]=k[Y],c[$+1]=c[Y+1],k[$+1]=k[Y+1],c[$+2]=c[Y+2],k[$+2]=k[Y+2],c[$+3]=c[Y+3],k[$+3]=k[Y+3],t+=1,64<(t|0)?(j=h,v[c[c[j]+2]](j,-2,t),j=0,E=1):E=0):(j=h,v[c[c[j]+2]](j,-1,t),j=0,E=1);if(0!=(E|0)){break a}}}}else{j=0}}while(0)}b=i;return j}DWa.X=1;function iZ(a,d,e,f,g){var h=b;b+=36;var i=h+1,j=h+5,l=h+9,m=h+13,n=h+17,p=h+18,r=h+22,s=h+23,t=h+27,w=h+28,x=h+32;k[h]=f;f=a+12;Q(j,d,h);wn(i,f,j);pQ(g,i);i=d=JB(e);.7853981852531433<i*k[h]&&(d=i=.7853981852531433/k[h]);.0010000000474974513>i?(k[n]=.5*k[h]-.02083333395421505*k[h]*k[h]*k[h]*d*d,Q(m,e,n),c[l]=c[m],k[l]=k[m],c[l+1]=c[m+1],k[l+1]=k[m+1],c[l+2]=c[m+2],k[l+2]=k[m+2],c[l+3]=c[m+3],k[l+3]=k[m+3]):(k[r]=ud(.5*d*k[h])/d,Q(p,e,r),c[l]=c[p],k[l]=k[p],c[l+1]=c[p+1],k[l+1]=k[p+1],c[l+2]=c[p+2],k[l+2]=k[p+2],c[l+3]=c[p+3],k[l+3]=k[p+3]);e=l+1;m=l+2;k[t]=td(.5*d*k[h]);NG(s,l,e,m,t);dc(a,w);BW(x,s,w);AV(x);zb(g,x);b=h}iZ.X=1;function EWa(){}EWa.X=1;function FWa(a){xe(a)}FWa.X=1;function hZ(a){FW(a);c[a]=GWa+2;k[a+9]=0xde0b6b000000000;c[a+10]=0}hZ.X=1;function HWa(a){xe(a)}HWa.X=1;function IWa(a,d,e,f){if(f<k[a+9]){c[a+10]=1;var g=a+1;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];d=a+5;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];k[a+9]=f}}IWa.X=1;function JWa(a,d,e){gM(a);c[a]=KWa+2;c[a+4]=0;c[a+5]=3;c[a+3]=d;c[a+2]=e}JWa.X=1;function LWa(a){xe(a)}LWa.X=1;function MWa(){}MWa.X=1;function NWa(a,d){c[a+7]=d}NWa.X=1;function OWa(a,d){c[a+8]=d}OWa.X=1;function PWa(a,d,e,f,g,h,i,j,l){aX(a,e,f,g);c[a]=jZ+2;c[a+2]=h;c[a+3]=i;c[a+4]=0;c[a+5]=d;c[a+6]=0;c[a+7]=j;c[a+8]=l}PWa.X=1;function QWa(a){RWa(a);xe(a)}QWa.X=1;function RWa(a){c[a]=jZ+2;if(c[a+4]&1&&0!=(c[a+5]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+5])}}RWa.X=1;function SWa(a,d,e,f,g){var h=b;b+=73;var i,j,l=h+8,m=h+42;0==(c[a+5]|0)&&(i=c[a+1],c[a+5]=v[c[c[i]+3]](i,d,e),c[a+4]=1);fI(g,c[a+5]);i=bi(d);j=bi(e);QQ(l);kZ(m,i,j,c[a+2],c[a+3]);NWa(m,i);OWa(m,j);i=v[c[c[i]+11]](i)+v[c[c[j]+11]](j);k[l+32]=i+rk(c[a+5]);i=l+32;k[i]*=k[l+32];c[l+33]=c[f+12];xi(l,d+1);xi(l+16,e+1);gZ(m,l,g,c[f+5],0);c[a+4]&1&&DI(g);b=h}SWa.X=1;function TWa(a,d,e,f,g){var h=b;b+=312;var i,j;i=h+4;var l=h+8,m=h+21,n=h+65,p=h+156,r=h+160,s=h+173,t=h+217,w=h+308;$2=a;$5=f;$6=g;a=1;N(h,d+17+12,d+1+12);f=Um(h);N(i,e+17+12,e+1+12);i=Um(i);f<gi(d)?i<gi(e)?(j=a,i=24):i=5:i=5;5==i&&(j=bi(d),hW(l,pi(e)),fY(m),gY(n),lZ(p,j,l,n),mZ(p,d+1,d+17,e+1,e+17,m)&&(oi(d)>k[m+41]&&Zh(d,k[m+41]),oi(e)>k[m+41]&&Zh(e,k[m+41]),a>k[m+41]&&(a=k[m+41])),l=bi(e),hW(r,pi(d)),fY(s),gY(t),lZ(w,r,l,t),mZ(w,d+1,d+17,e+1,e+17,s)&&(oi(d)>k[s+41]&&Zh(d,k[s+41]),oi(e)>k[s+41]&&Zh(e,k[s+41]),a>k[s+41]&&(a=k[s+41])),j=a);b=h;return j}TWa.X=1;function UWa(){}UWa.X=1;function VWa(a,d){0!=(c[a+5]|0)&&c[a+4]&1&&CX(d,a+5)}VWa.X=1;function WWa(a,d,e,f){var g=c[d],g=v[c[c[g]+14]](g,36);0==(g|0)?a=0:(PWa(g,c[d+1],d,e,f,c[a+3],c[a+2],c[a+4],c[a+5]),a=g);return a}WWa.X=1;function XWa(a,d){nZ(a);c[a]=YWa+2;c[a+3]=d;c[a+1]=18}XWa.X=1;function ZWa(a){yh(a)}ZWa.X=1;function $Wa(){}$Wa.X=1;function aXa(a,d,e){d=c[d+3];v[c[c[d]+16]](a,d,e)}aXa.X=1;function bXa(a,d,e,f){a=c[a+3];v[c[c[a]+17]](a,d,e,f)}bXa.X=1;function cXa(a,d,e){d=c[d+3];v[c[c[d]+15]](a,d,e)}cXa.X=1;function dXa(a,d,e){a=c[a+3];v[c[c[a]+8]](a,d,e)}dXa.X=1;function eXa(a,d,e,f){a=c[a+3];v[c[c[a]+2]](a,d,e,f)}eXa.X=1;function fXa(a,d,e,f){a=c[a+3];v[c[c[a]+18]](a,d,e,f)}fXa.X=1;function gXa(a,d){var e=c[a+3];v[c[c[e]+6]](e,d)}gXa.X=1;function hXa(a){a=c[a+3];return v[c[c[a]+7]](a)}hXa.X=1;function iXa(a,d){var e=c[a+3];v[c[c[e]+10]](e,d)}iXa.X=1;function jXa(a){a=c[a+3];return v[c[c[a]+11]](a)}jXa.X=1;function kXa(a){a=c[a+3];return v[c[c[a]+19]](a)}kXa.X=1;function lXa(a,d,e){a=c[a+3];v[c[c[a]+20]](a,d,e)}lXa.X=1;function mXa(){return D.Zd}mXa.X=1;function nXa(){}nXa.X=1;function oXa(a){xe(a)}oXa.X=1;function oZ(a,d,e,f,g){g&=1;aX(a,d,e,f);c[a]=pZ+2;c[a+2]=g&1;pXa(a+3,c[d],e,f,g&1)}oZ.X=1;function qXa(a){rXa(a);xe(a)}qXa.X=1;function rXa(a){c[a]=pZ+2;qZ(a+3)}rXa.X=1;function sXa(a,d){0!=(c[a+19]|0)&&CX(d,a+19)}sXa.X=1;function pXa(a,d,e,f,g){g&=1;EY(a);c[a]=rZ+2;c[a+12]=d;c[a+13]=0;c[a+1]=g&1?f:e;c[a+2]=g&1?e:f;d=c[a+12];c[a+16]=v[c[c[d]+3]](d,c[a+1],c[a+2]);tXa(a)}pXa.X=1;function tXa(a){var d=c[a+12];v[c[c[d]+5]](d,c[a+16])}tXa.X=1;function uXa(a){qZ(a);xe(a)}uXa.X=1;function qZ(a){c[a]=rZ+2;tXa(a);var d=c[a+12];v[c[c[d]+4]](d,c[a+16])}qZ.X=1;function vXa(a){EX(a)}vXa.X=1;function wXa(a,d,e,f){var g=b;b+=53;var h=g+16,i=g+32,j=g+48,l=g+49;c[a+13]=e;k[a+14]=d;c[a+11]=f;uw(i,c[a+2]+1);WW(h,i,c[a+1]+1);xi(g,h);e=bi(c[a+1]);v[c[c[e]+2]](e,g,a+3,a+7);k[j]=d;H(l,j,j,j);xn(a+7,l);JC(a+3,l);b=g}wXa.X=1;function xXa(a,d,e,f,g){var h,i;h=c[a+2]&1?e:d;d=c[a+2]&1?d:e;Uf(bi(d))&&(e=bi(d),xf(bi(h))&&(i=v[c[c[e]+11]](e),fI(g,c[a+19]),wXa(a+3,i,f,g),ak(c[a+19],h,d),v[c[c[e]+15]](e,a+3,a+3+3,a+3+7),DI(g)))}xXa.X=1;function yXa(a,d,e,f,g){var h=b;b+=120;var i,j=h+4,l=h+20,m=h+36,n=h+52,p=h+56,r=h+60,s=h+61,t=h+65,w=h+69;$5=f;$6=g;f=c[a+2]&1?e:d;a=c[a+2]&1?d:e;N(h,f+17+12,f+1+12);d=Um(h)<gi(f);do{if(!d&&(uw(j,a+1),WW(l,j,f+1),WW(m,j,f+17),Uf(bi(a)))){e=n;g=l+12;c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];hp(n,m+12);e=p;g=l+12;c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];gp(p,m+12);k[r]=pi(f);H(s,r,r,r);JC(n,s);H(t,r,r,r);xn(p,t);zXa(w,l,m,pi(f),1);k[w+50]=oi(f);e=bi(a);if(0!=(e|0)){v[c[c[e]+15]](e,w,n,p)}k[w+50]<oi(f)?(Zh(f,k[w+50]),i=k[w+50],e=1):e=0;if(1==(e|0)){break}}i=1}while(0);b=h;return i}yXa.X=1;function AXa(){}AXa.X=1;function zXa(a,d,e,f,g){EY(a);c[a]=BXa+2;sQ(a+1,d);sQ(a+17,e);k[a+49]=f;k[a+50]=g}zXa.X=1;function CXa(a){xe(a)}CXa.X=1;function DXa(a,d,e,f){var g=b;b+=28;var h,i=g+2,j;ct(g);c[g]=c[a+12];h=c[a+2];if(xf(bi(c[a+1]))){sZ(i,d,d+4,d+8);v[c[c[i]+10]](i,k[a+14]);d=bi(h);hi(h,i);j=c[g];j=v[c[c[j]+2]](j,c[a+1],c[a+2],c[a+16]);var l=c[a+11],m=c[l];if((dI(c[a+11])|0)==(c[a+2]|0)){v[c[m+2]](l,e,f)}else{v[c[m+3]](l,e,f)}v[c[c[j]+2]](j,c[a+1],c[a+2],c[a+13],c[a+11]);v[c[c[j]]](j);a=c[g];v[c[c[a]+15]](a,j);hi(h,d);EX(i)}b=g}DXa.X=1;function EXa(){return D.Qd}EXa.X=1;function FXa(){return 2}FXa.X=1;function GXa(){return 3}GXa.X=1;function HXa(){return 3}HXa.X=1;function IXa(){return 1}IXa.X=1;function sZ(a,d,e,f){CW(a);c[a]=JXa+2;c[a+1]=1;var g=a+14;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];d=a+18;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];a+=22;c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3]}sZ.X=1;function KXa(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}KXa.X=1;function LXa(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;$1=a;$2=d;k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);b=f}LXa.X=1;function MXa(a,d,e){var f=b;b+=7;var g=f+4,h=f+5,i=f+6;k[g]=J(e,d+14);k[h]=J(e,d+18);k[i]=J(e,d+22);H(f,g,h,i);d=(fC(f)<<2)+d+14;c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];b=f}MXa.X=1;function NXa(a,d,e,f){var g=b;b+=7;var h,i,j=g+4,l=g+5,m=g+6;h=0;var n=(h|0)<(f|0);a:do{if(n){for(var p=a+14,r=a+18,s=a+22,t=a+14;;){i=(h<<2)+d;k[j]=J(i,p);k[l]=J(i,r);k[m]=J(i,s);H(g,j,l,m);i=(h<<2)+e;var w=(fC(g)<<2)+t;c[i]=c[w];k[i]=k[w];c[i+1]=c[w+1];k[i+1]=k[w+1];c[i+2]=c[w+2];k[i+2]=k[w+2];c[i+3]=c[w+3];k[i+3]=k[w+3];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}NXa.X=1;function OXa(a,d,e){var f=b;b+=1;tZ(a,e);0!=(d|0)&&(k[f]=-1,LC(e,f));b=f}OXa.X=1;function PXa(a,d,e,f){v[c[c[a]+25]](a,d,e);v[c[c[a]+25]](a,(d+1|0)%3,f)}PXa.X=1;function QXa(a,d,e){a=(d<<2)+a+14;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}QXa.X=1;function RXa(a,d,e,f){v[c[c[a]+29]](a,f,d,e)}RXa.X=1;function SXa(a,d,e){var f=b;b+=20;var g,h,i,j,l=f+4,m=f+8,n=f+12,p=f+16,r;tZ(a,f);i=J(d,f);i-=J(a+14,f);var s=i>=-e;a:do{if(s){if(i<=e){j=0;var t=a;for(r=0;;){if(3<=(r|0)){h=1;g=11;break a}v[c[c[t]+24]](a,j,l,m);N(n,m,l);qn(p,n,f);IB(p);r=J(d,p);r-=J(l,p);if(r<-e){h=0;g=11;break a}j=r=j+1}}else{g=10}}else{g=10}}while(0);10==g&&(h=0);b=f;return h}SXa.X=1;function TXa(a,d,e,f){$2=d;tZ(a,e);a+=14;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3]}TXa.X=1;function tZ(a,d){var e=b;b+=12;var f=e+4,g=e+8;N(f,a+18,a+14);N(g,a+22,a+14);qn(e,f,g);c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];IB(d);b=e}tZ.X=1;function UXa(a,d,e){gM(a);c[a]=VXa+2;c[a+4]=0;c[a+5]=3;c[a+3]=d;c[a+2]=e}UXa.X=1;function WXa(a){xe(a)}WXa.X=1;function XXa(){}XXa.X=1;function YXa(a,d,e,f,g,h,i,j,l){aX(a,e,f,g);c[a]=uZ+2;c[a+2]=h;c[a+3]=i;c[a+4]=0;c[a+5]=d;c[a+6]=0;c[a+7]=j;c[a+8]=l}YXa.X=1;function ZXa(a){$Xa(a);xe(a)}ZXa.X=1;function $Xa(a){c[a]=uZ+2;if(c[a+4]&1&&0!=(c[a+5]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+5])}}$Xa.X=1;function aYa(a,d,e,f){var g=b;b+=194;var h=g+16,i=g+60,j=g+73,l=g+99,m=g+190;$3=e;$4=f;eQ(g);fY(h);k[h+41]=k[a+50];hW(i,k[a+49]);sZ(j,d,d+4,d+8);gY(l);hY(m,i,j,l);iY(m,a+1,a+17,g,g,h)&&k[a+50]>k[h+41]&&(k[a+50]=k[h+41]);EX(j);b=g}aYa.X=1;function bYa(a){EX(a);yh(a)}bYa.X=1;function cYa(a){return k[a+14]}cYa.X=1;function dYa(a,d,e,f,g,h,i,j,l,m,n){var p=b;b+=56;var r=p+1,s=p+5,t=p+9,w=p+13,x=p+17,y=p+21,z=p+25,A=p+29,C=p+35,B=p+39,K=p+43,E=p+44,G=p+48,M=p+52;k[p]=h;Jb(r,l,i);h=l+12;c[s]=c[h];k[s]=k[h];c[s+1]=c[h+1];k[s+1]=k[h+1];c[s+2]=c[h+2];k[s+2]=k[h+2];c[s+3]=c[h+3];k[s+3]=k[h+3];Jb(t,m,j);j=m+12;c[w]=c[j];k[w]=k[j];c[w+1]=c[j+1];k[w+1]=k[j+1];c[w+2]=c[j+2];k[w+2]=k[j+2];c[w+3]=c[j+3];k[w+3]=k[j+3];N(x,w,s);eYa(y,z,A,p+33,p+34,x,r,e,t,g);e=JB(y)-f-k[p];e>n||(n=Um(y),1.4210854715202004e-14>=n?rw(r,a,C):(k[K]=-(1/ec(n)),Q(B,y,K),c[a]=c[B],k[a]=k[B],c[a+1]=c[B+1],k[a+1]=k[B+1],c[a+2]=c[B+2],k[a+2]=k[B+2],c[a+3]=c[B+3],k[a+3]=k[B+3]),wn(G,m+12,A),Q(M,a,p),wn(E,G,M),c[d]=c[E],k[d]=k[E],c[d+1]=c[E+1],k[d+1]=k[E+1],c[d+2]=c[E+2],k[d+2]=k[E+2],c[d+3]=c[E+3],k[d+3]=k[E+3]);b=p;return e}dYa.X=1;function fYa(a,d,e,f,g,h,i){gYa(a,d,e,f,g,h&1,i)}fYa.X=1;function hYa(a,d,e,f,g){var h=b;b+=304;var i,j,l;i=h+4;var m=h+8,n=h+12,p=h+16,r=h+50,s=h+69,t,w,x=h+70,y,z=h+74,A=h+78,C=h+82,B=h+87,K=h+91,E=h+95,G=h+99,M=h+103,L=h+107,F=h+111,I=h+115,R=h+116,O=h+132,Z=h+136,P=h+137,S=h+141,da=h+153,V=h+165,ba=h+169,$=h+173,Y=h+177,la=h+189,ka=h+201,ja=h+205,ea=h+209,ca=h+213;0==(c[a+5]|0)&&(j=c[a+1],c[a+5]=v[c[c[j]+3]](j,d,e),c[a+4]=1);fI(g,c[a+5]);j=bi(d);l=bi(e);if(10==(Ie(j)|0)){if(10!=(Ie(l)|0)){i=9}else{t=v[c[c[j]+7]](j);c[m]=c[t];k[m]=k[t];c[m+1]=c[t+1];k[m+1]=k[t+1];c[m+2]=c[t+2];k[m+2]=k[t+2];c[m+3]=c[t+3];k[m+3]=k[t+3];m=v[c[c[l]+7]](l);c[n]=c[m];k[n]=k[m];c[n+1]=c[m+1];k[n+1]=k[m+1];c[n+2]=c[m+2];k[n+2]=k[m+2];c[n+3]=c[m+3];k[n+3]=k[m+3];n=rk(c[a+5]);m=dYa(h,i,gf(j),cf(j),gf(l),cf(l),Ke(j),Ke(l),d+1,e+1,n);if(m<n){v[c[c[g]+4]](g,h,i,m)}DI(g);i=72}}else{i=9}do{if(9==i){QQ(p);kZ(r,j,l,c[a+2],c[a+3]);NWa(r,j);OWa(r,l);i=j;i=v[c[c[i]+11]](i);n=l;i+=v[c[c[n]+11]](n);k[p+32]=i+rk(c[a+5]);i=p+32;k[i]*=k[p+32];c[p+33]=c[f+12];xi(p,d+1);xi(p+16,e+1);m=Ye(j);do{if(m){if(Ye(l)){iYa(s);n=j;t=l;if(0!=(yg(n)|0)){if(0==(yg(t)|0)){i=29}else{gZ(r,p,s,c[f+5],0);i=rk(c[a+5]);w=0;y=1;if(c[f+6]&1){y=jYa(yg(n),yg(t),d+1,e+1,x)&1}else{uC(z,r+1);w=x;var W=z;c[w]=c[W];k[w]=k[W];c[w+1]=c[W+1];k[w+1]=k[W+1];c[w+2]=c[W+2];k[w+2]=k[W+2];c[w+3]=c[W+3];k[w+3]=k[W+3];w=cYa(r)}y&1&&kYa(x,yg(n),yg(t),d+1,e+1,w-i,i,g);c[a+4]&1&&DI(g);y=1;i=41}}else{i=29}a:do{if(29==i){y=0!=(yg(n)|0);do{if(y&&1==(Ie(t)|0)){gZ(r,p,s,c[f+5],0);uC(A,r+1);KW(C);i=t;vw(B,e+1,i+14);PW(C,B);vw(K,e+1,i+18);PW(C,K);vw(E,e+1,i+22);PW(C,E);i=rk(c[a+5]);y=cYa(r);lYa(A,yg(n),d+1,C,y-i,i,g);c[a+4]&1&&DI(g);y=1;UW(C);break a}}while(0);y=0}}while(0);i=0==(y|0)?43:69}else{i=43}}else{i=43}}while(0);if(43==i){gZ(r,p,g,c[f+5],0);y=0!=(c[a+7]|0);a:do{if(y&&(Xj(cI(g))|0)<(c[a+8]|0)){uC(F,r+1);n=L;m=F;c[n]=c[m];k[n]=k[m];c[n+1]=c[m+1];k[n+1]=k[m+1];c[n+2]=c[m+2];k[n+2]=k[m+2];c[n+3]=c[m+3];k[n+3]=k[m+3];rw(L,G,M);$angleLimit=.39269909262657166;n=j;n=v[c[c[n]+4]](n);m=l;m=v[c[c[m]+4]](m);t=k[VX];n<m?(m=t/n,k[I]=m,n=1):(m=t/m,k[I]=m,n=0);.39269909262657166<m&&(k[I]=.39269909262657166);n&1?xi(R,p):xi(R,p+16);m=0;t=a+7;w=a+7;for(var W=p,U=p+16,X=p,ma=p+16,ga=ca,ha=p+16;;){if((m|0)>=(c[t]|0)){break a}1.1920928955078125e-7<Um(G)&&(IV(O,G,I),k[Z]=(m|0)*(6.2831854820251465/(c[w]|0)),IV(P,L,Z),n&1?(EV($,P),BW(ba,$,O),BW(V,ba,P),zb(da,V),ww(S,da,d+1),Wb(W,S),xi(U,e+1)):(xi(W,d+1),EV(ea,P),BW(ja,ea,O),BW(ka,ja,P),zb(la,ka),ww(Y,la,e+1),Wb(ha,Y)),fYa(ca,g,X,ma,R,n&1,c[f+5]),gZ(r,p,ga,c[f+5],0));m+=1}}}while(0);y=0}1!=(y|0)&&c[a+4]&1&&DI(g)}}while(0);b=h}hYa.X=1;function mYa(){}mYa.X=1;function nYa(){}nYa.X=1;function oYa(){}oYa.X=1;function pYa(){}pYa.X=1;function qYa(a,d,e,f,g){var h=b;b+=312;var i,j;i=h+4;var l=h+8,m=h+21,n=h+65,p=h+156,r=h+160,s=h+173,t=h+217,w=h+308;$2=a;$5=f;$6=g;a=1;N(h,d+17+12,d+1+12);f=Um(h);N(i,e+17+12,e+1+12);i=Um(i);f<gi(d)?i<gi(e)?(j=a,i=26):i=5:i=5;5==i&&(c[rYa]&1?j=1:(j=bi(d),hW(l,pi(e)),fY(m),gY(n),lZ(p,j,l,n),mZ(p,d+1,d+17,e+1,e+17,m)&&(oi(d)>k[m+41]&&Zh(d,k[m+41]),oi(e)>k[m+41]&&Zh(e,k[m+41]),a>k[m+41]&&(a=k[m+41])),l=bi(e),hW(r,pi(d)),fY(s),gY(t),lZ(w,r,l,t),mZ(w,d+1,d+17,e+1,e+17,s)&&(oi(d)>k[s+41]&&Zh(d,k[s+41]),oi(e)>k[s+41]&&Zh(e,k[s+41]),a>k[s+41]&&(a=k[s+41])),j=a));b=h;return j}qYa.X=1;function sYa(a,d){0!=(c[a+5]|0)&&c[a+4]&1&&CX(d,a+5)}sYa.X=1;function tYa(a,d,e,f){var g=c[d],g=v[c[c[g]+14]](g,36);0==(g|0)?a=0:(YXa(g,c[d+1],d,e,f,c[a+3],c[a+2],c[a+4],c[a+5]),a=g);return a}tYa.X=1;function gYa(a,d,e,f,g,h,i){h&=1;yI(a);c[a]=uYa+2;c[a+40]=d;sQ(a+41,e);sQ(a+57,f);sQ(a+73,g);c[a+89]=h&1;c[a+90]=i}gYa.X=1;function vYa(a){xe(a)}vYa.X=1;function wYa(a,d,e,f){var g=b;b+=118;var h=g+1,i=g+5,j=g+9,l=g+14,m=g+18,n=g+22,p=g+26,r=g+42,s=g+58,t=g+62,w=g+66,x=g+70,y=g+74,z=g+78,A=g+82,C=g+98,B=g+114;k[g]=f;c[a+89]&1?(Q(m,d,g),wn(l,e,m),uw(p,a+41),WW(r,a+73,p),vw(n,r,l),c[h]=c[n],k[h]=k[n],c[h+1]=c[n+1],k[h+1]=k[n+1],c[h+2]=c[n+2],k[h+2]=k[n+2],c[h+3]=c[n+3],k[h+3]=k[n+3],N(s,h,e),k[j]=J(s,d),Q(w,d,j),wn(t,h,w),c[i]=c[t],k[i]=k[t],c[i+1]=c[t+1],k[i+1]=k[t+1],c[i+2]=c[t+2],k[i+2]=k[t+2],c[i+3]=c[t+3],k[i+3]=k[t+3]):(Q(y,d,g),wn(x,e,y),c[h]=c[x],k[h]=k[x],c[h+1]=c[x+1],k[h+1]=k[x+1],c[h+2]=c[x+2],k[h+2]=k[x+2],c[h+3]=c[x+3],k[h+3]=k[x+3],uw(A,a+57),WW(C,a+73,A),vw(z,C,e),c[i]=c[z],k[i]=k[z],c[i+1]=c[z+1],k[i+1]=k[z+1],c[i+2]=c[z+2],k[i+2]=k[z+2],c[i+3]=c[z+3],k[i+3]=k[z+3],N(B,h,i),k[j]=J(B,d));a=c[a+40];v[c[c[a]+4]](a,d,i,k[j]);b=g}wYa.X=1;function xYa(){}xYa.X=1;function iYa(a){FW(a);c[a]=yYa+2}iYa.X=1;function zYa(a){xe(a)}zYa.X=1;function eYa(a,d,e,f,g,h,i,j,l,m){var n=b;b+=16;var p,r,s,t,w=n+4,x=n+8,y=n+12;p=J(i,l);r=J(i,h);s=J(l,h);t=1-p*p;0==t?k[f]=0:(k[f]=(r-s*p)/t,k[f]<-j?k[f]=-j:k[f]>j&&(k[f]=j));k[g]=k[f]*p-s;k[g]<-m?(k[g]=-m,k[f]=k[g]*p+r,k[f]<-j?k[f]=-j:k[f]>j&&(k[f]=j)):k[g]>m&&(k[g]=m,k[f]=k[g]*p+r,k[f]<-j?k[f]=-j:k[f]>j&&(k[f]=j));Q(n,i,f);c[d]=c[n];k[d]=k[n];c[d+1]=c[n+1];k[d+1]=k[n+1];c[d+2]=c[n+2];k[d+2]=k[n+2];c[d+3]=c[n+3];k[d+3]=k[n+3];Q(w,l,g);c[e]=c[w];k[e]=k[w];c[e+1]=c[w+1];k[e+1]=k[w+1];c[e+2]=c[w+2];k[e+2]=k[w+2];c[e+3]=c[w+3];k[e+3]=k[w+3];N(y,h,d);wn(x,y,e);c[a]=c[x];k[a]=k[x];c[a+1]=c[x+1];k[a+1]=k[x+1];c[a+2]=c[x+2];k[a+2]=k[x+2];c[a+3]=c[x+3];k[a+3]=k[x+3];b=n}eYa.X=1;function Ch(a,d,e,f){var g=b;b+=8;var h,i,j=g+4;vZ(a);c[a]=wZ+2;KW(a+23);c[a+1]=4;xZ(a+23,e,g);h=0;var l=(h|0)<(e|0);a:do{if(l){for(var m=a+23,n=j;;){i=d;var p=xg(m,h);H(j,i,i+1,i+2);i=p;c[i]=c[n];k[i]=k[n];c[i+1]=c[n+1];k[i+1]=k[n+1];c[i+2]=c[n+2];k[i+2]=k[n+2];c[i+3]=c[n+3];k[i+3]=k[n+3];d+=f;h+=1;if((h|0)>=(e|0)){break a}}}}while(0);bh(a);b=g}Ch.X=1;function AYa(){return 0}AYa.X=1;function BYa(){}BYa.X=1;function CYa(){return 0}CYa.X=1;function DYa(){return D.re}DYa.X=1;function EYa(){return 68}EYa.X=1;function xZ(a,d,e){var f,g;f=th(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(th(a)|0)&&RW(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=(g<<2)+c[i];if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}xZ.X=1;function FYa(a,d){var e=a+3;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];bh(a)}FYa.X=1;function Vg(a,d){PW(a+23,d);bh(a)}Vg.X=1;function GYa(a,d,e){var f=b;b+=7;var g=f+1,h=f+2,i,j=f+3;k[f]=0;k[g]=0;k[h]=0;H(a,f,g,h);h=-0xde0b6b000000000;i=0;var l=d+23,m=(i|0)<(th(l)|0);a:do{if(m){for(var n=d+23,p=d+3,r=a,s=j;;){if(ig(j,jg(n,i),p),g=J(e,j),g>h&&(h=g,c[r]=c[s],k[r]=k[s],c[r+1]=c[s+1],k[r+1]=k[s+1],c[r+2]=c[s+2],k[r+2]=k[s+2],c[r+3]=c[s+3],k[r+3]=k[s+3]),i+=1,(i|0)>=(th(l)|0)){break a}}}}while(0);b=f}GYa.X=1;function HYa(a,d,e,f){var g=b;b+=4;var h,i,j;h=0;i=(h|0)<(f|0);a:do{if(i){for(;;){if(k[(h<<2)+e+3]=-0xde0b6b000000000,h+=1,(h|0)>=(f|0)){break a}}}}while(0);i=0;var l=a+23,m=(i|0)<(th(l)|0);a:do{if(m){for(var n=g;;){gg(g,a,i);j=0;var p=(j|0)<(f|0);b:do{if(p){for(;;){h=J((j<<2)+d,g);if(h>k[(j<<2)+e+3]){var r=(j<<2)+e;c[r]=c[n];k[r]=k[n];c[r+1]=c[n+1];k[r+1]=k[n+1];c[r+2]=c[n+2];k[r+2]=k[n+2];c[r+3]=c[n+3];k[r+3]=k[n+3];k[(j<<2)+e+3]=h}j+=1;if((j|0)>=(f|0)){break b}}}}while(0);i+=1;if((i|0)>=(th(l)|0)){break a}}}}while(0);b=g}HYa.X=1;function IYa(a,d,e){var f=b;b+=12;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+11;v[c[c[d]+16]](a,d,e);0!=v[c[c[d]+11]](d)&&(c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3],1.4210854715202004e-14>Um(f)&&(k[g]=-1,k[h]=-1,k[i]=-1,pe(f,g,h,i)),IB(f),k[l]=v[c[c[d]+11]](d),Q(j,f,l),xn(a,j));b=f}IYa.X=1;function JYa(a){return th(a+23)}JYa.X=1;function KYa(a){return th(a+23)}KYa.X=1;function LYa(a,d,e,f){var g=b;b+=8;var h,i=g+4;h=(d|0)%(th(a+23)|0);d=(d+1|0)%(th(a+23)|0);gg(g,a,h);c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];gg(i,a,d);c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];c[f+2]=c[i+2];k[f+2]=k[i+2];c[f+3]=c[i+3];k[f+3]=k[i+3];b=g}LYa.X=1;function MYa(a,d,e){var f=b;b+=4;gg(f,a,d);c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];b=f}MYa.X=1;function NYa(a,d,e){var f,g,h;GX(a,d,e);f=th(a+23);c[d+18]=f;g=0!=(f|0)?v[c[c[e]+7]](e,jg(a+23,0)):0;c[d+16]=g;c[d+17]=0;if(0!=(f|0)){d=v[c[c[e]+4]](e,16,f);g=c[d+2];h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=a+23;;){if(Mb(jg(j,h),g),h+=1,g+=4,(h|0)>=(f|0)){break a}}}}while(0);v[c[c[e]+5]](e,d,D.q,1497453121,jg(a+23,0))}return D.Rd}NYa.X=1;function OYa(a){PYa(a)}OYa.X=1;function yW(a){var d=b;b+=3;var e=d+1,f=d+2;nZ(a);c[a]=QYa+2;k[d]=1;k[e]=1;k[f]=1;H(a+3,d,e,f);k[a+11]=.03999999910593033;b=d}yW.X=1;function FX(a,d){var e=b;b+=4;var f=a+3;GB(e,d);c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];b=e}FX.X=1;function RYa(a,d,e,f){var g=b;b+=31;var h,i,j=g+4,l=g+5,m=g+6,n=g+7,p=g+11,r=g+15,s=g+19,t=g+23,w=g+27;h=v[c[c[a]+11]](a);for(i=0;;){k[j]=0;k[l]=0;k[m]=0;H(g,j,l,m);k[g+i]=1;var x=c[c[a]+15];rn(p,g,d);v[x](n,a,p);vw(r,d,n);k[f+i]=k[r+i]+h;k[g+i]=-1;x=c[c[a]+15];rn(w,g,d);v[x](t,a,w);vw(s,d,t);c[r]=c[s];k[r]=k[s];c[r+1]=c[s+1];k[r+1]=k[s+1];c[r+2]=c[s+2];k[r+2]=k[s+2];c[r+3]=c[s+3];k[r+3]=k[s+3];k[e+i]=k[r+i]-h;i=x=i+1;if(3<=(x|0)){break}}b=g}RYa.X=1;function SYa(a,d,e){var f=b;b+=12;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+11;v[c[c[d]+16]](a,d,e);0!=v[c[c[d]+11]](d)&&(c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3],1.4210854715202004e-14>Um(f)&&(k[g]=-1,k[h]=-1,k[i]=-1,pe(f,g,h,i)),IB(f),k[l]=v[c[c[d]+11]](d),Q(j,f,l),xn(a,j));b=f}SYa.X=1;function TYa(a){var d=b;b+=6;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5;yW(a);c[a]=UYa+2;k[d]=1;k[e]=1;k[f]=1;H(a+13,d,e,f);k[g]=-1;k[h]=-1;k[i]=-1;H(a+17,g,h,i);c[a+21]=0;b=d}TYa.X=1;function VYa(a,d,e,f){WYa(a,d,e,f,v[c[c[a]+11]](a))}VYa.X=1;function WYa(a,d,e,f,g){fh(a+13,a+17,g,d,e,f)}WYa.X=1;function XYa(a){PYa(a);yh(a)}XYa.X=1;function PYa(a){c[a]=wZ+2;UW(a+23);EX(a)}PYa.X=1;function YYa(){return 1}YYa.X=1;function ZYa(a,d){FX(a,d);cJ(a)}ZYa.X=1;function cJ(a){var d=b;b+=60;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5,j=d+6,l=d+7,m=d+8,n=d+9,p=d+10,r=d+11,s=d+12,t=d+13,w=d+14,x=d+15,y=d+16,z=d+17,A=d+18,C=d+42,B=d+43,K=d+44,E=d+45,G=d+46,M=d+47,L=d+48,F=d+49,I=d+50,R=d+51,O=d+52,Z=d+53,P=d+54,S=d+55,da=d+56,V=d+57,ba=d+58,$=d+59;c[a+21]=1;0==c[$Ya]<<24>>24&&0!=(Hb($Ya)|0)&&(k[d]=1,k[e]=0,k[f]=0,H(yZ,d,e,f),k[g]=0,k[h]=1,k[i]=0,H(yZ+4,g,h,i),k[j]=0,k[l]=0,k[m]=1,H(yZ+8,j,l,m),k[n]=-1,k[p]=0,k[r]=0,H(yZ+12,n,p,r),k[s]=0,k[t]=-1,k[w]=0,H(yZ+16,s,t,w),k[x]=0,k[y]=0,k[z]=-1,H(yZ+20,x,y,z));k[C]=0;k[B]=0;k[K]=0;H(A,C,B,K);e=A+4;k[E]=0;k[G]=0;k[M]=0;H(e,E,G,M);E=e+4;k[L]=0;k[F]=0;k[I]=0;H(E,L,F,I);L=E+4;k[R]=0;k[O]=0;k[Z]=0;H(L,R,O,Z);R=L+4;k[P]=0;k[S]=0;k[da]=0;H(R,P,S,da);k[V]=0;k[ba]=0;k[$]=0;H(R+4,V,ba,$);v[c[c[a]+17]](a,yZ,A,6);P=0;S=a+11;da=a+17;V=a+11;for(a+=13;!(k[da+P]=k[(P<<2)+A+P]+k[S],k[a+P]=k[(P+3<<2)+A+P]-k[V],P=ba=P+1,3<=(ba|0));){}b=d}cJ.X=1;function aZa(){}aZa.X=1;function bZa(a){yh(a)}bZa.X=1;function cZa(){}cZa.X=1;function dZa(a){yh(a)}dZa.X=1;function zZ(a,d,e,f,g,h,i,j){h&=1;ZW(a,e);c[a]=AZ+2;c[a+2]=0;c[a+3]=d;c[a+4]=h&1;c[a+5]=i;c[a+6]=j;d=c[a+4]&1?g:f;f=c[a+4]&1?f:g;0==(c[a+3]|0)&&(g=c[a+1],v[c[c[g]+6]](g,d,f)&&(g=c[a+1],c[a+3]=v[c[c[g]+3]](g,d,f),c[a+2]=1))}zZ.X=1;function eZa(a){fZa(a);xe(a)}eZa.X=1;function fZa(a){c[a]=AZ+2;if(c[a+2]&1&&0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3])}}fZa.X=1;function gZa(a,d,e,f,g,h){var i=b;b+=161;var j,l,m;m=i+16;var n=i+32,p=i+48,r=i+64,s=i+76,t=i+92,w=i+108,x=i+124,y=i+128,z=i+132,A=i+136,C=i+140,B=i+141,K=i+145,E=i+149,G=i+153,M=i+157;$5=g;g=c[a+4]&1?f:e;e=c[a+4]&1?e:f;j=bi(g);l=bi(e);f=l+12;l+=16;sQ(i,g+1);uw(p,e+1);WW(n,p,i);xi(m,n);zb(r,d);ld(i,r);uw(w,i);WW(t,w,e+1);xi(s,t);d=c[c[j]+15];WP(z,f);Bo(y,s,z);v[d](x,j,y);vw(A,m,x);k[C]=J(f,A)-k[l];Q(K,f,C);N(B,A,K);vw(E,e+1,B);m=k[C]<rk(c[a+3])&1;fI(h,c[a+3]);m&1&&(Bo(G,e+1,f),c[M]=c[E],k[M]=k[E],c[M+1]=c[E+1],k[M+1]=k[E+1],c[M+2]=c[E+2],k[M+2]=k[E+2],c[M+3]=c[E+3],k[M+3]=k[E+3],v[c[c[h]+4]](h,G,M,k[C]));b=i}gZa.X=1;function hZa(a,d,e,f,g){var h=b;b+=38;var i,j,l=h+4,m=h+5,n=h+6,p=h+7,r=h+8,s=h+12,t=h+16,w,x=h+17,y=h+21,z=h+22,A=h+26,C=h+30,B=h+34,K=0!=(c[a+3]|0);do{if(K){i=c[a+4]&1?d:e;j=bi(c[a+4]&1?e:d);i=bi(i)+12;k[l]=0;k[m]=0;k[n]=0;k[p]=1;NG(h,l,m,n,p);gZa(a,h,d,e,f,g);var E=(Xj(cI(g))|0)<(c[a+6]|0);a:do{if(E){rw(i,r,s);$angleLimit=.39269909262657166;w=j;w=v[c[c[w]+4]](w);k[t]=k[VX]/w;.39269909262657166<k[t]&&(k[t]=.39269909262657166);IV(x,r,t);w=0;var G=a+5;if((w|0)<(c[G]|0)){for(var M=a+5;;){if(k[y]=(w|0)*(6.2831854820251465/(c[M]|0)),IV(z,i,y),EV(B,z),BW(C,B,x),BW(A,C,z),gZa(a,A,d,e,f,g),w+=1,(w|0)>=(c[G]|0)){break a}}}}}while(0);c[a+2]&1&&0!=(Xj(c[a+3])|0)&&DI(g)}}while(0);b=h}hZa.X=1;function iZa(a,d){0!=(c[a+3]|0)&&c[a+2]&1&&CX(d,a+3)}iZa.X=1;function jZa(a,d){var e=a+3;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];bh(a)}jZa.X=1;function kZa(a,d,e){var f=b;b+=15;var g=f+1,h=f+2,i,j=f+3;i=f+7;var l=f+8,m=f+9,n=f+10,p=f+11;k[f]=0;k[g]=0;k[h]=0;H(a,f,g,h);g=-0xde0b6b000000000;c[j]=c[e];k[j]=k[e];c[j+1]=c[e+1];k[j+1]=k[e+1];c[j+2]=c[e+2];k[j+2]=k[e+2];c[j+3]=c[e+3];k[j+3]=k[e+3];e=Um(j);9999999747378752e-20>e?(k[i]=1,k[l]=0,k[m]=0,pe(j,i,l,m)):(k[n]=1/ec(e),LC(j,n));l=0;m=d+24;n=(l|0)<(c[m]|0);a:do{if(n){e=a;for(h=p;;){if(lZa(p,d,l),i=J(j,p),i>g&&(g=i,c[e]=c[h],k[e]=k[h],c[e+1]=c[h+1],k[e+1]=k[h+1],c[e+2]=c[h+2],k[e+2]=k[h+2],c[e+3]=c[h+3],k[e+3]=k[h+3]),l+=1,(l|0)>=(c[m]|0)){break a}}}}while(0);b=f}kZa.X=1;function lZa(a,d,e){ig(a,(e<<2)+c[d+23],d+3)}lZa.X=1;function mZa(){return 0}mZa.X=1;function nZa(){}nZa.X=1;function oZa(){return 0}oZa.X=1;function pZa(){}pZa.X=1;function qZa(){return 0}qZa.X=1;function rZa(){return D.Td}rZa.X=1;function sZa(a){return c[a+24]}sZa.X=1;function BZ(a,d){return c[a+3]+14*d}BZ.X=1;function tZa(a,d,e,f){var g=b;b+=4;var h,i,j;h=0;i=(h|0)<(f|0);a:do{if(i){for(;;){if(k[(h<<2)+e+3]=-0xde0b6b000000000,h+=1,(h|0)>=(f|0)){break a}}}}while(0);i=0;var l=a+24,m=(i|0)<(c[l]|0);a:do{if(m){for(var n=g;;){lZa(g,a,i);j=0;var p=(j|0)<(f|0);b:do{if(p){for(;;){h=J((j<<2)+d,g);if(h>k[(j<<2)+e+3]){var r=(j<<2)+e;c[r]=c[n];k[r]=k[n];c[r+1]=c[n+1];k[r+1]=k[n+1];c[r+2]=c[n+2];k[r+2]=k[n+2];c[r+3]=c[n+3];k[r+3]=k[n+3];k[(j<<2)+e+3]=h}j+=1;if((j|0)>=(f|0)){break b}}}}while(0);i+=1;if((i|0)>=(c[l]|0)){break a}}}}while(0);b=g}tZa.X=1;function uZa(a,d,e){var f=b;b+=12;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+11;v[c[c[d]+16]](a,d,e);0!=v[c[c[d]+11]](d)&&(c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3],1.4210854715202004e-14>Um(f)&&(k[g]=-1,k[h]=-1,k[i]=-1,pe(f,g,h,i)),IB(f),k[l]=v[c[c[d]+11]](d),Q(j,f,l),xn(a,j));b=f}uZa.X=1;function vZa(a,d,e){var f=b;b+=4;ig(f,(d<<2)+c[a+23],a+3);c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];b=f}vZa.X=1;function wZa(a){EX(a)}wZa.X=1;function xZa(a){c[a]=CZ+2;KW(a+1);yZa(a+6);KW(a+11)}xZa.X=1;function zZa(a){AZa(a);xe(a)}zZa.X=1;function BZa(a,d){var e;e=CZa(a,d);return-1==(e|0)?0:DZa(a+10,e)}BZa.X=1;function DZ(a){var d;1e-6<sc(k[a])?a=5:1e-6<sc(k[a+1])?a=5:1e-6<sc(k[a+2])?a=5:(d=1,a=7);5==a&&(d=0);return d}DZ.X=1;function EZa(a){EX(a);yh(a)}EZa.X=1;function AZa(a){c[a]=CZ+2;UW(a+11);FZa(a+6);UW(a+1)}AZa.X=1;function GZa(a){var d=b;b+=73;var e=d+20,f=d+21,g=d+22,h=d+23,i,j=d+24,l,m=d+26,n,p,r=d+30,s=d+34,t=d+38,w=d+40,x=d+41,y=d+43,z=d+44,A=d+48,C=d+52,B=d+56,K=d+60,E=d+64,G=d+68,M=d+69;HZa(d);k[e]=0;k[f]=0;k[g]=0;k[h]=0;pe(a+16,f,g,h);for(var f=0,L=a+6,F=a+6,I=a+6,R=a+6,O=a+1,Z=j+1,P=a+1,S=a+11,da=a+11,V=a+11,ba=a+11;(f|0)<(yY(L)|0);){h=g=rW(BZ(F,f));for(i=0;(i|0)<(h|0);){IZa(j,c[QV(BZ(I,f),i)]&65535,c[QV(BZ(R,f),(i+1|0)%(g|0))]&65535);l=BZa(d,j);N(m,xg(O,c[Z]<<16>>16),xg(P,c[j]<<16>>16));IB(m);p=n=0;a:for(;(p|0)<(th(S)|0);){N(r,xg(da,p),m);var $=DZ(r);do{if(!$&&(wn(s,xg(V,p),m),!DZ(s))){p+=1;continue a}}while(0);n=1;break}n&1||PW(ba,m);0!=(l|0)?c[l+1]=f&65535:(JZa(t),c[t]=f&65535,KZa(d,j,t));i+=1}f+=1}j=0;r=a+6;s=a+6;t=a+6;f=a+6;g=a+6;for(h=a+6;(j|0)<(yY(r)|0);){m=rW(BZ(s,j));i=BZ(t,j)+5;c[w]=0;PV(i,m,w);i=0;n=(i|0)<(m|0);a:do{if(n){for(;;){if(IZa(x,c[QV(BZ(f,j),i)]&65535,c[QV(BZ(g,j),(i+1|0)%(m|0))]&65535),p=l=BZa(d,x),c[QV(BZ(h,j)+5,i)]=((c[l]<<16>>16|0)==(j|0)?c[p+1]:c[p])<<16>>16,i+=1,(i|0)>=(m|0)){break a}}}}while(0);j+=1}w=0;f=a+6;g=(w|0)<(yY(f)|0);a:do{if(g){h=a+6;i=a+1;l=a+6;n=a+1;p=a+6;L=a+1;F=a+6;for(I=a+16;;){x=rW(BZ(h,w));j=x-2;m=xg(i,c[QV(BZ(l,w),0)]);r=1;R=(r|0)<=(j|0);b:do{if(R){for(;;){if(s=xg(n,c[QV(BZ(p,w),r)]),t=xg(L,c[QV(BZ(F,w),(r+1|0)%(x|0))]),N(z,m,s),N(A,m,t),qn(C,z,A),k[y]=.5*JB(C),wn(E,m,s),wn(K,E,t),k[G]=3,wC(B,K,G),Q(M,B,y),xn(I,M),k[e]+=k[y],r+=1,!((r|0)<=(j|0))){break b}}}}while(0);w+=1;if((w|0)>=(yY(f)|0)){break a}}}}while(0);KB(a+16,e);LZa(d);b=d}GZa.X=1;function MZa(a,d){$1=a;return 0!=(d|0)?d<<1:1}MZa.X=1;function NZa(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}NZa.X=1;function OZa(a,d){$1=a;return 0!=(d|0)?d<<1:1}OZa.X=1;function EZ(a){return(c[a]<<16>>16)+(c[a+1]<<16>>16<<16)}EZ.X=1;function FZ(a){return c[a+2]}FZ.X=1;function DZa(a,d){return(d<<1)+c[a+3]}DZa.X=1;function GZ(a){return c[a+1]}GZ.X=1;function PZa(a,d){return(d<<1)+c[a+3]}PZa.X=1;function HZ(a){return c[a+1]}HZ.X=1;function QZa(a){return c[a+2]}QZa.X=1;function KZa(a,d,e){var f,g,h;f=FZ(a+10)-1&EZ(d);g=CZa(a,d);h=a+10;-1!=(g|0)?(a=DZa(h,g),c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1]):(g=GZ(h),h=FZ(a+10),RZa(a+10,e),SZa(a+15,d),(h|0)<(FZ(a+10)|0)&&(TZa(a,d),f=FZ(a+10)-1&EZ(d)),c[QV(a+5,g)]=c[QV(a,f)],c[QV(a,f)]=g)}KZa.X=1;function UZa(a,d,e,f,g){var h=b;b+=4;var i,j,l;k[f]=3.4028234663852886e+38;k[g]=-3.4028234663852886e+38;i=th(a+1);j=0;var m=(j|0)<(i|0);a:do{if(m){for(var n=a+1;;){if(vw(h,d,jg(n,j)),l=J(h,e),l<k[f]&&(k[f]=l),l>k[g]&&(k[g]=l),j+=1,(j|0)>=(i|0)){break a}}}}while(0);k[f]>k[g]&&(a=k[f],k[f]=k[g],k[g]=a);b=h}UZa.X=1;function CZa(a,d){var e;e=FZ(a+10)-1&EZ(d);if(e>>>0>=rW(a)>>>0){e=-1}else{var f=c[sW(a,e)];e=f;for(var g=a+15,h=a+5;-1!=(f|0)&&0==(VZa(d,WZa(g,e))&1|0);){e=f=c[sW(h,e)]}}return e}CZa.X=1;function RZa(a,d){(GZ(a)|0)==(FZ(a)|0)&&XZa(a,OZa(a,GZ(a)));var e=(c[a+1]<<1)+c[a+3];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1]);e=a+1;c[e]+=1}RZa.X=1;function SZa(a,d){(HZ(a)|0)==(QZa(a)|0)&&YZa(a,MZa(a,HZ(a)));var e=(c[a+1]<<1)+c[a+3];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1]);e=a+1;c[e]+=1}SZa.X=1;function TZa(a,d){var e=b;b+=2;var f,g,h=e+1,i,j;$3=d;f=FZ(a+10);var l=(rW(a)|0)<(f|0);a:do{if(l){g=rW(a);c[e]=0;PV(a,f,e);c[h]=0;PV(a+5,f,h);i=0;j=(i|0)<(f|0);b:do{if(j){for(var m=a;;){if(c[QV(m,i)]=-1,i+=1,(i|0)>=(f|0)){break b}}}}while(0);i=0;j=(i|0)<(f|0);b:do{if(j){for(m=a+5;;){if(c[QV(m,i)]=-1,i+=1,(i|0)>=(f|0)){break b}}}}while(0);i=0;if((i|0)<(g|0)){for(var m=a+15,n=a+10,p=a,r=a+5,s=a;;){if(j=FZ(n)-1&EZ(PZa(m,i)),c[QV(r,i)]=c[QV(p,j)],c[QV(s,j)]=i,i+=1,(i|0)>=(g|0)){break a}}}}}while(0);b=e}TZa.X=1;function YZa(a,d){var e;(QZa(a)|0)<(d|0)&&(e=ZZa(a,d),$Za(a,0,HZ(a),e),NZa(a,0,HZ(a)),a_a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}YZa.X=1;function ZZa(a,d){return 0!=(d|0)?b_a(a,d,0):0}ZZa.X=1;function $Za(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;if(0!=(i|0)){var j=(d<<1)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}$Za.X=1;function a_a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&c_a(a,c[a+3]),c[a+3]=0)}a_a.X=1;function c_a(a,d){$1=a;yh(d)}c_a.X=1;function b_a(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}b_a.X=1;function XZa(a,d){var e;(FZ(a)|0)<(d|0)&&(e=d_a(a,d),e_a(a,0,GZ(a),e),f_a(a,0,GZ(a)),g_a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}XZa.X=1;function d_a(a,d){return 0!=(d|0)?h_a(a,d,0):0}d_a.X=1;function e_a(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;if(0!=(i|0)){var j=(d<<1)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}e_a.X=1;function i_a(a,d){var e;e=c[a];c[a]=c[d];c[d]=e}i_a.X=1;function f_a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}f_a.X=1;function VZa(a,d){return(c[a]<<16>>16|0)==(c[d]<<16>>16|0)?(c[a+1]<<16>>16|0)==(c[d+1]<<16>>16|0):0}VZa.X=1;function WZa(a,d){return(d<<1)+c[a+3]}WZa.X=1;function yZa(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}yZa.X=1;function j_a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}j_a.X=1;function k_a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}k_a.X=1;function JZa(a){c[a]=-1;c[a+1]=-1}JZa.X=1;function g_a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&l_a(a,c[a+3]),c[a+3]=0)}g_a.X=1;function l_a(a,d){$1=a;yh(d)}l_a.X=1;function h_a(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}h_a.X=1;function FZa(a){m_a(a,0,yY(a));n_a(a);yZa(a)}FZa.X=1;function m_a(a,d,e){var f=(d|0)<(e|0);a:do{if(f){for(var g=a+3;;){if(IZ(c[g]+14*d),d+=1,(d|0)>=(e|0)){break a}}}}while(0)}m_a.X=1;function n_a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&o_a(a,c[a+3]),c[a+3]=0)}n_a.X=1;function o_a(a,d){$1=a;yh(d)}o_a.X=1;function p_a(a){f_a(a,0,GZ(a));g_a(a);j_a(a)}p_a.X=1;function q_a(a){NZa(a,0,HZ(a));a_a(a);k_a(a)}q_a.X=1;function IZa(a,d,e){c[a]=d;c[a+1]=e;(c[a+1]<<16>>16|0)>(c[a]<<16>>16|0)&&i_a(a,a+1)}IZa.X=1;function HZa(a){vW(a);vW(a+5);j_a(a+10);k_a(a+15)}HZa.X=1;function nZ(a){UY(a);c[a]=r_a+2}nZ.X=1;function s_a(a){yh(a)}s_a.X=1;function t_a(){}t_a.X=1;function IZ(a){wW(a+5);wW(a)}IZ.X=1;function LZa(a){q_a(a+15);p_a(a+10);wW(a+5);wW(a)}LZa.X=1;function u_a(a){return c[a+23]}u_a.X=1;function v_a(a){return c[a+24]}v_a.X=1;function kf(a,d,e){var f=b;b+=113;var g=f+1,h=f+2,i,j=f+3,l=f+4,m=f+5,n=f+6,p=f+10,r=f+14,s=f+15,t=f+16,w=f+17,x=f+21;i=f+25;var y,z,A,C,B=f+29,K=f+33;z=f+37;A=f+38;var E=f+42,G=f+43,M=f+44;C=f+45;var L=f+49,F=f+50,I=f+51,R=f+52;y=f+53;var O=f+57,Z=f+61,P=f+62,S=f+63,da=f+64,V=f+68,ba=f+72,$=f+76,Y=f+80,la=f+84,ka=f+85,ja=f+89,ea=f+90,ca=f+91,W=f+92,U=f+96,X=f+100,ma=f+104,ga=f+108,ha=f+112,ta=c[d+1];if(8==(ta|0)){k[f]=0,k[g]=0,k[h]=0,H(a,f,g,h)}else{if(0==(ta|0)){i=d+7,k[j]=0<=k[e]?k[i]:-k[i],k[l]=0<=k[e+1]?k[i+1]:-k[i+1],k[m]=0<=k[e+2]?k[i+2]:-k[i+2],H(a,j,l,m)}else{if(1==(ta|0)){H(n,e,e+1,e+2),i=d+14,k[r]=J(n,i),k[s]=J(n,i+4),k[t]=J(n,i+8),H(p,r,s,t),i=(fC(p)<<2)+i,c[w]=c[i],k[w]=k[i],c[w+1]=c[i+1],k[w+1]=k[i+1],c[w+2]=c[i+2],k[w+2]=k[i+2],c[w+3]=c[i+3],k[w+3]=k[i+3],H(a,w,w+1,w+2)}else{if(13==(ta|0)){z=d+7,c[x]=c[z],k[x]=k[z],c[x+1]=c[z+1],k[x+1]=k[z+1],c[x+2]=c[z+2],k[x+2]=k[z+2],c[x+3]=c[z+3],k[x+3]=k[z+3],H(i,e,e+1,e+2),y=dF(d),d=1,z=0,A=2,0==(y|0)?(d=1,z=0,A=2):1==(y|0)?(d=0,z=1,A=2):2==(y|0)&&(d=0,z=2,A=1),C=k[x+d],x=k[x+y],y=ec(k[i+d]*k[i+d]+k[i+A]*k[i+A]),0!=y?(C/=y,k[B+d]=k[i+d]*C,k[B+z]=0>k[i+z]?-x:x,k[B+A]=k[i+A]*C):(k[B+d]=C,k[B+z]=0>k[i+z]?-x:x,k[B+A]=0),H(a,B,B+1,B+2)}else{if(10==(ta|0)){H(K,e,e+1,e+2),i=gf(d),B=Ke(d),k[z]=cf(d),k[E]=0,k[G]=0,k[M]=0,H(A,E,G,M),x=-0xde0b6b000000000,c[C]=c[K],k[C]=k[K],c[C+1]=c[K+1],k[C+1]=k[K+1],c[C+2]=c[K+2],k[C+2]=k[K+2],c[C+3]=c[K+3],k[C+3]=k[K+3],e=Um(C),9999999747378752e-20>e?(k[L]=1,k[F]=0,k[I]=0,pe(C,L,F,I)):(k[R]=1/ec(e),LC(C,R)),k[Z]=0,k[P]=0,k[S]=0,H(O,Z,P,S),k[O+B]=i,ig($,C,d+3),Q(ba,$,z),wn(V,O,ba),k[la]=Le(d),Q(Y,C,la),N(da,V,Y),c[y]=c[da],k[y]=k[da],c[y+1]=c[da+1],k[y+1]=k[da+1],c[y+2]=c[da+2],k[y+2]=k[da+2],c[y+3]=c[da+3],k[y+3]=k[da+3],e=J(C,y),e>x&&(x=e,c[A]=c[y],k[A]=k[y],c[A+1]=c[y+1],k[A+1]=k[y+1],c[A+2]=c[y+2],k[A+2]=k[y+2],c[A+3]=c[y+3],k[A+3]=k[y+3]),k[ja]=0,k[ea]=0,k[ca]=0,H(ka,ja,ea,ca),k[ka+B]=-i,ig(ma,C,d+3),Q(X,ma,z),wn(U,ka,X),k[ha]=Le(d),Q(ga,C,ha),N(W,U,ga),c[y]=c[W],k[y]=k[W],c[y+1]=c[W+1],k[y+1]=k[W+1],c[y+2]=c[W+2],k[y+2]=k[W+2],c[y+3]=c[W+3],k[y+3]=k[W+3],e=J(C,y),e>x&&(c[A]=c[y],k[A]=k[y],c[A+1]=c[y+1],k[A+1]=k[y+1],c[A+2]=c[y+2],k[A+2]=k[y+2],c[A+3]=c[y+3],k[A+3]=k[y+3]),H(a,A,A+1,A+2)}else{if(5==(ta|0)){i=u_a(d),w_a(a,e,i,v_a(d),d+3)}else{if(4==(ta|0)){i=wg(d),w_a(a,e,i,sh(d),d+3)}else{v[c[c[d]+16]](a,d,e)}}}}}}}b=f}kf.X=1;function w_a(a,d,e,f,g){var h=b;b+=4;var i,j,l;ig(h,d,g);i=-0xde0b6b000000000;j=-1;l=0;var m=(l|0)<(f|0);a:do{if(m){for(;;){if(d=J(h,(l<<2)+e),d>i&&(i=d,j=l),l+=1,(l|0)>=(f|0)){break a}}}}while(0);ig(a,(j<<2)+e,g);b=h}w_a.X=1;function tf(a,d,e){var f=b;b+=16;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+11,m=f+15;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];1.4210854715202004e-14>Um(f)&&(k[g]=-1,k[h]=-1,k[i]=-1,pe(f,g,h,i));IB(f);kf(j,d,f);k[m]=Mf(d);Q(l,f,m);wn(a,j,l);b=f}tf.X=1;function Mf(a){var d=c[a+1];return 8==(d|0)?dW(a):0==(d|0)?Le(a):1==(d|0)?Le(a):13==(d|0)?Le(a):10==(d|0)?Le(a):5==(d|0)||4==(d|0)?Le(a):v[c[c[a]+11]](a)}Mf.X=1;function x_a(){return 0}x_a.X=1;function y_a(){return 0}y_a.X=1;function z_a(){}z_a.X=1;function A_a(){}A_a.X=1;function B_a(){return 0}B_a.X=1;function C_a(){}C_a.X=1;function D_a(){return 0}D_a.X=1;function E_a(){return D.Wd}E_a.X=1;function df(a,d,e,f){var g=b;b+=129;var h,i=g+1,j=g+5,l=g+9,m,n=g+13,p=g+14,r=g+18,s=g+22,t=g+34,w=g+38,x=g+42,y=g+43,z=g+44,A=g+45,C=g+49,B=g+53,K=g+57,E=g+58,G=g+59,M=g+60,L=g+64,F=g+68,I=g+72,R=g+76,O=g+80,Z=g+84,P=g+88,S=g+89,da=g+90,V=g+91,ba=g+95,$=g+96,Y=g+97,la=g+98,ka=g+110,ja=g+114,ea=g+118,ca=g+119,W=g+120,U=g+121,X=g+125,ma=c[a+1];a:do{if(8==(ma|0)){h=a;k[g]=k[h+7]+Mf(h);h=d+12;H(i,g,g,g);N(j,h,i);m=e;var ga=j;c[m]=c[ga];k[m]=k[ga];c[m+1]=c[ga+1];k[m+1]=k[ga+1];c[m+2]=c[ga+2];k[m+2]=k[ga+2];c[m+3]=c[ga+3];k[m+3]=k[ga+3];wn(l,h,i);h=f;m=l;c[h]=c[m];k[h]=k[m];c[h+1]=c[m+1];k[h+1]=k[m+1];c[h+2]=c[m+2];k[h+2]=k[m+2];c[h+3]=c[m+3];k[h+3]=k[m+3]}else{if(13==(ma|0)||0==(ma|0)){m=a,k[n]=Mf(m),h=p,m+=7,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3],H(r,n,n,n),xn(p,r),qc(s,d),h=t,m=d+12,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3],k[x]=J(0+s,p),k[y]=J(4+s,p),k[z]=J(8+s,p),H(w,x,y,z),N(A,t,w),h=e,m=A,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3],wn(C,t,w),h=f,m=C,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3]}else{if(1==(ma|0)){h=Mf(a);m=0;for(var ga=F,ha=I;;){k[K]=0;k[E]=0;k[G]=0;H(B,K,E,G);k[B+m]=1;rn(L,B,d);kf(M,a,L);vw(F,d,M);k[f+m]=k[F+m]+h;k[B+m]=-1;rn(O,B,d);kf(R,a,O);vw(I,d,R);c[ga]=c[ha];k[ga]=k[ha];c[ga+1]=c[ha+1];k[ga+1]=k[ha+1];c[ga+2]=c[ha+2];k[ga+2]=k[ha+2];c[ga+3]=c[ha+3];k[ga+3]=k[ha+3];k[e+m]=k[F+m]-h;var ta=m+1;m=ta;if(3<=(ta|0)){break a}}}else{if(10==(ma|0)){h=a,k[P]=cf(h),k[S]=cf(h),k[da]=cf(h),H(Z,P,S,da),m=Ke(h),k[Z+m]=cf(h)+gf(h),k[ba]=Mf(h),k[$]=Mf(h),k[Y]=Mf(h),H(V,ba,$,Y),xn(Z,V),qc(la,d),h=ka,m=d+12,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3],k[ea]=J(0+la,Z),k[ca]=J(4+la,Z),k[W]=J(8+la,Z),H(ja,ea,ca,W),N(U,ka,ja),h=e,m=U,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3],wn(X,ka,ja),h=f,m=X,c[h]=c[m],k[h]=k[m],c[h+1]=c[m+1],k[h+1]=k[m+1],c[h+2]=c[m+2],k[h+2]=k[m+2],c[h+3]=c[m+3],k[h+3]=k[m+3]}else{if(5==(ma|0)||4==(ma|0)){h=a,eh(h,d,e,f,Mf(h))}else{v[c[c[a]+2]](a,d,e,f)}}}}}}while(0);b=g}df.X=1;function F_a(a,d,e){var f=b;b+=36;var g=f+1,h=f+2,i=f+3,j=f+7,l=f+8,m=f+9,n=f+10,p=f+11,r=f+21,s=f+25,t=f+26,w=f+27,x=f+28,y=f+32;k[f]=0;k[g]=0;k[h]=0;H(a,f,g,h);c[i]=c[e];k[i]=k[e];c[i+1]=c[e+1];k[i+1]=k[e+1];c[i+2]=c[e+2];k[i+2]=k[e+2];c[i+3]=c[e+3];k[i+3]=k[e+3];e=Um(i);9999999747378752e-20>e?(k[j]=1,k[l]=0,k[m]=0,pe(i,j,l,m)):(k[n]=1/ec(e),LC(i,n));G_a(p,i);k[s]=0xde0b6b000000000;k[t]=0xde0b6b000000000;k[w]=0xde0b6b000000000;H(r,s,t,w);d=c[d+23];i=c[c[d]+2];WP(x,r);v[i](d,p,x,r);H_a(y,p);c[a]=c[y];k[a]=k[y];c[a+1]=c[y+1];k[a+1]=k[y+1];c[a+2]=c[y+2];k[a+2]=k[y+2];c[a+3]=c[y+3];k[a+3]=k[y+3];$16=1;b=f}F_a.X=1;function H_a(a,d){var e=d+1;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}H_a.X=1;function I_a(){}I_a.X=1;function J_a(a,d,e,f){var g=b;b+=25;var h,i=g+10,j=g+14,l=g+15,m=g+16,n=g+17,p=g+21;h=0;var r=(h|0)<(f|0);a:do{if(r){for(;;){if(k[(h<<2)+e+3]=-0xde0b6b000000000,h+=1,(h|0)>=(f|0)){break a}}}}while(0);h=0;for(a+=23;(h|0)<(f|0);){G_a(g,(h<<2)+d);k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;k[m]=0xde0b6b000000000;H(i,j,l,m);var r=c[a],s=c[c[r]+2];WP(n,i);v[s](r,g,n,i);H_a(p,g);r=(h<<2)+e;c[r]=c[p];k[r]=k[p];c[r+1]=c[p+1];k[r+1]=k[p+1];c[r+2]=c[p+2];k[r+2]=k[p+2];c[r+3]=c[p+3];k[r+3]=k[p+3];h+=1}b=g}J_a.X=1;function K_a(a,d,e){var f=b;b+=12;var g=f+4,h=f+5,i=f+6,j=f+7,l=f+11;v[c[c[d]+16]](a,d,e);0!=v[c[c[d]+11]](d)&&(c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3],1.4210854715202004e-14>Um(f)&&(k[g]=-1,k[h]=-1,k[i]=-1,pe(f,g,h,i)),IB(f),k[l]=v[c[c[d]+11]](d),Q(j,f,l),xn(a,j));b=f}K_a.X=1;function L_a(a,d){Iy(c[a+23],d);bh(a)}L_a.X=1;function M_a(a){return c[a+23]+1}M_a.X=1;function N_a(a){EX(a)}N_a.X=1;function O_a(){}O_a.X=1;function P_a(a,d,e){e&=1;vZ(a);c[a]=Q_a+2;c[a+23]=d;c[a+1]=3;e&1&&bh(a)}P_a.X=1;function R_a(a){EX(a);yh(a)}R_a.X=1;function S_a(){}S_a.X=1;function T_a(a){xe(a)}T_a.X=1;function U_a(a,d,e,f){var g=b;b+=24;var h=g+12,i=g+16,j=g+20;$3=e;$4=f;N(h,d,a+13);N(i,d+4,a+13);N(j,d+8,a+13);d=.1666666716337204*-sc(ne(h,i,j));for(e=0;;){var f=0,l=(f|0)<=(e|0);a:do{if(l){for(;;){var m=d*(.10000000149011612*(k[h+e]*k[h+f]+k[i+e]*k[i+f]+k[j+e]*k[j+f])+.05000000074505806*(k[h+e]*k[i+f]+k[h+f]*k[i+e]+k[h+e]*k[j+f]+k[h+f]*k[j+e]+k[i+e]*k[j+f]+k[i+f]*k[j+e]));k[(f<<2)+g+e]=m;k[(e<<2)+g+f]=m;f+=1;if(!((f|0)<=(e|0))){break a}}}}while(0);e=f=e+1;if(3<=(f|0)){break}}h=-k[0+g];i=-k[4+g+1];j=-k[8+g+2];k[0+g]=i+j;k[4+g+1]=j+h;k[8+g+2]=h+i;xn(0+(a+1),0+g);xn(4+(a+1),4+g);xn(8+(a+1),8+g);b=g}U_a.X=1;function V_a(a){xe(a)}V_a.X=1;function W_a(a,d,e,f){var g=b;b+=29;var h=g+4,i=g+8,j=g+12,l=g+16,m=g+17,n=g+21,p=g+25;$3=e;$4=f;c[a+1]&1?(j=a+2,c[j]=c[d],k[j]=k[d],c[j+1]=c[d+1],k[j+1]=k[d+1],c[j+2]=c[d+2],k[j+2]=k[d+2],c[j+3]=c[d+3],k[j+3]=k[d+3],c[a+1]=0):(N(g,d,a+2),N(h,d+4,a+2),N(i,d+8,a+2),e=sc(ne(g,h,i)),k[l]=.25*e,wn(p,d,d+4),wn(n,p,d+8),wn(m,n,a+2),Q(j,m,l),xn(a+6,j),a+=10,k[a]+=e);b=g}W_a.X=1;function G_a(a,d){var e=b;b+=3;var f=e+1,g=e+2;FY(a);c[a]=X_a+2;k[e]=0;k[f]=0;k[g]=0;H(a+1,e,f,g);k[a+5]=-0xde0b6b000000000;f=a+6;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];b=e}G_a.X=1;function Y_a(a){xe(a)}Y_a.X=1;function Z_a(a,d,e,f){var g;$3=e;$4=f;for(var e=0,f=a+6,h=a+5,i=a+5,a=a+1;!(g=J(f,(e<<2)+d),g>k[h]&&(k[i]=g,g=(e<<2)+d,c[a]=c[g],k[a]=k[g],c[a+1]=c[g+1],k[a+1]=k[g+1],c[a+2]=c[g+2],k[a+2]=k[g+2],c[a+3]=c[g+3],k[a+3]=k[g+3]),e=g=e+1,3<=(g|0));){}}Z_a.X=1;function RH(a,d){var e=b;b+=15;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11;yW(a);c[a]=$_a+2;c[a+13]=1;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);ig(j,d,a+3);N(i,j,e);f=a+7;c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];c[f+2]=c[i+2];k[f+2]=k[i+2];c[f+3]=c[i+3];k[f+3]=k[i+3];c[a+1]=13;b=e}RH.X=1;function QG(a,d){RH(a,d);c[a]=a0a+2;c[a+13]=0}QG.X=1;function Vza(a,d){RH(a,d);c[a]=b0a+2;c[a+13]=2}Vza.X=1;function c0a(a,d,e,f){DX(a+7,v[c[c[a]+11]](a),d,e,f)}c0a.X=1;function d0a(a,d,e){var f=b;b+=6;var g,h,i=f+4,j=f+5;qG(f,a);h=c[a+13];0==(h|0)?(g=1,h=0):2==(h|0)?(g=0,h=2):(g=0,h=1);g=k[f+g]*k[f+g];k[i]=d/12*4*k[f+h]*k[f+h]+d/4*g;k[j]=d/2*g;a=c[a+13];0==(a|0)?pe(e,j,i,i):2==(a|0)?pe(e,i,i,j):pe(e,i,j,i);b=f}d0a.X=1;function e0a(a,d,e){f0a(a,d+7,e)}e0a.X=1;function f0a(a,d,e){var f,g;$cylinderUpAxis=0;$XX=1;$YY=0;$ZZ=2;f=k[d+1];d=k[d];g=ec(k[e+1]*k[e+1]+k[e+2]*k[e+2]);0!=g?(f/=g,k[a+1]=k[e+1]*f,k[a]=0>k[e]?-d:d,k[a+2]=k[e+2]*f):(k[a+1]=f,k[a]=0>k[e]?-d:d,k[a+2]=0)}f0a.X=1;function g0a(a,d,e){h0a(a,d+7,e)}g0a.X=1;function i0a(){return D.Ue}i0a.X=1;function j0a(){return 60}j0a.X=1;function k0a(){return D.Xd}k0a.X=1;function l0a(){return D.ne}l0a.X=1;function h0a(a,d,e){var f,g;$cylinderUpAxis=2;$XX=0;$YY=2;$ZZ=1;f=k[d];d=k[d+2];g=ec(k[e]*k[e]+k[e+1]*k[e+1]);0!=g?(f/=g,k[a]=k[e]*f,k[a+2]=0>k[e+2]?-d:d,k[a+1]=k[e+1]*f):(k[a]=f,k[a+2]=0>k[e+2]?-d:d,k[a+1]=0)}h0a.X=1;function m0a(a,d,e){n0a(a,d+7,e)}m0a.X=1;function n0a(a,d,e){var f,g;$cylinderUpAxis=1;$XX=0;$YY=1;$ZZ=2;f=k[d];d=k[d+1];g=ec(k[e]*k[e]+k[e+2]*k[e+2]);0!=g?(f/=g,k[a]=k[e]*f,k[a+1]=0>k[e+1]?-d:d,k[a+2]=k[e+2]*f):(k[a]=f,k[a+1]=0>k[e+1]?-d:d,k[a+2]=0)}n0a.X=1;function o0a(a,d,e,f){var g=b;b+=4;var h;h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=g;;){n0a(g,a+7,(h<<2)+d);var l=(h<<2)+e;c[l]=c[j];k[l]=k[j];c[l+1]=c[j+1];k[l+1]=k[j+1];c[l+2]=c[j+2];k[l+2]=k[j+2];c[l+3]=c[j+3];k[l+3]=k[j+3];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}o0a.X=1;function p0a(a,d,e,f){var g=b;b+=4;var h;h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=a,l=g;;){h0a(g,j+7,(h<<2)+d);var m=(h<<2)+e;c[m]=c[l];k[m]=k[l];c[m+1]=c[l+1];k[m+1]=k[l+1];c[m+2]=c[l+2];k[m+2]=k[l+2];c[m+3]=c[l+3];k[m+3]=k[l+3];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}p0a.X=1;function q0a(a,d,e,f){var g=b;b+=4;var h;h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=a,l=g;;){f0a(g,j+7,(h<<2)+d);var m=(h<<2)+e;c[m]=c[l];k[m]=k[l];c[m+1]=c[l+1];k[m+1]=k[l+1];c[m+2]=c[l+2];k[m+2]=k[l+2];c[m+3]=c[l+3];k[m+3]=k[l+3];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}q0a.X=1;function r0a(){}r0a.X=1;function s0a(a){yh(a)}s0a.X=1;function t0a(a,d){var e=b;b+=23;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+19;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);eX(j,i,a+3);FX(a,d);ig(m,j,a+3);N(l,m,e);f=a+7;c[f]=c[l];k[f]=k[l];c[f+1]=c[l+1];k[f+1]=k[l+1];c[f+2]=c[l+2];k[f+2]=k[l+2];c[f+3]=c[l+3];k[f+3]=k[l+3];b=e}t0a.X=1;function u0a(a,d){var e=b;b+=22;var f=e+4,g=e+5,h=e+6,i=e+7,j=e+11,l=e+15,m=e+16,n=e+17,p=e+18;k[f]=v[c[c[a]+11]](a);k[g]=v[c[c[a]+11]](a);k[h]=v[c[c[a]+11]](a);H(e,f,g,h);wn(i,a+7,e);fW(a,d);k[l]=v[c[c[a]+11]](a);k[m]=v[c[c[a]+11]](a);k[n]=v[c[c[a]+11]](a);H(j,l,m,n);N(p,i,j);f=a+7;c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];b=e}u0a.X=1;function v0a(a,d,e){GX(a,d,e);c[d+16]=c[a+13];return D.te}v0a.X=1;function w0a(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+9,j=f+10,l=f+11,m=f+15;v[c[c[d]+16]](f,d,e);c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];0!=v[c[c[d]+11]](d)&&(c[g]=c[e],k[g]=k[e],c[g+1]=c[e+1],k[g+1]=k[e+1],c[g+2]=c[e+2],k[g+2]=k[e+2],c[g+3]=c[e+3],k[g+3]=k[e+3],1.4210854715202004e-14>Um(g)&&(k[h]=-1,k[i]=-1,k[j]=-1,pe(g,h,i,j)),IB(g),k[m]=v[c[c[d]+11]](d),Q(l,g,m),xn(a,l));b=f}w0a.X=1;function x0a(a){var d=b;b+=4;qG(d,a);a=k[d];b=d;return a}x0a.X=1;function y0a(){}y0a.X=1;function z0a(a){yh(a)}z0a.X=1;function A0a(a){var d=b;b+=4;qG(d,a);a=k[d+1];b=d;return a}A0a.X=1;function B0a(){}B0a.X=1;function C0a(a){yh(a)}C0a.X=1;function D0a(a){var d=b;b+=4;qG(d,a);a=k[d];b=d;return a}D0a.X=1;function WY(a){E0a(a+5);c[a]=0;c[a+1]=0;c[a+2]=-1;c[a+3]=0;c[a+4]=0}WY.X=1;function JZ(a){0!=(c[a]|0)&&KZ(a,c[a]);yh(c[a+1]);c[a+1]=0;c[a+2]=-1;F0a(a+5);c[a+4]=0}JZ.X=1;function KZ(a,d){IY(d)||(KZ(a,c[d+9]),KZ(a,c[d+10]));(d|0)==(c[a]|0)&&(c[a]=0);LZ(a,d)}KZ.X=1;function F0a(a){G0a(a,0,MZ(a));H0a(a);E0a(a)}F0a.X=1;function aZ(a){JZ(a);F0a(a+5)}aZ.X=1;function NZ(a,d){return c[a+3]+d}NZ.X=1;function OZ(a,d){var e;(I0a(a)|0)<(d|0)&&(e=J0a(a,d),K0a(a,0,PZ(a),e),L0a(a,0,PZ(a)),M0a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}OZ.X=1;function QZ(a,d,e,f){var g=b;b+=1;c[g]=d;sY(c[g])?0==(f|0)?a=5:(QZ(a,c[c[g]+9],e,f-1),QZ(a,c[c[g]+10],e,f-1),LZ(a,c[g]),a=6):a=5;5==a&&RZ(e,g);b=g}QZ.X=1;function N0a(a,d){var e=b;b+=12;var f,g,h,i,j=e+2,l=e+10,m=1<(PZ(d)|0);a:do{if(m){for(var n=e,p=l,r=e,s=p+1,t=e+1,w=l,x=l+1,y=l,z=l+1,A=l,C=l+1,B=e,K=e+1,E=e,G=e+1;;){f=3.4028234663852886e+38;c[n]=-1;k[n]=-1;c[n+1]=-1;k[n+1]=-1;g=0;var M=(g|0)<(PZ(d)|0);b:do{if(M){for(;;){h=g+1;var L=(h|0)<(PZ(d)|0);c:do{if(L){for(;;){if(O0a(j,c[NZ(d,g)],c[NZ(d,h)]),i=P0a(j),i<f&&(f=i,c[E]=g,c[G]=h),h+=1,(h|0)>=(PZ(d)|0)){break c}}}}while(0);g+=1;if((g|0)>=(PZ(d)|0)){break b}}}}while(0);c[p]=c[NZ(d,c[r])];c[s]=c[NZ(d,c[t])];f=Q0a(a,0,c[w],c[x]);c[f+9]=c[y];c[f+10]=c[z];c[c[A]+8]=f;c[c[C]+8]=f;c[NZ(d,c[B])]=f;R0a(d,c[K],PZ(d)-1);S0a(d);if(1>=(PZ(d)|0)){break a}}}}while(0);b=e}N0a.X=1;function T0a(a,d){var e,f,g;e=d;0>(e|0)&&(e=c[a+3]);var h=0!=(c[a]|0);a:do{if(h&&0<(e|0)){for(var i=a,j=a+4,l=a+4,m=a;;){f=c[i];g=0;var n=sY(f);b:do{if(n){for(;;){var p=c[l]>>>(g>>>0)&1;f=c[U0a(f,m)+p+9];g=g+1&31;if(!sY(f)){break b}}}}while(0);V0a(a,f,-1);c[j]+=1;e=f=e-1;if(0==(f|0)){break a}}}}while(0)}T0a.X=1;function W0a(a,d){var e=b;b+=5;0!=(c[a]|0)&&(SZ(e),OZ(e,c[a+3]),QZ(a,c[a],e,-1),c[a]=TZ(a,e,d),UZ(e));b=e}W0a.X=1;function TZ(a,d,e){var f=b;b+=45;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5,m=f+6,n=f+7,p=f+8,r=f+9,s=f+17,t=f+21,w=f+31,x=f+37,y=f+41;0==c[X0a]<<24>>24&&0!=(Hb(X0a)|0)&&(k[f]=1,k[g]=0,k[h]=0,H(VZ,f,g,h),k[i]=0,k[j]=1,k[l]=0,H(VZ+4,i,j,l),k[m]=0,k[n]=0,k[p]=1,H(VZ+8,m,n,p));if(1<(PZ(d)|0)){if((PZ(d)|0)>(e|0)){Y0a(r,d);WZ(s,r);SZ(t);SZ(t+5);g=-1;h=PZ(d);c[w]=0;k[w]=0;c[w+1]=0;k[w+1]=0;c[w+2]=0;k[w+2]=0;c[w+3]=0;k[w+3]=0;c[w+4]=0;k[w+4]=0;c[w+5]=0;i=k[w+5]=0;l=(i|0)<(PZ(d)|0);a:do{if(l){for(;;){WZ(y,c[NZ(d,i)]);N(x,y,s);for(j=0;!(m=(j<<1)+w+(0<J(x,(j<<2)+VZ)?1:0),c[m]+=1,j=m=j+1,3<=(m|0));){}i+=1;if((i|0)>=(PZ(d)|0)){break a}}}}while(0);for(x=i=0;3>(x|0);){0<(c[(i<<1)+w]|0)&&0<(c[(i<<1)+w+1]|0)&&(x=sc(c[(i<<1)+w]-c[(i<<1)+w+1]|0)&-1,(x|0)<(h|0)&&(g=i,h=x)),i=x=i+1}h=0<=(g|0);a:do{if(h){OZ(t,c[(g<<1)+w]),OZ(t+5,c[(g<<1)+w+1]),Z0a(d,t,t+5,s,(g<<2)+VZ)}else{OZ(t,((PZ(d)|0)/2&-1)+1);OZ(t+5,(PZ(d)|0)/2&-1);x=0;for(y=PZ(d);;){if((x|0)>=(y|0)){break a}RZ(t+5*(x&1),NZ(d,x));x+=1}}}while(0);d=$0a(a,0,r,0);c[d+9]=TZ(a,t,e);c[d+10]=TZ(a,t+5,e);c[c[d+9]+8]=d;a=c[c[d+10]+8]=d;$17=1;t=t+10-5;UZ(t);UZ(t-5)}else{N0a(a,d),a=c[NZ(d,0)]}}else{a=c[NZ(d,0)]}b=f;return a}TZ.X=1;function U0a(a,d){var e,f,g,h,i;e=c[a+8];e>>>0>a>>>0?(f=XZ(a),g=1-f,h=c[e+(g+9)],i=c[e+8],0!=(i|0)?c[i+XZ(e)+9]=a:c[d]=a,c[h+8]=a,c[e+8]=a,c[a+8]=i,c[e+9]=c[a+9],c[e+10]=c[a+10],c[c[a+9]+8]=e,c[c[a+10]+8]=e,c[a+(f+9)]=e,c[a+(g+9)]=h,a1a(e,a)):e=a;return e}U0a.X=1;function V0a(a,d,e){var f,g;f=YZ(a,d);var h=0!=(f|0);a:do{if(h){if(0<=(e|0)){for(g=0;;){if((g|0)>=(e|0)){break a}if(0==(c[f+8]|0)){break a}f=c[f+8];g+=1}}else{f=c[a]}}}while(0);ZZ(a,f,d)}V0a.X=1;function XY(a,d,e){d=$0a(a,0,d,e);ZZ(a,c[a],d);a+=3;c[a]+=1;return d}XY.X=1;function $0a(a,d,e,f){a=b1a(a,d,f);c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3];c[a+4]=c[e+4];k[a+4]=k[e+4];c[a+5]=c[e+5];k[a+5]=k[e+5];c[a+6]=c[e+6];k[a+6]=k[e+6];c[a+7]=c[e+7];k[a+7]=k[e+7];return a}$0a.X=1;function ZZ(a,d,e){var f,g,h=0!=(c[a]|0);a:do{if(h){f=IY(d);b:do{if(!f){for(;;){if(d=c[d+c1a(e,c[d+9],c[d+10])+9],!(IY(d)^1)){break b}}}}while(0);f=c[d+8];g=Q0a(a,f,e,d);if(0!=(f|0)){c[f+XZ(d)+9]=g;c[g+9]=d;c[d+8]=g;c[g+10]=e;for(c[e+8]=g;;){if(d1a(f,g)){break a}$Z(c[f+9],c[f+10],f);g=f;var i=c[g+8];f=i;if(0==(i|0)){break a}}}else{c[g+9]=d,c[d+8]=g,c[g+10]=e,c[e+8]=g,c[a]=g}}else{c[a]=e,c[e+8]=0}}while(0)}ZZ.X=1;function YZ(a,d){var e=b;b+=8;var f,g,h;if((d|0)==(c[a]|0)){f=c[a]=0}else{if(g=c[d+8],f=c[g+8],h=c[g+(1-XZ(d))+9],0!=(f|0)){c[f+XZ(g)+9]=h;c[h+8]=f;LZ(a,g);for(g=f;0!=(g|0);){g=f;c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];c[e+4]=c[g+4];k[e+4]=k[g+4];c[e+5]=c[g+5];k[e+5]=k[g+5];c[e+6]=c[g+6];k[e+6]=k[g+6];c[e+7]=c[g+7];k[e+7]=k[g+7];$Z(c[f+9],c[f+10],f);if(!e1a(e,f)){break}f=g=c[f+8]}f=0!=(f|0)?f:c[a]}else{c[a]=h,c[h+8]=0,LZ(a,g),f=c[a]}}b=e;return f}YZ.X=1;function ZY(a,d,e){var f,g;f=YZ(a,d);var h=0!=(f|0);a:do{if(h){if(0<=(c[a+2]|0)){g=0;for(var i=a+2;;){if((g|0)>=(c[i]|0)){break a}if(0==(c[f+8]|0)){break a}f=c[f+8];g+=1}}else{f=c[a]}}}while(0);c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[d+4]=c[e+4];k[d+4]=k[e+4];c[d+5]=c[e+5];k[d+5]=k[e+5];c[d+6]=c[e+6];k[d+6]=k[e+6];c[d+7]=c[e+7];k[d+7]=k[e+7];ZZ(a,f,d)}ZY.X=1;function f1a(a,d,e,f,g){var h=b;b+=5;var i=h+1;k[h]=g;d1a(d,e)?a=0:(H(i,h,h,h),g1a(e,i),h1a(e,f),ZY(a,d,e),a=1);b=h;return a}f1a.X=1;function d1a(a,d){return k[a]<=k[d]?k[a+1]<=k[d+1]?k[a+2]<=k[d+2]?k[a+4]>=k[d+4]?k[a+4+1]>=k[d+4+1]?k[a+4+2]>=k[d+4+2]:0:0:0:0:0}d1a.X=1;function g1a(a,d){JC(a,d);xn(a+4,d)}g1a.X=1;function h1a(a,d){0<k[d]?k[a+4]+=k[d]:k[a]+=k[d];0<k[d+1]?cC(a+4,k[a+4+1]+k[d+1]):cC(a,k[a+1]+k[d+1]);0<k[d+2]?dC(a+4,k[a+4+2]+k[d+2]):dC(a,k[a+2]+k[d+2])}h1a.X=1;function $Y(a,d){YZ(a,d);LZ(a,d);var e=a+3;c[e]-=1}$Y.X=1;function LZ(a,d){yh(c[a+1]);c[a+1]=d}LZ.X=1;function i1a(a){j1a(a)}i1a.X=1;function G0a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}G0a.X=1;function L0a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}L0a.X=1;function a_(a,d){return(c[a]|0)>(c[d]|0)?a:d}a_.X=1;function MZ(a){return c[a+1]}MZ.X=1;function E0a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}E0a.X=1;function I0a(a){return c[a+2]}I0a.X=1;function K0a(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}K0a.X=1;function PZ(a){return c[a+1]}PZ.X=1;function SZ(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}SZ.X=1;function XZ(a){return(c[c[a+8]+10]|0)==(a|0)&1}XZ.X=1;function H0a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&k1a(a,c[a+3]),c[a+3]=0)}H0a.X=1;function k1a(a,d){$1=a;yh(d)}k1a.X=1;function J0a(a,d){return 0!=(d|0)?l1a(a,d,0):0}J0a.X=1;function M0a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&m1a(a,c[a+3]),c[a+3]=0)}M0a.X=1;function m1a(a,d){$1=a;yh(d)}m1a.X=1;function l1a(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}l1a.X=1;function UZ(a){L0a(a,0,PZ(a));M0a(a);SZ(a)}UZ.X=1;function j1a(a){c[a]=n1a+2;uY(a+1)}j1a.X=1;function o1a(a){j1a(a);xe(a)}o1a.X=1;function p1a(a,d){var e=b;b+=1;c[e]=d;SY(a+1,e);b=e}p1a.X=1;function $Z(a,d,e){var f;for(f=0;;){var g=f;k[e+f]=k[a+f]<k[d+f]?k[a+g]:k[d+g];g=f;k[e+4+f]=k[a+4+f]>k[d+4+f]?k[a+4+g]:k[d+4+g];f=g=f+1;if(3<=(g|0)){break}}}$Z.X=1;function e1a(a,d){return k[a]!=k[d]?1:k[a+1]!=k[d+1]?1:k[a+2]!=k[d+2]?1:k[a+4]!=k[d+4]?1:k[a+4+1]!=k[d+4+1]?1:k[a+4+2]!=k[d+4+2]}e1a.X=1;function c1a(a,d,e){return q1a(a,d)<q1a(a,e)?0:1}c1a.X=1;function Q0a(a,d,e,f){a=b1a(a,d,0);$Z(e,f,a);return a}Q0a.X=1;function b1a(a,d,e){var f;if(0!=(c[a+1]|0)){f=c[a+1],c[a+1]=0}else{a=Ue(44,16);if(0==(a|0)){a=0}else{f=a;for(var g=f+11;f<g;f++){c[f]=0,k[f]=0}}f=a}c[f+8]=d;c[f+9]=e;c[f+10]=0;return f}b1a.X=1;function q1a(a,d){var e=b;b+=12;var f=e+4,g=e+8;wn(f,a,a+4);wn(g,d,d+4);N(e,f,g);f=sc(k[e])+sc(k[e+1])+sc(k[e+2]);b=e;return f}q1a.X=1;function a1a(a,d){var e=b;b+=8;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3];c[e+4]=c[a+4];k[e+4]=k[a+4];c[e+5]=c[a+5];k[e+5]=k[a+5];c[e+6]=c[a+6];k[e+6]=k[a+6];c[e+7]=c[a+7];k[e+7]=k[a+7];c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];c[a+4]=c[d+4];k[a+4]=k[d+4];c[a+5]=c[d+5];k[a+5]=k[d+5];c[a+6]=c[d+6];k[a+6]=k[d+6];c[a+7]=c[d+7];k[a+7]=k[d+7];c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[d+4]=c[e+4];k[d+4]=k[e+4];c[d+5]=c[e+5];k[d+5]=k[e+5];c[d+6]=c[e+6];k[d+6]=k[e+6];c[d+7]=c[e+7];k[d+7]=k[e+7];b=e}a1a.X=1;function r1a(a,d){return d}r1a.X=1;function s1a(a,d){$1=a;return 0!=(d|0)?d<<1:1}s1a.X=1;function b_(a,d){return c[a+3]+d}b_.X=1;function R0a(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}R0a.X=1;function S0a(a){a+=1;c[a]-=1}S0a.X=1;function c_(a,d){c[a+14]=0;c[a+15]=c[d];0!=(c[d]|0)&&(c[c[d]+14]=a);c[d]=a}c_.X=1;function Y0a(a,d){var e=b;b+=32;var f,g;f=c[b_(d,0)];c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];c[e+4]=c[f+4];k[e+4]=k[f+4];c[e+5]=c[f+5];k[e+5]=k[f+5];c[e+6]=c[f+6];k[e+6]=k[f+6];c[e+7]=c[f+7];k[e+7]=k[f+7];f=1;g=PZ(d);var h=(f|0)<(g|0);a:do{if(h){for(var i=e;;){if($Z(i,c[b_(d,f)],e),f+=1,i=e,(f|0)>=(g|0)){var j=i;break a}}}else{j=e}}while(0);c[a]=c[j];k[a]=k[j];c[a+1]=c[j+1];k[a+1]=k[j+1];c[a+2]=c[j+2];k[a+2]=k[j+2];c[a+3]=c[j+3];k[a+3]=k[j+3];c[a+4]=c[j+4];k[a+4]=k[j+4];c[a+5]=c[j+5];k[a+5]=k[j+5];c[a+6]=c[j+6];k[a+6]=k[j+6];c[a+7]=c[j+7];k[a+7]=k[j+7];b=e}Y0a.X=1;function WZ(a,d){var e=b;b+=5;var f=e+4;wn(e,d,d+4);k[f]=2;wC(a,e,f);b=e}WZ.X=1;function Z0a(a,d,e,f,g){var h=b;b+=10;var i=h+1,j,l=h+2,m=h+6;c[h]=0;t1a(d,0,h);c[i]=0;t1a(e,0,i);i=0;j=PZ(a);var n=(i|0)<(j|0);a:do{if(n){for(;;){if(WZ(m,c[b_(a,i)]),N(l,m,f),0>J(g,l)?RZ(d,b_(a,i)):RZ(e,b_(a,i)),i+=1,(i|0)>=(j|0)){break a}}}}while(0);b=h}Z0a.X=1;function RZ(a,d){(PZ(a)|0)==(I0a(a)|0)&&OZ(a,s1a(a,PZ(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}RZ.X=1;function t1a(a,d,e){var f,g;f=PZ(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(PZ(a)|0)&&OZ(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}t1a.X=1;function P0a(a){var d=b;b+=4;u1a(d,a);a=k[d]*k[d+1]*k[d+2]+k[d]+k[d+1]+k[d+2];b=d;return a}P0a.X=1;function O0a(a,d,e){var f=b;b+=32;$Z(d,e,f);c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];c[a+4]=c[f+4];k[a+4]=k[f+4];c[a+5]=c[f+5];k[a+5]=k[f+5];c[a+6]=c[f+6];k[a+6]=k[f+6];c[a+7]=c[f+7];k[a+7]=k[f+7];b=f}O0a.X=1;function u1a(a,d){N(a,d+4,d)}u1a.X=1;function xr(a,d){var e;bX(a);c[a]=d_+2;e=a+1;WY(e);WY(e+10);c[a+39]=0;c[a+40]=1;c[a+38]=(0!=(d|0)?0:1)&1;k[a+25]=0;c[a+26]=0;c[a+31]=0;c[a+27]=1;c[a+28]=0;c[a+29]=10;c[a+30]=1;c[a+32]=0;c[a+33]=0;k[a+34]=0;0!=(d|0)?e=d:(e=Ue(76,16),0==(e|0)?e=0:dX(e));c[a+24]=e;c[a+37]=0;c[a+35]=0;e=c[a+36]=0;for(var f=a+21;;){c[f+e]=0;var g=e+1;e=g;if(!(2>=(g|0))){break}}}xr.X=1;function v1a(a){w1a(a);xe(a)}v1a.X=1;function x1a(a,d,e,f,g,h,i,j,l){var m=b;b+=11;var n=m+8;$7=f;$11=j;$12=l;f=r1a(0,Ue(64,16));PH(f,d,e,g,h,i);QY(m,d,e);c[f+16]=c[a+26];d=a+37;e=c[d]+1;c[d]=e;c[f+4]=e;c[f+13]=XY(a+1,m,f);c_(f,a+c[a+26]+21);c[a+39]&1||(e_(n,a),c[n+2]=f,RY(a+1,c[a+1],m,n),RY(a+11,c[a+11],m,n));b=m;return f}x1a.X=1;function y1a(){}y1a.X=1;function z1a(a,d,e){var f=a+1;2==(c[d+16]|0)?$Y(f+10,c[d+13]):$Y(f,c[d+13]);f_(d,a+c[d+16]+21);f=c[a+24];v[c[c[f]+4]](f,d,e);yh(d);c[a+40]=1}z1a.X=1;function w1a(a){c[a]=d_+2;if(c[a+38]&1){var d=c[a+24];v[c[c[d]]](d);yh(c[a+24])}a=a+21-10;aZ(a);aZ(a-10)}w1a.X=1;function f_(a,d){var e=c[a+15];0!=(c[a+14]|0)?c[c[a+14]+15]=e:c[d]=e;0!=(c[a+15]|0)&&(c[c[a+15]+14]=c[a+14])}f_.X=1;function A1a(a,d,e,f){$1=a;a=d+5;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3];d+=9;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3]}A1a.X=1;function B1a(a,d,e,f,g,h){var i=b;b+=2;C1a(i,f);D1a(a+1,c[a+1],d,e,f+1,f+5,k[f+8],g,h,i);D1a(a+11,c[a+11],d,e,f+1,f+5,k[f+8],g,h,i);b=i}B1a.X=1;function E1a(){}E1a.X=1;function F1a(a,d,e,f){var g=b;b+=10;var h=g+2;G1a(g,f);QY(h,d,e);RY(a+1,c[a+1],h,g);RY(a+11,c[a+11],h,g);b=g}F1a.X=1;function H1a(){}H1a.X=1;function I1a(a,d,e,f,g){var h=b;b+=28;var i=h+8,j=h+12,l=h+16,m=h+20,n=h+24,p=h+25;$6=g;QY(h,e,f);g=0;if(2==(c[d+16]|0)){$Y(a+11,c[d+13]),c[d+13]=XY(a+1,h,d),g=1}else{var r=a+32;c[r]+=1;TY(c[d+13],h)?(N(i,e,d+5),N(m,d+9,d+5),k[n]=2,wC(l,m,n),Q(j,l,a+25),0>k[i]&&(k[j]=-k[j]),0>k[i+1]&&(k[j+1]=-k[j+1]),0>k[i+2]&&(k[j+2]=-k[j+2]),f1a(a+1,c[d+13],h,j,.05000000074505806)&&(g=a+33,c[g]+=1,g=1)):(ZY(a+1,c[d+13],h),g=a+33,c[g]+=1,g=1)}f_(d,a+c[d+16]+21);i=d+5;c[i]=c[e];k[i]=k[e];c[i+1]=c[e+1];k[i+1]=k[e+1];c[i+2]=c[e+2];k[i+2]=k[e+2];c[i+3]=c[e+3];k[i+3]=k[e+3];e=d+9;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];c[d+16]=c[a+26];c_(d,a+c[a+26]+21);g&1&&(c[a+40]=1,c[a+39]&1||(e_(p,a),g_(a+11,c[a+11],c[d+13],p),g_(a+1,c[a+1],c[d+13],p)));b=h}I1a.X=1;function D1a(a,d,e,f,g,h,i,j,l,m){var n=b;b+=28;var p=n+4,r=n+9,s=n+10,t=n+18,w=n+22,x=n+26,y=n+27;$1=a;$4=f;if(0!=(d|0)){a=1;f=126;oY(p);c[r]=0;pY(p,128,r);c[qY(p,0)]=d;for(d=s+4;;){a=r=a-1;r=c[qY(p,r)];N(t,r,l);c[s]=c[t];k[s]=k[t];c[s+1]=c[t+1];k[s+1]=k[t+1];c[s+2]=c[t+2];k[s+2]=k[t+2];c[s+3]=c[t+3];k[s+3]=k[t+3];N(w,r+4,j);c[d]=c[w];k[d]=k[w];c[d+1]=c[w+1];k[d+1]=k[w+1];c[d+2]=c[w+2];k[d+2]=k[w+2];c[d+3]=c[w+3];k[d+3]=k[w+3];k[x]=1;$result1=0;var z=rY(e,g,h,s,x,0,i)&1;$result1=z;if(0!=(z|0)){if(sY(r)){(a|0)>(f|0)&&(f=tY(p)<<1,c[y]=0,pY(p,f,y),f=tY(p)-2);var z=c[r+9],A=a,a=A+1;c[qY(p,A)]=z;r=c[r+10];z=a;a=z+1;c[qY(p,z)]=r}else{z=m,v[c[c[z]+3]](z,r)}}if(0==(a|0)){break}}uY(p)}b=n}D1a.X=1;function g_(a,d,e,f){var g=b;b+=30;var h,i,j=g+2,l=g+4,m=g+6,n=g+8,p=g+10,r=g+12,s=g+14,t=g+16,w=g+18,x=g+20,y=g+22,z=g+24,A=g+26,C=g+28,B=0!=(d|0);a:do{if(B&&0!=(e|0)){h=1;i=124;J1a(a+5,128,g);var K=h_(a+5,0);i_(j,d,e);var E=K,G=j;c[E]=c[G];k[E]=k[G];c[E+1]=c[G+1];k[E+1]=k[G+1];for(var M=a+5,L=l,F=a+5,I=a+5,R=a+5,O=l,Z=l+1,P=l,S=a+5,da=l,V=l,ba=n,$=a+5,Y=l,la=l,ka=p,ja=a+5,ea=l,ca=l,W=r,U=l+1,X=l,ma=l+1,ga=a+5,ha=l,ta=l+1,ra=s,ua=a+5,za=l,Za=l+1,ib=t,Ca=a+5,Sa=l,mb=l+1,Oa=w,Pa=a+5,fc=l,jb=l+1,La=x,fb=y,Rb=a+5,pb=l,Sb=l+1,ab=z,Ib=a+5,Fc=l,Ac=l+1,ob=A,Gc=a+5,Yc=l,Cc=l+1,Ub=C,Uc=l,nd=l+1;;){var Ic=h-1;h=Ic;var tc=h_(M,Ic);c[L]=c[tc];k[L]=k[tc];c[L+1]=c[tc+1];k[L+1]=k[tc+1];(h|0)>(i|0)&&(J1a(F,MZ(I)<<1,m),i=MZ(R)-4);var hd=c[P];if((c[O]|0)==(c[Z]|0)){if(sY(hd)){var Tb=h;h=Tb+1;var Jc=h_(S,Tb);i_(n,c[c[da]+9],c[c[V]+9]);var ub=Jc;c[ub]=c[ba];k[ub]=k[ba];c[ub+1]=c[ba+1];k[ub+1]=k[ba+1];var uc=h;h=uc+1;var Kc=h_($,uc);i_(p,c[c[Y]+10],c[c[la]+10]);var gb=Kc;c[gb]=c[ka];k[gb]=k[ka];c[gb+1]=c[ka+1];k[gb+1]=k[ka+1];var gc=h;h=gc+1;var Lc=h_(ja,gc);i_(r,c[c[ea]+9],c[c[ca]+10]);var Dc=Lc;c[Dc]=c[W];k[Dc]=k[W];c[Dc+1]=c[W+1];k[Dc+1]=k[W+1]}}else{if(TY(hd,c[U])){var Eb=sY(c[ma]);if(sY(c[X])){var Ra=h;h=Ra+1;var qb=h_(ga,Ra),Ab=c[c[ha]+9],hc=c[ta];if(Eb){i_(s,Ab,c[hc+9]);var Hc=qb;c[Hc]=c[ra];k[Hc]=k[ra];c[Hc+1]=c[ra+1];k[Hc+1]=k[ra+1];var ic=h;h=ic+1;var db=h_(ua,ic);i_(t,c[c[za]+10],c[c[Za]+9]);var bb=db;c[bb]=c[ib];k[bb]=k[ib];c[bb+1]=c[ib+1];k[bb+1]=k[ib+1];var id=h;h=id+1;var Zc=h_(Ca,id);i_(w,c[c[Sa]+9],c[c[mb]+10]);var vb=Zc;c[vb]=c[Oa];k[vb]=k[Oa];c[vb+1]=c[Oa+1];k[vb+1]=k[Oa+1];var rb=h;h=rb+1;var vc=h_(Pa,rb);i_(x,c[c[fc]+10],c[c[jb]+10]);var Qc=vc;c[Qc]=c[La];k[Qc]=k[La];c[Qc+1]=c[La+1];k[Qc+1]=k[La+1]}else{i_(y,Ab,hc);var Rc=qb;c[Rc]=c[fb];k[Rc]=k[fb];c[Rc+1]=c[fb+1];k[Rc+1]=k[fb+1];var Xd=h;h=Xd+1;var Sc=h_(Rb,Xd);i_(z,c[c[pb]+10],c[Sb]);var Mc=Sc;c[Mc]=c[ab];k[Mc]=k[ab];c[Mc+1]=c[ab+1];k[Mc+1]=k[ab+1]}}else{if(Eb){var $c=h;h=$c+1;var Cd=h_(Ib,$c);i_(A,c[Fc],c[c[Ac]+9]);var wc=Cd;c[wc]=c[ob];k[wc]=k[ob];c[wc+1]=c[ob+1];k[wc+1]=k[ob+1];var Bb=h;h=Bb+1;var fd=h_(Gc,Bb);i_(C,c[Yc],c[c[Cc]+10]);var ad=fd;c[ad]=c[Ub];k[ad]=k[Ub];c[ad+1]=c[Ub+1];k[ad+1]=k[Ub+1]}else{var wd=f;v[c[c[wd]+2]](wd,c[Uc],c[nd])}}}}if(0==(h|0)){break a}}}}while(0);b=g}g_.X=1;function Nr(a,d,e,f,g){var h=b;b+=11;var i=h+8;$6=g;QY(h,e,f);2==(c[d+16]|0)?($Y(a+11,c[d+13]),c[d+13]=XY(a+1,h,d)):(g=a+32,c[g]+=1,ZY(a+1,c[d+13],h),g=a+33,c[g]+=1);f_(d,a+c[d+16]+21);g=d+5;c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];e=d+9;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];c[d+16]=c[a+26];c_(d,a+c[a+26]+21);c[a+40]=1;c[a+39]&1||(e_(i,a),g_(a+11,c[a+11],c[d+13],i),g_(a+1,c[a+1],c[d+13],i));b=h}Nr.X=1;function K1a(a,d){Hr(a,d);zr(a,d)}K1a.X=1;function Hr(a,d){var e=b;b+=18;var f,g=e+1,h=e+2,i=e+5,j=e+13,l=e+16,m=e+17,n,p;T0a(a+1,((c[a+28]*c[a+4]|0)/100&-1)+1);0!=(c[a+31]|0)&&(f=((c[a+27]*c[a+14]|0)/100&-1)+1,T0a(a+11,((c[a+27]*c[a+14]|0)/100&-1)+1),c[e]=0,c[g]=c[a+31]-f,c[a+31]=c[a_(e,g)]);c[a+26]=(c[a+26]+1|0)%2;f=g=c[a+c[a+26]+21];if(0!=(g|0)){e_(h,a);for(var g=a+21,r=a+23,s=a+1,t=a+11;!(h=c[f+15],f_(f,g+c[f+16]),c_(f,r),$Y(s,c[f+13]),QY(i,f+5,f+9),c[f+13]=XY(t,i,f),c[f+16]=2,f=h,0==(f|0));){}c[a+31]=c[a+14];c[a+40]=1}e_(j,a);c[a+39]&1&&g_(a+1,c[a+1],c[a+11],j);c[a+39]&1&&g_(a+1,c[a+1],c[a+1],j);i=c[a+40]&1;do{if(i&&(j=c[a+24],j=v[c[c[j]+7]](j),0<(jX(j)|0))){c[l]=jX(j);c[m]=(c[a+29]*jX(j)|0)/100&-1;f=c[L1a(l,a_(a+30,m))];h=0;g=(h|0)<(f|0);r=j;a:do{if(g){s=a+36;t=a+24;for(p=r;;){n=lX(p,(h+c[s]|0)%(jX(j)|0));p=c[n];n=c[n+1];if(!TY(c[p+13],c[n+13])){var w=c[t];v[c[c[w]+3]](w,p,n,d);f-=1;h-=1}h+=1;p=j;if((h|0)>=(f|0)){var x=p;break a}}}else{x=r}}while(0);h=a+36;0<(jX(x)|0)?c[a+36]=(f+c[h]|0)%(jX(j)|0):c[h]=0}}while(0);l=a+35;c[l]+=1;c[a+30]=1;c[a+40]=0;k[a+34]=0<c[a+32]>>>0?(c[a+33]>>>0)/(c[a+32]>>>0):0;l=a+33;c[l]=Math.floor((c[l]>>>0)/2);l=a+32;c[l]=Math.floor((c[l]>>>0)/2);b=e}Hr.X=1;function M1a(){}M1a.X=1;function L1a(a,d){return(c[a]|0)<(c[d]|0)?a:d}L1a.X=1;function N1a(a){return c[a+24]}N1a.X=1;function O1a(a){return c[a+24]}O1a.X=1;function P1a(a){return 0==(c[a]|0)}P1a.X=1;function h_(a,d){return(d<<1)+c[a+3]}h_.X=1;function i_(a,d,e){c[a]=d;c[a+1]=e}i_.X=1;function Q1a(a){return c[a+2]}Q1a.X=1;function zr(a,d){var e=b;b+=8;var f,g,h,i,j,l=e+4;f=c[a+24];if(v[c[c[f]+14]](f)){f=c[a+24];f=v[c[c[f]+7]](f);iX(f);g=0;Az(e);c[e]=0;c[e+1]=0;h=c[e+2]=0;var m=(h|0)<(jX(f)|0);a:do{if(m){var n=e,p=a+24;for(i=f;;){i=lX(i,h);j=mX(i,e)&1;var r=i;c[n]=c[r];k[n]=k[r];c[n+1]=c[r+1];k[n+1]=k[r+1];c[n+2]=c[r+2];k[n+2]=k[r+2];c[n+3]=c[r+3];k[n+3]=k[r+3];j=j&1?1:TY(c[c[i]+13],c[c[i+1]+13])&1?0:1;j&1&&(j=c[p],v[c[c[j]+8]](j,i,d),c[i]=0,c[i+1]=0,g+=1);h+=1;i=f;if((h|0)>=(jX(f)|0)){var s=i;break a}}}else{s=f}}while(0);iX(s);s=jX(f)-g;Az(l);kX(f,s,l)}b=e}zr.X=1;function Kr(a){W0a(a+1,128);W0a(a+11,128)}Kr.X=1;function R1a(a,d,e){var f=b;b+=23;var g=f+8,h=f+16,i=f+20,j=f+21,l=f+22,m=P1a(a+11);P1a(a+1)?m?(k[i]=0,k[j]=0,k[l]=0,H(h,i,j,l),S1a(g,h,0),c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3],c[f+4]=c[g+4],k[f+4]=k[g+4],c[f+5]=c[g+5],k[f+5]=k[g+5],c[f+6]=c[g+6],k[f+6]=k[g+6],c[f+7]=c[g+7],k[f+7]=k[g+7]):(a=c[a+11],c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3],c[f+4]=c[a+4],k[f+4]=k[a+4],c[f+5]=c[a+5],k[f+5]=k[a+5],c[f+6]=c[a+6],k[f+6]=k[a+6],c[f+7]=c[a+7],k[f+7]=k[a+7]):(g=c[a+1],m?(c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3],c[f+4]=c[g+4],k[f+4]=k[g+4],c[f+5]=c[g+5],k[f+5]=k[g+5],c[f+6]=c[g+6],k[f+6]=k[g+6],c[f+7]=c[g+7],k[f+7]=k[g+7]):$Z(g,c[a+11],f));c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];d=f+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];b=f}R1a.X=1;function S1a(a,d,e){var f=b;b+=5;var g=f+1;k[f]=e;H(g,f,f,f);T1a(a,d,g);b=f}S1a.X=1;function U1a(a,d){var e;$2=d;var f=0!=(c[a+14]+c[a+4]|0);a:do{if(!f){JZ(a+1);JZ(a+11);c[a+39]=0;c[a+40]=1;c[a+26]=0;c[a+31]=0;c[a+27]=1;c[a+28]=0;c[a+29]=10;c[a+30]=1;e=a+32;c[e]=0;k[e]=0;c[e+1]=0;k[e+1]=0;c[e+2]=0;k[e+2]=0;c[e+3]=0;k[e+3]=0;c[e+4]=0;k[e+4]=0;c[e+5]=0;e=k[e+5]=0;for(var g=a+21;;){c[g+e]=0;var h=e+1;e=h;if(!(2>=(h|0))){break a}}}}while(0)}U1a.X=1;function T1a(a,d,e){var f=b;b+=8;var g=f+4;N(f,d,e);c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];a+=4;wn(g,d,e);c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];b=f}T1a.X=1;function J1a(a,d,e){var f,g;f=MZ(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(MZ(a)|0)&&V1a(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=(g<<1)+c[i];if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}J1a.X=1;function V1a(a,d){var e;(Q1a(a)|0)<(d|0)&&(e=W1a(a,d),X1a(a,0,MZ(a),e),G0a(a,0,MZ(a)),H0a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}V1a.X=1;function W1a(a,d){return 0!=(d|0)?Y1a(a,d,0):0}W1a.X=1;function X1a(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;if(0!=(i|0)){var j=(d<<1)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}X1a.X=1;function Y1a(a,d,e){$1=a;$3=e;return Ue(d<<3,16)}Y1a.X=1;function G1a(a,d){HY(a);c[a]=Z1a+2;c[a+1]=d}G1a.X=1;function $1a(a){xe(a)}$1a.X=1;function a2a(a,d){var e=c[a+1];v[c[c[e]+2]](e,c[d+9])}a2a.X=1;function C1a(a,d){HY(a);c[a]=b2a+2;c[a+1]=d}C1a.X=1;function c2a(a){xe(a)}c2a.X=1;function d2a(a,d){var e=c[a+1];v[c[c[e]+2]](e,c[d+9])}d2a.X=1;function e_(a,d){HY(a);c[a]=e2a+2;c[a+1]=d}e_.X=1;function f2a(a){xe(a)}f2a.X=1;function g2a(a,d,e){if((d|0)!=(e|0)){var f=c[c[a+1]+24];v[c[c[f]+2]](f,c[d+9],c[e+9]);a=c[a+1]+30;c[a]+=1}}g2a.X=1;function h2a(a,d){v[c[c[a]+2]](a,d,c[c[a+2]+13])}h2a.X=1;function i2a(a){c[a]=j2a+2}i2a.X=1;function Ij(a,d){var e=b;b+=4;var f,g=e+1,h=e+2,i=e+3;i2a(a);c[a]=j_+2;f=Ue(360,16);0==(f|0)?f=0:gY(f);c[a+8]=f;0!=(c[d+7]|0)?(f=Ue(4,16),0==(f|0)?f=0:vY(f)):(f=Ue(4,16),0==(f|0)?f=0:k2a(f));c[a+9]=f;f=Ue(24,16);0==(f|0)?f=0:UXa(f,c[a+8],c[a+9]);c[a+10]=f;f=Ue(8,16);0==(f|0)?f=0:l2a(f);c[a+11]=f;f=Ue(8,16);0==(f|0)?f=0:m2a(f);c[a+12]=f;f=Ue(8,16);0==(f|0)?f=0:n2a(f);c[a+13]=f;f=Ue(8,16);0==(f|0)?f=0:o2a(f);c[a+14]=f;f=Ue(8,16);0==(f|0)?f=0:p2a(f);c[a+15]=f;f=Ue(8,16);0==(f|0)?f=0:q2a(f);c[a+16]=f;f=Ue(8,16);0==(f|0)?f=0:r2a(f);c[a+18]=f;f=Ue(8,16);0==(f|0)?f=0:r2a(f);c[a+19]=f;c[c[a+19]+1]=1;f=Ue(8,16);0==(f|0)?f=0:s2a(f);c[a+17]=f;f=Ue(16,16);0==(f|0)?f=0:t2a(f);c[a+21]=f;f=Ue(16,16);0==(f|0)?f=0:t2a(f);c[a+20]=f;c[c[a+20]+1]=1;c[e]=36;c[g]=80;c[h]=44;$sl=76;c[i]=c[a_(e,d+5)];c[i]=c[a_(i,g)];c[i]=c[a_(i,h)];g=a+3;0!=(c[d]|0)?(c[g]=0,c[a+2]=c[d]):(c[g]=1,g=Ue(20,16),0==(g|0)?g=0:Om(g,c[d+6]),c[a+2]=g);g=a+5;0!=(c[d+1]|0)?(c[g]=0,c[a+4]=c[d+1]):(c[g]=1,g=Ue(20,16),0==(g|0)?g=0:u2a(g,1140,c[d+3]),c[a+4]=g);g=a+7;0!=(c[d+2]|0)?(c[g]=0,c[a+6]=c[d+2]):(c[g]=1,g=Ue(20,16),0==(g|0)?i=0:(u2a(g,c[i],c[d+4]),i=g),c[a+6]=i);b=e}Ij.X=1;function v2a(a){w2a(a);xe(a)}v2a.X=1;function w2a(a){c[a]=j_+2;c[a+3]&1&&(Lm(c[a+2]),Lm(c[a+2]),yh(c[a+2]));c[a+7]&1&&(x2a(c[a+6]),yh(c[a+6]));c[a+5]&1&&(x2a(c[a+4]),yh(c[a+4]));var d=c[a+10];v[c[c[d]]](d);yh(c[a+10]);d=c[a+11];v[c[c[d]]](d);yh(c[a+11]);d=c[a+12];v[c[c[d]]](d);yh(c[a+12]);d=c[a+13];v[c[c[d]]](d);yh(c[a+13]);d=c[a+14];v[c[c[d]]](d);yh(c[a+14]);d=c[a+15];v[c[c[d]]](d);yh(c[a+15]);d=c[a+16];v[c[c[d]]](d);yh(c[a+16]);d=c[a+18];v[c[c[d]]](d);yh(c[a+18]);d=c[a+19];v[c[c[d]]](d);yh(c[a+19]);d=c[a+17];v[c[c[d]]](d);yh(c[a+17]);d=c[a+21];v[c[c[d]]](d);yh(c[a+21]);d=c[a+20];v[c[c[d]]](d);yh(c[a+20]);yh(c[a+8]);d=c[a+9];v[c[c[d]]](d);yh(c[a+9])}w2a.X=1;function Nj(a,d,e){a=c[a+10];c[a+4]=d;c[a+5]=e}Nj.X=1;function y2a(a){return c[a+4]}y2a.X=1;function z2a(a){return c[a+6]}z2a.X=1;function A2a(a){return c[a+2]}A2a.X=1;function B2a(a){return c[a+8]}B2a.X=1;function C2a(a,d,e){var f,g;if(8==(d|0)){if(8==(e|0)){g=c[a+16],f=35}else{if(8!=(d|0)){var h=d;f=9}else{1!=(e|0)?f=8:(g=c[a+18],f=35)}}}else{f=8}8==f&&(h=d,f=9);a:do{if(9==f){g=1==(h|0);do{if(g&&8==(e|0)){g=c[a+19];break a}}while(0);g=0==(d|0);do{if(g&&0==(e|0)){g=c[a+17];break a}}while(0);g=yf(d);do{if(g&&28==(e|0)){g=c[a+21];break a}}while(0);g=yf(e);do{if(g&&28==(d|0)){g=c[a+20];break a}}while(0);g=yf(d);do{if(g&&yf(e)){g=c[a+10];break a}}while(0);g=yf(d);do{if(g&&Yf(e)){g=c[a+11];break a}}while(0);g=yf(e);do{if(g&&Yf(d)){g=c[a+12];break a}}while(0);g=He(d)?c[a+13]:He(e)?c[a+14]:c[a+15]}}while(0);return g}C2a.X=1;function x2a(a){yh(c[a+4])}x2a.X=1;function u2a(a,d,e){c[a]=d;c[a+1]=e;c[a+4]=Ue(c[a+1]*c[a],16);d=c[a+4];c[a+3]=d;c[a+2]=c[a+1];var e=c[a+1],f=e-1,e=f,f=0!=(f|0),g=d;a:do{if(f){for(var h=a,i=a,j=g;;){c[d]=j+c[h];var d=d+c[i],e=j=e-1,l=d;if(0==(j|0)){var m=l;break a}j=l}}else{m=g}}while(0);c[m]=0}u2a.X=1;function t2a(a){gM(a);c[a]=D2a+2;c[a+2]=1;c[a+3]=1}t2a.X=1;function E2a(){}E2a.X=1;function F2a(a){xe(a)}F2a.X=1;function G2a(a,d,e,f){var g=c[d],g=v[c[c[g]+14]](g,28),h=0==(g|0);c[a+1]&1?h?a=0:(zZ(g,0,d,e,f,1,c[a+2],c[a+3]),a=g):h?a=0:(zZ(g,0,d,e,f,0,c[a+2],c[a+3]),a=g);return a}G2a.X=1;function s2a(a){gM(a);c[a]=H2a+2}s2a.X=1;function I2a(){}I2a.X=1;function J2a(a){xe(a)}J2a.X=1;function K2a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,16);0==(a|0)?d=0:(sPa(a,0,d,e,f),d=a);return d}K2a.X=1;function r2a(a){gM(a);c[a]=L2a+2}r2a.X=1;function M2a(){}M2a.X=1;function N2a(a){xe(a)}N2a.X=1;function O2a(a,d,e,f){var g=c[d],g=v[c[c[g]+14]](g,20);0==(g|0)?a=0:(P2a(g,c[d+1],d,e,f,c[a+1]&1),a=g);return a}O2a.X=1;function q2a(a){gM(a);c[a]=Q2a+2}q2a.X=1;function R2a(){}R2a.X=1;function S2a(a){xe(a)}S2a.X=1;function T2a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,16);0==(a|0)?d=0:(Wj(a,0,d,e,f),d=a);return d}T2a.X=1;function p2a(a){gM(a);c[a]=U2a+2}p2a.X=1;function V2a(){}V2a.X=1;function W2a(a){xe(a)}W2a.X=1;function X2a(a,d,e,f){$1=a;$3=e;$4=f;a=c[d];a=v[c[c[a]+14]](a,8);0==(a|0)?d=0:(Y2a(a,d),d=a);return d}X2a.X=1;function o2a(a){gM(a);c[a]=Z2a+2}o2a.X=1;function $2a(){}$2a.X=1;function a3a(a){xe(a)}a3a.X=1;function b3a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,44);0==(a|0)?d=0:(NY(a,d,e,f,1),d=a);return d}b3a.X=1;function n2a(a){gM(a);c[a]=c3a+2}n2a.X=1;function d3a(){}d3a.X=1;function e3a(a){xe(a)}e3a.X=1;function f3a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,44);0==(a|0)?d=0:(NY(a,d,e,f,0),d=a);return d}f3a.X=1;function m2a(a){gM(a);c[a]=g3a+2}m2a.X=1;function h3a(){}h3a.X=1;function i3a(a){xe(a)}i3a.X=1;function j3a(){}j3a.X=1;function k3a(){}k3a.X=1;function l3a(){return 1}l3a.X=1;function m3a(){}m3a.X=1;function n3a(){}n3a.X=1;function o3a(){return D.se}o3a.X=1;function p3a(){}p3a.X=1;function q3a(a){return a+4}q3a.X=1;function k_(a,d){return c[a+3]+9*d}k_.X=1;function r3a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,80);0==(a|0)?d=0:(oZ(a,d,e,f,1),d=a);return d}r3a.X=1;function l2a(a){gM(a);c[a]=s3a+2}l2a.X=1;function t3a(){}t3a.X=1;function u3a(a){xe(a)}u3a.X=1;function v3a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,80);0==(a|0)?d=0:(oZ(a,d,e,f,0),d=a);return d}v3a.X=1;function k2a(a){QTa(a);c[a]=w3a+2}k2a.X=1;function x3a(){}x3a.X=1;function y3a(a){xe(a)}y3a.X=1;function z3a(a){xe(a)}z3a.X=1;function Y2a(a,d){ZW(a,d);c[a]=A3a+2}Y2a.X=1;function B3a(){}B3a.X=1;function C3a(a){xe(a)}C3a.X=1;function D3a(a){cZ(a);c[a]=E3a+2;c[a+1]=27}D3a.X=1;function F3a(a){xe(a)}F3a.X=1;function G3a(){}G3a.X=1;function H3a(a,d,e,f){var g=b;b+=15;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11;k[h]=v[c[c[a]+11]](a);k[i]=v[c[c[a]+11]](a);k[j]=v[c[c[a]+11]](a);H(g,h,i,j);N(l,d+12,g);c[e]=c[l];k[e]=k[l];c[e+1]=c[l+1];k[e+1]=k[l+1];c[e+2]=c[l+2];k[e+2]=k[l+2];c[e+3]=c[l+3];k[e+3]=k[l+3];wn(m,d+12,g);c[f]=c[m];k[f]=k[m];c[f+1]=c[m+1];k[f+1]=k[m+1];c[f+2]=c[m+2];k[f+2]=k[m+2];c[f+3]=c[m+3];k[f+3]=k[m+3];b=g}H3a.X=1;function I3a(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}I3a.X=1;function J3a(a,d,e){var f=b;b+=9;l_(f,c[a+3]+9*d);for(var g=c[a+3]+9*e,d=c[a+3]+9*d,h=g+9;g<h;g++,d++){c[d]=c[g],k[d]=k[g]}a=c[a+3]+9*e;g=f;d=a;for(h=g+9;g<h;g++,d++){c[d]=c[g],k[d]=k[g]}b=f}J3a.X=1;function m_(a){k[a]=3.4028234663852886e+38;k[a+1]=3.4028234663852886e+38;k[a+2]=3.4028234663852886e+38;k[a+4]=-3.4028234663852886e+38;k[a+4+1]=-3.4028234663852886e+38;k[a+4+2]=-3.4028234663852886e+38}m_.X=1;function n_(a){return c[a+1]}n_.X=1;function o_(a,d){k[a]=k[a]>k[d]?k[d]:k[a];k[a+1]=k[a+1]>k[d+1]?k[d+1]:k[a+1];k[a+2]=k[a+2]>k[d+2]?k[d+2]:k[a+2];k[a+4]=k[a+4]<k[d+4]?k[d+4]:k[a+4];k[a+4+1]=k[a+4+1]<k[d+4+1]?k[d+4+1]:k[a+4+1];k[a+4+2]=k[a+4+2]<k[d+4+2]?k[d+4+2]:k[a+4+2]}o_.X=1;function K3a(a,d,e){var f,g;f=n_(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(n_(a)|0)&&L3a(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+9*g;0!=(j|0)&&l_(j,e);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}K3a.X=1;function M3a(a,d){var e,f;k[a]>k[d+4]?e=8:k[a+4]<k[d]?e=8:k[a+1]>k[d+4+1]?e=8:k[a+4+1]<k[d+1]?e=8:k[a+2]>k[d+4+2]?e=8:k[a+4+2]<k[d+2]?e=8:(f=1,e=10);8==e&&(f=0);return f}M3a.X=1;function N3a(a,d){$1=a;return 0!=(d|0)?d<<1:1}N3a.X=1;function O3a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}O3a.X=1;function P3a(a){return c[a+2]}P3a.X=1;function p_(a,d){(rW(a)|0)==(LKa(a)|0)&&OKa(a,N3a(a,rW(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}p_.X=1;function Q3a(a,d,e){var f=b;b+=32;var g=f+16;uw(f,d);WW(g,f,e);xi(f,g);d=f+12;c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];Wb(a+4,f);R3a(a);b=f}Q3a.X=1;function L3a(a,d){var e;(P3a(a)|0)<(d|0)&&(e=S3a(a,d),T3a(a,0,n_(a),e),O3a(a,0,n_(a)),U3a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}L3a.X=1;function l_(a,d){V3a(a,d);c[a+8]=c[d+8]}l_.X=1;function V3a(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];var e=a+4,f=d+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3]}V3a.X=1;function S3a(a,d){return 0!=(d|0)?W3a(a,d,0):0}S3a.X=1;function T3a(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+9*d;0!=(i|0)&&l_(i,c[h]+9*d);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}T3a.X=1;function U3a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&X3a(a,c[a+3]),c[a+3]=0)}U3a.X=1;function X3a(a,d){$1=a;yh(d)}X3a.X=1;function W3a(a,d,e){$1=a;$3=e;return Ue(36*d,16)}W3a.X=1;function Y3a(a,d){$1=a;return 0!=(d|0)?d<<1:1}Y3a.X=1;function Z3a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Z3a.X=1;function $3a(a,d,e){c[a]=d;c[a+1]=e}$3a.X=1;function q_(a){return c[a+1]}q_.X=1;function a4a(a){return c[a+2]}a4a.X=1;function b4a(a,d){c[a]=c[d];c[a+1]=c[d+1]}b4a.X=1;function c4a(a,d,e){var f=b;b+=2;$3a(f,d,e);d4a(a,f);b=f}c4a.X=1;function d4a(a,d){(q_(a)|0)==(a4a(a)|0)&&e4a(a,Y3a(a,q_(a)));var e=(c[a+1]<<1)+c[a+3];0!=(e|0)&&b4a(e,d);e=a+1;c[e]+=1}d4a.X=1;function e4a(a,d){var e;(a4a(a)|0)<(d|0)&&(e=f4a(a,d),g4a(a,0,q_(a),e),Z3a(a,0,q_(a)),h4a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}e4a.X=1;function f4a(a,d){return 0!=(d|0)?i4a(a,d,0):0}f4a.X=1;function g4a(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;0!=(i|0)&&b4a(i,(d<<1)+c[h]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}g4a.X=1;function h4a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&j4a(a,c[a+3]),c[a+3]=0)}h4a.X=1;function j4a(a,d){$1=a;yh(d)}j4a.X=1;function i4a(a,d,e){$1=a;$3=e;return Ue(d<<3,16)}i4a.X=1;function k4a(a,d,e,f){var g=b;b+=20;var h,i,j=g+4,l=g+8,m=g+12,n=g+16,p,r,s,t,f=f&1;l4a(a,l,g);l4a(d,m,j);for(d=a=0;;){if(3<=(d|0)){h=7;break}k[n+a]=J((a<<2)+(e+4),m)+k[e+a]-k[l+a];d=J((a<<2)+(e+16),j)+k[g+a];if(sc(k[n+a])>d){i=0;h=22;break}a=d=a+1}a:do{if(7==h){for(d=a=0;3>(d|0);){d=m4a(e+4,n,a);p=m4a(e+16,g,a)+k[j+a];if(sc(d)>p){i=0;break a}a=d=a+1}a=f&1;b:do{if(a){d=a=0;c:for(;;){if(3<=(d|0)){break b}l=(a+1|0)%3;m=(a+2|0)%3;r=0==(a|0)?1:0;s=2==(a|0)?1:2;for(d=i=0;3>(d|0);){p=2==(i|0)?1:2;t=0==(i|0)?1:0;d=k[n+m]*k[(l<<2)+(e+4)+i]-k[n+l]*k[(m<<2)+(e+4)+i];p=k[g+r]*k[(s<<2)+(e+16)+i]+k[g+s]*k[(r<<2)+(e+16)+i]+k[j+t]*k[(a<<2)+(e+16)+p]+k[j+p]*k[(a<<2)+(e+16)+t];if(sc(d)>p){break c}i=d=i+1}a=d=a+1}i=0;break a}}while(0);i=1}}while(0);b=g;return i}k4a.X=1;function n4a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}n4a.X=1;function l4a(a,d,e){var f=b;b+=13;var g=f+4,h=f+8,i=f+9;wn(g,a+4,a);k[h]=.5;Q(f,g,h);c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];N(i,a+4,d);c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];c[e+2]=c[i+2];k[e+2]=k[i+2];c[e+3]=c[i+3];k[e+3]=k[i+3];b=f}l4a.X=1;function m4a(a,d,e){return k[d]*k[0+a+e]+k[d+1]*k[4+a+e]+k[d+2]*k[8+a+e]}m4a.X=1;function R3a(a){var d,e;d=0;for(var f=a+4,a=a+16;;){for(e=0;;){var g=sc(k[(d<<2)+f+e])+9.999999974752427e-7;k[(d<<2)+a+e]=g;e=g=e+1;if(3<=(g|0)){break}}d=e=d+1;if(3<=(e|0)){break}}}R3a.X=1;function o4a(a){O3a(a,0,n_(a));U3a(a);n4a(a)}o4a.X=1;function p4a(a,d,e,f){aX(a,d,e,f);c[a]=r_+2;c[a+3]=0;c[a+2]=0}p4a.X=1;function q4a(a){r4a(a);xe(a)}q4a.X=1;function r4a(a){c[a]=r_+2;s4a(a)}r4a.X=1;function s4a(a){t4a(a);u4a(a);a+=6;c[a]=-1;k[a]=-1;c[a+1]=-1;k[a+1]=-1;c[a+2]=-1;k[a+2]=-1;c[a+3]=-1;k[a+3]=-1}s4a.X=1;function s_(a,d,e,f,g,h){var i=c[a+4];v[c[c[i]+2]](i,c[a+7],c[a+6]);i=c[a+4];v[c[c[i]+3]](i,c[a+9],c[a+8]);v4a(a,d,e);a=c[a+4];v[c[c[a]+4]](a,g,f,h)}s_.X=1;function v4a(a,d,e){0==(t_(a)|0)&&w4a(a,d,e);fI(c[a+4],t_(a))}v4a.X=1;function x4a(a,d,e,f,g){var h,i;h=bi(d);i=bi(e);hi(d,f);hi(e,g);f=y4a(a,d,e);g=c[a+4];v[c[c[g]+2]](g,c[a+7],c[a+6]);g=c[a+4];v[c[c[g]+3]](g,c[a+9],c[a+8]);v[c[c[f]+2]](f,d,e,c[a+5],c[a+4]);v[c[c[f]]](f);a=c[a+1];v[c[c[a]+15]](a,f);hi(d,h);hi(e,i)}x4a.X=1;function y4a(a,d,e){v4a(a,d,e);var f=c[a+1];return v[c[c[f]+2]](f,d,e,t_(a))}y4a.X=1;function z4a(a,d,e,f,g){var h,i;h=bi(d);i=bi(e);hi(d,f);hi(e,g);f=c[a+4];v[c[c[f]+2]](f,c[a+7],c[a+6]);f=c[a+4];v[c[c[f]+3]](f,c[a+9],c[a+8]);A4a(a,d,e);f=c[a+2];v[c[c[f]+2]](f,d,e,c[a+5],c[a+4]);hi(d,h);hi(e,i)}z4a.X=1;function A4a(a,d,e){0==(c[a+2]|0)&&(c[a+2]=y4a(a,d,e))}A4a.X=1;function B4a(a,d,e,f,g,h){var i=b;b+=16;var j=i+8,l,m;$1=a;u_(f)?u_(g)?(C4a(f+17,d,g+17,e,h),a=12):a=5:a=5;a:do{if(5==a){l=f;var n=v[c[c[l]+21]](l);l=n-1;if(0!=(n|0)){for(var n=i,p=i+4,r=j,s=j+4;;){m=f;v[c[c[m]+29]](m,l,d,n,p);m=g;var t=v[c[c[m]+21]](m);m=t-1;t=0!=(t|0);b:do{if(t){for(;;){var w=g;v[c[c[w]+29]](w,l,e,r,s);M3a(j,i)&&c4a(h,l,m);w=m;m=w-1;if(0==(w|0)){break b}}}}while(0);m=l;l=m-1;if(0==(m|0)){break a}}}}}while(0);b=i}B4a.X=1;function u_(a){return 0==(c[a+17]|0)?0:1}u_.X=1;function D4a(a,d,e,f,g,h){var i=b;b+=33;var j=i+8,l=i+24,m=i+32;$1=a;a=u_(f);a:do{if(a){uw(j,d);E4a(j,e);var n=g;v[c[c[n]+2]](n,j,i,i+4);F4a(f+17,i,h)}else{if(n=g,v[c[c[n]+2]](n,e,i,i+4),n=f,n=v[c[c[n]+21]](n),c[m]=n-1,0!=(n|0)){for(var n=l,p=l+4;;){var r=f;v[c[c[r]+29]](r,c[m],d,n,p);M3a(i,l)&&p_(h,m);r=c[m];c[m]=r-1;if(0==(r|0)){break a}}}}}while(0);b=i}D4a.X=1;function E4a(a,d){var e=b;b+=4;Bo(e,a,d+12);xn(a+12,e);ld(a,d);b=e;return a}E4a.X=1;function G4a(a){EX(a)}G4a.X=1;function H4a(a,d,e,f,g,h,i){var j=b;b+=138;var l=j+16,m=j+32,n=j+50,p=j+68,r;sQ(j,d+1);sQ(l,e+1);v_(m);v_(n);v[c[c[f]+27]](f);v[c[c[g]+27]](g);var s=i,i=s-1,s=0!=(s|0);a:do{if(s){for(var t=a+6,w=a+8,x=a+6,y=a+8,z=p+1,A=p+6,C=p+2,B=p;;){c[t]=c[h];c[w]=c[h+1];h+=2;w_(f,c[x],m);w_(g,c[y],n);I4a(m,j);I4a(n,l);J4a(m);J4a(n);var K=K4a(m,n);b:do{if(K&&L4a(m,n,p)){var E=c[z];r=E-1;if(0!=(E|0)){for(;;){if(s_(a,d,e,(r<<2)+A,C,-k[B]),E=r,r=E-1,0==(E|0)){break b}}}}}while(0);r=i;i=r-1;if(0==(r|0)){break a}}}}while(0);v[c[c[f]+28]](f);v[c[c[g]+28]](g);b=j}H4a.X=1;function w_(a,d,e){a=v[c[c[a]+20]](a);v[c[c[a]+5]](a,d,e)}w_.X=1;function I4a(a,d){var e=b;b+=12;var f=e+4,g=e+8;vw(e,d,a);c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3];vw(f,d,a+4);var h=a+4;c[h]=c[f];k[h]=k[f];c[h+1]=c[f+1];k[h+1]=k[f+1];c[h+2]=c[f+2];k[h+2]=k[f+2];c[h+3]=c[f+3];k[h+3]=k[f+3];vw(g,d,a+8);f=a+8;c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];b=e}I4a.X=1;function J4a(a){var d=b;b+=13;var e=d+4,f=d+8,g=d+12;N(e,a+4,a);N(f,a+8,a);qn(d,e,f);IB(d);k[g]=J(a,d);$B(a+12,d,d+1,d+2,g);b=d}J4a.X=1;function M4a(a,d){return(d<<1)+c[a+3]}M4a.X=1;function x_(a){return y_(a+37)}x_.X=1;function z_(a,d){return c[A_(a+37,d)]}z_.X=1;function B_(a,d){var e=c[a+73];return v[c[c[e]]](e,d)}B_.X=1;function C_(a,d,e,f,g){var h=b;b+=249;var i,j=h+16,l=h+32,m=h+37,n=h+111,p,r,s,t,w=h+185,x=h+201,y=h+217,z=h+233,A=2==(v[c[c[f]+19]](f)|0);a:do{if(A){if(i=f,c[a+7]=x_(i),p=a+7,r=c[p],c[p]=r-1,0!=(r|0)){for(r=a+7;;){if(C_(a,d,e,z_(i,c[r]),g),s=c[p],c[p]=s-1,0==(s|0)){break a}}}}else{if(i=g,2==(v[c[c[i]+19]](i)|0)){if(i=g,c[a+9]=x_(i),p=a+9,r=c[p],c[p]=r-1,0!=(r|0)){for(r=a+9;;){if(C_(a,d,e,f,z_(i,c[r])),s=c[p],c[p]=s-1,0==(s|0)){break a}}}}else{sQ(h,d+1);sQ(j,e+1);N4a(l);B4a(a,h,j,f,g,l);i=0==(q_(l)|0);b:do{if(i){$8=1}else{p=f;p=1==(v[c[c[p]+19]](p)|0);do{if(p&&(r=g,1==(v[c[c[r]+19]](r)|0))){H4a(a,d,e,f,g,M4a(l,0),q_(l));$8=1;break b}}while(0);p=f;v[c[c[p]+27]](p);p=g;v[c[c[p]+27]](p);D_(m,f);D_(n,g);p=f;p=v[c[c[p]+22]](p)&1;r=g;r=v[c[c[r]+22]](r)&1;var C=l,B=a+6,K=a+8,E=a+6,G=a+8,M=a+6,L=a+8;for(t=q_(l);;){s=t-1;if(0==(t|0)){break}t=M4a(C,s);c[B]=c[t];c[K]=c[t+1];t=B_(m,c[E]);if(p&1){var F=f;v[c[c[F]+32]](x,F,c[M]);WW(w,h,x);Ji(d,w)}r&1&&(F=g,v[c[c[F]+32]](z,F,c[L]),WW(y,j,z),Ji(e,y));z4a(a,d,e,t,B_(n,c[G]));p&1&&Ji(d,h);r&1&&Ji(e,j);t=s}p=f;v[c[c[p]+28]](p);p=g;v[c[c[p]+28]](p);E_(n);E_(m);$8=0}}while(0);O4a(l)}}}while(0);b=h}C_.X=1;function F_(a,d,e,f,g,h){var i=b;b+=143;var j,l,m=i+16,n=i+32,p=i+37,r,s,t=i+111,w=i+127,h=h&1,x=2==(v[c[c[f]+19]](f)|0);a:do{if(x){j=f;l=h&1?a+9:a+7;c[l]=x_(j);var y=l,z=c[y];c[y]=z-1;if(0!=(z|0)){for(;;){if(F_(a,d,e,z_(j,c[l]),g,h&1),y=l,z=c[y],c[y]=z-1,0==(z|0)){break a}}}}else{j=1==(v[c[c[f]+19]](f)|0);do{if(j&&28==(Ie(g)|0)){P4a(a,d,e,f,g,h&1);break a}}while(0);j=g;if(Ge(g)){Q4a(a,d,e,f,j,h&1)}else{if(Uf(j)){R4a(a,d,e,f,g,h&1)}else{sQ(i,d+1);sQ(m,e+1);vW(n);D4a(a,i,m,f,g,n);if(0==(rW(n)|0)){$9=1}else{j=f;v[c[c[j]+27]](j);D_(p,f);j=f;j=v[c[c[j]+22]](j)&1;y=a+8;z=a+6;for(r=rW(n);;){l=r-1;if(0==(r|0)){break}s=r=c[QV(n,l)];h&1?c[y]=s:c[z]=s;s=B_(p,r);if(j&1){var A=f;v[c[c[A]+32]](w,A,r);WW(t,i,w);Ji(d,t)}h&1?x4a(a,e,d,g,s):x4a(a,d,e,s,g);j&1&&Ji(d,i);r=l}j=f;v[c[c[j]+28]](j);E_(p);$9=0}wW(n)}}}}while(0);b=i}F_.X=1;function S4a(){return 1}S4a.X=1;function T4a(a,d){c[a+7]=d}T4a.X=1;function U4a(a,d){c[a+6]=d}U4a.X=1;function V4a(a,d){c[a+9]=d}V4a.X=1;function P4a(a,d,e,f,g,h){var i=b;b+=56;var j=i+16,l=i+32,m=i+36,n=i+44,p=i+48,r,s=i+52,h=h&1;sQ(i,d+1);sQ(j,e+1);W4a(g,j,l);v[c[c[f]+2]](f,i,m,m+4);X4a(m,v[c[c[g]+11]](g));if(1==(Y4a(m,l)|0)){v[c[c[f]+27]](f);g=v[c[c[f]+11]](f)+v[c[c[g]+11]](g);m=Z4a(f);j=m-1;m=0!=(m|0);a:do{if(m){var t=n,w=p,x=l,y=l,z=l,A=l;for(r=f;;){$4a(r,j,n);vw(p,i,n);c[t]=c[w];k[t]=k[w];c[t+1]=c[w+1];k[t+1]=k[w+1];c[t+2]=c[w+2];k[t+2]=k[w+2];c[t+3]=c[w+3];k[t+3]=k[w+3];r=J(n,x)-k[y+3]-g;0>r&&(h&1?(WP(s,z),s_(a,e,d,n,s,r)):s_(a,d,e,n,A,r));r=j;var j=r-1,C=f;if(0==(r|0)){var B=C;break a}r=C}}else{B=f}}while(0);v[c[c[B]+28]](B)}b=i}P4a.X=1;function Q4a(a,d,e,f,g,h){var i=b;b+=32;var j,l,m=i+16,h=h&1;sQ(i,e+1);var n=el(g);j=n-1;n=0!=(n|0);a:do{if(n){for(;;){if(l=Yk(g,j),WW(m,i,al(g,j)),Ji(e,m),F_(a,d,e,f,l,h&1),Ji(e,i),l=j,j=l-1,0==(l|0)){break a}}}}while(0);b=i}Q4a.X=1;function R4a(a,d,e,f,g,h){var i=b;b+=63;var j=i+7,l=i+23,m=i+39,n=i+55,p=i+59,h=h&1;a5a(i);c[i+1]=a;c[i+2]=d;c[i+3]=e;c[i+4]=f;c[i+5]=h&1;k[i+6]=v[c[c[g]+11]](g);uw(m,e+1);WW(l,m,d+1);xi(j,l);v[c[c[f]+2]](f,j,n,p);v[c[c[g]+15]](g,i,n,p);b=i}R4a.X=1;function W4a(a,d,e){k[e]=J(0+d,a+12);k[e+1]=J(4+d,a+12);k[e+2]=J(8+d,a+12);k[e+3]=J(d+12,a+12)+k[a+16]}W4a.X=1;function X4a(a,d){k[a]-=d;var e=a+1;k[e]-=d;e=a+2;k[e]-=d;e=a+4;k[e]+=d;e=a+4+1;k[e]+=d;e=a+4+2;k[e]+=d}X4a.X=1;function Y4a(a,d){var e=b;b+=2;var f=e+1;b5a(a,d,e,f);f=k[d+3]>k[f]+9.999999974752427e-7?0:k[d+3]+9.999999974752427e-7>=k[e]?1:2;b=e;return f}Y4a.X=1;function Z4a(a){return c5a(a+36)}Z4a.X=1;function $4a(a,d,e){G_(a+36,d,e)}$4a.X=1;function d5a(){}d5a.X=1;function e5a(a,d,e,f,g){s4a(a);c[a+4]=g;c[a+5]=f;25==(Ie(bi(d))|0)?(f=bi(d),25==(Ie(bi(e))|0)?(g=bi(e),C_(a,d,e,f,g)):F_(a,d,e,f,bi(e),0)):25==(Ie(bi(e))|0)&&(g=bi(e),F_(a,e,d,g,bi(d),1))}e5a.X=1;function f5a(){}f5a.X=1;function g5a(a,d){0!=(c[a+3]|0)&&CX(d,a+3)}g5a.X=1;function h5a(a){xe(a)}h5a.X=1;function i5a(a,d,e,f){$1=a;a=c[d];a=v[c[c[a]+14]](a,40);0==(a|0)?d=0:(p4a(a,d,e,f),d=a);return d}i5a.X=1;function a5a(a){EY(a);c[a]=j5a+2}a5a.X=1;function k5a(a){xe(a)}k5a.X=1;function l5a(a,d,e,f){var g=b;b+=26;m5a(g,d,d+4,d+8);v[c[c[g]+10]](g,k[a+6]);d=c[a+1];c[a+5]&1?(T4a(d,e),U4a(c[a+1],f)):(V4a(d,e),n5a(c[a+1],f));F_(c[a+1],c[a+2],c[a+3],c[a+4],g,c[a+5]&1);EX(g);b=g}l5a.X=1;function n5a(a,d){c[a+8]=d}n5a.X=1;function c5a(a){return c[a+10]}c5a.X=1;function o5a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}o5a.X=1;function m5a(a,d,e,f){sZ(a,d,e,f);c[a]=H_+2}m5a.X=1;function p5a(a,d,e,f){var g=b;b+=20;var h=g+4,i=g+8,j=g+12;vw(g,d,a+14);vw(h,d,a+18);vw(i,d,a+22);q5a(j,g,h,i,k[a+11]);c[e]=c[j];k[e]=k[j];c[e+1]=c[j+1];k[e+1]=k[j+1];c[e+2]=c[j+2];k[e+2]=k[j+2];c[e+3]=c[j+3];k[e+3]=k[j+3];a=j+4;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];b=g}p5a.X=1;function q5a(a,d,e,f,g){k[a]=k[d]>(k[e]>k[f]?k[f]:k[e])?k[e]>k[f]?k[f]:k[e]:k[d];k[a+1]=k[d+1]>(k[e+1]>k[f+1]?k[f+1]:k[e+1])?k[e+1]>k[f+1]?k[f+1]:k[e+1]:k[d+1];k[a+2]=k[d+2]>(k[e+2]>k[f+2]?k[f+2]:k[e+2])?k[e+2]>k[f+2]?k[f+2]:k[e+2]:k[d+2];k[a+4]=k[d]<(k[e]<k[f]?k[f]:k[e])?k[e]<k[f]?k[f]:k[e]:k[d];k[a+4+1]=k[d+1]<(k[e+1]<k[f+1]?k[f+1]:k[e+1])?k[e+1]<k[f+1]?k[f+1]:k[e+1]:k[d+1];k[a+4+2]=k[d+2]<(k[e+2]<k[f+2]?k[f+2]:k[e+2])?k[e+2]<k[f+2]?k[f+2]:k[e+2]:k[d+2];k[a]-=g;d=a+1;k[d]-=g;d=a+2;k[d]-=g;d=a+4;k[d]+=g;d=a+4+1;k[d]+=g;a=a+4+2;k[a]+=g}q5a.X=1;function G_(a,d,e){d=c[a+9]+c[a+12]*d;k[e]=k[d]*k[a+3];k[e+1]=k[d+1]*k[a+3+1];k[e+2]=k[d+2]*k[a+3+2]}G_.X=1;function b5a(a,d,e,f){var g=b;b+=17;var h=g+4,i=g+8,j=g+9,l=g+13;wn(h,a+4,a);k[i]=.5;Q(g,h,i);N(j,a+4,g);a=J(d,g);GB(l,d);d=J(j,l);k[e]=a-d;k[f]=a+d;b=g}b5a.X=1;function O4a(a){Z3a(a,0,q_(a));h4a(a);o5a(a)}O4a.X=1;function r5a(){}r5a.X=1;function s5a(){}s5a.X=1;function t5a(){}t5a.X=1;function u5a(a){EX(a)}u5a.X=1;function v5a(a){EX(a);yh(a)}v5a.X=1;function E_(a){EX(a+27);EX(a+1)}E_.X=1;function w5a(){return D.ue}w5a.X=1;function I_(a){c[a]=x5a+2}I_.X=1;function A_(a,d){return c[a+3]+d}A_.X=1;function y_(a){return c[a+1]}y_.X=1;function t_(a){return c[a+3]}t_.X=1;function y5a(a){I_(a);c[a]=z5a+2}y5a.X=1;function A5a(a,d){var e=c[c[a+1]];v[c[c[e]+26]](e,d,c[a+1]+27);return c[a+1]+27}A5a.X=1;function B5a(a){xe(a)}B5a.X=1;function C5a(a,d){var e=c[c[a+1]];return v[c[c[e]+30]](e,d)}C5a.X=1;function D5a(a){xe(a)}D5a.X=1;function E5a(a){I_(a);c[a]=F5a+2}E5a.X=1;function G5a(a,d){var e=c[c[a+1]];v[c[c[e]+25]](e,d,c[a+1]+1);return c[a+1]+1}G5a.X=1;function H5a(a){xe(a)}H5a.X=1;function I5a(a){J5a(a);c[a]=K5a+2;c[a+23]=4}I5a.X=1;function v_(a){k[a+16]=.009999999776482582}v_.X=1;function L5a(a){var d=b;b+=21;var e=d+4,f=d+5,g=d+6,h=d+7,i=d+11,j=d+12,l=d+13,m=d+14,n=d+18,p=d+19,r=d+20;k[e]=0;k[f]=0;k[g]=0;H(d,e,f,g);k[i]=0;k[j]=0;k[l]=0;H(h,i,j,l);k[n]=0;k[p]=0;k[r]=0;H(m,n,p,r);sZ(a,d,h,m);c[a]=H_+2;b=d}L5a.X=1;function w4a(a,d,e){var f=c[a+1];c[a+3]=v[c[c[f]+3]](f,d,e);return c[a+3]}w4a.X=1;function t4a(a){if(0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3]);c[a+3]=0}}t4a.X=1;function u4a(a){if(0!=(c[a+2]|0)){var d=c[a+2];v[c[c[d]]](d);d=c[a+1];v[c[c[d]+15]](d,c[a+2]);c[a+2]=0}}u4a.X=1;function M5a(a,d,e){var f=b;b+=8;var g;m_(f);g=0;var h=(g|0)<(n_(d)|0);a:do{if(h){for(;;){if(o_(f,k_(d,g)),g+=1,(g|0)>=(n_(d)|0)){break a}}}}while(0);N5a(a+6,a+10,a+14,f,f+4,e);b=f}M5a.X=1;function N5a(a,d,e,f,g,h){var i=b;b+=28;var j=i+1,l=i+5,m=i+9,n=i+13,p=i+17,r=i+21,s=i+25,t=i+26,w=i+27;k[i]=h;H(j,i,i,i);N(l,f,j);c[a]=c[l];k[a]=k[l];c[a+1]=c[l+1];k[a+1]=k[l+1];c[a+2]=c[l+2];k[a+2]=k[l+2];c[a+3]=c[l+3];k[a+3]=k[l+3];wn(m,g,j);c[d]=c[m];k[d]=k[m];c[d+1]=c[m+1];k[d+1]=k[m+1];c[d+2]=c[m+2];k[d+2]=k[m+2];c[d+3]=c[m+3];k[d+3]=k[m+3];N(n,d,a);k[s]=65535;k[t]=65535;k[w]=65535;H(r,s,t,w);eX(p,r,n);c[e]=c[p];k[e]=k[p];c[e+1]=c[p+1];k[e+1]=k[p+1];c[e+2]=c[p+2];k[e+2]=k[p+2];c[e+3]=c[p+3];k[e+3]=k[p+3];b=i}N5a.X=1;function O5a(a,d,e,f){var g=b;b+=42;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13,r=g+14,s=g+18,t=g+19,w=g+23,x=g+24,y=g+28,z=g+29,A=g+33,C=g+37,B=g+41;$1=a;k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);h=f-e;a=e;i=(a|0)<(f|0);a:do{if(i){for(;;){if(k[s]=.5,wn(t,k_(d,a)+4,k_(d,a)),Q(r,t,s),xn(g,r),a+=1,(a|0)>=(f|0)){break a}}}}while(0);k[w]=1/(h|0);LC(g,w);a=e;e=(a|0)<(f|0);a:do{if(e){r=A;for(s=C;;){if(k[y]=.5,wn(z,k_(d,a)+4,k_(d,a)),Q(x,z,y),N(A,x,g),ig(C,A,A),c[r]=c[s],k[r]=k[s],c[r+1]=c[s+1],k[r+1]=k[s+1],c[r+2]=c[s+2],k[r+2]=k[s+2],c[r+3]=c[s+3],k[r+3]=k[s+3],xn(l,A),a+=1,(a|0)>=(f|0)){break a}}}}while(0);k[B]=1/((h|0)-1);LC(l,B);d=fC(l);b=g;return d}O5a.X=1;function D_(a,d){L5a(a+1);I5a(a+27);I_(a+67);E5a(a+69);y5a(a+71);c[a]=d;var e=c[a];v[c[c[e]+23]](e)?c[a+73]=a+69:(e=c[a],c[a+73]=v[c[c[e]+24]](e)?a+71:a+67);c[c[a+73]+1]=a}D_.X=1;function P5a(a){EX(a);yh(a)}P5a.X=1;function N4a(a){o5a(a);e4a(a,32)}N4a.X=1;function J_(a,d){return c[a+3]+7*d}J_.X=1;function Q5a(a,d){c[a+6]=d}Q5a.X=1;function R5a(a,d){c[a+6]=-d}R5a.X=1;function S5a(a,d,e,f,g){var h=b;b+=26;var i,j,l;i=h+4;var m=h+5,n=h+6;l=h+7;var p=h+11,r=h+12,s=h+16,t=h+17,w=h+21,x=h+22;$1=a;a=e;j=f-e;k[i]=0;k[m]=0;k[n]=0;H(h,i,m,n);i=e;m=(i|0)<(f|0);a:do{if(m){for(;;){if(k[p]=.5,wn(r,k_(d,i)+4,k_(d,i)),Q(l,r,p),xn(h,l),i+=1,(i|0)>=(f|0)){break a}}}}while(0);k[s]=1/(j|0);LC(h,s);l=k[h+g];i=e;p=(i|0)<(f|0);a:do{if(p){for(;;){if(k[w]=.5,wn(x,k_(d,i)+4,k_(d,i)),Q(t,x,w),k[t+g]>l&&(J3a(d,i,a),a+=1),i+=1,(i|0)>=(f|0)){break a}}}}while(0);d=(j|0)/3&-1;((a|0)<=(d+e|0)?1:(a|0)>=(f-1+ -d|0))&1&&(a=(j>>1)+e);b=h;return a}S5a.X=1;function K_(a,d,e,f){var g=b;b+=8;var h,i,j;h=c[a];c[a]+=1;if(1==(f-e|0)){L_(a,h,k_(d,e)),Q5a(J_(a+1,h),c[k_(d,e)+8])}else{i=O5a(a,d,e,f);i=S5a(a,d,e,f,i);m_(g);j=e;var l=(j|0)<(f|0);a:do{if(l){for(;;){if(o_(g,k_(d,j)),j+=1,(j|0)>=(f|0)){break a}}}}while(0);L_(a,h,g);K_(a,d,e,i);K_(a,d,i,f);R5a(J_(a+1,h),c[a]-h)}b=g}K_.X=1;function L_(a,d,e){M_(J_(a+1,d),e,a+6,a+10,a+14);M_(J_(a+1,d)+3,e+4,a+6,a+10,a+14)}L_.X=1;function T5a(a,d){var e=b;b+=7;M5a(a,d,1);c[a]=0;var f=n_(d)<<1;U5a(e);V5a(a+1,f,e);K_(a,d,0,n_(d));b=e}T5a.X=1;function V5a(a,d,e){var f,g;f=N_(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(N_(a)|0)&&W5a(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+7*g;if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3];c[j+4]=c[l+4];k[j+4]=k[l+4];c[j+5]=c[l+5];k[j+5]=k[l+5];c[j+6]=c[l+6];k[j+6]=k[l+6]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}V5a.X=1;function X5a(a){var d=b;b+=24;var e,f=d+8,g=d+16,h,i=c[a];e=i-1;i=0!=(i|0);a:do{if(i){for(var j=a+18;;){if(O_(a,e)){h=c[j],v[c[c[h]+4]](h,P_(a,e),d),L_(a,e,d)}else{m_(f);h=e+1;0!=(h|0)&&(Q_(a,h,g),o_(f,g));var l=R_(a,e);h=l;0!=(l|0)&&(Q_(a,h,g),o_(f,g));L_(a,e,f)}h=e;e=h-1;if(0==(h|0)){break a}}}}while(0);b=d}X5a.X=1;function F4a(a,d,e){var f=b;b+=7;var g,h,i,j=f+3,l,m=f+6;h=0;i=c[a];Y5a(a,f,d);Y5a(a,j,d+4);d=(h|0)<(i|0);a:do{if(d){for(var n=a,p=f,r=j;;){if(g=Z5a(n,h,p,r)&1,l=O_(a,h)&1,l&1&&g&1&&(c[m]=P_(a,h),p_(e,m)),g&1?g=9:l&1?g=9:(h+=$5a(a,h),g=11),9==g&&(h+=1),(h|0)>=(i|0)){break a}}}}while(0);a=0<(rW(e)|0)?1:0;b=f;return a}F4a.X=1;function Y5a(a,d,e){M_(d,e,a+6,a+10,a+14)}Y5a.X=1;function Z5a(a,d,e,f){return a6a(S_(a+1,d),e,f)}Z5a.X=1;function b6a(a){var d=b;b+=14;var e=d+5;n4a(d);for(var f=c[a+18],f=v[c[c[f]+3]](f),g=e,h=g+9;g<h;g++){c[g]=0,k[g]=0}K3a(d,f,e);e=0;for(f=a+18;(e|0)<(n_(d)|0);){g=c[f],v[c[c[g]+4]](g,e,k_(d,e)),c[k_(d,e)+8]=e,e+=1}T5a(a,d);o4a(d);b=d}b6a.X=1;function c6a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}c6a.X=1;function N_(a){return c[a+1]}N_.X=1;function d6a(a){return c[a+2]}d6a.X=1;function S_(a,d){return c[a+3]+7*d}S_.X=1;function e6a(a){return-c[a+6]}e6a.X=1;function a6a(a,d,e){var f;(c[a]&65535|0)>(c[e]&65535|0)?a=8:(c[a+3]&65535|0)<(c[d]&65535|0)?a=8:(c[a+1]&65535|0)>(c[e+1]&65535|0)?a=8:(c[a+4]&65535|0)<(c[d+1]&65535|0)?a=8:(c[a+2]&65535|0)>(c[e+2]&65535|0)?a=8:(c[a+5]&65535|0)<(c[d+2]&65535|0)?a=8:(f=1,a=10);8==a&&(f=0);return f}a6a.X=1;function f6a(a){return 0<=(c[a+6]|0)}f6a.X=1;function g6a(a){return c[a+6]}g6a.X=1;function U5a(a){c[a+6]=0}U5a.X=1;function C4a(a,d,e,f,g){var h=b;b+=28;0!=(c[a]|0)&&0!=(c[e]|0)&&(Q3a(h,d,f),T_(a,e,g,h,0,0,1));b=h}C4a.X=1;function T_(a,d,e,f,g,h,i){if(0!=(h6a(a,d,f,g,h,i&1)&1|0)){if(i=O_(d,h),O_(a,g)){i?c4a(e,P_(a,g),P_(d,h)):(T_(a,d,e,f,g,h+1,0),T_(a,d,e,f,g,R_(d,h),0))}else{var j=g+1;i?(T_(a,d,e,f,j,h,0),T_(a,d,e,f,R_(a,g),h,0)):(T_(a,d,e,f,j,h+1,0),T_(a,d,e,f,g+1,R_(d,h),0),T_(a,d,e,f,R_(a,g),h+1,0),T_(a,d,e,f,R_(a,g),R_(d,h),0))}}}T_.X=1;function W5a(a,d){var e;(d6a(a)|0)<(d|0)&&(e=i6a(a,d),j6a(a,0,N_(a),e),c6a(a,0,N_(a)),k6a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}W5a.X=1;function i6a(a,d){return 0!=(d|0)?l6a(a,d,0):0}i6a.X=1;function j6a(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+7*d;if(0!=(i|0)){var j=c[h]+7*d;c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];c[i+4]=c[j+4];k[i+4]=k[j+4];c[i+5]=c[j+5];k[i+5]=k[j+5];c[i+6]=c[j+6];k[i+6]=k[j+6]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}j6a.X=1;function k6a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&m6a(a,c[a+3]),c[a+3]=0)}k6a.X=1;function m6a(a,d){$1=a;yh(d)}m6a.X=1;function l6a(a,d,e){$1=a;$3=e;return Ue(d<<4,16)}l6a.X=1;function h6a(a,d,e,f,g,h){var i=b;b+=16;var j=i+8,h=h&1;Q_(a,f,i);Q_(d,g,j);a=k4a(i,j,e,h&1);b=i;return a}h6a.X=1;function $5a(a,d){return e6a(S_(a+1,d))}$5a.X=1;function M_(a,d,e,f,g){var h=b;b+=12;var i=h+4,j=h+8;c[h]=c[d];k[h]=k[d];c[h+1]=c[d+1];k[h+1]=k[d+1];c[h+2]=c[d+2];k[h+2]=k[d+2];c[h+3]=c[d+3];k[h+3]=k[d+3];gp(h,e);hp(h,f);N(j,h,e);ig(i,j,g);c[a]=Math.floor(k[i]+.5);c[a+1]=Math.floor(k[i+1]+.5);c[a+2]=Math.floor(k[i+2]+.5);b=h}M_.X=1;function R_(a,d){return f6a(S_(a+1,d+1))?d+2:d+e6a(S_(a+1,d+1))+1}R_.X=1;function Q_(a,d,e){var f=b;b+=8;var g=f+4;n6a(f,S_(a+1,d),a+6,a+14);c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];n6a(g,S_(a+1,d)+3,a+6,a+14);a=e+4;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];b=f}Q_.X=1;function n6a(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;k[g]=(c[d]&65535)/k[f];k[h]=(c[d+1]&65535)/k[f+1];k[i]=(c[d+2]&65535)/k[f+2];pe(a,g,h,i);xn(a,e);b=g}n6a.X=1;function P_(a,d){return g6a(S_(a+1,d))}P_.X=1;function O_(a,d){return f6a(S_(a+1,d))}O_.X=1;function o6a(){}o6a.X=1;function p6a(){return D.Ke}p6a.X=1;function q6a(){}q6a.X=1;function r6a(){return 25}r6a.X=1;function s6a(){return 0}s6a.X=1;function U_(a,d){return c[a+3]+d}U_.X=1;function V_(a,d){return(d<<4)+c[a+3]}V_.X=1;function t6a(a){return c[a+43]}t6a.X=1;function u6a(a,d){return c[a+3]+d}u6a.X=1;function v6a(a){return a+13}v6a.X=1;function w6a(a){c[a+12]=1}w6a.X=1;function x6a(a){return a+36}x6a.X=1;function y6a(a,d,e){var f=b;b+=15;var g=f+1,h=f+2,i=f+3,j=f+7,l=f+11;v[c[c[a]+27]](a);k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);h=g=v[c[c[a]+21]](a);d/=h|0;g=h-1;h=0!=(h|0);a:do{if(h){for(var m=a+43,n=a,p=a+38,r=j,s=l;;){var t=c[U_(m,g)];v[c[c[t]+8]](t,d,i);var w=t=e;v[c[c[n]+22]](a)?(z6a(j,w,i,V_(p,g)),c[t]=c[r],k[t]=k[r],c[t+1]=c[r+1],k[t+1]=k[r+1],c[t+2]=c[r+2],k[t+2]=k[r+2],c[t+3]=c[r+3],k[t+3]=k[r+3]):(Pz(),z6a(l,w,i,Rz),c[t]=c[s],k[t]=k[s],c[t+1]=c[s+1],k[t+1]=k[s+1],c[t+2]=c[s+2],k[t+2]=k[s+2],c[t+3]=c[s+3],k[t+3]=k[s+3]);t=g;g=t-1;if(0==(t|0)){break a}}}}while(0);v[c[c[a]+28]](a);b=f}y6a.X=1;function z6a(a,d,e,f){var g=b;b+=39;var h=g+12,i=g+24,j=g+36,l=g+37,m=g+38;Vb(h,f,e);ue(i,f);ww(g,h,i);e=k[f+12];e*=e;h=k[f+12+1];h*=h;i=k[f+12+2];i*=i;f=k[0+g]*(h+i);i=k[4+g+1]*(e+i);e=k[8+g+2]*(e+h);k[j]=k[d]+f;k[l]=k[d+1]+i;k[m]=k[d+2]+e;H(a,j,l,m);b=g}z6a.X=1;function A6a(a,d,e){var f=b;b+=11;var g=f+1,h=f+2,i=f+3,j=f+7;v[c[c[a]+27]](a);k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);h=g=Z4a(a);d/=h|0;g=h-1;h=0!=(h|0);a:do{if(h){for(var l=i,m=j;;){$4a(a,g,i);B6a(j,i,d);c[l]=c[m];k[l]=k[m];c[l+1]=c[m+1];k[l+1]=k[m+1];c[l+2]=c[m+2];k[l+2]=k[m+2];c[l+3]=c[m+3];k[l+3]=k[m+3];xn(e,i);var n=g,g=n-1;if(0==(n|0)){break a}}}}while(0);v[c[c[a]+28]](a);b=f}A6a.X=1;function B6a(a,d,e){var f=b;b+=3;var g,h,i=f+1,j=f+2;g=k[d]*k[d];h=k[d+1]*k[d+1];d=k[d+2]*k[d+2];k[f]=e*(h+d);k[i]=e*(g+d);k[j]=e*(g+h);H(a,f,i,j);b=f}B6a.X=1;function C6a(a,d,e){var f=b;b+=7;var g=f+1,h=f+2,i=f+3;k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);h=g=x_(a);d/=h|0;g=h-1;h=0!=(h|0);a:do{if(h){for(;;){var j=D6a(a,g);v[c[c[j]+8]](j,d,i);xn(e,i);j=g;g=j-1;if(0==(j|0)){break a}}}}while(0);b=f}C6a.X=1;function D6a(a,d){return c[u6a(a+37,d)]}D6a.X=1;function E6a(a,d,e,f){var g,h=y_(a+37);g=h-1;h=0!=(h|0);a:do{if(h){for(var i=a+37;;){var j=c[u6a(i,g)];v[c[c[j]+15]](j,d,e,f);j=g;g=j-1;if(0==(j|0)){break a}}}}while(0)}E6a.X=1;function F6a(a,d,e){HX(a,d,e);var f=c[a+36];v[c[c[f]+14]](f,d+6,e);k[d+20]=k[a+3];mc(a+13,d+16);c[d+21]=v[c[c[a]+19]](a);return D.we}F6a.X=1;function G6a(a){H6a(a)}G6a.X=1;function I6a(a){H6a(a);xe(a)}I6a.X=1;function J6a(a,d,e,f){var g=b;b+=8;V3a(g,a+4);K6a(g,d);c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];a=g+4;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];b=g}J6a.X=1;function L6a(a,d){var e=a+13;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];v[c[c[a]+17]](a)}L6a.X=1;function M6a(a,d){var e;k[a+3]=d;var f=v[c[c[a]+21]](a);e=f-1;f=0!=(f|0);a:do{if(f){for(var g=a;;){var h=v[c[c[g]+30]](a,e);v[c[c[h]+10]](h,d);h=e;e=h-1;if(0==(h|0)){break a}}}}while(0);c[a+12]=1}M6a.X=1;function N6a(a){var d=b;b+=8;v[c[c[a]+27]](a);var e=a+17;0==(c[a+17]|0)?b6a(e):X5a(e);v[c[c[a]+28]](a);O6a(d,a+17);a+=4;c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];c[a+4]=c[d+4];k[a+4]=k[d+4];c[a+5]=c[d+5];k[a+5]=k[d+5];c[a+6]=c[d+6];k[a+6]=k[d+6];c[a+7]=c[d+7];k[a+7]=k[d+7];b=d}N6a.X=1;function P6a(a){return CY(a+43)}P6a.X=1;function Q6a(a){return 0==(R6a(a+38)|0)?0:1}Q6a.X=1;function S6a(a,d,e,f){var g=b;b+=31;var h=g+8,i=g+13;v[c[c[a]+27]](a);c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];e=g+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];vW(h);F4a(a+17,g,h);if(0==(rW(h)|0)){v[c[c[a]+28]](a),$7=1}else{f=t6a(a);v_(i);for(var j=rW(h);;){e=j-1;if(0==(j|0)){break}w_(a,c[QV(h,e)],i);j=d;v[c[c[j]+2]](j,i,f,c[QV(h,e)]);j=e}v[c[c[a]+28]](a);$7=0}wW(h);b=g}S6a.X=1;function T6a(){return 0}T6a.X=1;function U6a(){return 0}U6a.X=1;function V6a(){}V6a.X=1;function W6a(){}W6a.X=1;function X6a(){}X6a.X=1;function Y6a(){}Y6a.X=1;function Z6a(){}Z6a.X=1;function $6a(){return D.ve}$6a.X=1;function a7a(){return 1}a7a.X=1;function b7a(){return 0}b7a.X=1;function c7a(){return 1}c7a.X=1;function d7a(){return 0}d7a.X=1;function e7a(){}e7a.X=1;function f7a(){return 0}f7a.X=1;function g7a(){return 0}g7a.X=1;function h7a(){}h7a.X=1;function i7a(){return D.Yd}i7a.X=1;function j7a(){return 64}j7a.X=1;function k7a(){return 2}k7a.X=1;function l7a(){return 0}l7a.X=1;function m7a(){return 0}m7a.X=1;function n7a(){return 0}n7a.X=1;function o7a(){return 0}o7a.X=1;function p7a(){return 0}p7a.X=1;function q7a(){}q7a.X=1;function r7a(){}r7a.X=1;function s7a(){}s7a.X=1;function t7a(){}t7a.X=1;function u7a(){}u7a.X=1;function v7a(){return 0}v7a.X=1;function w7a(){return 0}w7a.X=1;function x7a(){}x7a.X=1;function y7a(a){return a+39}y7a.X=1;function z7a(a){return k[a+37]}z7a.X=1;function A7a(a){return a+36}A7a.X=1;function B7a(a,d,e,f,g){var h=b;b+=16;var i=v[c[c[a]+22]](a),j=c[U_(a+43,d)],l=c[c[j]+2];if(i){WW(h,e,V_(a+38,d)),v[l](j,h,f,g)}else{v[l](j,e,f,g)}b=h}B7a.X=1;function C7a(a,d){return c[BY(a+43,d)]}C7a.X=1;function D7a(a,d){return c[U_(a+43,d)]}D7a.X=1;function E7a(a,d,e){sQ(a,V_(d+38,e))}E7a.X=1;function F7a(a,d,e){xi(G7a(a+38,d),e);v[c[c[a]+17]](a)}F7a.X=1;function H7a(a){W_(a)}H7a.X=1;function I7a(a){W_(a);xe(a)}I7a.X=1;function J7a(a,d){var e=a+39;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];v[c[c[a]+17]](a)}J7a.X=1;function K7a(a,d){k[a+37]=d;v[c[c[a]+17]](a)}K7a.X=1;function L7a(a){a+=36;return v[c[c[a]+3]](a)}L7a.X=1;function M7a(a,d,e){N7a(a+36,d,e)}M7a.X=1;function O7a(a){P7a(Q7a(a+17))}O7a.X=1;function R7a(a){S7a(Q7a(a+17))}R7a.X=1;function T7a(a,d,e,f,g){var h=b;b+=8;a=v[c[c[a]+20]](a);v[c[c[a]+4]](a,d,h);K6a(h,e);c[f]=c[h];k[f]=k[h];c[f+1]=c[h+1];k[f+1]=k[h+1];c[f+2]=c[h+2];k[f+2]=k[h+2];c[f+3]=c[h+3];k[f+3]=k[h+3];d=h+4;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];b=h}T7a.X=1;function U7a(a,d,e){$1=d;$2=e}U7a.X=1;function V7a(a){W7a(a)}V7a.X=1;function X7a(a){W7a(a);xe(a)}X7a.X=1;function Y7a(a,d){var e;e=a+13;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];var f=y_(a+37);e=f-1;f=0!=(f|0);a:do{if(f){for(var g=a+37;;){var h=c[A_(g,e)];v[c[c[h]+6]](h,d);h=e;e=h-1;if(0==(h|0)){break a}}}}while(0);c[a+12]=1}Y7a.X=1;function Z7a(a,d){var e;k[a+3]=d;var f=y_(a+37);e=f-1;f=0!=(f|0);a:do{if(f){for(var g=a+37;;){var h=c[A_(g,e)];v[c[c[h]+10]](h,d);h=e;e=h-1;if(0==(h|0)){break a}}}}while(0);c[a+12]=1}Z7a.X=1;function $7a(a){var d;m_(a+4);var e=y_(a+37);d=e-1;e=0!=(e|0);a:do{if(e){for(var f=a+37,g=a+4,h=a+37;;){a8a(c[A_(f,d)]);o_(g,c[A_(h,d)]+4);var i=d;d=i-1;if(0==(i|0)){break a}}}}while(0)}$7a.X=1;function b8a(a){var d,e=y_(a+37);d=e-1;e=0!=(e|0);a:do{if(e){for(var f=a+37;;){var g=c[A_(f,d)];v[c[c[g]+17]](g);g=d;d=g-1;if(0==(g|0)){break a}}}}while(0);c[a+12]=1}b8a.X=1;function c8a(a,d,e){$1=d;$2=e}c8a.X=1;function a8a(a){c[a+12]&1&&(v[c[c[a]+16]](a),c[a+12]=0)}a8a.X=1;function d8a(a){e8a(a,0,y_(a));f8a(a);g8a(a)}d8a.X=1;function W_(a){c[a]=h8a+2;i8a(a+17)}W_.X=1;function j8a(a){W_(a)}j8a.X=1;function k8a(a){W_(a);xe(a)}k8a.X=1;function i8a(a){l8a(a+1)}i8a.X=1;function l8a(a){c6a(a,0,N_(a));k6a(a);m8a(a)}l8a.X=1;function W7a(a){var d;c[a]=n8a+2;for(var e=a+37,f=y_(a+37);;){d=f-1;if(0==(f|0)){break}f=c[A_(e,d)];if(0!=(f|0)){v[c[c[f]+1]](f)}f=d}d8a(e);d8a(a+37);W_(a)}W7a.X=1;function e8a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}e8a.X=1;function o8a(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}o8a.X=1;function m8a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}m8a.X=1;function g8a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}g8a.X=1;function Q7a(a){return c[a+18]}Q7a.X=1;function p8a(a,d,e,f,g){d=c[a+13]+c[a+14]*d;3==(c[a+16]|0)?(c[e]=c[d]<<16>>16,c[f]=c[d+1]<<16>>16,c[g]=c[d+2]<<16>>16):(c[e]=c[d],c[f]=c[d+1],c[g]=c[d+2])}p8a.X=1;function G7a(a,d){return(d<<4)+c[a+3]}G7a.X=1;function R6a(a){return c[a+1]}R6a.X=1;function q8a(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}q8a.X=1;function f8a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&r8a(a,c[a+3]),c[a+3]=0)}f8a.X=1;function r8a(a,d){$1=a;yh(d)}r8a.X=1;function K6a(a,d){var e=b;b+=44;var f=e+4,g=e+8,h=e+9,i=e+13,j=e+17,l=e+21,m=e+25,n=e+26,p=e+30,r=e+31,s=e+35,t=e+36,w=e+40;wn(f,a+4,a);k[g]=.5;Q(e,f,g);N(h,a+4,e);vw(i,d,e);c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];c[e+2]=c[i+2];k[e+2]=k[i+2];c[e+3]=c[i+3];k[e+3]=k[i+3];GB(l,0+d);k[m]=J(h,l);GB(n,4+d);k[p]=J(h,n);GB(r,8+d);k[s]=J(h,r);H(j,m,p,s);N(t,e,j);c[a]=c[t];k[a]=k[t];c[a+1]=c[t+1];k[a+1]=k[t+1];c[a+2]=c[t+2];k[a+2]=k[t+2];c[a+3]=c[t+3];k[a+3]=k[t+3];wn(w,e,j);f=a+4;c[f]=c[w];k[f]=k[w];c[f+1]=c[w+1];k[f+1]=k[w+1];c[f+2]=c[w+2];k[f+2]=k[w+2];c[f+3]=c[w+3];k[f+3]=k[w+3];b=e}K6a.X=1;function S7a(a){if(0!=(c[a+8]|0)){if(1<(c[a+8]|0)){a+=8,c[a]-=1}else{var d=c[a+2];v[c[c[d]+6]](d,c[a+7]);c[a+9]=0;c[a+8]=0}}}S7a.X=1;function P7a(a){if(0<(c[a+8]|0)){a+=8,c[a]+=1}else{var d=c[a+2];v[c[c[d]+4]](d,a+9,a+10,a+11,a+12,a+13,a+14,a+15,a+16,c[a+7]);c[a+8]=1}}P7a.X=1;function N7a(a,d,e){var f=b;b+=3;p8a(a,d,f,f+1,f+2);G_(a,c[f],e+14);G_(a,c[f+1],e+18);G_(a,c[f+2],e+22);v[c[c[e]+10]](e,k[a+1]);b=f}N7a.X=1;function O6a(a,d){Q_(d,0,a)}O6a.X=1;function s8a(a){o8a(a,0,R6a(a));t8a(a);q8a(a)}s8a.X=1;function t8a(a){0!=(c[a+3]|0)&&(c[a+4]&1&&u8a(a,c[a+3]),c[a+3]=0)}t8a.X=1;function u8a(a,d){$1=a;yh(d)}u8a.X=1;function v8a(a){Bi(a);c[a]=X_+2;JW(a+64);c[a+58]=4}v8a.X=1;function Y_(a){c[a]=X_+2;TW(a+64)}Y_.X=1;function w8a(a,d,e){var f=b;b+=1;$3=e;c[f]=c[d];(dY(a+64,f)|0)==(Tl(a+64)|0)&&OW(a+64,f);b=f}w8a.X=1;function x8a(a,d,e,f){var g=b;b+=1;$3=e;$4=f;c[g]=c[d];d=dY(a+64,g);(d|0)<(Tl(a+64)|0)&&(c[$X(a+64,d)]=c[$X(a+64,Tl(a+64)-1)],eY(a+64));b=g}x8a.X=1;function H6a(a){c[a]=y8a+2;qTa(a+43);s8a(a+38);W_(a)}H6a.X=1;function z8a(a){Y_(a);yh(a)}z8a.X=1;function A8a(a){v8a(a);c[a]=Z_+2;var d=Ue(76,16);0==(d|0)?d=0:dX(d);c[a+69]=d}A8a.X=1;function B8a(a){C8a(a);yh(a)}B8a.X=1;function C8a(a){c[a]=Z_+2;var d=c[a+69];v[c[c[d]]](d);yh(c[a+69]);Y_(a)}C8a.X=1;function D8a(a,d){return c[a+3]+d}D8a.X=1;function E8a(a,d,e){var f=b;b+=1;e=0!=(e|0)?e:ci(a);c[f]=c[d];(dY(a+64,f)|0)==(Tl(a+64)|0)&&(OW(a+64,f),a=c[a+69],v[c[c[a]+2]](a,e,d));b=f}E8a.X=1;function F8a(a,d,e,f){var g=b;b+=1;var h;c[g]=c[d];f=0!=(f|0)?f:ci(a);h=dY(a+64,g);(h|0)<(Tl(a+64)|0)&&(c[$X(a+64,h)]=c[$X(a+64,Tl(a+64)-1)],eY(a+64),a=c[a+69],v[c[c[a]+3]](a,f,d,e));b=g}F8a.X=1;function $_(a,d,e,f,g,h){var i=b;b+=81;var j=i+16,l=i+32,m=i+36,n=i+40,p=i+44,r=i+48,s=i+64,t=i+68,w=i+72,x=i+76,y=i+77;xi(i,e);xi(j,f);xY(i,j,1,n,p);eQ(r);dc(i,s);zb(r,s);Tf(d,r,n,p,1,l,m);n=0;r=a+64;s=(n|0)<(Tl(r)|0);a:do{if(s){for(var z=a+64;;){var p=c[D8a(z,n)],A=g;v[c[c[A]+2]](A,ci(p))&&(A=bi(p),v[c[c[A]+2]](A,p+1,t,w),G8a(t,w,l,m),k[x]=1,H8a(e+12,f+12,t,w,x,y)&&Dm(d,i,j,p,bi(p),p+1,g,h));n+=1;if((n|0)>=(Tl(r)|0)){break a}}}}while(0);b=i}$_.X=1;function G8a(a,d,e,f){var g=b;b+=8;var h=g+4;wn(g,a,e);c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];wn(h,d,f);c[d]=c[h];k[d]=k[h];c[d+1]=c[h+1];k[d+1]=k[h+1];c[d+2]=c[h+2];k[d+2]=k[h+2];c[d+3]=c[h+3];k[d+3]=k[h+3];b=g}G8a.X=1;function H8a(a,d,e,f,g,h){var i=b;b+=42;var j,l=i+4,m=i+8,n=i+9,p=i+13,r=i+17,s=i+18,t=i+22,w=i+26,x=i+27,y=i+31,z=i+35,A=i+36,C=i+37,B=i+38,K=i+39,E=i+40,G=i+41;N(l,f,e);k[m]=.5;Q(i,l,m);wn(p,f,e);k[r]=.5;Q(n,p,r);N(s,a,n);N(t,d,n);a=I8a(s,i);d=I8a(t,i);e=0==(d&a|0);do{if(e){f=0;k[w]=k[g];N(x,t,s);l=1;k[z]=0;k[A]=0;k[C]=0;H(y,z,A,C);m=1;for(n=0;;){for(p=0;!(0!=(m&a|0)?(r=(-k[s+p]-k[i+p]*l)/k[x+p],f<=r&&(f=r,k[B]=0,k[K]=0,k[E]=0,pe(y,B,K,E),k[y+p]=l)):0!=(m&d|0)&&(k[G]=(-k[s+p]-k[i+p]*l)/k[x+p],BB(w,G)),m<<=1,p=r=p+1,3==(r|0));){}l=-1;n=p=n+1;if(2<=(p|0)){break}}f<=k[w]?(k[g]=f,j=h,f=y,c[j]=c[f],k[j]=k[f],c[j+1]=c[f+1],k[j+1]=k[f+1],c[j+2]=c[f+2],k[j+2]=k[f+2],c[j+3]=c[f+3],k[j+3]=k[f+3],j=1,f=15):f=14}else{f=14}}while(0);14==f&&(j=0);b=i;return j}H8a.X=1;function I8a(a,d){return(k[a]>k[d]?8:0)|(k[a]<-k[d]?1:0)|(k[a+1]<-k[d+1]?2:0)|(k[a+1]>k[d+1]?16:0)|(k[a+2]<-k[d+2]?4:0)|(k[a+2]>k[d+2]?32:0)}I8a.X=1;function lZ(a,d,e,f){bZ(a);c[a]=J8a+2;c[a+1]=f;c[a+2]=d;c[a+3]=e}lZ.X=1;function mZ(a,d,e,f,g,h){var i=b;b+=118;var j,l=i+4,m=i+8,n=i+12,p=i+20,r=i+21,s=i+22,t=i+23,w=i+27,x=i+28,y=i+29,z=i+30,A=i+34,C=i+38,B=i+54,K=i+65,E=i+84;fZ(c[a+1]);N(m,e+12,d+12);c[i]=c[m];k[i]=k[m];c[i+1]=c[m+1];k[i+1]=k[m+1];c[i+2]=c[m+2];k[i+2]=k[m+2];c[i+3]=c[m+3];k[i+3]=k[m+3];N(n,g+12,f+12);c[l]=c[n];k[l]=k[n];c[l+1]=c[n+1];k[l+1]=k[n+1];c[l+2]=c[n+2];k[l+2]=k[n+2];c[l+3]=c[n+3];k[l+3]=k[n+3];m=0;k[p]=1;k[r]=0;k[s]=0;H(i+16,p,r,s);k[w]=0;k[x]=0;k[y]=0;pe(t,w,x,y);N(A,i,l);l=m;p=0;eQ(C);hZ(B);kZ(K,c[a+2],c[a+3],c[a+1],0);QQ(E);xi(E,d);xi(E+16,f);gZ(K,E,B,0,0);a=c[B+10]&1;C=B+5;c[z]=c[C];k[z]=k[C];c[z+1]=c[C+1];k[z+1]=k[C+1];c[z+2]=c[C+2];k[z+2]=k[C+2];c[z+3]=c[C+3];k[z+3]=k[C+3];a&=1;a:do{if(a){C=k[B+9];r=t;s=B+1;c[r]=c[s];k[r]=k[s];c[r+1]=c[s+1];k[r+1]=k[s+1];c[r+2]=c[s+2];k[r+2]=k[s+2];c[r+3]=c[s+3];k[r+3]=k[s+3];for(var r=E,s=E+16,w=B,x=B+10,y=B+9,n=z,G=B+5,M=t,L=B+1,F=B+9;;){if(.0010000000474974513<C){p+=1;if(32<(p|0)){j=0;$18=1;break a}C/=J(A,t);m-=C;if(1<m){j=0;$18=1;break a}if(0>m){j=0;$18=1;break a}if(m<=l){j=0;$18=1;break a}l=m;C=h;v[c[c[C]]](C,m);yB(r+12,d+12,e+12,m);yB(s+12,f+12,g+12,m);gZ(K,E,w,0,0);if(!(c[x]&1)){j=0;$18=1;break a}if(0>k[y]){k[h+41]=l;z=t;d=B+1;c[z]=c[d];k[z]=k[d];c[z+1]=c[d+1];k[z+1]=k[d+1];c[z+2]=c[d+2];k[z+2]=k[d+2];c[z+3]=c[d+3];k[z+3]=k[d+3];z=h+33;c[z]=c[t];k[z]=k[t];c[z+1]=c[t+1];k[z+1]=k[t+1];c[z+2]=c[t+2];k[z+2]=k[t+2];c[z+3]=c[t+3];k[z+3]=k[t+3];h+=37;B+=5;c[h]=c[B];k[h]=k[B];c[h+1]=c[B+1];k[h+1]=k[B+1];c[h+2]=c[B+2];k[h+2]=k[B+2];c[h+3]=c[B+3];k[h+3]=k[B+3];$18=j=1;break a}c[n]=c[G];k[n]=k[G];c[n+1]=c[G+1];k[n+1]=k[G+1];c[n+2]=c[G+2];k[n+2]=k[G+2];c[n+3]=c[G+3];k[n+3]=k[G+3];c[M]=c[L];k[M]=k[L];c[M+1]=c[L+1];k[M+1]=k[L+1];c[M+2]=c[L+2];k[M+2]=k[L+2];c[M+3]=c[L+3];k[M+3]=k[L+3];C=k[F]}else{if(J(t,A)>=-k[h+43]){j=0;$18=1;break a}k[h+41]=m;B=h+33;c[B]=c[t];k[B]=k[t];c[B+1]=c[t+1];k[B+1]=k[t+1];c[B+2]=c[t+2];k[B+2]=k[t+2];c[B+3]=c[t+3];k[B+3]=k[t+3];h+=37;B=z;c[h]=c[B];k[h]=k[B];c[h+1]=c[B+1];k[h+1]=k[B+1];c[h+2]=c[B+2];k[h+2]=k[B+2];c[h+3]=c[B+3];k[h+3]=k[B+3];$18=j=1;break a}}}else{j=0,$18=1}}while(0);b=i;return j}mZ.X=1;function K8a(a){xe(a)}K8a.X=1;function L8a(a,d,e,f,g,h){var i=b;b+=175;var j=i+32,l=i+127,m=i+131,n=i+132,p=i+133,r=i+134,s=i+138,t=i+139,w=i+140,x=i+141,y=i+142,z=i+146,A=i+150,C=i+154,B=i+158,K=i+162,E=i+166,G=i+170,M=i+174;M8a(a,d,e,f,h,i,0);N8a(j);a=O8a(j,i,g);if(0==(a|0)){k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);k[s]=0;k[t]=0;k[w]=0;H(r,s,t,w);m=0;n=j+93;p=m>>>0<c[c[n]+8]>>>0;a:do{if(p){s=j+93;t=j+93;for(w=j+93;;){if(k[x]=k[c[s]+m+4],a0(z,i,c[c[t]+m],0),Q(y,z,x),xn(l,y),WP(B,c[c[w]+m]),a0(C,i,B,1),Q(A,C,x),xn(r,A),m+=1,m>>>0>=c[c[n]+8]>>>0){break a}}}}while(0);vw(K,d,l);j=h+1;c[j]=c[K];k[j]=k[K];c[j+1]=c[K+1];k[j+1]=k[K+1];c[j+2]=c[K+2];k[j+2]=k[K+2];c[j+3]=c[K+3];k[j+3]=k[K+3];vw(E,d,r);d=h+5;c[d]=c[E];k[d]=k[E];c[d+1]=c[E+1];k[d+1]=k[E+1];c[d+2]=c[E+2];k[d+2]=k[E+2];c[d+3]=c[E+3];k[d+3]=k[E+3];N(G,l,r);l=h+9;c[l]=c[G];k[l]=k[G];c[l+1]=c[G+1];k[l+1]=k[G+1];c[l+2]=c[G+2];k[l+2]=k[G+2];c[l+3]=c[G+3];k[l+3]=k[G+3];k[h+13]=JB(h+9);k[M]=9999999747378752e-20<k[h+13]?k[h+13]:1;KB(h+9,M);h=1}else{c[h]=1==(a|0)?1:2,h=0}b=i;return h}L8a.X=1;function M8a(a,d,e,f,g,h,i){var j=b;b+=35;var l=j+4,m=j+5,n=j+6,p=j+7,r=j+19,i=i&1;k[l]=0;k[m]=0;k[n]=0;H(j,l,m,n);l=g+5;c[l]=c[j];k[l]=k[j];c[l+1]=c[j+1];k[l+1]=k[j+1];c[l+2]=c[j+2];k[l+2]=k[j+2];c[l+3]=c[j+3];k[l+3]=k[j+3];P8a(g+1,j);c[g]=0;c[h]=a;c[h+1]=e;bc(p,f,d);Wb(h+2,p);$P(r,d,f);xi(h+14,r);Q8a(h,i&1);b=j}M8a.X=1;function O8a(a,d,e){var f=b;b+=49;var g,h,i=f+1,j;h=f+17;var l=f+21,m=f+22,n=f+23,p,r,s,t,w=f+24,x,y,z,A=f+28,C=f+32,B=f+33,K=f+37,E=f+38,G=f+42,M=f+43,L=f+44,F=f+45;g=0;j=k[f]=0;c[a+87]=a+55;c[a+88]=a+63;c[a+89]=a+71;c[a+90]=a+79;c[a+91]=4;c[a+92]=0;c[a+94]=0;R8a(a,d);k[a+36]=0;c[a+45]=0;d=a+32;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];e=Um(a+32);0<e?WP(h,a+32):(k[l]=1,k[m]=0,k[n]=0,H(h,l,m,n));b0(a,a+37,h);k[a+41]=1;h=a+32;l=c[a+37]+4;c[h]=c[l];k[h]=k[l];c[h+1]=c[l+1];k[h+1]=k[l+1];c[h+2]=c[l+2];k[h+2]=k[l+2];c[h+3]=c[l+3];k[h+3]=k[l+3];h=e;l=i+8;m=i+12;n=a+32;c[m]=c[n];k[m]=k[n];c[m+1]=c[n+1];k[m+1]=k[n+1];c[m+2]=c[n+2];k[m+2]=k[n+2];c[m+3]=c[n+3];k[m+3]=k[n+3];P8a(l,n);m=i+4;c[m]=c[l];k[m]=k[l];c[m+1]=c[l+1];k[m+1]=k[l+1];c[m+2]=c[l+2];k[m+2]=k[l+2];c[m+3]=c[l+3];k[m+3]=k[l+3];P8a(i,l);for(var l=a+92,m=a+92,n=a+37,e=a+37,d=a+32,I=a+32,R=a+32,O=a+32,Z=a+92,P=a+94,S=a+94,da=a+94,V=a+32,ba=a+91,$=a+87;;){p=1-c[l];r=n+9*c[m];s=e+9*p;t=x=JB(d);if(9999999747378752e-20>x){c[a+94]=1;break}WP(w,I);b0(a,r,w);x=c[r+(c[r+8]-1)]+4;for(var Y=z=y=0;4>Y>>>0;){N(A,x,(z<<2)+i);if(9999999747378752e-20>Um(A)){y=1;break}z=Y=z+1}if(y&1){c0(a,a+9*c[a+92]+37);break}j=y=j+1&3;y=(y<<2)+i;z=x;c[y]=c[z];k[y]=k[z];c[y+1]=c[z+1];k[y+1]=k[z+1];c[y+2]=c[z+2];k[y+2]=k[z+2];c[y+3]=c[z+3];k[y+3]=k[z+3];k[C]=J(R,x)/t;k[f]=k[d0(C,f)];if(0>=t-k[f]-9999999747378752e-20*t){c0(a,a+9*c[a+92]+37);break}c[K]=0;t=c[r+8];2==(t|0)?h=t=S8a(c[r]+4,c[r+1]+4,B,K):3==(t|0)?h=t=T8a(c[r]+4,c[r+1]+4,c[r+2]+4,B,K):4==(t|0)?h=t=U8a(c[r]+4,c[r+1]+4,c[r+2]+4,c[r+3]+4,B,K):t=h;if(!(0<=t)){c0(a,a+9*c[a+92]+37);break}c[s+8]=0;k[G]=0;k[M]=0;k[L]=0;H(E,G,M,L);c[O]=c[E];k[O]=k[E];c[O+1]=c[E+1];k[O+1]=k[E+1];c[O+2]=c[E+2];k[O+2]=k[E+2];c[O+3]=c[E+3];k[O+3]=k[E+3];c[Z]=p;p=0;t=c[r+8];x=p>>>0<t>>>0;y=c[K];a:do{if(x){for(Y=y;;){z=c[r+p];if(0!=(1<<p&Y|0)){c[s+c[s+8]]=z;z=k[B+p];var Y=s+8,la=c[Y];c[Y]=la+1;k[s+(la+4)]=z;Q(F,c[r+p]+4,B+p);xn(V,F)}else{Y=c[ba],c[ba]=Y+1,c[$+Y]=z}p+=1;z=c[K];if(p>>>0>=t>>>0){var ka=z;break a}Y=z}}else{ka=y}}while(0);15==(ka|0)&&(c[P]=1);g=r=g+1;if(128<=r>>>0){c[da]=2;break}r=c[S];c[da]=r;if(0!=(r|0)){break}}c[a+93]=a+9*c[a+92]+37;g=c[a+94];0==(g|0)?k[a+36]=JB(a+32):1==(g|0)&&(k[a+36]=0);a=c[a+94];b=f;return a}O8a.X=1;function a0(a,d,e,f){0!=(f|0)?V8a(a,d,e):W8a(a,d,e)}a0.X=1;function X8a(a,d,e,f,g,h,i){var j=b;b+=3006;var l,m=j+32,n=j+127,p=j+131,r=j+2967,s=j+2971,t=j+2975,w=j+2976,x=j+2977,y=j+2978,z=j+2982,A=j+2986,C=j+2990,B=j+2994,K=j+2998,E=j+3002;M8a(a,d,e,f,h,j,i&1);N8a(m);WP(n,g);a=O8a(m,j,n);do{if(1==(a|0)){if(Y8a(p),WP(r,g),9!=(Z8a(p,m,r)|0)){k[t]=0;k[w]=0;k[x]=0;H(s,t,w,x);l=0;e=p+9;f=l>>>0<c[e]>>>0;a:do{if(f){i=p+1;for(n=p+5;;){if(a0(z,j,c[i+l],0),Q(y,z,n+l),xn(s,y),l+=1,l>>>0>=c[e]>>>0){break a}}}}while(0);c[h]=1;vw(A,d,s);l=h+1;e=A;c[l]=c[e];k[l]=k[e];c[l+1]=c[e+1];k[l+1]=k[e+1];c[l+2]=c[e+2];k[l+2]=k[e+2];c[l+3]=c[e+3];k[l+3]=k[e+3];Q(K,p+10,p+14);N(B,s,K);vw(C,d,B);l=h+5;e=C;c[l]=c[e];k[l]=k[e];c[l+1]=c[e+1];k[l+1]=k[e+1];c[l+2]=c[e+2];k[l+2]=k[e+2];c[l+3]=c[e+3];k[l+3]=k[e+3];WP(E,p+10);l=h+9;e=E;c[l]=c[e];k[l]=k[e];c[l+1]=c[e+1];k[l+1]=k[e+1];c[l+2]=c[e+2];k[l+2]=k[e+2];c[l+3]=c[e+3];k[l+3]=k[e+3];k[h+13]=-k[p+14];l=1;e=11}else{c[h]=3,e=10}}else{2==(a|0)&&(c[h]=2),e=10}}while(0);10==e&&(l=0);b=j;return l}X8a.X=1;function Z8a(a,d,e){var f=b;b+=93;var g,h,i,j=f+4,l=f+8,m=f+12,n=f+16,p,r=f+34,s,t,w,x=f+37,y=f+41,z=f+45,A=f+49,C=f+53,B=f+57,K=f+61,E=f+65,G=f+69,M=f+73,L=f+77,F=f+81,I=f+82,R=f+86,O=f+90,Z=f+91,P=f+92;i=c[d+93];var S=1<c[i+8]>>>0;do{if(S){if(e0(d)){p=a+2832;var da=0!=(c[p]|0);a:do{if(da){for(var V=a+2832,ba=a+2832,$=a+2834;;){if(g=c[V],f0(ba,g),g0($,g),0==(c[p]|0)){break a}}}}while(0);c[a]=0;c[a+2831]=0;N(f,c[i]+4,c[i+3]+4);N(j,c[i+1]+4,c[i+3]+4);N(l,c[i+2]+4,c[i+3]+4);0>h0(f,j,l)&&($8a(i,i+1),a9a(i+4,i+5));g=m;c[g]=i0(a,c[i],c[i+1],c[i+2],1);g+=1;c[g]=i0(a,c[i+1],c[i],c[i+3],1);g+=1;c[g]=i0(a,c[i+2],c[i+1],c[i+3],1);c[g+1]=i0(a,c[i],c[i+2],c[i+3],1);if(4!=(c[a+2833]|0)){g=27}else{s=h=b9a(a);t=n;for(w=s+18;s<w;s++,t++){c[t]=c[s],k[t]=k[s]}p=g=0;j0(c[m],0,c[m+1],0);j0(c[m],1,c[m+2],0);j0(c[m],2,c[m+3],0);j0(c[m+1],1,c[m+3],2);j0(c[m+1],2,c[m+2],1);j0(c[m+2],2,c[m+3],1);c[a]=0;var da=a+2831,V=a+2831,ba=a+15,$=r+2,Y=r,la=r+1,ka=a+2832,ja=a+2834,ea=n+5,ca=n;s=p;a:for(;255>s>>>0;){if(64<=c[da]>>>0){c[a]=6;break}c9a(r);s=c[V];c[V]=s+1;s=(s<<3)+ba;t=1;g=w=g+1;c[h+17]=w&255;d9a(d,h,s);if(9999999747378752e-20<J(h,s+4)-k[h+4]){for(var W=w=0;3>W>>>0&&t&1;){t=0!=(t&1&k0(a,g,s,c[h+(w+9)],c[h+(w+14)]&255,r)&1|0)&1,w=W=w+1}s=t&1;do{if(s&&3<=c[$]>>>0){j0(c[Y],1,c[la],2);f0(ka,h);g0(ja,h);h=b9a(a);if(k[h+5]>=k[ea]){s=h;t=ca;for(w=s+18;s<w;s++,t++){c[t]=c[s],k[t]=k[s]}}p=s=p+1;continue a}}while(0);c[a]=4;break}c[a]=7;break}Q(x,n,n+4);h=a+10;g=n;c[h]=c[g];k[h]=k[g];c[h+1]=c[g+1];k[h+1]=k[g+1];c[h+2]=c[g+2];k[h+2]=k[g+2];c[h+3]=c[g+3];k[h+3]=k[g+3];k[a+14]=k[n+4];c[a+9]=3;c[a+1]=c[n+6];c[a+2]=c[n+7];c[a+3]=c[n+8];N(y,c[n+7]+4,x);N(z,c[n+8]+4,x);qn(A,y,z);k[a+5]=JB(A);N(C,c[n+8]+4,x);N(B,c[n+6]+4,x);qn(K,C,B);k[a+6]=JB(K);N(E,c[n+6]+4,x);N(G,c[n+7]+4,x);qn(M,E,G);k[a+7]=JB(M);h=k[a+5]+k[a+6]+k[a+7];g=a+5;k[g]/=h;g=a+6;k[g]/=h;g=a+7;k[g]/=h;h=c[a];g=31}}else{g=27}}else{g=27}}while(0);27==g&&(c[a]=8,WP(L,e),d=a+10,c[d]=c[L],k[d]=k[L],c[d+1]=c[L+1],k[d+1]=k[L+1],c[d+2]=c[L+2],k[d+2]=k[L+2],c[d+3]=c[L+3],k[d+3]=k[L+3],L=JB(a+10),k[F]=L,d=a+10,0<L?(wC(I,a+10,F),c[d]=c[I],k[d]=k[I],c[d+1]=c[I+1],k[d+1]=k[I+1],c[d+2]=c[I+2],k[d+2]=k[I+2],c[d+3]=c[I+3],k[d+3]=k[I+3]):(k[O]=1,k[Z]=0,k[P]=0,H(R,O,Z,P),c[d]=c[R],k[d]=k[R],c[d+1]=c[R+1],k[d+1]=k[R+1],c[d+2]=c[R+2],k[d+2]=k[R+2],c[d+3]=c[R+3],k[d+3]=k[R+3]),k[a+14]=0,c[a+9]=1,c[a+1]=c[i],k[a+5]=1,h=c[a]);b=f;return h}Z8a.X=1;function $8a(a,d){var e;e=c[a];c[a]=c[d];c[d]=e}$8a.X=1;function a9a(a,d){var e;e=k[a];k[a]=k[d];k[d]=e}a9a.X=1;function f0(a,d){0!=(c[d+13]|0)&&(c[c[d+13]+12]=c[d+12]);0!=(c[d+12]|0)&&(c[c[d+12]+13]=c[d+13]);(d|0)==(c[a]|0)&&(c[a]=c[d+13]);var e=a+1;c[e]-=1}f0.X=1;function g0(a,d){c[d+12]=0;c[d+13]=c[a];0!=(c[a]|0)&&(c[c[a]+12]=d);c[a]=d;var e=a+1;c[e]+=1}g0.X=1;function b9a(a){var d,e,f,g,a=c[a+2832];d=k[a+4]*k[a+4];e=k[a+5];var h=c[a+13];f=h;h=0!=(h|0);a:do{if(h){for(;;){if(g=k[f+4]*k[f+4],k[f+5]>=e&&g<d&&(a=f,d=g,e=k[f+5]),f=g=c[f+13],0==(g|0)){break a}}}}while(0);return a}b9a.X=1;function j0(a,d,e,f){c[a+(d+14)]=f&255;c[a+(d+9)]=e;c[e+(f+14)]=d&255;c[e+(f+9)]=a}j0.X=1;function e0(a){var d=b;b+=58;var e,f,g,h=d+4,i=d+5,j=d+6,l=d+7,m=d+11,n=d+15,p=d+19,r=d+20,s=d+21,t=d+22,w=d+26,x=d+30,y=d+34,z=d+38,A=d+42,C=d+46,B=d+50,K=d+54,E=c[c[a+93]+8];a:do{if(1==(E|0)){g=0;for(var G=a+93,M=a+93,L=a+93,F=a+93,I=0;;){if(3<=I>>>0){e=27;break a}k[h]=0;k[i]=0;k[j]=0;H(d,h,i,j);k[d+g]=1;b0(a,c[G],d);if(e0(a)){f=1;e=28;break a}c0(a,c[M]);I=c[L];WP(l,d);b0(a,I,l);if(e0(a)){f=1;e=28;break a}c0(a,c[F]);g=I=g+1}}else{if(2==(E|0)){N(m,c[c[a+93]+1]+4,c[c[a+93]]+4);g=0;G=a+93;M=a+93;L=a+93;F=a+93;for(I=0;;){if(3<=I>>>0){e=27;break a}k[p]=0;k[r]=0;k[s]=0;H(n,p,r,s);k[n+g]=1;qn(t,m,n);if(0<Um(t)){b0(a,c[G],t);if(e0(a)){f=1;e=28;break a}c0(a,c[M]);I=c[L];WP(w,t);b0(a,I,w);if(e0(a)){f=1;e=28;break a}c0(a,c[F])}g=I=g+1}}else{3==(E|0)?(N(y,c[c[a+93]+1]+4,c[c[a+93]]+4),N(z,c[c[a+93]+2]+4,c[c[a+93]]+4),qn(x,y,z),0<Um(x)?(b0(a,c[a+93],x),e0(a)?(f=1,e=28):(c0(a,c[a+93]),e=c[a+93],WP(A,x),b0(a,e,A),e0(a)?(f=1,e=28):(c0(a,c[a+93]),e=27))):e=27):4==(E|0)?(N(C,c[c[a+93]]+4,c[c[a+93]+3]+4),N(B,c[c[a+93]+1]+4,c[c[a+93]+3]+4),N(K,c[c[a+93]+2]+4,c[c[a+93]+3]+4),0<sc(h0(C,B,K))?(f=1,e=28):e=27):e=27}}}while(0);27==e&&(f=0);b=d;return f}e0.X=1;function h0(a,d,e){return k[a+1]*k[d+2]*k[e]+k[a+2]*k[d]*k[e+1]-k[a]*k[d+2]*k[e+1]-k[a+1]*k[d]*k[e+2]+k[a]*k[d+1]*k[e+2]-k[a+2]*k[d+1]*k[e]}h0.X=1;function i0(a,d,e,f,g){var h=b;b+=40;var i,j=h+4,l=h+8,m=h+12,n,p=h+13,r=h+17,s=h+21,t=h+22,w=h+26,x=h+30,y=h+31,z=h+35,A=h+39,g=g&1,C=0!=(c[a+2834]|0),B=c[a+2834];a:do{if(C){i=B;f0(a+2834,i);g0(a+2832,i);c[i+17]=0;c[i+6]=d;c[i+7]=e;c[i+8]=f;N(j,e+4,d+4);N(l,f+4,d+4);qn(h,j,l);n=i;var K=h;c[n]=c[K];k[n]=k[K];c[n+1]=c[K+1];k[n+1]=k[K+1];c[n+2]=c[K+2];k[n+2]=k[K+2];c[n+3]=c[K+3];k[n+3]=k[K+3];k[m]=JB(i);n=9999999747378752e-20<k[m]&1;N(r,d+4,e+4);qn(p,i,r);k[s]=J(d+4,p);N(w,e+4,f+4);qn(t,i,w);k[x]=J(e+4,t);K=WX(s,x);N(z,f+4,d+4);qn(y,i,z);k[A]=J(f+4,y);k[i+5]=k[WX(K,A)]/(n&1?k[m]:1);k[i+5]=-.009999999776482582<=k[i+5]?0:k[i+5];n&=1;b:do{if(n){k[i+4]=J(d+4,i)/k[m];KB(i,m);n=g&1;do{if(!n&&!(-9999999747378752e-21<=k[i+4])){c[a]=3;break b}}while(0);break a}c[a]=2}while(0);f0(a+2832,i);g0(a+2834,i)}else{c[a]=0!=(B|0)?6:5}i=0}while(0);b=h;return i}i0.X=1;function d9a(a,d,e){var f=b;b+=9;var g=f+4,h=f+5;k[g]=JB(d);wC(f,d,g);c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e9a(h,a,e);a=e+4;c[a]=c[h];k[a]=k[h];c[a+1]=c[h+1];k[a+1]=k[h+1];c[a+2]=c[h+2];k[a+2]=k[h+2];c[a+3]=c[h+3];k[a+3]=k[h+3];b=f}d9a.X=1;function d0(a,d){return k[a]>k[d]?a:d}d0.X=1;function c9a(a){c[a]=0;c[a+1]=0;c[a+2]=0}c9a.X=1;function c0(a,d){var e=d+8,f=c[e]-1;c[e]=f;var e=c[d+f],f=a+91,g=c[f];c[f]=g+1;c[a+(g+87)]=e}c0.X=1;function f9a(a){c[a]=0;c[a+1]=0}f9a.X=1;function k0(a,d,e,f,g,h){var i,j;(c[f+17]&255|0)!=(d|0)?(j=c[g9a+g],-9999999747378752e-21>J(f,e+4)-k[f+4]?(a=i0(a,c[f+(j+6)],c[f+(g+6)],e,0),0==(a|0)?f=12:(j0(a,0,f,g),0!=(c[h]|0)?j0(c[h],1,a,2):c[h+1]=a,c[h]=a,i=h+2,c[i]+=1,i=1,f=13)):(g=c[h9a+g],c[f+17]=d&255,k0(a,d,e,c[f+(j+9)],c[f+(j+14)]&255,h)?k0(a,d,e,c[f+(g+9)],c[f+(g+14)]&255,h)?(f0(a+2832,f),g0(a+2834,f),i=1,f=13):f=12:f=12)):f=12;12==f&&(i=0);return i}k0.X=1;function e9a(a,d,e){var f=b;b+=12;var g=f+4,h=f+8;W8a(f,d,e);WP(h,e);V8a(g,d,h);N(a,f,g);b=f}e9a.X=1;function W8a(a,d,e){var f=d+30,d=c[d]+c[f+1],f=c[f];v[0!=(f&1|0)?c[c[d]+(f-1)]:f](a,d,e)}W8a.X=1;function V8a(a,d,e){var f=b;b+=8;var g=f+4,h=d+30,i=c[d+1]+c[h+1],h=c[h],h=0!=(h&1|0)?c[c[i]+(h-1)]:h;Bo(g,d+2,e);v[h](f,i,g);vw(a,d+14,f);b=f}V8a.X=1;function b0(a,d,e){k[d+c[d+8]+4]=0;var f=a+91,g=c[f]-1;c[f]=g;c[d+c[d+8]]=c[a+(g+87)];f=d+8;g=c[f];c[f]=g+1;d9a(a,e,c[d+g])}b0.X=1;function Y8a(a){for(var d=a+15,e=d+512;!(d+=8,(d|0)==(e|0));){}d=a+527;for(e=d+2304;!(d+=18,(d|0)==(e|0));){}f9a(a+2832);f9a(a+2834);i9a(a)}Y8a.X=1;function i9a(a){var d=b;b+=7;var e=d+4,f=d+5,g=d+6;c[a]=9;k[e]=0;k[f]=0;k[g]=0;H(d,e,f,g);e=a+10;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];k[a+14]=0;e=c[a+2831]=0;f=a+2834;for(a+=527;!(g0(f,a+18*(-e+127)),e=g=e+1,128<=g>>>0);){}b=d}i9a.X=1;function R8a(a,d){c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];Wb(a+2,d+2);xi(a+14,d+14);var e=d+30,f=c[e+1],g=a+30;c[g]=c[e];c[g+1]=f;return a}R8a.X=1;function S8a(a,d,e,f){var g=b;b+=13;var h,i,j=g+4,l=g+5,m=g+9;N(g,d,a);i=Um(g);var n=0<i;a:do{if(n){h=0<i;do{if(h){var p=-J(a,g)/i;k[j]=p;if(1<=p){k[e]=0;k[e+1]=1;c[f]=2;h=Um(d);break a}if(!(0>=p)){d=k[j];k[e+1]=d;k[e]=1-d;c[f]=3;Q(l,g,j);wn(m,a,l);h=Um(m);break a}}else{k[j]=0}}while(0);k[e]=1;k[e+1]=0;c[f]=1;h=Um(a)}else{h=-1}}while(0);b=g;return h}S8a.X=1;function T8a(a,d,e,f,g){var h=b;b+=47;var i=h+3,j=h+15,l,m,n=h+19,p=h+21,r,s=h+22,t,w,x=h+26,y=h+30,z=h+31,A=h+35,C=h+39,B=h+43;c[h]=a;l=h+1;c[l]=d;c[l+1]=e;N(i,a,d);l=i+4;N(l,d,e);N(l+4,e,a);qn(j,i,i+4);l=Um(j);if(0<l){m=-1;c[n]=0;k[n]=0;c[n+1]=0;k[n+1]=0;r=c[p]=0;for(var K=n+1;;){t=c[h+r];qn(s,(r<<2)+i,j);if(0<J(t,s)&&(t=c[j9a+r],w=S8a(c[h+r],c[h+t],n,p),0>m||w<m)){m=w,c[g]=(0!=(c[p]&2|0)?1<<t:0)+(0!=(c[p]&1|0)?1<<r:0),k[f+r]=k[n],k[f+t]=k[K],k[f+c[j9a+t]]=0}r=t=r+1;if(3<=t>>>0){break}}0>m&&(n=J(a,j),a=ec(l),k[y]=n/l,Q(x,j,y),m=Um(x),c[g]=7,N(z,d,x),qn(A,i+4,z),k[f]=JB(A)/a,N(C,e,x),qn(B,i+8,C),k[f+1]=JB(B)/a,k[f+2]=1-(k[f]+k[f+1]));d=m}else{d=-1}b=h;return d}T8a.X=1;function Q8a(a,d){var e=a+30;c[e]=d&1?6:8;c[e+1]=0}Q8a.X=1;function U8a(a,d,e,f,g,h){var i=b;b+=36;var j,l,m=i+4,n,p=i+16;j=i+20;var r=i+24,s=i+28,t=i+31,w,x=i+32,y;c[i]=a;n=i+1;c[n]=d;n+=1;c[n]=e;c[n+1]=f;N(m,a,f);n=m+4;N(n,d,f);N(n+4,e,f);n=h0(m,m+4,m+8);N(j,d,e);N(r,a,d);qn(p,j,r);p=0>=n*J(a,p)&1;do{if(p){if(0<sc(n)){l=-1;j=s;c[j]=0;k[j]=0;c[j+1]=0;k[j+1]=0;c[j+2]=0;k[j+2]=0;j=c[t]=0;for(var z=r=s,A=s+1,C=s+2;;){w=c[k9a+j];qn(x,(j<<2)+m,(w<<2)+m);$s=y=n*J(f,x);if(0<y&&(y=T8a(c[i+j],c[i+w],f,r,t),0>l||y<l)){l=y,c[h]=(0!=(c[t]&2|0)?1<<w:0)+(0!=(c[t]&1|0)?1<<j:0)+(0!=(c[t]&4|0)?8:0),k[g+j]=k[z],k[g+w]=k[A],k[g+c[k9a+w]]=0,k[g+3]=k[C]}j=w=j+1;if(3<=w>>>0){break}}0>l&&(l=0,c[h]=15,k[g]=h0(e,d,f)/n,k[g+1]=h0(a,e,f)/n,k[g+2]=h0(d,a,f)/n,k[g+3]=1-(k[g]+k[g+1]+k[g+2]));j=18}else{j=17}}else{j=17}}while(0);17==j&&(l=-1);b=i;return l}U8a.X=1;function N8a(a){var d=b;b+=7;var e=d+4,f=d+5,g=d+6;k[e]=0;k[f]=0;k[g]=0;H(d,e,f,g);e=a+32;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];c[a+91]=0;c[a+94]=2;c[a+92]=0;k[a+36]=0;b=d}N8a.X=1;function l9a(a,d,e,f,g,h,i,j,l,m,n){var p=b;b+=18;var r=p+4;$2=a;$3=d;$11=m;$12=n;N(p,g+12,h+12);X8a(e,g,f,h,p,r,1)?(a=r+1,c[j]=c[a],k[j]=k[a],c[j+1]=c[a+1],k[j+1]=k[a+1],c[j+2]=c[a+2],k[j+2]=k[a+2],c[j+3]=c[a+3],k[j+3]=k[a+3],j=r+5,c[l]=c[j],k[l]=k[j],c[l+1]=c[j+1],k[l+1]=k[j+1],c[l+2]=c[j+2],k[l+2]=k[j+2],c[l+3]=c[j+3],k[l+3]=k[j+3],l=r+9,c[i]=c[l],k[i]=k[l],c[i+1]=c[l+1],k[i+1]=k[l+1],c[i+2]=c[l+2],k[i+2]=k[l+2],c[i+3]=c[l+3],k[i+3]=k[l+3],i=1):(L8a(e,g,f,h,p,r)&&(a=r+1,c[j]=c[a],k[j]=k[a],c[j+1]=c[a+1],k[j+1]=k[a+1],c[j+2]=c[a+2],k[j+2]=k[a+2],c[j+3]=c[a+3],k[j+3]=k[a+3],j=r+5,c[l]=c[j],k[l]=k[j],c[l+1]=c[j+1],k[l+1]=k[j+1],c[l+2]=c[j+2],k[l+2]=k[j+2],c[l+3]=c[j+3],k[l+3]=k[j+3],l=r+9,c[i]=c[l],k[i]=k[l],c[i+1]=c[l+1],k[i+1]=k[l+1],c[i+2]=c[l+2],k[i+2]=k[l+2],c[i+3]=c[l+3],k[i+3]=k[l+3]),i=0);b=p;return i}l9a.X=1;function m9a(a){xe(a)}m9a.X=1;function kZ(a,d,e,f,g){var h=b;b+=3;var i=h+1,j=h+2;XW(a);c[a]=l0+2;k[h]=0;k[i]=1;k[j]=0;H(a+1,h,i,j);c[a+5]=g;c[a+6]=f;c[a+7]=d;c[a+8]=e;c[a+9]=Ie(d);c[a+10]=Ie(e);k[a+11]=v[c[c[d]+11]](d);k[a+12]=v[c[c[e]+11]](e);c[a+13]=0;c[a+15]=-1;c[a+18]=1;b=h}kZ.X=1;function BWa(a,d,e,f,g,h,i,j,l){var m=b;b+=3;var n=m+1,p=m+2;XW(a);c[a]=l0+2;k[m]=0;k[n]=1;k[p]=0;H(a+1,m,n,p);c[a+5]=l;c[a+6]=j;c[a+7]=d;c[a+8]=e;c[a+9]=f;c[a+10]=g;k[a+11]=h;k[a+12]=i;c[a+13]=0;c[a+15]=-1;c[a+18]=1;b=m}BWa.X=1;function gZ(a,d,e,f,g){$5=g&1;n9a(a,d,e,f)}gZ.X=1;function o9a(a){return 4==(c[a]|0)}o9a.X=1;function n9a(a,d,e,f){var g=b;b+=141;var h,i=g+4,j=g+5,l=g+6,m=g+7,n=g+11,p=g+15,r=g+31,s=g+47,t=g+51,w=g+55,x=g+56,y=g+57,z=g+58,A=g+59,C=g+60,B,K=g+61,E=g+65,G=g+69,M=g+73,L=g+77,F=g+81,I=g+85,R=g+89,O=g+93,Z=g+97,P=g+98,S=g+102,da=g+103,V=g+107,ba=g+108,$=g+112,Y=g+116,la=g+120,ka=g+121,ja=g+125,ea=g+129,ca=g+133,W=g+137;h=k[a+14]=0;k[i]=0;k[j]=0;k[l]=0;H(g,i,j,l);sQ(p,d);sQ(r,d+16);wn(t,p+12,r+12);k[w]=.5;Q(s,t,w);JC(p+12,s);JC(r+12,s);i=(Gf(c[a+7])?Gf(c[a+8]):0)&1;k[x]=k[a+11];k[y]=k[a+12];c[p9a]+=1;c[a+13]&1&&(k[x]=0,k[y]=0);c[a+16]=0;k[z]=0;k[A]=1;k[C]=0;pe(a+1,z,A,C);j=A=0;c[a+17]=0;c[a+15]=-1;C=0xde0b6b000000000;z=k[x]+k[y];fZ(c[a+6]);var l=a+1,t=a+1,w=a+7,U=a+8,X=a+1,ma=a+6,ga=a+6,ha=a+6,ta=a+1,ra=a+16,ua=a+6;a:for(;;){WP(E,l);rn(K,E,d);rn(G,t,d+16);kf(M,c[w],K);kf(L,c[U],G);vw(F,p,M);vw(I,r,L);i&1&&(k[F+2]=0,k[I+2]=0);N(R,F,I);var za=J(X,R);B=za;za=0<za;do{if(za&&B*B>C*k[d+32]){c[a+17]=10;j=1;break a}}while(0);if(q9a(c[ma],R)){j=c[a+17]=1;break}B=C-B;if(B<=9.999999974752427e-7*C){c[a+17]=0>=B?2:11;j=1;break}r9a(c[ga],R,F,I);if(!s9a(c[ha],O)){c[a+17]=3;j=1;break}if(9.999999974752427e-7>Um(O)){K=a+1;c[K]=c[O];k[K]=k[O];c[K+1]=c[O+1];k[K+1]=k[O+1];c[K+2]=c[O+2];k[K+2]=k[O+2];c[K+3]=c[O+3];k[K+3]=k[O+3];c[a+17]=6;j=1;break}B=C;C=Um(O);if(B-C<=1.1920928955078125e-7*B){j=1;c[a+17]=12;break}c[ta]=c[O];k[ta]=k[O];c[ta+1]=c[O+1];k[ta+1]=k[O+1];c[ta+2]=c[O+2];k[ta+2]=k[O+2];c[ta+3]=c[O+3];k[ta+3]=k[O+3];B=c[ra];c[ra]=B+1;if(1e3<(B|0)){break}if(!((o9a(c[ua])^1)&1)){c[a+17]=13;break}}j&1&&(t9a(c[a+6],m,n),O=a+1,c[g]=c[O],k[g]=k[O],c[g+1]=c[O+1],k[g+1]=k[O+1],c[g+2]=c[O+2],k[g+2]=k[O+2],c[g+3]=c[O+3],k[g+3]=k[O+3],O=Um(a+1),1e-4>O&&(c[a+17]=5),K=O,1.4210854715202004e-14<K?(k[Z]=1/ec(O),LC(g,Z),h=ec(C),k[S]=k[x]/h,Q(P,a+1,S),JC(m,P),k[V]=k[y]/h,Q(da,a+1,V),xn(n,da),h=1/k[Z]-z,A=1,c[a+15]=1):c[a+15]=2);Z=(0!=(c[a+18]|0)?0==(c[a+5]|0)?0:0==(c[a+17]|0)?0:.01>h+z:0)&1;a:do{if((!(A&1)||Z&1)&&0!=(c[a+5]|0)){if(c[u9a]+=1,EC(a+1),P=c[a+5],v[c[c[P]+2]](P,c[a+6],c[a+7],c[a+8],p,r,a+1,ba,$,f,c[d+33])&1){if(N(Y,$,ba),S=P=Um(Y),1.4210854715202004e-14>=S&&(P=Y,S=a+1,c[P]=c[S],k[P]=k[S],c[P+1]=c[S+1],k[P+1]=k[S+1],c[P+2]=c[S+2],k[P+2]=k[S+2],c[P+3]=c[S+3],k[P+3]=k[S+3],P=S=Um(a+1)),1.4210854715202004e-14<S){k[la]=ec(P);KB(Y,la);N(ka,ba,$);P=-JB(ka);S=A&1;do{if(S&&P>=h){c[a+15]=8;break a}}while(0);h=P;A=m;P=ba;c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];A=n;P=$;c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];A=g;P=Y;c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];A=1;c[a+15]=3}else{c[a+15]=9}}else{if(0<Um(a+1)){N(ja,ba,$);P=JB(ja)-z;S=A&1;do{if(S&&P>=h){c[a+15]=5;break a}}while(0);h=P;A=m;P=ba;c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];A=n;P=$;c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];Q(ea,a+1,x);JC(m,ea);Q(ca,a+1,y);xn(n,ca);A=g;P=a+1;c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];IB(g);A=1;c[a+15]=6}}}}while(0);if(A&1&&(0>h||h*h<k[d+32])){d=a+1,c[d]=c[g],k[d]=k[g],c[d+1]=c[g+1],k[d+1]=k[g+1],c[d+2]=c[g+2],k[d+2]=k[g+2],c[d+3]=c[g+3],k[d+3]=k[g+3],k[a+14]=h,a=c[c[e]+4],wn(W,n,s),v[a](e,g,W,h)}b=g}n9a.X=1;function v9a(a){xe(a)}v9a.X=1;function vJ(a,d,e,f,g,h,i,j,l,m){m&=1;cZ(a);c[a]=m0+2;w9a(a,d,e,f,g,h,i,j,l,m&1)}vJ.X=1;function w9a(a,d,e,f,g,h,i,j,l,m){var n=b;b+=18;var p=n+1,r=n+2,s=n+3,t=n+4,w=n+5,x=n+6,y=n+7,z=n+8,A=n+9,C=n+13,B=n+14;c[a+1]=24;c[a+16]=d;c[a+17]=e;k[a+18]=h;k[a+19]=i;k[a+20]=d-1|0;k[a+21]=e-1|0;k[a+22]=g;c[a+23]=f;c[a+24]=l;c[a+25]=m&1;c[a+26]=0;c[a+27]=j;k[n]=1;k[p]=1;k[r]=1;pe(a+28,n,p,r);d=c[a+27];0==(d|0)?(k[s]=0,k[t]=0,pe(a+4,a+18,s,t),pe(a+8,a+19,a+20,a+21)):1==(d|0)?(k[w]=0,k[x]=0,pe(a+4,w,a+18,x),pe(a+8,a+20,a+19,a+21)):2==(d|0)&&(k[y]=0,k[z]=0,pe(a+4,y,z,a+18),pe(a+8,a+20,a+21,a+19));k[C]=.5;wn(B,a+4,a+8);Q(A,B,C);a+=12;c[a]=c[A];k[a]=k[A];c[a+1]=c[A+1];k[a+1]=k[A+1];c[a+2]=c[A+2];k[a+2]=k[A+2];c[a+3]=c[A+3];k[a+3]=k[A+3];b=n}w9a.X=1;function tJ(a,d,e,f,g,h,i,j){i&=1;j&=1;cZ(a);c[a]=m0+2;w9a(a,d,e,f,g/65535,0,g,h,i&1?0:5,j&1)}tJ.X=1;function x9a(a){xe(a)}x9a.X=1;function y9a(){return D.Be}y9a.X=1;function n0(a){return 0>a?a-.5&-1:a+.5&-1}n0.X=1;function z9a(a,d,e){var f;f=0;var g=c[a+24];0==(g|0)?f=k[c[a+23]+c[a+16]*e+d]:5==(g|0)?f=(c[c[a+23]+c[a+16]*e+d]&255|0)*k[a+22]:3==(g|0)&&(f=(c[c[a+23]+c[a+16]*e+d]<<16>>16|0)*k[a+22]);return f}z9a.X=1;function A9a(a){return a+28}A9a.X=1;function B9a(){}B9a.X=1;function C9a(a,d,e,f){var g=b;b+=58;var h=g+4,i=g+8,j=g+12,l=g+13,m=g+17,n=g+18,p=g+19,r=g+20,s=g+32,t=g+36,w=g+40,x=g+41,y=g+42,z=g+43,A=g+47,C=g+48,B=g+49,K=g+50,E=g+54;N(i,a+8,a+4);ig(h,i,a+28);k[j]=.5;Q(g,h,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);k[l+c[a+27]]=.5*(k[a+18]+k[a+19]);JL(l,a+28);qc(r,d);d+=12;c[s]=c[d];k[s]=k[d];c[s+1]=c[d+1];k[s+1]=k[d+1];c[s+2]=c[d+2];k[s+2]=k[d+2];c[s+3]=c[d+3];k[s+3]=k[d+3];k[w]=J(0+r,g);k[x]=J(4+r,g);k[y]=J(8+r,g);H(t,w,x,y);k[A]=v[c[c[a]+11]](a);k[C]=v[c[c[a]+11]](a);k[B]=v[c[c[a]+11]](a);H(z,A,C,B);xn(t,z);N(K,s,t);c[e]=c[K];k[e]=k[K];c[e+1]=c[K+1];k[e+1]=k[K+1];c[e+2]=c[K+2];k[e+2]=k[K+2];c[e+3]=c[K+3];k[e+3]=k[K+3];wn(E,s,t);c[f]=c[E];k[f]=k[E];c[f+1]=c[E+1];k[f+1]=k[E+1];c[f+2]=c[E+2];k[f+2]=k[E+2];c[f+3]=c[E+3];k[f+3]=k[E+3];b=g}C9a.X=1;function o0(a,d,e,f){var g=b;b+=9;var h,i=g+1,j=g+2,l=g+3,m=g+4,n=g+5,p=g+6,r=g+7,s=g+8;h=v[c[c[a]+16]](a,d,e);var t=c[a+27];0==(t|0)?(k[g]=h-k[a+12],k[i]=-k[a+20]/2+(d|0),k[j]=-k[a+21]/2+(e|0),pe(f,g,i,j)):1==(t|0)?(k[l]=-k[a+20]/2+(d|0),k[m]=h-k[a+12+1],k[n]=-k[a+21]/2+(e|0),pe(f,l,m,n)):2==(t|0)&&(k[p]=-k[a+20]/2+(d|0),k[r]=-k[a+21]/2+(e|0),k[s]=h-k[a+12+2],pe(f,p,r,s));JL(f,a+28);b=g}o0.X=1;function D9a(a,d,e,f){var g=b;b+=4;$5=f;c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];gp(g,a+4);hp(g,a+8);c[d]=n0(k[g]);c[d+1]=n0(k[g+1]);c[d+2]=n0(k[g+2]);b=g}D9a.X=1;function E9a(a,d,e,f){var g=b;b+=40;var h,i=g+4,j=g+8,l=g+9,m=g+10,n=g+11,p=g+15,r=g+19,s=g+20,t=g+21,w=g+22,x=g+25,y=g+28;k[j]=1/k[a+28];k[l]=1/k[a+28+1];k[m]=1/k[a+28+2];H(i,j,l,m);ig(g,e,i);k[r]=1/k[a+28];k[s]=1/k[a+28+1];k[t]=1/k[a+28+2];H(p,r,s,t);ig(n,f,p);xn(g,a+12);xn(n,a+12);D9a(a,w,g,0);D9a(a,x,n,1);for(e=0;!(f=w+e,c[f]-=1,f=x+e,c[f]+=1,e=f=e+1,3<=(f|0));){}e=0;f=c[a+16]-1;j=0;i=c[a+17]-1;l=c[a+27];0==(l|0)?((c[w+1]|0)>(e|0)&&(e=c[w+1]),(c[x+1]|0)<(f|0)&&(f=c[x+1]),(c[w+2]|0)>(j|0)&&(j=c[w+2]),(c[x+2]|0)<(i|0)&&(i=c[x+2])):1==(l|0)?((c[w]|0)>(e|0)&&(e=c[w]),(c[x]|0)<(f|0)&&(f=c[x]),(c[w+2]|0)>(j|0)&&(j=c[w+2]),(c[x+2]|0)<(i|0)&&(i=c[x+2])):2==(l|0)&&((c[w]|0)>(e|0)&&(e=c[w]),(c[x]|0)<(f|0)&&(f=c[x]),(c[w+1]|0)>(j|0)&&(j=c[w+1]),(c[x+1]|0)<(i|0)&&(i=c[x+1]));w=j;j=(w|0)<(i|0);a:do{if(j){for(var l=a+25,m=y,n=y+4,p=y+8,s=r=y,t=y+4,z=y+8,A=y,C=a+26,B=y,K=y+4,E=y+8,G=y,M=y,L=y+4,F=y+8,I=y;;){var x=e,R=(x|0)<(f|0);b:do{if(R){for(;;){if(c[l]&1?h=35:c[C]&1&&0==(x+w&1|0)?h=35:(o0(a,x,w,B),o0(a,x,w+1,K),o0(a,x+1,w,E),h=d,v[c[c[h]+2]](h,G,x,w),o0(a,x+1,w,M),o0(a,x,w+1,L),o0(a,x+1,w+1,F),h=d,v[c[c[h]+2]](h,I,x,w),h=37),35==h&&(o0(a,x,w,m),o0(a,x+1,w,n),o0(a,x+1,w+1,p),h=d,v[c[c[h]+2]](h,r,x,w),o0(a,x,w,s),o0(a,x+1,w+1,t),o0(a,x,w+1,z),h=d,v[c[c[h]+2]](h,A,x,w)),x+=1,(x|0)>=(f|0)){break b}}}}while(0);w+=1;if((w|0)>=(i|0)){break a}}}}while(0);b=g}E9a.X=1;function F9a(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;$2=a;$3=d;k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);b=f}F9a.X=1;function G9a(a,d){var e=a+28;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}G9a.X=1;function H9a(){}H9a.X=1;function I9a(a,d,e){var f=b;b+=12;var g=f+4,h=f+8;c[f]=c[a];k[f]=k[a];c[f+1]=c[a+1];k[f+1]=k[a+1];c[f+2]=c[a+2];k[f+2]=k[a+2];c[f+3]=c[a+3];k[f+3]=k[a+3];c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];c[h]=c[e];k[h]=k[e];c[h+1]=c[e+1];k[h+1]=k[e+1];c[h+2]=c[e+2];k[h+2]=k[e+2];c[h+3]=c[e+3];k[h+3]=k[e+3];a=ee(J(h,f),J(h,g));b=f;return a}I9a.X=1;function J9a(a,d){var e;e=K9a(a,d);return-1==(e|0)?0:RV(a+10,e)}J9a.X=1;function K9a(a,d){var e;e=xW(a+10)-1&SL(d);if(e>>>0>=rW(a)>>>0){e=-1}else{var f=c[sW(a,e)];e=f;for(var g=a+15,h=a+5;-1!=(f|0)&&0==(cM(d,DKa(g,e))&1|0);){e=f=c[sW(h,e)]}}return e}K9a.X=1;function L9a(a){xe(a)}L9a.X=1;function M9a(a,d,e){var f,g,h;f=xW(a+10)-1&SL(d);g=K9a(a,d);h=a+10;-1!=(g|0)?(a=RV(h,g),c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1],c[a+2]=c[e+2],k[a+2]=k[e+2],c[a+3]=c[e+3],k[a+3]=k[e+3]):(g=tW(h),h=xW(a+10),N9a(a+10,e),O9a(a+15,d),(h|0)<(xW(a+10)|0)&&(P9a(a,d),f=xW(a+10)-1&SL(d)),c[QV(a+5,g)]=c[QV(a,f)],c[QV(a,f)]=g)}M9a.X=1;function Q9a(a,d,e,f){var g=b;b+=206;var h=g+3,i=g+6,j=g+10,l=g+14,m=g+18,n=g+22,p=g+26,r,s,t=g+30,w=g+34,x=g+35,y=g+39,z=g+40,A=g+41,C=g+45,B,K=g+71,E=g+97,G=g+101,M=g+105,L=g+109,F=g+113,I=g+117,R=g+118,O=g+122,Z=g+126,P=g+130,S=g+131,da=g+135,V,ba=g+139,$=g+143,Y=g+147,la=g+148,ka=g+152,ja=g+164,ea=g+168,ca=g+172,W=g+173,U=g+177,X=g+178,ma=g+182,ga=g+186,ha=g+187,ta=g+191,ra=g+192,ua=g+196,za=g+200,Za=g+201,ib=g+205,e=(c[a+1]|0)==(e|0)?(c[a+2]|0)==(f|0)?49:4:4;a:do{if(4==e&&(f=0,r=g,c[r]=-1,k[r]=-1,c[r+1]=-1,k[r+1]=-1,c[r+2]=-1,k[r+2]=-1,r=h,c[r]=-1,k[r]=-1,c[r+1]=-1,k[r+1]=-1,c[r+2]=-1,k[r+2]=-1,N(i,d+4,d),N(j,d+8,d),qn(l,i,j),Um(l)>=k[c[a+4]+23]&&(N(m,c[a+3]+4,c[a+3]),N(n,c[a+3]+8,c[a+3]),qn(p,m,n),Um(p)>=k[c[a+4]+23]))){r=0;B=a+3;V=a+4;for(s=0;3>(s|0);){for(var Ca=s=0;3>(Ca|0);){N(t,(r<<2)+c[B],(s<<2)+d);if(Um(t)<k[c[V]+23]&&(c[g+f]=r,c[h+f]=s,f+=1,3<=(f|0))){break a}s=Ca=s+1}if(3<=(f|0)){break a}r=s=r+1}2==(f|0)&&(0==(c[g]|0)&&2==(c[g+1]|0)&&(c[g]=2,c[g+1]=0,f=c[h+1],c[h+1]=c[h],c[h]=f),r=c[a+1]<<21|c[a+2],f=c[a+4]+4,c[w]=r,f=B=J9a(f,w),0==(B|0)&&(cE(x),f=c[a+4]+4,c[y]=r,M9a(f,y,x),f=c[a+4]+4,c[z]=r,f=J9a(f,z)),r=c[g+1]+c[g],N(A,(c[g+1]<<2)+c[a+3],(c[g]<<2)+c[a+3]),sZ(C,c[a+3],c[a+3]+4,c[a+3]+8),B=-c[h]+ -c[h+1]+3,sZ(K,(c[h+1]<<2)+d,(c[h]<<2)+d,(B<<2)+d),tZ(C,E),tZ(K,G),IB(A),qn(L,A,E),V=M,s=IB(L),c[V]=c[s],k[V]=k[s],c[V+1]=c[s+1],k[V+1]=k[s+1],c[V+2]=c[s+2],k[V+2]=k[s+2],c[V+3]=c[s+3],k[V+3]=k[s+3],N(F,(3-r<<2)+c[a+3],(c[g]<<2)+c[a+3]),0>J(M,F)&&(k[I]=-1,LC(M,I)),qn(O,A,G),V=R,s=IB(O),c[V]=c[s],k[V]=k[s],c[V+1]=c[s+1],k[V+1]=k[s+1],c[V+2]=c[s+2],k[V+2]=k[s+2],c[V+3]=c[s+3],k[V+3]=k[s+3],N(Z,(B<<2)+d,(c[h]<<2)+d),0>J(R,Z)&&(k[P]=-1,LC(R,P)),qn(S,M,R),s=Um(S),B=0,V=da,Ca=E,c[V]=c[Ca],k[V]=k[Ca],c[V+1]=c[Ca+1],k[V+1]=k[Ca+1],c[V+2]=c[Ca+2],k[V+2]=k[Ca+2],c[V+3]=c[Ca+3],k[V+3]=k[Ca+3],V=0,s<k[c[a+4]+22]||(IB(S),qn(ba,S,M),IB(ba),B=I9a(ba,M,R),B=3.1415927410125732-B,V=0>J(E,R)&1,B=V&1?B:-B,k[Y]=-B,IV($,S,Y),zb(ka,$),Bo(la,ka,E),s=da,Ca=la,c[s]=c[Ca],k[s]=k[Ca],c[s+1]=c[Ca+1],k[s+1]=k[Ca+1],c[s+2]=c[Ca+2],k[s+2]=k[Ca+2],c[s+3]=c[Ca+3],k[s+3]=k[Ca+3]),1==(r|0)?(N(ja,c[a+3],c[a+3]+4),k[ca]=-B,IV(ea,ja,ca),tw(W,ea,E),0>J(W,G)&&(k[U]=-1,LC(W,U),r=f,c[r]|=8),k[f+1]=-B,V&1&&(c[f]|=1)):2==(r|0)?(N(X,c[a+3]+8,c[a+3]),k[ga]=-B,IV(ma,X,ga),tw(ha,ma,E),0>J(ha,G)&&(k[ta]=-1,LC(ha,ta),r=f,c[r]|=32),k[f+3]=-B,V&1&&(c[f]|=4)):3==(r|0)&&(N(ra,c[a+3]+4,c[a+3]+8),k[za]=-B,IV(ua,ra,za),tw(Za,ua,E),0>J(Za,G)&&(r=f,c[r]|=16,k[ib]=-1,LC(Za,ib)),k[f+2]=-B,V&1&&(c[f]|=2)),$30=8,EX(K),EX(C))}}while(0);b=g}Q9a.X=1;function R9a(a,d){$1=a;return 0!=(d|0)?d<<1:1}R9a.X=1;function S9a(a,d){$1=a;return 0!=(d|0)?d<<1:1}S9a.X=1;function N9a(a,d){(tW(a)|0)==(xW(a)|0)&&PKa(a,S9a(a,tW(a)));var e=(c[a+1]<<2)+c[a+3];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3]);e=a+1;c[e]+=1}N9a.X=1;function O9a(a,d){(uW(a)|0)==(KKa(a)|0)&&QKa(a,R9a(a,uW(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d],k[e]=k[d]);e=a+1;c[e]+=1}O9a.X=1;function P9a(a,d){var e=b;b+=2;var f,g,h=e+1,i,j;$3=d;f=xW(a+10);var l=(rW(a)|0)<(f|0);a:do{if(l){g=rW(a);c[e]=0;PV(a,f,e);c[h]=0;PV(a+5,f,h);i=0;j=(i|0)<(f|0);b:do{if(j){for(var m=a;;){if(c[QV(m,i)]=-1,i+=1,(i|0)>=(f|0)){break b}}}}while(0);i=0;j=(i|0)<(f|0);b:do{if(j){for(m=a+5;;){if(c[QV(m,i)]=-1,i+=1,(i|0)>=(f|0)){break b}}}}while(0);i=0;if((i|0)<(g|0)){for(var m=a+15,n=a+10,p=a,r=a+5,s=a;;){if(j=xW(n)-1&SL(QHa(m,i)),c[QV(r,i)]=c[QV(p,j)],c[QV(s,j)]=i,i+=1,(i|0)>=(g|0)){break a}}}}}while(0);b=e}P9a.X=1;function AI(a,d,e){FW(a);c[a]=HW+2;c[a+1]=0;c[a+34]=d;c[a+35]=e;var f=a+36;c[f]=-1;k[f]=-1;c[f+1]=-1;k[f+1]=-1;c[f+2]=-1;k[f+2]=-1;c[f+3]=-1;k[f+3]=-1;xi(a+2,d+1);xi(a+18,e+1)}AI.X=1;function p0(a,d,e,f){var g=b;b+=102;var h=g+1,i=g+5,j=g+9,l=g+13,m=g+17,n=g+21,p=g+25,r=g+29,s=g+33;k[g]=f;if(k[g]<=ck(c[a+1])&&(f=($j(c[a+1])|0)!=(c[a+34]|0)&1,Q(i,d,g),wn(h,e,i),f&1?(kQ(m,a+18,h),c[j]=c[m],k[j]=k[m],c[j+1]=c[m+1],k[j+1]=k[m+1],c[j+2]=c[m+2],k[j+2]=k[m+2],c[j+3]=c[m+3],k[j+3]=k[m+3],kQ(n,a+2,e),c[l]=c[n],k[l]=k[n],c[l+1]=c[n+1],k[l+1]=k[n+1],c[l+2]=c[n+2],k[l+2]=k[n+2],c[l+3]=c[n+3],k[l+3]=k[n+3]):(kQ(p,a+2,h),c[j]=c[p],k[j]=k[p],c[j+1]=c[p+1],k[j+1]=k[p+1],c[j+2]=c[p+2],k[j+2]=k[p+2],c[j+3]=c[p+3],k[j+3]=k[p+3],kQ(r,a+18,e),c[l]=c[r],k[l]=k[r],c[l+1]=c[r+1],k[l+1]=k[r+1],c[l+2]=c[r+2],k[l+2]=k[r+2],c[l+3]=c[r+3],k[l+3]=k[r+3]),EU(s,j,l,d,k[g]),d=s+12,c[d]=c[h],k[d]=k[h],c[d+1]=c[h+1],k[d+1]=k[h+1],c[d+2]=c[h+2],k[d+2]=k[h+2],c[d+3]=c[h+3],k[d+3]=k[h+3],h=s+8,c[h]=c[e],k[h]=k[e],c[h+1]=c[e+1],k[h+1]=k[e+1],c[h+2]=c[e+2],k[h+2]=k[e+2],c[h+3]=c[e+3],k[h+3]=k[e+3],e=Ak(c[a+1],s),k[s+21]=T9a(c[a+34],c[a+35]),k[s+22]=U9a(c[a+34],c[a+35]),f&1?(c[s+23]=c[a+37],c[s+24]=c[a+36],c[s+25]=c[a+39],c[s+26]=c[a+38]):(c[s+23]=c[a+36],c[s+24]=c[a+37],c[s+25]=c[a+38],c[s+26]=c[a+39]),h=c[a+1],0<=(e|0)?Ek(h,s,e):e=zk(h,s),0!=(c[V9a]|0)&&!(0==($h(c[a+34])&8|0)&&0==($h(c[a+35])&8|0)))){v[c[V9a]](c[a+1]+69*e+1,f&1?c[a+35]:c[a+34],c[s+23],c[s+25],f&1?c[a+34]:c[a+35],c[s+24],c[s+26])}b=g}p0.X=1;function T9a(a,d){var e;e=Nh(a)*Nh(d);$MAX_FRICTION=10;var f=e;-10>f?e=-10:10<f&&(e=10);return e}T9a.X=1;function U9a(a,d){return di(a)*di(d)}U9a.X=1;function W9a(a){xe(a)}W9a.X=1;function X9a(a,d,e,f,g,h,i,j,l,m,n){var p=b;b+=1220;var r,s,t,w=p+4,x=p+5,y=p+6,z=p+7,A=p+11,C=p+15,B=p+19,K=p+23,E=p+27,G=p+31,M=p+35,L=p+39,F=p+43,I=p+291,R=p+539,O=p+787,Z,P,S=p+1035,da=p+1039,V=p+1043,ba=p+1047,$,Y=p+1051,la=p+1055,ka=p+1059,ja=p+1063,ea=p+1067,ca,W=p+1071,U=p+1075,X=p+1079,ma=p+1083,ga=p+1087,ha=p+1091,ta=p+1095,ra=p+1099,ua=p+1103,za,Za=p+1107,ib=p+1111,Ca=p+1112,Sa=p+1116,mb=p+1117,Oa=p+1136,Pa=p+1137,fc=p+1141,jb=p+1175,La=p+1179,fb=p+1195,Rb=p+1206,pb=p+1210,Sb=p+1211,ab=p+1212,Ib=p+1216;$2=a;$12=n;s=(Gf(e)?Gf(f):0)&1;t=0xde0b6b000000000;k[w]=0;k[x]=0;k[y]=0;H(p,w,x,y);for(var Fc=F+248,Ac=F;;){var ob=Ac+4;if((ob|0)==(Fc|0)){break}Ac=ob}for(var Gc=I+248,Yc=I;;){var Cc=Yc+4;if((Cc|0)==(Gc|0)){break}Yc=Cc}for(var Ub=R+248,Uc=R;;){var nd=Uc+4;if((nd|0)==(Ub|0)){break}Uc=nd}for(var Ic=O+248,tc=O;;){var hd=tc+4;if((hd|0)==(Ic|0)){break}tc=hd}P=42;Z=0;var Tb=(Z|0)<(P|0);a:do{if(Tb){for(var Jc=S,ub=da,uc=ba;;){q0();var Kc=(Z<<2)+r0;c[Jc]=c[Kc];k[Jc]=k[Kc];c[Jc+1]=c[Kc+1];k[Jc+1]=k[Kc+1];c[Jc+2]=c[Kc+2];k[Jc+2]=k[Kc+2];c[Jc+3]=c[Kc+3];k[Jc+3]=k[Kc+3];WP(V,S);rn(da,V,g);var gb=(Z<<2)+R;c[gb]=c[ub];k[gb]=k[ub];c[gb+1]=c[ub+1];k[gb+1]=k[ub+1];c[gb+2]=c[ub+2];k[gb+2]=k[ub+2];c[gb+3]=c[ub+3];k[gb+3]=k[ub+3];rn(ba,S,h);var gc=(Z<<2)+O;c[gc]=c[uc];k[gc]=k[uc];c[gc+1]=c[uc+1];k[gc+1]=k[uc+1];c[gc+2]=c[uc+2];k[gc+2]=k[uc+2];c[gc+3]=c[uc+3];k[gc+3]=k[uc+3];Z+=1;if((Z|0)>=(P|0)){break a}}}}while(0);var Lc=v[c[c[e]+19]](e),Dc=0!=(Lc|0);a:do{if(Dc&&($=0,($|0)<(Lc|0))){for(var Eb=Y,Ra=la,qb=Y,Ab=ka,hc=ea;;){var Hc=e;v[c[c[Hc]+20]](Hc,$,Y);Bo(la,g,Y);c[Eb]=c[Ra];k[Eb]=k[Ra];c[Eb+1]=c[Ra+1];k[Eb+1]=k[Ra+1];c[Eb+2]=c[Ra+2];k[Eb+2]=k[Ra+2];c[Eb+3]=c[Ra+3];k[Eb+3]=k[Ra+3];q0();var ic=(P<<2)+r0;c[ic]=c[qb];k[ic]=k[qb];c[ic+1]=c[qb+1];k[ic+1]=k[qb+1];c[ic+2]=c[qb+2];k[ic+2]=k[qb+2];c[ic+3]=c[qb+3];k[ic+3]=k[qb+3];WP(ja,Y);rn(ka,ja,g);var db=(P<<2)+R;c[db]=c[Ab];k[db]=k[Ab];c[db+1]=c[Ab+1];k[db+1]=k[Ab+1];c[db+2]=c[Ab+2];k[db+2]=k[Ab+2];c[db+3]=c[Ab+3];k[db+3]=k[Ab+3];rn(ea,Y,h);var bb=(P<<2)+O;c[bb]=c[hc];k[bb]=k[hc];c[bb+1]=c[hc+1];k[bb+1]=k[hc+1];c[bb+2]=c[hc+2];k[bb+2]=k[hc+2];c[bb+3]=c[hc+3];k[bb+3]=k[hc+3];P+=1;$+=1;if(($|0)>=(Lc|0)){break a}}}}while(0);var id=v[c[c[f]+19]](f),Zc=0!=(id|0);a:do{if(Zc&&(ca=0,(ca|0)<(id|0))){for(var vb=W,rb=U,vc=W,Qc=X,Rc=ga;;){var Xd=f;v[c[c[Xd]+20]](Xd,ca,W);Bo(U,h,W);c[vb]=c[rb];k[vb]=k[rb];c[vb+1]=c[rb+1];k[vb+1]=k[rb+1];c[vb+2]=c[rb+2];k[vb+2]=k[rb+2];c[vb+3]=c[rb+3];k[vb+3]=k[rb+3];q0();var Sc=(P<<2)+r0;c[Sc]=c[vc];k[Sc]=k[vc];c[Sc+1]=c[vc+1];k[Sc+1]=k[vc+1];c[Sc+2]=c[vc+2];k[Sc+2]=k[vc+2];c[Sc+3]=c[vc+3];k[Sc+3]=k[vc+3];WP(ma,W);rn(X,ma,g);var Mc=(P<<2)+R;c[Mc]=c[Qc];k[Mc]=k[Qc];c[Mc+1]=c[Qc+1];k[Mc+1]=k[Qc+1];c[Mc+2]=c[Qc+2];k[Mc+2]=k[Qc+2];c[Mc+3]=c[Qc+3];k[Mc+3]=k[Qc+3];rn(ga,W,h);var $c=(P<<2)+O;c[$c]=c[Rc];k[$c]=k[Rc];c[$c+1]=c[Rc+1];k[$c+1]=k[Rc+1];c[$c+2]=c[Rc+2];k[$c+2]=k[Rc+2];c[$c+3]=c[Rc+3];k[$c+3]=k[Rc+3];P+=1;ca+=1;if((ca|0)>=(id|0)){break a}}}}while(0);v[c[c[e]+17]](e,R,F,P);v[c[c[f]+17]](f,O,I,P);Z=0;var Cd=(Z|0)<(P|0);a:do{if(Cd){for(var wc=ha,Bb=C,fd=B,ad=K,wd=E,Kd=G,Rd=ta,Ec=M,xd=ra,od=L,pd=ua,bd=p,jd=ha,Ld=z,Gd=G,Dd=A,fe=M;;){q0();var ge=(Z<<2)+r0;c[wc]=c[ge];k[wc]=k[ge];c[wc+1]=c[ge+1];k[wc+1]=k[ge+1];c[wc+2]=c[ge+2];k[wc+2]=k[ge+2];c[wc+3]=c[ge+3];k[wc+3]=k[ge+3];s&1&&(k[ha+2]=0);if(.01<Um(ha)){var Hd=(Z<<2)+R;c[Bb]=c[Hd];k[Bb]=k[Hd];c[Bb+1]=c[Hd+1];k[Bb+1]=k[Hd+1];c[Bb+2]=c[Hd+2];k[Bb+2]=k[Hd+2];c[Bb+3]=c[Hd+3];k[Bb+3]=k[Hd+3];var he=(Z<<2)+O;c[fd]=c[he];k[fd]=k[he];c[fd+1]=c[he+1];k[fd+1]=k[he+1];c[fd+2]=c[he+2];k[fd+2]=k[he+2];c[fd+3]=c[he+3];k[fd+3]=k[he+3];var Zd=(Z<<2)+F;c[ad]=c[Zd];k[ad]=k[Zd];c[ad+1]=c[Zd+1];k[ad+1]=k[Zd+1];c[ad+2]=c[Zd+2];k[ad+2]=k[Zd+2];c[ad+3]=c[Zd+3];k[ad+3]=k[Zd+3];var $d=(Z<<2)+I;c[wd]=c[$d];k[wd]=k[$d];c[wd+1]=c[$d+1];k[wd+1]=k[$d+1];c[wd+2]=c[$d+2];k[wd+2]=k[$d+2];c[wd+3]=c[$d+3];k[wd+3]=k[$d+3];vw(ta,g,K);c[Kd]=c[Rd];k[Kd]=k[Rd];c[Kd+1]=c[Rd+1];k[Kd+1]=k[Rd+1];c[Kd+2]=c[Rd+2];k[Kd+2]=k[Rd+2];c[Kd+3]=c[Rd+3];k[Kd+3]=k[Rd+3];vw(ra,h,E);c[Ec]=c[xd];k[Ec]=k[xd];c[Ec+1]=c[xd+1];k[Ec+1]=k[xd+1];c[Ec+2]=c[xd+2];k[Ec+2]=k[xd+2];c[Ec+3]=c[xd+3];k[Ec+3]=k[xd+3];s&1&&(k[G+2]=0,k[M+2]=0);N(ua,M,G);c[od]=c[pd];k[od]=k[pd];c[od+1]=c[pd+1];k[od+1]=k[pd+1];c[od+2]=c[pd+2];k[od+2]=k[pd+2];c[od+3]=c[pd+3];k[od+3]=k[pd+3];za=J(ha,L);za<t&&(t=za,c[bd]=c[jd],k[bd]=k[jd],c[bd+1]=c[jd+1],k[bd+1]=k[jd+1],c[bd+2]=c[jd+2],k[bd+2]=k[jd+2],c[bd+3]=c[jd+3],k[bd+3]=k[jd+3],c[Ld]=c[Gd],k[Ld]=k[Gd],c[Ld+1]=c[Gd+1],k[Ld+1]=k[Gd+1],c[Ld+2]=c[Gd+2],k[Ld+2]=k[Gd+2],c[Ld+3]=c[Gd+3],k[Ld+3]=k[Gd+3],c[Dd]=c[fe],k[Dd]=k[fe],c[Dd+1]=c[fe+1],k[Dd+1]=k[fe+1],c[Dd+2]=c[fe+2],k[Dd+2]=k[fe+2],c[Dd+3]=c[fe+3],k[Dd+3]=k[fe+3])}Z+=1;if((Z|0)>=(P|0)){break a}}}}while(0);k[ib]=Mf(e);Q(Za,p,ib);xn(z,Za);k[Sa]=Mf(f);Q(Ca,p,Sa);JC(A,Ca);if(0>t){r=0}else{var pg=Mf(e);t=t+pg+Mf(f)+.5;kZ(mb,e,f,d,0);k[Oa]=t;Q(Pa,p,Oa);QQ(fc);wn(jb,g+12,Pa);sQ(La,g);pQ(La,jb);xi(fc,La);xi(fc+16,h);k[fc+32]=0xde0b6b000000000;Y9a(fb);WP(Rb,p);Z9a(mb,Rb);gZ(mb,fc,fb,m,0);k[pb]=t-k[fb+9];k[Sb]=1;LC(p,Sb);if(c[fb+10]&1){Q(Ib,p,pb);N(ab,fb+5,Ib);c[j]=c[ab];k[j]=k[ab];c[j+1]=c[ab+1];k[j+1]=k[ab+1];c[j+2]=c[ab+2];k[j+2]=k[ab+2];c[j+3]=c[ab+3];k[j+3]=k[ab+3];var Ze=fb+5;c[l]=c[Ze];k[l]=k[Ze];c[l+1]=c[Ze+1];k[l+1]=k[Ze+1];c[l+2]=c[Ze+2];k[l+2]=k[Ze+2];c[l+3]=c[Ze+3];k[l+3]=k[Ze+3];c[i]=c[p];k[i]=k[p];c[i+1]=c[p+1];k[i+1]=k[p+1];c[i+2]=c[p+2];k[i+2]=k[p+2];c[i+3]=c[p+3];k[i+3]=k[p+3]}r=c[fb+10]&1;$39=1}var Xg=r;b=p;return Xg}X9a.X=1;function q0(){var a=b;b+=126;var d=a+1,e=a+2,f=a+3,g=a+4,h=a+5,i=a+6,j=a+7,l=a+8,m=a+9,n=a+10,p=a+11,r=a+12,s=a+13,t=a+14,w=a+15,x=a+16,y=a+17,z=a+18,A=a+19,C=a+20,B=a+21,K=a+22,E=a+23,G=a+24,M=a+25,L=a+26,F=a+27,I=a+28,R=a+29,O=a+30,Z=a+31,P=a+32,S=a+33,da=a+34,V=a+35,ba=a+36,$=a+37,Y=a+38,la=a+39,ka=a+40,ja=a+41,ea=a+42,ca=a+43,W=a+44,U=a+45,X=a+46,ma=a+47,ga=a+48,ha=a+49,ta=a+50,ra=a+51,ua=a+52,za=a+53,Za=a+54,ib=a+55,Ca=a+56,Sa=a+57,mb=a+58,Oa=a+59,Pa=a+60,fc=a+61,jb=a+62,La=a+63,fb=a+64,Rb=a+65,pb=a+66,Sb=a+67,ab=a+68,Ib=a+69,Fc=a+70,Ac=a+71,ob=a+72,Gc=a+73,Yc=a+74,Cc=a+75,Ub=a+76,Uc=a+77,nd=a+78,Ic=a+79,tc=a+80,hd=a+81,Tb=a+82,Jc=a+83,ub=a+84,uc=a+85,Kc=a+86,gb=a+87,gc=a+88,Lc=a+89,Dc=a+90,Eb=a+91,Ra=a+92,qb=a+93,Ab=a+94,hc=a+95,Hc=a+96,ic=a+97,db=a+98,bb=a+99,id=a+100,Zc=a+101,vb=a+102,rb=a+103,vc=a+104,Qc=a+105,Rc=a+106,Xd=a+107,Sc=a+108,Mc=a+109,$c=a+110,Cd=a+111,wc=a+112,Bb=a+113,fd=a+114,ad=a+115,wd=a+116,Kd=a+117,Rd=a+118,Ec=a+119,xd=a+120,od=a+121,pd=a+122,bd=a+123,jd=a+124,Ld=a+125;0==c[$9a]<<24>>24&&0!=(Hb($9a)|0)&&(k[a]=0,k[d]=0,k[e]=-1,H(r0,a,d,e),k[f]=.7236080169677734,k[g]=-.5257250070571899,k[h]=-.44721901416778564,H(r0+4,f,g,h),k[i]=-.2763879895210266,k[j]=-.8506489992141724,k[l]=-.44721901416778564,H(r0+8,i,j,l),k[m]=-.8944259881973267,k[n]=0,k[p]=-.4472160041332245,H(r0+12,m,n,p),k[r]=-.2763879895210266,k[s]=.8506489992141724,k[t]=-.44721999764442444,H(r0+16,r,s,t),k[w]=.7236080169677734,k[x]=.5257250070571899,k[y]=-.44721901416778564,H(r0+20,w,x,y),k[z]=.2763879895210266,k[A]=-.8506489992141724,k[C]=.44721999764442444,H(r0+24,z,A,C),k[B]=-.7236080169677734,k[K]=-.5257250070571899,k[E]=.44721901416778564,H(r0+28,B,K,E),k[G]=-.7236080169677734,k[M]=.5257250070571899,k[L]=.44721901416778564,H(r0+32,G,M,L),k[F]=.2763879895210266,k[I]=.8506489992141724,k[R]=.44721901416778564,H(r0+36,F,I,R),k[O]=.8944259881973267,k[Z]=0,k[P]=.4472160041332245,H(r0+40,O,Z,P),k[S]=0,k[da]=0,k[V]=1,H(r0+44,S,da,V),k[ba]=.4253230094909668,k[$]=-.3090110123157501,k[Y]=-.8506540060043335,H(r0+48,ba,$,Y),k[la]=-.16245600581169128,k[ka]=-.49999499320983887,k[ja]=-.8506540060043335,H(r0+52,la,ka,ja),k[ea]=.2628690004348755,k[ca]=-.8090119957923889,k[W]=-.525738000869751,H(r0+56,ea,ca,W),k[U]=.4253230094909668,k[X]=.3090110123157501,k[ma]=-.8506540060043335,H(r0+60,U,X,ma),k[ga]=.8506479859352112,k[ha]=0,k[ta]=-.5257359743118286,H(r0+64,ga,ha,ta),k[ra]=-.5257300138473511,k[ua]=0,k[za]=-.8506519794464111,H(r0+68,ra,ua,za),k[Za]=-.6881899833679199,k[ib]=-.49999698996543884,k[Ca]=-.5257359743118286,H(r0+72,Za,ib,Ca),k[Sa]=-.16245600581169128,k[mb]=.49999499320983887,k[Oa]=-.8506540060043335,H(r0+76,Sa,mb,Oa),k[Pa]=-.6881899833679199,k[fc]=.49999698996543884,k[jb]=-.5257359743118286,H(r0+80,Pa,fc,jb),k[La]=.2628690004348755,k[fb]=.8090119957923889,k[Rb]=-.525738000869751,H(r0+84,La,fb,Rb),k[pb]=.9510579705238342,k[Sb]=.3090130090713501,k[ab]=0,H(r0+88,pb,Sb,ab),k[Ib]=.9510579705238342,k[Fc]=-.3090130090713501,k[Ac]=0,H(r0+92,Ib,Fc,Ac),k[ob]=.5877860188484192,k[Gc]=-.80901700258255,k[Yc]=0,H(r0+96,ob,Gc,Yc),k[Cc]=0,k[Ub]=-1,k[Uc]=0,H(r0+100,Cc,Ub,Uc),k[nd]=-.5877860188484192,k[Ic]=-.80901700258255,k[tc]=0,H(r0+104,nd,Ic,tc),k[hd]=-.9510579705238342,k[Tb]=-.3090130090713501,k[Jc]=0,H(r0+108,hd,Tb,Jc),k[ub]=-.9510579705238342,k[uc]=.3090130090713501,k[Kc]=0,H(r0+112,ub,uc,Kc),k[gb]=-.5877860188484192,k[gc]=.80901700258255,k[Lc]=0,H(r0+116,gb,gc,Lc),k[Dc]=0,k[Eb]=1,k[Ra]=0,H(r0+120,Dc,Eb,Ra),k[qb]=.5877860188484192,k[Ab]=.80901700258255,k[hc]=0,H(r0+124,qb,Ab,hc),k[Hc]=.6881899833679199,k[ic]=-.49999698996543884,k[db]=.5257359743118286,H(r0+128,Hc,ic,db),k[bb]=-.2628690004348755,k[id]=-.8090119957923889,k[Zc]=.525738000869751,H(r0+132,bb,id,Zc),k[vb]=-.8506479859352112,k[rb]=0,k[vc]=.5257359743118286,H(r0+136,vb,rb,vc),k[Qc]=-.2628690004348755,k[Rc]=.8090119957923889,k[Xd]=.525738000869751,H(r0+140,Qc,Rc,Xd),k[Sc]=.6881899833679199,k[Mc]=.49999698996543884,k[$c]=.5257359743118286,H(r0+144,Sc,Mc,$c),k[Cd]=.5257300138473511,k[wc]=0,k[Bb]=.8506519794464111,H(r0+148,Cd,wc,Bb),k[fd]=.16245600581169128,k[ad]=-.49999499320983887,k[wd]=.8506540060043335,H(r0+152,fd,ad,wd),k[Kd]=-.4253230094909668,k[Rd]=-.3090110123157501,k[Ec]=.8506540060043335,H(r0+156,Kd,Rd,Ec),k[xd]=-.4253230094909668,k[od]=.3090110123157501,k[pd]=.8506540060043335,H(r0+160,xd,od,pd),k[bd]=.16245600581169128,k[jd]=.49999499320983887,k[Ld]=.8506540060043335,H(r0+164,bd,jd,Ld));b=a;return r0}q0.X=1;function Z9a(a,d){var e=a+1;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}Z9a.X=1;function a$a(){}a$a.X=1;function b$a(){}b$a.X=1;function c$a(){}c$a.X=1;function d$a(){return D.ae}d$a.X=1;function e$a(){}e$a.X=1;function f$a(a){return c[a+1]}f$a.X=1;function g$a(a,d){return c[a+3]+d}g$a.X=1;function h$a(a){xe(a)}h$a.X=1;function i$a(){}i$a.X=1;function Y9a(a){FW(a);c[a]=j$a+2;c[a+10]=0}Y9a.X=1;function k$a(a){xe(a)}k$a.X=1;function l$a(a,d,e,f){var g=a+1;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];d=a+5;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];k[a+9]=f;c[a+10]=1}l$a.X=1;function m$a(a,d,e){yW(a);c[a]=n$a+2;c[a+45]=d;c[a+46]=e;c[a+1]=16;eQ(a+13);eQ(a+29)}m$a.X=1;function o$a(a,d,e){var f=b;b+=28;var g=f+4,h=f+8,i=f+12,j=f+16,l=f+20,m=f+24,n=c[d+45],p=c[c[n]+16];rn(h,e,d+13);v[p](g,n,h);vw(f,d+13,g);g=c[d+46];h=c[c[g]+16];WP(m,e);rn(l,m,d+29);v[h](j,g,l);vw(i,d+29,j);N(a,f,i);b=f}o$a.X=1;function p$a(a,d,e,f){var g=b;b+=4;var h;h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=a,l=g;;){v[c[c[j]+16]](g,a,(h<<2)+d);var m=(h<<2)+e;c[m]=c[l];k[m]=k[l];c[m+1]=c[l+1];k[m+1]=k[l+1];c[m+2]=c[l+2];k[m+2]=k[l+2];c[m+3]=c[l+3];k[m+3]=k[l+3];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}p$a.X=1;function q$a(a){var d=c[a+45],d=v[c[c[d]+11]](d),a=c[a+46];return d+v[c[c[a]+11]](a)}q$a.X=1;function r$a(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;$1=a;$2=d;k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);b=f}r$a.X=1;function s$a(){}s$a.X=1;function t$a(a){yh(a)}t$a.X=1;function u$a(a){v$a(a);xe(a)}u$a.X=1;function w$a(a,d){(s0(a)|0)==(x$a(a)|0)&&y$a(a,z$a(a,s0(a)));var e=c[a+3]+7*c[a+1];c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];c[e+4]=c[d+4];k[e+4]=k[d+4];c[e+5]=c[d+5];k[e+5]=k[d+5];c[e+6]=c[d+6];k[e+6]=k[d+6];e=a+1;c[e]+=1}w$a.X=1;function A$a(a,d,e,f,g,h,i,j,l){var m=b;b+=1;$10=l;l=r1a(0,Ue(104,16));B$a(l,d,e,f,g,h,i);c[m]=l;C$a(a+12,m);v[c[c[a]+4]](a,c[m],d,e,j);a=c[m];b=m;return a}A$a.X=1;function C$a(a,d){(t0(a)|0)==(D$a(a)|0)&&E$a(a,F$a(a,t0(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}C$a.X=1;function G$a(a,d,e,f){var g=b;b+=1;$1=a;a=Ue(8,16);c[g]=0==(a|0)?0:a;c[c[g]]=e;c[c[g]+1]=f;H$a(d+13,g);b=g}G$a.X=1;function H$a(a,d){(u0(a)|0)==(I$a(a)|0)&&J$a(a,K$a(a,u0(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}H$a.X=1;function v$a(a){c[a]=L$a+2;if(c[a+9]&1){var d=c[a+7];v[c[c[d]]](d);yh(c[a+7])}M$a(a+12);N$a(a+1)}v$a.X=1;function O$a(){}O$a.X=1;function P$a(){}P$a.X=1;function t0(a){return c[a+1]}t0.X=1;function Q$a(a,d){return c[a+3]+d}Q$a.X=1;function u0(a){return c[a+1]}u0.X=1;function v0(a,d){return c[a+3]+d}v0.X=1;function R$a(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}R$a.X=1;function S$a(a){a+=1;c[a]-=1}S$a.X=1;function T$a(a){return c[a+7]}T$a.X=1;function U$a(a){return c[a+7]}U$a.X=1;function V$a(a,d,e,f){$1=a;a=d+18;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3];d+=22;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3]}V$a.X=1;function W$a(a,d,e,f,g,h){$2=d;$3=e;$5=g;$6=h;d=0;e=a+12;g=(d|0)<(t0(e)|0);a:do{if(g){for(h=a+12;;){var i=f;v[c[c[i]+2]](i,c[Q$a(h,d)]);d+=1;if((d|0)>=(t0(e)|0)){break a}}}}while(0)}W$a.X=1;function X$a(a,d,e,f,g){var h=b;b+=12;var i=h+4,j=h+8,l;l=d+18;c[l]=c[e];k[l]=k[e];c[l+1]=c[e+1];k[l+1]=k[e+1];c[l+2]=c[e+2];k[l+2]=k[e+2];c[l+3]=c[e+3];k[l+3]=k[e+3];l=d+22;c[l]=c[f];k[l]=k[f];c[l+1]=c[f+1];k[l+1]=k[f+1];c[l+2]=c[f+2];k[l+2]=k[f+2];c[l+3]=c[f+3];k[l+3]=k[f+3];Y$a(h,a,d,g);0!=(c[a+8]|0)&&$o(c[a+8],h,e,f);for(a=0;(a|0)<(u0(d+13)|0);){l=c[c[v0(d+13,a)]+1];v[c[c[l]+11]](l,i,j);if(!(hX(i,j,d+18,d+22)&1)){l=c[v0(d+13,a)];var m=c[l+1];v[c[c[m]+3]](m,c[l],g);R$a(d+13,a,u0(d+13)-1);S$a(d+13)}a+=1}for(a=0;(a|0)<(u0(d+13)|0);){i=c[v0(d+13,a)],j=c[i+1],v[c[c[j]+4]](j,c[i],e,f,g),a+=1}b=h}X$a.X=1;function Z$a(a,d){var e=b;b+=12;var f,g,h=e+4,i,j,l=e+8,m=c[$$a]&1;do{if(!m&&(f=v[c[c[a]+9]](a),v[c[c[f]+14]](f))){f=v[c[c[a]+9]](a);f=v[c[c[f]+7]](f);aab(f);g=jX(f)-c[a+11];Az(e);kX(f,g,e);c[a+11]=0;Az(h);c[h]=0;c[h+1]=0;g=c[h+2]=0;var n=(g|0)<(jX(f)|0),p=f;a:do{if(n){var r=h,s=h,t=h+1,w=h+1,x=h,y=a,z=a+11;for(i=p;;){i=lX(i,g);j=0!=(c[i+1]|0)?c[c[i+1]+3]:0;var A=0!=(c[t]|0)?c[c[w]+3]:0;j=((0!=(c[i]|0)?c[c[i]+3]:0)|0)==((0!=(c[r]|0)?c[c[s]+3]:0)|0)?(j|0)==(A|0):0;A=i;c[x]=c[A];k[x]=k[A];c[x+1]=c[A+1];k[x+1]=k[A+1];c[x+2]=c[A+2];k[x+2]=k[A+2];c[x+3]=c[A+3];k[x+3]=k[A+3];j=j&1?1:bab(a,c[i],c[i+1])&1?0:1;j&1&&(j=v[c[c[y]+9]](a),v[c[c[j]+8]](j,i,d),c[i]=0,c[i+1]=0,c[z]+=1,c[nX]-=1);g+=1;i=f;if((g|0)>=(jX(f)|0)){var C=i;break a}}}else{C=p}}while(0);aab(C);g=jX(f)-c[a+11];Az(l);kX(f,g,l);c[a+11]=0}}while(0);b=e}Z$a.X=1;function aab(a){1<(jX(a)|0)&&w0(a,0,jX(a)-1)}aab.X=1;function bab(a,d,e){$1=a;a=c[d+3];e=c[e+3];return hX(a+18,a+22,e+18,e+22)}bab.X=1;function cab(a,d,e){var f=b;b+=6;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5;$1=a;k[f]=-0xde0b6b000000000;k[g]=-0xde0b6b000000000;k[h]=-0xde0b6b000000000;pe(d,f,g,h);k[i]=0xde0b6b000000000;k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;pe(e,i,j,l);b=f}cab.X=1;function w0(a,d,e){var f=b;b+=5;var g,h,i=f+1;g=d;h=e;Cz(i,(((e+d|0)/2&-1)<<2)+c[a+3]);for(var j=a+3,l=a+3;;){if(x0(f,(g<<2)+c[j],i)){g+=1}else{var m=x0(f,i,(h<<2)+c[l]);a:do{if(m){for(;;){if(h-=1,!x0(f,i,(h<<2)+c[l])){break a}}}}while(0);(g|0)<=(h|0)&&(tX(a,g,h),g+=1,h-=1);if(!((g|0)<=(h|0))){break}}}(d|0)<(h|0)&&w0(a,d,h);(g|0)<(e|0)&&w0(a,g,e);b=f}w0.X=1;function K$a(a,d){$1=a;return 0!=(d|0)?d<<1:1}K$a.X=1;function dab(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}dab.X=1;function F$a(a,d){$1=a;return 0!=(d|0)?d<<1:1}F$a.X=1;function eab(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}eab.X=1;function z$a(a,d){$1=a;return 0!=(d|0)?d<<1:1}z$a.X=1;function fab(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}fab.X=1;function gab(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}gab.X=1;function x0(a,d,e){var f,g,h;$1=a;a=0!=(c[d]|0)?c[c[d]+3]:0;f=0!=(c[d+1]|0)?c[c[d+1]+3]:0;g=0!=(c[e]|0)?c[c[e]+3]:0;h=0!=(c[e+1]|0)?c[c[e+1]+3]:0;return a>>>0>g>>>0?1:(a|0)==(g|0)&&f>>>0>h>>>0?1:(a|0)!=(g|0)?0:(f|0)!=(h|0)?0:c[d+2]>>>0>c[e+2]>>>0}x0.X=1;function I$a(a){return c[a+2]}I$a.X=1;function hab(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}hab.X=1;function D$a(a){return c[a+2]}D$a.X=1;function iab(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}iab.X=1;function s0(a){return c[a+1]}s0.X=1;function x$a(a){return c[a+2]}x$a.X=1;function jab(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}jab.X=1;function J$a(a,d){var e;(I$a(a)|0)<(d|0)&&(e=kab(a,d),hab(a,0,u0(a),e),dab(a,0,u0(a)),lab(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}J$a.X=1;function kab(a,d){return 0!=(d|0)?mab(a,d,0):0}kab.X=1;function lab(a){0!=(c[a+3]|0)&&(c[a+4]&1&&nab(a,c[a+3]),c[a+3]=0)}lab.X=1;function nab(a,d){$1=a;yh(d)}nab.X=1;function mab(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}mab.X=1;function E$a(a,d){var e;(D$a(a)|0)<(d|0)&&(e=oab(a,d),iab(a,0,t0(a),e),eab(a,0,t0(a)),pab(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}E$a.X=1;function oab(a,d){return 0!=(d|0)?qab(a,d,0):0}oab.X=1;function pab(a){0!=(c[a+3]|0)&&(c[a+4]&1&&rab(a,c[a+3]),c[a+3]=0)}pab.X=1;function rab(a,d){$1=a;yh(d)}rab.X=1;function qab(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}qab.X=1;function y$a(a,d){var e;(x$a(a)|0)<(d|0)&&(e=sab(a,d),tab(a,0,s0(a),e),fab(a,0,s0(a)),uab(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}y$a.X=1;function sab(a,d){return 0!=(d|0)?vab(a,d,0):0}sab.X=1;function tab(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+7*d,j=c[h]+7*d;c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];c[i+4]=c[j+4];k[i+4]=k[j+4];c[i+5]=c[j+5];k[i+5]=k[j+5];c[i+6]=c[j+6];k[i+6]=k[j+6];d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}tab.X=1;function uab(a){0!=(c[a+3]|0)&&(c[a+4]&1&&wab(a,c[a+3]),c[a+3]=0)}uab.X=1;function wab(a,d){$1=a;yh(d)}wab.X=1;function vab(a,d,e){$1=a;$3=e;return Ue(d<<4,16)}vab.X=1;function M$a(a){eab(a,0,t0(a));pab(a);jab(a)}M$a.X=1;function N$a(a){gab(a,0,f$a(a));xab(a);yab(a)}N$a.X=1;function xab(a){0!=(c[a+3]|0)&&(c[a+4]&1&&zab(a,c[a+3]),c[a+3]=0)}xab.X=1;function yab(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}yab.X=1;function Aab(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Aab.X=1;function Bab(a,d,e){$1=a;a=c[d+3];e=c[e+3];d=0!=(c[e+2]<<16>>16&c[a+1]<<16>>16|0)&1;d=(d&1?0!=(c[a+2]<<16>>16&c[e+1]<<16>>16|0):0)&1;return d&1}Bab.X=1;function y0(a,d){return c[a+3]+d}y0.X=1;function zab(a,d){$1=a;yh(d)}zab.X=1;function Cab(){}Cab.X=1;function Y$a(a,d,e,f){PX(a);c[a]=Dab+2;c[a+1]=d;c[a+2]=e;c[a+3]=f}Y$a.X=1;function Eab(a){xe(a)}Eab.X=1;function Fab(a,d,e){var f;$3=d;for(var d=c[g$a(c[a+1]+1,e)],e=0,g=a+2,h=a+2;;){if((e|0)>=(u0(c[g]+13)|0)){f=-1;break}var i=e;if((c[c[v0(c[h]+13,e)]+1]|0)==(d|0)){f=i;break}e=i+1}0>(f|0)&&(f=v[c[c[d]+2]](d,c[a+2]+18,c[a+2]+22,c[c[a+2]+26],c[c[a+2]],c[c[a+2]+1],c[c[a+2]+2],c[a+3],c[a+2]),G$a(c[a+1],c[a+2],f,d))}Fab.X=1;function B$a(a,d,e,f,g,h,i){hV(a,d,e,g,h,i,0);Aab(a+13);g=a+18;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];d=a+22;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[a+26]=f;c[a+3]=a}B$a.X=1;function Gab(a){xe(a)}Gab.X=1;function Hab(){}Hab.X=1;function Iab(){}Iab.X=1;function Jab(a){xe(a)}Jab.X=1;function z0(a,d,e){var f,g;f=MW(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(MW(a)|0)&&YLa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(k[j]=k[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}z0.X=1;function Kab(a,d,e){var f=b;b+=36;var g,h=f+1,i=f+2,j=f+3;g=f+7;var l=f+8,m=f+9,n=f+10,p=f+11,r=f+15,s=f+19,t=f+23,w=f+27,x=f+31,y=f+35;k[f]=0;k[h]=0;k[i]=0;H(a,f,h,i);h=-0xde0b6b000000000;c[j]=c[e];k[j]=k[e];c[j+1]=c[e+1];k[j+1]=k[e+1];c[j+2]=c[e+2];k[j+2]=k[e+2];c[j+3]=c[e+3];k[j+3]=k[e+3];e=Um(j);1.4210854715202004e-14>e?(k[g]=1,k[l]=0,k[m]=0,pe(j,g,l,m)):(k[n]=1/ec(e),LC(j,n));m=jg(d+22,0);n=LI(d+27,0);e=th(d+22);g=0;i=(g|0)<(e|0);a:do{if(i){for(var z=d+3,A=d,C=A,B=p,K=r,E=a,G=p;;){if(ig(w,j,z),Q(t,w,n),wn(s,m,t),k[y]=v[c[c[C]+11]](A),Q(x,j,y),N(r,s,x),c[B]=c[K],k[B]=k[K],c[B+1]=c[K+1],k[B+1]=k[K+1],c[B+2]=c[K+2],k[B+2]=k[K+2],c[B+3]=c[K+3],k[B+3]=k[K+3],m+=4,n+=1,l=J(j,p),l>h&&(h=l,c[E]=c[G],k[E]=k[G],c[E+1]=c[G+1],k[E+1]=k[G+1],c[E+2]=c[G+2],k[E+2]=k[G+2],c[E+3]=c[G+3],k[E+3]=k[G+3]),g+=1,(g|0)>=(e|0)){break a}}}}while(0);b=f}Kab.X=1;function Lab(a,d,e,f){var g=b;b+=25;var h,i,j,l,m,n,p,r,s=g+4,t=g+8,w=g+12,x=g+16,y=g+20,z=g+24;h=0;var A=(h|0)<(f|0);a:do{if(A){for(var C=a+22,B=a+27,K=a+22,E=a+3,G=a,M=G,L=g,F=s,I=g;;){i=-0xde0b6b000000000;j=(h<<2)+d;m=jg(C,0);n=LI(B,0);p=th(K);r=0;var R=(r|0)<(p|0);b:do{if(R){for(;;){if(ig(x,j,E),Q(w,x,n),wn(t,m,w),k[z]=v[c[c[M]+11]](G),Q(y,j,z),N(s,t,y),c[L]=c[F],k[L]=k[F],c[L+1]=c[F+1],k[L+1]=k[F+1],c[L+2]=c[F+2],k[L+2]=k[F+2],c[L+3]=c[F+3],k[L+3]=k[F+3],m+=4,n+=1,l=J(j,g),l>i&&(i=l,l=(h<<2)+e,c[l]=c[I],k[l]=k[I],c[l+1]=c[I+1],k[l+1]=k[I+1],c[l+2]=c[I+2],k[l+2]=k[I+2],c[l+3]=c[I+3],k[l+3]=k[I+3]),r+=1,(r|0)>=(p|0)){break b}}}}while(0);h+=1;if((h|0)>=(f|0)){break a}}}}while(0);b=g}Lab.X=1;function WI(a,d,e,f){var g=b;b+=5;var h=g+4;TYa(a);c[a]=A0+2;KW(a+22);LW(a+27);c[a+1]=9;xZ(a+22,f,g);k[h]=0;z0(a+27,f,h);var h=0,i=(h|0)<(f|0);a:do{if(i){for(var j=a+22,l=a+27;;){var m=xg(j,h),n=(h<<2)+d;c[m]=c[n];k[m]=k[n];c[m+1]=c[n+1];k[m+1]=k[n+1];c[m+2]=c[n+2];k[m+2]=k[n+2];c[m+3]=c[n+3];k[m+3]=k[n+3];k[y0(l,h)]=k[e+h];h+=1;if((h|0)>=(f|0)){break a}}}}while(0);cJ(a);b=g}WI.X=1;function Mab(){return D.xe}Mab.X=1;function Nab(){return 64}Nab.X=1;function B0(a){return c[a+1]}B0.X=1;function C0(a){return c[a+1]}C0.X=1;function D0(a,d){return c[a+3]+7*d}D0.X=1;function E0(a){return 0<=(c[a+6]|0)}E0.X=1;function F0(a){return-c[a+6]}F0.X=1;function Oab(a,d,e){var f=b;b+=20;var g=f+4,h=f+8,i=f+12,j=f+16,l=f+17,m=f+18,n=f+19;Pab(a,f,g);N(i,g,f);k[j]=.5;Q(h,i,j);a=2*k[h];g=2*k[h+1];h=2*k[h+2];k[l]=d/12*(g*g+h*h);k[m]=d/12*(a*a+h*h);k[n]=d/12*(a*a+g*g);pe(e,l,m,n);b=f}Oab.X=1;function Pab(a,d,e){var f=a+13;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];a+=17;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}Pab.X=1;function Qab(a,d,e){var f,g,h;GX(a,d,e);f=th(a+22);g=0!=(f|0)?v[c[c[e]+7]](e,jg(a+22,0)):0;c[d+16]=g;c[d+17]=f;if(0!=(f|0)){d=v[c[c[e]+4]](e,20,f);g=c[d+2];h=0;var i=(h|0)<(f|0);a:do{if(i){for(var j=a+22,l=a+27;;){if(mc(jg(j,h),g),k[g+4]=k[LI(l,h)],h+=1,g+=5,(h|0)>=(f|0)){break a}}}}while(0);v[c[c[e]+5]](e,d,D.Ee,1497453121,jg(a+22,0))}return D.be}Qab.X=1;function Rab(a){Sab(a)}Rab.X=1;function xp(a){mW(a);c[a]=Tab+2}xp.X=1;function Uab(a){G0(a)}Uab.X=1;function cp(a,d,e,f,g){var h=b;b+=53;var i=h+3,j=h+10,l=h+12,m=h+16,n=h+17,p=h+18,r=h+19,s=h+23,t=h+24,w=h+25,x=h+26,y=h+42;c[a+15]=e&1;if(c[a+15]&1){Wo(a,f,g,1),Vab(h,a+26,a),v[c[c[d]+2]](d,h,a+1,a+5),d=s0(a+26),c[i]=0,k[i]=0,c[i+1]=0,k[i+1]=0,c[i+2]=0,k[i+2]=0,c[i+3]=0,k[i+3]=0,c[i+4]=0,k[i+4]=0,c[i+5]=0,k[i+5]=0,c[i+6]=0,k[i+6]=0,H0(a+31,d<<1,i)}else{Wab(j,a+16);k[m]=-0xde0b6b000000000;k[n]=-0xde0b6b000000000;k[p]=-0xde0b6b000000000;H(l,m,n,p);k[s]=0xde0b6b000000000;k[t]=0xde0b6b000000000;k[w]=0xde0b6b000000000;H(r,s,t,w);v[c[c[d]+2]](d,j,l,r);d=B0(a+16);i=x;for(e=i+16;i<e;i++){c[i]=0,k[i]=0}I0(a+21,d<<1,x)}c[a+14]=0;J0(a,0,d);c[a+15]&1&&0==(C0(a+37)|0)&&(x=K0(a+37,y),ZU(x,D0(a+31,0)),c[x+6]=0,c[x+7]=E0(D0(a+31,0))?1:F0(D0(a+31,0)));c[a+42]=C0(a+37);L0(a+26);M0(a+16);b=h}cp.X=1;function H0(a,d,e){var f,g;f=s0(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(s0(a)|0)&&y$a(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+7*g,l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3];c[j+4]=c[l+4];k[j+4]=k[l+4];c[j+5]=c[l+5];k[j+5]=k[l+5];c[j+6]=c[l+6];k[j+6]=k[l+6];g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}H0.X=1;function I0(a,d,e){var f,g;f=B0(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(B0(a)|0)&&Xab(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){for(var j=e,l=(g<<4)+c[i],m=j+16;j<m;j++,l++){c[l]=c[j],k[l]=k[j]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}I0.X=1;function K0(a,d){var e;e=C0(a);(e|0)==(Yab(a)|0)&&Zab(a,$ab(a,C0(a)));var f=a+1;c[f]+=1;for(var f=d,g=c[a+3]+11*e,h=f+11;f<h;f++,g++){c[g]=c[f],k[g]=k[f]}return c[a+3]+11*e}K0.X=1;function L0(a){fab(a,0,s0(a));uab(a);N0(a)}L0.X=1;function M0(a){abb(a,0,B0(a));bbb(a);O0(a)}M0.X=1;function cbb(a){Sab(a);yh(a)}cbb.X=1;function Sab(a){c[a]=A0+2;SW(a+27);UW(a+22)}Sab.X=1;function dbb(a){G0(a);yh(a)}dbb.X=1;function ebb(){return 84}ebb.X=1;function abb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}abb.X=1;function $ab(a,d){$1=a;return 0!=(d|0)?d<<1:1}$ab.X=1;function P0(a,d){return c[a+3]+11*d}P0.X=1;function Q0(a){return c[a+6]>>21}Q0.X=1;function R0(a){return c[a+6]&2097151}R0.X=1;function O0(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}O0.X=1;function N0(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}N0.X=1;function Yab(a){return c[a+2]}Yab.X=1;function ip(a,d,e,f){var g,h,i=c[a+15]&1;a:do{if(i){Wo(a,e,f,1);Yo(a,d,0,c[a+14],0);g=0;var j=a+37;if((g|0)<(C0(j)|0)){for(var l=a+37,m=a+31;;){if(h=P0(l,g),ZU(h,D0(m,c[h+6])),g+=1,(g|0)>=(C0(j)|0)){break a}}}}}while(0)}ip.X=1;function Yo(a,d,e,f,g){var h=b;b+=48;var i,j=h+1,l=h+2,m=h+3,n=h+4,p=h+5,r=h+6,s=h+7,t=h+8,w=h+20,x=h+24,y,z,A,C,B=h+28,K=h+32,E=h+33,G=h+34,M=h+35,L=h+39,F=h+40,I=h+41,R=h+42,O=h+43,Z=h+44,P=h+45,S=h+46,da=h+47;$5=g;i=-1;c[h]=0;c[j]=0;c[l]=2;c[m]=0;c[n]=0;c[p]=0;c[r]=0;c[s]=2;var g=d+1,f=f-1,V=(f|0)>=(e|0);a:do{if(V){for(var ba=a+31,$=B,Y=M,la=t,ka=t,ja=t+4,ea=t+4,ca=t+8,W=t+8,U=a,X=a,ma=a+31,ga=a+31;;){y=D0(ba,f);var ha=E0(y);b:do{if(ha){z=Q0(y);A=R0(y);(z|0)!=(i|0)&&(0<=(i|0)&&(C=d,v[c[c[C]+6]](C,i)),i=d,v[c[c[i]+4]](i,h,j,l,m,n,p,r,s,z),i=z);z=c[n]+c[p]*A;for(A=2;;){C=A;var ta=z;C=c[h]+c[m]*(3==(c[s]|0)?c[ta+C]&65535:c[ta+C]);0==(c[l]|0)?(k[K]=k[C]*k[g],k[E]=k[C+1]*k[g+1],k[G]=k[C+2]*k[g+2],H(B,K,E,G),C=(A<<2)+t,c[C]=c[$],k[C]=k[$],c[C+1]=c[$+1],k[C+1]=k[$+1],c[C+2]=c[$+2],k[C+2]=k[$+2],c[C+3]=c[$+3],k[C+3]=k[$+3]):(k[L]=k[C]*k[g],k[F]=k[C+1]*k[g+1],k[I]=k[C+2]*k[g+2],H(M,L,F,I),C=(A<<2)+t,c[C]=c[Y],k[C]=k[Y],c[C+1]=c[Y+1],k[C+1]=k[Y+1],c[C+2]=c[Y+2],k[C+2]=k[Y+2],c[C+3]=c[Y+3],k[C+3]=k[Y+3]);A=C=A-1;if(!(0<=(C|0))){break}}k[R]=0xde0b6b000000000;k[O]=0xde0b6b000000000;k[Z]=0xde0b6b000000000;pe(w,R,O,Z);k[P]=-0xde0b6b000000000;k[S]=-0xde0b6b000000000;k[da]=-0xde0b6b000000000;pe(x,P,S,da);hp(w,la);gp(x,ka);hp(w,ja);gp(x,ea);hp(w,ca);gp(x,W);Xo(U,y,w,0);Xo(X,y+3,x,1)}else{z=D0(ma,f+1);A=f;A=E0(z)?D0(ga,A+2):D0(ga,A+F0(z)+1);for(C=0;;){if(c[y+C]=c[z+C],(c[y+C]&65535|0)>(c[A+C]&65535|0)&&(c[y+C]=c[A+C]),c[y+(C+3)]=c[z+(C+3)],(c[y+(C+3)]&65535|0)<(c[A+(C+3)]&65535|0)&&(c[y+(C+3)]=c[A+(C+3)]),C=ta=C+1,3<=(ta|0)){break b}}}}while(0);f-=1;if(!((f|0)>=(e|0))){break a}}}}while(0);if(0<=(i|0)){v[c[c[d]+6]](d,i)}b=h}Yo.X=1;function dp(a,d,e,f){var g=b;b+=6;var h=g+3;Xo(a,g,e,0);Xo(a,h,f,1);var e=0,i=a+37,j=(e|0)<(C0(i)|0);a:do{if(j){for(var l=a+37,m=g,n=h,p=a+31;;){var f=P0(l,e),r=S0(m,n,f,f+3);$overlap=r;0!=(r|0)&&(Yo(a,d,c[f+6],c[f+7]+c[f+6],e),ZU(f,D0(p,c[f+6])));e+=1;if((e|0)>=(C0(i)|0)){break a}}}}while(0);b=g}dp.X=1;function S0(a,d,e,f){return fbb((c[d]&65535|0)>=(c[e]&65535|0)&1&(c[a]&65535|0)<=(c[f]&65535|0)&1&(c[a+2]&65535|0)<=(c[f+2]&65535|0)&1&(c[d+2]&65535|0)>=(c[e+2]&65535|0)&1&(c[a+1]&65535|0)<=(c[f+1]&65535|0)&1&(c[d+1]&65535|0)>=(c[e+1]&65535|0)&1,1,0)}S0.X=1;function cha(a,d,e){return dKa(a,d,e&1)}cha.X=1;function gbb(a,d,e,f){hbb(a,d,e,f&1);return 1}gbb.X=1;function bbb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&ibb(a,c[a+3]),c[a+3]=0)}bbb.X=1;function ibb(a,d){$1=a;yh(d)}ibb.X=1;function Zab(a,d){var e;(Yab(a)|0)<(d|0)&&(e=jbb(a,d),kbb(a,0,C0(a),e),lbb(a,0,C0(a)),mbb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Zab.X=1;function jbb(a,d){return 0!=(d|0)?nbb(a,d,0):0}jbb.X=1;function lbb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}lbb.X=1;function fbb(a,d,e){a=(-a|a)>>31;return(a^-1)&e|a&d}fbb.X=1;function obb(a,d){$1=a;return 0!=(d|0)?d<<1:1}obb.X=1;function pbb(a){return c[a+2]}pbb.X=1;function kbb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){for(var i=c[h]+11*d,j=f+11*d,l=i+11;i<l;i++,j++){c[j]=c[i],k[j]=k[i]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}kbb.X=1;function mbb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&qbb(a,c[a+3]),c[a+3]=0)}mbb.X=1;function qbb(a,d){$1=a;yh(d)}qbb.X=1;function nbb(a,d,e){$1=a;$3=e;return Ue(d<<5,16)}nbb.X=1;function Xab(a,d){var e;(pbb(a)|0)<(d|0)&&(e=rbb(a,d),sbb(a,0,B0(a),e),abb(a,0,B0(a)),bbb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Xab.X=1;function rbb(a,d){return 0!=(d|0)?tbb(a,d,0):0}rbb.X=1;function sbb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){for(var i=(d<<4)+c[h],j=(d<<4)+f,l=i+16;i<l;i++,j++){c[j]=c[i],k[j]=k[i]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}sbb.X=1;function tbb(a,d,e){$1=a;$3=e;return Ue(d<<6,16)}tbb.X=1;function ubb(){}ubb.X=1;function Wab(a,d){FY(a);c[a]=vbb+2;c[a+1]=d}Wab.X=1;function wbb(a){xe(a)}wbb.X=1;function xbb(a,d,e,f){var g=b;b+=30;var h=g+16,i=g+20,j=g+24,l=g+25,m=g+26,n=g+27,p=g+28,r=g+29;k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;k[m]=0xde0b6b000000000;pe(h,j,l,m);k[n]=-0xde0b6b000000000;k[p]=-0xde0b6b000000000;k[r]=-0xde0b6b000000000;pe(i,n,p,r);hp(h,d);gp(i,d);hp(h,d+4);gp(i,d+4);hp(h,d+8);gp(i,d+8);c[g]=c[h];k[g]=k[h];c[g+1]=c[h+1];k[g+1]=k[h+1];c[g+2]=c[h+2];k[g+2]=k[h+2];c[g+3]=c[h+3];k[g+3]=k[h+3];d=g+4;c[d]=c[i];k[d]=k[i];c[d+1]=c[i+1];k[d+1]=k[i+1];c[d+2]=c[i+2];k[d+2]=k[i+2];c[d+3]=c[i+3];k[d+3]=k[i+3];c[g+8]=-1;c[g+9]=e;c[g+10]=f;ybb(c[a+1],g);b=g}xbb.X=1;function ybb(a,d){(B0(a)|0)==(pbb(a)|0)&&Xab(a,obb(a,B0(a)));for(var e=d,f=(c[a+1]<<4)+c[a+3],g=e+16;e<g;e++,f++){c[f]=c[e],k[f]=k[e]}e=a+1;c[e]+=1}ybb.X=1;function zbb(){}zbb.X=1;function Vab(a,d,e){FY(a);c[a]=Abb+2;c[a+1]=d;c[a+2]=e}Vab.X=1;function Bbb(a){xe(a)}Bbb.X=1;function Cbb(a,d,e,f){var g=b;b+=21;var h=g+7,i=g+11,j=g+15,l=g+16,m=g+17,n=g+18,p=g+19,r=g+20;k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;k[m]=0xde0b6b000000000;pe(h,j,l,m);k[n]=-0xde0b6b000000000;k[p]=-0xde0b6b000000000;k[r]=-0xde0b6b000000000;pe(i,n,p,r);hp(h,d);gp(i,d);hp(h,d+4);gp(i,d+4);hp(h,d+8);gp(i,d+8);$MIN_AABB_DIMENSION=.0020000000949949026;$MIN_AABB_HALF_DIMENSION=.0010000000474974513;.0020000000949949026>k[i]-k[h]&&(k[i]+=.0010000000474974513,k[h]-=.0010000000474974513);.0020000000949949026>k[i+1]-k[h+1]&&(cC(i,k[i+1]+.0010000000474974513),cC(h,k[h+1]-.0010000000474974513));.0020000000949949026>k[i+2]-k[h+2]&&(dC(i,k[i+2]+.0010000000474974513),dC(h,k[h+2]-.0010000000474974513));Xo(c[a+2],g,h,0);Xo(c[a+2],g+3,i,1);c[g+6]=e<<21|f;w$a(c[a+1],g);b=g}Cbb.X=1;function Dbb(a){var d=b;b+=2;var e,f,g=d+1,h,i,j;e=pX(a+1);var l=(rW(a+8)|0)<(e|0);a:do{if(l){f=rW(a+8);c[d]=0;PV(a+8,e,d);c[g]=0;PV(a+13,e,g);h=0;var m=(h|0)<(e|0);b:do{if(m){for(var n=a+8;;){if(c[QV(n,h)]=-1,h+=1,(h|0)>=(e|0)){break b}}}}while(0);h=0;m=(h|0)<(e|0);b:do{if(m){for(n=a+13;;){if(c[QV(n,h)]=-1,h+=1,(h|0)>=(e|0)){break b}}}}while(0);h=0;if((h|0)<(f|0)){for(var m=a+1,n=a+1,p=a+8,r=a+13,s=a+8;;){if(i=lX(m,h),j=YG(c[i]),i=pX(n)-1&T0(0,j,YG(c[i+1])),c[QV(r,h)]=c[QV(p,i)],c[QV(s,i)]=h,h+=1,(h|0)>=(f|0)){break a}}}}}while(0);b=d}Dbb.X=1;function Ebb(a){Fbb(a);xe(a)}Ebb.X=1;function dX(a){uX(a);c[a]=U0+2;wX(a+1);c[a+6]=0;c[a+7]=0;vW(a+8);vW(a+13);c[a+18]=0;rX(a+1,2);Dbb(a)}dX.X=1;function V0(a,d){var e;e=c[a];c[a]=c[d];c[d]=e}V0.X=1;function T0(a,d,e){a=e<<16|d;a+=a<<15^-1;a^=a>>10;a=(a<<3)+a;a^=a>>6;a+=a<<11^-1;return a^a>>16}T0.X=1;function Gbb(a,d,e){$1=a;0!=(c[d+2]|0)&&(a=c[d+2],v[c[c[a]]](a),v[c[c[e]+15]](e,c[d+2]),c[d+2]=0)}Gbb.X=1;function Hbb(a,d,e){var f=b;b+=4;Ibb(f,d,a,e);v[c[c[a]+12]](a,f,e);b=f}Hbb.X=1;function Jbb(a,d,e){var f=b;b+=2;Kbb(f,d);v[c[c[a]+12]](a,f,e);b=f}Jbb.X=1;function Lbb(a,d,e){var f=b;b+=2;var g=f+1;c[f]=d;c[g]=e;c[Mbb]+=1;(c[c[f]+4]|0)>(c[c[g]+4]|0)&&V0(f,g);d=YG(c[f]);g=YG(c[g]);e=pX(a+1)-1&T0(0,d,g);if((e|0)>=(rW(a+8)|0)){a=0}else{for(var h=c[QV(a+8,e)],e=h,i=a+1,j=a+13;-1!=(h|0)&&0==(Nbb(a,lX(i,e),d,g)&1|0);){e=h=c[QV(j,e)]}a=-1==(e|0)?0:lX(a+1,e)}b=f;return a}Lbb.X=1;function Nbb(a,d,e,f){$1=a;return(YG(c[d])|0)==(e|0)?(YG(c[d+1])|0)==(f|0):0}Nbb.X=1;function Obb(a,d,e){var f=b;b+=2;var g=f+1,h,i,j,l;c[f]=d;c[g]=e;(c[c[f]+4]|0)>(c[c[g]+4]|0)&&V0(f,g);d=YG(c[f]);e=YG(c[g]);h=pX(a+1)-1&T0(0,d,e);i=j=Pbb(a,c[f],c[g],h);if(0==(j|0)){j=jX(a+1);i=pX(a+1);l=Qbb(a+1);if(0!=(c[a+18]|0)){var m=c[a+18];v[c[c[m]+2]](m,c[f],c[g])}(i|0)<(pX(a+1)|0)&&(Dbb(a),h=pX(a+1)-1&T0(0,d,e));Ez(l,c[f],c[g]);i=l;c[i+2]=0;c[i+3]=0;c[QV(a+13,j)]=c[QV(a+8,h)];c[QV(a+8,h)]=j}b=f;return i}Obb.X=1;function Pbb(a,d,e,f){for(var d=YG(d),e=YG(e),g=c[QV(a+8,f)],f=g,h=a+1,i=a+13;-1!=(g|0)&&0==(Nbb(a,lX(h,f),d,e)&1|0);){f=g=c[QV(i,f)]}return-1==(f|0)?0:lX(a+1,f)}Pbb.X=1;function Qbb(a){var d;d=jX(a);(d|0)==(pX(a)|0)&&rX(a,Rbb(a,jX(a)));var e=a+1;c[e]+=1;return(d<<2)+c[a+3]}Qbb.X=1;function Sbb(a,d,e,f){var g=b;b+=2;var h=g+1,i,j,l;c[g]=d;c[h]=e;c[W0]+=1;(c[c[g]+4]|0)>(c[c[h]+4]|0)&&V0(g,h);i=pX(a+1)-1&T0(0,YG(c[g]),YG(c[h]));e=Pbb(a,c[g],c[h],i);if(0==(e|0)){a=0}else{v[c[c[a]+8]](a,e,f);d=c[e+3];e=(e-lX(a+1,0)|0)/(lX(a+1,1)-lX(a+1,0)|0)&-1;j=c[QV(a+8,i)];l=-1;if((j|0)!=(e|0)){for(var m=a+13;!(l=j,j=c[QV(m,j)],(j|0)==(e|0));){}j=l}else{j=-1}m=c[QV(a+13,e)];-1!=(j|0)?c[QV(a+13,l)]=m:c[QV(a+8,i)]=m;i=jX(a+1)-1;0!=(c[a+18]|0)&&(l=c[a+18],v[c[c[l]+3]](l,c[g],c[h],f));f=a+1;if((i|0)==(e|0)){X0(f)}else{f=lX(f,i);f=pX(a+1)-1&T0(0,YG(c[f]),YG(c[f+1]));j=c[QV(a+8,f)];l=-1;if((j|0)!=(i|0)){for(h=a+13;!(l=j,j=c[QV(h,j)],(j|0)==(i|0));){}h=l}else{h=-1}j=c[QV(a+13,i)];-1!=(h|0)?c[QV(a+13,l)]=j:c[QV(a+8,f)]=j;h=lX(a+1,e);l=lX(a+1,i);c[h]=c[l];k[h]=k[l];c[h+1]=c[l+1];k[h+1]=k[l+1];c[h+2]=c[l+2];k[h+2]=k[l+2];c[h+3]=c[l+3];k[h+3]=k[l+3];c[QV(a+13,e)]=c[QV(a+8,f)];c[QV(a+8,f)]=e;X0(a+1)}a=d}b=g;return a}Sbb.X=1;function Fbb(a){c[a]=U0+2;wW(a+13);wW(a+8);yX(a+1)}Fbb.X=1;function Tbb(){}Tbb.X=1;function X0(a){a+=1;c[a]-=1}X0.X=1;function Ubb(a,d,e){var f,g;f=0;var h=a+1,i=(f|0)<(jX(h)|0);a:do{if(i){for(var j=a+1,l=a;;){g=lX(j,f);var m=d;v[c[c[m]+2]](m,g)?(v[c[c[l]+3]](a,c[g],c[g+1],e),c[nX]-=1):f+=1;if((f|0)>=(jX(h)|0)){break a}}}}while(0)}Ubb.X=1;function Vbb(a,d){(jX(a)|0)==(pX(a)|0)&&rX(a,Rbb(a,jX(a)));Cz((c[a+1]<<2)+c[a+3],d);var e=a+1;c[e]+=1}Vbb.X=1;function Wbb(a,d,e,f){var g=b;b+=4;var h,i,j;v[c[c[a]+14]](a)?a=7:(Ez(g,d,e),i=Xbb(a+1,g),(i|0)<(jX(a+1)|0)?(c[nX]-=1,j=lX(a+1,i),h=c[j+3],v[c[c[a]+8]](a,j,f),0!=(c[a+9]|0)&&(j=c[a+9],v[c[c[j]+3]](j,d,e,f)),tX(a+1,i,pX(a+1)-1),X0(a+1),a=8):a=7);7==a&&(h=0);b=g;return h}Wbb.X=1;function Xbb(a,d){var e,f;e=jX(a);f=0;for(var g=a+3;(f|0)<(jX(a)|0);){var h=f;if(mX((f<<2)+c[g],d)){e=h;break}f=h+1}return e}Xbb.X=1;function Ybb(a,d,e){if(Zbb(a,d,e)){var f;f=Qbb(a+1);Ez(f,d,e);c[nX]+=1;c[Y0]+=1;0!=(c[a+9]|0)&&(a=c[a+9],v[c[c[a]+2]](a,d,e));d=f}else{d=0}return d}Ybb.X=1;function Zbb(a,d,e){0!=(c[a+8]|0)?(a=c[a+8],d=v[c[c[a]+2]](a,d,e)):(a=0!=(c[e+2]<<16>>16&c[d+1]<<16>>16|0)&1,a=(a&1?0!=(c[d+2]<<16>>16&c[e+1]<<16>>16|0):0)&1,d=a&1);return d}Zbb.X=1;function $bb(a,d,e){var f=b;b+=4;Zbb(a,d,e)?(Ez(f,d,e),d=Xbb(a+1,f),a=(d|0)<(jX(a+1)|0)?lX(a+1,d):0):a=0;b=f;return a}$bb.X=1;function acb(a,d,e){var f,g;f=0;var h=a+1,i=(f|0)<(jX(h)|0);a:do{if(i){for(var j=a+1,l=a,m=a+1,n=a+1,p=a+1;;){g=lX(j,f);var r=d;v[c[c[r]+2]](r,g)?(v[c[c[l]+8]](a,g,e),c[g]=0,c[g+1]=0,tX(m,f,jX(n)-1),X0(p),c[nX]-=1):f+=1;if((f|0)>=(jX(h)|0)){break a}}}}while(0)}acb.X=1;function bcb(a){ccb(a);xe(a)}bcb.X=1;function ccb(a){c[a]=Z0+2;yX(a+1)}ccb.X=1;function dcb(a,d,e){$1=a;0!=(c[d+2]|0)&&(a=c[d+2],v[c[c[a]]](a),v[c[c[e]+15]](e,c[d+2]),c[d+2]=0,c[W0]-=1)}dcb.X=1;function ecb(a,d,e){var f=b;b+=4;fcb(f,d,a,e);v[c[c[a]+12]](a,f,e);b=f}ecb.X=1;function gcb(a,d,e){var f=b;b+=2;hcb(f,d);v[c[c[a]+12]](a,f,e);b=f}gcb.X=1;function icb(a,d){var e=b;b+=5;var f;wX(e);f=0;for(var g=a+1,h=a+1;(f|0)<(jX(g)|0);){Vbb(e,lX(h,f)),f+=1}for(f=0;(f|0)<(jX(e)|0);){v[c[c[a]+3]](a,c[lX(e,f)],c[lX(e,f)+1],d),f+=1}f=0;g=a+13;h=(f|0)<(rW(g)|0);a:do{if(h){for(var i=a+13;;){if(c[QV(i,f)]=-1,f+=1,(f|0)>=(rW(g)|0)){break a}}}}while(0);iX(e);for(f=0;(f|0)<(jX(e)|0);){v[c[c[a]+2]](a,c[lX(e,f)],c[lX(e,f)+1]),f+=1}yX(e);b=e}icb.X=1;function jcb(a){uX(a);c[a]=Z0+2;wX(a+1);c[a+6]=0;c[a+7]=1;c[a+8]=0;c[a+9]=0;rX(a+1,2)}jcb.X=1;function kcb(){return 0}kcb.X=1;function Rbb(a,d){$1=a;return 0!=(d|0)?d<<1:1}Rbb.X=1;function lcb(a){return a+1}lcb.X=1;function mcb(a,d){c[a+6]=d}mcb.X=1;function ncb(a,d){c[a+18]=d}ncb.X=1;function ocb(a){return a+1}ocb.X=1;function pcb(a,d){c[a+8]=d}pcb.X=1;function qcb(a){return c[a+7]&1}qcb.X=1;function rcb(a,d){c[a+9]=d}rcb.X=1;function scb(a,d){return(c[d]|0)==(c[a+1]|0)?1:(c[d+1]|0)==(c[a+1]|0)}scb.X=1;function tcb(a,d){return(c[d]|0)==(c[a+1]|0)?1:(c[d+1]|0)==(c[a+1]|0)}tcb.X=1;function rk(a){return k[a+280]}rk.X=1;function ucb(a,d,e){c[Y0]+=1;return vcb(a,d,e)?Obb(a,d,e):0}ucb.X=1;function wcb(a){return lX(a+1,0)}wcb.X=1;function xcb(a){return xX(a+1,0)}xcb.X=1;function ycb(a){return jX(a+1)}ycb.X=1;function zcb(a){return lX(a+1,0)}zcb.X=1;function Acb(a){return xX(a+1,0)}Acb.X=1;function Bcb(a){return jX(a+1)}Bcb.X=1;function vcb(a,d,e){0!=(c[a+6]|0)?(a=c[a+6],d=v[c[c[a]+2]](a,d,e)):(a=0!=(c[e+2]<<16>>16&c[d+1]<<16>>16|0)&1,a=(a&1?0!=(c[d+2]<<16>>16&c[e+1]<<16>>16|0):0)&1,d=a&1);return d}vcb.X=1;function Ccb(){}Ccb.X=1;function hcb(a,d){YX(a);c[a]=Dcb+2;c[a+1]=d}hcb.X=1;function Ecb(a){xe(a)}Ecb.X=1;function Fcb(){}Fcb.X=1;function fcb(a,d,e,f){YX(a);c[a]=Gcb+2;c[a+1]=d;c[a+2]=e;c[a+3]=f}fcb.X=1;function Hcb(a){xe(a)}Hcb.X=1;function Icb(a,d){if(4==((c[d]|0)==(c[a+1]|0)?4:(c[d+1]|0)==(c[a+1]|0)?4:5)){var e=c[a+2];v[c[c[e]+8]](e,d,c[a+3])}return 0}Icb.X=1;function Jcb(){}Jcb.X=1;function Kbb(a,d){YX(a);c[a]=Kcb+2;c[a+1]=d}Kbb.X=1;function Lcb(a){xe(a)}Lcb.X=1;function Mcb(){}Mcb.X=1;function Ibb(a,d,e,f){YX(a);c[a]=Ncb+2;c[a+1]=d;c[a+2]=e;c[a+3]=f}Ibb.X=1;function Ocb(a){xe(a)}Ocb.X=1;function Pcb(a,d){if(4==((c[d]|0)==(c[a+1]|0)?4:(c[d+1]|0)==(c[a+1]|0)?4:5)){var e=c[a+2];v[c[c[e]+8]](e,d,c[a+3])}return 0}Pcb.X=1;function wk(a){c[a]=1025;var d=a+1;CU(d);d+=69;CU(d);d+=69;CU(d);CU(d+69);c[a+277]=0;c[a+278]=0;c[a+279]=0;c[a+284]=0}wk.X=1;function tk(a,d){$1=a;0!=(c[d+27]|0)&&0!=(c[d+27]|0)&0!=(c[Qcb]|0)&&(v[c[Qcb]](c[d+27]),c[d+27]=0)}tk.X=1;function Rcb(a,d){var e=b;b+=56;var f,g,h,i=e+1,j=e+2,l=e+3,m=e+4,n=e+8,p=e+12,r=e+16,s=e+20,t=e+24,w=e+28,x=e+32,y=e+36,z=e+40,A=e+44,C=e+48,B=e+52;g=-1;f=aU(d);h=0;for(var K=a+1,E=a+1;;){aU(K+69*h)<f&&(g=h,f=aU(E+69*h));var G=h+1;h=G;if(4<=(G|0)){break}}k[e]=0;k[i]=0;k[j]=0;k[l]=0;0!=(g|0)?(N(m,d,a+70),N(n,a+208,a+139),qn(p,m,n),k[e]=Um(p),f=1!=(g|0)?8:9):f=8;8==f&&(N(r,d,a+1),N(s,a+208,a+139),qn(t,r,s),k[i]=Um(t),f=2!=(g|0)?9:10);9==f&&(N(w,d,a+1),N(x,a+208,a+70),qn(y,w,x),k[j]=Um(y),f=3!=(g|0)?10:11);10==f&&(N(z,d,a+1),N(A,a+139,a+70),qn(C,z,A),k[l]=Um(C));jC(B,e,i,j,l);g=CC(B);b=e;return g}Rcb.X=1;function Ak(a,d){var e=b;b+=4;var f,g,h,i,j;f=rk(a)*rk(a);g=Xj(a);h=-1;i=0;var l=(i|0)<(g|0);a:do{if(l){for(var m=a+1;;){if(N(e,m+69*i,d),j=J(e,e),j<f&&(f=j,h=i),i+=1,(i|0)>=(g|0)){break a}}}}while(0);b=e;return h}Ak.X=1;function zk(a,d){var e;e=Xj(a);if(4==(e|0)){e=Rcb(a,d),tk(a,a+69*e+1)}else{var f=a+279;c[f]+=1}0>(e|0)&&(e=0);for(var f=d,g=a+69*e+1,h=f+69;f<h;f++,g++){c[g]=c[f],k[g]=k[f]}return e}zk.X=1;function sk(a,d,e){var f=b;b+=32;var g,h,i=f+4,j=f+8,l=f+12,m=f+16,n=f+20,p=f+24,r=f+28,s=Xj(a)-1;g=s;s=0<=(s|0);a:do{if(s){for(var t=a+1,w=f,x=i;;){h=t+69*g;vw(f,d,h);var y=h+12;c[y]=c[w];k[y]=k[w];c[y+1]=c[w+1];k[y+1]=k[w+1];c[y+2]=c[w+2];k[y+2]=k[w+2];c[y+3]=c[w+3];k[y+3]=k[w+3];vw(i,e,h+4);y=h+8;c[y]=c[x];k[y]=k[x];c[y+1]=c[x+1];k[y+1]=k[x+1];c[y+2]=c[x+2];k[y+2]=k[x+2];c[y+3]=c[x+3];k[y+3]=k[x+3];N(j,h+12,h+8);k[h+20]=J(j,h+16);h+=36;c[h]+=1;g=h=g-1;if(!(0<=(h|0))){break a}}}}while(0);g=d=Xj(a)-1;d=0<=(d|0);a:do{if(d){e=a+1;i=m;j=n;s=l;t=r;w=a+277;for(x=a+278;;){h=e+69*g;if(qk(a,h)){if(Q(p,h+16,h+20),N(n,h+12,p),c[i]=c[j],k[i]=k[j],c[i+1]=c[j+1],k[i+1]=k[j+1],c[i+2]=c[j+2],k[i+2]=k[j+2],c[i+3]=c[j+3],k[i+3]=k[j+3],N(r,h+8,m),c[s]=c[t],k[s]=k[t],c[s+1]=c[t+1],k[s+1]=k[t+1],c[s+2]=c[t+2],k[s+2]=k[t+2],c[s+3]=c[t+3],k[s+3]=k[t+3],J(l,l)>rk(a)*rk(a)){Ck(a,g)}else{if(0!=(c[Scb]|0)){v[c[Scb]](h,c[w],c[x])}}}else{Ck(a,g)}g=h=g-1;if(!(0<=(h|0))){break a}}}}while(0);b=f}sk.X=1;function Tcb(a,d,e,f){var g=b;b+=18;var h,i,j,l,m=g+4,n=g+8,p=g+12,r=g+13,s=g+17;l=th(a);var t=2>(l|0);a:do{if(!t&&(h=g,i=jg(a,th(a)-1),c[h]=c[i],k[h]=k[i],c[h+1]=c[i+1],k[h+1]=k[i+1],c[h+2]=c[i+2],k[h+2]=k[i+2],c[h+3]=c[i+3],k[h+3]=k[i+3],h=m,i=jg(a,0),c[h]=c[i],k[h]=k[i],c[h+1]=c[i+1],k[h+1]=k[i+1],c[h+2]=c[i+2],k[h+2]=k[i+2],c[h+3]=c[i+3],k[h+3]=k[i+3],i=J(e,g)+f,h=0,(h|0)<(l|0))){for(var w=m,x=g,y=m;;){j=jg(a,h);c[w]=c[j];k[w]=k[j];c[w+1]=c[j+1];k[w+1]=k[j+1];c[w+2]=c[j+2];k[w+2]=k[j+2];c[w+3]=c[j+3];k[w+3]=k[j+3];var z=J(e,m)+f;j=z;z=0>z;if(0>i){var A=d;z?PW(A,m):(k[p]=i/(i-j),PB(n,g,m,p),PW(A,n))}else{z&&(k[s]=i/(i-j),PB(r,g,m,s),PW(d,r),PW(d,m))}c[x]=c[y];k[x]=k[y];c[x+1]=c[y+1];k[x+1]=k[y+1];c[x+2]=c[y+2];k[x+2]=k[y+2];c[x+3]=c[y+3];k[x+3]=k[y+3];i=j;h+=1;if((h|0)>=(l|0)){break a}}}}while(0);b=g}Tcb.X=1;function jYa(a,d,e,f,g){var h=b;b+=63;var i,j,l,m,n,p=h+4,r=h+8,s=h+9,t=h+13,w=h+17,x=h+34,y=h+38,z,A=h+42,C=h+46,B=h+50,K=h+54,E=h+55,G=h+59;c[Ucb]+=1;l=3.4028234663852886e+38;m=yY(a+6);for(n=0;;){if((n|0)>=(m|0)){i=9;break}H(h,zY(a+6,n)+10,zY(a+6,n)+11,zY(a+6,n)+12);Bo(p,e,h);if(!$0(a,d,e,f,p,r)){j=0;i=30;break}if(k[r]<l){l=k[r];var M=g;c[M]=c[p];k[M]=k[p];c[M+1]=c[p+1];k[M+1]=k[p+1];c[M+2]=c[p+2];k[M+2]=k[p+2];c[M+3]=c[p+3];k[M+3]=k[p+3]}n+=1}a:do{if(9==i){m=yY(d+6);n=0;for(p=t;(n|0)<(m|0);){H(s,zY(d+6,n)+10,zY(d+6,n)+11,zY(d+6,n)+12);Bo(t,f,s);if(!$0(a,d,e,f,t,w)){j=0;break a}k[w]<l&&(l=k[w],r=g,c[r]=c[p],k[r]=k[p],c[r+1]=c[p+1],k[r+1]=k[p+1],c[r+2]=c[p+2],k[r+2]=k[p+2],c[r+3]=c[p+3],k[r+3]=k[p+3]);n+=1}m=0;n=x;p=A;M=r=B;b:for(;;){if((m|0)>=(th(a+11)|0)){N(E,f+12,e+12);0<J(E,g)&&(WP(G,g),a=g,c[a]=c[G],k[a]=k[G],c[a+1]=c[G+1],k[a+1]=k[G+1],c[a+2]=c[G+2],k[a+2]=k[G+2],c[a+3]=c[G+3],k[a+3]=k[G+3]);j=1;break a}z=jg(a+11,m);c[n]=c[z];k[n]=k[z];c[n+1]=c[z+1];k[n+1]=k[z+1];c[n+2]=c[z+2];k[n+2]=k[z+2];c[n+3]=c[z+3];k[n+3]=k[z+3];Bo(y,e,x);for(z=0;;){if((z|0)>=(th(d+11)|0)){m+=1;continue b}var L=jg(d+11,z);c[p]=c[L];k[p]=k[L];c[p+1]=c[L+1];k[p+1]=k[L+1];c[p+2]=c[L+2];k[p+2]=k[L+2];c[p+3]=c[L+3];k[p+3]=k[L+3];Bo(C,f,A);qn(B,y,C);L=DZ(B);do{if(!L){var F=IB(B);c[r]=c[F];k[r]=k[F];c[r+1]=c[F+1];k[r+1]=k[F+1];c[r+2]=c[F+2];k[r+2]=k[F+2];c[r+3]=c[F+3];k[r+3]=k[F+3];if(!$0(a,d,e,f,B,K)){j=0;break a}k[K]<l&&(l=k[K],F=g,c[F]=c[M],k[F]=k[M],c[F+1]=c[M+1],k[F+1]=k[M+1],c[F+2]=c[M+2],k[F+2]=k[M+2],c[F+3]=c[M+3],k[F+3]=k[M+3])}}while(0);z+=1}}}}while(0);b=h;return j}jYa.X=1;function $0(a,d,e,f,g,h){var i=b;b+=4;var j,l=i+1,m=i+2,n=i+3;UZa(a,e,g,i,l);UZa(d,f,g,m,n);k[l]<k[m]?h=4:k[n]<k[i]?h=4:(j=k[l]-k[m],0<=j||Vcb(89,D.ce),n=k[n]-k[i],0<=n||Vcb(91,D.ye),k[h]=j<n?j:n,j=1,h=10);4==h&&(j=0);b=i;return j}$0.X=1;function Wcb(a,d){var e;e=c[a];c[a]=c[d];c[d]=e}Wcb.X=1;function Xcb(a,d){return(d<<2)+c[a+3]}Xcb.X=1;function CW(a){yW(a);c[a]=a1+2;c[a+13]=0}CW.X=1;function EX(a){c[a]=a1+2;0!=(c[a+13]|0)&&yh(c[a+13])}EX.X=1;function lYa(a,d,e,f,g,h,i){var j=b;b+=43;var l=j+5,m=j+6,n,p,r=j+7,s=j+11,t,w=j+15,x=j+19,y=j+23,z=j+31,A=j+35,C=j+39;KW(j);c[l]=f;c[m]=j;RW(c[m],th(c[l]));f=-1;n=3.4028234663852886e+38;p=0;var B=(p|0)<(yY(d+6)|0);a:do{if(B){for(;;){if(H(r,zY(d+6,p)+10,zY(d+6,p)+11,zY(d+6,p)+12),Bo(s,e,r),t=J(s,a),t<n&&(n=t,f=p),p+=1,(p|0)>=(yY(d+6)|0)){break a}}}}while(0);if(0>(f|0)){$10=1}else{r=zY(d+6,f);$numContacts=th(c[l]);s=rW(r);for(f=0;(f|0)<(s|0);){n=c[sW(r+5,f)],H(w,zY(d+6,n)+10,zY(d+6,n)+11,zY(d+6,n)+12),n=k[zY(d+6,n)+13],Bo(x,e,w),n-=J(x,e+12),Tcb(c[l],c[m],x,n),Wcb(l,m),xZ(c[m],0,y),f+=1}H(z,r+10,r+11,r+12);d=k[r+13];Bo(A,e,z);e=d-J(A,e+12);for(z=0;(z|0)<(th(c[l])|0);){d=J(A,Xcb(c[l],z))+e,d<=h&&d>=g&&(m=Xcb(c[l],z),c[C]=c[m],k[C]=k[m],c[C+1]=c[m+1],k[C+1]=k[m+1],c[C+2]=c[m+2],k[C+2]=k[m+2],c[C+3]=c[m+3],k[C+3]=k[m+3],m=i,v[c[c[m]+4]](m,a,C,d)),z+=1}$10=0}UW(j);b=j}lYa.X=1;function kYa(a,d,e,f,g,h,i,j){var l=b;b+=17;var m,n,p,r=l+4,s,t=l+8,w=l+13;$curMaxDist=i;m=-1;n=-3.4028234663852886e+38;p=0;var x=(p|0)<(yY(e+6)|0);a:do{if(x){for(;;){if(H(l,zY(e+6,p)+10,zY(e+6,p)+11,zY(e+6,p)+12),Bo(r,g,l),s=J(r,a),s>n&&(n=s,m=p),p+=1,(p|0)>=(yY(e+6)|0)){break a}}}}while(0);if(0<=(m|0)){KW(t);m=zY(e+6,m);n=rW(m);for(p=0;(p|0)<(n|0);){vw(w,g,jg(e+1,c[sW(m,p)])),PW(t,w),p+=1}lYa(a,d,f,t,h,i,j);UW(t)}b=l}kYa.X=1;function Ycb(a){EX(a);yh(a)}Ycb.X=1;function Zcb(a,d){var e;e=c[a];c[a]=c[d];c[d]=e}Zcb.X=1;function b1(a,d){return c[a+3]+3*d}b1.X=1;function $cb(a){return c[a+3*c[a+1]+2]}$cb.X=1;function adb(a){return c[a+2]}adb.X=1;function bdb(a,d){var e;e=th(a);(e|0)==(NW(a)|0)&&RW(a,NLa(a,th(a)));var f=a+1;c[f]+=1;f=(e<<2)+c[a+3];0!=(f|0)&&(c[f]=c[d],k[f]=k[d],c[f+1]=c[d+1],k[f+1]=k[d+1],c[f+2]=c[d+2],k[f+2]=k[d+2],c[f+3]=c[d+3],k[f+3]=k[d+3]);return(e<<2)+c[a+3]}bdb.X=1;function cdb(a,d,e,f,g,h){return ddb(a,d,0,e,f,g,h)}cdb.X=1;function edb(a,d,e){var f,g;f=yY(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(var i=a+3;;){if(IZ(c[i]+14*g),g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(yY(a)|0)&&fdb(a,d),g=f,(g|0)<(d|0)){for(i=a+3;;){var j=c[i]+14*g;0!=(j|0)&&gdb(j,e);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}edb.X=1;function hdb(a){return idb(a+3*c[a+1])}hdb.X=1;function jdb(a){var d=b;b+=92;var e,f,g=d+5,h=d+9,i=d+24,j=d+29,l=d+33,m=d+47,n,p,r=d+51,s,t=d+63,w,x=d+64,y=d+68,z=d+72,A=d+76,C=d+80,B,K=d+84,E=d+88,G;0!=(c[a+13]|0)&&yh(c[a+13]);$mem=e=Ue(80,16);0==(e|0)?e=0:xZa(e);c[a+13]=e;KW(d);for(e=0;(e|0)<(v[c[c[a]+22]](a)|0);){f=bdb(d,g),v[c[c[a]+25]](a,e,f),e+=1}kdb(h);cdb(h,xg(d,0),16,th(d),0,0);KW(i);g=rW(h+10);xZ(i,g,j);j=c[a+13]+6;e=l;for(f=e+14;e<f;e++){c[e]=0,k[e]=0}ldb(l);edb(j,g,l);IZ(l);l=th(h);xZ(c[a+13]+1,l,m);m=0;j=(m|0)<(l|0);a:do{if(j){for(e=a+13;;){f=xg(c[e]+1,m);var M=xg(h,m);c[f]=c[M];k[f]=k[M];c[f+1]=c[M+1];k[f+1]=k[M+1];c[f+2]=c[M+2];k[f+2]=k[M+2];c[f+3]=c[M+3];k[f+3]=k[M+3];m+=1;if((m|0)>=(l|0)){break a}}}}while(0);m=0;l=a+13;j=r+4;e=a+13;f=a+13;var M=a+13,L=a+13,F=a+13,I=a+13;B=a+13;for(G=a+13;(m|0)<(g|0);){p=n=b1(h+5,c[QV(h+10,m)]);$maxCross2=s=0;for($chosenEdge=-1;;){c[t]=$cb(p);p_(BZ(c[l]+6,m),t);w=adb(p);var R=xg(h,c[t]);c[x]=c[R];k[x]=k[R];c[x+1]=c[R+1];k[x+1]=k[R+1];c[x+2]=c[R+2];k[x+2]=k[R+2];c[x+3]=c[R+3];k[x+3]=k[R+3];w=xg(h,w);c[y]=c[w];k[y]=k[w];c[y+1]=c[w+1];k[y+1]=k[w+1];c[y+2]=c[w+2];k[y+2]=k[w+2];c[y+3]=c[w+3];k[y+3]=k[w+3];N(z,y,x);IB(z);2>(s|0)&&(w=s,s=w+1,w=(w<<2)+r,c[w]=c[z],k[w]=k[z],c[w+1]=c[z+1],k[w+1]=k[z+1],c[w+2]=c[z+2],k[w+2]=k[z+2],c[w+3]=c[z+3],k[w+3]=k[z+3]);p=hdb(p);if((p|0)==(n|0)){break}}n=1.0000000150474662e+30;p=xg(i,m);2==(s|0)?(qn(A,r,j),s=p,c[s]=c[A],k[s]=k[A],c[s+1]=c[A+1],k[s+1]=k[A+1],c[s+2]=c[A+2],k[s+2]=k[A+2],c[s+3]=c[A+3],k[s+3]=k[A+3],IB(xg(i,m)),k[BZ(c[e]+6,m)+10]=-k[xg(i,m)],k[BZ(c[f]+6,m)+11]=-k[xg(i,m)+1],k[BZ(c[M]+6,m)+12]=-k[xg(i,m)+2],k[BZ(c[L]+6,m)+13]=n):EC(p);s=0;w=(s|0)<(rW(BZ(c[F]+6,m))|0);a:do{if(w){for(;;){if(p=J(xg(c[B]+1,c[QV(BZ(c[G]+6,m),s)]),xg(i,m)),n>p&&(n=p),s+=1,(s|0)>=(rW(BZ(c[F]+6,m))|0)){break a}}}}while(0);k[BZ(c[I]+6,m)+13]=n;m+=1}t=0!=(yY(c[a+13]+6)|0);a:do{if(t&&0!=(th(h)|0)){r=0;x=a+13;y=a+13;z=a+13;A=a+13;g=a+13;l=m=a;j=a+13;e=a+13;f=a+13;M=a+13;L=a+13;F=a+13;for(I=a+13;;){if((r|0)>=(yY(c[x]+6)|0)){break a}H(C,BZ(c[y]+6,r)+10,BZ(c[z]+6,r)+11,BZ(c[A]+6,r)+12);B=k[BZ(c[g]+6,r)+13];G=c[c[l]+15];WP(E,C);v[G](K,m,E);B=J(K,C)<B;b:do{if(B&&(G=BZ(c[j]+6,r)+10,k[G]*=-1,G=BZ(c[e]+6,r)+11,k[G]*=-1,G=BZ(c[f]+6,r)+12,k[G]*=-1,G=BZ(c[M]+6,r)+13,k[G]*=-1,G=rW(BZ(c[L]+6,r)),s=0,(s|0)<((G|0)/2&-1|0))){for(;;){if(Zcb(QV(BZ(c[F]+6,r),s),QV(BZ(c[I]+6,r),G-1+ -s)),s+=1,(s|0)>=((G|0)/2&-1|0)){break b}}}}while(0);r+=1}}}while(0);GZa(c[a+13]);$10=1;UW(i);mdb(h);UW(d);b=d;return 1}jdb.X=1;function ndb(a){return c[a+2]}ndb.X=1;function odb(a,d,e){var f=b;b+=15;var g=f+1,h=f+2,i,j=f+3;i=f+7;var l=f+8,m=f+9,n=f+10,p=f+11;k[f]=0;k[g]=0;k[h]=0;H(a,f,g,h);g=-0xde0b6b000000000;c[j]=c[e];k[j]=k[e];c[j+1]=c[e+1];k[j+1]=k[e+1];c[j+2]=c[e+2];k[j+2]=k[e+2];c[j+3]=c[e+3];k[j+3]=k[e+3];e=Um(j);9999999747378752e-20>e?(k[i]=1,k[l]=0,k[m]=0,pe(j,i,l,m)):(k[n]=1/ec(e),LC(j,n));i=0;m=(i|0)<(v[c[c[d]+22]](d)|0);a:do{if(m){n=d;e=a;for(h=p;;){if(v[c[c[n]+25]](d,i,p),l=J(j,p),l>g&&(g=l,c[e]=c[h],k[e]=k[h],c[e+1]=c[h+1],k[e+1]=k[h+1],c[e+2]=c[h+2],k[e+2]=k[h+2],c[e+3]=c[h+3],k[e+3]=k[h+3]),i+=1,(i|0)>=(v[c[c[d]+22]](d)|0)){break a}}}}while(0);b=f}odb.X=1;function pdb(a,d,e,f){var g=b;b+=4;var h,i,j,l;h=0;i=(h|0)<(f|0);a:do{if(i){for(;;){if(k[(h<<2)+e+3]=-0xde0b6b000000000,h+=1,(h|0)>=(f|0)){break a}}}}while(0);j=0;var m=(j|0)<(f|0);a:do{if(m){for(var n=a,p=a,r=g;;){l=(j<<2)+d;h=0;var s=(h|0)<(v[c[c[n]+22]](a)|0);b:do{if(s){for(;;){v[c[c[p]+25]](a,h,g);i=J(l,g);if(i>k[(j<<2)+e+3]){var t=(j<<2)+e;c[t]=c[r];k[t]=k[r];c[t+1]=c[r+1];k[t+1]=k[r+1];c[t+2]=c[r+2];k[t+2]=k[r+2];c[t+3]=c[r+3];k[t+3]=k[r+3];k[(j<<2)+e+3]=i}h+=1;if((h|0)>=(v[c[c[n]+22]](a)|0)){break b}}}}while(0);j+=1;if((j|0)>=(f|0)){break a}}}}while(0);b=g}pdb.X=1;function qdb(a,d,e){var f=b;b+=45;var g,h=f+16,i=f+20,j=f+24,l=f+28,m=f+32,n=f+33,p=f+34,r=f+38,s=f+42,t=f+43,w=f+44;g=v[c[c[a]+11]](a);eQ(f);v[c[c[a]+2]](a,f,h,i);N(l,i,h);k[m]=.5;Q(j,l,m);h=2*(k[j]+g);a=2*(k[j+1]+g);g=2*(k[j+2]+g);j=h*h;a*=a;g*=g;k[n]=.0833333283662796*d;k[s]=a+g;k[t]=j+g;k[w]=j+a;H(r,s,t,w);Q(p,r,n);c[e]=c[p];k[e]=k[p];c[e+1]=c[p+1];k[e+1]=k[p+1];c[e+2]=c[p+2];k[e+2]=k[p+2];c[e+3]=c[p+3];k[e+3]=k[p+3];b=f}qdb.X=1;function rdb(a,d){FX(a,d);bh(a)}rdb.X=1;function bh(a){var d=b;b+=60;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5,j=d+6,l=d+7,m=d+8,n=d+9,p=d+10,r=d+11,s=d+12,t=d+13,w=d+14,x=d+15,y=d+16,z=d+17,A=d+18,C=d+42,B=d+43,K=d+44,E=d+45,G=d+46,M=d+47,L=d+48,F=d+49,I=d+50,R=d+51,O=d+52,Z=d+53,P=d+54,S=d+55,da=d+56,V=d+57,ba=d+58,$=d+59;c[a+22]=1;0==c[sdb]<<24>>24&&0!=(Hb(sdb)|0)&&(k[d]=1,k[e]=0,k[f]=0,H(c1,d,e,f),k[g]=0,k[h]=1,k[i]=0,H(c1+4,g,h,i),k[j]=0,k[l]=0,k[m]=1,H(c1+8,j,l,m),k[n]=-1,k[p]=0,k[r]=0,H(c1+12,n,p,r),k[s]=0,k[t]=-1,k[w]=0,H(c1+16,s,t,w),k[x]=0,k[y]=0,k[z]=-1,H(c1+20,x,y,z));k[C]=0;k[B]=0;k[K]=0;H(A,C,B,K);e=A+4;k[E]=0;k[G]=0;k[M]=0;H(e,E,G,M);E=e+4;k[L]=0;k[F]=0;k[I]=0;H(E,L,F,I);L=E+4;k[R]=0;k[O]=0;k[Z]=0;H(L,R,O,Z);R=L+4;k[P]=0;k[S]=0;k[da]=0;H(R,P,S,da);k[V]=0;k[ba]=0;k[$]=0;H(R+4,V,ba,$);v[c[c[a]+17]](a,c1,A,6);P=0;S=a+11;da=a+18;V=a+11;for(a+=14;!(k[da+P]=k[(P<<2)+A+P]+k[S],k[a+P]=k[(P+3<<2)+A+P]-k[V],P=ba=P+1,3<=(ba|0));){}b=d}bh.X=1;function vZ(a){var d=b;b+=6;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5;CW(a);c[a]=tdb+2;k[d]=1;k[e]=1;k[f]=1;H(a+14,d,e,f);k[g]=-1;k[h]=-1;k[i]=-1;H(a+18,g,h,i);c[a+22]=0;b=d}vZ.X=1;function udb(a,d,e,f){eh(a,d,e,f,v[c[c[a]+11]](a))}udb.X=1;function vdb(a){EX(a)}vdb.X=1;function fdb(a,d){var e;(ndb(a)|0)<(d|0)&&(e=wdb(a,d),xdb(a,0,yY(a),e),m_a(a,0,yY(a)),n_a(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}fdb.X=1;function ydb(a,d){var e=b;b+=1;var f;vW(a);f=rW(d);c[e]=0;PV(a,f,e);MKa(d,0,f,c[a+3]);b=e}ydb.X=1;function wdb(a,d){return 0!=(d|0)?zdb(a,d,0):0}wdb.X=1;function xdb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+14*d;0!=(i|0)&&gdb(i,c[h]+14*d);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}xdb.X=1;function zdb(a,d,e){$1=a;$3=e;return Ue(56*d,16)}zdb.X=1;function d1(a){Adb(a,0,e1(a));Bdb(a);Cdb(a)}d1.X=1;function Ddb(a){EX(a);yh(a)}Ddb.X=1;function gdb(a,d){ydb(a,d);ydb(a+5,d+5);var e=a+10,f=d+10;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3]}gdb.X=1;function mdb(a){wW(a+10);d1(a+5);UW(a)}mdb.X=1;function Adb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Adb.X=1;function e1(a){return c[a+1]}e1.X=1;function Cdb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Cdb.X=1;function idb(a){return a+3*c[a]}idb.X=1;function Bdb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Edb(a,c[a+3]),c[a+3]=0)}Bdb.X=1;function Edb(a,d){$1=a;yh(d)}Edb.X=1;function ldb(a){vW(a);vW(a+5)}ldb.X=1;function kdb(a){KW(a);Cdb(a+5);vW(a+10)}kdb.X=1;function mW(a){var d=b;b+=6;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5;c[a]=f1+2;c[a+13]=278;c[a+15]=0;O0(a+16);O0(a+21);N0(a+26);N0(a+31);c[a+36]=0;g1(a+37);c[a+42]=0;k[d]=-3.4028234663852886e+38;k[e]=-3.4028234663852886e+38;k[f]=-3.4028234663852886e+38;pe(a+1,d,e,f);k[g]=3.4028234663852886e+38;k[h]=3.4028234663852886e+38;k[i]=3.4028234663852886e+38;pe(a+5,g,h,i);b=d}mW.X=1;function So(a){var d=b;b+=18;var e,f=d+7;c[a+15]=1;e=0;c[a+15]&1&&(e=s0(a+26),c[d]=0,k[d]=0,c[d+1]=0,k[d+1]=0,c[d+2]=0,k[d+2]=0,c[d+3]=0,k[d+3]=0,c[d+4]=0,k[d+4]=0,c[d+5]=0,k[d+5]=0,c[d+6]=0,k[d+6]=0,H0(a+31,e<<1,d));c[a+14]=0;J0(a,0,e);c[a+15]&1&&0==(C0(a+37)|0)&&(e=K0(a+37,f),ZU(e,D0(a+31,0)),c[e+6]=0,c[e+7]=E0(D0(a+31,0))?1:F0(D0(a+31,0)));c[a+42]=C0(a+37);L0(a+26);M0(a+16);b=d}So.X=1;function J0(a,d,e){var f=b;b+=8;var g,h,i,j,l=f+4;i=c[a+14];if(1==(e-d|0)){Fdb(a,c[a+14],d),a+=14,c[a]+=1}else{g=Gdb(a,d,e,Hdb(a,d,e));j=c[a+14];Idb(a,c[a+14],a+5);Jdb(a,c[a+14],a+1);h=d;var m=(h|0)<(e|0),n=a+14,p=c[n];a:do{if(m){for(var r=p;;){if(h1(f,a,h),i1(l,a,h),Kdb(a,r,f,l),h+=1,r=c[n],(h|0)>=(e|0)){var s=r;break a}}}else{s=p}}while(0);c[n]=s+1;h=c[a+14];J0(a,d,g);d=c[a+14];J0(a,g,e);e=c[a+14]-i;c[a+15]&1&&($sizeQuantizedNode=16,2048<(e<<4|0)&&Ldb(a,h,d));Mdb(a,j,e)}b=f}J0.X=1;function Wo(a,d,e,f){var g=b;b+=28;var h=g+1,i=g+5,j=g+9,l=g+13,m=g+17,n=g+21,p=g+25,r=g+26,s=g+27;k[g]=f;H(h,g,g,g);N(i,d,h);d=a+1;c[d]=c[i];k[d]=k[i];c[d+1]=c[i+1];k[d+1]=k[i+1];c[d+2]=c[i+2];k[d+2]=k[i+2];c[d+3]=c[i+3];k[d+3]=k[i+3];wn(j,e,h);e=a+5;c[e]=c[j];k[e]=k[j];c[e+1]=c[j+1];k[e+1]=k[j+1];c[e+2]=c[j+2];k[e+2]=k[j+2];c[e+3]=c[j+3];k[e+3]=k[j+3];N(l,a+5,a+1);k[p]=65533;k[r]=65533;k[s]=65533;H(n,p,r,s);eX(m,n,l);j=a+9;c[j]=c[m];k[j]=k[m];c[j+1]=c[m+1];k[j+1]=k[m+1];c[j+2]=c[m+2];k[j+2]=k[m+2];c[j+3]=c[m+3];k[j+3]=k[m+3];c[a+15]=1;b=g}Wo.X=1;function Fdb(a,d,e){if(c[a+15]&1){d=D0(a+31,d),a=D0(a+26,e),c[d]=c[a],k[d]=k[a],c[d+1]=c[a+1],k[d+1]=k[a+1],c[d+2]=c[a+2],k[d+2]=k[a+2],c[d+3]=c[a+3],k[d+3]=k[a+3],c[d+4]=c[a+4],k[d+4]=k[a+4],c[d+5]=c[a+5],k[d+5]=k[a+5],c[d+6]=c[a+6],k[d+6]=k[a+6]}else{e=j1(a+16,e);a=j1(a+21,d);for(d=e+16;e<d;e++,a++){c[a]=c[e],k[a]=k[e]}}}Fdb.X=1;function Hdb(a,d,e){var f=b;b+=58;var g;g=f+4;var h=f+5,i=f+6,j=f+7,l=f+11,m=f+12,n=f+13,p=f+14,r=f+18,s=f+19,t=f+23,w=f+27,x=f+31,y=f+32,z=f+36,A=f+37,C=f+41,B=f+45,K=f+49,E=f+53,G=f+57;k[g]=0;k[h]=0;k[i]=0;H(f,g,h,i);k[l]=0;k[m]=0;k[n]=0;H(j,l,m,n);h=e-d;g=d;i=(g|0)<(e|0);a:do{if(i){for(;;){if(k[r]=.5,i1(t,a,g),h1(w,a,g),wn(s,t,w),Q(p,s,r),xn(f,p),g+=1,(g|0)>=(e|0)){break a}}}}while(0);k[x]=1/(h|0);LC(f,x);g=d;d=(g|0)<(e|0);a:do{if(d){p=K;for(r=E;;){if(k[z]=.5,i1(C,a,g),h1(B,a,g),wn(A,C,B),Q(y,A,z),N(K,y,f),ig(E,K,K),c[p]=c[r],k[p]=k[r],c[p+1]=c[r+1],k[p+1]=k[r+1],c[p+2]=c[r+2],k[p+2]=k[r+2],c[p+3]=c[r+3],k[p+3]=k[r+3],xn(j,K),g+=1,(g|0)>=(e|0)){break a}}}}while(0);k[G]=1/((h|0)-1);LC(j,G);a=fC(j);b=f;return a}Hdb.X=1;function Ndb(a){G0(a);yh(a)}Ndb.X=1;function G0(a){c[a]=f1+2;Odb(a+37);L0(a+31);L0(a+26);M0(a+21);M0(a+16)}G0.X=1;function k1(a,d){return c[a+3]+7*d}k1.X=1;function Gdb(a,d,e,f){var g=b;b+=42;var h,i,j,l;h=g+4;var m=g+5,n=g+6;l=g+7;var p=g+11,r=g+12,s=g+16,t=g+20,w=g+24,x=g+25,y=g+29,z=g+30,A=g+34,C=g+38;i=d;j=e-d;k[h]=0;k[m]=0;k[n]=0;H(g,h,m,n);h=d;m=(h|0)<(e|0);a:do{if(m){for(;;){if(k[p]=.5,i1(s,a,h),h1(t,a,h),wn(r,s,t),Q(l,r,p),xn(g,l),h+=1,(h|0)>=(e|0)){break a}}}}while(0);k[w]=1/(j|0);LC(g,w);l=k[g+f];h=d;p=(h|0)<(e|0);a:do{if(p){for(;;){if(k[y]=.5,i1(A,a,h),h1(C,a,h),wn(z,A,C),Q(x,z,y),k[x+f]>l&&(Pdb(a,h,i),i+=1),h+=1,(h|0)>=(e|0)){break a}}}}while(0);a=(j|0)/3&-1;((i|0)<=(a+d|0)?1:(i|0)>=(e-1+ -a|0))&1&&(i=(j>>1)+d);b=g;return i}Gdb.X=1;function Idb(a,d,e){c[a+15]&1?Xo(a,D0(a+31,d),e,0):(a=j1(a+21,d),c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1],c[a+2]=c[e+2],k[a+2]=k[e+2],c[a+3]=c[e+3],k[a+3]=k[e+3])}Idb.X=1;function Jdb(a,d,e){c[a+15]&1?Xo(a,D0(a+31,d)+3,e,1):(a=j1(a+21,d)+4,c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1],c[a+2]=c[e+2],k[a+2]=k[e+2],c[a+3]=c[e+3],k[a+3]=k[e+3])}Jdb.X=1;function Kdb(a,d,e,f){var g=b;b+=6;var h=g+3,i,j=c[a+15]&1;a:do{if(j){Xo(a,g,e,0);Xo(a,h,f,1);i=0;for(var l=a+31,m=a+31,n=a+31,p=a+31;;){(c[D0(l,d)+i]&65535|0)>(c[g+i]&65535|0)&&(c[D0(m,d)+i]=c[g+i]);(c[D0(n,d)+i+3]&65535|0)<(c[h+i]&65535|0)&&(c[D0(p,d)+i+3]=c[h+i]);var r=i+1;i=r;if(3<=(r|0)){break a}}}else{hp(j1(a+21,d),e),gp(j1(a+21,d)+4,f)}}while(0);b=g}Kdb.X=1;function h1(a,d,e){c[d+15]&1?qp(a,d,k1(d+26,e)):(d=l1(d+16,e),c[a]=c[d],k[a]=k[d],c[a+1]=c[d+1],k[a+1]=k[d+1],c[a+2]=c[d+2],k[a+2]=k[d+2],c[a+3]=c[d+3],k[a+3]=k[d+3])}h1.X=1;function i1(a,d,e){c[d+15]&1?qp(a,d,k1(d+26,e)+3):(d=l1(d+16,e)+4,c[a]=c[d],k[a]=k[d],c[a+1]=c[d+1],k[a+1]=k[d+1],c[a+2]=c[d+2],k[a+2]=k[d+2],c[a+3]=c[d+3],k[a+3]=k[d+3])}i1.X=1;function Ldb(a,d,e){var f=b;b+=22;var g,h,i,j,l,m;m=f+11;g=D0(a+31,d);h=E0(g)?1:F0(g);i=D0(a+31,e);j=E0(i)?1:F0(i);var n=j<<4;2048>=(h<<4|0)&&(l=K0(a+37,f),ZU(l,g),c[l+6]=d,c[l+7]=h);d=n;2048>=(d|0)&&(m=K0(a+37,m),ZU(m,i),c[m+6]=e,c[m+7]=j);c[a+42]=C0(a+37);b=f}Ldb.X=1;function Mdb(a,d,e){c[a+15]&1?c[D0(a+31,d)+6]=-e:c[j1(a+21,d)+8]=e}Mdb.X=1;function Pdb(a,d,e){var f=b;b+=23;var g=f+7;if(c[a+15]&1){g=D0(a+26,d);c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];c[f+4]=c[g+4];k[f+4]=k[g+4];c[f+5]=c[g+5];k[f+5]=k[g+5];c[f+6]=c[g+6];k[f+6]=k[g+6];var g=D0(a+26,d),h=D0(a+26,e);c[g]=c[h];k[g]=k[h];c[g+1]=c[h+1];k[g+1]=k[h+1];c[g+2]=c[h+2];k[g+2]=k[h+2];c[g+3]=c[h+3];k[g+3]=k[h+3];c[g+4]=c[h+4];k[g+4]=k[h+4];c[g+5]=c[h+5];k[g+5]=k[h+5];c[g+6]=c[h+6];k[g+6]=k[h+6];a=D0(a+26,e);c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];c[a+4]=c[f+4];k[a+4]=k[f+4];c[a+5]=c[f+5];k[a+5]=k[f+5];c[a+6]=c[f+6];k[a+6]=k[f+6]}else{for(var h=j1(a+16,d),i=g,j=h+16;h<j;h++,i++){c[i]=c[h],k[i]=k[h]}d=j1(a+16,d);h=j1(a+16,e);i=d;for(j=h+16;h<j;h++,i++){c[i]=c[h],k[i]=k[h]}a=j1(a+16,e);h=g;i=a;for(j=h+16;h<j;h++,i++){c[i]=c[h],k[i]=k[h]}}b=f}Pdb.X=1;function $o(a,d,e,f){var g=b;b+=6;var h=g+3;c[a+15]&1?(fp(a,g,e,0),fp(a,h,f,1),e=c[a+36],0==(e|0)?Qdb(a,d,g,h,0,c[a+14]):1==(e|0)?Rdb(a,d,g,h):2==(e|0)&&m1(a,k1(a+31,0),d,g,h)):Sdb(a,d,e,f);b=g}$o.X=1;function Qdb(a,d,e,f,g,h){var i,j,l,m,n;j=g;l=0;$subTreeSize=h-g;a=k1(a+31,g);g=(j|0)<(h|0);a:do{if(g){for(;;){if(l+=1,n=S0(e,f,a,a+3),m=E0(a)&1,m&1?0==(n|0)?i=7:(i=d,v[c[c[i]+2]](i,Q0(a),R0(a)),i=6):i=6,6==i&&(i=0!=(n|0)?8:7),7==i&&(m&1?i=8:(m=F0(a),a+=7*m,j+=m,i=10)),8==i&&(a+=7,j+=1),(j|0)>=(h|0)){break a}}}}while(0);(c[n1]|0)<(l|0)&&(c[n1]=l)}Qdb.X=1;function Rdb(a,d,e,f){var g,h;g=0;var i=a+37,j=(g|0)<(C0(i)|0);a:do{if(j){for(var l=a+37;;){h=o1(l,g);var m=S0(e,f,h,h+3);$overlap=m;0!=(m|0)&&Qdb(a,d,e,f,c[h+6],c[h+7]+c[h+6]);g+=1;if((g|0)>=(C0(i)|0)){break a}}}}while(0)}Rdb.X=1;function l1(a,d){return(d<<4)+c[a+3]}l1.X=1;function o1(a,d){return c[a+3]+11*d}o1.X=1;function j1(a,d){return(d<<4)+c[a+3]}j1.X=1;function m1(a,d,e,f,g){var h,i;i=S0(f,g,d,d+3);h=E0(d)&1;if(0!=(i|0)){if(h&1){v[c[c[e]+2]](e,Q0(d),R0(d))}else{d+=7,m1(a,d,e,f,g),m1(a,E0(d)?d+7:d+7*F0(d),e,f,g)}}}m1.X=1;function Sdb(a,d,e,f){var g,h,i,j,l,m;h=l1(a+21,0);l=j=0;var a=a+14,n=(j|0)<(c[a]|0);a:do{if(n){for(;;){if(l+=1,m=hX(e,f,h,h+4)&1,i=-1==(c[h+8]|0)&1,i&1?0==(m|0)?g=7:(g=d,v[c[c[g]+2]](g,c[h+9],c[h+10]),g=6):g=6,6==g&&(g=0!=(m|0)?8:7),7==g&&(i&1?g=8:(i=c[h+8],h=(i<<4)+h,j+=i,g=10)),8==g&&(h+=16,j+=1),(j|0)>=(c[a]|0)){break a}}}}while(0);(c[n1]|0)<(l|0)&&(c[n1]=l)}Sdb.X=1;function Tdb(a,d,e,f,g,h,i,j){var l=b;b+=32;var m,n,p,r,s=l+4,t=l+8,w=l+12,x=l+16,y=l+20,z=l+23,A=l+31;$7=i;$8=j;i=l1(a+21,0);$aabbOverlap=p=j=0;c[l]=c[e];k[l]=k[e];c[l+1]=c[e+1];k[l+1]=k[e+1];c[l+2]=c[e+2];k[l+2]=k[e+2];c[l+3]=c[e+3];k[l+3]=k[e+3];c[s]=c[e];k[s]=k[e];c[s+1]=c[e+1];k[s+1]=k[e+1];c[s+2]=c[e+2];k[s+2]=k[e+2];c[s+3]=c[e+3];k[s+3]=k[e+3];hp(l,f);gp(s,f);xn(l,g);xn(s,h);N(t,f,e);IB(t);N(w,f,e);f=J(t,w);k[x]=0==k[t]?0xde0b6b000000000:1/k[t];k[x+1]=0==k[t+1]?0xde0b6b000000000:1/k[t+1];k[x+2]=0==k[t+2]?0xde0b6b000000000:1/k[t+2];c[y]=0>k[x]&1;t=y+1;c[t]=0>k[x+1]&1;c[t+1]=0>k[x+2]&1;a+=14;t=(j|0)<(c[a]|0);a:do{if(t){for(var w=z,C=z+4,B=z,K=z+4,E=y,G=z;;){if(k[A]=1,p+=1,n=i,c[w]=c[n],k[w]=k[n],c[w+1]=c[n+1],k[w+1]=k[n+1],c[w+2]=c[n+2],k[w+2]=k[n+2],c[w+3]=c[n+3],k[w+3]=k[n+3],n=i+4,c[C]=c[n],k[C]=k[n],c[C+1]=c[n+1],k[C+1]=k[n+1],c[C+2]=c[n+2],k[C+2]=k[n+2],c[C+3]=c[n+3],k[C+3]=k[n+3],JC(B,h),JC(K,g),$aabbOverlap=n=hX(l,s,i,i+4)&1,r=(0!=(n|0)?rY(e,x,E,G,A,0,f):0)&1,n=-1==(c[i+8]|0)&1,n&1?0==(r|0)?m=16:(m=d,v[c[c[m]+2]](m,c[i+9],c[i+10]),m=15):m=15,15==m&&(m=0!=(r|0)?17:16),16==m&&(n&1?m=17:(n=c[i+8],i=(n<<4)+i,j+=n,m=19)),17==m&&(i+=16,j+=1),(j|0)>=(c[a]|0)){break a}}}}while(0);(c[n1]|0)<(p|0)&&(c[n1]=p);b=l}Tdb.X=1;function Udb(a,d,e,f,g,h,i,j){var l=b;b+=46;var m,n,p,r,s,t;t=l+4;var w=l+8,x=l+11,y=l+15,z=l+19,A=l+22,C=l+25,B=l+26,K=l+34,E=l+38;n=i;p=0;$subTreeSize=j-i;i=k1(a+31,i);N(l,f,e);IB(l);N(t,f,e);t=J(l,t);k[l]=0==k[l]?0xde0b6b000000000:1/k[l];k[l+1]=0==k[l+1]?0xde0b6b000000000:1/k[l+1];k[l+2]=0==k[l+2]?0xde0b6b000000000:1/k[l+2];c[w]=0>k[l]&1;var G=w+1;c[G]=0>k[l+1]&1;c[G+1]=0>k[l+2]&1;c[x]=c[e];k[x]=k[e];c[x+1]=c[e+1];k[x+1]=k[e+1];c[x+2]=c[e+2];k[x+2]=k[e+2];c[x+3]=c[e+3];k[x+3]=k[e+3];c[y]=c[e];k[y]=k[e];c[y+1]=c[e+1];k[y+1]=k[e+1];c[y+2]=c[e+2];k[y+2]=k[e+2];c[y+3]=c[e+3];k[y+3]=k[e+3];hp(x,f);gp(y,f);xn(x,g);xn(y,h);fp(a,z,x,0);fp(a,A,y,1);f=(n|0)<(j|0);a:do{if(f){for(var x=z,y=A,G=B,M=K,L=B+4,F=E,I=B,R=B+4,O=w,Z=B;;){if(p+=1,k[C]=1,s=0,m=S0(x,y,i,i+3),r=E0(i)&1,0!=(m|0)&&(qp(K,a,i),c[G]=c[M],k[G]=k[M],c[G+1]=c[M+1],k[G+1]=k[M+1],c[G+2]=c[M+2],k[G+2]=k[M+2],c[G+3]=c[M+3],k[G+3]=k[M+3],qp(E,a,i+3),c[L]=c[F],k[L]=k[F],c[L+1]=c[F+1],k[L+1]=k[F+1],c[L+2]=c[F+2],k[L+2]=k[F+2],c[L+3]=c[F+3],k[L+3]=k[F+3],JC(I,h),JC(R,g),s=rY(e,l,O,Z,C,0,t)&1),r&1?0==(s|0)?m=16:(m=d,v[c[c[m]+2]](m,Q0(i),R0(i)),m=15):m=15,15==m&&(m=0!=(s|0)?17:16),16==m&&(r&1?m=17:(r=F0(i),i+=7*r,n+=r,m=19)),17==m&&(i+=7,n+=1),(n|0)>=(j|0)){break a}}}}while(0);(c[n1]|0)<(p|0)&&(c[n1]=p);b=l}Udb.X=1;function ap(a,d,e,f){var g=b;b+=14;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13;k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);sp(a,d,e,f,g,l);b=g}ap.X=1;function sp(a,d,e,f,g,h){var i=c[a+14];c[a+15]&1?Udb(a,d,e,f,g,h,0,i):Tdb(a,d,e,f,g,h,0,i)}sp.X=1;function Zo(a){var d;d=(c[a+42]<<5)+172;var e=c[a+14];return c[a+15]&1?(e<<4)+d:(e<<6)+d}Zo.X=1;function hbb(a,d,e,f){var g,h;$4=e;e=f&1;c[a+42]=C0(a+37);mW(d);f=c[a+14];e&1?(c[d+14]=p1(f),q1(a+1,d+1),q1(a+5,d+5),q1(a+9,d+9),c[d+36]=p1(c[a+36]),c[d+42]=p1(c[a+42])):(c[d+14]=f,f=d+1,g=a+1,c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3],f=d+5,g=a+5,c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3],f=d+9,g=a+9,c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3],c[d+36]=c[a+36],c[d+42]=c[a+42]);c[d+15]=c[a+15]&1;f=d+172;f+=0;g=c[a+14];if(c[a+15]&1){r1(d+31,f,g,g);var i=e&1;a:do{if(i){if(h=0,(h|0)<(g|0)){for(var j=a+31,l=a+31,m=a+31,n=a+31,p=a+31,r=a+31,s=a+31;;){if(c[D0(d+31,h)]=s1(c[k1(j,h)]),c[D0(d+31,h)+1]=s1(c[k1(l,h)+1]),c[D0(d+31,h)+2]=s1(c[k1(m,h)+2]),c[D0(d+31,h)+3]=s1(c[k1(n,h)+3]),c[D0(d+31,h)+4]=s1(c[k1(p,h)+4]),c[D0(d+31,h)+5]=s1(c[k1(r,h)+5]),c[D0(d+31,h)+6]=p1(c[k1(s,h)+6]),h+=1,(h|0)>=(g|0)){break a}}}}else{if(h=0,(h|0)<(g|0)){j=a+31;l=a+31;m=a+31;n=a+31;p=a+31;r=a+31;for(s=a+31;;){if(c[D0(d+31,h)]=c[k1(j,h)],c[D0(d+31,h)+1]=c[k1(l,h)+1],c[D0(d+31,h)+2]=c[k1(m,h)+2],c[D0(d+31,h)+3]=c[k1(n,h)+3],c[D0(d+31,h)+4]=c[k1(p,h)+4],c[D0(d+31,h)+5]=c[k1(r,h)+5],c[D0(d+31,h)+6]=c[k1(s,h)+6],h+=1,(h|0)>=(g|0)){break a}}}}}while(0);f=(g<<4)+f;r1(d+31,0,0,0)}else{t1(d+21,f,g,g);i=e&1;a:do{if(i){if(h=0,(h|0)<(g|0)){j=a+21;l=a+21;m=a+21;n=a+21;for(p=a+21;;){if(q1(l1(j,h),j1(d+21,h)),q1(l1(l,h)+4,j1(d+21,h)+4),c[j1(d+21,h)+8]=p1(c[l1(m,h)+8]),c[j1(d+21,h)+9]=p1(c[l1(n,h)+9]),c[j1(d+21,h)+10]=p1(c[l1(p,h)+10]),h+=1,(h|0)>=(g|0)){break a}}}}else{if(h=0,(h|0)<(g|0)){j=a+21;l=a+21;m=a+21;n=a+21;for(p=a+21;;){if(r=j1(d+21,h),s=l1(j,h),c[r]=c[s],k[r]=k[s],c[r+1]=c[s+1],k[r+1]=k[s+1],c[r+2]=c[s+2],k[r+2]=k[s+2],c[r+3]=c[s+3],k[r+3]=k[s+3],r=j1(d+21,h)+4,s=l1(l,h)+4,c[r]=c[s],k[r]=k[s],c[r+1]=c[s+1],k[r+1]=k[s+1],c[r+2]=c[s+2],k[r+2]=k[s+2],c[r+3]=c[s+3],k[r+3]=k[s+3],c[j1(d+21,h)+8]=c[l1(m,h)+8],c[j1(d+21,h)+9]=c[l1(n,h)+9],c[j1(d+21,h)+10]=c[l1(p,h)+10],h+=1,(h|0)>=(g|0)){break a}}}}}while(0);f=(g<<6)+f;t1(d+21,0,0,0)}f+=0;u1(d+37,f,c[a+42],c[a+42]);e&=1;a:do{if(e){if(f=0,g=a+42,(f|0)<(c[g]|0)){i=a+37;h=a+37;j=a+37;l=a+37;m=a+37;n=a+37;p=a+37;for(r=a+37;;){if(c[P0(d+37,f)]=s1(c[o1(i,f)]),c[P0(d+37,f)+1]=s1(c[o1(h,f)+1]),c[P0(d+37,f)+2]=s1(c[o1(j,f)+2]),c[P0(d+37,f)+3]=s1(c[o1(l,f)+3]),c[P0(d+37,f)+4]=s1(c[o1(m,f)+4]),c[P0(d+37,f)+5]=s1(c[o1(n,f)+5]),c[P0(d+37,f)+6]=p1(c[o1(p,f)+6]),c[P0(d+37,f)+7]=p1(c[o1(r,f)+7]),f+=1,(f|0)>=(c[g]|0)){break a}}}}else{if(f=0,g=a+42,(f|0)<(c[g]|0)){i=a+37;h=a+37;j=a+37;l=a+37;m=a+37;n=a+37;p=a+37;for(r=a+37;;){if(c[P0(d+37,f)]=c[o1(i,f)],c[P0(d+37,f)+1]=c[o1(h,f)+1],c[P0(d+37,f)+2]=c[o1(j,f)+2],c[P0(d+37,f)+3]=c[o1(l,f)+3],c[P0(d+37,f)+4]=c[o1(m,f)+4],c[P0(d+37,f)+5]=c[o1(n,f)+5],c[P0(d+37,f)+6]=c[o1(p,f)+6],c[P0(d+37,f)+7]=c[o1(r,f)+7],c[P0(d+37,f)+8]=0,c[P0(d+37,f)+9]=0,c[P0(d+37,f)+10]=0,f+=1,(f|0)>=(c[g]|0)){break a}}}}}while(0);u1(d+37,0,0,0);c[d]=0;return 1}hbb.X=1;function q1(a,d){var e;for(e=0;;){Vdb(a+e,d+e);var f=e+1;e=f;if(4<=(f|0)){break}}}q1.X=1;function r1(a,d,e,f){L0(a);c[a+4]=0;c[a+3]=d;c[a+1]=e;c[a+2]=f}r1.X=1;function s1(a){return((a&255)<<8|(a&65280)>>8)&65535}s1.X=1;function t1(a,d,e,f){M0(a);c[a+4]=0;c[a+3]=d;c[a+1]=e;c[a+2]=f}t1.X=1;function u1(a,d,e,f){Odb(a);c[a+4]=0;c[a+3]=d;c[a+1]=e;c[a+2]=f}u1.X=1;function dKa(a,d,e){var f,g,e=e&1;if(0==(a|0)){a=0}else{if(e&1&&(c[a+14]=p1(c[a+14]),v1(a+1),v1(a+5),v1(a+9),c[a+36]=p1(c[a+36]),c[a+42]=p1(c[a+42])),Zo(a)>>>0>d>>>0){a=0}else{d=a+172;d+=0;f=c[a+14];Wdb(a,a,0);if(c[a+15]&1){r1(a+31,d,f,f);var h=e&1;a:do{if(h&&(g=0,(g|0)<(f|0))){for(;;){if(c[D0(a+31,g)]=s1(c[D0(a+31,g)]),c[D0(a+31,g)+1]=s1(c[D0(a+31,g)+1]),c[D0(a+31,g)+2]=s1(c[D0(a+31,g)+2]),c[D0(a+31,g)+3]=s1(c[D0(a+31,g)+3]),c[D0(a+31,g)+4]=s1(c[D0(a+31,g)+4]),c[D0(a+31,g)+5]=s1(c[D0(a+31,g)+5]),c[D0(a+31,g)+6]=p1(c[D0(a+31,g)+6]),g+=1,(g|0)>=(f|0)){break a}}}}while(0);d=(f<<4)+d}else{t1(a+21,d,f,f);h=e&1;a:do{if(h&&(g=0,(g|0)<(f|0))){for(;;){if(v1(j1(a+21,g)),v1(j1(a+21,g)+4),c[j1(a+21,g)+8]=p1(c[j1(a+21,g)+8]),c[j1(a+21,g)+9]=p1(c[j1(a+21,g)+9]),c[j1(a+21,g)+10]=p1(c[j1(a+21,g)+10]),g+=1,(g|0)>=(f|0)){break a}}}}while(0);d=(f<<6)+d}d+=0;u1(a+37,d,c[a+42],c[a+42]);d=e&1;a:do{if(d&&(e=0,(e|0)<(c[a+42]|0))){for(;;){if(c[P0(a+37,e)]=s1(c[P0(a+37,e)]),c[P0(a+37,e)+1]=s1(c[P0(a+37,e)+1]),c[P0(a+37,e)+2]=s1(c[P0(a+37,e)+2]),c[P0(a+37,e)+3]=s1(c[P0(a+37,e)+3]),c[P0(a+37,e)+4]=s1(c[P0(a+37,e)+4]),c[P0(a+37,e)+5]=s1(c[P0(a+37,e)+5]),c[P0(a+37,e)+6]=p1(c[P0(a+37,e)+6]),c[P0(a+37,e)+7]=p1(c[P0(a+37,e)+7]),e+=1,(e|0)>=(c[a+42]|0)){break a}}}}while(0)}}return a}dKa.X=1;function v1(a){var d=b;b+=4;var e;for(e=0;;){Vdb(a+e,d+e);var f=e+1;e=f;if(4<=(f|0)){break}}c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3];b=d}v1.X=1;function Wdb(a,d,e){$4=e&1;c[a]=f1+2;var e=a+1,f=d+1;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+5;f=d+5;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+9;d+=9;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];c[a+13]=278;O0(a+16);O0(a+21);N0(a+26);N0(a+31);g1(a+37)}Wdb.X=1;function Xdb(a,d){var e=b;b+=34;var f,g,h,i=e+16,j=e+23;Tc(a+5,d+4);Tc(a+1,d);Tc(a+9,d+8);c[a+14]=c[d+12];c[a+15]=0!=(c[d+13]|0)&1;f=c[d+14];g=e;for(h=g+16;g<h;g++){c[g]=0,k[g]=0}I0(a+21,f,e);var l=0!=(f|0);a:do{if(l&&(g=c[d+16],h=0,(h|0)<(f|0))){for(var m=a+21,n=a+21,p=a+21,r=a+21,s=a+21;;){if(Tc(j1(m,h)+4,g+4),Tc(j1(n,h),g),c[j1(p,h)+8]=c[g+8],c[j1(r,h)+9]=c[g+9],c[j1(s,h)+10]=c[g+10],h+=1,g+=15,(h|0)>=(f|0)){break a}}}}while(0);f=c[d+15];c[i]=0;k[i]=0;c[i+1]=0;k[i+1]=0;c[i+2]=0;k[i+2]=0;c[i+3]=0;k[i+3]=0;c[i+4]=0;k[i+4]=0;c[i+5]=0;k[i+5]=0;c[i+6]=0;k[i+6]=0;H0(a+31,f,i);h=0!=(f|0);a:do{if(h&&(i=c[d+17],g=0,(g|0)<(f|0))){for(var l=a+31,m=a+31,n=a+31,p=a+31,r=a+31,s=a+31,t=a+31;;){if(c[D0(l,g)+6]=c[i+6],c[D0(m,g)+3]=c[i+3],c[D0(n,g)+4]=c[i+4],c[D0(p,g)+5]=c[i+5],c[D0(r,g)]=c[i],c[D0(s,g)+1]=c[i+1],c[D0(t,g)+2]=c[i+2],g+=1,i+=7,(g|0)>=(f|0)){break a}}}}while(0);c[a+36]=c[d+19];i=c[d+20];Ydb(a+37,i,j);g=0!=(i|0);a:do{if(g&&(j=c[d+18],f=0,(f|0)<(i|0))){h=a+37;l=a+37;m=a+37;n=a+37;p=a+37;r=a+37;s=a+37;for(t=a+37;;){if(c[P0(h,f)+3]=c[j+5],c[P0(l,f)+4]=c[j+6],c[P0(m,f)+5]=c[j+7],c[P0(n,f)]=c[j+2],c[P0(p,f)+1]=c[j+3],c[P0(r,f)+2]=c[j+4],c[P0(s,f)+6]=c[j],c[P0(t,f)+7]=c[j+1],f+=1,j+=8,(f|0)>=(i|0)){break a}}}}while(0);b=e}Xdb.X=1;function Ydb(a,d,e){var f,g;f=C0(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(C0(a)|0)&&Zab(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){for(var j=e,l=c[i]+11*g,m=j+11;j<m;j++,l++){c[l]=c[j],k[l]=k[j]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}Ydb.X=1;function Zdb(a,d){var e=b;b+=34;var f,g,h,i=e+16,j=e+23;Ob(a+5,d+4);Ob(a+1,d);Ob(a+9,d+8);c[a+14]=c[d+12];c[a+15]=0!=(c[d+13]|0)&1;f=c[d+14];g=e;for(h=g+16;g<h;g++){c[g]=0,k[g]=0}I0(a+21,f,e);var l=0!=(f|0);a:do{if(l&&(g=c[d+16],h=0,(h|0)<(f|0))){for(var m=a+21,n=a+21,p=a+21,r=a+21,s=a+21;;){if(Ob(j1(m,h)+4,g+4),Ob(j1(n,h),g),c[j1(p,h)+8]=c[g+8],c[j1(r,h)+9]=c[g+9],c[j1(s,h)+10]=c[g+10],h+=1,g+=15,(h|0)>=(f|0)){break a}}}}while(0);f=c[d+15];c[i]=0;k[i]=0;c[i+1]=0;k[i+1]=0;c[i+2]=0;k[i+2]=0;c[i+3]=0;k[i+3]=0;c[i+4]=0;k[i+4]=0;c[i+5]=0;k[i+5]=0;c[i+6]=0;k[i+6]=0;H0(a+31,f,i);h=0!=(f|0);a:do{if(h&&(i=c[d+17],g=0,(g|0)<(f|0))){for(var l=a+31,m=a+31,n=a+31,p=a+31,r=a+31,s=a+31,t=a+31;;){if(c[D0(l,g)+6]=c[i+6],c[D0(m,g)+3]=c[i+3],c[D0(n,g)+4]=c[i+4],c[D0(p,g)+5]=c[i+5],c[D0(r,g)]=c[i],c[D0(s,g)+1]=c[i+1],c[D0(t,g)+2]=c[i+2],g+=1,i+=7,(g|0)>=(f|0)){break a}}}}while(0);c[a+36]=c[d+18];i=c[d+19];Ydb(a+37,i,j);g=0!=(i|0);a:do{if(g&&(j=c[d+20],f=0,(f|0)<(i|0))){h=a+37;l=a+37;m=a+37;n=a+37;p=a+37;r=a+37;s=a+37;for(t=a+37;;){if(c[P0(h,f)+3]=c[j+5],c[P0(l,f)+4]=c[j+6],c[P0(m,f)+5]=c[j+7],c[P0(n,f)]=c[j+2],c[P0(p,f)+1]=c[j+3],c[P0(r,f)+2]=c[j+4],c[P0(s,f)+6]=c[j],c[P0(t,f)+7]=c[j+1],f+=1,j+=8,(f|0)>=(i|0)){break a}}}}while(0);b=e}Zdb.X=1;function p1(a){return(a&16711680)>>>8|(a&-16777216)>>>24|(a&65280)<<8|(a&255)<<24}p1.X=1;function g1(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}g1.X=1;function Vdb(a,d){c[d]=c[a+3];c[d+1]=c[a+2];c[d+2]=c[a+1];c[d+3]=c[a]}Vdb.X=1;function $db(a,d,e){var f,g,h,i;Mb(a+5,d+4);Mb(a+1,d);Mb(a+9,d+8);c[d+12]=c[a+14];c[d+13]=c[a+15]&1;c[d+14]=B0(a+21);f=0!=(B0(a+21)|0)?v[c[c[e]+7]](e,l1(a+21,0)):0;c[d+16]=f;if(0!=(c[d+16]|0)){f=B0(a+21);g=v[c[c[e]+4]](e,48,f);h=c[g+2];i=0;var j=(i|0)<(f|0);a:do{if(j){for(var l=a+21,m=a+21,n=a+21,p=a+21,r=a+21;;){if(Mb(l1(l,i)+4,h+4),Mb(l1(m,i),h),c[h+8]=c[l1(n,i)+8],c[h+9]=c[l1(p,i)+9],c[h+10]=c[l1(r,i)+10],i+=1,h+=15,(i|0)>=(f|0)){break a}}}}while(0);v[c[c[e]+5]](e,g,D.Me,1497453121,l1(a+21,0))}c[d+15]=s0(a+31);f=0!=(s0(a+31)|0)?v[c[c[e]+7]](e,k1(a+31,0)):0;c[d+17]=f;if(0!=(c[d+17]|0)){f=s0(a+31);g=v[c[c[e]+4]](e,16,f);h=c[g+2];i=0;j=(i|0)<(f|0);a:do{if(j){for(var l=a+31,m=a+31,n=a+31,p=a+31,r=a+31,s=a+31,t=a+31;;){if(c[h+6]=c[k1(l,i)+6],c[h+3]=c[k1(m,i)+3],c[h+4]=c[k1(n,i)+4],c[h+5]=c[k1(p,i)+5],c[h]=c[k1(r,i)],c[h+1]=c[k1(s,i)+1],c[h+2]=c[k1(t,i)+2],i+=1,h+=7,(i|0)>=(f|0)){break a}}}}while(0);v[c[c[e]+5]](e,g,D.de,1497453121,k1(a+31,0))}c[d+19]=c[a+36];c[d+20]=C0(a+37);f=0!=(C0(a+37)|0)?v[c[c[e]+7]](e,o1(a+37,0)):0;c[d+18]=f;if(0!=(c[d+18]|0)){d=C0(a+37);f=v[c[c[e]+4]](e,20,d);g=c[f+2];h=0;i=(h|0)<(d|0);a:do{if(i){j=a+37;l=a+37;m=a+37;n=a+37;p=a+37;r=a+37;s=a+37;for(t=a+37;;){if(c[g+5]=c[o1(j,h)+3],c[g+6]=c[o1(l,h)+4],c[g+7]=c[o1(m,h)+5],c[g+2]=c[o1(n,h)],c[g+3]=c[o1(p,h)+1],c[g+4]=c[o1(r,h)+2],c[g]=c[o1(s,h)+6],c[g+1]=c[o1(t,h)+7],h+=1,g+=8,(h|0)>=(d|0)){break a}}}}while(0);v[c[c[e]+5]](e,f,D.ze,1497453121,o1(a+37,0))}return D.Le}$db.X=1;function Odb(a){lbb(a,0,C0(a));mbb(a);g1(a)}Odb.X=1;function NUa(a,d,e,f){EY(a);c[a]=aeb+2;var g=a+1;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];d=a+5;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[a+9]=f;k[a+10]=1}NUa.X=1;function beb(a,d,e,f){var g=b;b+=80;var h,i,j=g+4,l=g+8,m=g+12,n=g+16,p=g+20,r,s=g+24,t=g+28,w=g+32,x=g+36,y=g+40,z=g+44,A=g+48,C=g+52,B=g+56,K=g+60,E=g+64,G=g+68,M=g+72,L=g+76;h=d+4;i=d+8;N(j,h,d);c[g]=c[j];k[g]=k[j];c[g+1]=c[j+1];k[g+1]=k[j+1];c[g+2]=c[j+2];k[g+2]=k[j+2];c[g+3]=c[j+3];k[g+3]=k[j+3];N(m,i,d);c[l]=c[m];k[l]=k[m];c[l+1]=c[m+1];k[l+1]=k[m+1];c[l+2]=c[m+2];k[l+2]=k[m+2];c[l+3]=c[m+3];k[l+3]=k[m+3];qn(p,g,l);c[n]=c[p];k[n]=k[p];c[n+1]=c[p+1];k[n+1]=k[p+1];c[n+2]=c[p+2];k[n+2]=k[p+2];c[n+3]=c[p+3];k[n+3]=k[p+3];m=J(d,n);j=J(n,a+1);j-=m;l=J(n,a+5);l-=m;p=0<=j*l;a:do{if(!p&&!(0!=(c[a+9]&1|0)&&0<j)&&(m=j/(j-l),m<k[a+10])){r=Um(n);r*=-9999999747378752e-20;yB(s,a+1,a+5,m);N(w,d,s);var F=t,I=w;c[F]=c[I];k[F]=k[I];c[F+1]=c[I+1];k[F+1]=k[I+1];c[F+2]=c[I+2];k[F+2]=k[I+2];c[F+3]=c[I+3];k[F+3]=k[I+3];N(y,h,s);F=x;I=y;c[F]=c[I];k[F]=k[I];c[F+1]=c[I+1];k[F+1]=k[I+1];c[F+2]=c[I+2];k[F+2]=k[I+2];c[F+3]=c[I+3];k[F+3]=k[I+3];qn(A,t,x);F=z;I=A;c[F]=c[I];k[F]=k[I];c[F+1]=c[I+1];k[F+1]=k[I+1];c[F+2]=c[I+2];k[F+2]=k[I+2];c[F+3]=c[I+3];k[F+3]=k[I+3];if(J(z,n)>=r&&(N(B,i,s),F=C,I=B,c[F]=c[I],k[F]=k[I],c[F+1]=c[I+1],k[F+1]=k[I+1],c[F+2]=c[I+2],k[F+2]=k[I+2],c[F+3]=c[I+3],k[F+3]=k[I+3],qn(E,x,C),F=K,I=E,c[F]=c[I],k[F]=k[I],c[F+1]=c[I+1],k[F+1]=k[I+1],c[F+2]=c[I+2],k[F+2]=k[I+2],c[F+3]=c[I+3],k[F+3]=k[I+3],J(K,n)>=r&&(qn(M,C,t),F=G,I=M,c[F]=c[I],k[F]=k[I],c[F+1]=c[I+1],k[F+1]=k[I+1],c[F+2]=c[I+2],k[F+2]=k[I+2],c[F+3]=c[I+3],k[F+3]=k[I+3],J(G,n)>=r))){IB(n);r=0!=(c[a+9]&2|0);do{if(!r&&!(0>=j)){k[a+10]=v[c[c[a]+3]](a,n,m,e,f);break a}}while(0);r=c[c[a]+3];WP(L,n);k[a+10]=v[r](a,L,m,e,f)}}}while(0);b=g}beb.X=1;function ceb(){}ceb.X=1;function deb(){return D.fe}deb.X=1;function eeb(){return 76}eeb.X=1;function feb(a){return a+4}feb.X=1;function dUa(a,d,e,f,g,h){EY(a);c[a]=geb+2;c[a+1]=d;xi(a+2,e);xi(a+18,f);xi(a+34,g);k[a+50]=1;k[a+51]=h;k[a+52]=0}dUa.X=1;function heb(){}heb.X=1;function ieb(a){xe(a)}ieb.X=1;function jeb(){}jeb.X=1;function keb(a){xe(a)}keb.X=1;function leb(a,d,e){cZ(a);c[a]=meb+2;var f=a+4;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];c[a+8]=d;c[a+1]=22}leb.X=1;function neb(a){xe(a)}neb.X=1;function oeb(){}oeb.X=1;function peb(a,d,e,f){var g=b;b+=21;var h=g+6,i=g+10,j=g+11,l=g+12,m=g+13,n=g+17;qeb(g,d,a+4);k[i]=1/k[a+4];k[j]=1/k[a+4+1];k[l]=1/k[a+4+2];H(h,i,j,l);k[m]=0<=k[a+4]?k[e]*k[h]:k[f]*k[h];k[m+1]=0<=k[a+4+1]?k[e+1]*k[h+1]:k[f+1]*k[h+1];k[m+2]=0<=k[a+4+2]?k[e+2]*k[h+2]:k[f+2]*k[h+2];k[m+3]=0;k[n]=0>=k[a+4]?k[e]*k[h]:k[f]*k[h];k[n+1]=0>=k[a+4+1]?k[e+1]*k[h+1]:k[f+1]*k[h+1];k[n+2]=0>=k[a+4+2]?k[e+2]*k[h+2]:k[f+2]*k[h+2];k[n+3]=0;a=c[a+8];v[c[c[a]+15]](a,g,m,n);b=g}peb.X=1;function reb(){}reb.X=1;function seb(a,d,e,f){var g=b;b+=70;var h=g+4,i=g+8,j=g+12,l=g+16,m=g+20,n=g+21,p=g+25,r=g+26,s=g+30,t=g+34,w=g+35,x=g+39,y=g+51,z=g+55,A=g+59,C=g+60,B=g+61,K=g+62,E=g+66,G=c[a+8]+4;c[g]=c[G];k[g]=k[G];c[g+1]=c[G+1];k[g+1]=k[G+1];c[g+2]=c[G+2];k[g+2]=k[G+2];c[g+3]=c[G+3];k[g+3]=k[G+3];G=c[a+8]+8;c[h]=c[G];k[h]=k[G];c[h+1]=c[G+1];k[h+1]=k[G+1];c[h+2]=c[G+2];k[h+2]=k[G+2];c[h+3]=c[G+3];k[h+3]=k[G+3];ig(i,g,a+4);ig(j,h,a+4);k[g]=0<=k[a+4]?k[i]:k[j];k[g+1]=0<=k[a+4+1]?k[i+1]:k[j+1];k[g+2]=0<=k[a+4+2]?k[i+2]:k[j+2];k[h]=0>=k[a+4]?k[i]:k[j];k[h+1]=0>=k[a+4+1]?k[i+1]:k[j+1];k[h+2]=0>=k[a+4+2]?k[i+2]:k[j+2];k[m]=.5;N(n,h,g);Q(l,n,m);a=c[a+8];k[p]=v[c[c[a]+11]](a);H(r,p,p,p);xn(l,r);k[t]=.5;wn(w,h,g);Q(s,w,t);qc(x,d);vw(y,d,s);k[A]=J(0+x,l);k[C]=J(4+x,l);k[B]=J(8+x,l);H(z,A,C,B);N(K,y,z);c[e]=c[K];k[e]=k[K];c[e+1]=c[K+1];k[e+1]=k[K+1];c[e+2]=c[K+2];k[e+2]=k[K+2];c[e+3]=c[K+3];k[e+3]=k[K+3];wn(E,y,z);c[f]=c[E];k[f]=k[E];c[f+1]=c[E+1];k[f+1]=k[E+1];c[f+2]=c[E+2];k[f+2]=k[E+2];c[f+3]=c[E+3];k[f+3]=k[E+3];b=g}seb.X=1;function teb(a,d){var e=a+4;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}teb.X=1;function ueb(a,d,e){var f=c[a+8];v[c[c[f]+13]](f,d,e);c[d+1]=22;mc(a+4,d+24);return D.Qe}ueb.X=1;function qeb(a,d,e){EY(a);c[a]=veb+2;c[a+1]=d;a+=2;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}qeb.X=1;function web(a){xe(a)}web.X=1;function xeb(a,d,e,f){var g=b;b+=168;var h=g+26,i=g+117,j=g+118,l=g+124;sZ(g,d,d+4,d+8);v[c[c[g]+10]](g,k[a+51]);gY(h);vY(i);wY(j,c[a+1],g,h,i);fY(l);k[l+41]=1;k[l+43]=k[a+52];DWa(j,a+2,a+18,a+34,a+34,l)&&9999999747378752e-20<Um(l+33)&&k[l+41]<k[a+50]&&(IB(l+33),v[c[c[a]+3]](a,l+33,l+37,k[l+41],e,f));EX(g);b=g}xeb.X=1;function yeb(a,d){return c[a+3]+d}yeb.X=1;function zeb(a,d,e,f){var g=b;b+=24;var h=g+12,i=g+16,j=g+20;ig(h,d,a+2);c[g]=c[h];k[g]=k[h];c[g+1]=c[h+1];k[g+1]=k[h+1];c[g+2]=c[h+2];k[g+2]=k[h+2];c[g+3]=c[h+3];k[g+3]=k[h+3];ig(i,d+4,a+2);h=g+4;c[h]=c[i];k[h]=k[i];c[h+1]=c[i+1];k[h+1]=k[i+1];c[h+2]=c[i+2];k[h+2]=k[i+2];c[h+3]=c[i+3];k[h+3]=k[i+3];ig(j,d+8,a+2);d=g+8;c[d]=c[j];k[d]=k[j];c[d+1]=c[j+1];k[d+1]=k[j+1];c[d+2]=c[j+2];k[d+2]=k[j+2];c[d+3]=c[j+3];k[d+3]=k[j+3];a=c[a+1];v[c[c[a]+2]](a,g,e,f);b=g}zeb.X=1;function w1(a){Aeb(a,0,x1(a));Beb(a);y1(a)}w1.X=1;function Ceb(a,d){KW(a);y1(a+5);c[a+11]=d;UW(a);w1(a+5);c[a+10]=0}Ceb.X=1;function Deb(a){w1(a+5);UW(a);w1(a+5);UW(a)}Deb.X=1;function Aeb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Aeb.X=1;function x1(a){return c[a+1]}x1.X=1;function Eeb(a){return c[a+2]}Eeb.X=1;function Feb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Feb.X=1;function y1(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}y1.X=1;function z1(a,d){c[a+13]=d}z1.X=1;function Geb(a,d){var e;(Eeb(a)|0)<(d|0)&&(e=Heb(a,d),Feb(a,0,x1(a),e),Aeb(a,0,x1(a)),Beb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Geb.X=1;function Heb(a,d){return 0!=(d|0)?Ieb(a,d,0):0}Heb.X=1;function Beb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Jeb(a,c[a+3]),c[a+3]=0)}Beb.X=1;function Jeb(a,d){$1=a;yh(d)}Jeb.X=1;function Ieb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}Ieb.X=1;function Keb(a,d,e){bX(a);c[a]=A1+2;c[a+7]=e;c[a+8]=0;c[a+9]=0;0==(e|0)&&(e=Ue(76,16),0==(e|0)?e=0:dX(e),c[a+7]=e,c[a+8]=1);c[a+5]=Ue(52*d,16);var e=c[a+5],f=0==(d|0);a:do{if(!f){for(var g=e+14*d,h=e;;){if(gV(h),h+=14,(h|0)==(g|0)){break a}}}}while(0);c[a+4]=e;c[a+2]=d;c[a+1]=0;c[a+6]=0;c[a+3]=-1;e=c[a+6];f=(e|0)<(d|0);a:do{if(f){g=a+4;for(h=a+4;;){if(z1(c[g]+14*e,e+1),c[c[h]+14*e+4]=e+2,e+=1,(e|0)>=(d|0)){break a}}}}while(0);z1(c[a+4]+14*(d-1),0)}Keb.X=1;function Leb(a){Meb(a);xe(a)}Leb.X=1;function Meb(a){c[a]=A1+2;yh(c[a+5]);if(c[a+8]&1){var d=c[a+7];v[c[c[d]]](d);yh(c[a+7])}}Meb.X=1;function Neb(a,d,e,f,g,h,i,j,l){$10=j;(c[a+1]|0)>=(c[a+2]|0)?d=0:(j=Oeb(a),a=c[a+4]+14*j,Peb(a,d,e,f,g,h,i,l),d=a);return d}Neb.X=1;function Qeb(){}Qeb.X=1;function Reb(){}Reb.X=1;function Seb(a){return c[a+7]}Seb.X=1;function Teb(a){return c[a+7]}Teb.X=1;function Ueb(a){return c[a+13]}Ueb.X=1;function Oeb(a){var d;d=c[a+6];c[a+6]=Ueb(c[a+4]+14*d);var e=a+1;c[e]+=1;(d|0)>(c[a+3]|0)&&(c[a+3]=d);return d}Oeb.X=1;function Veb(a,d,e){Web(a,d);a=c[a+7];v[c[c[a]+4]](a,d,e)}Veb.X=1;function Web(a,d){var e;e=(d-c[a+4]|0)/52&-1;if((e|0)==(c[a+3]|0)){var f=a+3;c[f]-=1}z1(d,c[a+6]);c[a+6]=e;c[d]=0;e=a+1;c[e]-=1}Web.X=1;function Xeb(a,d,e,f){a=d+5;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3];d+=9;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3]}Xeb.X=1;function Yeb(a,d,e,f,g){$6=g;a=d+5;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3];d+=9;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3]}Yeb.X=1;function Zeb(a,d,e,f,g,h){$2=d;$3=e;$5=g;$6=h;d=0;g=a+3;h=(d|0)<=(c[g]|0);a:do{if(h){for(var i=a+4;;){e=c[i]+14*d;if(0!=(c[e]|0)){var j=f;v[c[c[j]+2]](j,e)}d+=1;if(!((d|0)<=(c[g]|0))){break a}}}}while(0)}Zeb.X=1;function $eb(a,d,e,f){var g,h;g=0;var i=a+3,j=(g|0)<=(c[i]|0);a:do{if(j){for(var l=a+4;;){h=c[l]+14*g;if(0!=(c[h]|0)&&hX(d,e,h+5,h+9)){var m=f;v[c[c[m]+2]](m,h)}g+=1;if(!((g|0)<=(c[i]|0))){break a}}}}while(0)}$eb.X=1;function afb(a,d){return k[a+5]<=k[d+9]?k[d+5]<=k[a+9]?k[a+5+1]<=k[d+9+1]?k[d+5+1]<=k[a+9+1]?k[a+5+2]<=k[d+9+2]?k[d+5+2]<=k[a+9+2]:0:0:0:0:0}afb.X=1;function bfb(a,d){var e=b;b+=12;var f,g,h,i,j,l,m=e+4,n,p,r=e+8,s=0<=(c[a+1]|0);do{if(s){h=-1;f=0;var t=a+3,w=(f|0)<=(c[t]|0);a:do{if(w){n=a+4;p=a+3;for(var x=a+4,y=a+7,z=a+7,A=a+7,C=a+7;;){i=c[n]+14*f;var B=0!=(c[i]|0);b:do{if(B&&(h=f,g=f+1,(g|0)<=(c[p]|0))){for(;;){j=c[x]+14*g;if(0!=(c[j]|0)){l=i;var K=c[y];afb(l,j)?0==(v[c[c[K]+13]](K,i,j)|0)&&(l=c[z],v[c[c[l]+2]](l,i,j)):v[c[c[K]+14]](K)||(l=c[A],0!=(v[c[c[l]+13]](l,i,j)|0)&&(l=c[C],v[c[c[l]+3]](l,i,j,d)))}g+=1;if(!((g|0)<=(c[p]|0))){break b}}}}while(0);f+=1;if(!((f|0)<=(c[t]|0))){break a}}}}while(0);c[a+3]=h;if(c[a+8]&1&&(f=c[a+7],v[c[c[f]+14]](f))){f=c[a+7];g=v[c[c[f]+7]](f);iX(g);f=jX(g)-c[a+9];Az(e);kX(g,f,e);c[a+9]=0;Az(m);c[m]=0;c[m+1]=0;f=c[m+2]=0;h=(f|0)<(jX(g)|0);i=g;a:do{if(h){j=m;t=a+7;w=a+9;for(n=i;;){if(n=lX(n,f),p=mX(n,m)&1,x=n,c[j]=c[x],k[j]=k[x],c[j+1]=c[x+1],k[j+1]=k[x+1],c[j+2]=c[x+2],k[j+2]=k[x+2],c[j+3]=c[x+3],k[j+3]=k[x+3],p=p&1?1:afb(c[n],c[n+1])&1?0:1,p&1&&(p=c[t],v[c[c[p]+8]](p,n,d),c[n]=0,c[n+1]=0,c[w]+=1,c[nX]-=1),f+=1,n=g,(f|0)>=(jX(g)|0)){var E=n;break a}}}else{E=i}}while(0);iX(E);f=jX(g)-c[a+9];Az(r);kX(g,f,r);c[a+9]=0}}}while(0);b=e}bfb.X=1;function cfb(a,d,e){var f=b;b+=6;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5;$1=a;k[f]=-0xde0b6b000000000;k[g]=-0xde0b6b000000000;k[h]=-0xde0b6b000000000;pe(d,f,g,h);k[i]=0xde0b6b000000000;k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;pe(e,i,j,l);b=f}cfb.X=1;function Peb(a,d,e,f,g,h,i,j){$4=f;hV(a,d,e,g,h,i,j)}Peb.X=1;function dfb(a){c[a]=B1+2;C1(a+1);XX(a+6);JW(a+11);c[a+16]=1}dfb.X=1;function efb(a){ffb(a);xe(a)}efb.X=1;function gfb(a,d){hfb(a+1,d)}gfb.X=1;function ifb(a,d,e){var f,g,h;$3=d;e=Am(e);d=v[c[c[e]+9]](e);e=v[c[c[e]+5]](e);f=0;var i=(f|0)<(d|0);a:do{if(i){for(var j=a+1;;){if(g=(f<<2)+e,h=c[c[g]],g=c[c[g+1]],0!=(h|0)&&Sh(h)&&0!=(g|0)&&Sh(g)&&jfb(j,Uh(h),Uh(g)),f+=1,(f|0)>=(d|0)){break a}}}}while(0)}ifb.X=1;function jfb(a,d,e){d=D1(a,d);e=D1(a,e);(d|0)!=(e|0)&&(c[E1(a,d)]=e,e=E1(a,e)+1,c[e]+=c[E1(a,d)+1])}jfb.X=1;function kfb(a,d,e){var f,g,h;g=f=0;var i=(g|0)<(Tl(d+1)|0);a:do{if(i){for(;;){h=c[$X(d+1,g)];if(!Pi(h)){var j=f;f=j+1;Yh(h,j)}Vh(h,-1);Zh(h,1);g+=1;if((g|0)>=(Tl(d+1)|0)){break a}}}}while(0);gfb(a,f);ifb(a,e,d)}kfb.X=1;function lfb(a,d){var e,f,g;f=e=0;var h=(f|0)<(Tl(d+1)|0);a:do{if(h){for(var i=a+1,j=a+1;;){var l=g=c[$X(d+1,f)];Pi(g)?(Yh(l,-1),Vh(g,-2)):(Yh(l,D1(i,e)),c[E1(j,e)+1]=f,Vh(g,-1),e+=1);f+=1;if((f|0)>=(Tl(d+1)|0)){break a}}}}while(0)}lfb.X=1;function D1(a,d){var e,f;e=d;var g=(e|0)!=(c[E1(a,e)]|0);a:do{if(g){for(var h=a,i=a,j=a;;){if(f=E1(h,c[E1(i,e)]),c[E1(j,e)]=c[f],e=c[f],(e|0)==(c[E1(a,e)]|0)){break a}}}}while(0);return e}D1.X=1;function ffb(a){c[a]=B1+2;TW(a+11);TX(a+6);mfb(a+1)}ffb.X=1;function nfb(a,d,e){var f=b;b+=3;var g,h=f+1,i,j,l,m,n,p=f+2,r;jY(f,D.Re);e+=1;c[h]=0;PY(a+6,0,h);ofb(a+1);h=F1(a+1);j=0;r=(j|0)<(h|0);a:do{if(r){for(;;){l=c[E1(a+1,j)];for(i=j+1;(i|0)<(h|0)&&(c[E1(a+1,i)]|0)==(l|0);){i+=1}g=1;m=j;var s=(m|0)<(i|0);b:do{if(s){for(;;){if(n=c[$X(e,c[E1(a+1,m)+1])],(Uh(n)|0)==(l|0)&&(1==(ki(n)|0)&&(g=0),4==(ki(n)|0)&&(g=0)),m+=1,(m|0)>=(i|0)){break b}}}}while(0);g&=1;b:do{if(g){if(m=j,(m|0)<(i|0)){for(;;){if(n=c[$X(e,c[E1(a+1,m)+1])],(Uh(n)|0)==(l|0)&&Li(n,2),m+=1,(m|0)>=(i|0)){break b}}}}else{if(m=j,(m|0)<(i|0)){for(;;){if(n=c[$X(e,c[E1(a+1,m)+1])],(Uh(n)|0)==(l|0)&&2==(ki(n)|0)&&(Li(n,3),Mi(n,0)),m+=1,(m|0)>=(i|0)){break b}}}}}while(0);j=i;if((j|0)>=(h|0)){break a}}}}while(0);h=v[c[c[d]+9]](d);e=0;i=a+16;for(a+=6;(e|0)<(h|0);){l=d;c[p]=v[c[c[l]+10]](l,e);l=$j(c[p]);r=g=Yj(c[p]);if(0!=(l|0)){if(2!=(ki(l)|0)){g=44}else{var t=r;g=42}}else{t=g,g=42}42==g&&(g=0==(t|0)?54:2!=(ki(r)|0)?44:54);44==g&&(Ti(l)&&2!=(ki(l)|0)&&ui(r,0),Ti(r)&&2!=(ki(r)|0)&&ui(l,0),c[i]&1&&(g=d,v[c[c[g]+7]](g,l,r)&&CX(a,p)));e+=1}kY(f);b=f}nfb.X=1;function pfb(a){return c[a+277]}pfb.X=1;function qfb(a){return c[a+278]}qfb.X=1;function F1(a){return c[a+1]}F1.X=1;function E1(a,d){return(d<<1)+c[a+3]}E1.X=1;function rfb(a){1<(AX(a)|0)&&G1(a,0,AX(a)-1)}rfb.X=1;function H1(a){var d;d=pfb(a);a=qfb(a);return 0<=(Uh(d)|0)?Uh(d):Uh(a)}H1.X=1;function sfb(a,d,e){var f,g;f=Tl(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(Tl(a)|0)&&XLa(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}sfb.X=1;function G1(a,d,e){var f=b;b+=1;var g,h,i;g=d;h=e;i=c[c[a+3]+((e+d|0)/2&-1)];for(var j=a+3,l=a+3;;){if(I1(f,c[c[j]+g],i)){g+=1}else{var m=I1(f,i,c[c[l]+h]);a:do{if(m){for(;;){if(h-=1,!I1(f,i,c[c[l]+h])){break a}}}}while(0);(g|0)<=(h|0)&&(mRa(a,g,h),g+=1,h-=1);if(!((g|0)<=(h|0))){break}}}(d|0)<(h|0)&&G1(a,d,h);(g|0)<(e|0)&&G1(a,g,e);b=f}G1.X=1;function I1(a,d,e){$1=a;return(H1(d)|0)<(H1(e)|0)}I1.X=1;function tfb(a,d,e,f,g,h){h&=1;aX(a,e,f,g);c[a]=J1+2;c[a+2]=0;c[a+3]=d;c[a+4]=h&1;d=c[a+4]&1?g:f;f=c[a+4]&1?f:g;0==(c[a+3]|0)&&(g=c[a+1],v[c[c[g]+6]](g,d,f)&&(g=c[a+1],c[a+3]=v[c[c[g]+3]](g,d,f),c[a+2]=1))}tfb.X=1;function ufb(a){vfb(a);xe(a)}ufb.X=1;function vfb(a){c[a]=J1+2;if(c[a+2]&1&&0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3])}}vfb.X=1;function wfb(a,d,e,f,g){var h=b;b+=24;var i=h+4,j=h+8,l=h+12,m=h+16,n=h+20;$4=f;0!=(c[a+3]|0)&&(f=c[a+4]&1?e:d,d=c[a+4]&1?d:e,e=bi(f),f=f+1+12,c[l]=c[f],k[l]=k[f],c[l+1]=c[f+1],k[l+1]=k[f+1],c[l+2]=c[f+2],k[l+2]=k[f+2],c[l+3]=c[f+3],k[l+3]=k[f+3],l=xfb(a,d,i,j,l,dW(e)),fI(g,c[a+3]),1.1920928955078125e-7>l&&(N(n,i,j),j=IB(n),c[m]=c[j],k[m]=k[j],c[m+1]=c[j+1],k[m+1]=k[j+1],c[m+2]=c[j+2],k[m+2]=k[j+2],c[m+3]=c[j+3],k[m+3]=k[j+3],v[c[c[g]+4]](g,m,i,l)),c[a+2]&1&&0!=(Xj(c[a+3])|0)&&DI(g));b=h}wfb.X=1;function yfb(a,d,e,f){var g=b;b+=3;var h,i,j,l,m,n,p,r=g+1,s,t,w=g+2;h=e+1;nfb(a,d,e);e=F1(a+1);jY(g,D.ge);var x=c[a+16]&1;a:do{if(x){j=AX(a+6);rfb(a+6);l=0;m=1;i=0;for(var y=a+11,z=a+6,A=a+6,C=a+6,B=a+11,K=a+11,E=a+11;;){if((i|0)>=(e|0)){break a}n=c[E1(a+1,i)];for(p=1;(i|0)<(e|0)&&(c[E1(a+1,i)]|0)==(n|0);){c[r]=c[$X(h,c[E1(a+1,i)+1])],OW(y,r),Ki(c[r])&&(p=0),i+=1}t=s=0;var G=(l|0)<(j|0);if(G&&(H1(c[ZX(z,l)])|0)==(n|0)){t=ZX(A,l);for(m=l+1;(m|0)<(j|0)&&(n|0)==(H1(c[ZX(C,m)])|0);){m+=1}s=m-l}p&1||(p=f,v[c[c[p]+2]](p,$X(K,0),Tl(E),t,s,n));0!=(s|0)&&(l=m);c[w]=0;sfb(B,0,w)}}else{j=d,j=v[c[c[j]+11]](j),l=d,l=v[c[c[l]+9]](l),m=f,v[c[c[m]+2]](m,$X(h,0),Tl(h),j,l,-1)}}while(0);kY(g);b=g}yfb.X=1;function zfb(){return 1}zfb.X=1;function Afb(){return D.he}Afb.X=1;function xfb(a,d,e,f,g,h){var i=b;b+=142;var j;j=i+1;var l=i+2,m=i+10,n=i+14,p=i+22,r=i+26,s=i+30,t=i+34,w=i+58,x=i+62,y=i+66,z=i+67,A=i+68,C=i+69,B=i+70,K=i+71,E=i+72,G=i+73,M=i+74,L=i+75,F=i+76,I=i+77,R=i+78,O=i+79,Z=i+80,P=i+81,S=i+82,da=i+83,V=i+84,ba=i+85,$=i+89,Y=i+93,la=i+97,ka=i+101,ja=i+105,ea=i+109,ca=i+113,W=i+117,U=i+121,X=i+125,ma=i+129,ga=i+133,ha=i+137,ta=i+141;k[i]=h;h=bi(d);WP(m,h+7);c[l]=c[m];k[l]=k[m];c[l+1]=c[m+1];k[l+1]=k[m+1];c[l+2]=c[m+2];k[l+2]=k[m+2];c[l+3]=c[m+3];k[l+3]=k[m+3];var m=l+4,ra=h+7;c[m]=c[ra];k[m]=k[ra];c[m+1]=c[ra+1];k[m+1]=k[ra+1];c[m+2]=c[ra+2];k[m+2]=k[ra+2];c[m+3]=c[ra+3];k[m+3]=k[ra+3];k[j]=v[c[c[h]+11]](h);h=d+1;c[n]=c[l];k[n]=k[l];c[n+1]=c[l+1];k[n+1]=k[l+1];c[n+2]=c[l+2];k[n+2]=k[l+2];c[n+3]=c[l+3];k[n+3]=k[l+3];m=n+4;ra=l+4;c[m]=c[ra];k[m]=k[ra];c[m+1]=c[ra+1];k[m+1]=k[ra+1];c[m+2]=c[ra+2];k[m+2]=k[ra+2];c[m+3]=c[ra+3];k[m+3]=k[ra+3];H(p,j,j,j);xn(l,p);JC(l+4,p);p=1e7;k[z]=-1;k[A]=0;k[C]=0;pe(t,z,A,C);k[B]=0;k[K]=-1;k[E]=0;pe(t+4,B,K,E);k[G]=0;k[M]=0;k[L]=-1;pe(t+8,G,M,L);k[F]=1;k[I]=0;k[R]=0;pe(t+12,F,I,R);k[O]=0;k[Z]=1;k[P]=0;pe(t+16,O,Z,P);k[S]=0;k[da]=0;k[V]=1;pe(t+20,S,da,V);kQ(ba,h,g);c[s]=c[ba];k[s]=k[ba];c[s+1]=c[ba+1];k[s+1]=k[ba+1];c[s+2]=c[ba+2];k[s+2]=k[ba+2];c[s+3]=c[ba+3];k[s+3]=k[ba+3];z=0;c[x]=c[s];k[x]=k[s];c[x+1]=c[s+1];k[x+1]=k[s+1];c[x+2]=c[s+2];k[x+2]=k[s+2];c[x+3]=c[s+3];k[x+3]=k[s+3];for(A=0;!(N($,x,((3>(A|0)?0:1)<<2)+l),C=J($,(A<<2)+t),k[y]=C,0<C&&(Q(la,(A<<2)+t,y),N(Y,x,la),c[x]=c[Y],k[x]=k[Y],c[x+1]=c[Y+1],k[x+1]=k[Y+1],c[x+2]=c[Y+2],k[x+2]=k[Y+2],c[x+3]=c[Y+3],k[x+3]=k[Y+3],z=1),A=C=A+1,6<=(C|0));){}z&1?(c[l]=c[n],k[l]=k[n],c[l+1]=c[n+1],k[l+1]=k[n+1],c[l+2]=c[n+2],k[l+2]=k[n+2],c[l+3]=c[n+3],k[l+3]=k[n+3],l+=4,n+=4,c[l]=c[n],k[l]=k[n],c[l+1]=c[n+1],k[l+1]=k[n+1],c[l+2]=c[n+2],k[l+2]=k[n+2],c[l+3]=c[n+3],k[l+3]=k[n+3],N(ka,s,x),n=IB(ka),c[w]=c[n],k[w]=k[n],c[w+1]=c[n+1],k[w+1]=k[n+1],c[w+2]=c[n+2],k[w+2]=k[n+2],c[w+3]=c[n+3],k[w+3]=k[n+3],Q(ea,w,j),wn(ja,x,ea),c[e]=c[ja],k[e]=k[ja],c[e+1]=c[ja+1],k[e+1]=k[ja+1],c[e+2]=c[ja+2],k[e+2]=k[ja+2],c[e+3]=c[ja+3],k[e+3]=k[ja+3],Q(W,w,i),N(ca,s,W),c[f]=c[ca],k[f]=k[ca],c[f+1]=c[ca+1],k[f+1]=k[ca+1],c[f+2]=c[ca+2],k[f+2]=k[ca+2],c[f+3]=c[ca+3],k[f+3]=k[ca+3],N(U,f,e),0<J(U,w)?j=1:(vw(X,h,e),c[r]=c[X],k[r]=k[X],c[r+1]=c[X+1],k[r+1]=k[X+1],c[r+2]=c[X+2],k[r+2]=k[X+2],c[r+3]=c[X+3],k[r+3]=k[X+3],c[e]=c[r],k[e]=k[r],c[e+1]=c[r+1],k[e+1]=k[r+1],c[e+2]=c[r+2],k[e+2]=k[r+2],c[e+3]=c[r+3],k[e+3]=k[r+3],vw(ma,h,f),c[r]=c[ma],k[r]=k[ma],c[r+1]=c[ma+1],k[r+1]=k[ma+1],c[r+2]=c[ma+2],k[r+2]=k[ma+2],c[r+3]=c[ma+3],k[r+3]=k[ma+3],c[f]=c[r],k[f]=k[r],c[f+1]=c[r+1],k[f+1]=k[r+1],c[f+2]=c[r+2],k[f+2]=k[r+2],c[f+3]=c[r+3],k[f+3]=k[r+3],N(ga,e,f),j=Um(ga),1.1920928955078125e-7<j&&(p=-ec(j),N(ha,e,f),c[w]=c[ha],k[w]=k[ha],c[w+1]=c[ha+1],k[w+1]=k[ha+1],c[w+2]=c[ha+2],k[w+2]=k[ha+2],c[w+3]=c[ha+3],k[w+3]=k[ha+3],k[ta]=1/p,LC(w,ta)),j=p)):(e=Bfb(a,d,e,f,g,k[i],l,l+4),c[l]=c[n],k[l]=k[n],c[l+1]=c[n+1],k[l+1]=k[n+1],c[l+2]=c[n+2],k[l+2]=k[n+2],c[l+3]=c[n+3],k[l+3]=k[n+3],f=l+4,w=n+4,c[f]=c[w],k[f]=k[w],c[f+1]=c[w+1],k[f+1]=k[w+1],c[f+2]=c[w+2],k[f+2]=k[w+2],c[f+3]=c[w+3],k[f+3]=k[w+3],j=0>=e?e-k[j]:1);b=i;return j}xfb.X=1;function Bfb(a,d,e,f,g,h,i,j){var l=b;b+=114;var m,n=l+8,p=l+12,r=l+16,s=l+20,t=l+44,w=l+48,x,y=l+49,z=l+50,A=l+51,C=l+52,B=l+53,K=l+54,E=l+55,G=l+56,M=l+57,L=l+58,F=l+59,I=l+60,R=l+61,O=l+62,Z=l+63,P=l+64,S=l+65,da=l+66,V=l+67,ba=l+68,$=l+69,Y=l+70,la=l+71,ka=l+72;x=l+73;var ja=l+77,ea=l+81,ca=l+85,W=l+89,U=l+93,X=l+94,ma=l+98,ga=l+102,ha=l+106,ta=l+110;$2=a;c[l]=c[i];k[l]=k[i];c[l+1]=c[i+1];k[l+1]=k[i+1];c[l+2]=c[i+2];k[l+2]=k[i+2];c[l+3]=c[i+3];k[l+3]=k[i+3];a=l+4;c[a]=c[j];k[a]=k[j];c[a+1]=c[j+1];k[a+1]=k[j+1];c[a+2]=c[j+2];k[a+2]=k[j+2];c[a+3]=c[j+3];k[a+3]=k[j+3];k[w]=-1e7;k[y]=0;k[z]=0;k[A]=0;pe(n,y,z,A);k[C]=0;k[B]=0;k[K]=0;pe(t,C,B,K);k[E]=-1;k[G]=0;k[M]=0;pe(s,E,G,M);k[L]=0;k[F]=-1;k[I]=0;pe(s+4,L,F,I);k[R]=0;k[O]=0;k[Z]=-1;pe(s+8,R,O,Z);k[P]=1;k[S]=0;k[da]=0;pe(s+12,P,S,da);k[V]=0;k[ba]=1;k[$]=0;pe(s+16,V,ba,$);k[Y]=0;k[la]=0;k[ka]=1;pe(s+20,Y,la,ka);d+=1;kQ(x,d,g);c[r]=c[x];k[r]=k[x];c[r+1]=c[x+1];k[r+1]=k[x+1];c[r+2]=c[x+2];k[r+2]=k[x+2];c[r+3]=c[x+3];k[r+3]=k[x+3];for(x=g=0;;){if(6<=(x|0)){N(W,r,n);k[U]=J(t,W);Q(ca,t,U);N(ea,r,ca);h=e;c[h]=c[ea];k[h]=k[ea];c[h+1]=c[ea+1];k[h+1]=k[ea+1];c[h+2]=c[ea+2];k[h+2]=k[ea+2];c[h+3]=c[ea+3];k[h+3]=k[ea+3];Q(ma,t,w);wn(X,e,ma);ma=f;c[ma]=c[X];k[ma]=k[X];c[ma+1]=c[X+1];k[ma+1]=k[X+1];c[ma+2]=c[X+2];k[ma+2]=k[X+2];c[ma+3]=c[X+3];k[ma+3]=k[X+3];vw(ga,d,e);X=p;c[X]=c[ga];k[X]=k[ga];c[X+1]=c[ga+1];k[X+1]=k[ga+1];c[X+2]=c[ga+2];k[X+2]=k[ga+2];c[X+3]=c[ga+3];k[X+3]=k[ga+3];ga=e;X=p;c[ga]=c[X];k[ga]=k[X];c[ga+1]=c[X+1];k[ga+1]=k[X+1];c[ga+2]=c[X+2];k[ga+2]=k[X+2];c[ga+3]=c[X+3];k[ga+3]=k[X+3];vw(ha,d,f);ga=p;c[ga]=c[ha];k[ga]=k[ha];c[ga+1]=c[ha+1];k[ga+1]=k[ha+1];c[ga+2]=c[ha+2];k[ga+2]=k[ha+2];c[ga+3]=c[ha+3];k[ga+3]=k[ha+3];ha=f;c[ha]=c[p];k[ha]=k[p];c[ha+1]=c[p+1];k[ha+1]=k[p+1];c[ha+2]=c[p+2];k[ha+2]=k[p+2];c[ha+3]=c[p+3];k[ha+3]=k[p+3];N(ta,e,f);e=t;ta=IB(ta);c[e]=c[ta];k[e]=k[ta];c[e+1]=c[ta+1];k[e+1]=k[ta+1];c[e+2]=c[ta+2];k[e+2]=k[ta+2];c[e+3]=c[ta+3];k[e+3]=k[ta+3];m=k[w];break}j=3>(g|0)?0:1;N(ja,r,(j<<2)+l);x=y=J(ja,(g<<2)+s)-h;if(0<y){m=1;break}x>k[w]&&(j=(j<<2)+l,c[n]=c[j],k[n]=k[j],c[n+1]=c[j+1],k[n+1]=k[j+1],c[n+2]=c[j+2],k[n+2]=k[j+2],c[n+3]=c[j+3],k[n+3]=k[j+3],j=(g<<2)+s,c[t]=c[j],k[t]=k[j],c[t+1]=c[j+1],k[t+1]=k[j+1],c[t+2]=c[j+2],k[t+2]=k[j+2],c[t+3]=c[j+3],k[t+3]=k[j+3],k[w]=x);g=x=g+1}b=l;return m}Bfb.X=1;function Cfb(a,d){0!=(c[a+3]|0)&&c[a+2]&1&&CX(d,a+3)}Cfb.X=1;function Dfb(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;$1=d;$2=e;k[f]=0;k[g]=0;k[h]=0;H(a,f,g,h);b=f}Dfb.X=1;function Efb(a,d,e,f){var g=b;b+=3;var h=g+1,i=g+2;$1=a;$2=d;a=0;d=(a|0)<(f|0);a:do{if(d){for(;;){if(k[g]=0,k[h]=0,k[i]=0,pe((a<<2)+e,g,h,i),a+=1,(a|0)>=(f|0)){break a}}}}while(0);b=g}Efb.X=1;function Ffb(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+9,j=f+10,l=f+11,m=f+15;v[c[c[d]+16]](f,d,e);c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];1.4210854715202004e-14>Um(g)&&(k[h]=-1,k[i]=-1,k[j]=-1,pe(g,h,i,j));IB(g);k[m]=v[c[c[d]+11]](d);Q(l,g,m);xn(a,l);b=f}Ffb.X=1;function Gfb(a,d,e,f){var g=b;b+=15;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,d=d+12;k[h]=v[c[c[a]+11]](a);k[i]=v[c[c[a]+11]](a);k[j]=v[c[c[a]+11]](a);H(g,h,i,j);N(l,d,g);c[e]=c[l];k[e]=k[l];c[e+1]=c[l+1];k[e+1]=k[l+1];c[e+2]=c[l+2];k[e+2]=k[l+2];c[e+3]=c[l+3];k[e+3]=k[l+3];wn(m,d,g);c[f]=c[m];k[f]=k[m];c[f+1]=c[m+1];k[f+1]=k[m+1];c[f+2]=c[m+2];k[f+2]=k[m+2];c[f+3]=c[m+3];k[f+3]=k[m+3];b=g}Gfb.X=1;function Hfb(a,d,e){var f=b;b+=1;d=.4000000059604645*d*v[c[c[a]+11]](a);k[f]=d*v[c[c[a]+11]](a);pe(e,f,f,f);b=f}Hfb.X=1;function Ifb(a){yh(a)}Ifb.X=1;function Jfb(a){return dW(a)}Jfb.X=1;function Wj(a,d,e,f,g){aX(a,e,f,g);c[a]=YW+2;c[a+2]=0;c[a+3]=d;0==(c[a+3]|0)&&(d=c[a+1],c[a+3]=v[c[c[d]+3]](d,f,g),c[a+2]=1)}Wj.X=1;function Kfb(a){Lfb(a);xe(a)}Kfb.X=1;function Mfb(){return 1}Mfb.X=1;function Nfb(){return 1}Nfb.X=1;function Ofb(){return D.ie}Ofb.X=1;function Pfb(){return 52}Pfb.X=1;function Qfb(){}Qfb.X=1;function Rfb(a){return a+17}Rfb.X=1;function Lfb(a){c[a]=YW+2;if(c[a+2]&1&&0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3])}}Lfb.X=1;function Sfb(a,d,e,f,g){var h=b;b+=25;var i=h+4,j=h+5,l=h+6,m=h+10,n=h+11,p=h+12,r=h+13,s=h+17,t=h+21;$4=f;0!=(c[a+3]|0)&&(fI(g,c[a+3]),f=bi(d),a=bi(e),N(h,d+1+12,e+1+12),k[i]=JB(h),d=dW(f),k[j]=dW(a),k[i]>d+k[j]||(d=k[i]-(d+k[j]),k[m]=1,k[n]=0,k[p]=0,H(l,m,n,p),1.1920928955078125e-7<k[i]&&(wC(r,h,i),c[l]=c[r],k[l]=k[r],c[l+1]=c[r+1],k[l+1]=k[r+1],c[l+2]=c[r+2],k[l+2]=k[r+2],c[l+3]=c[r+3],k[l+3]=k[r+3]),e=e+1+12,Q(t,l,j),wn(s,e,t),v[c[c[g]+4]](g,l,s,d)),DI(g));b=h}Sfb.X=1;function Tfb(a,d){0!=(c[a+3]|0)&&c[a+2]&1&&CX(d,a+3)}Tfb.X=1;function P2a(a,d,e,f,g,h){h&=1;aX(a,e,f,g);c[a]=K1+2;c[a+2]=0;c[a+3]=d;c[a+4]=h&1;0==(c[a+3]|0)&&(d=c[a+1],c[a+3]=v[c[c[d]+3]](d,f,g),c[a+2]=1)}P2a.X=1;function Ufb(a){Vfb(a);xe(a)}Ufb.X=1;function Vfb(a){c[a]=K1+2;if(c[a+2]&1&&0!=(c[a+3]|0)){var d=c[a+1];v[c[c[d]+4]](d,c[a+3])}}Vfb.X=1;function Wfb(a,d,e,f,g){var h=b;b+=38;var i,j,l=h+4;0!=(c[a+3]|0)&&(i=c[a+4]&1?e:d,d=c[a+4]&1?d:e,e=bi(i),j=bi(d),fI(g,c[a+3]),RMa(h,e,j,rk(c[a+3])),QQ(l),k[l+32]=0xde0b6b000000000,xi(l,i+1),xi(l+16,d+1),TMa(h,l,g,c[f+5],c[a+4]&1),c[a+2]&1&&DI(g));b=h}Wfb.X=1;function Xfb(a,d){0!=(c[a+3]|0)&&c[a+2]&1&&CX(d,a+3)}Xfb.X=1;function QN(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;cZ(a);c[a]=Yfb+2;uC(a+12,d);k[a+16]=e;k[f]=0;k[g]=0;k[h]=0;H(a+17,f,g,h);c[a+1]=28;b=f}QN.X=1;function Zfb(a){xe(a)}Zfb.X=1;function $fb(){}$fb.X=1;function agb(a,d,e,f){var g=b;b+=6;var h=g+1,i=g+2,j=g+3,l=g+4,m=g+5;$1=a;$2=d;k[g]=-0xde0b6b000000000;k[h]=-0xde0b6b000000000;k[i]=-0xde0b6b000000000;pe(e,g,h,i);k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;k[m]=0xde0b6b000000000;pe(f,j,l,m);b=g}agb.X=1;function bgb(a,d,e,f){var g=b;b+=152;var h=g+4,i=g+8,j=g+9,l=g+10,m=g+14,n=g+18,p=g+19,r=g+23,s=g+35,t=g+39,w=g+43,x=g+44,y=g+56,z=g+60,A=g+64,C=g+68,B=g+72,K=g+76,E=g+80,G=g+84,M=g+88,L=g+92,F=g+96,I=g+100,R=g+104,O=g+108,Z=g+112,P=g+116,S=g+120,da=g+124,V=g+128,ba=g+132,$=g+136,Y=g+140,la=g+144,ka=g+148;N(h,f,e);k[i]=.5;Q(g,h,i);k[j]=JB(g);wn(m,f,e);k[n]=.5;Q(l,m,n);rw(a+12,p,r);k[w]=J(a+12,l)-k[a+16];Q(t,a+12,w);N(s,l,t);Q(A,p,j);wn(z,s,A);Q(C,r,j);wn(y,z,C);c[x]=c[y];k[x]=k[y];c[x+1]=c[y+1];k[x+1]=k[y+1];c[x+2]=c[y+2];k[x+2]=k[y+2];c[x+3]=c[y+3];k[x+3]=k[y+3];Q(E,p,j);wn(K,s,E);Q(G,r,j);N(B,K,G);a=x+4;c[a]=c[B];k[a]=k[B];c[a+1]=c[B+1];k[a+1]=k[B+1];c[a+2]=c[B+2];k[a+2]=k[B+2];c[a+3]=c[B+3];k[a+3]=k[B+3];Q(F,p,j);N(L,s,F);Q(I,r,j);N(M,L,I);B=x+8;c[B]=c[M];k[B]=k[M];c[B+1]=c[M+1];k[B+1]=k[M+1];c[B+2]=c[M+2];k[B+2]=k[M+2];c[B+3]=c[M+3];k[B+3]=k[M+3];v[c[c[d]+2]](d,x,0,0);Q(Z,p,j);N(O,s,Z);Q(P,r,j);N(R,O,P);c[x]=c[R];k[x]=k[R];c[x+1]=c[R+1];k[x+1]=k[R+1];c[x+2]=c[R+2];k[x+2]=k[R+2];c[x+3]=c[R+3];k[x+3]=k[R+3];Q(V,p,j);N(da,s,V);Q(ba,r,j);wn(S,da,ba);M=x+4;c[M]=c[S];k[M]=k[S];c[M+1]=c[S+1];k[M+1]=k[S+1];c[M+2]=c[S+2];k[M+2]=k[S+2];c[M+3]=c[S+3];k[M+3]=k[S+3];Q(la,p,j);wn(Y,s,la);Q(ka,r,j);wn($,Y,ka);j=x+8;c[j]=c[$];k[j]=k[$];c[j+1]=c[$+1];k[j+1]=k[$+1];c[j+2]=c[$+2];k[j+2]=k[$+2];c[j+3]=c[$+3];k[j+3]=k[$+3];v[c[c[d]+2]](d,x,0,1);b=g}bgb.X=1;function cgb(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;$1=a;$2=d;k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);b=f}cgb.X=1;function dgb(a,d){var e=a+17;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3]}dgb.X=1;function egb(a,d,e){HX(a,d,e);mc(a+17,d+6);mc(a+12,d+10);k[d+14]=k[a+16];return D.Se}egb.X=1;function fgb(a){xe(a)}fgb.X=1;function ggb(a,d,e,f){var g=b;b+=78;var h,i,j=g+1,l=g+2,m=g+3,n=g+4,p=g+5,r=g+6,s=g+7,t,w=g+8,x=g+20,y,z,A=g+24,C=g+25,B=g+26,K=g+27,E=g+28,G=g+29,M=g+30,L=g+31,F=g+32,I,R=g+33,O=g+34,Z=g+35,P=g+36,S=g+37,da=g+38,V=g+39,ba=g+40,$=g+41,Y,la=g+42,ka=g+43,ja=g+44,ea=g+45,ca=g+46,W=g+47,U=g+48,X=g+49,ma=g+50,ga,ha,ta=g+51,ra=g+52,ua=g+53,za=g+54,Za=g+55,ib=g+56,Ca=g+57,Sa=g+58,mb=g+59,Oa,Pa=g+60,fc=g+61,jb=g+62,La=g+63,fb=g+64,Rb=g+65,pb=g+66,Sb=g+67,ab=g+68,Ib,Fc=g+69,Ac=g+70,ob=g+71,Gc=g+72,Yc=g+73,Cc=g+74,Ub=g+75,Uc=g+76,nd=g+77;$3=e;$4=f;i=v[c[c[a]+7]](a);var Ic=a+1;c[x]=c[Ic];k[x]=k[Ic];c[x+1]=c[Ic+1];k[x+1]=k[Ic+1];c[x+2]=c[Ic+2];k[x+2]=k[Ic+2];c[x+3]=c[Ic+3];k[x+3]=k[Ic+3];h=0;var tc=(h|0)<(i|0);a:do{if(tc){for(var hd=a,Tb=a,Jc=w,ub=w+4,uc=w+8,Kc=w,gb=w,gc=w+4,Lc=w+8,Dc=w,Eb=w,Ra=w+4,qb=w+8,Ab=w,hc=w,Hc=w+4,ic=w+8,db=w,bb=w,id=w+4,Zc=w+8,vb=w,rb=w,vc=w+4,Qc=w+8,Rc=w;;){v[c[c[hd]+4]](a,g,r,m,p,j,l,s,n,h);var Xd=c[m];b:do{if(0==(Xd|0)){var Sc=c[n];if(2==(Sc|0)){if(t=0,(t|0)<(c[s]|0)){for(;;){z=c[j]+c[l]*t;y=c[g]+c[p]*c[z];k[A]=k[y]*k[x];k[C]=k[y+1]*k[x+1];k[B]=k[y+2]*k[x+2];pe(Jc,A,C,B);y=c[g]+c[p]*c[z+1];k[K]=k[y]*k[x];k[E]=k[y+1]*k[x+1];k[G]=k[y+2]*k[x+2];pe(ub,K,E,G);y=c[g]+c[p]*c[z+2];k[M]=k[y]*k[x];k[L]=k[y+1]*k[x+1];k[F]=k[y+2]*k[x+2];pe(uc,M,L,F);var Mc=d;v[c[c[Mc]+2]](Mc,Kc,h,t);t+=1;if((t|0)>=(c[s]|0)){break b}}}}else{if(3==(Sc|0)){if(t=0,(t|0)<(c[s]|0)){for(;;){I=c[j]+c[l]*t;y=c[g]+(c[I]&65535)*c[p];k[R]=k[y]*k[x];k[O]=k[y+1]*k[x+1];k[Z]=k[y+2]*k[x+2];pe(gb,R,O,Z);y=c[g]+(c[I+1]&65535)*c[p];k[P]=k[y]*k[x];k[S]=k[y+1]*k[x+1];k[da]=k[y+2]*k[x+2];pe(gc,P,S,da);y=c[g]+(c[I+2]&65535)*c[p];k[V]=k[y]*k[x];k[ba]=k[y+1]*k[x+1];k[$]=k[y+2]*k[x+2];pe(Lc,V,ba,$);var $c=d;v[c[c[$c]+2]]($c,Dc,h,t);t+=1;if((t|0)>=(c[s]|0)){break b}}}}else{if(5==(Sc|0)&&(t=0,(t|0)<(c[s]|0))){for(;;){Y=c[j]+c[l]*t;y=c[g]+(c[Y]&255)*c[p];k[la]=k[y]*k[x];k[ka]=k[y+1]*k[x+1];k[ja]=k[y+2]*k[x+2];pe(Eb,la,ka,ja);y=c[g]+(c[Y+1]&255)*c[p];k[ea]=k[y]*k[x];k[ca]=k[y+1]*k[x+1];k[W]=k[y+2]*k[x+2];pe(Ra,ea,ca,W);y=c[g]+(c[Y+2]&255)*c[p];k[U]=k[y]*k[x];k[X]=k[y+1]*k[x+1];k[ma]=k[y+2]*k[x+2];pe(qb,U,X,ma);var Cd=d;v[c[c[Cd]+2]](Cd,Ab,h,t);t+=1;if((t|0)>=(c[s]|0)){break b}}}}}}else{if(1==(Xd|0)){var wc=c[n];if(2==(wc|0)){if(t=0,(t|0)<(c[s]|0)){for(;;){ha=c[j]+c[l]*t;ga=c[g]+c[p]*c[ha];k[ta]=k[ga]*k[x];k[ra]=k[ga+1]*k[x+1];k[ua]=k[ga+2]*k[x+2];pe(hc,ta,ra,ua);ga=c[g]+c[p]*c[ha+1];k[za]=k[ga]*k[x];k[Za]=k[ga+1]*k[x+1];k[ib]=k[ga+2]*k[x+2];pe(Hc,za,Za,ib);ga=c[g]+c[p]*c[ha+2];k[Ca]=k[ga]*k[x];k[Sa]=k[ga+1]*k[x+1];k[mb]=k[ga+2]*k[x+2];pe(ic,Ca,Sa,mb);var Bb=d;v[c[c[Bb]+2]](Bb,db,h,t);t+=1;if((t|0)>=(c[s]|0)){break b}}}}else{if(3==(wc|0)){if(t=0,(t|0)<(c[s]|0)){for(;;){Oa=c[j]+c[l]*t;ga=c[g]+(c[Oa]&65535)*c[p];k[Pa]=k[ga]*k[x];k[fc]=k[ga+1]*k[x+1];k[jb]=k[ga+2]*k[x+2];pe(bb,Pa,fc,jb);ga=c[g]+(c[Oa+1]&65535)*c[p];k[La]=k[ga]*k[x];k[fb]=k[ga+1]*k[x+1];k[Rb]=k[ga+2]*k[x+2];pe(id,La,fb,Rb);ga=c[g]+(c[Oa+2]&65535)*c[p];k[pb]=k[ga]*k[x];k[Sb]=k[ga+1]*k[x+1];k[ab]=k[ga+2]*k[x+2];pe(Zc,pb,Sb,ab);var fd=d;v[c[c[fd]+2]](fd,vb,h,t);t+=1;if((t|0)>=(c[s]|0)){break b}}}}else{if(5==(wc|0)&&(t=0,(t|0)<(c[s]|0))){for(;;){Ib=c[j]+c[l]*t;ga=c[g]+(c[Ib]&255)*c[p];k[Fc]=k[ga]*k[x];k[Ac]=k[ga+1]*k[x+1];k[ob]=k[ga+2]*k[x+2];pe(rb,Fc,Ac,ob);ga=c[g]+(c[Ib+1]&255)*c[p];k[Gc]=k[ga]*k[x];k[Yc]=k[ga+1]*k[x+1];k[Cc]=k[ga+2]*k[x+2];pe(vc,Gc,Yc,Cc);ga=c[g]+(c[Ib+2]&255)*c[p];k[Ub]=k[ga]*k[x];k[Uc]=k[ga+1]*k[x+1];k[nd]=k[ga+2]*k[x+2];pe(Qc,Ub,Uc,nd);var ad=d;v[c[c[ad]+2]](ad,Rc,h,t);t+=1;if((t|0)>=(c[s]|0)){break b}}}}}}}}while(0);v[c[c[Tb]+6]](a,h);h+=1;if((h|0)>=(i|0)){break a}}}}while(0);b=g}ggb.X=1;function hgb(){return 0}hgb.X=1;function igb(){}igb.X=1;function jgb(){}jgb.X=1;function kgb(){return 28}kgb.X=1;function vy(a,d,e){var f=b;b+=15;var g=f+9,h=f+10,i=f+11,j=f+12,l=f+13,m=f+14;lgb(f);k[g]=-0xde0b6b000000000;k[h]=-0xde0b6b000000000;k[i]=-0xde0b6b000000000;pe(d,g,h,i);k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;k[m]=0xde0b6b000000000;pe(e,j,l,m);v[c[c[a]+2]](a,f,d,e);a=f+1;c[d]=c[a];k[d]=k[a];c[d+1]=c[a+1];k[d+1]=k[a+1];c[d+2]=c[a+2];k[d+2]=k[a+2];c[d+3]=c[a+3];k[d+3]=k[a+3];d=f+5;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];b=f}vy.X=1;function mgb(a,d,e){var f=b;b+=12;var g,h,i,j,l=f+1,m=f+2,n=f+3,p=f+4,r=f+5,s=f+6,t=f+7,w;i=f+8;var x,y,z;c[d+5]=v[c[c[a]+7]](a);c[d]=0;if(0!=(c[d+5]|0)){g=v[c[c[e]+4]](e,32,c[d+5]);h=c[g+2];c[d]=v[c[c[e]+7]](e,h);j=v[c[c[a]+7]](a);var A=a+1;c[i]=c[A];k[i]=k[A];c[i+1]=c[A+1];k[i+1]=k[A+1];c[i+2]=c[A+2];k[i+2]=k[A+2];c[i+3]=c[A+3];k[i+3]=k[A+3];i=0;A=(i|0)<(j|0);a:do{if(A){for(var C=a,B=a;;){v[c[c[C]+4]](a,f,s,n,r,l,m,t,p,i);c[h+6]=c[t];c[h+7]=c[s];c[h+5]=0;c[h+2]=0;c[h+3]=0;c[h]=0;c[h+1]=0;var K=c[p];do{if(2==(K|0)){if(w=3*c[t],0!=(w|0)){x=e;x=v[c[c[x]+4]](x,4,w);y=c[x+2];w=e;c[h+2]=v[c[c[w]+7]](w,y);w=0;var E=(w|0)<(c[t]|0);b:do{if(E){for(;;){if(z=c[l]+c[m]*w,c[y+3*w]=c[z],c[y+3*w+1]=c[z+1],c[y+3*w+2]=c[z+2],w+=1,(w|0)>=(c[t]|0)){break b}}}}while(0);w=e;v[c[c[w]+5]](w,x,D.Te,1497453121,c[x+2])}}else{if(3==(K|0)){if(0!=(c[t]|0)){w=e;x=v[c[c[w]+4]](w,8,c[t]);y=c[x+2];w=e;c[h+3]=v[c[c[w]+7]](w,y);w=0;E=(w|0)<(c[t]|0);b:do{if(E){for(;;){if(z=c[l]+c[m]*w,c[y+5*w]=c[z],c[y+5*w+1]=c[z+1],c[y+5*w+2]=c[z+2],w+=1,(w|0)>=(c[t]|0)){break b}}}}while(0);w=e;v[c[c[w]+5]](w,x,D.je,1497453121,c[x+2])}}else{if(5==(K|0)&&0!=(c[t]|0)){w=e;x=v[c[c[w]+4]](w,4,c[t]);y=c[x+2];w=e;c[h+4]=v[c[c[w]+7]](w,y);w=0;E=(w|0)<(c[t]|0);b:do{if(E){for(;;){if(z=c[l]+c[m]*w,c[(w<<2)+y]=c[z],c[(w<<2)+y+1]=c[z+1],c[(w<<2)+y+2]=c[z+2],w+=1,(w|0)>=(c[t]|0)){break b}}}}while(0);w=e;v[c[c[w]+5]](w,x,D.Ce,1497453121,c[x+2])}}}}while(0);K=c[n];do{if(0==(K|0)){if(0!=(c[s]|0)){w=e;w=v[c[c[w]+4]](w,16,c[s]);x=c[w+2];y=e;c[h]=v[c[c[y]+7]](y,x);z=0;E=(z|0)<(c[s]|0);b:do{if(E){for(;;){if(y=c[f]+c[r]*z,k[(z<<2)+x]=k[y],k[(z<<2)+x+1]=k[y+1],k[(z<<2)+x+2]=k[y+2],z+=1,(z|0)>=(c[s]|0)){break b}}}}while(0);x=e;v[c[c[x]+5]](x,w,D.q,1497453121,c[w+2])}}else{if(1==(K|0)&&0!=(c[s]|0)){w=e;w=v[c[c[w]+4]](w,32,c[s]);x=c[w+2];y=e;c[h+1]=v[c[c[y]+7]](y,x);y=0;E=(y|0)<(c[s]|0);b:do{if(E){for(;;){if(z=c[f]+c[r]*y,k[(y<<2)+x]=k[z],k[(y<<2)+x+1]=k[z+1],k[(y<<2)+x+2]=k[z+2],y+=1,(y|0)>=(c[s]|0)){break b}}}}while(0);x=e;v[c[c[x]+5]](x,w,D.We,1497453121,c[w+2])}}}while(0);v[c[c[B]+6]](a,i);i+=1;h+=8;if((i|0)>=(j|0)){break a}}}}while(0);v[c[c[e]+5]](e,g,D.df,1497453121,c[g+2])}mc(a+1,d+1);b=f;return D.kf}mgb.X=1;function ngb(){}ngb.X=1;function lgb(a){var d=b;b+=6;var e=d+1,f=d+2,g=d+3,h=d+4,i=d+5;FY(a);c[a]=ogb+2;k[d]=0xde0b6b000000000;k[e]=0xde0b6b000000000;k[f]=0xde0b6b000000000;pe(a+1,d,e,f);k[g]=-0xde0b6b000000000;k[h]=-0xde0b6b000000000;k[i]=-0xde0b6b000000000;pe(a+5,g,h,i);b=d}lgb.X=1;function pgb(a){xe(a)}pgb.X=1;function qgb(a,d,e,f){$3=e;$4=f;hp(a+1,d);gp(a+5,d);hp(a+1,d+4);gp(a+5,d+4);hp(a+1,d+8);gp(a+5,d+8)}qgb.X=1;function hY(a,d,e,f){bZ(a);c[a]=rgb+2;c[a+1]=f;c[a+2]=d;c[a+3]=e}hY.X=1;function sgb(a){return c[a+23]}sgb.X=1;function tgb(a){a=c[a+23];return 0==(a|0)?0:1==(a|0)?0:2==(a|0)?1:3==(a|0)?3:4==(a|0)?6:0}tgb.X=1;function iY(a,d,e,f,g,h){var i=b;b+=162;var j,l=i+4,m=i+8,n=i+12,p=i+16,r=i+32,s=i+48,t=i+52,w=i+56,x=i+60,y=i+64,z=i+68,A=i+72,C=i+76,B=i+80,K=i+84,E=i+88,G=i+92,M=i+93,L=i+94,F=i+99,I=i+107,R=i+111,O=i+115,Z=i+119,P=i+123,S=i+127,da=i+131,V=i+135,ba=i+139,$=i+143,Y=i+147,la=i+151,ka=i+152,ja=i+153,ea=i+154,ca=i+158;fZ(c[a+1]);N(m,e+12,d+12);c[i]=c[m];k[i]=k[m];c[i+1]=c[m+1];k[i+1]=k[m+1];c[i+2]=c[m+2];k[i+2]=k[m+2];c[i+3]=c[m+3];k[i+3]=k[m+3];N(n,g+12,f+12);c[l]=c[n];k[l]=k[n];c[l+1]=c[n+1];k[l+1]=k[n+1];c[l+2]=c[n+2];k[l+2]=k[n+2];c[l+3]=c[n+3];k[l+3]=k[n+3];m=0;sQ(p,d);sQ(r,f);N(s,i,l);l=c[a+2];n=c[c[l]+15];WP(z,s);rn(y,z,d);v[n](x,l,y);vw(w,d,x);x=c[a+3];y=c[c[x]+15];rn(B,s,f);v[y](C,x,B);vw(A,f,C);N(K,w,A);c[t]=c[K];k[t]=k[K];c[t+1]=c[K+1];k[t+1]=k[K+1];c[t+2]=c[K+2];k[t+2]=k[K+2];c[t+3]=c[K+3];k[t+3]=k[K+3];C=32;k[G]=0;k[M]=0;k[L]=0;pe(E,G,M,L);$hasResult=0;$lastLambda=m;x=Um(t);G=a+2;M=a+3;L=a+1;B=a+1;K=a+1;a:for(;;){x=9999999747378752e-20<x;do{if(x&&(y=C,C=y-1,0!=(y|0))){x=c[G];y=c[c[x]+15];WP(Z,t);rn(O,Z,p);v[y](R,x,O);vw(I,p,R);c[w]=c[I];k[w]=k[I];c[w+1]=c[I+1];k[w+1]=k[I+1];c[w+2]=c[I+2];k[w+2]=k[I+2];c[w+3]=c[I+3];k[w+3]=k[I+3];x=c[M];y=c[c[x]+15];rn(da,t,r);v[y](S,x,da);vw(P,r,S);c[A]=c[P];k[A]=k[P];c[A+1]=c[P+1];k[A+1]=k[P+1];c[A+2]=c[P+2];k[A+2]=k[P+2];c[A+3]=c[P+3];k[A+3]=k[P+3];N(V,w,A);c[F]=c[V];k[F]=k[V];c[F+1]=c[V+1];k[F+1]=k[V+1];c[F+2]=c[V+2];k[F+2]=k[V+2];c[F+3]=c[V+3];k[F+3]=k[V+3];y=J(t,F);if(1<m){j=0;break a}if(0<y){x=J(t,s);if(-1.4210854715202004e-14<=x){j=0;break a}m-=y/x;yB(p+12,d+12,e+12,m);yB(r+12,f+12,g+12,m);N(ba,w,A);c[F]=c[ba];k[F]=k[ba];c[F+1]=c[ba+1];k[F+1]=k[ba+1];c[F+2]=c[ba+2];k[F+2]=k[ba+2];c[F+3]=c[ba+3];k[F+3]=k[ba+3];$lastLambda=m;c[E]=c[t];k[E]=k[t];c[E+1]=c[t+1];k[E+1]=k[t+1];c[E+2]=c[t+2];k[E+2]=k[t+2];c[E+3]=c[t+3];k[E+3]=k[t+3];$hasResult=1}q9a(c[L],F)||r9a(c[K],F,w,A);if(s9a(c[B],t)){x=Um(t);$hasResult=1;continue a}x=0;continue a}}while(0);k[h+41]=m;d=h+33;1.4210854715202004e-14<=Um(E)?(uC($,E),Y=d,c[Y]=c[$],k[Y]=k[$],c[Y+1]=c[$+1],k[Y+1]=k[$+1],c[Y+2]=c[$+2],k[Y+2]=k[$+2],c[Y+3]=c[$+3],k[Y+3]=k[$+3]):(k[la]=0,k[ka]=0,k[ja]=0,H(Y,la,ka,ja),$=d,c[$]=c[Y],k[$]=k[Y],c[$+1]=c[Y+1],k[$+1]=k[Y+1],c[$+2]=c[Y+2],k[$+2]=k[Y+2],c[$+3]=c[Y+3],k[$+3]=k[Y+3]);if(J(h+33,s)>=-k[h+43]){j=0;break}t9a(c[a+1],ea,ca);a=h+37;c[a]=c[ca];k[a]=k[ca];c[a+1]=c[ca+1];k[a+1]=k[ca+1];c[a+2]=c[ca+2];k[a+2]=k[ca+2];c[a+3]=c[ca+3];k[a+3]=k[ca+3];j=1;break}b=i;return j}iY.X=1;function ugb(a){xe(a)}ugb.X=1;function J5a(a){vZ(a);c[a]=L1+2;c[a+23]=0;c[a+1]=2}J5a.X=1;function M1(a,d){var e=a+23,f=c[e];c[e]=f+1;e=(f<<2)+a+24;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];bh(a)}M1.X=1;function vgb(a,d,e,f){udb(a,d,e,f)}vgb.X=1;function wgb(a,d,e,f){var g=c[a+23];2==(g|0)?(d=a+24,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=28,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):3==(g|0)?0==(d|0)?(d=a+24,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=28,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):1==(d|0)?(d=a+28,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=32,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):2==(d|0)&&(d=a+32,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=24,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):4==(g|0)&&(0==(d|0)?(d=a+24,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=28,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):1==(d|0)?(d=a+28,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=32,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):2==(d|0)?(d=a+32,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=24,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):3==(d|0)?(d=a+24,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=36,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):4==(d|0)?(d=a+28,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=36,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]):5==(d|0)&&(d=a+32,c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],a+=36,c[f]=c[a],k[f]=k[a],c[f+1]=c[a+1],k[f+1]=k[a+1],c[f+2]=c[a+2],k[f+2]=k[a+2],c[f+3]=c[a+3],k[f+3]=k[a+3]))}wgb.X=1;function xgb(a,d,e){a=(d<<2)+a+24;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}xgb.X=1;function ygb(a,d){vZ(a);c[a]=L1+2;c[a+23]=0;c[a+1]=2;M1(a,d)}ygb.X=1;function zgb(a,d,e){vZ(a);c[a]=L1+2;c[a+23]=0;c[a+1]=2;M1(a,d);M1(a,e)}zgb.X=1;function Agb(a,d,e,f){vZ(a);c[a]=L1+2;c[a+23]=0;c[a+1]=2;M1(a,d);M1(a,e);M1(a,f)}Agb.X=1;function Bgb(a,d,e,f,g){vZ(a);c[a]=L1+2;c[a+23]=0;c[a+1]=2;M1(a,d);M1(a,e);M1(a,f);M1(a,g)}Bgb.X=1;function Cgb(){}Cgb.X=1;function Dgb(){return 0}Dgb.X=1;function Egb(){return 0}Egb.X=1;function Fgb(){}Fgb.X=1;function Ggb(){}Ggb.X=1;function Hgb(a,d){$1=a;return 0!=(d|0)?d<<1:1}Hgb.X=1;function Igb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Igb.X=1;function Jgb(a){a=c[a+23];return 0==(a|0)?0:1==(a|0)?0:2==(a|0)?0:3==(a|0)?2:4==(a|0)?4:0}Jgb.X=1;function N1(a){return c[a+1]}N1.X=1;function Kgb(a){return c[a+2]}Kgb.X=1;function Lgb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Lgb.X=1;function Mgb(a,d){return(d<<3)+c[a+3]}Mgb.X=1;function Ngb(a){return 1==(c[a+12]|0)}Ngb.X=1;function Ogb(a){EX(a)}Ogb.X=1;function Pgb(a,d,e,f){var g=b;b+=14;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];var h=g+4,i=d+4;c[h]=c[i];k[h]=k[i];c[h+1]=c[i+1];k[h+1]=k[i+1];c[h+2]=c[i+2];k[h+2]=k[i+2];c[h+3]=c[i+3];k[h+3]=k[i+3];h=g+8;d+=8;c[h]=c[d];k[h]=k[d];c[h+1]=c[d+1];k[h+1]=k[d+1];c[h+2]=c[d+2];k[h+2]=k[d+2];c[h+3]=c[d+3];k[h+3]=k[d+3];c[g+12]=e;c[g+13]=f;Qgb(a+1,g);b=g}Pgb.X=1;function Qgb(a,d){(N1(a)|0)==(Kgb(a)|0)&&Rgb(a,Hgb(a,N1(a)));var e=c[a+3]+14*c[a+1];if(0!=(e|0)){for(var f=d,g=f+14;f<g;f++,e++){c[e]=c[f],k[e]=k[f]}}f=a+1;c[f]+=1}Qgb.X=1;function Sgb(a){Tgb(a)}Sgb.X=1;function Ugb(a){Tgb(a);xe(a)}Ugb.X=1;function Rgb(a,d){var e;(Kgb(a)|0)<(d|0)&&(e=Vgb(a,d),Wgb(a,0,N1(a),e),Igb(a,0,N1(a)),Xgb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Rgb.X=1;function Vgb(a,d){return 0!=(d|0)?Ygb(a,d,0):0}Vgb.X=1;function Wgb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+14*d;if(0!=(i|0)){for(var j=c[h]+14*d,l=j+14;j<l;j++,i++){c[i]=c[j],k[i]=k[j]}}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Wgb.X=1;function Xgb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Zgb(a,c[a+3]),c[a+3]=0)}Xgb.X=1;function Zgb(a,d){$1=a;yh(d)}Zgb.X=1;function Ygb(a,d,e){$1=a;$3=e;return Ue(56*d,16)}Ygb.X=1;function Tgb(a){c[a]=$gb+2;ahb(a+1)}Tgb.X=1;function ahb(a){Igb(a,0,N1(a));Xgb(a);Lgb(a)}ahb.X=1;function bhb(a){xe(a)}bhb.X=1;function chb(a){xe(a)}chb.X=1;function O1(a){c[a]=AW+2;fLa(a+5)}O1.X=1;function dhb(a,d,e,f,g,h,i,j,l,m){a=By(a+5,m);c[e]=c[a+3];c[d]=c[a+4];c[f]=c[a+7];c[g]=c[a+5];c[j]=c[a];c[h]=c[a+1];c[i]=c[a+2];c[l]=c[a+6]}dhb.X=1;function ehb(a,d,e,f,g,h,i,j,l,m){a=Mgb(a+5,m);c[e]=c[a+3];c[d]=c[a+4];c[f]=c[a+7];c[g]=c[a+5];c[j]=c[a];c[h]=c[a+1];c[i]=c[a+2];c[l]=c[a+6]}ehb.X=1;function fhb(a,d,e){var f=a+13;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];d=a+17;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];c[a+12]=1}fhb.X=1;function ghb(a){EX(a);yh(a)}ghb.X=1;function mV(a,d,e,f,g,h,i){var j=b;b+=8;dLa(a);c[a]=AW+2;zW(a+5);c[a+12]=0;Ah(j);c[j]=d;c[j+1]=e;c[j+2]=f;c[j+3]=g;c[j+4]=h;c[j+5]=i;zy(a,j,2);b=j}mV.X=1;function hhb(a){O1(a);yh(a)}hhb.X=1;function ihb(){}ihb.X=1;function jhb(){}jhb.X=1;function khb(){}khb.X=1;function lhb(){}lhb.X=1;function mhb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}mhb.X=1;function nhb(a,d){$1=a;return 0!=(d|0)?d<<1:1}nhb.X=1;function P1(a,d){return(d<<3)+c[a+3]}P1.X=1;function Q1(a){return c[a+1]}Q1.X=1;function ohb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}ohb.X=1;function phb(a){return c[a+2]}phb.X=1;function qhb(a,d,e){var f=a+13;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];a+=17;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}qhb.X=1;function rhb(a){return Cy(a+5)}rhb.X=1;function shb(a,d,e){thb(a+21,d);c[P1(a+21,Q1(a+21)-1)+7]=e}shb.X=1;function uhb(a,d,e,f,g,h,i,j,l,m){a=P1(a+21,m);c[e]=c[a];c[d]=c[a+1];c[f]=0;c[g]=c[a+2];c[i]=c[a+4];c[h]=c[a+5];c[j]=c[a+6];c[l]=c[a+7]}uhb.X=1;function vhb(a,d,e,f,g,h,i,j,l,m){a=P1(a+21,m);c[e]=c[a];c[d]=c[a+1];c[f]=0;c[g]=c[a+2];c[i]=c[a+4];c[h]=c[a+5];c[j]=c[a+6];c[l]=c[a+7]}vhb.X=1;function whb(a){xhb(a)}whb.X=1;function yhb(a){mhb(a,0,Q1(a));zhb(a);ohb(a)}yhb.X=1;function zhb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Ahb(a,c[a+3]),c[a+3]=0)}zhb.X=1;function Ahb(a,d){$1=a;yh(d)}Ahb.X=1;function thb(a,d){(Q1(a)|0)==(phb(a)|0)&&Bhb(a,nhb(a,Q1(a)));var e=(c[a+1]<<3)+c[a+3];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2],c[e+3]=c[d+3],k[e+3]=k[d+3],c[e+4]=c[d+4],k[e+4]=k[d+4],c[e+5]=c[d+5],k[e+5]=k[d+5],c[e+6]=c[d+6],k[e+6]=k[d+6],c[e+7]=c[d+7],k[e+7]=k[d+7]);e=a+1;c[e]+=1}thb.X=1;function Bhb(a,d){var e;(phb(a)|0)<(d|0)&&(e=Chb(a,d),Dhb(a,0,Q1(a),e),mhb(a,0,Q1(a)),zhb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Bhb.X=1;function Chb(a,d){return 0!=(d|0)?Ehb(a,d,0):0}Chb.X=1;function Dhb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<3)+f;if(0!=(i|0)){var j=(d<<3)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];c[i+4]=c[j+4];k[i+4]=k[j+4];c[i+5]=c[j+5];k[i+5]=k[j+5];c[i+6]=c[j+6];k[i+6]=k[j+6];c[i+7]=c[j+7];k[i+7]=k[j+7]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Dhb.X=1;function Ehb(a,d,e){$1=a;$3=e;return Ue(d<<5,16)}Ehb.X=1;function Fhb(a,d,e,f,g,h,i,j,l,m,n,p){var r=b;b+=8;mV(a,d,e,f,g,h,i);c[a]=R1+2;ohb(a+21);c[r]=j;c[r+1]=l;c[r+2]=m;c[r+3]=0;c[r+4]=d;c[r+5]=n;c[r+6]=p;c[r+7]=2;shb(a,r,2);b=r}Fhb.X=1;function Ghb(a){xhb(a);yh(a)}Ghb.X=1;function xhb(a){c[a]=R1+2;yhb(a+21);O1(a)}xhb.X=1;function Hhb(){}Hhb.X=1;function Ihb(){}Ihb.X=1;function Jhb(a,d){$1=a;return 0!=(d|0)?d<<1:1}Jhb.X=1;function Khb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Khb.X=1;function S1(a){return c[a+1]}S1.X=1;function Lhb(a,d){return c[a+3]+d}Lhb.X=1;function Mhb(a){return c[a+2]}Mhb.X=1;function Nhb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Nhb.X=1;function ty(a,d){var e=b;b+=2;var f=e+1;c[a+41]&1?(c[e]=d,Ohb(a+31,e),c[By(a+5,0)+1]=yeb(a+31,0)):(c[f]=d&65535,Phb(a+36,f),c[By(a+5,0)+1]=Lhb(a+36,0));b=e}ty.X=1;function Ohb(a,d){(x1(a)|0)==(Eeb(a)|0)&&Geb(a,Qhb(a,x1(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}Ohb.X=1;function Phb(a,d){(S1(a)|0)==(Mhb(a)|0)&&Rhb(a,Jhb(a,S1(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}Phb.X=1;function xy(a,d,e){var f=b;b+=15;var g,h=f+4,i=f+8,j=f+12,l=f+13,m=f+14,n=c[a+42]&1,e=e&1;a:do{if(n){b:do{if(e){g=0;for(var p=a+21,r=a+21,s=a+43;;){if((g|0)>=(th(p)|0)){break b}N(f,xg(r,g),d);var t=g;if(Um(f)<=k[s]){break}g=t+1}g=t;break a}}while(0);g=By(a+5,0)+3;c[g]+=1;PW(a+21,d);c[By(a+5,0)+4]=xg(a+21,0);g=th(a+21)-1}else{b:do{if(e){g=0;for(var p=a+26,r=a+26,s=a+26,w=a+26,x=a+43;;){if((g|0)>=(MW(p)|0)){break b}H(h,y0(r,g),y0(s,g+1),y0(w,g+2));N(i,h,d);var y=g;if(Um(i)<=k[x]){break}g=y+3}g=(y|0)/3&-1;break a}}while(0);k[j]=k[d];QW(a+26,j);k[l]=k[d+1];QW(a+26,l);k[m]=k[d+2];QW(a+26,m);g=By(a+5,0)+3;c[g]+=1;c[By(a+5,0)+4]=y0(a+26,0);g=((MW(a+26)|0)/3&-1)-1}}while(0);b=f;return g}xy.X=1;function uz(a,d,e,f,g){var g=g&1,h=By(a+5,0);c[h]+=1;ty(a,xy(a,d,g&1));ty(a,xy(a,e,g&1));ty(a,xy(a,f,g&1))}uz.X=1;function oz(a){return c[a+41]&1?(x1(a+31)|0)/3&-1:(S1(a+36)|0)/3&-1}oz.X=1;function Shb(a){Thb(a)}Shb.X=1;function Rhb(a,d){var e;(Mhb(a)|0)<(d|0)&&(e=Uhb(a,d),Nhb(a,0,S1(a),e),Khb(a,0,S1(a)),Vhb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Rhb.X=1;function Uhb(a,d){return 0!=(d|0)?Whb(a,d,0):0}Uhb.X=1;function Ky(a,d,e){var f=b;b+=8;d&=1;e&=1;mBa(a);c[a]=T1+2;KW(a+21);LW(a+26);y1(a+31);Xhb(a+36);c[a+41]=d&1;c[a+42]=e&1;k[a+43]=0;Ah(f);c[f]=0;c[f+3]=0;c[f+6]=2;c[f+1]=0;c[f+2]=12;c[f+4]=0;c[f+5]=16;Ay(a+5,f);c[a+41]&1?(c[By(a+5,0)]=(x1(a+31)|0)/3&-1,c[By(a+5,0)+1]=0,c[By(a+5,0)+6]=2,c[By(a+5,0)+2]=12):(c[By(a+5,0)]=(S1(a+36)|0)/3&-1,c[By(a+5,0)+1]=0,c[By(a+5,0)+6]=3,c[By(a+5,0)+2]=6);c[a+42]&1?(c[By(a+5,0)+3]=th(a+21),c[By(a+5,0)+4]=0,c[By(a+5,0)+5]=16):(c[By(a+5,0)+3]=(MW(a+26)|0)/3&-1,c[By(a+5,0)+4]=0,c[By(a+5,0)+5]=12);b=f}Ky.X=1;function Yhb(a){Thb(a);yh(a)}Yhb.X=1;function Thb(a){c[a]=T1+2;Zhb(a+36);w1(a+31);SW(a+26);UW(a+21);O1(a)}Thb.X=1;function $hb(){return D.Ze}$hb.X=1;function Qhb(a,d){$1=a;return 0!=(d|0)?d<<1:1}Qhb.X=1;function Xhb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Xhb.X=1;function Vhb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&aib(a,c[a+3]),c[a+3]=0)}Vhb.X=1;function aib(a,d){$1=a;yh(d)}aib.X=1;function Whb(a,d,e){$1=a;$3=e;return Ue(d<<1,16)}Whb.X=1;function Zhb(a){Khb(a,0,S1(a));Vhb(a);Xhb(a)}Zhb.X=1;function NX(a,d){cZ(a);c[a]=bib+2;c[a+12]=d;c[a+1]=21;if(v[c[c[d]+10]](d)){v[c[c[d]+12]](d,a+4,a+8)}else{jR(a)}}NX.X=1;function jR(a){var d=b;b+=15;var e,f=d+4,g=d+5,h=d+6,i=d+7,j=d+11;e=0;for(var l=a+3,m=a+8,n=a+3,p=a+4;;){k[f]=0;k[g]=0;k[h]=0;H(d,f,g,h);k[d+e]=1;v[c[c[a]+16]](i,a,d);k[m+e]=k[i+e]+k[l];k[d+e]=-1;v[c[c[a]+16]](j,a,d);c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];k[p+e]=k[i+e]-k[n];var r=e+1;e=r;if(3<=(r|0)){break}}b=d}jR.X=1;function cib(a){xe(a)}cib.X=1;function dib(){}dib.X=1;function eib(a,d,e,f){var g=b;b+=56;var h=g+4,i=g+5,j=g+9,l=g+13,m=g+14,n=g+15,p=g+16,r=g+20,s=g+21,t=g+25,w=g+37,x=g+41,y=g+45,z=g+46,A=g+47,C=g+48,B=g+52;k[h]=.5;N(i,a+8,a+4);Q(g,i,h);k[l]=v[c[c[a]+11]](a);k[m]=v[c[c[a]+11]](a);k[n]=v[c[c[a]+11]](a);H(j,l,m,n);xn(g,j);k[r]=.5;wn(s,a+8,a+4);Q(p,s,r);qc(t,d);vw(w,d,p);k[y]=J(0+t,g);k[z]=J(4+t,g);k[A]=J(8+t,g);H(x,y,z,A);N(C,w,x);c[e]=c[C];k[e]=k[C];c[e+1]=c[C+1];k[e+1]=k[C+1];c[e+2]=c[C+2];k[e+2]=k[C+2];c[e+3]=c[C+3];k[e+3]=k[C+3];wn(B,w,x);c[f]=c[B];k[f]=k[B];c[f+1]=c[B+1];k[f+1]=k[B+1];c[f+2]=c[B+2];k[f+2]=k[B+2];c[f+3]=c[B+3];k[f+3]=k[B+3];b=g}eib.X=1;function QX(a,d){Iy(c[a+12],d);jR(a)}QX.X=1;function fib(a){return c[a+12]+1}fib.X=1;function gib(a,d,e,f){var g=b;b+=10;hib(g,d,e,f);a=c[a+12];v[c[c[a]+2]](a,g,e,f);b=g}gib.X=1;function iib(a,d,e){var f=b;b+=3;var g=f+1,h=f+2;$1=a;$2=d;k[f]=0;k[g]=0;k[h]=0;pe(e,f,g,h);b=f}iib.X=1;function jib(a,d,e){var f=b;b+=57;var g=f+16,h=f+42,i=f+46,j=f+47,l=f+48,m=f+49,n=f+53;eQ(f);kib(g,e,f);k[i]=0xde0b6b000000000;k[j]=0xde0b6b000000000;k[l]=0xde0b6b000000000;H(h,i,j,l);e=c[c[d]+15];WP(m,h);v[e](d,g,m,h);lib(n,g);c[a]=c[n];k[a]=k[n];c[a+1]=c[n+1];k[a+1]=k[n+1];c[a+2]=c[n+2];k[a+2]=k[n+2];c[a+3]=c[n+3];k[a+3]=k[n+3];$10=1;b=f}jib.X=1;function lib(a,d){var e=d+1;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}lib.X=1;function mib(){}mib.X=1;function kib(a,d,e){var f=b;b+=7;var g=f+1,h=f+2,i=f+3;EY(a);c[a]=nib+2;k[f]=0;k[g]=0;k[h]=0;H(a+1,f,g,h);sQ(a+5,e);k[a+21]=-0xde0b6b000000000;rn(i,d,a+5);a+=22;c[a]=c[i];k[a]=k[i];c[a+1]=c[i+1];k[a+1]=k[i+1];c[a+2]=c[i+2];k[a+2]=k[i+2];c[a+3]=c[i+3];k[a+3]=k[i+3];b=f}kib.X=1;function oib(a){xe(a)}oib.X=1;function pib(a,d,e,f){var g;$3=e;$4=f;for(var e=0,f=a+22,h=a+21,i=a+21,a=a+1;!(g=J(f,(e<<2)+d),g>k[h]&&(k[i]=g,g=(e<<2)+d,c[a]=c[g],k[a]=k[g],c[a+1]=c[g+1],k[a+1]=k[g+1],c[a+2]=c[g+2],k[a+2]=k[g+2],c[a+3]=c[g+3],k[a+3]=k[g+3]),e=g=e+1,3<=(g|0));){}}pib.X=1;function qib(){}qib.X=1;function hib(a,d,e,f){FY(a);c[a]=rib+2;c[a+1]=d;d=a+2;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];a+=6;c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3]}hib.X=1;function sib(a){xe(a)}sib.X=1;function tib(a,d,e,f){uib(d,a+2,a+6)&&(a=c[a+1],v[c[c[a]+2]](a,d,e,f))}tib.X=1;function uib(a,d,e){var f,g;f=a+4;g=a+8;return k[WX(WX(a,f),g)]>k[e]?0:k[d0(d0(a,f),g)]<k[d]?0:k[WX(WX(a+2,f+2),g+2)]>k[e+2]?0:k[d0(d0(a+2,f+2),g+2)]<k[d+2]?0:k[WX(WX(a+1,f+1),g+1)]>k[e+1]?0:k[d0(d0(a+1,f+1),g+1)]<k[d+1]?0:1}uib.X=1;function vib(a,d,e,f,g){var h=b;b+=16;var i,j;c[a+1]=0;k[a]=-1e3;i=0;var l=(i|0)<(g|0);a:do{if(l){for(var m=a,n=a,p=h,r=a+1,s=a,t=a+1,w=a+1;;){var x=-U1(d,(i<<2)+f)+e;j=x;0<=x&&(x=j,j>k[m]?(k[n]=x,c[p]=i,c[r]=1):x+1.1920928955078125e-7>=k[s]&&(c[h+c[t]]=i,c[w]+=1));i+=1;if((i|0)>=(g|0)){break a}}}}while(0);i=0;d=a+1;e=(i|0)<(c[d]|0);a:do{if(e){for(g=a+6;;){if(j=(i<<2)+g,l=(c[h+i]<<2)+f,c[j]=c[l],k[j]=k[l],c[j+1]=c[l+1],k[j+1]=k[l+1],c[j+2]=c[l+2],k[j+2]=k[l+2],c[j+3]=c[l+3],k[j+3]=k[l+3],i+=1,(i|0)>=(c[d]|0)){break a}}}}while(0);b=h}vib.X=1;function U1(a,d){return J(d,a)-k[a+3]}U1.X=1;function K4a(a,d){var e,f,g,h,i,j;g=k[a+16]+k[d+16];h=U1(a+12,d)-g;i=U1(a+12,d+4)-g;j=U1(a+12,d+8)-g;0<h?0<i?0<j?(f=0,e=11):e=6:e=6:e=6;a:do{if(6==e){h=U1(d+12,a)-g;i=U1(d+12,a+4)-g;j=U1(d+12,a+8)-g;f=0<h;do{if(f&&0<i&&0<j){f=0;break a}}while(0);f=1}}while(0);return f}K4a.X=1;function wib(a,d,e){var f=b;b+=132;var g=f+64,h=f+68;V1(a,0,g);d=xib(g,d,d+4,d+8,f);0==(d|0)?a=0:(V1(a,1,g),d=yib(g,f,d,h),0==(d|0)?a=0:(V1(a,2,g),a=d=yib(g,h,d,e)));b=f;return a}wib.X=1;function V1(a,d,e){zib((d<<2)+a,((d+1)%3<<2)+a,a+12,e)}V1.X=1;function xib(a,d,e,f,g){var h=b;b+=1;var i,j,l;c[h]=0;i=U1(a,d);1.1920928955078125e-7<i||(j=(c[h]<<2)+g,c[j]=c[d],k[j]=k[d],c[j+1]=c[d+1],k[j+1]=k[d+1],c[j+2]=c[d+2],k[j+2]=k[d+2],c[j+3]=c[d+3],k[j+3]=k[d+3],c[h]+=1);l=U1(a,e);W1(d,e,i,l,g,h);j=l;l=U1(a,f);W1(e,f,j,l,g,h);W1(f,d,l,i,g,h);a=c[h];b=h;return a}xib.X=1;function yib(a,d,e,f){var g=b;b+=1;var h,i,j,l;c[g]=0;h=U1(a,d);1.1920928955078125e-7<h||(i=(c[g]<<2)+f,c[i]=c[d],k[i]=k[d],c[i+1]=c[d+1],k[i+1]=k[d+1],c[i+2]=c[d+2],k[i+2]=k[d+2],c[i+3]=c[d+3],k[i+3]=k[d+3],c[g]+=1);i=h;j=1;var m=(j|0)<(e|0);a:do{if(m){for(;;){if(l=U1(a,(j<<2)+d),W1((j-1<<2)+d,(j<<2)+d,i,l,f,g),i=l,j+=1,(j|0)>=(e|0)){break a}}}}while(0);W1((e-1<<2)+d,d,i,h,f,g);a=c[g];b=g;return a}yib.X=1;function L4a(a,d,e){var f=b;b+=205;var g,h,i=f+64,j=f+134,l=f+135;g=k[a+16]+k[d+16];h=i+2;var m=a+12;c[h]=c[m];k[h]=k[m];c[h+1]=c[m+1];k[h+1]=k[m+1];c[h+2]=c[m+2];k[h+2]=k[m+2];c[h+3]=c[m+3];k[h+3]=k[m+3];h=wib(a,d,f);0==(h|0)?a=0:(vib(i,i+2,g,f,h),0==(c[i+1]|0)?a=0:(k[j]=-1,LC(i+2,j),j=l+2,h=d+12,c[j]=c[h],k[j]=k[h],c[j+1]=c[h+1],k[j+1]=k[h+1],c[j+2]=c[h+2],k[j+2]=k[h+2],c[j+3]=c[h+3],k[j+3]=k[h+3],h=wib(d,a,f),0==(h|0)?a=0:(vib(l,l+2,g,f,h),0==(c[l+1]|0)?a=0:(k[l]<k[i]?Aib(e,l):Aib(e,i),a=1))));b=f;return a}L4a.X=1;function Aib(a,d){var e;k[a]=k[d];e=a+2;var f=d+2;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];c[a+1]=c[d+1];f=c[a+1];e=f-1;f=0!=(f|0);a:do{if(f){for(var g=a+6;;){var h=(e<<2)+g,i=(e<<2)+d+6;c[h]=c[i];k[h]=k[i];c[h+1]=c[i+1];k[h+1]=k[i+1];c[h+2]=c[i+2];k[h+2]=k[i+2];c[h+3]=c[i+3];k[h+3]=k[i+3];h=e;e=h-1;if(0==(h|0)){break a}}}}while(0)}Aib.X=1;function Bib(){return D.af}Bib.X=1;function W1(a,d,e,f,g,h){var i;i=1.1920928955078125e-7<f&1;(i&1|0)!=(1.1920928955078125e-7<e&1|0)&&(Cib((c[h]<<2)+g,a,d,-e/(f-e)),c[h]+=1);i&1||(a=(c[h]<<2)+g,c[a]=c[d],k[a]=k[d],c[a+1]=c[d+1],k[a+1]=k[d+1],c[a+2]=c[d+2],k[a+2]=k[d+2],c[a+3]=c[d+3],k[a+3]=k[d+3],c[h]+=1)}W1.X=1;function Cib(a,d,e,f){var g=b;b+=14;var h=g+1,i=g+5,j=g+9,l=g+10;k[g]=f;k[j]=1-k[g];Q(i,d,j);Q(l,e,g);wn(h,i,l);c[a]=c[h];k[a]=k[h];c[a+1]=c[h+1];k[a+1]=k[h+1];c[a+2]=c[h+2];k[a+2]=k[h+2];c[a+3]=c[h+3];k[a+3]=k[h+3];b=g}Cib.X=1;function zib(a,d,e,f){var g=b;b+=9;var h=g+4,i=g+8;N(h,d,a);qn(g,h,e);IB(g);k[i]=J(d,g);$B(f,g,g+1,g+2,i);b=g}zib.X=1;function Dib(a,d,e){nZ(a);c[a]=Eib+2;c[a+3]=d;k[a+4]=e;c[a+1]=14}Dib.X=1;function Fib(a){yh(a)}Fib.X=1;function Gib(){}Gib.X=1;function Hib(a,d,e){var f=b;b+=8;var g=f+4,h=c[d+3];v[c[c[h]+16]](g,h,e);c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];Q(a,f,d+4);b=f}Hib.X=1;function Iib(a,d,e,f){var g=b;b+=4;var h=c[a+3];v[c[c[h]+17]](h,d,e,f);d=0;h=(d|0)<(f|0);a:do{if(h){for(var i=a+4,j=g;;){Q(g,(d<<2)+e,i);var l=(d<<2)+e;c[l]=c[j];k[l]=k[j];c[l+1]=c[j+1];k[l+1]=k[j+1];c[l+2]=c[j+2];k[l+2]=k[j+2];c[l+3]=c[j+3];k[l+3]=k[j+3];d+=1;if((d|0)>=(f|0)){break a}}}}while(0);b=g}Iib.X=1;function Jib(a,d,e){var f=b;b+=8;var g=f+4,h=c[d+3];v[c[c[h]+15]](g,h,e);c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];Q(a,f,d+4);b=f}Jib.X=1;function Kib(a,d,e){var f=b;b+=8;var g=f+4,h=c[a+3];v[c[c[h]+8]](h,d,f);Q(g,f,a+4);c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];b=f}Kib.X=1;function Lib(a,d,e,f){v[c[c[a]+18]](a,d,e,f)}Lib.X=1;function Mib(a,d,e,f){var g=b;b+=125;var h=g+24,i=g+25,j=g+26,l=g+27,m=g+28,n=g+29,p=g+30,r=g+31,s=g+32,t=g+33,w=g+34,x=g+35,y=g+36,z=g+37,A=g+38,C=g+39,B=g+40,K=g+41,E=g+42,G=g+66,M=g+67,L=g+68,F=g+69,I=g+70,R=g+71,O=g+72,Z=g+73,P=g+74,S=g+75,da=g+76,V=g+77,ba=g+78,$=g+79,Y=g+80,la=g+81,ka=g+82,ja=g+83,ea=g+84,ca=g+88,W=g+92,U=g+93,X=g+94,ma=g+95,ga=g+99,ha=g+100,ta=g+101,ra=g+102,ua=g+106,za=g+110,Za=g+114,ib=g+115,Ca=g+116,Sa=g+117,mb=g+121;k[h]=1;k[i]=0;k[j]=0;H(g,h,i,j);h=g+4;k[l]=0;k[m]=1;k[n]=0;H(h,l,m,n);l=h+4;k[p]=0;k[r]=0;k[s]=1;H(l,p,r,s);p=l+4;k[t]=-1;k[w]=0;k[x]=0;H(p,t,w,x);t=p+4;k[y]=0;k[z]=-1;k[A]=0;H(t,y,z,A);k[C]=0;k[B]=0;k[K]=-1;H(t+4,C,B,K);k[G]=0;k[M]=0;k[L]=0;H(E,G,M,L);y=E+4;k[F]=0;k[I]=0;k[R]=0;H(y,F,I,R);F=y+4;k[O]=0;k[Z]=0;k[P]=0;H(F,O,Z,P);O=F+4;k[S]=0;k[da]=0;k[V]=0;H(O,S,da,V);S=O+4;k[ba]=0;k[$]=0;k[Y]=0;H(S,ba,$,Y);k[la]=0;k[ka]=0;k[ja]=0;H(S+4,la,ka,ja);for(ba=0;!(rn(ea,(ba<<2)+g,d),$=(ba<<2)+g,c[$]=c[ea],k[$]=k[ea],c[$+1]=c[ea+1],k[$+1]=k[ea+1],c[$+2]=c[ea+2],k[$+2]=k[ea+2],c[$+3]=c[ea+3],k[$+3]=k[ea+3],ba=$=ba+1,6<=($|0));){}v[c[c[a]+17]](a,g,E,6);k[W]=0;k[U]=0;k[X]=0;H(ca,W,U,X);k[ga]=0;k[ha]=0;k[ta]=0;H(ma,ga,ha,ta);for(ea=0;!(vw(ra,d,(ea<<2)+E),k[ma+ea]=k[ra+ea],vw(ua,d,(ea+3<<2)+E),k[ca+ea]=k[ua+ea],ea=W=ea+1,3<=(W|0));){}k[Za]=v[c[c[a]+11]](a);k[ib]=v[c[c[a]+11]](a);k[Ca]=v[c[c[a]+11]](a);H(za,Za,ib,Ca);N(Sa,ca,za);c[e]=c[Sa];k[e]=k[Sa];c[e+1]=c[Sa+1];k[e+1]=k[Sa+1];c[e+2]=c[Sa+2];k[e+2]=k[Sa+2];c[e+3]=c[Sa+3];k[e+3]=k[Sa+3];wn(mb,ma,za);c[f]=c[mb];k[f]=k[mb];c[f+1]=c[mb+1];k[f+1]=k[mb+1];c[f+2]=c[mb+2];k[f+2]=k[mb+2];c[f+3]=c[mb+3];k[f+3]=k[mb+3];b=g}Mib.X=1;function Nib(a,d){var e=c[a+3];v[c[c[e]+6]](e,d)}Nib.X=1;function Oib(a){a=c[a+3];return v[c[c[a]+7]](a)}Oib.X=1;function Pib(a,d){var e=c[a+3];v[c[c[e]+10]](e,d)}Pib.X=1;function Qib(a){var d=c[a+3];return v[c[c[d]+11]](d)*k[a+4]}Qib.X=1;function Rib(a){a=c[a+3];return v[c[c[a]+19]](a)}Rib.X=1;function Sib(a,d,e){a=c[a+3];v[c[c[a]+20]](a,d,e)}Sib.X=1;function Tib(a){C1(a)}Tib.X=1;function Uib(a,d){var e=b;b+=2;c[e]=0;k[e]=0;c[e+1]=0;k[e+1]=0;Vib(a,d,e);b=e}Uib.X=1;function Vib(a,d,e){var f,g;f=F1(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(F1(a)|0)&&Wib(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=(g<<1)+c[i];if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}Vib.X=1;function Xib(a){Yib(a,0,F1(a));Zib(a);C1(a)}Xib.X=1;function hfb(a,d){var e;Uib(a,d);e=0;var f=(e|0)<(d|0);a:do{if(f){for(var g=a,h=a;;){if(c[E1(g,e)]=e,c[E1(h,e)+1]=1,e+=1,(e|0)>=(d|0)){break a}}}}while(0)}hfb.X=1;function ofb(a){var d,e;d=F1(a);e=0;var f=(e|0)<(d|0);a:do{if(f){for(var g=a;;){var h=D1(a,e);c[E1(g,e)]=h;e+=1;if((e|0)>=(d|0)){break a}}}}while(0);$ib(a)}ofb.X=1;function mfb(a){Xib(a);Xib(a)}mfb.X=1;function Yib(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Yib.X=1;function X1(a,d,e){$1=a;return(c[d]|0)<(c[e]|0)}X1.X=1;function C1(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}C1.X=1;function ajb(a){return c[a+2]}ajb.X=1;function $ib(a){1<(F1(a)|0)&&Y1(a,0,F1(a)-1)}$ib.X=1;function Y1(a,d,e){var f=b;b+=3;var g,h,i=f+1;g=d;h=e;var j=(((e+d|0)/2&-1)<<1)+c[a+3];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];for(var j=a+3,l=a+3;;){if(X1(f,(g<<1)+c[j],i)){g+=1}else{var m=X1(f,i,(h<<1)+c[l]);a:do{if(m){for(;;){if(h-=1,!X1(f,i,(h<<1)+c[l])){break a}}}}while(0);(g|0)<=(h|0)&&(bjb(a,g,h),g+=1,h-=1);if(!((g|0)<=(h|0))){break}}}(d|0)<(h|0)&&Y1(a,d,h);(g|0)<(e|0)&&Y1(a,g,e);b=f}Y1.X=1;function bjb(a,d,e){var f=b;b+=2;var g=(d<<1)+c[a+3];c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];d=(d<<1)+c[a+3];g=(e<<1)+c[a+3];c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];a=(e<<1)+c[a+3];c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];b=f}bjb.X=1;function Zib(a){0!=(c[a+3]|0)&&(c[a+4]&1&&cjb(a,c[a+3]),c[a+3]=0)}Zib.X=1;function cjb(a,d){$1=a;yh(d)}cjb.X=1;function Wib(a,d){var e;(ajb(a)|0)<(d|0)&&(e=djb(a,d),ejb(a,0,F1(a),e),Yib(a,0,F1(a)),Zib(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Wib.X=1;function djb(a,d){return 0!=(d|0)?fjb(a,d,0):0}djb.X=1;function ejb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;if(0!=(i|0)){var j=(d<<1)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}ejb.X=1;function fjb(a,d,e){$1=a;$3=e;return Ue(d<<3,16)}fjb.X=1;function Z1(a,d){c[a]-=1;var e=(d<<2)+a+1,f=(c[a]<<2)+a+1;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=(d<<2)+a+21;f=(c[a]<<2)+a+21;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=(d<<2)+a+41;f=(c[a]<<2)+a+41;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3]}Z1.X=1;function a2(a,d){4<=(c[a]|0)&&0==((c[d]&65535)>>>3&1)<<16>>16&&Z1(a,3);3<=(c[a]|0)&&0==((c[d]&65535)>>>2&1)<<16>>16&&Z1(a,2);2<=(c[a]|0)&&0==((c[d]&65535)>>>1&1)<<16>>16&&Z1(a,1);1<=(c[a]|0)&&0==(c[d]&1)<<16>>16&&Z1(a,0)}a2.X=1;function fZ(a){var d=b;b+=7;var e=d+4,f=d+5,g=d+6;c[a+78]=0;c[a]=0;c[a+90]=1;k[e]=0xde0b6b000000000;k[f]=0xde0b6b000000000;k[g]=0xde0b6b000000000;H(d,e,f,g);e=a+73;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];b2(a+79);b=d}fZ.X=1;function b2(a){c[a+10]=0;c2(a,0,0,0,0);KY(a+4)}b2.X=1;function r9a(a,d,e,f){var g=a+73;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];c[a+90]=1;g=(c[a]<<2)+a+1;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];d=(c[a]<<2)+a+21;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];e=(c[a]<<2)+a+41;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];c[a]+=1}r9a.X=1;function c2(a,d,e,f,g){k[a+6]=d;k[a+7]=e;k[a+8]=f;k[a+9]=g}c2.X=1;function d2(a){return(0<=k[a+6]?0<=k[a+7]?0<=k[a+8]?0<=k[a+9]:0:0:0)&1}d2.X=1;function gjb(a){var d=b;b+=185;var e,f=d+4,g=d+8,h=d+12,i=d+13,j=d+14,l=d+15,m=d+19,n=d+23,p,r=d+24,s=d+28,t=d+32,w=d+36,x=d+40,y=d+44,z=d+48,A=d+52,C=d+56,B=d+60,K=d+64,E=d+68,G=d+69,M=d+70,L=d+71,F=d+75,I=d+79,R=d+83,O=d+87,Z=d+91,P=d+95,S=d+99,da=d+103,V=d+107;e=d+111;var ba=d+115,$=d+119,Y=d+120,la=d+121,ka=d+122,ja=d+126,ea=d+130,ca=d+134,W=d+138,U=d+142,X=d+146,ma=d+150,ga=d+154,ha=d+158,ta=d+162,ra=d+166,ua=d+170,za=d+174;p=d+178;var Za=d+182,ib=d+183,Ca=d+184;if(c[a+90]&1){b2(a+79);c[a+90]=0;var Sa=c[a];0==(Sa|0)?c[a+78]=0:1==(Sa|0)?(B=a+61,z=a+21,c[B]=c[z],k[B]=k[z],c[B+1]=c[z+1],k[B+1]=k[z+1],c[B+2]=c[z+2],k[B+2]=k[z+2],c[B+3]=c[z+3],k[B+3]=k[z+3],B=a+65,z=a+41,c[B]=c[z],k[B]=k[z],c[B+1]=c[z+1],k[B+1]=k[z+1],c[B+2]=c[z+2],k[B+2]=k[z+2],c[B+3]=c[z+3],k[B+3]=k[z+3],N(d,a+61,a+65),B=a+69,c[B]=c[d],k[B]=k[d],c[B+1]=c[d+1],k[B+1]=k[d+1],c[B+2]=c[d+2],k[B+2]=k[d+2],c[B+3]=c[d+3],k[B+3]=k[d+3],b2(a+79),c2(a+79,1,0,0,0),c[a+78]=d2(a+79)&1):2==(Sa|0)?(e=a+1,k[h]=0,k[i]=0,k[j]=0,H(g,h,i,j),N(l,g,e),N(m,a+5,e),k[n]=J(m,l),0<k[n]?(p=J(m,m),k[n]<p?(k[n]/=p,Q(r,m,n),JC(l,r),p=a+83,c[p]=c[p]&-2|1):(k[n]=1,JC(l,m)),p=a+83,c[p]=c[p]&-3|2):(k[n]=0,p=a+83,c[p]=c[p]&-2|1),c2(a+79,1-k[n],k[n],0,0),Q(t,m,n),wn(s,e,t),c[f]=c[s],k[f]=k[s],c[f+1]=c[s+1],k[f+1]=k[s+1],c[f+2]=c[s+2],k[f+2]=k[s+2],c[f+3]=c[s+3],k[f+3]=k[s+3],N(y,a+25,a+21),Q(x,y,n),wn(w,a+21,x),f=a+61,c[f]=c[w],k[f]=k[w],c[f+1]=c[w+1],k[f+1]=k[w+1],c[f+2]=c[w+2],k[f+2]=k[w+2],c[f+3]=c[w+3],k[f+3]=k[w+3],N(C,a+45,a+41),Q(A,C,n),wn(z,a+41,A),n=a+65,c[n]=c[z],k[n]=k[z],c[n+1]=c[z+1],k[n+1]=k[z+1],c[n+2]=c[z+2],k[n+2]=k[z+2],c[n+3]=c[z+3],k[n+3]=k[z+3],N(B,a+61,a+65),z=a+69,c[z]=c[B],k[z]=k[B],c[z+1]=c[B+1],k[z+1]=k[B+1],c[z+2]=c[B+2],k[z+2]=k[B+2],c[z+3]=c[B+3],k[z+3]=k[B+3],a2(a,a+83),c[a+78]=d2(a+79)&1):3==(Sa|0)?(k[E]=0,k[G]=0,k[M]=0,H(K,E,G,M),e2(a,K,a+1,a+5,a+9,a+79),Q(I,a+21,a+85),Q(R,a+25,a+86),wn(F,I,R),Q(O,a+29,a+87),wn(L,F,O),B=a+61,c[B]=c[L],k[B]=k[L],c[B+1]=c[L+1],k[B+1]=k[L+1],c[B+2]=c[L+2],k[B+2]=k[L+2],c[B+3]=c[L+3],k[B+3]=k[L+3],Q(S,a+41,a+85),Q(da,a+45,a+86),wn(P,S,da),Q(V,a+49,a+87),wn(Z,P,V),B=a+65,c[B]=c[Z],k[B]=k[Z],c[B+1]=c[Z+1],k[B+1]=k[Z+1],c[B+2]=c[Z+2],k[B+2]=k[Z+2],c[B+3]=c[Z+3],k[B+3]=k[Z+3],N(e,a+61,a+65),B=a+69,c[B]=c[e],k[B]=k[e],c[B+1]=c[e+1],k[B+1]=k[e+1],c[B+2]=c[e+2],k[B+2]=k[e+2],c[B+3]=c[e+3],k[B+3]=k[e+3],a2(a,a+83),c[a+78]=d2(a+79)&1):4==(Sa|0)?(k[$]=0,k[Y]=0,k[la]=0,H(ba,$,Y,la),hjb(a,ba,a+1,a+5,a+9,a+13,a+79)&1?(Q(ca,a+21,a+85),Q(W,a+25,a+86),wn(ea,ca,W),Q(U,a+29,a+87),wn(ja,ea,U),Q(X,a+33,a+88),wn(ka,ja,X),B=a+61,c[B]=c[ka],k[B]=k[ka],c[B+1]=c[ka+1],k[B+1]=k[ka+1],c[B+2]=c[ka+2],k[B+2]=k[ka+2],c[B+3]=c[ka+3],k[B+3]=k[ka+3],Q(ta,a+41,a+85),Q(ra,a+45,a+86),wn(ha,ta,ra),Q(ua,a+49,a+87),wn(ga,ha,ua),Q(za,a+53,a+88),wn(ma,ga,za),B=a+65,c[B]=c[ma],k[B]=k[ma],c[B+1]=c[ma+1],k[B+1]=k[ma+1],c[B+2]=c[ma+2],k[B+2]=k[ma+2],c[B+3]=c[ma+3],k[B+3]=k[ma+3],N(p,a+61,a+65),B=a+69,c[B]=c[p],k[B]=k[p],c[B+1]=c[p+1],k[B+1]=k[p+1],c[B+2]=c[p+2],k[B+2]=k[p+2],c[B+3]=c[p+3],k[B+3]=k[p+3],a2(a,a+83),c[a+78]=d2(a+79)&1):(B=a+78,c[a+89]&1?c[B]=0:(c[B]=1,k[Za]=0,k[ib]=0,k[Ca]=0,pe(a+69,Za,ib,Ca)))):c[a+78]=0}a=c[a+78]&1;b=d;return a}gjb.X=1;function e2(a,d,e,f,g,h){var i=b;b+=69;var j,l,m=i+4,n=i+8,p=i+12,r,s,t=i+16,w=i+17,x=i+21,y=i+25,z,A,C,B=i+29,K=i+30,E=i+34,G,M=i+38,L=i+39,F=i+43,I=i+47,R=i+51,O=i+52,Z=i+53,P=i+57,S=i+61,da=i+65;$2=a;KY(h+4);N(i,f,e);N(m,g,e);N(n,d,e);a=J(i,n);n=J(m,n);0>=a?0>=n?(c[h]=c[e],k[h]=k[e],c[h+1]=c[e+1],k[h+1]=k[e+1],c[h+2]=c[e+2],k[h+2]=k[e+2],c[h+3]=c[e+3],k[h+3]=k[e+3],j=h+4,c[j]=c[j]&-2|1,c2(h,1,0,0,0),l=1,j=24):j=5:j=5;a:do{if(5==j){N(p,d,f);l=J(i,p);r=J(m,p);s=0<=l;do{if(s&&r<=l){t=h;B=f;c[t]=c[B];k[t]=k[B];c[t+1]=c[B+1];k[t+1]=k[B+1];c[t+2]=c[B+2];k[t+2]=k[B+2];c[t+3]=c[B+3];k[t+3]=k[B+3];t=h+4;c[t]=c[t]&-3|2;c2(h,0,1,0,0);l=1;break a}}while(0);s=z=a*r-l*n;z=0>=z;do{if(z&&0<=a&&0>=l){k[t]=a/(a-l);Q(x,i,t);wn(w,e,x);B=h;M=w;c[B]=c[M];k[B]=k[M];c[B+1]=c[M+1];k[B+1]=k[M+1];c[B+2]=c[M+2];k[B+2]=k[M+2];c[B+3]=c[M+3];k[B+3]=k[M+3];B=h+4;c[B]=c[B]&-2|1;B=h+4;c[B]=c[B]&-3|2;c2(h,1-k[t],k[t],0,0);l=1;break a}}while(0);N(y,d,g);z=J(i,y);A=C=J(m,y);C=0<=C;do{if(C&&z<=A){t=h;B=g;c[t]=c[B];k[t]=k[B];c[t+1]=c[B+1];k[t+1]=k[B+1];c[t+2]=c[B+2];k[t+2]=k[B+2];c[t+3]=c[B+3];k[t+3]=k[B+3];t=h+4;c[t]=c[t]&-5|4;c2(h,0,0,1,0);l=1;break a}}while(0);C=G=z*n-a*A;G=0>=G;do{if(G&&0<=n&&0>=A){k[B]=n/(n-A);Q(E,m,B);wn(K,e,E);t=h;M=K;c[t]=c[M];k[t]=k[M];c[t+1]=c[M+1];k[t+1]=k[M+1];c[t+2]=c[M+2];k[t+2]=k[M+2];c[t+3]=c[M+3];k[t+3]=k[M+3];t=h+4;c[t]=c[t]&-2|1;t=h+4;c[t]=c[t]&-5|4;c2(h,1-k[B],0,k[B],0);l=1;break a}}while(0);var V=l*A-z*r;G=V;V=0>=V;do{if(V&&0<=r-l&&0<=z-A){k[M]=(r-l)/(r-l+(z-A));N(I,g,f);Q(F,I,M);wn(L,f,F);t=h;B=L;c[t]=c[B];k[t]=k[B];c[t+1]=c[B+1];k[t+1]=k[B+1];c[t+2]=c[B+2];k[t+2]=k[B+2];c[t+3]=c[B+3];k[t+3]=k[B+3];t=h+4;c[t]=c[t]&-3|2;t=h+4;c[t]=c[t]&-5|4;c2(h,0,1-k[M],k[M],0);l=1;break a}}while(0);l=1/(G+C+s);k[R]=C*l;k[O]=s*l;Q(S,i,R);wn(P,e,S);Q(da,m,O);wn(Z,P,da);l=h;r=Z;c[l]=c[r];k[l]=k[r];c[l+1]=c[r+1];k[l+1]=k[r+1];c[l+2]=c[r+2];k[l+2]=k[r+2];c[l+3]=c[r+3];k[l+3]=k[r+3];l=h+4;c[l]=c[l]&-2|1;l=h+4;c[l]=c[l]&-3|2;l=h+4;c[l]=c[l]&-5|4;c2(h,1-k[R]-k[O],k[R],k[O],0);l=1}}while(0);b=i;return l}e2.X=1;function hjb(a,d,e,f,g,h,i){var j=b;b+=59;var l,m,n,p,r,s,t=j+11,w=j+15,x=j+19,y=j+23,z=j+27,A=j+31,C=j+35,B=j+39,K=j+43,E=j+47,G=j+51,M=j+55;YUa(j);c[i]=c[d];k[i]=k[d];c[i+1]=c[d+1];k[i+1]=k[d+1];c[i+2]=c[d+2];k[i+2]=k[d+2];c[i+3]=c[d+3];k[i+3]=k[d+3];KY(i+4);n=i+4;c[n]=c[n]&-2|1;n=i+4;c[n]=c[n]&-3|2;n=i+4;c[n]=c[n]&-5|4;n=i+4;c[n]=c[n]&-9|8;n=f2(a,d,e,f,g,h);p=f2(a,d,e,g,h,f);r=f2(a,d,e,h,f,g);s=f2(a,d,f,h,g,e);var L=0>(n|0);a:do{if(L){l=6}else{if(0>(p|0)){l=6}else{if(0>(r|0)){l=6}else{if(0>(s|0)){l=6}else{var F=0!=(n|0);do{if(F){m=3.4028234663852886e+38,l=14}else{m=0!=(p|0);do{if(!m&&0==(r|0)&&0==(s|0)){m=0;l=31;break a}}while(0);m=3.4028234663852886e+38;l=0!=(n|0)?14:16}}while(0);14==l&&(e2(a,d,e,f,g,j),l=t,F=j,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],N(w,t,d),N(x,t,d),l=J(w,x),l<m&&(m=l,l=i,F=t,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],KY(i+4),l=i+4,c[l]=c[l]&-2|c[j+4]&1,l=i+4,c[l]=c[l]&-3|((c[j+4]&65535)>>>1&1)<<1,l=i+4,c[l]=c[l]&-5|((c[j+4]&65535)>>>2&1)<<2,c2(i,k[j+6],k[j+7],k[j+8],0)));0!=(p|0)&&(e2(a,d,e,g,h,j),l=y,F=j,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],N(z,y,d),N(A,y,d),l=J(z,A),l<m&&(m=l,l=i,F=y,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],KY(i+4),l=i+4,c[l]=c[l]&-2|c[j+4]&1,l=i+4,c[l]=c[l]&-5|((c[j+4]&65535)>>>1&1)<<2,l=i+4,c[l]=c[l]&-9|((c[j+4]&65535)>>>2&1)<<3,c2(i,k[j+6],0,k[j+7],k[j+8])));0!=(r|0)&&(e2(a,d,e,h,f,j),l=C,F=j,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],N(B,C,d),N(K,C,d),l=J(B,K),l<m&&(m=l,l=i,F=C,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],KY(i+4),l=i+4,c[l]=c[l]&-2|c[j+4]&1,l=i+4,c[l]=c[l]&-3|((c[j+4]&65535)>>>2&1)<<1,l=i+4,c[l]=c[l]&-9|((c[j+4]&65535)>>>1&1)<<3,c2(i,k[j+6],k[j+8],0,k[j+7])));0!=(s|0)&&(e2(a,d,f,h,g,j),l=E,F=j,c[l]=c[F],k[l]=k[F],c[l+1]=c[F+1],k[l+1]=k[F+1],c[l+2]=c[F+2],k[l+2]=k[F+2],c[l+3]=c[F+3],k[l+3]=k[F+3],N(G,E,d),N(M,E,d),l=J(G,M),l<m&&(m=i,l=E,c[m]=c[l],k[m]=k[l],c[m+1]=c[l+1],k[m+1]=k[l+1],c[m+2]=c[l+2],k[m+2]=k[l+2],c[m+3]=c[l+3],k[m+3]=k[l+3],KY(i+4),m=i+4,c[m]=c[m]&-3|(c[j+4]&1)<<1,m=i+4,c[m]=c[m]&-5|((c[j+4]&65535)>>>2&1)<<2,m=i+4,c[m]=c[m]&-9|((c[j+4]&65535)>>>1&1)<<3,c2(i,0,k[j+6],k[j+8],k[j+7])));m=0!=(c[i+4]&1)<<16>>16;do{if(m&&0!=((c[i+4]&65535)>>>1&1)<<16>>16&&0!=((c[i+4]&65535)>>>2&1)<<16>>16&&0!=((c[i+4]&65535)>>>3&1)<<16>>16){m=1;l=31;break a}}while(0);m=1;l=31}}}}}while(0);6==l&&(c[i+10]=1,m=0);b=j;return m}hjb.X=1;function s9a(a,d){var e;e=gjb(a)&1;var f=a+69;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];return e&1}s9a.X=1;function q9a(a,d){var e,f,g;e=0;g=c[a];f=0;var h=(f|0)<(g|0);a:do{if(h){for(var i=a+1,j=a+77;;){if(kC((f<<2)+i,d)<=k[j]&&(e=1),f+=1,(f|0)>=(g|0)){break a}}}}while(0);return KC(d,a+73)?1:e&1}q9a.X=1;function t9a(a,d,e){gjb(a);var f=a+61;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];a+=65;c[e]=c[a];k[e]=k[a];c[e+1]=c[a+1];k[e+1]=k[a+1];c[e+2]=c[a+2];k[e+2]=k[a+2];c[e+3]=c[a+3];k[e+3]=k[a+3]}t9a.X=1;function f2(a,d,e,f,g,h){var i=b;b+=20;var j=i+4,l=i+8,m=i+12,n=i+16;$2=a;N(j,f,e);N(l,g,e);qn(i,j,l);N(m,d,e);a=J(m,i);N(n,h,e);e=J(n,i);b=i;return 9.99999905104687e-9>e*e?-1:0>a*e&1}f2.X=1;function Iu(a,d){c[d]=6;c[d+1]=0}Iu.X=1;function Cu(a,d,e,f,g){g2(a,5,d,e);c[a]=h2+2;sQ(a+74,f);sQ(a+90,g);c[a+130]=0;c[a+133]=0;ijb(a)}Cu.X=1;function ijb(a){c[a+130]=0;c[a+131]=0;c[a+132]=0;c[a+140]=0;k[a+146]=-1;Nu(a,0xde0b6b000000000,0xde0b6b000000000,0xde0b6b000000000,1,.30000001192092896,1);k[a+109]=.009999999776482582;k[a+113]=.05000000074505806;c[a+151]=0;k[a+152]=0;k[a+153]=.699999988079071;k[a+154]=0}ijb.X=1;function Au(a,d,e){i2(a,5,d);c[a]=h2+2;sQ(a+74,e);c[a+130]=0;c[a+133]=0;xi(a+90,a+74);ijb(a)}Au.X=1;function jjb(a,d){if(c[a+133]&1){c[d]=0,c[d+1]=0}else{c[d]=3;c[d+1]=3;su(a,c[a+7]+1,c[a+8]+1,c[a+7]+64,c[a+8]+64);if(c[a+132]&1){c[d]+=1;var e=d+1;c[e]-=1;k[a+110]<k[a+113]&&k[a+111]<k[a+113]&&(c[d]+=1,e=d+1,c[e]-=1)}c[a+131]&1&&(c[d]+=1,e=d+1,c[e]-=1)}}jjb.X=1;function su(a,d,e,f,g){var h=b;b+=248;var i,j=h+16,l=h+20,m=h+21,n=h+22,p=h+23,r=h+39,s=h+55,t=h+71,w=h+87;i=h+103;var x=h+107,y=h+111,z=h+115,A=h+119,C=h+123,B=h+127,K=h+131,E=h+135,G=h+139,M=h+143,L=h+147,F=h+151,I=h+155,R=h+159,O=h+160,Z=h+161,P=h+165,S=h+169,da=h+173,V=h+174,ba=h+175,$=h+176,Y=h+180,la=h+184,ka=h+188,ja=h+192,ea=h+196,ca=h+200,W=h+204,U=h+208,X=h+212,ma=h+216,ga=h+220,ha=h+224,ta=h+228,ra=h+232,ua=h+236,za=h+240,Za=h+244;k[a+125]=0;k[a+124]=0;c[a+131]=0;c[a+132]=0;c[a+140]&1?c[a+133]&1?i=6:(k[l]=0,k[m]=0,k[n]=0,H(j,l,m,n),uQ(h,a+142,j),WW(p,d,a+74),WW(r,e,a+90),WW(t,r,h),uw(w,p),WW(s,t,w),dc(s,i),H(x,i,i+1,i+2),j=a+114,c[j]=c[x],k[j]=k[x],c[j+1]=c[x+1],k[j+1]=k[x+1],c[j+2]=c[x+2],k[j+2]=k[x+2],c[j+3]=c[x+3],k[j+3]=k[x+3],IB(a+114),k[a+125]=KV(i),j2(k[a+125])||(c[a+132]=1),i=41):i=6;do{if(6==i){dc(d,z);dc(a+74,A);BW(y,z,A);dc(e,B);dc(a+90,K);BW(C,B,K);EV(G,C);BW(E,G,y);tw(M,E,k2);IB(M);sw(L,k2,M);AV(L);EV(I,L);BW(F,I,E);AV(F);k[a+110]>=k[a+113]?k[a+111]>=k[a+113]?(k[O]=0,kjb(a,L,R,Z,O),k[R]>k[O]*k[a+106]&&(c[a+132]=1,k[a+134]=1,k[R]<k[O]&&.9999998807907104>k[a+106]&&(k[a+134]=(k[R]-k[O]*k[a+106])/(k[O]-k[O]*k[a+106])),k[a+125]=k[R]-k[O]*k[a+106],ljb(a,Z),WP(S,Z),tw(P,C,S),i=a+114,x=P,c[i]=c[x],k[i]=k[x],c[i+1]=c[x+1],k[i+1]=k[x+1],c[i+2]=c[x+2],k[i+2]=k[x+2],c[i+3]=c[x+3],k[i+3]=k[x+3],k[da]=0,k[V]=0,k[ba]=0,pe(a+136,da,V,ba),i=l2(a+114,f),k[a+122]=1/(i+l2(a+114,g))),i=32):i=13:i=13;a:do{if(13==i){x=d;Jb(Y,a+74,0);Bo($,x,Y);x=d;Jb(ka,a+74,1);Bo(la,x,ka);x=d;Jb(ea,a+74,2);Bo(ja,x,ea);x=e;Jb(W,a+90,0);Bo(ca,x,W);x=J(ca,$);j=J(ca,la);l=J(ca,ja);m=k[a+110]<k[a+113];do{if(m&&k[a+111]<k[a+113]){if(j2(j)&&j2(l)){break a}c[a+132]=1;qn(ma,ca,$);WP(X,ma);x=a+114;j=X;c[x]=c[j];k[x]=k[j];c[x+1]=c[j+1];k[x+1]=k[j+1];c[x+2]=c[j+2];k[x+2]=k[j+2];c[x+3]=c[j+3];k[x+3]=k[j+3];break a}}while(0);k[a+110]<k[a+113]?j2(j)||(c[a+132]=1,k[a+111]>=k[a+113]&&(j=0,m=ee(l,x),m>k[a+111]?(x=td(k[a+111]),l=ud(k[a+111])):m<-k[a+111]&&(x=td(k[a+111]),l=-ud(k[a+111])))):j2(l)||(c[a+132]=1,k[a+110]>=k[a+113]&&(l=0,m=ee(j,x),m>k[a+110]?(x=td(k[a+110]),j=ud(k[a+110])):m<-k[a+110]&&(x=td(k[a+110]),j=-ud(k[a+110]))));k[U]=x*k[$]+j*k[la]+l*k[ja];k[U+1]=x*k[$+1]+j*k[la+1]+l*k[ja+1];k[U+2]=x*k[$+2]+j*k[la+2]+l*k[ja+2];IB(U);qn(ha,ca,U);WP(ga,ha);x=a+114;j=ga;c[x]=c[j];k[x]=k[j];c[x+1]=c[j+1];k[x+1]=k[j+1];c[x+2]=c[j+2];k[x+2]=k[j+2];c[x+3]=c[j+3];k[x+3]=k[j+3];k[a+125]=JB(a+114);IB(a+114)}}while(0);0<=k[a+112]?(mjb(a,F,a+127,ta),k[a+127]>k[a+112]*k[a+106]&&(c[a+131]=1,k[a+135]=1,k[a+127]<k[a+112]&&.9999998807907104>k[a+106]&&(k[a+135]=(k[a+127]-k[a+112]*k[a+106])/(k[a+112]-k[a+112]*k[a+106])),k[a+126]=k[a+127]-k[a+112]*k[a+106],WP(ua,ta),tw(ra,C,ua),x=a+118,j=ra,c[x]=c[j],k[x]=k[j],c[x+1]=c[j+1],k[x+1]=k[j+1],c[x+2]=c[j+2],k[x+2]=k[j+2],c[x+3]=c[j+3],k[x+3]=k[j+3],x=l2(a+118,f),k[a+123]=1/(x+l2(a+118,g))),c[a+132]&1&&(WP(Za,ta),tw(za,y,Za),x=a+136,j=za,c[x]=c[j],k[x]=k[j],c[x+1]=c[j+1],k[x+1]=k[j+1],c[x+2]=c[j+2],k[x+2]=k[j+2],c[x+3]=c[j+3],k[x+3]=k[j+3])):k[a+127]=0}}while(0);b=h}su.X=1;function njb(a,d){iv(a,d,c[a+7]+1,c[a+8]+1,c[a+7]+64,c[a+8]+64)}njb.X=1;function iv(a,d,e,f,g,h){var i=b;b+=56;var j,l=i+4,m=i+8,n=i+12,p=i+16,r=i+32,s=i+36,t=i+40,w=i+44,x=i+48,y=i+52;su(a,e,f,g,h);k[c[d+2]]=1;k[c[d+2]+c[d+6]+1]=1;k[(c[d+6]<<1)+c[d+2]+2]=1;Bo(i,e,a+74+12);g=c[d+3];h=c[d+3]+c[d+6];j=(c[d+6]<<1)+c[d+3];WP(l,i);CB(l,g,h,j);Bo(m,f,a+90+12);CB(m,c[d+5],c[d+5]+c[d+6],(c[d+6]<<1)+c[d+5]);l=k[d]*(0!=(c[a+151]&2|0)?k[a+153]:k[d+1]);g=0;h=a+151;for(j=a+152;;){k[c[d+7]+c[d+6]*g]=l*(k[m+g]+k[f+12+g]-k[i+g]-k[e+12+g]);k[c[d+9]+c[d+6]*g]=-3.4028234663852886e+38;k[c[d+10]+c[d+6]*g]=3.4028234663852886e+38;0!=(c[h]&1|0)&&(k[c[d+8]+c[d+6]*g]=k[j]);var z=g+1,g=z;if(3<=(z|0)){break}}f=3*c[d+6];g=c[a+132]&1;a:do{if(g){m=c[d+3];l=c[d+5];h=k[a+110]<k[a+113];do{if(h&&k[a+111]<k[a+113]){WW(p,e,a+74);Jb(r,p,1);Jb(s,p,2);e=c[d+6]+f;k[m+f]=k[r];k[m+(f+1)]=k[r+1];k[m+(f+2)]=k[r+2];k[m+e]=k[s];k[m+(e+1)]=k[s+1];k[m+(e+2)]=k[s+2];k[l+f]=-k[r];k[l+(f+1)]=-k[r+1];k[l+(f+2)]=-k[r+2];k[l+e]=-k[s];k[l+(e+1)]=-k[s+1];k[l+(e+2)]=-k[s+2];p=k[d]*k[a+108];k[c[d+7]+f]=p*J(a+114,r);k[c[d+7]+e]=p*J(a+114,s);k[c[d+9]+f]=-3.4028234663852886e+38;k[c[d+10]+f]=3.4028234663852886e+38;k[c[d+9]+e]=-3.4028234663852886e+38;k[c[d+10]+e]=3.4028234663852886e+38;f=c[d+6]+e;break a}}while(0);Q(w,a+114,a+108);Q(t,w,a+108);h=n;j=t;c[h]=c[j];k[h]=k[j];c[h+1]=c[j+1];k[h+1]=k[j+1];c[h+2]=c[j+2];k[h+2]=k[j+2];c[h+3]=c[j+3];k[h+3]=k[j+3];k[m+f]=k[n];k[m+(f+1)]=k[n+1];k[m+(f+2)]=k[n+2];k[l+f]=-k[n];k[l+(f+1)]=-k[n+1];k[l+(f+2)]=-k[n+2];k[c[d+7]+f]=k[d]*k[a+107]*k[a+125];0!=(c[a+151]&4|0)&&(k[c[d+8]+f]=k[a+154]);k[c[d+9]+f]=0;k[c[d+10]+f]=3.4028234663852886e+38;f+=c[d+6]}}while(0);c[a+131]&1&&(Q(y,a+118,a+108),Q(x,y,a+108),c[n]=c[x],k[n]=k[x],c[n+1]=c[x+1],k[n+1]=k[x+1],c[n+2]=c[x+2],k[n+2]=k[x+2],c[n+3]=c[x+3],k[n+3]=k[x+3],r=c[d+3],s=c[d+5],k[r+f]=k[n],k[r+(f+1)]=k[n+1],k[r+(f+2)]=k[n+2],k[s+f]=-k[n],k[s+(f+1)]=-k[n+1],k[s+(f+2)]=-k[n+2],k[c[d+7]+f]=k[d]*k[a+107]*k[a+126],0!=(c[a+151]&4|0)&&(k[c[d+8]+f]=k[a+154]),0<k[a+112]?(n=c[d+9]+f,0<k[a+126]?(k[n]=0,k[c[d+10]+f]=3.4028234663852886e+38):(k[n]=-3.4028234663852886e+38,k[c[d+10]+f]=0)):(k[c[d+9]+f]=-3.4028234663852886e+38,k[c[d+10]+f]=3.4028234663852886e+38));b=i}iv.X=1;function ojb(a){var d=b;b+=70;var e=d+4,f=d+5,g=d+6,h=d+7,i=d+11,j=d+15,l=d+19,m=d+31,n=d+35,p=d+36,r=d+37,s=d+38,t=d+50,w=d+62,x=d+66;if(c[a+133]&1){k[a+9]=0;k[a+129]=0;k[a+128]=0;k[e]=0;k[f]=0;k[g]=0;H(d,e,f,g);e=a+147;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];e=c[a+130]&1;a:do{if(!e){vw(h,c[a+7]+1,a+74+12);vw(i,c[a+8]+1,a+90+12);N(j,i,h);f=l;1.1920928955078125e-7<Um(j)?(uC(m,j),g=m,c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3]):(k[n]=1,k[p]=0,k[r]=0,pe(f,n,p,r));rw(l,l+4,l+8);for(var f=0,g=a+11,y=a+7,z=a+8,A=a+7,C=a+8,B=a+7,K=a+7,E=a+8,G=a+8;;){var M=g+21*f;0!=(M|0)&&(ue(s,c[y]+1),ue(t,c[z]+1),N(w,h,c[A]+1+12),N(x,i,c[C]+1+12),GL(M,s,t,w,x,(f<<2)+l,c[B]+97,Zm(c[K]),c[E]+97,Zm(c[G])));f=M=f+1;if(3<=(M|0)){break a}}}}while(0);su(a,c[a+7]+1,c[a+8]+1,c[a+7]+64,c[a+8]+64)}b=d}ojb.X=1;function pjb(a,d,e,f){var g=b;b+=490;var h=g+4,i=g+8,j=g+12,l=g+16,m=g+20,n=g+24,p,r,s,t,w=g+28,x,y=g+32,z=g+36,A=g+40,C=g+44,B=g+45,K=g+49,E=g+53,G=g+54,M=g+58,L=g+74,F=g+90,I=g+94,R=g+98,O=g+114,Z=g+118,P=g+119,S=g+120,da=g+121,V=g+137,ba=g+153,$=g+157,Y=g+158,la=g+159,ka=g+160,ja=g+176,ea=g+192,ca=g+208,W=g+224,U=g+240,X=g+256,ma=g+260,ga=g+264,ha=g+268,ta=g+272,ra=g+276,ua=g+280,za=g+281,Za=g+282,ib=g+286,Ca=g+290,Sa=g+294,mb=g+298,Oa,Pa=g+302,fc=g+306,jb=g+310,La=g+314,fb=g+318,Rb=g+319,pb=g+320,Sb=g+324,ab=g+328,Ib=g+329,Fc=g+333,Ac=g+337,ob=g+338,Gc=g+339,Yc=g+340,Cc=g+344,Ub=g+348,Uc=g+349,nd=g+350,Ic=g+351,tc=g+355,hd=g+359,Tb=g+363,Jc=g+367,ub,uc=g+371,Kc=g+375,gb=g+376,gc=g+377,Lc=g+381,Dc=g+385,Eb=g+386,Ra=g+387,qb=g+388,Ab=g+392,hc=g+396,Hc=g+397,ic=g+398,db=g+399,bb=g+403,id=g+407,Zc,vb,rb=g+411,vc=g+415,Qc,Rc=g+416,Xd=g+417,Sc=g+418,Mc=g+422,$c=g+426,Cd=g+427,wc=g+431,Bb=g+435,fd=g+439,ad=g+440,wd=g+441,Kd=g+442,Rd=g+446,Ec=g+450,xd=g+451,od=g+452,pd=g+453,bd,jd,Ld=g+457,Gd=g+461,Dd,fe=g+462,ge=g+463,Hd=g+464,he=g+468,Zd=g+472,$d=g+473,pg=g+474,Ze=g+475,Xg=g+479,Dh=g+483,wf=g+484,Oe=g+485,If=g+486,Ai=c[a+133]&1;do{if(Ai){vw(g,c[a+7]+1,a+74+12);vw(h,c[a+8]+1,a+90+12);var qg=c[a+130]&1;a:do{if(!qg){N(i,g,c[a+7]+1+12);N(j,h,c[a+8]+1+12);vn(d,i,l);vn(e,j,m);N(n,l,m);p=0;for(var Yg=a+11,Zg=a+11,Vf=a+9,rg=a+7,sg=a+7,om=a+8,mn=a+8;;){r=Yg+21*p;s=1/eL(Zg+21*p);t=J(r,n);N(w,g,h);x=.30000001192092896*-J(w,r)/f*s-t*s;k[Vf]+=x;qn(y,i,r);qn(z,j,r);k[C]=Zm(c[rg]);Q(A,r,C);Bo(B,c[sg]+64,y);ho(d,A,B,x);k[E]=Zm(c[om]);Q(K,r,E);Bo(G,c[mn]+64,z);ho(e,K,G,-x);var yl=p+1;p=yl;if(3<=(yl|0)){break a}}}}while(0);if(c[a+140]&1){sQ(M,c[a+7]+1);sQ(L,c[a+8]+1);Oo(d,F);Oo(e,I);eQ(R);k[Z]=0;k[P]=0;k[S]=0;H(O,Z,P,S);iZ(M,O,F,f,R);eQ(da);iZ(L,O,I,f,da);k[$]=0;k[Y]=0;k[la]=0;H(ba,$,Y,la);uQ(V,a+142,ba);WW(ja,a+90,V);uw(ea,a+74);WW(ka,ja,ea);WW(ca,da,ka);uw(U,ka);WW(W,R,U);xY(M,ca,f,O,X);xY(L,W,f,O,ma);N(ga,X,F);N(ha,ma,I);k[ua]=0;k[za]=0;if(1.1920928955078125e-7<Um(ga)){uC(Za,ga);var tg=ta,$e=Za;c[tg]=c[$e];k[tg]=k[$e];c[tg+1]=c[$e+1];k[tg+1]=k[$e+1];c[tg+2]=c[$e+2];k[tg+2]=k[$e+2];c[tg+3]=c[$e+3];k[tg+3]=k[$e+3];k[ua]=Nn(Mt(a),ta)}if(1.1920928955078125e-7<Um(ha)){uC(ib,ha);var af=ra,Wf=ib;c[af]=c[Wf];k[af]=k[Wf];c[af+1]=c[Wf+1];k[af+1]=k[Wf+1];c[af+2]=c[Wf+2];k[af+2]=k[Wf+2];c[af+3]=c[Wf+3];k[af+3]=k[Wf+3];k[za]=Nn(Lt(a),ra)}Q(Sa,ta,ua);Q(mb,ra,za);wn(Ca,Sa,mb);if(1.1920928955078125e-7<Um(Ca)){IB(Ca);k[ua]=Nn(Mt(a),Ca);k[za]=Nn(Lt(a),Ca);Oa=k[ua]+k[za];Q(jb,ga,ua);Q(La,ha,za);N(fc,jb,La);k[fb]=Oa*Oa;wC(Pa,fc,fb);if(0<=k[a+146]){k[Rb]=k[a+146];c[a+141]&1&&(k[Rb]/=k[ua]);wn(pb,a+147,Pa);if(JB(pb)>k[Rb]){IB(pb);LC(pb,Rb);N(Sb,pb,a+147);var Xf=Pa,ug=Sb;c[Xf]=c[ug];k[Xf]=k[ug];c[Xf+1]=c[ug+1];k[Xf+1]=k[ug+1];c[Xf+2]=c[ug+2];k[Xf+2]=k[ug+2];c[Xf+3]=c[ug+3];k[Xf+3]=k[ug+3]}xn(a+147,Pa)}k[ab]=JB(Pa);wC(Ib,Pa,ab);k[Ac]=0;k[ob]=0;k[Gc]=0;H(Fc,Ac,ob,Gc);Bo(Yc,c[a+7]+64,Ib);ho(d,Fc,Yc,k[ab]);k[Ub]=0;k[Uc]=0;k[nd]=0;H(Cc,Ub,Uc,nd);Bo(Ic,c[a+8]+64,Ib);ho(e,Cc,Ic,-k[ab])}}else{1.1920928955078125e-7<k[a+109]&&(Oo(d,tc),Oo(e,hd),N(Tb,hd,tc),1.1920928955078125e-7<Um(Tb)&&(uC(Jc,Tb),ub=1/(Nn(Mt(a),Jc)+Nn(Lt(a),Jc)),k[Kc]=k[a+109]*ub,Q(uc,Tb,Kc),k[gb]=JB(uc),wC(gc,uc,gb),k[Dc]=0,k[Eb]=0,k[Ra]=0,H(Lc,Dc,Eb,Ra),Bo(qb,c[a+7]+64,gc),ho(d,Lc,qb,k[gb]),k[hc]=0,k[Hc]=0,k[ic]=0,H(Ab,hc,Hc,ic),Bo(db,c[a+8]+64,gc),ho(e,Ab,db,-k[gb])))}Oo(d,bb);Oo(e,id);if(c[a+132]&1){Zc=k[a+134]*k[a+125]*k[a+107]/f;N(rb,id,bb);vb=J(rb,a+114);0<vb&&(Zc+=k[a+134]*vb*k[a+108]);k[vc]=Zc*k[a+122];Qc=k[a+128];k[Rc]=k[a+128]+k[vc];k[Xd]=0;k[a+128]=k[d0(Rc,Xd)];k[vc]=k[a+128]-Qc;Q(Sc,a+114,vc);k[$c]=J(Sc,a+136);Q(Mc,a+136,$c);N(Cd,Sc,Mc);var vg=Sc,rh=Cd;c[vg]=c[rh];k[vg]=k[rh];c[vg+1]=c[rh+1];k[vg+1]=k[rh+1];c[vg+2]=c[rh+2];k[vg+2]=k[rh+2];c[vg+3]=c[rh+3];k[vg+3]=k[rh+3];k[vc]=JB(Sc);wC(wc,Sc,vc);k[fd]=0;k[ad]=0;k[wd]=0;H(Bb,fd,ad,wd);Bo(Kd,c[a+7]+64,wc);ho(d,Bb,Kd,k[vc]);k[Ec]=0;k[xd]=0;k[od]=0;H(Rd,Ec,xd,od);Bo(pd,c[a+8]+64,wc);ho(e,Rd,pd,-k[vc])}c[a+131]&1&&(bd=k[a+135]*k[a+126]*k[a+107]/f,N(Ld,id,bb),jd=J(Ld,a+118),0<jd&&(bd+=k[a+135]*jd*k[a+108]),k[Gd]=bd*k[a+123],Dd=k[a+129],k[fe]=k[a+129]+k[Gd],k[ge]=0,k[a+129]=k[d0(fe,ge)],k[Gd]=k[a+129]-Dd,Q(Hd,a+118,Gd),k[Zd]=0,k[$d]=0,k[pg]=0,H(he,Zd,$d,pg),Bo(Ze,c[a+7]+64,a+118),ho(d,he,Ze,k[Gd]),k[Dh]=0,k[wf]=0,k[Oe]=0,H(Xg,Dh,wf,Oe),Bo(If,c[a+8]+64,a+118),ho(e,Xg,If,-k[Gd]))}}while(0);b=g}pjb.X=1;function pv(a){var d=b;b+=106;var e=d+4,f=d+8,g=d+12,h=d+20,i=d+24,j=d+28,l=d+32,m,n;m=d+36;n=d+40;var p=d+44,r=d+48,s=d+52,t=d+56,w=d+60,x=d+64,y=d+65,z=d+69,A=d+70,C=d+71,B=d+75,K=d+79,E=d+83,G=d+87,M=d+91,L=d+95,F=d+96,I=d+97,R=d+101,O=d+105;k[a+125]=0;k[a+124]=0;c[a+131]=0;c[a+132]=0;var Z=Mt(a)+1;Jb(i,a+74,0);Bo(h,Z,i);c[d]=c[h];k[d]=k[h];c[d+1]=c[h+1];k[d+1]=k[h+1];c[d+2]=c[h+2];k[d+2]=k[h+2];c[d+3]=c[h+3];k[d+3]=k[h+3];h=Lt(a)+1;Jb(l,a+90,0);Bo(j,h,l);c[g]=c[j];k[g]=k[j];c[g+1]=c[j+1];k[g+1]=k[j+1];c[g+2]=c[j+2];k[g+2]=k[j+2];c[g+3]=c[j+3];k[g+3]=k[j+3];l=j=0;.05000000074505806<=k[a+110]&&(j=Mt(a)+1,Jb(n,a+74,1),Bo(m,j,n),c[e]=c[m],k[e]=k[m],c[e+1]=c[m+1],k[e+1]=k[m+1],c[e+2]=c[m+2],k[e+2]=k[m+2],c[e+3]=c[m+3],k[e+3]=k[m+3],m=J(g,d),n=J(g,e),j=m2(n,m),m=100*(n*n+m*m),j*=m/(m+1));.05000000074505806<=k[a+111]&&(m=Mt(a)+1,Jb(r,a+74,2),Bo(p,m,r),c[f]=c[p],k[f]=k[p],c[f+1]=c[p+1],k[f+1]=k[p+1],c[f+2]=c[p+2],k[f+2]=k[p+2],c[f+3]=c[p+3],k[f+3]=k[p+3],m=J(g,d),n=J(g,f),l=m2(n,m),m=100*(n*n+m*m),m/=m+1,l*=m);p=1/(k[a+110]*k[a+110]);r=1/(k[a+111]*k[a+111]);p=sc(j*j)*p+sc(l*l)*r;1<p&&(k[a+125]=p-1,c[a+132]=1,k[x]=J(g,e),Q(w,e,x),k[z]=J(g,f),Q(y,f,z),wn(t,w,y),qn(s,g,t),t=a+114,c[t]=c[s],k[t]=k[s],c[t+1]=c[s+1],k[t+1]=k[s+1],c[t+2]=c[s+2],k[t+2]=k[s+2],c[t+3]=c[s+3],k[t+3]=k[s+3],IB(a+114),k[A]=0<=J(g,d)?1:-1,LC(a+114,A));0<=k[a+112]&&(s=Lt(a)+1,Jb(B,a+90,1),Bo(C,s,B),sw(K,g,d),tw(E,K,C),e=m2(J(E,f),J(E,e)),k[a+127]=e,f=.05000000074505806<k[a+112]?1:0,C=k[a+112],e<=-k[a+112]*f?(k[a+126]=-(e+C),c[a+131]=1,wn(M,g,d),k[L]=.5,Q(G,M,L),I=a+118,c[I]=c[G],k[I]=k[G],c[I+1]=c[G+1],k[I+1]=k[G+1],c[I+2]=c[G+2],k[I+2]=k[G+2],c[I+3]=c[G+3],k[I+3]=k[G+3],IB(a+118),k[F]=-1,LC(a+118,F)):e>C*f&&(k[a+126]=e-k[a+112],c[a+131]=1,wn(R,g,d),k[O]=.5,Q(I,R,O),G=a+118,c[G]=c[I],k[G]=k[I],c[G+1]=c[I+1],k[G+1]=k[I+1],c[G+2]=c[I+2],k[G+2]=k[I+2],c[G+3]=c[I+3],k[G+3]=k[I+3],IB(a+118)));b=d}pv.X=1;function m2(a,d){var e;e=sc(a);e=0<=d?.7853981852531433-.7853981852531433*((d-e)/(d+e)):2.35619455575943-.7853981852531433*((d+e)/(e-d));return 0>a?-e:e}m2.X=1;function j2(a){return 1.1920928955078125e-7>sc(a)}j2.X=1;function kjb(a,d,e,f,g){var h=b;b+=4;k[e]=KV(d);1.1920928955078125e-7<k[e]?(H(h,d,d+1,d+2),c[f]=c[h],k[f]=k[h],c[f+1]=c[h+1],k[f+1]=k[h+1],c[f+2]=c[h+2],k[f+2]=k[h+2],c[f+3]=c[h+3],k[f+3]=k[h+3],IB(f),1.1920928955078125e-7<n2(k[f])&&($wtf=0),d=k[f+1],f=-k[f+2],k[g]=k[a+110],1.1920928955078125e-7<n2(d)&&(f=f*f/(d*d),d=1/(k[a+111]*k[a+111]),d+=f/(k[a+110]*k[a+110]),k[g]=qjb((f+1)/d))):0>k[e]&&($wtf1=0);b=h}kjb.X=1;function ljb(a,d){var e,f,g;e=-k[d+2];f=k[d+1];1.1920928955078125e-7<n2(f)&&(g=e/f*(k[a+111]/k[a+110]),g=n2(g*f),dC(d,-(0<e?g:-g)),cC(d,f),IB(d))}ljb.X=1;function l2(a,d){var e=b;b+=4;rn(e,a,d);var f=J(a,e);b=e;return f}l2.X=1;function mjb(a,d,e,f){var g=b;b+=12;var h=g+4,i=g+8;$1=a;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];k[e]=KV(d);3.1415927410125732<k[e]&&(rjb(h,d),c[g]=c[h],k[g]=k[h],c[g+1]=c[h+1],k[g+1]=k[h+1],c[g+2]=c[h+2],k[g+2]=k[h+2],c[g+3]=c[h+3],k[g+3]=k[h+3],k[e]=KV(g));0>k[e]&&($wtf=0);H(i,g,g+1,g+2);c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];c[f+2]=c[i+2];k[f+2]=k[i+2];c[f+3]=c[i+3];k[f+3]=k[i+3];1.1920928955078125e-7<k[e]&&IB(f);b=g}mjb.X=1;function nv(a,d,e,f){var g=b;b+=19;var h=g+1,i=g+2,j,l=g+3,m=g+7,n=g+8,p=g+9,r=g+13,s=g+17,t=g+18;k[g]=f;k[h]=td(e);e=ud(e);k[i]=k[d+110];1.1920928955078125e-7<n2(k[h])&&(f=e*e/(k[h]*k[h]),j=1/(k[d+111]*k[d+111]),j+=f/(k[d+110]*k[d+110]),k[i]=qjb((f+1)/j));k[m]=0;k[n]=-e;H(l,m,h,n);IV(p,l,i);k[s]=0;k[t]=0;H(r,g,s,t);tw(a,p,r);b=g}nv.X=1;function rjb(a,d){var e=b;b+=4;var f=e+1,g=e+2,h=e+3;k[e]=-k[d];k[f]=-k[d+1];k[g]=-k[d+2];k[h]=-k[d+3];NG(a,e,f,g,h);b=e}rjb.X=1;function Du(a,d){var e=b;b+=156;var f=e+16,g=e+32,h=e+48,i=e+68,j=e+84,l=e+100,m=e+116,n=e+136,p=e+140,r=e+144,s=e+148,t=e+152;sQ(e,c[a+7]+1);sQ(f,c[a+8]+1);uw(h,f);WW(g,h,e);dc(g,e+64);WW(j,f,a+90);uw(l,j);WW(m,e,a+74);WW(i,l,m);dc(i,e+132);dc(a+90,s);EV(r,s);BW(p,r,d);dc(a+74,t);BW(n,p,t);jv(a,n);b=e}Du.X=1;function sjb(){return 204}sjb.X=1;function tjb(){}tjb.X=1;function ujb(){}ujb.X=1;function vjb(){}vjb.X=1;function wjb(a,d,e,f){if(1==(d|0)||2==(d|0)){0<=(f|0)&3>(f|0)?(k[a+153]=e,a+=151,c[a]|=2):k[a+107]=e}else{if(3==(d|0)||4==(d|0)){0<=(f|0)&3>(f|0)?(k[a+152]=e,a+=151,c[a]|=1):(k[a+154]=e,a+=151,c[a]|=4)}}}wjb.X=1;function xjb(a,d,e){var f;f=0;if(1==(d|0)||2==(d|0)){0<=(e|0)&3>(e|0)?f=k[a+153]:3<=(e|0)&6>(e|0)&&(f=k[a+107])}else{if(3==(d|0)||4==(d|0)){0<=(e|0)&3>(e|0)?f=k[a+152]:3<=(e|0)&6>(e|0)&&(f=k[a+154])}}return f}xjb.X=1;function jv(a,d){var e=b;b+=39;var f=e+4,g=e+8,h=e+12,i=e+16,j=e+17,l=e+18,m=e+22,n=e+26,p=e+27,r=e+31,s=e+35,t=a+142;c[t]=c[d];k[t]=k[d];c[t+1]=c[d+1];k[t+1]=k[d+1];c[t+2]=c[d+2];k[t+2]=k[d+2];c[t+3]=c[d+3];k[t+3]=k[d+3];tw(e,a+142,k2);sw(f,k2,e);AV(f);EV(h,f);BW(g,h,a+142);AV(g);.05000000074505806<=k[a+110]&&.05000000074505806<=k[a+111]&&(kjb(a,f,i,l,j),1.1920928955078125e-7<n2(k[i])&&(k[i]>1*k[j]?k[i]=1*k[j]:k[i]<1*-k[j]&&(k[i]=1*-k[j]),IV(m,l,i),c[f]=c[m],k[f]=k[m],c[f+1]=c[m+1],k[f+1]=k[m+1],c[f+2]=c[m+2],k[f+2]=k[m+2],c[f+3]=c[m+3],k[f+3]=k[m+3]));.05000000074505806<=k[a+112]&&(mjb(a,g,n,p),1.1920928955078125e-7<n2(k[n])&&(k[n]>1*k[a+112]?k[n]=1*k[a+112]:k[n]<1*-k[a+112]&&(k[n]=1*-k[a+112]),IV(r,p,n),c[g]=c[r],k[g]=k[r],c[g+1]=c[r+1],k[g+1]=k[r+1],c[g+2]=c[r+2],k[g+2]=k[r+2],c[g+3]=c[r+3],k[g+3]=k[r+3]));BW(s,f,g);f=a+142;c[f]=c[s];k[f]=k[s];c[f+1]=c[s+1];k[f+1]=k[s+1];c[f+2]=c[s+2];k[f+2]=k[s+2];c[f+3]=c[s+3];k[f+3]=k[s+3];b=e}jv.X=1;function yjb(a,d,e){xi(a+74,d);xi(a+90,e);v[c[c[a]+2]](a)}yjb.X=1;function zjb(){}zjb.X=1;function Ajb(a){xe(a)}Ajb.X=1;function Bjb(a,d,e){o2(a,d,e);mQ(a+74,d+14);mQ(a+90,d+30);k[d+46]=k[a+110];k[d+47]=k[a+111];k[d+48]=k[a+112];k[d+49]=k[a+106];k[d+50]=k[a+107];k[d+51]=k[a+108];k[d+52]=k[a+109];return D.cf}Bjb.X=1;function Cjb(a){xe(a)}Cjb.X=1;function Djb(){}Djb.X=1;function vU(a,d){for(var e=d,f=a+11,g=e+285;e<g;e++,f++){c[f]=c[e],k[f]=k[e]}}vU.X=1;function Ejb(a,d,e,f,g,h){var i=b;b+=36;var j,l=i+4,m=i+8,n=i+12,p=i+16,r=i+17,s=i+18,t=i+19,w=i+23,x=i+24,y=i+28,z=i+32;j=p2(d);N(i,e,a+1+12);N(l,e,d+1+12);no(m,a,i);0!=(j|0)?no(n,j,l):(k[p]=0,k[r]=0,k[s]=0,H(n,p,r,s));N(t,m,n);m=J(f,t);d=di(a)*di(d)*-m;g=k[g+8]*-h/k[g+3];h=0!=(j|0)?ln(j,e,f):0;e=1/(ln(a,e,f)+h);k[w]=g*e+ -(d+1)*m*e;k[w]=0>k[w]?0:k[w];Q(x,f,w);yn(a,x,i);0!=(j|0)&&(WP(z,f),Q(y,z,w),yn(j,y,l));a=k[w];b=i;return a}Ejb.X=1;function p2(a){return 0!=(ji(a)&2|0)?a:0}p2.X=1;function Fjb(a,d,e,f,g,h,i,j){var l=b;b+=97;var m=l+4,n=l+8,p=l+12,r=l+16,s=l+20,t=l+41,w=l+53,x=l+65,y=l+69,z=l+81,A=l+85;$5=g;$8=j;1.100000023841858<Um(h)?k[i]=0:(N(l,d,a+1+12),N(m,f,e+1+12),no(n,a,l),no(p,e,m),N(r,n,p),ue(t,a+1),ue(w,e+1),GL(s,t,w,l,m,h,a+97,Zm(a),e+97,Zm(e)),d=1/eL(s),f=a+76,ue(y,a+1),Bo(x,y,a+80),a=e+76,ue(A,e+1),Bo(z,A,e+80),IL(s,f,x,a,z),$a=d,e=J(h,r),k[i]=-.20000000298023224*e*d);b=l}Fjb.X=1;function Gjb(a,d,e,f,g){ot(a,d,e,f,g);c[a]=Hjb+2}Gjb.X=1;function Ijb(a){q2(a);xe(a)}Ijb.X=1;function Jjb(a){q2(a)}Jjb.X=1;function Kjb(){return 3}Kjb.X=1;function Ljb(){}Ljb.X=1;function Mjb(a,d){var e=b,f;Njb(a,d);if(0!=(c[a+25]|0)){v[c[a+25]](a,d)}v[c[c[a]+2]](a);v[c[c[a]+34]](a,d);f=a+7;k[f]=d;c[f+1]=0;c[f+5]=v[c[c[a]+4]](a);v[c[c[a]+10]](a);v[c[c[a]+37]](a);k[a+27+3]=d;v[c[c[a]+38]](a,a+27);v[c[c[a]+44]](a,d);f=k[f+3];if(0>f){for(var g=(Ka=b,b+=1,k[Ka]=f,Ka),h=c[r2],i=(function(a){var d;"double"===a?d=k[g+l]:("i64"!=a&&(a="i32"),d=c[g+l]);l+=Math.max(wa(a),xa);return d}),j=D.ef,l=0,m=[],n,p;;){var r=j;n=c[j];if(0===n){break}p=c[j+1];if(37==n){var s=oa,t=oa,w=oa,x=oa;a:for(;;){switch(p){case 43:s=ia;break;case 45:t=ia;break;case 35:w=ia;break;case 48:if(x){break a}else{x=ia;break};default:break a}j++;p=c[j+1]}var y=0;if(42==p){y=i("i32"),j++,p=c[j+1]}else{for(;48<=p&&57>=p;){y=10*y+(p-48),j++,p=c[j+1]}}var z=oa;if(46==p){var A=0,z=ia;j++;p=c[j+1];if(42==p){A=i("i32"),j++}else{for(;;){p=c[j+1];if(48>p||57<p){break}A=10*A+(p-48);j++}}p=c[j+1]}else{A=6}var C;switch(String.fromCharCode(p)){case"h":p=c[j+2];104==p?(j++,C=1):C=2;break;case"l":p=c[j+2];108==p?(j++,C=8):C=4;break;case"L":;case"q":;case"j":C=8;break;case"z":;case"t":;case"I":C=4;break;default:C=na}C&&j++;p=c[j+1];if(-1!="diuoxXp".split("").indexOf(String.fromCharCode(p))){r=100==p||105==p;C=C||4;n=i("i"+8*C);var B;4>=C&&(n=(r?taa:saa)(n&Math.pow(256,C)-1,8*C));var K=Math.abs(n),r="";if(100==p||105==p){B=taa(n,8*C).toString(10)}else{if(117==p){B=saa(n,8*C).toString(10),n=Math.abs(n)}else{if(111==p){B=(w?"0":"")+K.toString(8)}else{if(120==p||88==p){r=w?"0x":"";if(0>n){n=-n;B=(K-1).toString(16);K=[];for(w=0;w<B.length;w++){K.push((15-parseInt(B[w],16)).toString(16))}for(B=K.join("");B.length<2*C;){B="f"+B}}else{B=K.toString(16)}88==p&&(r=r.toUpperCase(),B=B.toUpperCase())}else{112==p&&(0===K?B="(nil)":(r="0x",B=K.toString(16)))}}}}if(z){for(;B.length<A;){B="0"+B}}for(s&&(r=0>n?"-"+r:"+"+r);r.length+B.length<y;){t?B+=" ":x?B="0"+B:r=" "+r}B=r+B;B.split("").forEach((function(a){m.push(a.charCodeAt(0))}))}else{if(-1!="fFeEgG".split("").indexOf(String.fromCharCode(p))){n=i("double");if(isNaN(n)){B="nan",x=oa}else{if(isFinite(n)){z=oa;C=Math.min(A,20);if(103==p||71==p){z=ia,A=A||1,C=parseInt(n.toExponential(C).split("e")[1],10),A>C&&-4<=C?(p=(103==p?"f":"F").charCodeAt(0),A-=C+1):(p=(103==p?"e":"E").charCodeAt(0),A--),C=Math.min(A,20)}if(101==p||69==p){B=n.toExponential(C),/[eE][-+]\d$/.test(B)&&(B=B.slice(0,-1)+"0"+B.slice(-1))}else{if(102==p||70==p){B=n.toFixed(C)}}r=B.split("e");if(z&&!w){for(;1<r[0].length&&-1!=r[0].indexOf(".")&&("0"==r[0].slice(-1)||"."==r[0].slice(-1));){r[0]=r[0].slice(0,-1)}}else{for(w&&-1==B.indexOf(".")&&(r[0]+=".");A>C++;){r[0]+="0"}}B=r[0]+(1<r.length?"e"+r[1]:"");69==p&&(B=B.toUpperCase());s&&0<=n&&(B="+"+B)}else{B=(0>n?"-":"")+"inf",x=oa}}for(;B.length<y;){B=t?B+" ":x&&("-"==B[0]||"+"==B[0])?B[0]+"0"+B.slice(1):(x?"0":" ")+B}97>p&&(B=B.toUpperCase());B.split("").forEach((function(a){m.push(a.charCodeAt(0))}))}else{if(115==p){s=i("i8*")||paa;x=raa(s);z&&(x=Math.min(x,A));if(!t){for(;x<y--;){m.push(32)}}for(w=0;w<x;w++){m.push(Ha[s++])}if(t){for(;x<y--;){m.push(32)}}}else{if(99==p){for(t&&m.push(i("i8"));0<--y;){m.push(32)}t||m.push(i("i8"))}else{if(110==p){t=i("i32*"),c[t]=m.length}else{if(37==p){m.push(n)}else{for(w=r;w<j+2;w++){m.push(c[w])}}}}}}}j+=2}else{m.push(n),j+=1}}B=b;i=u(m,"i8",Va);j=1*m.length;0!=j&&-1==Ojb(h,i,j)&&s2[h]&&(s2[h].error=ia);b=B}v[c[c[a]+35]](a,d*f);t2(a,d);Pjb(a,d);if(0!=(c[a+24]|0)){v[c[a+24]](a,d)}b=e}Mjb.X=1;function Qjb(a,d){var e,f;Rjb(a,d);$toi=1;e=a+7;k[e]=d;k[e+3]=1;c[e+1]=0;c[e+2]=2;f=Sk(a);if(0!=(f|0)){var g=c[c[f]+8],h=c[a+21],h=v[c[c[h]+9]](h);v[g](f,h,e,c[a+6])}c[e+2]=1}Qjb.X=1;function Rjb(a,d){var e=b;b+=32;var f=e+1,g=e+5,h,i,j,l=e+9,m=e+10,n=e+11,p=e+12,r=e+13,s=e+14,t=e+15,w=e+19,x=e+20,y=e+24,z=e+28;k[e]=d;h=0;var A=a+1,C=(h|0)<(Tl(A)|0);a:do{if(C){for(var B=a+1,K=a+1,E=f,G=y,M=g,L=z,F=a+21,I=a+6;;){if(i=j=p2(c[$X(B,h)]),0!=(j|0)&&(j=Xn(i),v[c[c[j]+2]](j,c[$X(K,h)]+1,f,g),j=i+76,k[l]=k[g],k[m]=k[g+1],k[n]=k[g+2],k[p]=k[f],k[r]=k[f+1],k[s]=k[f+2],Q(t,j,e),j=k[t],0<k[t]?k[l]+=j:k[p]+=j,j=k[t+1],0<k[t+1]?k[m]+=j:k[r]+=j,j=k[t+2],0<k[t+2]?k[n]+=j:k[s]+=j,k[w]=0,H(x,w,w,w),H(y,p,r,s),c[E]=c[G],k[E]=k[G],c[E+1]=c[G+1],k[E+1]=k[G+1],c[E+2]=c[G+2],k[E+2]=k[G+2],c[E+3]=c[G+3],k[E+3]=k[G+3],H(z,l,m,n),c[M]=c[L],k[M]=k[L],c[M+1]=c[L+1],k[M+1]=k[L+1],c[M+2]=c[L+2],k[M+2]=k[L+2],c[M+3]=c[L+3],k[M+3]=k[L+3],JC(f,x),xn(g,x),j=c[F],v[c[c[j]+4]](j,ci(i),f,g,c[I])),h+=1,(h|0)>=(Tl(A)|0)){break a}}}}while(0);f=c[a+21];v[c[c[f]+8]](f,c[a+6]);b=e}Rjb.X=1;function Sjb(a,d){t2(a,d)}Sjb.X=1;function Tjb(a,d,e,f){qM(a,d,e,f);c[a]=Ujb+2;c[a+24]=0;c[a+25]=0;c[a+26]=0;Rm(a+27)}Tjb.X=1;function Vjb(a){q2(a);xe(a)}Vjb.X=1;function Wjb(a,d){var e,f;e=0;var g=a+1,h=(e|0)<(Tl(g)|0);a:do{if(h){for(var i=a+1;;){var j=p2(c[$X(i,e)]);f=j;0!=(j|0)&&2!=(ki(f)|0)&&Ti(f)&&to(f,d);e+=1;if((e|0)>=(Tl(g)|0)){break a}}}}while(0)}Wjb.X=1;function ot(a,d,e,f,g){var h=b;b+=3;var i=h+1,j=h+2;Tjb(a,d,e,g);c[a]=u2+2;c[a+45]=f;v2(a+47);Xjb(a+52);k[h]=0;k[i]=-10;k[j]=0;H(a+57,h,i,j);k[a+61]=0;c[a+64]=0;Yjb(a+65);c[a+70]=0;0!=(c[a+45]|0)?c[a+63]=0:(d=Ue(128,16),0==(d|0)?d=0:pI(d),c[a+45]=d,c[a+63]=1);d=Ue(68,16);0==(d|0)?d=0:dfb(d);c[a+46]=d;c[a+62]=1;b=h}ot.X=1;function q2(a){c[a]=u2+2;if(c[a+62]&1){var d=c[a+46];v[c[c[d]]](d);yh(c[a+46])}c[a+63]&1&&(d=c[a+45],v[c[c[d]]](d),yh(c[a+45]));Zjb(a+65);$jb(a+52);w2(a+47);aY(a)}q2.X=1;function akb(a){var d=b;b+=1;var e,f;jY(d,D.gf);LSa(a);e=0;0!=(v[c[c[a]+4]](a)|0)&&(f=v[c[c[a]+4]](a),0!=(v[c[c[f]+12]](f)&6144|0)&&(e=1));f=e&1;a:do{if(f){var g=v[c[c[a]+25]](a)-1;e=g;for(var h=a;;){if(!(0<=(g|0))){break a}Ft(a,v[c[c[h]+26]](a,e));e=g=e-1}}}while(0);e=0!=(v[c[c[a]+4]](a)|0);a:do{if(e&&(f=a,f=v[c[c[f]+4]](f),0!=(v[c[c[f]+12]](f)&3|0)&&(f=a,0!=(v[c[c[f]+4]](f)|0)&&(f=a,f=v[c[c[f]+4]](f),0!=(v[c[c[f]+12]](f)|0))))){f=0;for(var h=a+65,g=a+65,i=a+22;;){if((f|0)>=(x2(h)|0)){break a}var j=c[bkb(g,f)];v[c[c[j]+3]](j,c[i]);f+=1}}}while(0);kY(d);b=d}akb.X=1;function Ft(a,d){var e=b;b+=340;var f,g,h,i,j=e+16,l=e+20,m=e+24,n,p=e+28,r=e+44,s,t,w,x,y=e+60,z=e+64,A=e+68,C=e+72,B=e+73,K=e+74,E,G=e+75,M=e+91,L,F,I=e+107,R=e+111,O,Z=e+115,P=e+119,S=e+123,da=e+127,V=e+128,ba=e+129,$=e+130,Y=e+134,la=e+135,ka=e+136,ja,ea,ca=e+137,W=e+153,U=e+169,X=e+173,ma=e+177,ga=e+181,ha=e+185,ta=e+186,ra=e+187,ua,za=e+188,Za,ib=e+204,Ca=e+208,Sa,mb,Oa,Pa,fc=e+212,jb=e+216,La=e+217,fb=e+218,Rb=e+219,pb,Sb,ab,Ib,Fc,Ac,ob=e+223,Gc=e+227,Yc=e+231,Cc,Ub,Uc=e+235,nd=e+239,Ic=e+240,tc=e+241,hd=e+242,Tb=e+246,Jc=e+247,ub=e+248,uc=e+249,Kc=e+253,gb=e+257,gc=e+261,Lc=e+262,Dc=e+263,Eb,Ra=e+264,qb=e+280,Ab=e+296,hc=e+300,Hc=e+304,ic=e+305,db=e+306,bb=e+307,id=e+311,Zc=e+315,vb=e+316,rb=e+317,vc=e+318,Qc=e+322,Rc=e+323,Xd=e+324,Sc=e+325,Mc=e+329,$c,Cd,wc,Bb=e+333,fd=e+337,ad=e+338,wd=e+339,Kd=v[c[c[a]+4]](a);f=0!=(v[c[c[Kd]+12]](Kd)&2048|0)&1;var Rd=v[c[c[a]+4]](a);g=0!=(v[c[c[Rd]+12]](Rd)&4096|0)&1;h=Dp(d);var Ec=0>=h;do{if(!Ec){var xd=Cp(d);if(3==(xd|0)){i=d;eQ(e);var od=j,pd=i+74;c[od]=c[pd];k[od]=k[pd];c[od+1]=c[pd+1];k[od+1]=k[pd+1];c[od+2]=c[pd+2];k[od+2]=k[pd+2];c[od+3]=c[pd+3];k[od+3]=k[pd+3];vw(l,Io(i)+1,j);var bd=j,jd=l;c[bd]=c[jd];k[bd]=k[jd];c[bd+1]=c[jd+1];k[bd+1]=k[jd+1];c[bd+2]=c[jd+2];k[bd+2]=k[jd+2];c[bd+3]=c[jd+3];k[bd+3]=k[jd+3];pQ(e,j);var Ld=a,Gd=v[c[c[Ld]+4]](Ld);v[c[c[Gd]+14]](Gd,e,h);var Dd=j,fe=i+78;c[Dd]=c[fe];k[Dd]=k[fe];c[Dd+1]=c[fe+1];k[Dd+1]=k[fe+1];c[Dd+2]=c[fe+2];k[Dd+2]=k[fe+2];c[Dd+3]=c[fe+3];k[Dd+3]=k[fe+3];vw(m,Ho(i)+1,j);var ge=j,Hd=m;c[ge]=c[Hd];k[ge]=k[Hd];c[ge+1]=c[Hd+1];k[ge+1]=k[Hd+1];c[ge+2]=c[Hd+2];k[ge+2]=k[Hd+2];c[ge+3]=c[Hd+3];k[ge+3]=k[Hd+3];pQ(e,j);if(f&1){var he=a,Zd=v[c[c[he]+4]](he);v[c[c[Zd]+14]](Zd,e,h)}}else{if(4==(xd|0)){n=d;WW(p,Tu(n)+1,n+137);if(f&1){var $d=a,pg=v[c[c[$d]+4]]($d);v[c[c[pg]+14]](pg,p,h)}WW(r,Su(n)+1,n+153);xi(p,r);if(f&1){var Ze=a,Xg=v[c[c[Ze]+4]](Ze);v[c[c[Xg]+14]](Xg,p,h)}s=Vv(n);t=yv(n);if(s!=t&&(w=1,s>t&&(s=0,t=6.2831854820251465,w=0),g&1)){x=p+12;Jb(y,p,2);Jb(z,p,0);var Dh=a,wf=v[c[c[Dh]+4]](Dh),Oe=c[c[wf]+15];k[C]=0;k[B]=0;k[K]=0;H(A,C,B,K);v[Oe](wf,x,y,z,h,h,s,t,A,w&1,10)}}else{if(5==(xd|0)){E=d;WW(G,Mt(E)+1,E+74);if(f&1){var If=a,Ai=v[c[c[If]+4]](If);v[c[c[Ai]+14]](Ai,G,h)}WW(M,Lt(E)+1,E+90);xi(G,M);if(f&1){var qg=a,Yg=v[c[c[qg]+4]](qg);v[c[c[Yg]+14]](Yg,G,h)}if(g&1){L=h;F=6.0868353843688965;nv(I,E,F,L);vw(R,G,I);var Zg=I,Vf=R;c[Zg]=c[Vf];k[Zg]=k[Vf];c[Zg+1]=c[Vf+1];k[Zg+1]=k[Vf+1];c[Zg+2]=c[Vf+2];k[Zg+2]=k[Vf+2];c[Zg+3]=c[Vf+3];k[Zg+3]=k[Vf+3];O=0;for(var rg=Z,sg=P,om=a,mn=om,yl=a,tg=yl,$e=I,af=Z;;){F=6.283185005187988*(O|0)/32;nv(Z,E,F,L);vw(P,G,Z);c[rg]=c[sg];k[rg]=k[sg];c[rg+1]=c[sg+1];k[rg+1]=k[sg+1];c[rg+2]=c[sg+2];k[rg+2]=k[sg+2];c[rg+3]=c[sg+3];k[rg+3]=k[sg+3];var Wf=v[c[c[mn]+4]](om),Xf=c[c[Wf]+2];k[da]=0;k[V]=0;k[ba]=0;H(S,da,V,ba);v[Xf](Wf,I,Z,S);if(0==(O%4|0)){var ug=v[c[c[tg]+4]](yl),vg=c[c[ug]+2],rh=G+12;k[Y]=0;k[la]=0;k[ka]=0;H($,Y,la,ka);v[vg](ug,rh,Z,$)}c[$e]=c[af];k[$e]=k[af];c[$e+1]=c[af+1];k[$e+1]=k[af+1];c[$e+2]=c[af+2];k[$e+2]=k[af+2];c[$e+3]=c[af+3];k[$e+3]=k[af+3];var nn=O+1;O=nn;if(32<=(nn|0)){break}}ja=Ru(E);ea=Tt(E);var on=E;0<Zm(Lt(E))&1?(WW(ca,Lt(on)+1,E+90),xi(G,ca)):(WW(W,Mt(on)+1,E+74),xi(G,W));var $g=U,Eh=G+12;c[$g]=c[Eh];k[$g]=k[Eh];c[$g+1]=c[Eh+1];k[$g+1]=k[Eh+1];c[$g+2]=c[Eh+2];k[$g+2]=k[Eh+2];c[$g+3]=c[Eh+3];k[$g+3]=k[Eh+3];Jb(X,G,0);Jb(ma,G,1);var pn=a,$u=v[c[c[pn]+4]](pn),qja=c[c[$u]+15];k[ha]=0;k[ta]=0;k[ra]=0;H(ga,ha,ta,ra);v[qja]($u,U,X,ma,h,h,-ea-ja,-ea+ja,ga,1,10)}}else{if(9==(xd|0)||6==(xd|0)){ua=d;sQ(za,ua+267);if(f&1){var hC=a,iC=v[c[c[hC]+4]](hC);v[c[c[iC]+14]](iC,za,h)}xi(za,ua+283);if(f&1){var av=a,nr=v[c[c[av]+4]](av);v[c[c[nr]+14]](nr,za,h)}if(g&1){xi(za,ua+267);Za=ua+283+12;Jb(ib,za,2);Jb(Ca,za,0);Sa=k[CO(ua,1)];mb=k[CO(ua,1)+1];Oa=k[CO(ua,2)];Pa=k[CO(ua,2)+1];var bv=a,cv=v[c[c[bv]+4]](bv),rja=c[c[cv]+16];k[jb]=0;k[La]=0;k[fb]=0;H(fc,jb,La,fb);v[rja](cv,Za,ib,Ca,.8999999761581421*h,Sa,mb,Oa,Pa,fc,10);Jb(Rb,za,1);var Gn=Ca,Hn=Rb;c[Gn]=c[Hn];k[Gn]=k[Hn];c[Gn+1]=c[Hn+1];k[Gn+1]=k[Hn+1];c[Gn+2]=c[Hn+2];k[Gn+2]=k[Hn+2];c[Gn+3]=c[Hn+3];k[Gn+3]=k[Hn+3];pb=hP(ua,1);Sb=hP(ua,2);ab=td(pb);Ib=ud(pb);Fc=td(Sb);Ac=ud(Sb);k[ob]=ab*Fc*k[Ca]+ab*Ac*k[Ca+1]-Ib*k[Ca+2];k[ob+1]=-Ac*k[Ca]+Fc*k[Ca+1];k[ob+2]=Fc*Ib*k[Ca]+Ac*Ib*k[Ca+1]+ab*k[Ca+2];xi(za,ua+283);Jb(Yc,za,0);WP(Gc,Yc);Cc=k[CO(ua,0)];Ub=k[CO(ua,0)+1];if(Cc>Ub){var dmb=a,emb=v[c[c[dmb]+4]](dmb),wub=c[c[emb]+15];k[nd]=0;k[Ic]=0;k[tc]=0;H(Uc,nd,Ic,tc);v[wub](emb,Za,Gc,ob,h,h,-3.1415927410125732,3.1415927410125732,Uc,0,10)}else{if(Cc<Ub){var fmb=a,gmb=v[c[c[fmb]+4]](fmb),xub=c[c[gmb]+15];k[Tb]=0;k[Jc]=0;k[ub]=0;H(hd,Tb,Jc,ub);v[xub](gmb,Za,Gc,ob,h,h,Cc,Ub,hd,1,10)}}xi(za,ua+267);var In=uc,Jn=ua+169;c[In]=c[Jn];k[In]=k[Jn];c[In+1]=c[Jn+1];k[In+1]=k[Jn+1];c[In+2]=c[Jn+2];k[In+2]=k[Jn+2];c[In+3]=c[Jn+3];k[In+3]=k[Jn+3];var Kn=Kc,Ln=ua+169+4;c[Kn]=c[Ln];k[Kn]=k[Ln];c[Kn+1]=c[Ln+1];k[Kn+1]=k[Ln+1];c[Kn+2]=c[Ln+2];k[Kn+2]=k[Ln+2];c[Kn+3]=c[Ln+3];k[Kn+3]=k[Ln+3];var hmb=a,imb=v[c[c[hmb]+4]](hmb),yub=c[c[imb]+18];k[gc]=0;k[Lc]=0;k[Dc]=0;H(gb,gc,Lc,Dc);v[yub](imb,uc,Kc,za,gb)}}else{if(7==(xd|0)){Eb=d;sQ(Ra,Eb+207);if(f&1){var jmb=a,kmb=v[c[c[jmb]+4]](jmb);v[c[c[kmb]+14]](kmb,Ra,h)}xi(Ra,Eb+223);if(f&1){var lmb=a,mmb=v[c[c[lmb]+4]](lmb);v[c[c[mmb]+14]](mmb,Ra,h)}if(g&1){var nmb=Eb;sQ(qb,AT(Eb)?nmb+207:nmb+223);k[Hc]=aT(Eb);k[ic]=0;k[db]=0;H(hc,Hc,ic,db);vw(Ab,qb,hc);k[Zc]=cS(Eb);k[vb]=0;k[rb]=0;H(id,Zc,vb,rb);vw(bb,qb,id);var omb=a,pmb=v[c[c[omb]+4]](omb),zub=c[c[pmb]+2];k[Qc]=0;k[Rc]=0;k[Xd]=0;H(vc,Qc,Rc,Xd);v[zub](pmb,Ab,bb,vc);Jb(Sc,qb,0);Jb(Mc,qb,1);$c=eS(Eb);Cd=WR(Eb);wc=Eb+223+12;var qmb=a,rmb=v[c[c[qmb]+4]](qmb),Aub=c[c[rmb]+15];k[fd]=0;k[ad]=0;k[wd]=0;H(Bb,fd,ad,wd);v[Aub](rmb,wc,Sc,Mc,h,h,$c,Cd,Bb,1,10)}}}}}}}}while(0);b=e}Ft.X=1;function x2(a){return c[a+1]}x2.X=1;function bkb(a,d){return c[a+3]+d}bkb.X=1;function y2(a){return c[a+1]}y2.X=1;function z2(a,d){return c[a+3]+d}z2.X=1;function ckb(a){var d;d=0;var e=a+52,f=(d|0)<(y2(e)|0);a:do{if(f){for(var g=a+52;;){if(hn(c[z2(g,d)]),d+=1,(d|0)>=(y2(e)|0)){break a}}}}while(0)}ckb.X=1;function dkb(a){var d,e;d=0;var f=a+52,g=(d|0)<(y2(f)|0);a:do{if(g){for(var h=a+52;;){if(e=c[z2(h,d)],Ki(e)&&fo(e),d+=1,(d|0)>=(y2(f)|0)){break a}}}}while(0)}dkb.X=1;function ku(a,d){var e=b;b+=16;if(0!=(Un(d)|0)&&!Pi(d)){iZ(d+17,d+33,d+37,k[a+61]*oi(d),e);var f=Un(d);v[c[c[f]+3]](f,e)}b=e}ku.X=1;function Njb(a,d){$1=a;$2=d;ekb()}Njb.X=1;function Pjb(a,d){var e=b;b+=15;var f,g,h=e+1,i=e+5,j=e+6,l=e+7,m=e+8,n=e+12,p=e+13,r=e+14;jY(e,D.ff);f=0;var s=a+52,t=(f|0)<(y2(s)|0);a:do{if(t){for(var w=a+52;;){var x=c[z2(w,f)];g=x;if(0!=(x|0)){if(Tm(g,d),x=g,Vm(g)){var y=g;Pi(x)?Li(y,2):(1==(ki(y)|0)&&Li(g,3),2==(ki(g)|0)&&(k[i]=0,k[j]=0,k[l]=0,H(h,i,j,l),Dn(g,h),k[n]=0,k[p]=0,k[r]=0,H(m,n,p,r),co(g,m)))}else{4!=(ki(x)|0)&&Li(g,1)}}f+=1;if((f|0)>=(y2(s)|0)){break a}}}}while(0);kY(e);b=e}Pjb.X=1;function fkb(a,d){var e,f;e=a+57;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];e=0;var g=a+52,h=(e|0)<(y2(g)|0);a:do{if(h){for(var i=a+52;;){if(f=c[z2(i,e)],Ki(f)&&0==(Zn(f)&1|0)&&wo(f,d),e+=1,(e|0)>=(y2(g)|0)){break a}}}}while(0)}fkb.X=1;function gkb(a,d){var e=d+57;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}gkb.X=1;function hkb(a){var d=b;b+=1;var e,f;jY(d,D.le);var g=c[a+64]&1;a:do{if(g){e=0;for(var h=a+1,i=a+1;;){if((e|0)>=(Tl(h)|0)){break a}f=p2(c[$X(i,e)]);0!=(f|0)&&ku(a,f);e+=1}}else{e=0;h=a+52;for(i=a+52;;){if((e|0)>=(y2(h)|0)){break a}f=c[z2(i,e)];Ki(f)&&ku(a,f);e+=1}}}while(0);kY(d);b=d}hkb.X=1;function ikb(a,d,e,f){var g=b;b+=1;var h,i;Njb(a,d);jY(g,D.De);h=0;0!=(e|0)?(i=a+61,k[i]+=d,k[a+61]>=f&&(h=k[a+61]/f&-1,d=a+61,k[d]-=(h|0)*f)):(f=d,k[a+61]=d,e=j2(d)?h=0:h=1);0!=(v[c[c[a]+4]](a)|0)&&(d=v[c[c[a]+4]](a),c[Wm]=0!=(v[c[c[d]+12]](d)&16|0)&1);var j=0!=(h|0);a:do{if(j){d=(h|0)>(e|0)?e:h;v[c[c[a]+40]](a,f*(d|0));v[c[c[a]+41]](a);i=0;for(var l=a,m=a;;){if((i|0)>=(d|0)){break a}v[c[c[l]+39]](a,f);v[c[c[m]+19]](a);i+=1}}else{v[c[c[a]+19]](a)}}while(0);v[c[c[a]+29]](a);jkb();a=h;$7=1;kY(g);b=g;return a}ikb.X=1;function kkb(a,d){var e=b;b+=1;var f;jY(e,D.Oe);if(0!=(c[a+25]|0)){v[c[a+25]](a,d)}v[c[c[a]+34]](a,d);f=a+7;k[f]=d;c[f+1]=0;c[f+5]=v[c[c[a]+4]](a);v[c[c[a]+10]](a);if(c[a+7+4]&1){v[c[c[a]+36]](a,d)}v[c[c[a]+37]](a);k[a+27+3]=d;v[c[c[a]+38]](a,a+27);v[c[c[a]+35]](a,d);t2(a,d);Pjb(a,d);if(0!=(c[a+24]|0)){v[c[a+24]](a,d)}kY(e);b=e}kkb.X=1;function t2(a,d){var e=b;b+=1;var f;jY(e,D.Xe);f=0;for(var g=a+65,h=a+65;(f|0)<(x2(g)|0);){var i=c[bkb(h,f)];v[c[c[i]+2]](i,a,d);f+=1}kY(e);b=e}t2.X=1;function lkb(a,d,e,f){ZRa(a,d,e,f)}lkb.X=1;function mkb(a,d){var e;e=p2(d);if(0!=(e|0)){v[c[c[a]+22]](a,e)}else{cY(a,d)}}mkb.X=1;function nkb(a,d){var e=b;b+=1;c[e]=d;okb(a+52,e);cY(a,c[e]);b=e}nkb.X=1;function okb(a,d){var e;e=pkb(a,d);(e|0)<(y2(a)|0)&&(qkb(a,e,y2(a)-1),rkb(a))}okb.X=1;function skb(a,d){var e=b;b+=1;var f;c[e]=d;!Pi(c[e])&&0==(Zn(c[e])&1|0)&&wo(c[e],a+57);0!=(Xn(c[e])|0)&&(ai(c[e])?Li(c[e],2):tkb(a+52,e),f=((ai(c[e])?1:Ti(c[e]))^1)&1,v[c[c[a]+8]](a,c[e],f&1?1:2,f&1?-1:-3));b=e}skb.X=1;function tkb(a,d){(y2(a)|0)==(ukb(a)|0)&&vkb(a,wkb(a,y2(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}tkb.X=1;function xkb(a,d,e,f){var g=b;b+=1;c[g]=d;!Pi(c[g])&&0==(Zn(c[g])&1|0)&&wo(c[g],a+57);0!=(Xn(c[g])|0)&&(ai(c[g])?Li(c[g],2):tkb(a+52,g),v[c[c[a]+8]](a,c[g],e,f));b=g}xkb.X=1;function ykb(a,d,e){var f=b;b+=1;c[f]=d;d=e&1;A2(a+47,f);d&1&&(En(Io(c[f]),c[f]),En(Ho(c[f]),c[f]));b=f}ykb.X=1;function A2(a,d){(Qo(a)|0)==(zkb(a)|0)&&Akb(a,Bkb(a,Qo(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}A2.X=1;function Ckb(a,d){var e=b;b+=1;c[e]=d;Dkb(a+47,e);ao(Io(c[e]),c[e]);ao(Ho(c[e]),c[e]);b=e}Ckb.X=1;function Dkb(a,d){var e;e=Ekb(a,d);(e|0)<(Qo(a)|0)&&(Fkb(a,e,Qo(a)-1),Gkb(a))}Dkb.X=1;function Hkb(a,d){var e=b;b+=1;c[e]=d;Ikb(a+65,e);b=e}Hkb.X=1;function Ikb(a,d){(x2(a)|0)==(Jkb(a)|0)&&Kkb(a,Lkb(a,x2(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}Ikb.X=1;function Mkb(a,d){var e=b;b+=1;c[e]=d;Nkb(a+65,e);b=e}Mkb.X=1;function Nkb(a,d){var e;e=Okb(a,d);(e|0)<(x2(a)|0)&&(Pkb(a,e,x2(a)-1),Qkb(a))}Nkb.X=1;function Rkb(a,d){v[c[c[a]+15]](a,d)}Rkb.X=1;function Skb(a,d){v[c[c[a]+16]](a,d)}Skb.X=1;function Tkb(a,d){v[c[c[a]+15]](a,d)}Tkb.X=1;function Ukb(a,d){v[c[c[a]+16]](a,d)}Ukb.X=1;function Vkb(a,d,e){var f,g;f=Qo(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(Qo(a)|0)&&Akb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}Vkb.X=1;function Wkb(a){1<(Qo(a)|0)&&B2(a,0,Qo(a)-1)}Wkb.X=1;function Xkb(a){var d=b;b+=3;var e=d+1,f=d+2;if(0<(Qo(a+18)+AX(a+13)|0)){var g=c[a+2];v[c[c[g]+3]](g,$X(a+8,0),Tl(a+8),ZX(a+13,0),AX(a+13),vo(a+18,0),Qo(a+18),c[a+1],c[a+5],c[a+6],c[a+7])}c[d]=0;sfb(a+8,0,d);c[e]=0;PY(a+13,0,e);c[f]=0;Vkb(a+18,0,f);b=d}Xkb.X=1;function Ykb(a,d){var e=b;b+=30;var f=e+1,g=e+6,h=e+7;jY(e,D.lf);v2(f);var i=Qo(a+47);c[g]=0;Vkb(f,i,g);g=0;for(i=a+47;(g|0)<(v[c[c[a]+25]](a)|0);){c[vo(f,g)]=c[vo(i,g)],g+=1}Wkb(f);g=0!=(v[c[c[a]+25]](a)|0)?vo(f,0):0;Zkb(h,d,c[a+45],g,Qo(f),c[a+22],c[a+20],c[a+6]);g=c[a+45];i=Sk(a);v[c[c[g]+2]](g,Sl(a),v[c[c[i]+9]](i));yfb(c[a+46],Sk(a),a,h);Xkb(h);g=c[a+45];v[c[c[g]+4]](g,d,c[a+22],c[a+20]);C2(h);w2(f);kY(e);b=e}Ykb.X=1;function $kb(a){return c[a+45]}$kb.X=1;function alb(){}alb.X=1;function blb(a,d){var e=b;b+=1;var f,g;jY(e,D.$d);f=0;var h=a+52,i=(f|0)<(y2(h)|0);a:do{if(i){for(var j=a+52;;){if(g=c[z2(j,f)],Pi(g)||(Fn(g,d),Ro(g,d),Bn(g,d,g+17)),f+=1,(f|0)>=(y2(h)|0)){break a}}}}while(0);kY(e);b=e}blb.X=1;function clb(a,d){c[a+63]&1&&yh(c[a+45]);c[a+63]=0;c[a+45]=d}clb.X=1;function dlb(a){return Qo(a+47)}dlb.X=1;function elb(a,d){return c[vo(a+47,d)]}elb.X=1;function flb(a){var d=b;b+=1;var e,f,g,h;jY(d,D.qf);e=Kt(a);v[c[c[e]+2]](e,a,Sk(a));f=Qo(a+47);e=0;var i=(e|0)<(f|0);a:do{if(i){for(var j=a+47;;){if(g=c[vo(j,e)],h=Io(g),g=Ho(g),0!=(h|0)&&!Pi(h)&&0!=(g|0)&&!Pi(g)&&(Ki(h)||Ki(g))&&jfb(Kt(a)+1,Uh(h),Uh(g)),e+=1,(e|0)>=(f|0)){break a}}}}while(0);e=Kt(a);v[c[c[e]+3]](e,a);kY(d);b=d}flb.X=1;function glb(a,d){var e=b;b+=76;var f,g=e+1,h,i,j,l=e+17,m=e+21,n=e+22,p=e+47,r=e+60,s;jY(e,D.xf);h=0;for(var t=a+52,w=a+52,x=n+22,y=n+2,z=n+3,A=n+1,C=n+1,B=n+20,K=n+16,E=n+12;(h|0)<(y2(t)|0);){i=c[z2(w,h)];Zh(i,1);var G=Ki(i);a:do{if(G&&!Pi(i)){Bn(i,d,g);N(l,g+12,i+1+12);j=Um(l);var M=c[a+7+4]&1;do{if(M&&0!=gi(i)&&gi(i)<j){jY(m,D.Bf);if(xf(Xn(i))){c[D2]+=1;f=i+1+12;var L=g+12,F=am(a),F=v[c[c[F]+9]](F);hlb(n,i,f,L,F,Sk(a));hW(p,pi(i));k[x]=k[a+7+9];c[y]=c[Wn(i)+1];c[z]=c[Wn(i)+2];sQ(r,g);Wb(r,i+1);Rl(a,p,i+1,r,n,0);cz(n)?1>k[A]?(Zh(i,k[C]),Bn(i,d*oi(i),g),Zh(i,0),kn(i,g),$appliedImpulse=0,$appliedImpulse=Ejb(i,c[B],K,E,a+27,0),s=4,f=19):f=18:f=18;18==f&&(s=0);f=0==(s|0)?21:22}else{f=21}21==f&&(s=0);kY(m);if(4==(s|0)){break a}}}while(0);kn(i,g)}}while(0);h+=1}kY(e);b=e}glb.X=1;function ilb(a,d){var e=b;b+=134;var f=e+1,g,h,i,j=e+17,l=e+21,m=e+22,n=e+47,p=e+60,r,s=e+76,t=e+81,w=e+121,x=e+125,y=e+126,z=e+130;jY(e,D.Od);g=0;for(var A=a+52,C=a+52,B=m+2,K=m+3,E=m+1,G=m+20,M=m+23,L=m+20,F=m+1,I=m+16,R=m+12;(g|0)<(y2(A)|0);){h=c[z2(C,g)];Zh(h,1);if(Ki(h)&&!Pi(h)&&(Bn(h,d,f),N(j,f+12,h+1+12),i=Um(j),0!=gi(h)&&gi(h)<i)){jY(l,D.Ud);if(xf(Xn(h))){c[D2]+=1;i=h+1+12;r=f+12;var O=am(a),O=v[c[c[O]+9]](O);hlb(m,h,i,r,O,Sk(a));hW(n,pi(h));c[B]=c[Wn(h)+1];c[K]=c[Wn(h)+2];xi(p,f);Wb(p,h+1);Rl(a,n,h+1,p,m,0);cz(m)&&1>k[E]&&(i=ci(h),r=ci(c[G]),O=c[M],i=v[c[c[O]+13]](O,i,r),0!=(i|0)&&0!=(c[i+2]|0)&&(XX(s),i=c[i+2],v[c[c[i]+4]](i,s),0!=(AX(s)|0)&&(AI(t,h,c[L]),fI(t,c[ZX(s,0)]),N(w,p+12,h+1+12),LC(w,F),i=Um(w),k[x]=0,c[y]=c[I],k[y]=k[I],c[y+1]=c[I+1],k[y+1]=k[I+1],c[y+2]=c[I+2],k[y+2]=k[I+2],c[y+3]=c[I+3],k[y+3]=k[I+3],1.1920928955078125e-7<i&&(k[x]=ec(i),JC(y,w),KB(w,x)),($j(c[ZX(s,0)])|0)==(h|0)?p0(t,R,y,k[x]):(WP(z,R),p0(t,z,y,k[x]))),TX(s)))}kY(l)}g+=1}kY(e);b=e}ilb.X=1;function jlb(){return 2}jlb.X=1;function klb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}klb.X=1;function Lkb(a,d){$1=a;return 0!=(d|0)?d<<1:1}Lkb.X=1;function llb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}llb.X=1;function mlb(a,d){return c[a+3]+d}mlb.X=1;function Fkb(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}Fkb.X=1;function nlb(a){return c[a+7]}nlb.X=1;function olb(a){return c[a+8]}olb.X=1;function zkb(a){return c[a+2]}zkb.X=1;function plb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}plb.X=1;function Pkb(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}Pkb.X=1;function Qkb(a){a+=1;c[a]-=1}Qkb.X=1;function Jkb(a){return c[a+2]}Jkb.X=1;function qlb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}qlb.X=1;function rlb(a,d){return c[mlb(a+47,d)]}rlb.X=1;function slb(a,d){var e,f,g,h;e=0;var i=a+1,j=(e|0)<(Tl(i)|0);a:do{if(j){for(var l=a+1;;){f=c[$X(l,e)];if(0!=(ji(f)&2|0)){g=f;g=v[c[c[g]+4]](g);h=d;g=v[c[c[h]+4]](h,g,1);h=f;h=v[c[c[h]+5]](h,c[g+2],d);var m=d;v[c[c[m]+5]](m,g,h,1497645650,f)}e+=1;if((e|0)>=(Tl(i)|0)){break a}}}}while(0);e=0;i=a+47;j=(e|0)<(Qo(i)|0);a:do{if(j){for(l=a+47;;){if(g=f=c[vo(l,e)],g=v[c[c[g]+9]](g),h=d,g=v[c[c[h]+4]](h,g,1),h=f,h=v[c[c[h]+10]](h,c[g+2],d),m=d,v[c[c[m]+5]](m,g,h,1397641027,f),e+=1,(e|0)>=(Qo(i)|0)){break a}}}}while(0)}slb.X=1;function tlb(a,d){v[c[c[d]+8]](d);slb(a,d);TSa(a,d);v[c[c[d]+9]](d)}tlb.X=1;function B2(a,d,e){var f=b;b+=1;var g,h,i;g=d;h=e;i=c[c[a+3]+((e+d|0)/2&-1)];for(var j=a+3,l=a+3;;){if(E2(f,c[c[j]+g],i)){g+=1}else{var m=E2(f,i,c[c[l]+h]);a:do{if(m){for(;;){if(h-=1,!E2(f,i,c[c[l]+h])){break a}}}}while(0);(g|0)<=(h|0)&&(Fkb(a,g,h),g+=1,h-=1);if(!((g|0)<=(h|0))){break}}}(d|0)<(h|0)&&B2(a,d,h);(g|0)<(e|0)&&B2(a,g,e);b=f}B2.X=1;function E2(a,d,e){$1=a;return(F2(d)|0)<(F2(e)|0)}E2.X=1;function F2(a){var d;d=nlb(a);a=olb(a);return 0<=(Uh(d)|0)?Uh(d):Uh(a)}F2.X=1;function Akb(a,d){var e;(zkb(a)|0)<(d|0)&&(e=ulb(a,d),plb(a,0,Qo(a),e),klb(a,0,Qo(a)),vlb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Akb.X=1;function ulb(a,d){return 0!=(d|0)?wlb(a,d,0):0}ulb.X=1;function vlb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&xlb(a,c[a+3]),c[a+3]=0)}vlb.X=1;function xlb(a,d){$1=a;yh(d)}xlb.X=1;function wlb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}wlb.X=1;function Okb(a,d){var e,f;e=x2(a);f=0;for(var g=a+3;(f|0)<(x2(a)|0);){var h=f;if((c[c[g]+f]|0)==(c[d]|0)){e=h;break}f=h+1}return e}Okb.X=1;function Kkb(a,d){var e;(Jkb(a)|0)<(d|0)&&(e=ylb(a,d),qlb(a,0,x2(a),e),llb(a,0,x2(a)),zlb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Kkb.X=1;function ylb(a,d){return 0!=(d|0)?Alb(a,d,0):0}ylb.X=1;function zlb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Blb(a,c[a+3]),c[a+3]=0)}zlb.X=1;function Blb(a,d){$1=a;yh(d)}Blb.X=1;function Bkb(a,d){$1=a;return 0!=(d|0)?d<<1:1}Bkb.X=1;function wkb(a,d){$1=a;return 0!=(d|0)?d<<1:1}wkb.X=1;function Clb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Clb.X=1;function Gkb(a){a+=1;c[a]-=1}Gkb.X=1;function ukb(a){return c[a+2]}ukb.X=1;function Dlb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Dlb.X=1;function qkb(a,d,e){var f;f=c[c[a+3]+d];c[c[a+3]+d]=c[c[a+3]+e];c[c[a+3]+e]=f}qkb.X=1;function rkb(a){a+=1;c[a]-=1}rkb.X=1;function Yjb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Yjb.X=1;function Xjb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Xjb.X=1;function v2(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}v2.X=1;function Alb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}Alb.X=1;function Ekb(a,d){var e,f;e=Qo(a);f=0;for(var g=a+3;(f|0)<(Qo(a)|0);){var h=f;if((c[c[g]+f]|0)==(c[d]|0)){e=h;break}f=h+1}return e}Ekb.X=1;function vkb(a,d){var e;(ukb(a)|0)<(d|0)&&(e=Elb(a,d),Dlb(a,0,y2(a),e),Clb(a,0,y2(a)),Flb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}vkb.X=1;function Elb(a,d){return 0!=(d|0)?Glb(a,d,0):0}Elb.X=1;function Flb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Hlb(a,c[a+3]),c[a+3]=0)}Flb.X=1;function Hlb(a,d){$1=a;yh(d)}Hlb.X=1;function Glb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}Glb.X=1;function pkb(a,d){var e,f;e=y2(a);f=0;for(var g=a+3;(f|0)<(y2(a)|0);){var h=f;if((c[c[g]+f]|0)==(c[d]|0)){e=h;break}f=h+1}return e}pkb.X=1;function Zjb(a){llb(a,0,x2(a));zlb(a);Yjb(a)}Zjb.X=1;function $jb(a){Clb(a,0,y2(a));Flb(a);Xjb(a)}$jb.X=1;function w2(a){klb(a,0,Qo(a));vlb(a);v2(a)}w2.X=1;function hlb(a,d,e,f,g,h){fV(a,e,f);c[a]=Ilb+2;c[a+21]=d;k[a+22]=0;c[a+23]=g;c[a+24]=h}hlb.X=1;function Jlb(a){xe(a)}Jlb.X=1;function Klb(a,d){var e;(c[d]|0)==(c[a+21]|0)?e=0:oLa(a,d)?(e=c[a+24],e=v[c[c[e]+7]](e,c[a+21],c[d])?1:0):e=0;return e}Klb.X=1;function Llb(a,d,e){var f=b;b+=23;var g=f+4,h=f+8,i=f+12,j=f+16,l=f+17,m=f+18,n=f+19,e=e&1;(c[d]|0)==(c[a+21]|0)?a=1:li(c[d])?(N(h,a+8,a+4),c[f]=c[h],k[f]=k[h],c[f+1]=c[h+1],k[f+1]=k[h+1],c[f+2]=c[h+2],k[f+2]=k[h+2],c[f+3]=c[h+3],k[f+3]=k[h+3],k[j]=0,k[l]=0,k[m]=0,H(i,j,l,m),c[g]=c[i],k[g]=k[i],c[g+1]=c[i+1],k[g+1]=k[i+1],c[g+2]=c[i+2],k[g+2]=k[i+2],c[g+3]=c[i+3],k[g+3]=k[i+3],N(n,f,g),a=J(d+2,n)>=-k[a+22]?1:DW(a,d,e&1)):a=1;b=f;return a}Llb.X=1;function Mlb(a){C2(a);xe(a)}Mlb.X=1;function C2(a){c[a]=G2+2;w2(a+18);TX(a+13);TW(a+8)}C2.X=1;function Nlb(){}Nlb.X=1;function Olb(){}Olb.X=1;function Plb(){return 0}Plb.X=1;function Qlb(){return 0}Qlb.X=1;function Rlb(){return 0}Rlb.X=1;function Slb(){}Slb.X=1;function Tlb(){}Tlb.X=1;function Ulb(){}Ulb.X=1;function Vlb(){}Vlb.X=1;function Wlb(a){c[a]=Xlb+2}Wlb.X=1;function cx(a,d){var e;k[a]>k[a+1]?e=c[a+14]=0:d<k[a]?(c[a+14]=1,k[a+12]=d-k[a],e=1):(e=a+14,d>k[a+1]?(c[e]=2,k[a+12]=d-k[a+1],e=2):e=c[e]=0);return e}cx.X=1;function Ylb(a,d,e,f,g,h){var i,j,l,m=0>(h|0);do{if(m){0!=(c[a+4]+g|0)&&(i=c[a+2],v[c[c[i]+3]](i,d,e,f,g,c[a+3],c[a+4],c[a+1],c[a+5],c[a+6],c[a+7]))}else{l=j=i=0;for(var n=a+4,p=a+3;(l|0)<(c[n]|0);){var r=l;if((F2(c[c[p]+l])|0)==(h|0)){i=c[a+3]+r;break}l=r+1}n=a+4;p=(l|0)<(c[n]|0);a:do{if(p){for(r=a+3;;){if((F2(c[c[r]+l])|0)==(h|0)&&(j+=1),l+=1,(l|0)>=(c[n]|0)){break a}}}}while(0);if(1>=(c[c[a+1]+17]|0)){0!=(j+g|0)&&(l=c[a+2],v[c[c[l]+3]](l,d,e,f,g,i,j,c[a+1],c[a+5],c[a+6],c[a+7]))}else{l=0;n=(l|0)<(e|0);a:do{if(n){for(p=a+8;;){if(OW(p,d+l),l+=1,(l|0)>=(e|0)){break a}}}}while(0);l=0;n=(l|0)<(g|0);a:do{if(n){for(p=a+13;;){if(CX(p,f+l),l+=1,(l|0)>=(g|0)){break a}}}}while(0);l=0;n=(l|0)<(j|0);p=a+18;a:do{if(n){for(;;){if(A2(p,i+l),l+=1,(l|0)>=(j|0)){break a}}}}while(0);(AX(a+13)+Qo(p)|0)>(c[c[a+1]+17]|0)&&Xkb(a)}}}while(0)}Ylb.X=1;function Zkb(a,d,e,f,g,h,i,j){Wlb(a);c[a]=G2+2;c[a+1]=d;c[a+2]=e;c[a+3]=f;c[a+4]=g;c[a+5]=h;c[a+6]=i;c[a+7]=j;JW(a+8);XX(a+13);v2(a+18)}Zkb.X=1;function Zlb(){}Zlb.X=1;function $lb(a){xe(a)}$lb.X=1;function amb(a){aY(a)}amb.X=1;function bmb(a){aY(a);xe(a)}bmb.X=1;function AO(a,d,e,f,g,h){h&=1;g2(a,6,d,e);c[a]=H2+2;sQ(a+11,f);sQ(a+27,g);GM(a+169);d=a+218;ax(d);d+=16;ax(d);ax(d+16);c[a+326]=h&1;c[a+327]=1;c[a+328]=0;c[a+329]=0;$O(a)}AO.X=1;function $O(a){aP(a,c[a+7]+1,c[a+8]+1)}$O.X=1;function yO(a,d,e,f){var g=b;b+=16;f&=1;I2();g2(a,6,J2,d);c[a]=H2+2;sQ(a+27,e);GM(a+169);e=a+218;ax(e);e+=16;ax(e);ax(e+16);c[a+326]=f&1;c[a+327]=1;c[a+328]=0;c[a+329]=0;WW(g,d+1,a+27);xi(a+11,g);$O(a);b=g}yO.X=1;function K2(a,d){return k[((d|0)%3<<2)+a+((d|0)/3&-1)]}K2.X=1;function cmb(a,d){var e;e=K2(a,2);1>e?-1<e?(e=ee(-K2(a,5),K2(a,8)),k[d]=e,e=ie(K2(a,2)),k[d+1]=e,e=ee(-K2(a,1),K2(a,0)),k[d+2]=e,e=1):(e=-ee(K2(a,3),K2(a,4)),k[d]=e,k[d+1]=-1.5707963705062866,e=k[d+2]=0):(e=ee(K2(a,3),K2(a,4)),k[d]=e,k[d+1]=1.5707963705062866,e=k[d+2]=0);return e}cmb.X=1;function xw(a,d,e,f,g,h){var i=b;b+=43;var j,l,m=i+4,n=i+8,p=i+12,r=i+16,s=i+17,t=i+21,w=i+25,x=i+26,y=i+27,z=i+28,A=i+32,C=i+36,B=i+37,K=i+38,E=i+39;0==(Mv(a)&1|0)?a=0:(j=k[a+2],l=k[a+3],0!=(c[a+14]|0)&&(j=-k[a+8]*k[a+12]/d,l=k[a+4]),l*=d,Oo(g,i),Oo(h,m),N(p,i,m),c[n]=c[p],k[n]=k[p],c[n+1]=c[p+1],k[n+1]=k[p+1],c[n+2]=c[p+2],k[n+2]=k[p+2],c[n+3]=c[p+3],k[n+3]=k[p+3],d=J(e,n),j=k[a+6]*(j-k[a+5]*d),1.1920928955078125e-7>j&-1.1920928955078125e-7<j?a=0:(f*=(k[a+10]+1)*j,j=l,k[r]=0<f?f>j?l:f:f<-j?-l:f,l=k[a+15],f=l+k[r],k[a+15]=0xde0b6b000000000<f?0:-0xde0b6b000000000>f?0:f,k[r]=k[a+15]-l,Q(s,e,r),k[w]=0,k[x]=0,k[y]=0,H(t,w,x,y),Bo(z,g+64,e),ho(g,t,z,k[r]),k[C]=0,k[B]=0,k[K]=0,H(A,C,B,K),Bo(E,h+64,e),ho(h,A,E,-k[r]),a=k[r]));b=i;return a}xw.X=1;function CM(a,d,e){var f,g;f=k[a+d];g=k[a+4+d];f>g?(c[a+(d+46)]=0,a=k[a+38+d]=0):e<f?(c[a+(d+46)]=2,k[a+38+d]=e-f,a=2):(f=a+(d+46),e>g?(c[f]=1,k[a+38+d]=e-g,a=1):(c[f]=0,a=k[a+38+d]=0));return a}CM.X=1;function QM(a,d,e,f,g,h,i,j,l,m){var n=b;b+=55;var p,r,s=n+4;p=n+8;var t=n+12,w=n+16,x;x=n+20;var y=n+24,z=n+25,A=n+29,C=n+33,B=n+37,K=n+41,E=n+42,G=n+46,M=n+50,L=n+51;N(n,m,f+1+12);N(s,m,h+1+12);vn(f,n,p);vn(h,s,t);N(w,p,t);m=J(l,w);N(x,g,i);x=-J(x,l);g=-0xde0b6b000000000;i=0xde0b6b000000000;p=k[a+j];t=k[a+4+j];p<t?x>t?(x-=t,g=0,p=8):x<p?(x-=p,i=0,p=8):(r=0,p=11):p=8;8==p&&(k[y]=k[a+12]*(k[a+14]*x/d-k[a+13]*m)*e,d=k[a+8+j],e=d+k[y],k[a+8+j]=e>i?0:e<g?0:e,k[y]=k[a+8+j]-d,Q(z,l,y),qn(A,n,l),qn(C,s,l),k[K]=Zm(f),Q(B,l,K),Bo(E,f+64,A),ho(f,B,E,k[y]),k[M]=Zm(h),Q(G,l,M),Bo(L,h+64,C),ho(h,G,L,-k[y]),r=k[y]);b=n;return r}QM.X=1;function smb(a){var d=b;b+=44;var e=d+12,f=d+24,g=d+28,h=d+32,i=d+36,j=d+40;Bc(e,a+267);ww(d,e,a+283);cmb(d,a+299);Jb(f,a+283,0);Jb(g,a+267,2);qn(h,g,f);e=a+307;c[e]=c[h];k[e]=k[h];c[e+1]=c[h+1];k[e+1]=k[h+1];c[e+2]=c[h+2];k[e+2]=k[h+2];c[e+3]=c[h+3];k[e+3]=k[h+3];qn(i,a+307,g);g=a+303;c[g]=c[i];k[g]=k[i];c[g+1]=c[i+1];k[g+1]=k[i+1];c[g+2]=c[i+2];k[g+2]=k[i+2];c[g+3]=c[i+3];k[g+3]=k[i+3];qn(j,f,a+307);f=a+311;c[f]=c[j];k[f]=k[j];c[f+1]=c[j+1];k[f+1]=k[j+1];c[f+2]=c[j+2];k[f+2]=k[j+2];c[f+3]=c[j+3];k[f+3]=k[j+3];IB(a+303);IB(a+307);IB(a+311);b=d}smb.X=1;function aP(a,d,e){var f=b;b+=32;var g=f+16;WW(f,d,a+11);xi(a+267,f);WW(g,e,a+27);xi(a+283,g);tmb(a);smb(a);c[a+327]&1&&(e=Zm(Io(a)),d=Zm(Ho(a)),c[a+321]=(1.1920928955078125e-7>e?1:1.1920928955078125e-7>d)&1,e+=d,k[a+319]=0<e?d/e:.5,k[a+320]=1-k[a+319]);b=f}aP.X=1;function tmb(a){var d=b;b+=20;var e=d+4,f=d+8;N(d,a+283+12,a+267+12);var g=a+315;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];Bc(f,a+267);Bo(e,f,a+315);f=a+315;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];for(var e=0,f=a+315,g=a+211,h=a+169,a=a+315;;){k[g+e]=k[f+e];CM(h,e,k[a+e]);var i=e+1,e=i;if(3<=(i|0)){break}}b=d}tmb.X=1;function umb(a,d,e,f,g){var h=b;b+=32;var i=h+12,j=h+24,l=h+28;0!=(d|0)&&(ue(h,c[a+7]+1),ue(i,c[a+8]+1),N(j,f,c[a+7]+1+12),N(l,g,c[a+8]+1+12),GL(d,h,i,j,l,e,c[a+7]+97,Zm(c[a+7]),c[a+8]+97,Zm(c[a+8])));b=h}umb.X=1;function vmb(a,d,e){var f=b;b+=24;var g=f+12;0!=(d|0)&&(ue(f,c[a+7]+1),ue(g,c[a+8]+1),DL(d,e,f,g,c[a+7]+97,c[a+8]+97));b=f}vmb.X=1;function pP(a,d){var e;e=k[a+299+d];e=wmb(e,k[(d<<4)+a+218],k[(d<<4)+a+219]);k[(d<<4)+a+231]=e;cx((d<<4)+a+218,e);return Mv((d<<4)+a+218)}pP.X=1;function VO(a,d){c[d]=c[a+329]&1?0:6;c[d+1]=0}VO.X=1;function wmb(a,d,e){d>=e||(a<d?(d=VW(eP(d-a)),a=d<VW(eP(e-a))?a:a+6.2831854820251465):a>e&&(e=VW(eP(a-e)),a=VW(eP(a-d))<e?a-6.2831854820251465:a));return a}wmb.X=1;function xmb(a){var d=b;b+=27;var e=d+1,f=d+2,g,h=d+3,i=d+7,j=d+11,l=d+15,m=d+19,n=d+23,p=c[a+329]&1;a:do{if(p){k[d]=0;k[e]=0;k[f]=0;pe(a+177,d,e,f);g=0;for(var r=a+218;;){k[(g<<4)+r+15]=0;var s=g+1;g=s;if(3<=(s|0)){break}}aP(a,c[a+7]+1,c[a+8]+1);v[c[c[a]+11]](a);g=h;r=a+322;c[g]=c[r];k[g]=k[r];c[g+1]=c[r+1];k[g+1]=k[r+1];c[g+2]=c[r+2];k[g+2]=k[r+2];c[g+3]=c[r+3];k[g+3]=k[r+3];g=i;r=a+322;c[g]=c[r];k[g]=k[r];c[g+1]=c[r+1];k[g+1]=k[r+1];c[g+2]=c[r+2];k[g+2]=k[r+2];c[g+3]=c[r+3];k[g+3]=k[r+3];g=0;for(var r=a+169,s=a+326,t=a+267,w=j,x=l,y=a+43,z=a+283,A=j,C=m;;){MM(r,g)&&(c[s]&1?(Jb(l,t,g),c[w]=c[x],k[w]=k[x],c[w+1]=c[x+1],k[w+1]=k[x+1],c[w+2]=c[x+2],k[w+2]=k[x+2],c[w+3]=c[x+3],k[w+3]=k[x+3]):(Jb(m,z,g),c[A]=c[C],k[A]=k[C],c[A+1]=c[C+1],k[A+1]=k[C+1],c[A+2]=c[C+2],k[A+2]=k[C+2],c[A+3]=c[C+3],k[A+3]=k[C+3]),umb(a,y+21*g,j,h,i));var B=g+1;g=B;if(3<=(B|0)){break}}g=0;r=j;s=n;for(t=a+106;;){if(pP(a,g)&&(PO(n,a,g),c[r]=c[s],k[r]=k[s],c[r+1]=c[s+1],k[r+1]=k[s+1],c[r+2]=c[s+2],k[r+2]=k[s+2],c[r+3]=c[s+3],k[r+3]=k[s+3],vmb(a,t+21*g,j)),g=w=g+1,3<=(w|0)){break a}}}}while(0);b=d}xmb.X=1;function PO(a,d,e){d=(e<<2)+d+303;c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];c[a+2]=c[d+2];k[a+2]=k[d+2];c[a+3]=c[d+3];k[a+3]=k[d+3]}PO.X=1;function ymb(a,d){var e,f=c[a+329]&1;a:do{if(f){c[d]=0,c[d+1]=0}else{aP(a,c[a+7]+1,c[a+8]+1);c[d]=0;c[d+1]=6;e=0;for(var g=a+169;;){if(VL(g,e)){var h=d;c[h]+=1;h=d+1;c[h]-=1}e=h=e+1;if(3<=(h|0)){break}}for(e=0;;){if(pP(a,e)&&(g=d,c[g]+=1,g=d+1,c[g]-=1),e=g=e+1,3<=(g|0)){break a}}}}while(0)}ymb.X=1;function zmb(a,d){var e,f,g,h,i,j;e=c[a+7]+1;f=c[a+8]+1;g=c[a+7]+76;h=c[a+8]+76;i=c[a+7]+80;j=c[a+8]+80;c[a+327]&1?L2(a,d,M2(a,d,0,e,f,g,h,i,j),e,f,g,h,i,j):M2(a,d,L2(a,d,0,e,f,g,h,i,j),e,f,g,h,i,j)}zmb.X=1;function M2(a,d,e,f,g,h,i,j,l){var m=b;b+=4;var n,p;n=0;for(var r=a+328,s=a+218,t=a+218,w=a+218;!(Mv(CO(a,n))&&(PO(m,a,n),p=c[r]>>3*(n+3),0==(p&1|0)&&(k[(n<<4)+w+7]=k[c[d+8]]),0==(p&2|0)&&(k[(n<<4)+t+9]=k[c[d+8]]),0==(p&4|0)&&(k[(n<<4)+s+8]=k[d+1]),e+=cP(a,CO(a,n),f,g,h,i,j,l,d,e,m,1,0)),n=p=n+1,3<=(p|0));){}b=m;return e}M2.X=1;function L2(a,d,e,f,g,h,i,j,l){var m=b;b+=20;var n,p=m+16,r,s;ax(m);n=0;for(var t=a+169,w=m+10,x=a+215,y=m+14,z=a+211,A=m+13,C=a+207,B=m+12,K=a+182,E=m+5,G=a+196,M=m+11,L=a+173,F=m+1,I=a+181,R=m+6,O=a+169,Z=m+4,P=a+203,S=m+3,da=a+199,V=m+2,ba=a+267,$=a+328,Y=a+184,la=m+7,ka=a+192,ja=m+9,ea=a+188,ca=m+8,W=a+327,U=a+218,X=a+218;!(VL(t,n)&&(k[w]=0,c[y]=c[x+n],k[A]=k[z+n],k[B]=k[C+n],k[E]=k[K],c[M]=c[G+n]&1,k[F]=k[L+n],k[R]=k[I],k[m]=k[O+n],k[Z]=0,k[S]=k[P+n],k[V]=k[da+n],Jb(p,ba,n),r=c[$]>>3*n,k[la]=0!=(r&1|0)?k[Y+n]:k[c[d+8]],k[ja]=0!=(r&2|0)?k[ka+n]:k[c[d+8]],k[ca]=0!=(r&4|0)?k[ea+n]:k[d+1],c[W]&1?(r=(n+2|0)%3,s=1,0!=(c[((n+1)%3<<4)+U+14]|0)&&0!=(c[(r<<4)+X+14]|0)&&(s=0),e+=cP(a,m,f,g,h,i,j,l,d,e,p,0,s)):e+=cP(a,m,f,g,h,i,j,l,d,e,p,0,0)),n=r=n+1,3<=(r|0));){}b=m;return e}L2.X=1;function wO(a,d,e,f,g,h,i,j){var l;aP(a,e,f);for(l=0;;){pP(a,l);var m=l+1;l=m;if(3<=(m|0)){break}}c[a+327]&1?L2(a,d,M2(a,d,0,e,f,g,h,i,j),e,f,g,h,i,j):M2(a,d,L2(a,d,0,e,f,g,h,i,j),e,f,g,h,i,j)}wO.X=1;function cP(a,d,e,f,g,h,i,j,l,m,n,p,r){var s=b;b+=103;var t,w,x,y,z=s+4,A=s+8,C=s+12,B=s+16,K=s+20,E=s+24,G=s+25,M=s+29,L=s+33,F=s+37,I=s+38,R=s+42,O=s+43,Z=s+47,P=s+51,S=s+55,da=s+59,V=s+63,ba=s+67,$=s+71,Y=s+75,la=s+79,ka=s+83,ja=s+87,ea=s+91,ca=s+95,W=s+99,m=c[l+6]*m;x=c[d+11]&1;y=c[d+14];0!=(x|0)?t=4:0!=(y|0)?t=4:(w=0,t=50);if(4==t){t=0!=(p|0)?c[l+3]:c[l+2];w=0!=(p|0)?c[l+5]:0;k[t+m]=k[n];k[t+(m+1)]=k[n+1];k[t+(m+2)]=k[n+2];0!=(p|0)?(k[w+m]=-k[n],k[w+(m+1)]=-k[n+1],k[w+(m+2)]=-k[n+2],t=0!=(p|0)?20:11):t=11;a:do{if(11==t){if(c[a+327]&1){N(B,a+283+12,f+12);w=C;var U=B;c[w]=c[U];k[w]=k[U];c[w+1]=c[U+1];k[w+1]=k[U+1];c[w+2]=c[U+2];k[w+2]=k[U+2];c[w+3]=c[U+3];k[w+3]=k[U+3];k[E]=J(C,n);Q(K,n,E);N(G,C,K);N(M,a+267+12,e+12);w=A;U=M;c[w]=c[U];k[w]=k[U];c[w+1]=c[U+1];k[w+1]=k[U+1];c[w+2]=c[U+2];k[w+2]=k[U+2];c[w+3]=c[U+3];k[w+3]=k[U+3];k[F]=J(A,n);Q(L,n,F);N(I,A,L);k[R]=k[d+13]-k[d+12];Q(P,n,R);wn(Z,L,P);N(O,Z,K);Q(da,O,a+319);wn(S,I,da);w=A;U=S;c[w]=c[U];k[w]=k[U];c[w+1]=c[U+1];k[w+1]=k[U+1];c[w+2]=c[U+2];k[w+2]=k[U+2];c[w+3]=c[U+3];k[w+3]=k[U+3];Q(ba,O,a+320);N(V,G,ba);w=C;U=V;c[w]=c[U];k[w]=k[U];c[w+1]=c[U+1];k[w+1]=k[U+1];c[w+2]=c[U+2];k[w+2]=k[U+2];c[w+3]=c[U+3];k[w+3]=k[U+3];qn($,A,n);w=s;U=$;c[w]=c[U];k[w]=k[U];c[w+1]=c[U+1];k[w+1]=k[U+1];c[w+2]=c[U+2];k[w+2]=k[U+2];c[w+3]=c[U+3];k[w+3]=k[U+3];qn(Y,C,n);w=z;U=Y;c[w]=c[U];k[w]=k[U];c[w+1]=c[U+1];k[w+1]=k[U+1];c[w+2]=c[U+2];k[w+2]=k[U+2];c[w+3]=c[U+3];k[w+3]=k[U+3];c[a+321]&1&&0==(r|0)&&(LC(s,a+319),LC(z,a+320));for(w=0;!(k[c[l+3]+w+m]=k[s+w],w=U=w+1,3<=(U|0));){}for(w=0;;){if(k[c[l+5]+w+m]=-k[z+w],w=U=w+1,3<=(U|0)){break a}}}else{N(ka,a+283+12,e+12),qn(ja,ka,n),w=la,U=ja,c[w]=c[U],k[w]=k[U],c[w+1]=c[U+1],k[w+1]=k[U+1],c[w+2]=c[U+2],k[w+2]=k[U+2],c[w+3]=c[U+3],k[w+3]=k[U+3],k[c[l+3]+m]=k[la],k[c[l+3]+m+1]=k[la+1],k[c[l+3]+m+2]=k[la+2],N(ea,a+283+12,f+12),w=ka,U=ea,c[w]=c[U],k[w]=k[U],c[w+1]=c[U+1],k[w+1]=k[U+1],c[w+2]=c[U+2],k[w+2]=k[U+2],c[w+3]=c[U+3],k[w+3]=k[U+3],qn(W,ka,n),WP(ca,W),w=la,U=ca,c[w]=c[U],k[w]=k[U],c[w+1]=c[U+1],k[w+1]=k[U+1],c[w+2]=c[U+2],k[w+2]=k[U+2],c[w+3]=c[U+3],k[w+3]=k[U+3],k[c[l+5]+m]=k[la],k[c[l+5]+m+1]=k[la+1],k[c[l+5]+m+2]=k[la+2]}}}while(0);0!=(y|0)&&k[d]==k[d+1]&&(x=0);k[c[l+7]+m]=0;0!=(x|0)?(k[c[l+8]+m]=k[d+7],0!=(y|0)?t=29:(e=k[d+2],a=N2(a,k[d+13],k[d],k[d+1],0!=(p|0)?e:-e,k[l]*k[d+8]),e=c[l+7]+m,k[e]+=a*k[d+2],k[c[l+9]+m]=-k[d+3],k[c[l+10]+m]=k[d+3],t=28)):t=28;28==t&&(t=0!=(y|0)?29:48);29==t&&(a=k[l]*k[d+8],0!=(p|0)?(e=c[l+7]+m,k[e]+=-a*k[d+12]):(e=c[l+7]+m,k[e]+=a*k[d+12]),k[c[l+8]+m]=k[d+9],k[d]==k[d+1]?(k[c[l+9]+m]=-3.4028234663852886e+38,k[c[l+10]+m]=3.4028234663852886e+38):(a=c[l+9]+m,1==(y|0)?(k[a]=0,k[c[l+10]+m]=3.4028234663852886e+38):(k[a]=-3.4028234663852886e+38,k[c[l+10]+m]=0),0<k[d+10]&&(0!=(p|0)?(g=J(i,n),h=g-J(j,n)):(g=J(g,n),h=g-J(h,n)),g=h,1==(y|0)?0>h&&(d=-k[d+10]*g,d>k[c[l+7]+m]&&(k[c[l+7]+m]=d)):0<h&&(d=-k[d+10]*g,d<k[c[l+7]+m]&&(k[c[l+7]+m]=d)))));w=1}b=s;return w}cP.X=1;function lP(a,d,e){xi(a+11,d);xi(a+27,e);v[c[c[a]+2]](a);$O(a)}lP.X=1;function vO(a,d){return k[a+315+d]}vO.X=1;function hP(a,d){return k[a+299+d]}hP.X=1;function Amb(){return 244}Amb.X=1;function Bmb(a,d,e){e&=1;c[a+(d+1301)]=e&1;e&=1;3>(d|0)?c[a+(d+196)]=e&1:c[(d-3<<4)+a+229]=e&1}Bmb.X=1;function Cmb(a,d,e){k[a+(d+1313)]=e}Cmb.X=1;function Dmb(a,d,e){k[a+(d+1319)]=e}Dmb.X=1;function Emb(a){var d=b;b+=14;var e,f,g=d+1,h=d+5,i=d+9,j=d+13;e=Zm(c[a+7]);f=Zm(c[a+8]);k[d]=0==f?1:e/(e+f);e=a+283+12;Q(h,a+267+12,d);k[j]=1-k[d];Q(i,e,j);wn(g,h,i);a+=322;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];b=d}Emb.X=1;function Fmb(a,d,e,f){0<=(f|0)&3>(f|0)?2==(d|0)?(k[a+188+f]=e,a+=328,c[a]|=4<<3*f):4==(d|0)?(k[a+192+f]=e,a+=328,c[a]|=2<<3*f):3==(d|0)&&(k[a+184+f]=e,a+=328,c[a]|=1<<3*f):3<=(f|0)&6>(f|0)&&(2==(d|0)?(k[(f-3<<4)+a+226]=e,a+=328,c[a]|=4<<3*f):4==(d|0)?(k[(f-3<<4)+a+227]=e,a+=328,c[a]|=2<<3*f):3==(d|0)&&(k[(f-3<<4)+a+225]=e,a+=328,c[a]|=1<<3*f))}Fmb.X=1;function Gmb(a,d,e){var f;f=0;0<=(e|0)&3>(e|0)?2==(d|0)?f=k[a+188+e]:4==(d|0)?f=k[a+192+e]:3==(d|0)&&(f=k[a+184+e]):3<=(e|0)&6>(e|0)&&(2==(d|0)?f=k[(e-3<<4)+a+226]:4==(d|0)?f=k[(e-3<<4)+a+227]:3==(d|0)&&(f=k[(e-3<<4)+a+225]));return f}Gmb.X=1;function oP(a,d,e){var f=b;b+=92;var g=f+4,h=f+8,i=f+12,j=f+28,l=f+44,m=f+60,n=f+76;uC(f,d);uC(g,e);qn(h,g,f);eQ(i);Db(i,h,g,f,h+1,g+1,f+1,h+2,g+2,f+2);uw(l,c[a+7]+1);WW(j,l,i);xi(a+11,j);uw(n,c[a+8]+1);WW(m,n,i);xi(a+27,m);$O(a);b=f}oP.X=1;function Hmb(){}Hmb.X=1;function Imb(a){xe(a)}Imb.X=1;function Jmb(a,d,e){o2(a,d,e);mQ(a+11,d+14);mQ(a+27,d+30);for(var e=0,f=a+218,g=a+218,h=a+169,i=a+173;;){k[d+(e+58)]=k[(e<<4)+f];k[d+(e+54)]=k[(e<<4)+g+1];k[d+(e+50)]=k[h+e];k[d+(e+46)]=k[i+e];var j=e+1,e=j;if(3<=(j|0)){break}}c[d+62]=c[a+326]&1?1:0;c[d+63]=c[a+327]&1?1:0;return D.r}Jmb.X=1;function Kmb(a,d,e,f,g,h){AO(a,d,e,f,g,h&1);c[a]=Lmb+2;c[a+4]=9;d=0;e=a+1301;f=a+1307;g=a+1313;for(a+=1319;!(c[e+d]=0,k[f+d]=0,k[g+d]=0,k[a+d]=1,d=h=d+1,6<=(h|0));){}}Kmb.X=1;function Mmb(a){var d;$O(a);d=0;for(var e=a+315,f=a+1307;;){k[f+d]=k[e+d];var g=d+1;d=g;if(3<=(g|0)){break}}d=0;e=a+299;for(a+=1307;!(k[a+(d+3)]=k[e+d],d=f=d+1,3<=(f|0));){}}Mmb.X=1;function Nmb(a,d){var e=b;b+=4;var f,g;N(e,c[a+8]+76,c[a+7]+76);f=0;for(var h=a+1301,i=a+315,j=a+1307,l=a+1313,m=a+1319,n=a+199,p=a+203;!(c[h+f]&1&&(g=(k[i+f]-k[j+f])*k[l+f],k[n+f]=k[d]*k[m+f]/(c[d+12]|0)*g,g=sc(g)/k[d],k[p+f]=g),f=g=f+1,3<=(g|0));){}f=0;h=a+1301;i=a+299;j=a+1307;l=a+1313;m=a+1319;n=a+218;for(p=a+218;!(c[h+(f+3)]&1&&(g=-(k[i+f]-k[j+(f+3)])*k[l+(f+3)],k[(f<<4)+n+2]=k[d]*k[m+(f+3)]/(c[d+12]|0)*g,g=sc(g),k[(f<<4)+p+3]=g/k[d]),f=g=f+1,3<=(g|0));){}b=e}Nmb.X=1;function Omb(){return 340}Omb.X=1;function Pmb(a,d){Nmb(a,d);zmb(a,d)}Pmb.X=1;function Qmb(a,d,e){var f=b;b+=92;var g=f+4,h=f+8,i=f+12,j=f+28,l=f+44,m=f+60,n=f+76;uC(f,d);uC(g,e);qn(h,g,f);eQ(i);Db(i,h,g,f,h+1,g+1,f+1,h+2,g+2,f+2);uw(l,c[a+7]+1);WW(j,l,i);xi(a+11,j);uw(n,c[a+8]+1);WW(m,n,i);xi(a+27,m);$O(a);b=f}Qmb.X=1;function Rmb(){}Rmb.X=1;function Smb(a){xe(a)}Smb.X=1;function Tmb(a,d,e){Jmb(a,d,e);for(var e=0,f=a+1307,g=a+1319,h=a+1301,a=a+1313;;){k[d+(e+70)]=k[f+e];k[d+(e+82)]=k[g+e];c[d+(e+64)]=c[h+e]&1?1:0;k[d+(e+76)]=k[a+e];var i=e+1,e=i;if(6<=(i|0)){break}}return D.r}Tmb.X=1;function Umb(a,d,e,f,g,h){var i=b;b+=120;var j=i+4,l=i+8,m=i+12,n=i+28,p=i+44,r=i+60,s=i+76,t=i+92,w=i+96,x=i+97,y=i+98,z=i+99,A=i+103,C=i+104,B=i+105,K=i+106,E=i+110,G=i+111,M=i+112,L=i+113,F=i+117,I=i+118,R=i+119;Pz();Pz();Kmb(a,d,e,Rz,Rz,1);c[a]=Vmb+2;var O=a+1325;c[O]=c[f];k[O]=k[f];c[O+1]=c[f+1];k[O+1]=k[f+1];c[O+2]=c[f+2];k[O+2]=k[f+2];c[O+3]=c[f+3];k[O+3]=k[f+3];O=a+1329;c[O]=c[g];k[O]=k[g];c[O+1]=c[g+1];k[O+1]=k[g+1];c[O+2]=c[g+2];k[O+2]=k[g+2];c[O+3]=c[g+3];k[O+3]=k[g+3];O=a+1333;c[O]=c[h];k[O]=k[h];c[O+1]=c[h+1];k[O+1]=k[h+1];c[O+2]=c[h+2];k[O+2]=k[h+2];c[O+3]=c[h+3];k[O+3]=k[h+3];g=IB(g);c[i]=c[g];k[i]=k[g];c[i+1]=c[g+1];k[i+1]=k[g+1];c[i+2]=c[g+2];k[i+2]=k[g+2];c[i+3]=c[g+3];k[i+3]=k[g+3];h=IB(h);c[j]=c[h];k[j]=k[h];c[j+1]=c[h+1];k[j+1]=k[h+1];c[j+2]=c[h+2];k[j+2]=k[h+2];c[j+3]=c[h+3];k[j+3]=k[h+3];qn(l,i,j);eQ(m);Db(m,j,l,i,j+1,l+1,i+1,j+2,l+2,i+2);pQ(m,f);uw(p,d+1);WW(n,p,m);xi(a+11,n);uw(s,e+1);WW(r,s,m);xi(a+27,r);k[w]=0;k[x]=0;k[y]=-1;H(t,w,x,y);XO(a,t);k[A]=0;k[C]=0;k[B]=1;H(z,A,C,B);mP(a,z);k[E]=1;k[G]=0;k[M]=-.7853981852531433;H(K,E,G,M);jP(a,K);k[F]=-1;k[I]=0;k[R]=.7853981852531433;H(L,F,I,R);nP(a,L);Bmb(a,2,1);Cmb(a,2,39.47842025756836);Dmb(a,2,.009999999776482582);Mmb(a);b=i}Umb.X=1;function Wmb(){}Wmb.X=1;function Xmb(a){xe(a)}Xmb.X=1;function Fv(a,d,e,f,g,h,i,j){var l=b;b+=48;var m=l+4,n=l+8,p=l+12,r=l+16,s=l+20,t=l+24,w=l+28,x=l+32,y=l+36,z=l+40,A=l+44,j=j&1;g2(a,4,d,e);c[a]=O2+2;sj(a+171);c[a+183]=0;c[a+184]=0;c[a+185]=0;c[a+186]=1;c[a+187]=j&1;c[a+189]=0;e=a+137+12;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];Jb(l,d+1,0);f=J(h,l);.9999998807907104<=f?(Jb(p,d+1,2),WP(n,p),c[l]=c[n],k[l]=k[n],c[l+1]=c[n+1],k[l+1]=k[n+1],c[l+2]=c[n+2],k[l+2]=k[n+2],c[l+3]=c[n+3],k[l+3]=k[n+3],Jb(r,d+1,1),c[m]=c[r],k[m]=k[r],c[m+1]=c[r+1],k[m+1]=k[r+1],c[m+2]=c[r+2],k[m+2]=k[r+2],c[m+3]=c[r+3],k[m+3]=k[r+3]):-.9999998807907104>=f?(Jb(s,d+1,2),c[l]=c[s],k[l]=k[s],c[l+1]=c[s+1],k[l+1]=k[s+1],c[l+2]=c[s+2],k[l+2]=k[s+2],c[l+3]=c[s+3],k[l+3]=k[s+3],Jb(t,d+1,1),c[m]=c[t],k[m]=k[t],c[m+1]=c[t+1],k[m+1]=k[t+1],c[m+2]=c[t+2],k[m+2]=k[t+2],c[m+3]=c[t+3],k[m+3]=k[t+3]):(qn(w,h,l),c[m]=c[w],k[m]=k[w],c[m+1]=c[w+1],k[m+1]=k[w+1],c[m+2]=c[w+2],k[m+2]=k[w+2],c[m+3]=c[w+3],k[m+3]=k[w+3],qn(x,m,h),c[l]=c[x],k[l]=k[x],c[l+1]=c[x+1],k[l+1]=k[x+1],c[l+2]=c[x+2],k[l+2]=k[x+2],c[l+3]=c[x+3],k[l+3]=k[x+3]);Db(a+137,l,m,h,l+1,m+1,h+1,l+2,m+2,h+2);sw(y,h,i);tw(z,y,l);qn(A,i,z);d=a+153+12;c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];c[d+2]=c[g+2];k[d+2]=k[g+2];c[d+3]=c[g+3];k[d+3]=k[g+3];Db(a+153,z,A,i,z+1,A+1,i+1,z+2,A+2,i+2);k[a+182]=c[a+187]&1?-1:1;b=l}Fv.X=1;function Cv(a,d,e,f,g){var h=b;b+=28;var i=h+4,j=h+8,l=h+12,m=h+16,n=h+20,p=h+24,g=g&1;i2(a,4,d);c[a]=O2+2;sj(a+171);c[a+183]=0;c[a+184]=0;c[a+185]=0;c[a+186]=1;c[a+187]=g&1;c[a+189]=0;rw(f,h,i);g=a+137+12;c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];Db(a+137,h,i,f,h+1,i+1,f+1,h+2,i+2,f+2);Bo(j,d+1,f);sw(l,f,j);tw(m,l,h);qn(n,j,m);f=a+153+12;vw(p,d+1,e);c[f]=c[p];k[f]=k[p];c[f+1]=c[p+1];k[f+1]=k[p+1];c[f+2]=c[p+2];k[f+2]=k[p+2];c[f+3]=c[p+3];k[f+3]=k[p+3];Db(a+153,m,n,j,m+1,n+1,j+1,m+2,n+2,j+2);k[a+182]=c[a+187]&1?-1:1;b=h}Cv.X=1;function Ymb(a,d,e,f,g,h){h&=1;g2(a,4,d,e);c[a]=O2+2;sQ(a+137,f);sQ(a+153,g);sj(a+171);c[a+183]=0;c[a+184]=0;c[a+185]=0;c[a+186]=1;c[a+187]=h&1;c[a+189]=0;k[a+182]=c[a+187]&1?-1:1}Ymb.X=1;function Zmb(a,d,e,f){var g=b;b+=4;f&=1;i2(a,4,d);c[a]=O2+2;sQ(a+137,e);sQ(a+153,e);sj(a+171);c[a+183]=0;c[a+184]=0;c[a+185]=0;c[a+186]=1;c[a+187]=f&1;c[a+189]=0;d=a+153+12;vw(g,c[a+7]+1,a+137+12);c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];c[d+2]=c[g+2];k[d+2]=k[g+2];c[d+3]=c[g+3];k[d+3]=k[g+3];k[a+182]=c[a+187]&1?-1:1;b=g}Zmb.X=1;function aw(a,d){c[d]=c[a+185]&1?0:6;c[d+1]=0}aw.X=1;function $mb(a){var d=b;b+=171;var e=d+4,f=d+8,g=d+12,h=d+24,i=d+28,j=d+29,l=d+30,m,n=d+31,p=d+43,r=d+55,s=d+59,t=d+63,w=d+67,x=d+71,y=d+75,z=d+79,A=d+83,C=d+87,B=d+91,K=d+103,E=d+115,G=d+127,M=d+139,L=d+151,F=d+163,I=d+167;if(c[a+185]&1){k[a+9]=0;k[a+188]=0;var R=c[a+183]&1;a:do{if(!R){vw(d,c[a+7]+1,a+137+12);vw(e,c[a+8]+1,a+153+12);N(f,e,d);m=g;if(1.1920928955078125e-7<Um(f)){uC(h,f);var O=h;c[m]=c[O];k[m]=k[O];c[m+1]=c[O+1];k[m+1]=k[O+1];c[m+2]=c[O+2];k[m+2]=k[O+2];c[m+3]=c[O+3];k[m+3]=k[O+3]}else{k[i]=1,k[j]=0,k[l]=0,pe(m,i,j,l)}rw(g,g+4,g+8);m=0;for(var O=a+11,Z=a+7,P=a+8,S=a+7,da=a+8,V=a+7,ba=a+7,$=a+8,Y=a+8;;){var la=O+21*m;0!=(la|0)&&(ue(n,c[Z]+1),ue(p,c[P]+1),N(r,d,c[S]+1+12),N(s,e,c[da]+1+12),GL(la,n,p,r,s,(m<<2)+g,c[V]+97,Zm(c[ba]),c[$]+97,Zm(c[Y])));m=la=m+1;if(3<=(la|0)){break a}}}}while(0);Jb(x,a+137,2);rw(x,t,w);Bo(y,Tu(a)+1,t);Bo(z,Tu(a)+1,w);e=Tu(a)+1;Jb(C,a+137,2);Bo(A,e,C);C=a+74;0!=(C|0)&&(ue(B,c[a+7]+1),ue(K,c[a+8]+1),DL(C,y,B,K,c[a+7]+97,c[a+8]+97));y=a+95;0!=(y|0)&&(ue(E,c[a+7]+1),ue(G,c[a+8]+1),DL(y,z,E,G,c[a+7]+97,c[a+8]+97));z=a+116;0!=(z|0)&&(ue(M,c[a+7]+1),ue(L,c[a+8]+1),DL(z,A,M,L,c[a+7]+97,c[a+8]+97));k[a+180]=0;uv(a,c[a+7]+1,c[a+8]+1);A=Tu(a)+1;Jb(I,a+137,2);Bo(F,A,I);I=Nn(Tu(a),F);k[a+179]=1/(I+Nn(Su(a),F))}b=d}$mb.X=1;function uv(a,d,e){k[a+181]=tv(a,d,e);Cj(a+171,k[a+181])}uv.X=1;function anb(a,d){if(c[a+185]&1){c[d]=0,c[d+1]=0}else{if(c[d]=5,c[d+1]=1,uv(a,c[a+7]+1,c[a+8]+1),0!=(lw(a)|0)||Hv(a)){c[d]+=1;var e=d+1;c[e]-=1}}}anb.X=1;function bnb(a,d){var e=c[a+7]+1,f=c[a+8]+1,g=c[a+7]+80,h=c[a+8]+80;c[a+186]&1?bw(a,d,e,f,g,h):wv(a,d,e,f,g,h)}bnb.X=1;function bw(a,d,e,f,g,h){var i=b;b+=217;var j,l,m=i+16,n=i+40,p,r,s,t=i+44,w=i+45,x=i+46,y=i+50,z=i+54,A=i+58,C=i+62,B=i+66,K=i+82,E=i+98,G=i+102,M=i+106,L=i+110,F=i+114,I=i+118,R=i+122,O=i+126,Z=i+130,P=i+131,S=i+135,da=i+139,V=i+143,ba=i+144,$=i+148,Y=i+152,la=i+156,ka=i+160,ja=i+164,ea=i+168,ca=i+172,W=i+176;j=i+180;var U=i+181,X=i+185,ma=i+189,ga=i+193,ha=i+197,ta=i+201,ra=i+205,ua=i+209,za=i+213;l=c[d+6];WW(i,e,a+137);WW(m,f,a+153);s=i+32;r=i+12;c[s]=c[r];k[s]=k[r];c[s+1]=c[r+1];k[s+1]=k[r+1];c[s+2]=c[r+2];k[s+2]=k[r+2];c[s+3]=c[r+3];k[s+3]=k[r+3];s=i+36;r=m+12;c[s]=c[r];k[s]=k[r];c[s+1]=c[r+1];k[s+1]=k[r+1];c[s+2]=c[r+2];k[s+2]=k[r+2];c[s+3]=c[r+3];k[s+3]=k[r+3];N(n,m+12,i+12);p=Zm(Tu(a));r=Zm(Su(a));s=(1.1920928955078125e-7>p?1:1.1920928955078125e-7>r)&1;p+=r;k[t]=0<p?r/p:.5;k[w]=1-k[t];Jb(x,i,2);Jb(y,m,2);Q(A,x,t);Q(C,y,w);wn(z,A,C);IB(z);sQ(B,e);sQ(K,f);e=l<<1;N(R,m+12,K+12);c[L]=c[R];k[L]=k[R];c[L+1]=c[R+1];k[L+1]=k[R+1];c[L+2]=c[R+2];k[L+2]=k[R+2];c[L+3]=c[R+3];k[L+3]=k[R+3];k[Z]=J(L,z);Q(O,z,Z);N(P,L,O);N(S,i+12,B+12);c[M]=c[S];k[M]=k[S];c[M+1]=c[S+1];k[M+1]=k[S+1];c[M+2]=c[S+2];k[M+2]=k[S+2];c[M+3]=c[S+3];k[M+3]=k[S+3];k[V]=J(M,z);Q(da,z,V);N(ba,M,da);N($,da,O);Q(la,$,t);wn(Y,ba,la);c[M]=c[Y];k[M]=k[Y];c[M+1]=c[Y+1];k[M+1]=k[Y+1];c[M+2]=c[Y+2];k[M+2]=k[Y+2];c[M+3]=c[Y+3];k[M+3]=k[Y+3];Q(ja,$,w);N(ka,P,ja);c[L]=c[ka];k[L]=k[ka];c[L+1]=c[ka+1];k[L+1]=k[ka+1];c[L+2]=c[ka+2];k[L+2]=k[ka+2];c[L+3]=c[ka+3];k[L+3]=k[ka+3];Q(ca,P,t);Q(W,ba,w);wn(ea,ca,W);c[F]=c[ea];k[F]=k[ea];c[F+1]=c[ea+1];k[F+1]=k[ea+1];c[F+2]=c[ea+2];k[F+2]=k[ea+2];c[F+3]=c[ea+3];k[F+3]=k[ea+3];m=Um(F);1.1920928955078125e-7<m?(k[j]=ec(m),KB(F,j)):(Jb(U,i,1),c[F]=c[U],k[F]=k[U],c[F+1]=c[U+1],k[F+1]=k[U+1],c[F+2]=c[U+2],k[F+2]=k[U+2],c[F+3]=c[U+3],k[F+3]=k[U+3]);qn(X,z,F);c[I]=c[X];k[I]=k[X];c[I+1]=c[X+1];k[I+1]=k[X+1];c[I+2]=c[X+2];k[I+2]=k[X+2];c[I+3]=c[X+3];k[I+3]=k[X+3];qn(ma,M,F);c[E]=c[ma];k[E]=k[ma];c[E+1]=c[ma+1];k[E+1]=k[ma+1];c[E+2]=c[ma+2];k[E+2]=k[ma+2];c[E+3]=c[ma+3];k[E+3]=k[ma+3];qn(ga,L,F);c[G]=c[ga];k[G]=k[ga];c[G+1]=c[ga+1];k[G+1]=k[ga+1];c[G+2]=c[ga+2];k[G+2]=k[ga+2];c[G+3]=c[ga+3];k[G+3]=k[ga+3];for(j=0;!(k[c[d+3]+j+0]=k[E+j],j=U=j+1,3<=(U|0));){}for(j=0;!(k[c[d+5]+j+0]=-k[G+j],j=U=j+1,3<=(U|0));){}qn(ha,M,I);c[E]=c[ha];k[E]=k[ha];c[E+1]=c[ha+1];k[E+1]=k[ha+1];c[E+2]=c[ha+2];k[E+2]=k[ha+2];c[E+3]=c[ha+3];k[E+3]=k[ha+3];qn(ta,L,I);c[G]=c[ta];k[G]=k[ta];c[G+1]=c[ta+1];k[G+1]=k[ta+1];c[G+2]=c[ta+2];k[G+2]=k[ta+2];c[G+3]=c[ta+3];k[G+3]=k[ta+3];s&1&&0!=(lw(a)|0)&&(LC(G,w),LC(E,t));for(j=0;!(k[c[d+3]+j+l]=k[E+j],j=ha=j+1,3<=(ha|0));){}for(j=0;!(k[c[d+5]+j+l]=-k[G+j],j=ha=j+1,3<=(ha|0));){}qn(ra,M,z);c[E]=c[ra];k[E]=k[ra];c[E+1]=c[ra+1];k[E+1]=k[ra+1];c[E+2]=c[ra+2];k[E+2]=k[ra+2];c[E+3]=c[ra+3];k[E+3]=k[ra+3];qn(ua,L,z);c[G]=c[ua];k[G]=k[ua];c[G+1]=c[ua+1];k[G+1]=k[ua+1];c[G+2]=c[ua+2];k[G+2]=k[ua+2];c[G+3]=c[ua+3];k[G+3]=k[ua+3];s&1&&(LC(G,w),LC(E,t));for(j=0;!(k[c[d+3]+j+e]=k[E+j],j=t=j+1,3<=(t|0));){}for(j=0;!(k[c[d+5]+j+e]=-k[G+j],j=E=j+1,3<=(E|0));){}G=k[d]*k[d+1];if(!(c[a+183]&1)){for(j=0;!(k[c[d+2]+j+0]=k[F+j],j=E=j+1,3<=(E|0));){}for(j=0;!(k[c[d+2]+j+l]=k[I+j],j=E=j+1,3<=(E|0));){}for(j=0;!(k[c[d+2]+j+e]=k[z+j],j=E=j+1,3<=(E|0));){}E=G*J(F,n);k[c[d+7]+0]=E;E=G*J(I,n);k[c[d+7]+l]=E;E=G*J(z,n);k[c[d+7]+e]=E}n=3*l;l<<=2;k[c[d+3]+n]=k[F];k[c[d+3]+n+1]=k[F+1];k[c[d+3]+n+2]=k[F+2];k[c[d+3]+l]=k[I];k[c[d+3]+l+1]=k[I+1];k[c[d+3]+l+2]=k[I+2];k[c[d+5]+n]=-k[F];k[c[d+5]+n+1]=-k[F+1];k[c[d+5]+n+2]=-k[F+2];k[c[d+5]+l]=-k[I];k[c[d+5]+l+1]=-k[I+1];k[c[d+5]+l+2]=-k[I+2];G=k[d]*k[d+1];qn(za,x,y);k[c[d+7]+n]=G*J(za,F);k[c[d+7]+l]=G*J(za,I);y=F=0;0!=(lw(a)|0)&&(F=Ui(a+171)*k[a+182],y=0<F?1:2);n=0;Hv(a)&&(n=1);if(41==(0!=(y|0)?41:0!=(n|0)?41:68)){x=5*c[d+6],k[c[d+3]+x]=k[z],k[c[d+3]+x+1]=k[z+1],k[c[d+3]+x+2]=k[z+2],k[c[d+5]+x]=-k[z],k[c[d+5]+x+1]=-k[z+1],k[c[d+5]+x+2]=-k[z+2],I=Vv(a),za=yv(a),0!=(y|0)&&I==za&&(n=0),k[c[d+7]+x]=0,l=0!=(c[a+189]&2|0)?k[a+192]:k[d+1],0!=(n|0)&&(0!=(c[a+189]&4|0)&&(k[c[d+8]+x]=k[a+190]),n=N2(a,k[a+181],I,za,k[a+169],k[d]*l),G=c[d+7]+x,k[G]+=n*k[a+169]*k[a+182],k[c[d+9]+x]=-k[a+170],k[c[d+10]+x]=k[a+170]),0!=(y|0)&&(G=k[d]*l,l=c[d+7]+x,k[l]+=G*F,0!=(c[a+189]&1|0)&&(k[c[d+8]+x]=k[a+191]),I==za?(k[c[d+9]+x]=-3.4028234663852886e+38,k[c[d+10]+x]=3.4028234663852886e+38):(F=c[d+9]+x,1==(y|0)?(k[F]=0,k[c[d+10]+x]=3.4028234663852886e+38):(k[F]=-3.4028234663852886e+38,k[c[d+10]+x]=0)),F=$i(a+171),0<F&&(g=J(g,z),h=g-=J(h,z),1==(y|0)?0>h&&(h=-F*g,h>k[c[d+7]+x]&&(k[c[d+7]+x]=h)):0<h&&(h=-F*g,h<k[c[d+7]+x]&&(k[c[d+7]+x]=h))),d=c[d+7]+x,k[d]*=Wi(a+171))}b=i}bw.X=1;function wv(a,d,e,f,g,h){var i=b;b+=72;var j,l,m=i+16,n=i+32,p=i+36;j=i+40;var r,s,t=i+44,w=i+48,x=i+52,y=i+56,z=i+60,A=i+64,C=i+68;l=c[d+6];WW(i,e,a+137);WW(m,f,a+153);r=i+12;c[n]=c[r];k[n]=k[r];c[n+1]=c[r+1];k[n+1]=k[r+1];c[n+2]=c[r+2];k[n+2]=k[r+2];c[n+3]=c[r+3];k[n+3]=k[r+3];r=m+12;c[p]=c[r];k[p]=k[r];c[p+1]=c[r+1];k[p+1]=k[r+1];c[p+2]=c[r+2];k[p+2]=k[r+2];c[p+3]=c[r+3];k[p+3]=k[r+3];c[a+183]&1||(k[c[d+2]]=1,k[c[d+2]+l+1]=1,k[(l<<1)+c[d+2]+2]=1);N(j,n,e+12);e=c[d+3];r=c[d+3]+l;s=(l<<1)+c[d+3];WP(t,j);CB(t,e,r,s);N(w,p,f+12);CB(w,c[d+5],c[d+5]+l,(l<<1)+c[d+5]);f=k[d]*k[d+1];t=c[a+183]&1;a:do{if(!t){for(j=0;;){if(k[c[d+7]+l*j]=f*(k[p+j]-k[n+j]),j=w=j+1,3<=(w|0)){break a}}}}while(0);Jb(x,i,2);Jb(y,i,0);Jb(z,i,1);l=3*c[d+6];n=c[d+6]<<2;k[c[d+3]+l]=k[y];k[c[d+3]+l+1]=k[y+1];k[c[d+3]+l+2]=k[y+2];k[c[d+3]+n]=k[z];k[c[d+3]+n+1]=k[z+1];k[c[d+3]+n+2]=k[z+2];k[c[d+5]+l]=-k[y];k[c[d+5]+l+1]=-k[y+1];k[c[d+5]+l+2]=-k[y+2];k[c[d+5]+n]=-k[z];k[c[d+5]+n+1]=-k[z+1];k[c[d+5]+n+2]=-k[z+2];Jb(A,m,2);qn(C,x,A);k[c[d+7]+l]=f*J(C,y);k[c[d+7]+n]=f*J(C,z);y=z=0;0!=(lw(a)|0)&&(z=Ui(a+171)*k[a+182],y=0<z?1:2);n=0;Hv(a)&&(n=1);if(13==(0!=(y|0)?13:0!=(n|0)?13:40)){m=5*c[d+6],k[c[d+3]+m]=k[x],k[c[d+3]+m+1]=k[x+1],k[c[d+3]+m+2]=k[x+2],k[c[d+5]+m]=-k[x],k[c[d+5]+m+1]=-k[x+1],k[c[d+5]+m+2]=-k[x+2],A=Vv(a),C=yv(a),0!=(y|0)&&A==C&&(n=0),k[c[d+7]+m]=0,l=0!=(c[a+189]&2|0)?k[a+192]:k[d+1],0!=(n|0)&&(0!=(c[a+189]&4|0)&&(k[c[d+8]+m]=k[a+190]),n=N2(a,k[a+181],A,C,k[a+169],k[d]*l),p=c[d+7]+m,k[p]+=n*k[a+169]*k[a+182],k[c[d+9]+m]=-k[a+170],k[c[d+10]+m]=k[a+170]),0!=(y|0)&&(f=k[d]*l,l=c[d+7]+m,k[l]+=f*z,0!=(c[a+189]&1|0)&&(k[c[d+8]+m]=k[a+191]),A==C?(k[c[d+9]+m]=-3.4028234663852886e+38,k[c[d+10]+m]=3.4028234663852886e+38):(z=c[d+9]+m,1==(y|0)?(k[z]=0,k[c[d+10]+m]=3.4028234663852886e+38):(k[z]=-3.4028234663852886e+38,k[c[d+10]+m]=0)),z=$i(a+171),0<z&&(g=J(g,x),h=g-=J(h,x),1==(y|0)?0>h&&(h=-z*g,h>k[c[d+7]+m]&&(k[c[d+7]+m]=h)):0<h&&(h=-z*g,h<k[c[d+7]+m]&&(k[c[d+7]+m]=h))),d=c[d+7]+m,k[d]*=Wi(a+171))}b=i}wv.X=1;function qv(a,d,e,f,g,h){uv(a,e,f);wv(a,d,e,f,g,h)}qv.X=1;function pw(a,d,e){xi(a+137,d);xi(a+153,e);v[c[c[a]+2]](a)}pw.X=1;function sv(a){return tv(a,c[a+7]+1,c[a+8]+1)}sv.X=1;function tv(a,d,e){var f=b;b+=24;var g=f+4,h=f+8,i=f+12,j=f+16,l=f+20;Jb(g,a+137,0);Bo(f,d,g);Jb(i,a+137,1);Bo(h,d,i);Jb(l,a+153,1);Bo(j,e,l);d=ee(J(j,f),J(j,h));a=k[a+182]*d;b=f;return a}tv.X=1;function cnb(){return 212}cnb.X=1;function dnb(a,d,e,f){-1==(f|0)|5==(f|0)&&(2==(d|0)?(k[a+192]=e,a+=189,c[a]|=2):4==(d|0)?(k[a+191]=e,a+=189,c[a]|=1):3==(d|0)&&(k[a+190]=e,a+=189,c[a]|=4))}dnb.X=1;function enb(a,d,e){var f;f=0;-1==(e|0)|5==(e|0)&&(2==(d|0)?f=k[a+192]:4==(d|0)?f=k[a+191]:3==(d|0)&&(f=k[a+190]));return f}enb.X=1;function P2(a){return c[a+2]}P2.X=1;function Q2(a){return c[a+69]}Q2.X=1;function ow(a,d,e){var f=b;b+=40;var g=f+4,h=f+8,i=f+12,j=f+16,l=f+20,m=f+24,n=f+28,p=f+32,r=f+36;dc(a+153,i);EV(h,i);BW(g,h,d);dc(a+137,j);BW(f,g,j);AV(f);tw(l,f,fnb);IB(l);sw(m,fnb,l);EV(p,m);BW(n,p,f);AV(n);d=KV(n);3.1415927410125732<d&&(rjb(r,n),c[n]=c[r],k[n]=k[r],c[n+1]=c[r+1],k[n+1]=k[r+1],c[n+2]=c[r+2],k[n+2]=k[r+2],c[n+3]=c[r+3],k[n+3]=k[r+3],d=KV(n));0>k[n+2]&&(d=-d);gnb(a,d,e);b=f}ow.X=1;function gnb(a,d,e){var f=b;b+=1;k[f]=d;vj(a+171,f);d=tv(a,c[a+7]+1,c[a+8]+1);k[a+169]=(k[f]-d)/e;b=f}gnb.X=1;function hnb(){}hnb.X=1;function inb(a){xe(a)}inb.X=1;function jnb(a,d,e){o2(a,d,e);gQ(a+137,d+14);gQ(a+153,d+30);c[d+47]=c[a+183]&1;c[d+48]=c[a+184]&1;k[d+50]=k[a+170];k[d+49]=k[a+169];c[d+46]=c[a+187]&1;k[d+51]=Dj(a+171);k[d+52]=Bj(a+171);k[d+53]=Yi(a+171);k[d+54]=Wi(a+171);k[d+55]=$i(a+171);return D.mf}jnb.X=1;function knb(a,d,e,f){var g=b;b+=5;var h=g+4;$1=d;k[h]=2*J(e,f);Q(g,f,h);N(a,e,g);b=g}knb.X=1;function lnb(a,d,e,f){var g=b;b+=1;$1=d;k[g]=J(e,f);Q(a,f,g);b=g}lnb.X=1;function mnb(a,d,e,f){var g=b;b+=4;lnb(g,d,e,f);N(a,e,g);b=g}mnb.X=1;function nnb(a,d,e,f,g){var h=b;b+=3;var i=h+1,j=h+2;onb(a);c[a]=R2+2;XX(a+32);c[a+47]=g;k[a+14]=.019999999552965164;k[h]=0;k[i]=0;k[j]=0;pe(a+15,h,i,j);c[a+44]=1;c[a+2]=d;k[a+13]=f;k[a+12]=0;c[a+3]=e;c[a+45]=1;k[a+46]=0;k[a+4]=0;k[a+5]=0;k[a+11]=29.399999618530273;k[a+6]=55;k[a+7]=10;c[a+42]=0;c[a+43]=0;pnb(a,.7853981573134661);b=h}nnb.X=1;function onb(a){qnb(a);c[a]=rnb+2}onb.X=1;function pnb(a,d){k[a+9]=d;k[a+10]=td(d)}pnb.X=1;function snb(a){tnb(a);xe(a)}snb.X=1;function tnb(a){c[a]=R2+2;TX(a+32)}tnb.X=1;function unb(a,d){var e=b;b+=36;var f,g,h,i,j,l=e+1,m,n,p=e+2,r=e+3,s=e+7,t=e+11,w=e+15,x=e+19,y=e+20;f=0;g=Sk(d);v[c[c[g]+8]](g,Q2(c[a+2]),d+7,Sk(d));g=a+23;h=c[a+2]+1+12;c[g]=c[h];k[g]=k[h];c[g+1]=c[h+1];k[g+1]=k[h+1];c[g+2]=c[h+2];k[g+2]=k[h+2];c[g+3]=c[h+3];k[g+3]=k[h+3];h=g=0;var z=a+2,A=Q2(c[z]),A=(h|0)<(v[c[c[A]+9]](A)|0);a:do{if(A){for(var C=a+32,B=a+2,K=a+32,E=a+32,G=a+32,M=a+2,L=a+38,F=r,I=a+23;;){c[e]=0;PY(C,0,e);i=Q2(c[B]);i=lX(v[c[c[i]+7]](i),h);0!=(c[i+2]|0)&&(i=c[i+2],v[c[c[i]+4]](i,K));i=0;var R=(i|0)<(AX(E)|0);b:do{if(R){for(;;){j=c[ZX(G,i)];k[l]=($j(j)|0)==(c[M]|0)?-1:1;m=0;var O=(m|0)<(Xj(j)|0);c:do{if(O){for(;;){if(n=j+69*m+1,k[p]=aU(n),0>k[p]&&(k[p]<g&&(g=k[p],Q(r,n+16,l),c[L]=c[F],k[L]=k[F],c[L+1]=c[F+1],k[L+1]=k[F+1],c[L+2]=c[F+2],k[L+2]=k[F+2],c[L+3]=c[F+3],k[L+3]=k[F+3]),Q(w,n+16,l),Q(t,w,p),k[x]=.20000000298023224,Q(s,t,x),xn(I,s),f=1),m+=1,(m|0)>=(Xj(j)|0)){break c}}}}while(0);i+=1;if((i|0)>=(AX(E)|0)){break b}}}}while(0);h+=1;i=Q2(c[z]);if((h|0)>=(v[c[c[i]+9]](i)|0)){break a}}}}while(0);sQ(y,c[a+2]+1);pQ(y,a+23);Ji(c[a+2],y);b=e;return f&1}unb.X=1;function vnb(){}vnb.X=1;function wnb(a,d){var e=b;b+=81;var f=e+16,g=e+32,h=e+36,i=e+40,j=e+41,l=e+45,m=e+49,n=e+50,p=e+77,r=c[a+47];S2();k[i]=k[a+13]+(0<k[a+5]?k[a+5]:0);Q(h,(r<<2)+T2,i);wn(g,a+23,h);h=a+28;c[h]=c[g];k[h]=k[g];c[h+1]=c[g+1];k[h+1]=k[g+1];c[h+2]=c[g+2];k[h+2]=k[g+2];c[h+3]=c[g+3];k[h+3]=k[g+3];eQ(e);eQ(f);g=c[a+47];S2();g=(g<<2)+T2;h=c[a+3];h=v[c[c[h]+11]](h);k[m]=h+k[a+14];Q(l,g,m);wn(j,a+23,l);pQ(e,j);pQ(f,a+28);j=c[a+2];l=c[a+47];S2();WP(p,(l<<2)+T2);U2(n,j,p,.707099974155426);c[n+2]=c[ci(P2(a))+1];c[n+3]=c[ci(P2(a))+2];c[a+44]&1?$_(c[a+2],c[a+3],e,f,n,k[d+7+9]):Rl(d,c[a+3],e,f,n,0);cz(n)?(f=c[a+47],S2(),0<J(n+12,(f<<2)+T2)&&(k[a+27]=k[a+13]*k[n+1],yB(a+23,a+23,a+28,k[n+1])),k[a+4]=0,k[a+5]=0):(k[a+27]=k[a+13],n=a+23,f=a+28,c[n]=c[f],k[n]=k[f],c[n+1]=c[f+1],k[n+1]=k[f+1],c[n+2]=c[f+2],k[n+2]=k[f+2],c[n+3]=c[f+3],k[n+3]=k[f+3]);b=e}wnb.X=1;function S2(){var a=b;b+=9;var d=a+1,e=a+2,f=a+3,g=a+4,h=a+5,i=a+6,j=a+7,l=a+8;0==c[xnb]<<24>>24&&0!=(Hb(xnb)|0)&&(k[a]=1,k[d]=0,k[e]=0,H(T2,a,d,e),k[f]=0,k[g]=1,k[h]=0,H(T2+4,f,g,h),k[i]=0,k[j]=0,k[l]=1,H(T2+8,i,j,l));b=a;return T2}S2.X=1;function ynb(){}ynb.X=1;function znb(a,d,e,f){var g=b;b+=29;var h=g+4,i=g+8,j=g+12,l=g+16,m=g+20,n=g+24,p=g+28;$3=e;N(g,a+28,a+23);e=JB(g);1.1920928955078125e-7<e&&(IB(g),knb(h,a,g,d),IB(h),lnb(l,a,h,d),c[i]=c[l],k[i]=k[l],c[i+1]=c[l+1],k[i+1]=k[l+1],c[i+2]=c[l+2],k[i+2]=k[l+2],c[i+3]=c[l+3],k[i+3]=k[l+3],mnb(m,a,h,d),c[j]=c[m],k[j]=k[m],c[j+1]=c[m+1],k[j+1]=k[m+1],c[j+2]=c[m+2],k[j+2]=k[m+2],c[j+3]=c[m+3],k[j+3]=k[m+3],d=a+28,h=a+23,c[d]=c[h],k[d]=k[h],c[d+1]=c[h+1],k[d+1]=k[h+1],c[d+2]=c[h+2],k[d+2]=k[h+2],c[d+3]=c[h+3],k[d+3]=k[h+3],0!=f&&(k[p]=f*e,Q(n,j,p),xn(a+28,n)));b=g}znb.X=1;function Anb(a,d,e){var f=b;b+=79;var g,h=f+16,i=f+32,j=f+36,l=f+40,m=f+44,n=f+71,p=f+75,r;wn(i,a+23,e);e=a+28;c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];c[e+2]=c[i+2];k[e+2]=k[i+2];c[e+3]=c[i+3];k[e+3]=k[i+3];eQ(f);eQ(h);i=1;N(j,a+23,a+28);c[a+37]&1&&0<J(a+19,a+38)&&znb(a,a+38,0,1);for(var j=10,e=a+23,s=a+28,t=a+23,w=a+28,x=a+2,y=m+2,z=m+3,A=a+3,C=a+3,B=a+14,K=a+44,E=a+2,G=a+3,M=a+3,L=m+1,F=m+16,I=a+23,R=m+12,O=a+28,Z=a+23,P=a+19,S=a+23,da=a+28,V=a+3;.009999999776482582<i;){g=j;j=g-1;if(0>=(g|0)){break}pQ(f,e);pQ(h,s);N(l,t,w);U2(m,c[x],l,0);c[y]=c[ci(P2(a))+1];c[z]=c[ci(P2(a))+2];g=c[A];g=v[c[c[g]+11]](g);var ba=c[C];v[c[c[ba]+10]](ba,g+k[B]);c[K]&1?$_(c[E],c[G],f,h,m,k[d+7+9]):Rl(d,c[V],f,h,m,k[d+7+9]);ba=c[M];v[c[c[ba]+10]](ba,g);i-=k[L];cz(m)?(N(n,F,I),$hitDistance=JB(n),znb(a,R,0,1),N(p,O,Z),g=Um(p),1.1920928955078125e-7<g?(IB(p),0>=J(p,P)?(r=3,g=21):g=20):(r=3,g=21)):(c[S]=c[da],k[S]=k[da],c[S+1]=c[da+1],k[S+1]=k[da+1],c[S+2]=c[da+2],k[S+2]=k[da+2],c[S+3]=c[da+3],k[S+3]=k[da+3],g=20);20==g&&(r=0);if(3==(r|0)){break}}b=f}Anb.X=1;function Bnb(a,d,e){var f=b;b+=64;var g=f+16,h=f+32,i=f+36,j=f+37,e=(0>k[a+4]?-k[a+4]:0)*e;if(0<e&&e<k[a+13]&&(c[a+42]&1||!(c[a+43]&1))){e=k[a+13]}var l=c[a+47];S2();k[i]=k[a+27]+e;Q(h,(l<<2)+T2,i);JC(a+28,h);eQ(f);eQ(g);pQ(f,a+23);pQ(g,a+28);h=c[a+2];i=c[a+47];S2();U2(j,h,(i<<2)+T2,k[a+10]);c[j+2]=c[ci(P2(a))+1];c[j+3]=c[ci(P2(a))+2];c[a+44]&1?$_(c[a+2],c[a+3],f,g,j,k[d+7+9]):Rl(d,c[a+3],f,g,j,k[d+7+9]);d=a+23;cz(j)?(yB(d,a+23,a+28,k[j+1]),k[a+4]=0,k[a+5]=0,c[a+43]=0):(a+=28,c[d]=c[a],k[d]=k[a],c[d+1]=c[a+1],k[d+1]=k[a+1],c[d+2]=c[a+2],k[d+2]=k[a+2],c[d+3]=c[a+3],k[d+3]=k[a+3]);b=f}Bnb.X=1;function Cnb(a,d){var e=b;b+=4;c[a+45]=1;var f=a+15;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];Dnb(e,a+15);f=a+19;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];b=e}Cnb.X=1;function Dnb(a,d){var e=b;b+=3;var f=e+1,g=e+2;uC(a,d);1.1920928955078125e-7>JB(a)&&(k[e]=0,k[f]=0,k[g]=0,pe(a,e,f,g));b=e}Dnb.X=1;function Enb(a,d,e){var f=b;b+=4;c[a+45]=0;var g=a+15;c[g]=c[d];k[g]=k[d];c[g+1]=c[d+1];k[g+1]=k[d+1];c[g+2]=c[d+2];k[g+2]=k[d+2];c[g+3]=c[d+3];k[g+3]=k[d+3];Dnb(f,a+15);d=a+19;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];k[a+46]=e;b=f}Enb.X=1;function Fnb(a,d){var e=b;b+=16;eQ(e);pQ(e,d);Ji(c[a+2],e);b=e}Fnb.X=1;function Gnb(a,d){var e;e=0;c[a+37]=0;for(var f=a+37;unb(a,d)&&!(e+=1,c[f]=1,4<(e|0));){}e=a+23;f=c[a+2]+1+12;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+28;f=a+23;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3]}Gnb.X=1;function Hnb(){}Hnb.X=1;function qnb(a){c[a]=Inb+2}qnb.X=1;function Jnb(a){return 0==k[a+4]?0==k[a+5]:0}Jnb.X=1;function $U(a,d){c[a+85]&1?(c[d]=0,c[d+1]=0):(c[d]=3,c[d+1]=3)}$U.X=1;function Knb(a,d,e){var f=b;b+=21;var g=f+16,h=f+17;if(4==(c[a+45]&1?4:0>=k[a+46]?17:4)){c[a+42]=v[c[c[a]+12]](a)&1;var i=a+4;k[i]-=k[a+11]*e;0<k[a+4]&&k[a+4]>k[a+7]&&(k[a+4]=k[a+7]);0>k[a+4]&&sc(k[a+4])>sc(k[a+6])&&(k[a+4]=-sc(k[a+6]));k[a+5]=k[a+4]*e;xi(f,c[a+2]+1);wnb(a,d);c[a+45]&1?Anb(a,d,a+15):(k[g]=e<k[a+46]?e:k[a+46],i=a+46,k[i]-=e,Q(h,a+15,g),Anb(a,d,h));Bnb(a,d,e);pQ(f,a+23);Ji(c[a+2],f)}b=f}Knb.X=1;function Lnb(a){return v[c[c[a]+12]](a)}Lnb.X=1;function Mnb(a){v[c[c[a]+10]](a)&&(k[a+4]=k[a+7],c[a+43]=1)}Mnb.X=1;function Nnb(a,d,e){v[c[c[a]+8]](a,d);v[c[c[a]+9]](a,d,e)}Nnb.X=1;function U2(a,d,e,f){var g=b;b+=14;var h=g+4,i=g+5,j=g+6,l=g+7,m=g+11,n=g+12,p=g+13;k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);k[m]=0;k[n]=0;k[p]=0;H(l,m,n,p);fV(a,g,l);c[a]=Onb+2;c[a+21]=d;d=a+22;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];k[a+26]=f;b=g}U2.X=1;function Pnb(a){xe(a)}Pnb.X=1;function Qnb(a,d,e){var f=b;b+=8;var g=f+4,e=e&1;(c[d]|0)==(c[a+21]|0)?a=1:(e&1?g=d+2:Bo(g,c[d]+1,d+2),c[f]=c[g],k[f]=k[g],c[f+1]=c[g+1],k[f+1]=k[g+1],c[f+2]=c[g+2],k[f+2]=k[g+2],c[f+3]=c[g+3],k[f+3]=k[g+3],a=J(a+22,f)<k[a+26]?1:DW(a,d,e&1));b=f;return a}Qnb.X=1;function Rnb(){}Rnb.X=1;function Snb(a){xe(a)}Snb.X=1;function Tnb(){}Tnb.X=1;function Unb(a){xe(a)}Unb.X=1;function kya(a,d,e,f,g){g2(a,3,d,e);c[a]=V2+2;d=a+74;c[d]=c[f];k[d]=k[f];c[d+1]=c[f+1];k[d+1]=k[f+1];c[d+2]=c[f+2];k[d+2]=k[f+2];c[d+3]=c[f+3];k[d+3]=k[f+3];f=a+78;c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];c[a+82]=0;c[a+85]=0;Jm(a+86)}kya.X=1;function iya(a,d,e){i2(a,3,d);c[a]=V2+2;var f=a+74;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];vw(a+78,d+1,e);c[a+82]=0;c[a+85]=0;Jm(a+86)}iya.X=1;function Vnb(a){var d=b;b+=47;var e=d+4,f=d+5,g=d+6,h=d+7,i=d+19,j=d+31,l=d+35,m=d+39,n=d+43;k[a+9]=0;k[e]=0;k[f]=0;k[g]=0;H(d,e,f,g);for(var e=0,f=a+11,g=a+7,p=a+8,r=a+7,s=a+74,t=a+7,w=a+8,x=a+78,y=a+8,z=a+7,A=a+7,C=a+8,a=a+8;;){k[d+e]=1;var B=f+21*e;0!=(B|0)&&(ue(h,c[g]+1),ue(i,c[p]+1),vw(l,c[r]+1,s),N(j,l,c[t]+1+12),vw(n,c[w]+1,x),N(m,n,c[y]+1+12),GL(B,h,i,j,m,d,c[z]+97,Zm(c[A]),c[C]+97,Zm(c[a])));k[d+e]=0;e=B=e+1;if(3<=(B|0)){break}}b=d}Vnb.X=1;function Wnb(a,d){$U(a,d)}Wnb.X=1;function Xnb(a,d){YU(a,d,c[a+7]+1,c[a+8]+1)}Xnb.X=1;function Ynb(){return 76}Ynb.X=1;function Znb(a,d,e,f){if(-1==(f|0)){if(1==(d|0)||2==(d|0)){k[a+83]=e,a+=82,c[a]|=1}else{if(3==(d|0)||4==(d|0)){k[a+84]=e,a+=82,c[a]|=2}}}}Znb.X=1;function $nb(a,d,e){var f;f=3.4028234663852886e+38;if(-1==(e|0)){if(1==(d|0)||2==(d|0)){f=k[a+83]}else{if(3==(d|0)||4==(d|0)){f=k[a+84]}}}return f}$nb.X=1;function aob(a){k[a+28]=0;k[a+27]=0}aob.X=1;function W2(a,d){return c[a+3]+71*d}W2.X=1;function YU(a,d,e,f){var g=b;b+=16;var h,i,j,l=g+4,m=g+8;k[c[d+2]]=1;k[c[d+2]+c[d+6]+1]=1;k[(c[d+6]<<1)+c[d+2]+2]=1;Bo(g,e,a+74);h=c[d+3];i=c[d+3]+c[d+6];j=(c[d+6]<<1)+c[d+3];WP(l,g);CB(l,h,i,j);Bo(m,f,a+78);WP(g+12,m);CB(m,c[d+5],c[d+5]+c[d+6],(c[d+6]<<1)+c[d+5]);i=k[d]*(0!=(c[a+82]&1|0)?k[a+83]:k[d+1]);for(h=0;!(k[c[d+7]+c[d+6]*h]=i*(k[m+h]+k[f+12+h]-k[g+h]-k[e+12+h]),h=j=h+1,3<=(j|0));){}e=0!=(c[a+82]&2|0);a:do{if(e){h=0;for(f=a+84;;){if(k[c[d+8]+c[d+6]*h]=k[f],h=m=h+1,3<=(m|0)){break a}}}}while(0);e=k[a+88];h=0;a+=86;for(f=a+2;!(0<k[f]&&(k[c[d+9]+c[d+6]*h]=-e,k[c[d+10]+c[d+6]*h]=e),h=m=h+1,3<=(m|0));){}k[d+13]=k[a+1];b=g}YU.X=1;function bob(){}bob.X=1;function cob(a){xe(a)}cob.X=1;function dob(a,d,e){o2(a,d,e);Mb(a+74,d+14);Mb(a+78,d+18);return D.of}dob.X=1;function eob(){var a=b;b+=14;var d=a+4,e=a+5,f=a+6,g=a+7,h=a+11,i=a+12,j=a+13;0==c[fob]<<24>>24&&0!=(Hb(fob)|0)&&(k[d]=0,k[e]=0,k[f]=0,H(a,d,e,f),Sn(X2,0,0,0,a),Y2(14,X2));k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);fn(X2,0,g);b=a;return X2}eob.X=1;function gob(a){hob(a)}gob.X=1;function hF(a,d,e,f){qnb(a);c[a]=Z2+2;KW(a+1);KW(a+6);LW(a+11);LW(a+16);c[a+25]=f;k[a+26]=0;iob(a+33);c[a+29]=e;c[a+30]=0;c[a+31]=2;c[a+32]=1;aob(a)}hF.X=1;function job(a){kob(a);xe(a)}job.X=1;function hoa(a,d,e,f,g,h,i,j){var l=b;b+=92;var m=l+21;c[l]=c[d];k[l]=k[d];c[l+1]=c[d+1];k[l+1]=k[d+1];c[l+2]=c[d+2];k[l+2]=k[d+2];c[l+3]=c[d+3];k[l+3]=k[d+3];d=l+4;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];e=l+8;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];k[l+12]=g;k[l+14]=h;k[l+15]=k[i];k[l+16]=k[i+1];k[l+17]=k[i+2];k[l+18]=k[i+4];c[l+20]=j&1;k[l+13]=k[i+3];k[l+19]=k[i+5];sB(m,l);lob(a+33,m);f=W2(a+33,AE(a)-1);KE(a,f,0);yE(a,AE(a)-1,0);b=l;return f}hoa.X=1;function lob(a,d){(BE(a)|0)==(mob(a)|0)&&nob(a,oob(a,BE(a)));var e=c[a+3]+71*c[a+1];0!=(e|0)&&pob(e,d);e=a+1;c[e]+=1}lob.X=1;function KE(a,d,e){var f=b;b+=28;var g=f+16,h=f+20,i=f+24,e=e&1;c[d+21]=0;sQ(f,HE(a));e&1&&0!=(Un(TD(a))|0)&&(a=Un(TD(a)),v[c[c[a]+2]](a,f));vw(g,f,d+39);a=d+9;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];c[a+2]=c[g+2];k[a+2]=k[g+2];c[a+3]=c[g+3];k[a+3]=k[g+3];Bo(h,f,d+43);g=d+13;c[g]=c[h];k[g]=k[h];c[g+1]=c[h+1];k[g+1]=k[h+1];c[g+2]=c[h+2];k[g+2]=k[h+2];c[g+3]=c[h+3];k[g+3]=k[h+3];Bo(i,f,d+47);d+=17;c[d]=c[i];k[d]=k[i];c[d+1]=c[i+1];k[d+1]=k[i+1];c[d+2]=c[i+2];k[d+2]=k[i+2];c[d+3]=c[i+3];k[d+3]=k[i+3];b=f}KE.X=1;function kob(a){c[a]=Z2+2;qob(a+33);SW(a+16);SW(a+11);UW(a+6);UW(a+1)}kob.X=1;function rob(a,d){return c[a+3]+71*d}rob.X=1;function sob(a){return c[a+29]}sob.X=1;function yE(a,d,e){var f=b;b+=86;var g=f+4,h=f+8,i=f+9,j=f+13,l=f+25,m=f+29,n=f+30,p=f+42,r=f+54,s=f+66,t=f+78,w=f+82,d=W2(a+33,d);KE(a,d,e&1);WP(f,d+13);a=d+17;qn(g,f,a);e=IB(g);c[g]=c[e];k[g]=k[e];c[g+1]=c[e+1];k[g+1]=k[e+1];c[g+2]=c[e+2];k[g+2]=k[e+2];c[g+3]=c[e+3];k[g+3]=k[e+3];k[h]=k[d+58];IV(i,f,h);zb(j,i);k[m]=-k[d+59];IV(l,a,m);zb(n,l);Db(p,a,g,f,a+1,g+1,f+1,a+2,g+2,f+2);ww(s,j,n);ww(r,s,p);Wb(d+23,r);Q(w,d+13,d+8);wn(t,d+9,w);pQ(d+23,t);b=f}yE.X=1;function vE(a,d){return rob(a+33,d)+23}vE.X=1;function ME(a){var d=b;b+=4;var e,f;e=0;var g=a+33,h=(e|0)<(BE(g)|0);a:do{if(h){for(var i=a+33,j=d;;){f=W2(i,e);k[f+8]=pB(f);k[f+68]=0;WP(d,f+13);var l=f;c[l]=c[j];k[l]=k[j];c[l+1]=c[j+1];k[l+1]=k[j+1];c[l+2]=c[j+2];k[l+2]=k[j+2];c[l+3]=c[j+3];k[l+3]=k[j+3];k[f+67]=1;e+=1;if((e|0)>=(BE(g)|0)){break a}}}}while(0);b=d}ME.X=1;function HE(a){return sob(a)+1}HE.X=1;function CE(a,d){var e=b;b+=34;var f,g=e+1,h,i=e+5,j,l=e+9,m=e+18,n=e+22,p=e+26;j=e+30;KE(a,d,0);f=-1;k[e]=pB(d)+k[d+53];Q(g,d+13,e);h=d+9;wn(i,h,g);g=d+4;c[g]=c[i];k[g]=k[i];c[g+1]=c[i+1];k[g+1]=k[i+1];c[g+2]=c[i+2];k[g+2]=k[i+2];c[g+3]=c[i+3];k[g+3]=k[i+3];wG(l);i=c[a+25];h=v[c[c[i]+2]](i,h,d+4,l);c[d+22]=0;0!=(h|0)?(j=k[l+8],f=k[e]*k[l+8],h=l+4,c[d]=c[h],k[d]=k[h],c[d+1]=c[h+1],k[d+1]=k[h+1],c[d+2]=c[h+2],k[d+2]=k[h+2],c[d+3]=c[h+3],k[d+3]=k[h+3],c[d+21]=1,eob(),c[d+22]=X2,k[d+8]=j*k[e]-k[d+53],j=pB(d)-.009999999776482582*k[d+52],h=pB(d)+.009999999776482582*k[d+52],k[d+8]<j&&(k[d+8]=j),k[d+8]>h&&(k[d+8]=h),j=d+4,c[j]=c[l],k[j]=k[l],c[j+1]=c[l+1],k[j+1]=k[l+1],c[j+2]=c[l+2],k[j+2]=k[l+2],c[j+3]=c[l+3],k[j+3]=k[l+3],l=J(d,d+13),N(n,d+4,TD(a)+1+12),no(p,TD(a),n),c[m]=c[p],k[m]=k[p],c[m+1]=c[p+1],k[m+1]=k[p+1],c[m+2]=c[p+2],k[m+2]=k[p+2],c[m+3]=c[p+3],k[m+3]=k[p+3],-.10000000149011612<=l?(k[d+68]=0,k[d+67]=10):(n=-1/l,k[d+68]=J(d,m)*n,k[d+67]=n)):(k[d+8]=pB(d),k[d+68]=0,WP(j,d+13),c[d]=c[j],k[d]=k[j],c[d+1]=c[j+1],k[d+1]=k[j+1],c[d+2]=c[j+2],k[d+2]=k[j+2],c[d+3]=c[j+3],k[d+3]=k[j+3],k[d+67]=1);b=e;return f}CE.X=1;function tob(a,d){var e=b;b+=35;var f,g=e+1,h=e+5,i=e+6,j=e+10,l=e+14,m,n=e+18,p=e+22,r,s=e+26,t=e+30,w=e+31;k[e]=d;f=0;var x=(f|0)<(AE(a)|0);a:do{if(x){for(;;){if(yE(a,f,0),f+=1,(f|0)>=(AE(a)|0)){break a}}}}while(0);k[a+28]=3.5999999046325684*JB(TD(a)+76);f=HE(a);H(g,0+f+c[a+32],4+f+c[a+32],8+f+c[a+32]);0>J(g,TD(a)+76)&&(g=a+28,k[g]*=-1);g=0;f=a+33;x=(g|0)<(BE(f)|0);a:do{if(x){for(m=a+33;;){if($depth=CE(a,W2(m,g)),g+=1,(g|0)>=(BE(f)|0)){break a}}}}while(0);uE(a,k[e]);g=0;x=a+33;m=(g|0)<(BE(x)|0);a:do{if(m){for(r=a+33;;){if(f=W2(r,g),k[h]=k[f+69],k[h]>k[f+62]&&(k[h]=k[f+62]),Q(j,f,h),Q(i,j,e),N(l,f+4,TD(a)+1+12),yn(TD(a),i,l),g+=1,(g|0)>=(BE(x)|0)){break a}}}}while(0);v[c[c[a]+5]](a,k[e]);g=0;h=a+33;i=(g|0)<(BE(h)|0);a:do{if(i){j=a+33;l=a+32;f=a+32;for(x=a+32;;){if(m=W2(j,g),N(n,m+9,TD(a)+1+12),no(p,TD(a),n),c[m+21]&1&&(r=HE(a),H(s,0+r+c[l],4+r+c[f],8+r+c[x]),k[t]=J(s,m),Q(w,m,t),JC(s,w),k[m+60]=J(s,p)*k[e]/k[m+53]),r=m+59,k[r]+=k[m+60],m+=60,k[m]*=.9900000095367432,g+=1,(g|0)>=(BE(h)|0)){break a}}}}while(0);b=e}tob.X=1;function uE(a,d){var e,f,g,h,i,j;$2=d;e=1/Zm(c[a+29]);f=0;var l=(f|0)<(AE(a)|0);a:do{if(l){for(var m=a+33;;){if(h=g=W2(m,f),c[g+21]&1?(h=pB(h),h=k[g+54]*(h-k[g+8])*k[g+67],i=k[g+68],j=g,j=0>i?k[j+55]:k[j+56],h-=j*i,k[g+69]=h*e,0>k[g+69]&&(k[g+69]=0)):k[h+69]=0,f+=1,(f|0)>=(AE(a)|0)){break a}}}}while(0)}uE.X=1;function kF(a,d,e){k[IE(a,e)+58]=d}kF.X=1;function IE(a,d){return W2(a+33,d)}IE.X=1;function iF(a,d){return k[uob(a,d)+58]}iF.X=1;function uob(a,d){return rob(a+33,d)}uob.X=1;function DE(a,d,e){k[IE(a,e)+63]=d}DE.X=1;function jF(a,d,e){k[IE(a,e)+64]=d}jF.X=1;function vob(a){var d=b;b+=23;var e,f=d+1,g=d+5,h=d+9,i=d+10,j=d+14,l=d+18,m=d+22;k[d]=0;e=a+2;N(f,e,c[a]+1+12);N(g,e,c[a+1]+1+12);k[h]=k[a+11];no(i,c[a],f);no(j,c[a+1],g);N(l,i,j);k[d]=-J(a+6,l)*k[a+10];BB(d,h);k[m]=-k[h];RB(d,m);a=k[d];b=d;return a}vob.X=1;function wob(a,d){var e=b;b+=76;var f,g=e+4,h=e+8,i=e+9,j,l,m,n=e+10,p=e+22,r,s=e+26,t=e+27,w=e+31,x,y,z,A,C,B=e+35,K,E,G,M,L,F,I,R=e+47,O=e+51,Z,P=e+55,S=e+59,da=e+63,V=e+67,ba=e+71,$=e+72;f=AE(a);var Y=0!=(f|0);a:do{if(Y){xZ(a+1,f,e);xZ(a+6,f,g);k[h]=0;z0(a+11,f,h);k[i]=0;z0(a+16,f,i);j=0;var la=(j|0)<(AE(a)|0);b:do{if(la){for(var ka=a+33,ja=a+16,ea=a+11;;){if($groundObject=c[W2(ka,j)+22],k[y0(ja,j)]=0,k[y0(ea,j)]=0,j+=1,(j|0)>=(AE(a)|0)){break b}}}}while(0);l=0;var ca=(l|0)<(AE(a)|0);b:do{if(ca){for(var W=a+33,U=a+6,X=a+30,ma=a+30,ga=a+30,ha=p,ta=a+6,ra=a+6,ua=a+6,za=a+6,Za=a+1,ib=a+6,Ca=w,Sa=a+1,mb=a+29,Oa=a+6,Pa=a+16,fc=a+16;;){m=W2(W,l);var jb=c[m+22];if(0!=(jb|0)){EW(n,vE(a,l));var La=xg(U,l);H(p,0+n+c[X],4+n+c[ma],8+n+c[ga]);var fb=La;c[fb]=c[ha];k[fb]=k[ha];c[fb+1]=c[ha+1];k[fb+1]=k[ha+1];c[fb+2]=c[ha+2];k[fb+2]=k[ha+2];c[fb+3]=c[ha+3];k[fb+3]=k[ha+3];r=m;k[s]=J(xg(ta,l),r);var Rb=xg(ra,l);Q(t,r,s);JC(Rb,t);var pb=xg(ua,l),Sb=IB(xg(za,l));c[pb]=c[Sb];k[pb]=k[Sb];c[pb+1]=c[Sb+1];k[pb+1]=k[Sb+1];c[pb+2]=c[Sb+2];k[pb+2]=k[Sb+2];c[pb+3]=c[Sb+3];k[pb+3]=k[Sb+3];var ab=xg(Za,l);qn(w,r,xg(ib,l));var Ib=ab;c[Ib]=c[Ca];k[Ib]=k[Ca];c[Ib+1]=c[Ca+1];k[Ib+1]=k[Ca+1];c[Ib+2]=c[Ca+2];k[Ib+2]=k[Ca+2];c[Ib+3]=c[Ca+3];k[Ib+3]=k[Ca+3];IB(xg(Sa,l));Fjb(c[mb],m+4,jb,m+4,0,xg(Oa,l),y0(Pa,l),d);var Fc=y0(fc,l);k[Fc]*=k[xob]}l+=1;if((l|0)>=(AE(a)|0)){break b}}}}while(0);y=x=0;var Ac=(y|0)<(AE(a)|0);b:do{if(Ac){for(var ob=a+33,Gc=a+29,Yc=a+1,Cc=a+11,Ub=a+33,Uc=a+33,nd=a+11,Ic=a+11,tc=a+16,hd=a+33;;){z=W2(ob,y);var Tb=c[z+22];A=Tb;C=0;0!=(Tb|0)&&(0!=k[z+63]?C=k[z+63]*d:(yob(B,c[Gc],A,z+4,xg(Yc,y),0!=k[z+64]?k[z+64]:0),C=vob(B)));k[y0(Cc,y)]=0;k[W2(Ub,y)+70]=1;if(0!=(A|0)&&(k[W2(Uc,y)+70]=1,K=k[z+69]*d*k[z+57],k[y0(nd,y)]=C,E=.5*k[y0(Ic,y)],G=1*k[y0(tc,y)],M=E*E+G*G,M>K*K)){x=1;var Jc=K/ec(M),ub=W2(hd,y)+70;k[ub]*=Jc}y+=1;if((y|0)>=(AE(a)|0)){break b}}}}while(0);var uc=x&1;b:do{if(uc&&(L=0,(L|0)<(AE(a)|0))){for(var Kc=a+16,gb=a+33,gc=a+33,Lc=a+11,Dc=a+33,Eb=a+16;;){if(0!=k[y0(Kc,L)]&&1>k[W2(gb,L)+70]){var Ra=y0(Lc,L);k[Ra]*=k[W2(gc,L)+70];var qb=y0(Eb,L);k[qb]*=k[W2(Dc,L)+70]}L+=1;if((L|0)>=(AE(a)|0)){break b}}}}while(0);F=0;if((F|0)<(AE(a)|0)){for(var Ab=a+33,hc=a+29,Hc=a+11,ic=a+29,db=a+1,bb=a+11,id=a+16,Zc=a+33,vb=a+6,rb=a+16,vc=a+31,Qc=a+29;;){I=W2(Ab,F);N(R,I+4,c[hc]+1+12);if(0!=k[y0(Hc,F)]){var Rc=c[ic];Q(O,xg(db,F),y0(bb,F));yn(Rc,O,R)}0!=k[y0(id,F)]&&(Z=c[W2(Zc,F)+22],N(P,I+4,Z+1+12),Q(S,xg(vb,F),y0(rb,F)),Jb(da,TD(a)+1,c[vc]),k[ba]=J(da,R)*(1-k[I+61]),Q(V,da,ba),JC(R,V),yn(c[Qc],S,R),WP($,S),yn(Z,$,P));F+=1;if((F|0)>=(AE(a)|0)){break a}}}}}while(0);b=e}wob.X=1;function zob(a,d){var e=b;b+=25;var f,g=e+4,h=e+5,i=e+6,j=e+7,l=e+8,m=e+9,n=e+10,p=e+11,r=e+12,s=e+13,t=e+17,w=e+21;f=0;var x=(f|0)<(AE(a)|0);a:do{if(x){for(var y=s;;){k[g]=0;k[h]=1;k[i]=1;H(e,g,h,i);c[IE(a,f)+21]&1?(k[j]=0,k[l]=0,k[m]=1,pe(e,j,l,m)):(k[n]=1,k[p]=0,k[r]=1,pe(e,n,p,r));var z=IE(a,f)+23+12;c[y]=c[z];k[y]=k[z];c[y+1]=c[z+1];k[y+1]=k[z+1];c[y+2]=c[z+2];k[y+2]=k[z+2];c[y+3]=c[z+3];k[y+3]=k[z+3];H(t,0+(IE(a,f)+23)+WD(a),4+(IE(a,f)+23)+WD(a),8+(IE(a,f)+23)+WD(a));var z=d,A=c[c[z]+2];wn(w,s,t);v[A](z,s,w,e);z=d;v[c[c[z]+2]](z,s,IE(a,f)+4,e);f+=1;if((f|0)>=(AE(a)|0)){break a}}}}while(0);b=e}zob.X=1;function Aob(a,d,e,f){var g=b;b+=22;var h;kE(g,d,e);a=c[a+1];v[c[c[a]+7]](a,d,e,g);ND(g)?(d=p2(c[g+2]),0==(d|0)?f=7:li(d)?(h=g+18,c[f]=c[h],k[f]=k[h],c[f+1]=c[h+1],k[f+1]=k[h+1],c[f+2]=c[h+2],k[f+2]=k[h+2],c[f+3]=c[h+3],k[f+3]=k[h+3],h=f+4,e=g+14,c[h]=c[e],k[h]=k[e],c[h+1]=c[e+1],k[h+1]=k[e+1],c[h+2]=c[e+2],k[h+2]=k[e+2],c[h+3]=c[e+3],k[h+3]=k[e+3],IB(f+4),k[f+8]=k[g+1],h=d,$8=1,f=8):f=7):f=7;7==f&&(h=0,$8=1);b=g;return h}Aob.X=1;function oob(a,d){$1=a;return 0!=(d|0)?d<<1:1}oob.X=1;function Bob(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Bob.X=1;function Cob(a,d,e,f){c[a+30]=d;c[a+31]=e;c[a+32]=f}Cob.X=1;function mob(a){return c[a+2]}mob.X=1;function iob(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}iob.X=1;function Dob(a,d,e){$2=d;v[c[c[a]+4]](a,e)}Dob.X=1;function Eob(){}Eob.X=1;function Fob(a){xe(a)}Fob.X=1;function nob(a,d){var e;(mob(a)|0)<(d|0)&&(e=Gob(a,d),Hob(a,0,BE(a),e),Bob(a,0,BE(a)),Iob(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}nob.X=1;function pob(a,d){for(var e=d,f=a,g=e+23;e<g;e++,f++){c[f]=c[e],k[f]=k[e]}sQ(a+23,d+23);e=a+39;f=d+39;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+43;f=d+43;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+47;f=d+47;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];k[a+51]=k[d+51];k[a+52]=k[d+52];k[a+53]=k[d+53];k[a+54]=k[d+54];k[a+55]=k[d+55];k[a+56]=k[d+56];k[a+57]=k[d+57];k[a+58]=k[d+58];k[a+59]=k[d+59];k[a+60]=k[d+60];k[a+61]=k[d+61];k[a+62]=k[d+62];k[a+63]=k[d+63];k[a+64]=k[d+64];c[a+65]=c[d+65]&1;c[a+66]=c[d+66];k[a+67]=k[d+67];k[a+68]=k[d+68];k[a+69]=k[d+69];k[a+70]=k[d+70]}pob.X=1;function Gob(a,d){return 0!=(d|0)?Job(a,d,0):0}Gob.X=1;function Hob(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+71*d;0!=(i|0)&&pob(i,c[h]+71*d);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Hob.X=1;function Iob(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Kob(a,c[a+3]),c[a+3]=0)}Iob.X=1;function Kob(a,d){$1=a;yh(d)}Kob.X=1;function Job(a,d,e){$1=a;$3=e;return Ue(284*d,16)}Job.X=1;function qob(a){Bob(a,0,BE(a));Iob(a);iob(a)}qob.X=1;function yob(a,d,e,f,g,h){c[a]=d;c[a+1]=e;var i=a+2;c[i]=c[f];k[i]=k[f];c[i+1]=c[f+1];k[i+1]=k[f+1];c[i+2]=c[f+2];k[i+2]=k[f+2];c[i+3]=c[f+3];k[i+3]=k[f+3];i=a+6;c[i]=c[g];k[i]=k[g];c[i+1]=c[g+1];k[i+1]=k[g+1];c[i+2]=c[g+2];k[i+2]=k[g+2];c[i+3]=c[g+3];k[i+3]=k[g+3];k[a+11]=h;d=ln(d,f,g);k[a+10]=1/(d+ln(e,f,g))}yob.X=1;function hob(a){c[a]=a3+2;w2(a+119)}hob.X=1;function Lob(a,d){var e=b;b+=34;var f=e+1,g=e+2,h=e+3,i=e+4,j=e+5,l=e+6,m=e+7,n=e+8,p=e+9,r=e+10,s=e+11,t=e+12,w=e+13,x=e+14,y=e+15,z=e+16,A=e+17,C=e+18,B=e+19,K=e+20,E=e+21,G=e+22,M=e+23,L=e+24,F=e+25,I=e+26,R=e+27,O=e+28,Z=e+29,P=e+30;c[a+58]=2;k[e]=0;k[f]=0;k[g]=0;pe(a+76,e,f,g);k[h]=0;k[i]=0;k[j]=0;pe(a+80,h,i,j);k[l]=1;k[m]=1;k[n]=1;pe(a+134,l,m,n);k[p]=1;k[r]=1;k[s]=1;pe(a+85,p,r,s);k[t]=0;k[w]=0;k[x]=0;pe(a+89,t,w,x);k[y]=0;k[z]=0;k[A]=0;pe(a+93,y,z,A);k[C]=0;k[B]=0;k[K]=0;pe(a+101,C,B,K);k[E]=0;k[G]=0;k[M]=0;pe(a+105,E,G,M);zo(a,k[d+23],k[d+24]);k[a+116]=k[d+27];k[a+117]=k[d+28];c[a+118]=c[d+1];c[a+150]=0;c[a+151]=0;c[a+111]=c[d+29]&1;k[a+112]=k[d+30];k[a+113]=k[d+31];k[a+114]=k[d+32];k[a+115]=k[d+33];0!=(c[a+118]|0)?(f=c[a+118],v[c[c[f]+2]](f,a+1)):xi(a+1,d+2);xi(a+17,a+1);k[L]=0;k[F]=0;k[I]=0;pe(a+33,L,F,I);k[R]=0;k[O]=0;k[Z]=0;pe(a+37,R,O,Z);k[a+56]=k[d+25];k[a+57]=k[d+26];v[c[c[a]+3]](a,c[d+18]);L=c[Mob];c[Mob]=L+1;c[a+125]=L;fn(a,k[d],d+19);yo(a);c[a+124]=0;EC(a+126);EC(a+130);Q(P,a+85,a+84);L=a+138;c[L]=c[P];k[L]=k[P];c[L+1]=c[P+1];k[L+1]=k[P+1];c[L+2]=c[P+2];k[L+2]=k[P+2];c[L+3]=c[P+3];k[L+3]=k[P+3];EC(a+142);EC(a+146);b=e}Lob.X=1;function Qn(a,d){Bi(a);c[a]=a3+2;v2(a+119);Lob(a,d)}Qn.X=1;function Nob(){return 480}Nob.X=1;function Oob(a,d,e){return k[a]<k[d]?d:k[e]<k[a]?e:a}Oob.X=1;function Pob(a){return c[a+48]}Pob.X=1;function zo(a,d,e){var f=b;b+=6;var g=f+1,h=f+2,i=f+3,j=f+4,l=f+5;k[f]=d;k[g]=e;k[h]=0;k[i]=1;k[a+109]=k[Oob(f,h,i)];k[j]=0;k[l]=1;k[a+110]=k[Oob(g,j,l)];b=f}zo.X=1;function fn(a,d,e){var f=b;b+=12;var g=f+1,h=f+5,i=f+6,j=f+7,l=f+8;k[f]=d;var d=a+51,m=c[d];0==k[f]?(c[d]=m|1,k[a+84]=0):(c[d]=m&-2,k[a+84]=1/k[f]);Q(g,a+93,f);d=a+89;c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];c[d+2]=c[g+2];k[d+2]=k[g+2];c[d+3]=c[g+3];k[d+3]=k[g+3];k[h]=0!=k[e]?1/k[e]:0;k[i]=0!=k[e+1]?1/k[e+1]:0;k[j]=0!=k[e+2]?1/k[e+2]:0;pe(a+97,h,i,j);Q(l,a+85,a+84);a+=138;c[a]=c[l];k[a]=k[l];c[a+1]=c[l+1];k[a+1]=k[l+1];c[a+2]=c[l+2];k[a+2]=k[l+2];c[a+3]=c[l+3];k[a+3]=k[l+3];b=f}fn.X=1;function yo(a){var d=b;b+=36;var e=d+12,f=d+24;Vb(e,a+1,a+97);ue(f,a+1);ww(d,e,f);Wb(a+64,d);b=d}yo.X=1;function Bn(a,d,e){iZ(a+1,a+76,a+80,d,e)}Bn.X=1;function to(a,d){var e=b;b+=8;if(0!=d){if(0!=(Un(a)|0)){var f=Un(a);v[c[c[f]+2]](f,a+1)}xY(a+17,a+1,d,a+76,a+80);var f=a+33,g=a+76;c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];f=a+37;g=a+80;c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];xi(a+17,a+1)}b=e}to.X=1;function po(a,d,e){var f=Pob(a);v[c[c[f]+2]](f,a+1,d,e)}po.X=1;function wo(a,d){var e=b;b+=5;var f=e+4;0!=k[a+84]&&(k[f]=1/k[a+84],Q(e,d,f),f=a+89,c[f]=c[e],k[f]=k[e],c[f+1]=c[e+1],k[f+1]=k[e+1],c[f+2]=c[e+2],k[f+2]=k[e+2],c[f+3]=c[e+3],k[f+3]=k[e+3]);f=a+93;c[f]=c[d];k[f]=k[d];c[f+1]=c[d+1];k[f+1]=k[d+1];c[f+2]=c[d+2];k[f+2]=k[d+2];c[f+3]=c[d+3];k[f+3]=k[d+3];b=e}wo.X=1;function Ro(a,d){var e=b;b+=26;var f=e+1,g=e+2,h=e+3,i=e+7,j=e+11,l=e+12,m=e+13,n=e+14,p=e+15,r=e+19,s=e+23,t=e+24,w=e+25;k[e]=lFa(1-k[a+109],d);LC(a+76,e);k[f]=lFa(1-k[a+110],d);LC(a+80,f);if(c[a+111]&1){Um(a+80)<k[a+114]&&Um(a+76)<k[a+113]&&(LC(a+80,a+112),LC(a+76,a+112));f=JB(a+76);if(f<k[a+109]){k[g]=.004999999888241291;var x=a+76;f>k[g]?(uC(h,x),Q(i,h,g),JC(a+76,i)):(k[j]=0,k[l]=0,k[m]=0,pe(x,j,l,m))}g=JB(a+80);g<k[a+110]&&(k[n]=.004999999888241291,h=a+80,g>k[n]?(uC(p,h),Q(r,p,n),JC(a+80,r)):(k[s]=0,k[t]=0,k[w]=0,pe(h,s,t,w)))}b=e}Ro.X=1;function fo(a){Pi(a)||tn(a,a+89)}fo.X=1;function kn(a,d){var e=a+17;Pi(a)?xi(e,a+1):xi(e,d);var e=a+33,f=a+76;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];e=a+37;f=a+80;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];c[e+2]=c[f+2];k[e+2]=k[f+2];c[e+3]=c[f+3];k[e+3]=k[f+3];xi(a+1,d);yo(a)}kn.X=1;function Fn(a,d){var e=b;b+=15;var f=e+1,g=e+5,h=e+6,i=e+10,j=e+14;k[e]=d;Pi(a)||(k[g]=k[a+84]*k[e],Q(f,a+101,g),xn(a+76,f),Bo(i,a+64,a+105),Q(h,i,e),xn(a+80,h),f=JB(a+80),1.5707963705062866<f*k[e]&&(k[j]=1.5707963705062866/k[e]/f,LC(a+80,j)));b=e}Fn.X=1;function yea(a,d){dc(d+1,a)}yea.X=1;function Qob(a,d){var e,f,g,h;f=p2(d);var i=0!=(f|0);a:do{if(i){g=0;var j=a+119,l=a+119;b:for(;;){if((g|0)<(Qo(j)|0)){h=c[vo(l,g)];var m=(Io(h)|0)==(f|0);do{if(!m&&(Ho(h)|0)!=(f|0)){g+=1;continue b}}while(0);e=0;break a}e=1;break a}}else{e=1}}while(0);return e}Qob.X=1;function eo(a,d){var e=b;b+=24;var f=e+4,g=e+8;0!=k[a+84]&&(wn(e,a+76,a+126),co(a,e),wn(f,a+80,a+130),Dn(a,f),iZ(a+1,a+142,a+146,d,g),Ji(a,g));b=e}eo.X=1;function En(a,d){var e=b;b+=1;c[e]=d;(Ekb(a+119,e)|0)==(Qo(a+119)|0)&&A2(a+119,e);c[a+63]=1;b=e}En.X=1;function ao(a,d){var e=b;b+=1;c[e]=d;Dkb(a+119,e);c[a+63]=0<(Qo(a+119)|0)&1;b=e}ao.X=1;function Sn(a,d,e,f,g){var h=b;b+=34;Bi(a);c[a]=a3+2;v2(a+119);wQ(h,d,e,f,g);Lob(a,h);b=h}Sn.X=1;function Rob(a){c[a]=Sob+2}Rob.X=1;function rI(a){c[a+31]=1664525*c[a+31]+1013904223;return c[a+31]}rI.X=1;function Tob(a,d,e){QRa(a,d,e);Lb(a+64,d+62);Mb(a+76,d+74);Mb(a+80,d+78);k[d+110]=k[a+84];Mb(a+134,d+82);Mb(a+85,d+86);Mb(a+89,d+90);Mb(a+93,d+94);Mb(a+97,d+98);Mb(a+101,d+102);Mb(a+105,d+106);k[d+111]=k[a+109];k[d+112]=k[a+110];c[d+119]=c[a+111]&1;k[d+113]=k[a+112];k[d+114]=k[a+113];k[d+115]=k[a+114];k[d+116]=k[a+115];k[d+117]=k[a+116];k[d+118]=k[a+117];return D.rf}Tob.X=1;function Uob(a,d){var e,f;e=v[c[c[d]+4]](d,v[c[c[a]+4]](a),1);f=v[c[c[a]+5]](a,c[e+2],d);v[c[c[d]+5]](d,e,f,1497645650,a)}Uob.X=1;function pI(a){Rob(a);c[a]=b3+2;c3(a+1);c3(a+6);c3(a+11);vW(a+16);vW(a+21);Vob(a+26);c[a+31]=0}pI.X=1;function Wob(a){Xob(a);xe(a)}Wob.X=1;function d3(a,d,e,f){var g=b;b+=12;var h,i,j=g+4,l=g+8;$1=a;a=k[f+29]-k[f+21]*k[f+30];h=J(f+4,d+126)+J(f,d+130);i=-J(f+4,e+126)+J(f+8,e+130);a-=h*k[f+23];a-=i*k[f+23];h=k[f+21]+a;h<k[f+31]?(a=k[f+31]-k[f+21],k[f+21]=k[f+31]):h>k[f+32]?(a=k[f+32]-k[f+21],k[f+21]=k[f+32]):k[f+21]=h;ig(g,f+4,d+138);ho(d,g,f+12,a);WP(l,f+4);ig(j,l,e+138);ho(e,j,f+16,a);b=g}d3.X=1;function Yob(a,d,e,f){var g=b;b+=12;var h,i,j=g+4,l=g+8;$1=a;a=k[f+29]-k[f+21]*k[f+30];h=J(f+4,d+126)+J(f,d+130);i=-J(f+4,e+126)+J(f+8,e+130);a-=h*k[f+23];a-=i*k[f+23];h=k[f+21]+a;h<k[f+31]?(a=k[f+31]-k[f+21],k[f+21]=k[f+31]):k[f+21]=h;ig(g,f+4,d+138);ho(d,g,f+12,a);WP(l,f+4);ig(j,l,e+138);ho(e,j,f+16,a);b=g}Yob.X=1;function Zob(a,d,e,f){var g=b;b+=12;var h,i,j=g+4,l=g+8;$1=a;0!=k[f+33]&&(c[$ob]+=1,a=k[f+33]-k[f+20]*k[f+30],h=J(f+4,d+142)+J(f,d+146),i=-J(f+4,e+142)+J(f+8,e+146),a-=h*k[f+23],a-=i*k[f+23],h=k[f+20]+a,h<k[f+31]?(a=k[f+31]-k[f+20],k[f+20]=k[f+31]):k[f+20]=h,ig(g,f+4,d+138),ko(d,g,f+12,a),WP(l,f+4),ig(j,l,e+138),ko(e,j,f+16,a));b=g}Zob.X=1;function apb(a){hob(a);yh(a)}apb.X=1;function Xob(a){c[a]=b3+2;bpb(a+26);wW(a+21);wW(a+16);e3(a+11);e3(a+6);e3(a+1)}Xob.X=1;function uI(a,d){var e;e=rI(a);65536>=d>>>0&&(e^=e>>>16,256>=d>>>0&&(e^=e>>>8,16>=d>>>0&&(e^=e>>>4,4>=d>>>0&&(e^=e>>>2,2>=d>>>0&&(e^=e>>>1)))));return(e>>>0)%(d>>>0)}uI.X=1;function f3(a,d){var e=b;b+=8;var f=e+4;0!=(a|0)&&Ri(a)&&(rn(e,d,a+1),JL(e,a+41),Bo(f,a+1,e),c[d]=c[f],k[d]=k[f],c[d+1]=c[f+1],k[d+1]=k[f+1],c[d+2]=c[f+2],k[d+2]=k[f+2],c[d+3]=c[f+3],k[d+3]=k[f+3]);b=e}f3.X=1;function cpb(a,d,e,f,g,h,i,j,l,m,n,p,r){var s=b;b+=78;var t=s+4,w=s+8,x=s+12,y=s+13,z=s+14,A=s+15,C=s+19,B=s+23,K=s+27,E=s+31,G=s+32,M=s+33,L=s+34,F=s+38,I=s+42,R=s+46,O,Z=s+50,P=s+54,S=s+55,da=s+56;O=s+57;var V=s+61,ba=s+62,$=s+63,Y=s+64,la=s+68,ka=s+69,ja=s+70,ea=s+71,ca=s+75,W=s+76,U=s+77;$1=a;$4=f;$5=g;a=p2(l);m=p2(m);f=d+4;c[f]=c[e];k[f]=k[e];c[f+1]=c[e+1];k[f+1]=k[e+1];c[f+2]=c[e+2];k[f+2]=k[e+2];c[f+3]=c[e+3];k[f+3]=k[e+3];0!=(a|0)?f=a:(g3(),f=h3);c[d+26]=f;0!=(m|0)?f=m:(g3(),f=h3);c[d+27]=f;k[d+22]=k[h+21];c[d+28]=0;k[d+21]=0;k[d+20]=0;qn(s,i,d+4);c[d]=c[s];k[d]=k[s];c[d+1]=c[s+1];k[d+1]=k[s+1];c[d+2]=c[s+2];k[d+2]=k[s+2];c[d+3]=c[s+3];k[d+3]=k[s+3];0!=(a|0)?(Bo(w,a+64,s),ig(t,w,a+134)):(k[x]=0,k[y]=0,k[z]=0,H(t,x,y,z));h=d+12;c[h]=c[t];k[h]=k[t];c[h+1]=c[t+1];k[h+1]=k[t+1];c[h+2]=c[t+2];k[h+2]=k[t+2];c[h+3]=c[t+3];k[h+3]=k[t+3];WP(C,d+4);qn(A,j,C);t=d+8;c[t]=c[A];k[t]=k[A];c[t+1]=c[A+1];k[t+1]=k[A+1];c[t+2]=c[A+2];k[t+2]=k[A+2];c[t+3]=c[A+3];k[t+3]=k[A+3];0!=(m|0)?(Bo(K,m+64,A),ig(B,K,m+134)):(k[E]=0,k[G]=0,k[M]=0,H(B,E,G,M));A=d+16;c[A]=c[B];k[A]=k[B];c[A+1]=c[B+1];k[A+1]=k[B+1];c[A+2]=c[B+2];k[A+2]=k[B+2];c[A+3]=c[B+3];k[A+3]=k[B+3];A=B=0;0!=(a|0)&&(qn(F,d+12,i),c[L]=c[F],k[L]=k[F],c[L+1]=c[F+1],k[L+1]=k[F+1],c[L+2]=c[F+2],k[L+2]=k[F+2],c[L+3]=c[F+3],k[L+3]=k[F+3],B=Zm(a)+J(e,L));0!=(m|0)&&(WP(R,d+16),qn(I,R,j),c[L]=c[I],k[L]=k[I],c[L+1]=c[I+1],k[L+1]=k[I+1],c[L+2]=c[I+2],k[L+2]=k[I+2],c[L+3]=c[I+3],k[L+3]=k[I+3],A=Zm(m)+J(e,L));k[d+23]=n/(B+A);0!=(a|0)?(e=a+76,c[Z]=c[e],k[Z]=k[e],c[Z+1]=c[e+1],k[Z+1]=k[e+1],c[Z+2]=c[e+2],k[Z+2]=k[e+2],c[Z+3]=c[e+3],k[Z+3]=k[e+3]):(k[P]=0,k[S]=0,k[da]=0,H(Z,P,S,da));Z=J(d+4,Z);0!=(a|0)?(V=a+80,c[O]=c[V],k[O]=k[V],c[O+1]=c[V+1],k[O+1]=k[V+1],c[O+2]=c[V+2],k[O+2]=k[V+2],c[O+3]=c[V+3],k[O+3]=k[V+3]):(k[V]=0,k[ba]=0,k[$]=0,H(O,V,ba,$));O=Z+J(d,O);0!=(m|0)?(la=m+76,c[Y]=c[la],k[Y]=k[la],c[Y+1]=c[la+1],k[Y+1]=k[la+1],c[Y+2]=c[la+2],k[Y+2]=k[la+2],c[Y+3]=c[la+3],k[Y+3]=k[la+3]):(k[la]=0,k[ka]=0,k[ja]=0,H(Y,la,ka,ja));Y=-J(d+4,Y);0!=(m|0)?(ca=m+80,c[ea]=c[ca],k[ea]=k[ca],c[ea+1]=c[ca+1],k[ea+1]=k[ca+1],c[ea+2]=c[ca+2],k[ea+2]=k[ca+2],c[ea+3]=c[ca+3],k[ea+3]=k[ca+3]):(k[ca]=0,k[W]=0,k[U]=0,H(ea,ca,W,U));k[d+29]=(p-(O+Y+J(d+8,ea)))*k[d+23];k[d+30]=r;k[d+31]=0;k[d+32]=1e10;b=s}cpb.X=1;function g3(){var a=b;b+=14;var d=a+4,e=a+5,f=a+6,g=a+7,h=a+11,i=a+12,j=a+13;0==c[dpb]<<24>>24&&0!=(Hb(dpb)|0)&&(k[d]=0,k[e]=0,k[f]=0,H(a,d,e,f),Sn(h3,0,0,0,a),Y2(14,h3));k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);fn(h3,0,g);b=a;return h3}g3.X=1;function i3(a,d,e,f,g,h,i,j,l,m,n,p,r){var s;s=epb(a+11);c[s+25]=g;cpb(a,s,d,e,f,h,i,j,l,m,n,p,r);return s}i3.X=1;function epb(a){var d;d=j3(a);(d|0)==(fpb(a)|0)&&gpb(a,hpb(a,j3(a)));var e=a+1;c[e]+=1;return c[a+3]+34*d}epb.X=1;function k3(a,d){return c[a+3]+34*d}k3.X=1;function ipb(a,d,e,f,g,h,i,j,l,m,n){a=b;b+=138;var p,r,s,t=a+4,w=a+8,x=a+12,y=a+16,z=a+20,A=a+21,C=a+22,B=a+23,K=a+27,E=a+31,G=a+35,M=a+39,L=a+40,F=a+41,I=a+42,R=a+46,O=a+50,Z=a+54,P=a+58,S=a+62,da=a+66,V=a+70,ba=a+74,$=a+75,Y=a+76,la=a+77,ka=a+81,ja=a+82,ea=a+83,ca=a+84,W=a+88,U=a+92,X=a+96,ma=a+97,ga=a+101,ha=a+105,ta=a+106,ra,ua=a+110,za=a+114,Za=a+115,ib=a+116;ra=a+117;var Ca=a+121,Sa=a+122,mb=a+123,Oa=a+124,Pa=a+128,fc=a+129,jb=a+130,La=a+131,fb=a+135,Rb=a+136,pb=a+137;p=p2(e);r=p2(f);s=g+8;N(a,g+12,e+1+12);c[m]=c[a];k[m]=k[a];c[m+1]=c[a+1];k[m+1]=k[a+1];c[m+2]=c[a+2];k[m+2]=k[a+2];c[m+3]=c[a+3];k[m+3]=k[a+3];N(t,s,f+1+12);c[n]=c[t];k[n]=k[t];c[n+1]=c[t+1];k[n+1]=k[t+1];c[n+2]=c[t+2];k[n+2]=k[t+2];c[n+3]=c[t+3];k[n+3]=k[t+3];k[l]=1;qn(w,m,g+16);0!=(p|0)?(Bo(y,p+64,w),ig(x,y,p+134)):(k[z]=0,k[A]=0,k[C]=0,H(x,z,A,C));e=d+12;c[e]=c[x];k[e]=k[x];c[e+1]=c[x+1];k[e+1]=k[x+1];c[e+2]=c[x+2];k[e+2]=k[x+2];c[e+3]=c[x+3];k[e+3]=k[x+3];qn(B,n,g+16);0!=(r|0)?(e=r+64,WP(G,B),Bo(E,e,G),ig(K,E,r+134)):(k[M]=0,k[L]=0,k[F]=0,H(K,M,L,F));B=d+16;c[B]=c[K];k[B]=k[K];c[B+1]=c[K+1];k[B+1]=k[K+1];c[B+2]=c[K+2];k[B+2]=k[K+2];c[B+3]=c[K+3];k[B+3]=k[K+3];B=K=0;0!=(p|0)&&(qn(R,d+12,m),c[I]=c[R],k[I]=k[R],c[I+1]=c[R+1],k[I+1]=k[R+1],c[I+2]=c[R+2],k[I+2]=k[R+2],c[I+3]=c[R+3],k[I+3]=k[R+3],K=Zm(p)+J(g+16,I));0!=(r|0)&&(WP(Z,d+16),qn(O,Z,n),c[I]=c[O],k[I]=k[O],c[I+1]=c[O+1],k[I+1]=k[O+1],c[I+2]=c[O+2],k[I+2]=k[O+2],c[I+3]=c[O+3],k[I+3]=k[O+3],B=Zm(r)+J(g+16,I));k[d+23]=k[l]/(K+B);l=d+4;I=g+16;c[l]=c[I];k[l]=k[I];c[l+1]=c[I+1];k[l+1]=k[I+1];c[l+2]=c[I+2];k[l+2]=k[I+2];c[l+3]=c[I+3];k[l+3]=k[I+3];qn(P,m,g+16);c[d]=c[P];k[d]=k[P];c[d+1]=c[P+1];k[d+1]=k[P+1];c[d+2]=c[P+2];k[d+2]=k[P+2];c[d+3]=c[P+3];k[d+3]=k[P+3];WP(da,g+16);qn(S,n,da);P=d+8;c[P]=c[S];k[P]=k[S];c[P+1]=c[S+1];k[P+1]=k[S+1];c[P+2]=c[S+2];k[P+2]=k[S+2];c[P+3]=c[S+3];k[P+3]=k[S+3];0!=(p|0)?no(V,p,m):(k[ba]=0,k[$]=0,k[Y]=0,H(V,ba,$,Y));0!=(r|0)?no(la,r,n):(k[ka]=0,k[ja]=0,k[ea]=0,H(la,ka,ja,ea));N(ca,V,la);c[i]=c[ca];k[i]=k[ca];c[i+1]=c[ca+1];k[i+1]=k[ca+1];c[i+2]=c[ca+2];k[i+2]=k[ca+2];c[i+3]=c[ca+3];k[i+3]=k[ca+3];k[j]=J(g+16,i);i=aU(g)+k[h+13];k[d+22]=k[g+21];(c[g+36]|0)>(c[h+16]|0)?j=0:(j=k[g+22]*-k[j],0>=j&&(j=0));0!=(c[h+15]&4|0)?(k[d+21]=k[g+28]*k[h+14],0!=(p|0)&&(k[X]=Zm(p),Q(U,d+4,X),ig(W,U,p+85),ho(p,W,d+12,k[d+21])),0!=(r|0)&&(k[ha]=Zm(r),Q(ga,d+4,ha),ig(ma,ga,r+85),WP(ta,d+16),ho(r,ma,ta,-k[d+21]))):k[d+21]=0;k[d+20]=0;0!=(p|0)?(g=p+76,c[ua]=c[g],k[ua]=k[g],c[ua+1]=c[g+1],k[ua+1]=k[g+1],c[ua+2]=c[g+2],k[ua+2]=k[g+2],c[ua+3]=c[g+3],k[ua+3]=k[g+3]):(k[za]=0,k[Za]=0,k[ib]=0,H(ua,za,Za,ib));g=J(d+4,ua);0!=(p|0)?(p+=80,c[ra]=c[p],k[ra]=k[p],c[ra+1]=c[p+1],k[ra+1]=k[p+1],c[ra+2]=c[p+2],k[ra+2]=k[p+2],c[ra+3]=c[p+3],k[ra+3]=k[p+3]):(k[Ca]=0,k[Sa]=0,k[mb]=0,H(ra,Ca,Sa,mb));ra=g+J(d,ra);0!=(r|0)?(Pa=r+76,c[Oa]=c[Pa],k[Oa]=k[Pa],c[Oa+1]=c[Pa+1],k[Oa+1]=k[Pa+1],c[Oa+2]=c[Pa+2],k[Oa+2]=k[Pa+2],c[Oa+3]=c[Pa+3],k[Oa+3]=k[Pa+3]):(k[Pa]=0,k[fc]=0,k[jb]=0,H(Oa,Pa,fc,jb));Oa=-J(d+4,Oa);0!=(r|0)?(r+=80,c[La]=c[r],k[La]=k[r],c[La+1]=c[r+1],k[La+1]=k[r+1],c[La+2]=c[r+2],k[La+2]=k[r+2],c[La+3]=c[r+3],k[La+3]=k[r+3]):(k[fb]=0,k[Rb]=0,k[pb]=0,H(La,fb,Rb,pb));r=j-(ra+Oa+J(d+8,La));0<i?(La=0,r-=i/k[h+3]):La=-i*k[h+8]/k[h+3];La*=k[d+23];r*=k[d+23];0!=(c[h+11]|0)?i>k[h+12]?h=45:(k[d+29]=r,k[d+33]=La,h=47):h=45;45==h&&(k[d+29]=La+r,k[d+33]=0);k[d+30]=0;k[d+31]=0;k[d+32]=1e10;b=a}ipb.X=1;function jpb(a,d,e,f,g,h){var i=b;b+=36;var j=i+4,l=i+8,m=i+9,n=i+13,p=i+17,r=i+18,s=i+22,t=i+26,w=i+27,x=i+31,y=i+32,z=k3(a+11,c[d+25]);0!=(c[h+15]&8|0)?(0!=(c[h+15]&4|0)?(k[z+21]=k[g+30]*k[h+14],0!=(e|0)&&(k[l]=Zm(e),Q(j,z+4,l),ig(i,j,e+85),ho(e,i,z+12,k[z+21])),0!=(f|0)&&(k[p]=Zm(f),Q(n,z+4,p),ig(m,n,f+85),WP(r,z+16),ho(f,m,r,-k[z+21]))):k[z+21]=0,0!=(c[h+15]&16|0)&&(a=k3(a+11,c[d+25]+1),0!=(c[h+15]&4|0)?(k[a+21]=k[g+31]*k[h+14],0!=(e|0)&&(k[t]=Zm(e),Q(s,a+4,t),ho(e,s,a+12,k[a+21])),0!=(f|0)&&(k[x]=Zm(f),Q(w,a+4,x),WP(y,a+16),ho(f,w,y,-k[a+21]))):k[a+21]=0)):(k[z+21]=0,0!=(c[h+15]&16|0)&&(k[k3(a+11,c[d+25]+1)+21]=0));b=i}jpb.X=1;function j3(a){return c[a+1]}j3.X=1;function kpb(a,d,e){var f=b;b+=27;var g,h,i,j,l,m,n=f+4,p=f+8,r=f+9,s=f+10,t,w,x,y,z=f+14,A=f+18,C,B=f+22,K=f+23;h=$j(d);i=Yj(d);j=p2(h);var E=p2(i);0!=(j|0)?0!=Zm(j)?g=7:(l=E,g=5):(l=E,g=5);5==g&&(g=0==(l|0)?30:0!=Zm(E)?7:30);a:do{if(7==g&&(l=0,(l|0)<(Xj(d)|0))){for(var G=a+1,M=a+1,L=a+11,F=z,I=K;;){m=d+69*l+1;if(aU(m)<=ck(d)){t=j3(G);w=epb(M);x=p2(h);y=p2(i);0!=(x|0)?g=x:(g3(),g=h3);c[w+26]=g;0!=(y|0)?g=y:(g3(),g=h3);c[w+27]=g;c[w+28]=m;ipb(0,w,h,i,m,e,s,r,p,f,n);c[w+25]=j3(L);0!=(c[e+15]&32|0)?c[m+29]&1?(i3(a,m+37,j,E,t,m,f,n,h,i,k[p],k[m+32],k[m+34]),0!=(c[e+15]&16|0)&&i3(a,m+41,j,E,t,m,f,n,h,i,k[p],k[m+33],k[m+35]),g=28):g=18:g=18;b:do{if(18==g){Q(A,m+16,r);N(z,s,A);C=m+37;c[C]=c[F];k[C]=k[F];c[C+1]=c[F+1];k[C+1]=k[F+1];c[C+2]=c[F+2];k[C+2]=k[F+2];c[C+3]=c[F+3];k[C+3]=k[F+3];C=Um(m+37);var R=0!=(c[e+15]&64|0);do{if(!R&&1.1920928955078125e-7<C){k[B]=ec(C);KB(m+37,B);0!=(c[e+15]&16|0)&&(qn(K,m+37,m+16),C=m+41,c[C]=c[I],k[C]=k[I],c[C+1]=c[I+1],k[C+1]=k[I+1],c[C+2]=c[I+2],k[C+2]=k[I+2],c[C+3]=c[I+3],k[C+3]=k[I+3],IB(m+41),f3(h,m+41),f3(i,m+41),i3(a,m+41,j,E,t,m,f,n,h,i,k[p],0,0));f3(h,m+37);f3(i,m+37);i3(a,m+37,j,E,t,m,f,n,h,i,k[p],0,0);c[m+29]=1;break b}}while(0);rw(m+16,m+37,m+41);0!=(c[e+15]&16|0)&&(f3(h,m+41),f3(i,m+41),i3(a,m+41,j,E,t,m,f,n,h,i,k[p],0,0));f3(h,m+37);f3(i,m+37);i3(a,m+37,j,E,t,m,f,n,h,i,k[p],0,0);c[m+29]=1}}while(0);jpb(a,w,x,y,m,e)}l+=1;if((l|0)>=(Xj(d)|0)){break a}}}}while(0);b=f}kpb.X=1;function lpb(a,d,e){var f,g;f=l3(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(l3(a)|0)&&mpb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=(g<<1)+c[i];if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}lpb.X=1;function npb(a,d,e,f,g,h,i,j,l,m){var n=b;b+=117;var p,r,s,t,w,x,y,z,A=n+1,C,B=n+3,K,E,G,M,L,F,I,R=n+37,O=n+38,Z=n+39,P=n+40,S=n+41,da=n+42,V=n+43,ba=n+44,$=n+45,Y=n+46,la=n+47,ka=n+48,ja=n+49,ea,ca=n+63,W=n+67,U=n+71,X=n+75,ma=n+79,ga=n+83,ha=n+84,ta=n+88,ra=n+92,ua=n+93,za,Za,ib,Ca,Sa,mb=n+97,Oa,Pa,fc=n+115,jb=n+116,La;$10=l;$11=m;jY(n,D.uf);if(0!=(g+i|0)){var fb=0!=(c[j+11]|0);a:do{if(fb){if(p=0,(p|0)<(e|0)){for(;;){var Rb=p2(c[d+p]);r=Rb;0!=(Rb|0)&&(EC(r+126),EC(r+130),EC(r+142),EC(r+146));p+=1;if((p|0)>=(e|0)){break a}}}}else{if(s=0,(s|0)<(e|0)){for(;;){var pb=p2(c[d+s]);t=pb;0!=(pb|0)&&(EC(t+126),EC(t+130));s+=1;if((s|0)>=(e|0)){break a}}}}}while(0);for(w=0;(w|0)<(i|0);){var Sb=x=c[h+w];v[c[c[Sb]+2]](Sb);Ep(x,0);w+=1}y=0;c[A]=0;k[A]=0;c[A+1]=0;k[A+1]=0;lpb(a+26,i,A);z=0;for(var ab=a+26;(z|0)<(i|0);){C=m3(ab,z);if(Ap(c[h+z])){var Ib=c[h+z];v[c[c[Ib]+4]](Ib,C)}else{c[C]=0,c[C+1]=0}y+=c[C];z+=1}for(var Fc=a+6,Ac=y,ob=B,Gc=ob+34;ob<Gc;ob++){c[ob]=0,k[ob]=0}n3(Fc,Ac,B);z=K=0;for(var Yc=a+26,Cc=a+6,Ub=ja+1,Uc=ja+2,nd=ja+3,Ic=ja+4,tc=ja+5,hd=ja+6,Tb=ja+7,Jc=ja+13,ub=ja+8,uc=ja+9,Kc=ja+10,gb=ja+12,gc=ja+13,Lc=a+26;(z|0)<(i|0);){E=m3(Yc,z);var Dc=0!=(c[E]|0);a:do{if(Dc){G=k3(Cc,K);M=c[h+z];L=Io(M);F=Ho(M);I=0;var Eb=(I|0)<(c[E]|0);b:do{if(Eb){for(;;){ob=G+34*I;for(Gc=ob+34;ob<Gc;ob++){c[ob]=0,k[ob]=0}k[G+34*I+31]=-3.4028234663852886e+38;k[G+34*I+32]=3.4028234663852886e+38;k[G+34*I+21]=0;k[G+34*I+20]=0;c[G+34*I+26]=L;c[G+34*I+27]=F;I+=1;if((I|0)>=(c[E]|0)){break b}}}}while(0);var Ra=L+126;k[R]=0;k[O]=0;k[Z]=0;pe(Ra,R,O,Z);var qb=L+130;k[P]=0;k[S]=0;k[da]=0;pe(qb,P,S,da);var Ab=F+126;k[V]=0;k[ba]=0;k[$]=0;pe(Ab,V,ba,$);var hc=F+130;k[Y]=0;k[la]=0;k[ka]=0;pe(hc,Y,la,ka);k[ja]=1/k[j+3];k[Ub]=k[j+8];c[Uc]=G+4;c[nd]=G;c[Ic]=0;c[tc]=G+8;c[hd]=34;c[Tb]=G+29;k[G+30]=k[j+10];k[Jc]=k[j+1];c[ub]=G+30;c[uc]=G+31;c[Kc]=G+32;c[gb]=c[j+5];var Hc=c[h+z];v[c[c[Hc]+5]](Hc,ja);k[G+32]>Mp(c[h+z])&&(k[G+32]=Mp(c[h+z]));k[G+31]<-Mp(c[h+z])&&(k[G+31]=-Mp(c[h+z]));I=0;if((I|0)<(c[E]|0)){for(;;){ea=G+34*I;c[ea+28]=M;Bo(W,Io(M)+64,ea);ig(ca,W,Io(M)+134);var ic=ea+12;c[ic]=c[ca];k[ic]=k[ca];c[ic+1]=c[ca+1];k[ic+1]=k[ca+1];c[ic+2]=c[ca+2];k[ic+2]=k[ca+2];c[ic+3]=c[ca+3];k[ic+3]=k[ca+3];Bo(X,Ho(M)+64,ea+8);ig(U,X,Ho(M)+134);var db=ea+16;c[db]=c[U];k[db]=k[U];c[db+1]=c[U+1];k[db+1]=k[U+1];c[db+2]=c[U+2];k[db+2]=k[U+2];c[db+3]=c[U+3];k[db+3]=k[U+3];k[ga]=Zm(L);Q(ma,ea+4,ga);Bo(ha,L+64,ea);k[ra]=Zm(F);Q(ta,ea+4,ra);Bo(ua,F+64,ea+8);za=J(ma,ea+4);za+=J(ha,ea);za+=J(ta,ea+4);za+=J(ua,ea+8);k[ea+23]=1/za;ib=J(ea+4,L+76)+J(ea,L+80);Za=ib+ -J(ea+4,F+76)+J(ea+8,F+80);k[ea+29]=k[ea+29]*k[ea+23]+(0-Za*k[gc])*k[ea+23];k[ea+21]=0;I+=1;if((I|0)>=(c[E]|0)){break a}}}}}while(0);K+=c[m3(Lc,z)];z+=1}for(Ca=Sa=0;(Ca|0)<(g|0);){Sa=c[f+Ca],kpb(a,Sa,j),Ca+=1}for(var bb=j,ob=mb,Gc=bb+18;bb<Gc;bb++,ob++){c[ob]=c[bb],k[ob]=k[bb]}Oa=j3(a+1);Pa=j3(a+11);c[fc]=0;PV(a+16,Oa,fc);c[jb]=0;PV(a+21,Pa,jb);La=0;var id=(La|0)<(Oa|0);a:do{if(id){for(var Zc=a+16;;){if(c[QV(Zc,La)]=La,La+=1,(La|0)>=(Oa|0)){break a}}}}while(0);La=0;var vb=(La|0)<(Pa|0);a:do{if(vb){for(var rb=a+21;;){if(c[QV(rb,La)]=La,La+=1,(La|0)>=(Pa|0)){break a}}}}while(0)}$12=1;kY(n);b=n;return 0}npb.X=1;function m3(a,d){return(d<<1)+c[a+3]}m3.X=1;function n3(a,d,e){var f,g;f=j3(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(j3(a)|0)&&gpb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){for(var j=e,l=c[i]+34*g,m=j+34;j<m;j++,l++){c[l]=c[j],k[l]=k[j]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}n3.X=1;function opb(a,d,e,f,g,h,i,j,l,m,n){$9=e;$10=f;$11=g;$12=h;$16=m;$17=n;f=j3(a+1);g=j3(a+11);h=0!=(c[l+15]&1|0);a:do{if(h&&0==(d&7|0)){var e=0,p=(e|0)<(f|0);b:do{if(p){for(var r=a+16,s=a+16,t=a+16,w=a+16;;){if(m=c[QV(r,e)],n=uI(a,e+1),c[QV(t,e)]=c[QV(s,n)],c[QV(w,n)]=m,e+=1,(e|0)>=(f|0)){break b}}}}while(0);e=0;if((e|0)<(g|0)){p=a+21;r=a+21;s=a+21;for(t=a+21;;){if(m=c[QV(p,e)],n=uI(a,e+1),c[QV(s,e)]=c[QV(r,n)],c[QV(t,n)]=m,e+=1,(e|0)>=(g|0)){break a}}}}}while(0);d=0!=(c[l+15]&256|0);e=0;f=a+6;g=(e|0)<(j3(f)|0);a:do{b:do{if(g){for(m=a+6;;){if(h=k3(m,e),d3(a,c[h+26],c[h+27],h),e+=1,(e|0)>=(j3(f)|0)){break b}}}}while(0);e=0;h=(e|0)<(j|0);b:do{if(h){for(;;){if(m=c[i+e],v[c[c[m]+6]](m,Io(c[i+e]),Ho(c[i+e]),k[l+3]),e+=1,(e|0)>=(j|0)){break b}}}}while(0);h=j3(a+1);e=0;n=(e|0)<(h|0);b:do{if(n){p=a+1;for(r=a+16;;){if(m=k3(p,c[QV(r,e)]),Yob(a,c[m+26],c[m+27],m),e+=1,(e|0)>=(h|0)){break b}}}}while(0);h=j3(a+11);e=0;if((e|0)<(h|0)){p=a+11;r=a+21;for(s=a+1;;){if(m=k3(p,c[QV(r,e)]),n=t=k[k3(s,c[m+25])+21],0<t&&(k[m+31]=-(k[m+22]*n),k[m+32]=k[m+22]*n,d3(a,c[m+26],c[m+27],m)),e+=1,(e|0)>=(h|0)){break a}}}}while(0);return 0}opb.X=1;function ppb(a,d,e,f,g,h,i,j,l,m){$2=d;$3=e;$4=f;$5=g;$6=h;$7=i;$9=l;$10=m;e=0!=(c[j+11]|0);a:do{if(e){if(d=0,f=(d|0)<(c[j+5]|0),0!=(c[j+15]&256|0)){if(f){i=a+1;l=a+1;for(m=a+16;;){var f=j3(i),g=0,n=(g|0)<(f|0);b:do{if(n){for(;;){if(h=k3(l,c[QV(m,g)]),Zob(a,c[h+26],c[h+27],h),g+=1,(g|0)>=(f|0)){break b}}}}while(0);d+=1;if((d|0)>=(c[j+5]|0)){break a}}}}else{if(f){i=a+1;l=a+1;for(m=a+16;;){f=j3(i);g=0;n=(g|0)<(f|0);b:do{if(n){for(;;){if(h=k3(l,c[QV(m,g)]),Zob(a,c[h+26],c[h+27],h),g+=1,(g|0)>=(f|0)){break b}}}}while(0);d+=1;if((d|0)>=(c[j+5]|0)){break a}}}}}}while(0)}ppb.X=1;function qpb(a,d,e,f,g,h,i,j,l,m){var n=b;b+=1;var p;jY(n,D.pe);v[c[c[a]+6]](a,d,e,f,g,h,i,j,l,m);for(p=0;(p|0)<(c[j+5]|0);){opb(a,p,d,e,f,g,h,i,j,l,m),p+=1}$13=1;kY(n);b=n;return 0}qpb.X=1;function rpb(){}rpb.X=1;function spb(){}spb.X=1;function tpb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}tpb.X=1;function upb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}upb.X=1;function hpb(a,d){$1=a;return 0!=(d|0)?d<<1:1}hpb.X=1;function vpb(a){c[a+31]=0}vpb.X=1;function fpb(a){return c[a+2]}fpb.X=1;function l3(a){return c[a+1]}l3.X=1;function wpb(a){return c[a+2]}wpb.X=1;function Vob(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Vob.X=1;function c3(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}c3.X=1;function xpb(a,d,e,f,g,h,i,j,l,m){var n=b;b+=102;var p=n+34,r=n+68;$10=f;$11=g;$12=h;$13=i;$15=l;$16=m;f=j3(a+1);g=0;l=(g|0)<(f|0);a:do{if(l){for(var m=a+1,s=a+11,t=a+11;;){if(h=k3(m,g),i=c[h+28],k[i+28]=k[h+21],0!=(c[j+15]&8|0)&&(k[i+30]=k[k3(s,c[h+25])+21],k[i+31]=k[k3(t,c[h+25]+1)+21]),g+=1,(g|0)>=(f|0)){break a}}}}while(0);f=j3(a+6);g=0;l=(g|0)<(f|0);a:do{if(l){for(m=a+6;;){if(h=k3(m,g),i=c[h+28],Ep(i,k[h+21]),k[h+21]>Mp(i)&&Hp(i,0),g+=1,(g|0)>=(f|0)){break a}}}}while(0);g=0!=(c[j+11]|0);f=0;h=(f|0)<(e|0);a:do{if(g){if(h){for(;;){if(i=p2(c[d+f]),0!=(i|0)&&eo(i,k[j+3]),f+=1,(f|0)>=(e|0)){break a}}}}else{if(h){for(;;){if(i=p2(c[d+f]),0!=(i|0)&&bo(i),f+=1,(f|0)>=(e|0)){break a}}}}}while(0);d=n;for(e=d+34;d<e;d++){c[d]=0,k[d]=0}n3(a+1,0,n);d=p;for(e=d+34;d<e;d++){c[d]=0,k[d]=0}n3(a+6,0,p);d=r;for(e=d+34;d<e;d++){c[d]=0,k[d]=0}n3(a+11,0,r);b=n;return 0}xpb.X=1;function gpb(a,d){var e;(fpb(a)|0)<(d|0)&&(e=ypb(a,d),zpb(a,0,j3(a),e),tpb(a,0,j3(a)),Apb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}gpb.X=1;function ypb(a,d){return 0!=(d|0)?Bpb(a,d,0):0}ypb.X=1;function zpb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){for(var i=c[h]+34*d,j=f+34*d,l=i+34;i<l;i++,j++){c[j]=c[i],k[j]=k[i]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}zpb.X=1;function Apb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Cpb(a,c[a+3]),c[a+3]=0)}Apb.X=1;function Cpb(a,d){$1=a;yh(d)}Cpb.X=1;function Bpb(a,d,e){$1=a;$3=e;return Ue(136*d,16)}Bpb.X=1;function mpb(a,d){var e;(wpb(a)|0)<(d|0)&&(e=Dpb(a,d),Epb(a,0,l3(a),e),upb(a,0,l3(a)),Fpb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}mpb.X=1;function Dpb(a,d){return 0!=(d|0)?Gpb(a,d,0):0}Dpb.X=1;function Epb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<1)+f;if(0!=(i|0)){var j=(d<<1)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Epb.X=1;function Fpb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Hpb(a,c[a+3]),c[a+3]=0)}Fpb.X=1;function Hpb(a,d){$1=a;yh(d)}Hpb.X=1;function Gpb(a,d,e){$1=a;$3=e;return Ue(d<<3,16)}Gpb.X=1;function bpb(a){upb(a,0,l3(a));Fpb(a);Vob(a)}bpb.X=1;function e3(a){tpb(a,0,j3(a));Apb(a);c3(a)}e3.X=1;function Ipb(){}Ipb.X=1;function Jpb(a,d,e,f,g,h,i,j,l,m,n){var p=b;b+=1;$12=n;jY(p,D.Ge);v[c[c[a]+8]](a,d,e,f,g,h,i,j,l,m);v[c[c[a]+9]](a,d,e,f,g,h,i,j,l,m);v[c[c[a]+7]](a,d,e,f,g,h,i,j,l,m);$15=1;kY(p);b=p;return 0}Jpb.X=1;function Kpb(){}Kpb.X=1;function Lpb(){}Lpb.X=1;function Mpb(){}Mpb.X=1;function Npb(){return 1}Npb.X=1;function Opb(a){return c[a+45]}Opb.X=1;function Ppb(a){xe(a)}Ppb.X=1;function Qpb(a,d,e,f,g){var h=b;b+=3;var i=h+1,j=h+2;Tjb(a,d,e,g);c[a]=o3+2;c[a+45]=f;c[a+46]=0;k[h]=0;k[i]=0;k[j]=-10;H(a+47,h,i,j);b=h}Qpb.X=1;function Rpb(a){Spb(a);xe(a)}Rpb.X=1;function Tpb(a,d,e,f){var g=b;b+=18;$3=e;$4=f;Upb(a,d);e=a+7;k[e]=d;c[e+1]=0;c[e+5]=v[c[c[a]+4]](a);v[c[c[a]+10]](a);e=c[a+6];e=v[c[c[e]+9]](e);if(0!=(e|0)){f=c[a+6];f=v[c[c[f]+11]](f);Rm(g);k[g+3]=d;var h=c[a+45];v[c[c[h]+2]](h,0,e);h=c[a+45];v[c[c[h]+3]](h,$X(a+1,0),Sl(a),f,e,0,0,g,c[a+22],c[a+20],c[a+6]);e=c[a+45];v[c[c[e]+4]](e,g,c[a+22],c[a+20])}Vpb(a,d);v[c[c[a]+2]](a);v[c[c[a]+19]](a);v[c[c[a]+29]](a);b=g;return 1}Tpb.X=1;function Upb(a,d){var e,f;e=0;var g=a+1,h=(e|0)<(Tl(g)|0);a:do{if(h){for(var i=a+1;;){var j=p2(c[$X(i,e)]);f=j;0!=(j|0)&&!ai(f)&&Ki(f)&&(fo(f),Fn(f,d),Ro(f,d),Bn(f,d,f+17));e+=1;if((e|0)>=(Tl(g)|0)){break a}}}}while(0)}Upb.X=1;function Vpb(a,d){var e=b;b+=16;var f,g;f=0;var h=a+1,i=(f|0)<(Tl(h)|0);a:do{if(i){for(var j=a+1;;){var l=p2(c[$X(j,f)]);g=l;0!=(l|0)&&Ki(g)&&!ai(g)&&(Bn(g,d,e),kn(g,e));f+=1;if((f|0)>=(Tl(h)|0)){break a}}}}while(0);b=e}Vpb.X=1;function Wpb(a){var d;d=0;var e=a+1,f=(d|0)<(Tl(e)|0);a:do{if(f){for(var g=a+1;;){var h=p2(c[$X(g,d)]);0!=(h|0)&&hn(h);d+=1;if((d|0)>=(Tl(e)|0)){break a}}}}while(0)}Wpb.X=1;function Xpb(a,d){var e;e=a+47;c[e]=c[d];k[e]=k[d];c[e+1]=c[d+1];k[e+1]=k[d+1];c[e+2]=c[d+2];k[e+2]=k[d+2];c[e+3]=c[d+3];k[e+3]=k[d+3];e=0;var f=a+1,g=(e|0)<(Tl(f)|0);a:do{if(g){for(var h=a+1;;){var i=p2(c[$X(h,e)]);0!=(i|0)&&wo(i,d);e+=1;if((e|0)>=(Tl(f)|0)){break a}}}}while(0)}Xpb.X=1;function Ypb(a,d){var e=d+47;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}Ypb.X=1;function Zpb(a,d){cY(a,d)}Zpb.X=1;function $pb(a,d){var e;e=p2(d);if(0!=(e|0)){v[c[c[a]+22]](a,e)}else{cY(a,d)}}$pb.X=1;function aqb(a,d){wo(d,a+47);if(0!=(Xn(d)|0)){v[c[c[a]+8]](a,d,1,-1)}}aqb.X=1;function bqb(a,d,e,f){wo(d,a+47);if(0!=(Xn(d)|0)){v[c[c[a]+8]](a,d,e,f)}}bqb.X=1;function cqb(a){var d=b;b+=24;var e,f,g,h=d+16,i=d+20;e=0;var j=a+1,l=(e|0)<(Tl(j)|0);a:do{if(l){for(var m=a+1,n=a,p=a+6;;){f=c[$X(m,e)];var r=p2(f);g=r;0!=(r|0)&&Ki(g)&&!ai(g)&&(r=bi(f),v[c[c[r]+2]](r,f+1,h,i),f=am(n),v[c[c[f]+4]](f,ci(g),h,i,c[p]));e+=1;if((e|0)>=(Tl(j)|0)){break a}}}}while(0);b=d}cqb.X=1;function dqb(a){var d,e;d=0;var f=a+1,g=(d|0)<(Tl(f)|0);a:do{if(g){for(var h=a+1;;){var i=p2(c[$X(h,d)]);e=i;0!=(i|0)&&0!=(Un(e)|0)&&2!=(ki(e)|0)&&(i=Un(e),v[c[c[i]+3]](i,e+1));d+=1;if((d|0)>=(Tl(f)|0)){break a}}}}while(0)}dqb.X=1;function eqb(a,d){c[a+46]&1&&yh(c[a+45]);c[a+46]=0;c[a+45]=d}eqb.X=1;function fqb(a){k[a+46]=1;k[a+47]=-1;k[a+48]=0;k[a+49]=0;k[a+50]=1;k[a+51]=.699999988079071;k[a+52]=0;k[a+53]=0;k[a+54]=1;k[a+55]=.699999988079071;k[a+56]=0;k[a+57]=0;k[a+66]=1;k[a+67]=.699999988079071;k[a+68]=1;k[a+69]=0;k[a+70]=1;k[a+71]=.699999988079071;k[a+72]=1;k[a+73]=0;k[a+58]=1;k[a+59]=.699999988079071;k[a+60]=1;k[a+61]=0;k[a+62]=1;k[a+63]=.699999988079071;k[a+64]=1;k[a+65]=0;c[a+275]=0;k[a+280]=0;k[a+281]=0;k[a+282]=0;c[a+76]=0;c[a+76]=0;var d=a+276;c[d]=0;k[d]=0;c[d+1]=0;k[d+1]=0;c[d+2]=0;k[d+2]=0;c[d+3]=0;k[d+3]=0;c[a+12]=1;lT(a,c[a+7]+1,c[a+8]+1)}fqb.X=1;function Spb(a){c[a]=o3+2;c[a+46]&1&&yh(c[a+45]);aY(a)}Spb.X=1;function CS(a,d){c[d]=6;c[d+1]=0}CS.X=1;function lT(a,d,e){var f=b;b+=93;var g,h=f+16;g=f+32;var i=f+48,j=f+64,l=f+68,m=f+72,n=f+76,p=f+80,r=f+84,s=f+85,t=f+89;c[a+45]&1?g=4:c[a+11]&1?(WW(g,e,a+29),xi(a+207,g),WW(i,d,a+13),xi(a+223,i),g=6):g=4;4==g&&(WW(f,d,a+13),xi(a+207,f),WW(h,e,a+29),xi(a+223,h));d=a+243;e=a+207+12;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];d=a+247;e=a+223+12;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];c[d+2]=c[e+2];k[d+2]=k[e+2];c[d+3]=c[e+3];k[d+3]=k[e+3];Jb(j,a+207,0);d=a+239;c[d]=c[j];k[d]=k[j];c[d+1]=c[j+1];k[d+1]=k[j+1];c[d+2]=c[j+2];k[d+2]=k[j+2];c[d+3]=c[j+3];k[d+3]=k[j+3];c[a+45]&1?g=8:c[a+11]&1?g=8:(N(m,a+243,a+247),j=a+255,c[j]=c[m],k[j]=k[m],c[j+1]=c[m+1],k[j+1]=k[m+1],c[j+2]=c[m+2],k[j+2]=k[m+2],c[j+3]=c[m+3],k[j+3]=k[m+3],g=10);8==g&&(N(l,a+247,a+243),m=a+255,c[m]=c[l],k[m]=k[l],c[m+1]=c[l+1],k[m+1]=k[l+1],c[m+2]=c[l+2],k[m+2]=k[l+2],c[m+3]=c[l+3],k[m+3]=k[l+3]);k[r]=J(a+239,a+255);Q(p,a+239,r);wn(n,a+243,p);l=a+251;c[l]=c[n];k[l]=k[n];c[l+1]=c[n+1];k[l+1]=k[n+1];c[l+2]=c[n+2];k[l+2]=k[n+2];c[l+3]=c[n+3];k[l+3]=k[n+3];n=0;l=a+207;p=a+255;for(a+=259;!(Jb(t,l,n),c[s]=c[t],k[s]=k[t],c[s+1]=c[t+1],k[s+1]=k[t+1],c[s+2]=c[t+2],k[s+2]=k[t+2],c[s+3]=c[t+3],k[s+3]=k[t+3],k[a+n]=J(p,s),n=r=n+1,3<=(r|0));){}b=f}lT.X=1;function uT(a,d,e,f,g,h){h&=1;g2(a,7,d,e);c[a]=p3+2;c[a+11]=0;sQ(a+13,f);sQ(a+29,g);c[a+45]=h&1;fqb(a)}uT.X=1;function sT(a,d,e,f){var g=b;b+=16;f&=1;I2();g2(a,7,J2,d);c[a]=p3+2;c[a+11]=0;sQ(a+29,e);c[a+45]=f&1;WW(g,d+1,a+29);xi(a+13,g);fqb(a);b=g}sT.X=1;function gqb(a,d){var e;if(c[a+11]&1){c[d]=0,c[d+1]=0}else{if(c[d]=4,c[d+1]=2,lT(a,c[a+7]+1,c[a+8]+1),AS(a),xT(a),e=MR(a)?6:JR(a)?6:7,6==e&&(c[d]+=1,e=d+1,c[e]-=1),SR(a)||XS(a)){c[d]+=1,e=d+1,c[e]-=1}}}gqb.X=1;function AS(a){var d=b;b+=12;var e=d+4,f=d+8;k[a+273]=0;c[a+75]=0;k[a+48]<=k[a+49]&&(Jb(d,a+207,1),Jb(e,a+207,2),Jb(f,a+223,1),e=ee(J(f,e),J(f,d)),e=wmb(e,k[a+48],k[a+49]),f=k[a+272]=e,e<k[a+48]?(k[a+273]=f-k[a+48],c[a+75]=1):f>k[a+49]&&(k[a+273]=e-k[a+49],c[a+75]=1));b=d}AS.X=1;function xT(a){c[a+74]=0;k[a+271]=k[a+259];var d=a+259;k[a+46]<=k[a+47]?k[d]>k[a+47]?(d=a+259,k[d]-=k[a+47],c[a+74]=1):k[a+259]<k[a+46]?(d=a+259,k[d]-=k[a+46],c[a+74]=1):k[a+259]=0:k[d]=0}xT.X=1;function hqb(a,d){DS(a,d,c[a+7]+1,c[a+8]+1,c[a+7]+76,c[a+8]+76,Zm(c[a+7]),Zm(c[a+8]))}hqb.X=1;function DS(a,d,e,f,g,h,i,j){var l=b;b+=241;var m,n,p,r,s,t,w,x=l+4,y=l+5,z=l+6,A=l+10,C=l+14,B=l+18,K=l+22,E=l+26,G=l+30,M=l+34,L=l+38,F=l+42,I=l+46,R,O,Z=l+50,P,S,da,V,ba,$=l+54,Y=l+70,la,ka,ja=l+86,ea=l+90,ca=l+91,W=l+92,U=l+93,X=l+97,ma=l+98,ga=l+99,ha=l+100,ta=l+104,ra=l+105,ua=l+106,za=l+107,Za=l+111,ib=l+112,Ca=l+113,Sa=l+114,mb=l+118,Oa=l+119,Pa=l+120,fc=l+121,jb=l+125,La=l+129,fb=l+130,Rb=l+134,pb=l+138,Sb=l+142,ab=l+143,Ib=l+147,Fc=l+148,Ac=l+152,ob=l+156,Gc=l+160,Yc=l+164,Cc=l+168,Ub=l+172,Uc=l+176,nd=l+180,Ic=l+184,tc,hd=l+188,Tb=l+189,Jc=l+193,ub=l+197,uc=l+201,Kc=l+205,gb=l+209,gc=l+213,Lc=l+217,Dc=l+221,Eb,Ra=l+225,qb=l+229,Ab=l+233,hc=l+237,Hc,ic,db,bb,id,Zc,vb,rb,vc,Qc,Rc;n=a+207;p=a+223;s=c[d+6];t=c[a+45]&1?1:-1;N(l,p+12,n+12);w=(1.1920928955078125e-7>i?1:1.1920928955078125e-7>j)&1;var Xd=i+j;k[x]=0<Xd?j/Xd:.5;k[y]=1-k[x];Jb(B,n,0);Jb(K,p,0);c[a+12]&1?(Q(G,B,x),Q(M,K,y),wn(E,G,M),c[z]=c[E],k[z]=k[E],c[z+1]=c[E+1],k[z+1]=k[E+1],c[z+2]=c[E+2],k[z+2]=k[E+2],c[z+3]=c[E+3],k[z+3]=k[E+3],IB(z),rw(z,A,C)):(Jb(L,n,0),c[z]=c[L],k[z]=k[L],c[z+1]=c[L+1],k[z+1]=k[L+1],c[z+2]=c[L+2],k[z+2]=k[L+2],c[z+3]=c[L+3],k[z+3]=k[L+3],Jb(F,n,1),c[A]=c[F],k[A]=k[F],c[A+1]=c[F+1],k[A+1]=k[F+1],c[A+2]=c[F+2],k[A+2]=k[F+2],c[A+3]=c[F+3],k[A+3]=k[F+3],Jb(I,n,2),c[C]=c[I],k[C]=k[I],c[C+1]=c[I+1],k[C+1]=k[I+1],c[C+2]=c[I+2],k[C+2]=k[I+2],c[C+3]=c[I+3],k[C+3]=k[I+3]);k[c[d+3]]=k[A];k[c[d+3]+1]=k[A+1];k[c[d+3]+2]=k[A+2];k[c[d+3]+s]=k[C];k[c[d+3]+s+1]=k[C+1];k[c[d+3]+s+2]=k[C+2];k[c[d+5]]=-k[A];k[c[d+5]+1]=-k[A+1];k[c[d+5]+2]=-k[A+2];k[c[d+5]+s]=-k[C];k[c[d+5]+s+1]=-k[C+1];k[c[d+5]+s+2]=-k[C+2];var Sc=k[a+70];R=0!=(c[a+76]&128|0)?Sc:Sc*k[d+1];O=k[d]*R;qn(Z,B,K);k[c[d+7]]=O*J(Z,A);k[c[d+7]+s]=O*J(Z,C);0!=(c[a+76]&64|0)&&(k[c[d+8]]=k[a+73],k[c[d+8]+s]=k[a+73]);P=1;sQ($,e);sQ(Y,f);P+=1;la=s*P;P+=1;ka=s*P;k[ea]=0;k[ca]=0;k[W]=0;H(ja,ea,ca,W);k[X]=0;k[ma]=0;k[ga]=0;H(U,X,ma,ga);k[ta]=0;k[ra]=0;k[ua]=0;H(ha,ta,ra,ua);k[Za]=0;k[ib]=0;k[Ca]=0;H(za,Za,ib,Ca);k[mb]=0;k[Oa]=0;k[Pa]=0;H(Sa,mb,Oa,Pa);var Mc=c[a+12]&1;a:do{if(Mc){N(fc,p+12,Y+12);var $c=za,Cd=fc;c[$c]=c[Cd];k[$c]=k[Cd];c[$c+1]=c[Cd+1];k[$c+1]=k[Cd+1];c[$c+2]=c[Cd+2];k[$c+2]=k[Cd+2];c[$c+3]=c[Cd+3];k[$c+3]=k[Cd+3];k[La]=J(za,z);Q(jb,z,La);N(fb,za,jb);N(Rb,n+12,$+12);var wc=ha,Bb=Rb;c[wc]=c[Bb];k[wc]=k[Bb];c[wc+1]=c[Bb+1];k[wc+1]=k[Bb+1];c[wc+2]=c[Bb+2];k[wc+2]=k[Bb+2];c[wc+3]=c[Bb+3];k[wc+3]=k[Bb+3];k[Sb]=J(ha,z);Q(pb,z,Sb);N(ab,ha,pb);k[Ib]=k[a+271]-k[a+259];Q(ob,z,Ib);wn(Ac,pb,ob);N(Fc,Ac,jb);Q(Yc,Fc,x);wn(Gc,ab,Yc);var fd=ha,ad=Gc;c[fd]=c[ad];k[fd]=k[ad];c[fd+1]=c[ad+1];k[fd+1]=k[ad+1];c[fd+2]=c[ad+2];k[fd+2]=k[ad+2];c[fd+3]=c[ad+3];k[fd+3]=k[ad+3];Q(Ub,Fc,y);N(Cc,fb,Ub);var wd=za,Kd=Cc;c[wd]=c[Kd];k[wd]=k[Kd];c[wd+1]=c[Kd+1];k[wd+1]=k[Kd+1];c[wd+2]=c[Kd+2];k[wd+2]=k[Kd+2];c[wd+3]=c[Kd+3];k[wd+3]=k[Kd+3];Q(nd,fb,x);Q(Ic,ab,y);wn(Uc,nd,Ic);var Rd=A,Ec=Uc;c[Rd]=c[Ec];k[Rd]=k[Ec];c[Rd+1]=c[Ec+1];k[Rd+1]=k[Ec+1];c[Rd+2]=c[Ec+2];k[Rd+2]=k[Ec+2];c[Rd+3]=c[Ec+3];k[Rd+3]=k[Ec+3];tc=Um(A);if(1.1920928955078125e-7<tc){k[hd]=ec(tc),KB(A,hd)}else{Jb(Tb,n,1);var xd=A,od=Tb;c[xd]=c[od];k[xd]=k[od];c[xd+1]=c[od+1];k[xd+1]=k[od+1];c[xd+2]=c[od+2];k[xd+2]=k[od+2];c[xd+3]=c[od+3];k[xd+3]=k[od+3]}qn(Jc,z,A);var pd=C,bd=Jc;c[pd]=c[bd];k[pd]=k[bd];c[pd+1]=c[bd+1];k[pd+1]=k[bd+1];c[pd+2]=c[bd+2];k[pd+2]=k[bd+2];c[pd+3]=c[bd+3];k[pd+3]=k[bd+3];qn(ub,ha,A);var jd=ja,Ld=ub;c[jd]=c[Ld];k[jd]=k[Ld];c[jd+1]=c[Ld+1];k[jd+1]=k[Ld+1];c[jd+2]=c[Ld+2];k[jd+2]=k[Ld+2];c[jd+3]=c[Ld+3];k[jd+3]=k[Ld+3];qn(uc,za,A);var Gd=U,Dd=uc;c[Gd]=c[Dd];k[Gd]=k[Dd];c[Gd+1]=c[Dd+1];k[Gd+1]=k[Dd+1];c[Gd+2]=c[Dd+2];k[Gd+2]=k[Dd+2];c[Gd+3]=c[Dd+3];k[Gd+3]=k[Dd+3];for(r=0;;){k[c[d+3]+r+la]=k[ja+r];var fe=r+1;r=fe;if(3<=(fe|0)){break}}for(r=0;;){k[c[d+5]+r+la]=-k[U+r];var ge=r+1;r=ge;if(3<=(ge|0)){break}}qn(Kc,ha,C);var Hd=ja,he=Kc;c[Hd]=c[he];k[Hd]=k[he];c[Hd+1]=c[he+1];k[Hd+1]=k[he+1];c[Hd+2]=c[he+2];k[Hd+2]=k[he+2];c[Hd+3]=c[he+3];k[Hd+3]=k[he+3];qn(gb,za,C);var Zd=U,$d=gb;c[Zd]=c[$d];k[Zd]=k[$d];c[Zd+1]=c[$d+1];k[Zd+1]=k[$d+1];c[Zd+2]=c[$d+2];k[Zd+2]=k[$d+2];c[Zd+3]=c[$d+3];k[Zd+3]=k[$d+3];w&1&&SR(a)&&(LC(U,y),LC(ja,x));for(r=0;;){k[c[d+3]+r+ka]=k[ja+r];var pg=r+1;r=pg;if(3<=(pg|0)){break}}for(r=0;;){k[c[d+5]+r+ka]=-k[U+r];var Ze=r+1;r=Ze;if(3<=(Ze|0)){break}}for(r=0;;){k[c[d+2]+r+la]=k[A+r];var Xg=r+1;r=Xg;if(3<=(Xg|0)){break}}for(r=0;;){k[c[d+2]+r+ka]=k[C+r];var Dh=r+1;r=Dh;if(3<=(Dh|0)){break a}}}else{N(gc,Y+12,$+12);var wf=Sa,Oe=gc;c[wf]=c[Oe];k[wf]=k[Oe];c[wf+1]=c[Oe+1];k[wf+1]=k[Oe+1];c[wf+2]=c[Oe+2];k[wf+2]=k[Oe+2];c[wf+3]=c[Oe+3];k[wf+3]=k[Oe+3];qn(Lc,Sa,A);for(r=0;;){k[c[d+3]+r+la]=k[x]*k[Lc+r];var If=r+1;r=If;if(3<=(If|0)){break}}for(r=0;;){k[c[d+5]+r+la]=k[y]*k[Lc+r];var Ai=r+1;r=Ai;if(3<=(Ai|0)){break}}qn(Dc,Sa,C);var qg=Lc,Yg=Dc;c[qg]=c[Yg];k[qg]=k[Yg];c[qg+1]=c[Yg+1];k[qg+1]=k[Yg+1];c[qg+2]=c[Yg+2];k[qg+2]=k[Yg+2];c[qg+3]=c[Yg+3];k[qg+3]=k[Yg+3];for(r=0;;){k[c[d+3]+r+ka]=k[x]*k[Lc+r];var Zg=r+1;r=Zg;if(3<=(Zg|0)){break}}for(r=0;;){k[c[d+5]+r+ka]=k[y]*k[Lc+r];var Vf=r+1;r=Vf;if(3<=(Vf|0)){break}}for(r=0;;){k[c[d+2]+r+la]=k[A+r];var rg=r+1;r=rg;if(3<=(rg|0)){break}}for(r=0;;){k[c[d+2]+r+ka]=k[C+r];var sg=r+1;r=sg;if(3<=(sg|0)){break a}}}}while(0);var om=k[a+66];R=0!=(c[a+76]&32|0)?om:om*k[d+1];O=k[d]*R;Eb=O*J(A,l);k[c[d+7]+la]=Eb;Eb=O*J(C,l);k[c[d+7]+ka]=Eb;0!=(c[a+76]&16|0)&&(k[c[d+8]+la]=k[a+69],k[c[d+8]+ka]=k[a+69]);V=da=0;MR(a)&&(da=mT(a)*t,V=0<da?2:1);ba=0;JR(a)&&(ba=1);m=0!=(V|0)?55:0!=(ba|0)?55:86;if(55==m){P+=1;S=c[d+6]*P;k[c[d+2]+S]=k[z];k[c[d+2]+S+1]=k[z+1];k[c[d+2]+S+2]=k[z+2];c[a+12]&1?w&1||(qn(Ra,ha,z),c[ja]=c[Ra],k[ja]=k[Ra],c[ja+1]=c[Ra+1],k[ja+1]=k[Ra+1],c[ja+2]=c[Ra+2],k[ja+2]=k[Ra+2],c[ja+3]=c[Ra+3],k[ja+3]=k[Ra+3],qn(qb,za,z),c[U]=c[qb],k[U]=k[qb],c[U+1]=c[qb+1],k[U+1]=k[qb+1],c[U+2]=c[qb+2],k[U+2]=k[qb+2],c[U+3]=c[qb+3],k[U+3]=k[qb+3],k[c[d+3]+S]=k[ja],k[c[d+3]+S+1]=k[ja+1],k[c[d+3]+S+2]=k[ja+2],k[c[d+5]+S]=-k[U],k[c[d+5]+S+1]=-k[U+1],k[c[d+5]+S+2]=-k[U+2]):(qn(hc,Sa,z),c[Ab]=c[hc],k[Ab]=k[hc],c[Ab+1]=c[hc+1],k[Ab+1]=k[hc+1],c[Ab+2]=c[hc+2],k[Ab+2]=k[hc+2],c[Ab+3]=c[hc+3],k[Ab+3]=k[hc+3],k[c[d+3]+S]=k[x]*k[Ab],k[c[d+3]+S+1]=k[x]*k[Ab+1],k[c[d+3]+S+2]=k[x]*k[Ab+2],k[c[d+5]+S]=k[y]*k[Ab],k[c[d+5]+S+1]=k[y]*k[Ab+1],k[c[d+5]+S+2]=k[y]*k[Ab+2]);Hc=aT(a);ic=cS(a);0!=(V|0)&&Hc==ic&&(ba=0);k[c[d+7]+S]=0;k[c[d+9]+S]=0;k[c[d+10]+S]=0;R=0!=(c[a+76]&512|0)?k[a+58]:k[d+1];if(0!=(ba|0)){0!=(c[a+76]&1|0)&&(k[c[d+8]+S]=k[a+53]);db=$S(a);var mn=t*N2(a,k[a+271],k[a+46],k[a+47],db,k[d]*R)*$S(a),yl=c[d+7]+S;k[yl]-=mn;var tg=c[d+9]+S;k[tg]+=-QR(a)*k[d];var $e=c[d+10]+S;k[$e]+=QR(a)*k[d]}if(0!=(V|0)){O=k[d]*R;var af=c[d+7]+S;k[af]+=O*da;0!=(c[a+76]&256|0)&&(k[c[d+8]+S]=k[a+61]);if(Hc==ic){k[c[d+9]+S]=-3.4028234663852886e+38,k[c[d+10]+S]=3.4028234663852886e+38}else{var Wf=c[d+9]+S;1==(V|0)?(k[Wf]=-3.4028234663852886e+38,k[c[d+10]+S]=0):(k[Wf]=0,k[c[d+10]+S]=3.4028234663852886e+38)}var Xf=sc(1-MS(a));if(0<Xf){bb=J(g,z);bb-=J(h,z);var ug=bb*=t;1==(V|0)?0>ug&&(id=-Xf*bb,id>k[c[d+7]+S]&&(k[c[d+7]+S]=id)):0<ug&&(Zc=-Xf*bb,Zc<k[c[d+7]+S]&&(k[c[d+7]+S]=Zc))}var vg=c[d+7]+S;k[vg]*=LS(a)}}V=da=0;SR(a)&&(da=FR(a),V=0<da?1:2);ba=0;XS(a)&&(ba=1);m=0!=(V|0)?92:0!=(ba|0)?92:119;if(92==m){P+=1;S=c[d+6]*P;k[c[d+3]+S]=k[z];k[c[d+3]+S+1]=k[z+1];k[c[d+3]+S+2]=k[z+2];k[c[d+5]+S]=-k[z];k[c[d+5]+S+1]=-k[z+1];k[c[d+5]+S+2]=-k[z+2];vb=eS(a);rb=WR(a);0!=(V|0)&&vb==rb&&(ba=0);R=0!=(c[a+76]&2048|0)?k[a+62]:k[d+1];if(0!=(ba|0)){0!=(c[a+76]&4|0)&&(k[c[d+8]+S]=k[a+57]);var rh=N2(a,k[a+272],k[a+48],k[a+49],GR(a),k[d]*R)*GR(a);k[c[d+7]+S]=rh;k[c[d+9]+S]=-OR(a)*k[d];k[c[d+10]+S]=OR(a)*k[d]}if(0!=(V|0)){O=k[d]*R;var nn=c[d+7]+S;k[nn]+=O*da;0!=(c[a+76]&1024|0)&&(k[c[d+8]+S]=k[a+65]);if(vb==rb){k[c[d+9]+S]=-3.4028234663852886e+38,k[c[d+10]+S]=3.4028234663852886e+38}else{var on=c[d+9]+S;1==(V|0)?(k[on]=0,k[c[d+10]+S]=3.4028234663852886e+38):(k[on]=-3.4028234663852886e+38,k[c[d+10]+S]=0)}var $g=sc(1-OS(a));if(0<$g){vc=J(c[a+7]+80,z);var Eh=vc-=J(c[a+8]+80,z);1==(V|0)?0>Eh&&(Qc=-$g*vc,Qc>k[c[d+7]+S]&&(k[c[d+7]+S]=Qc)):0<Eh&&(Rc=-$g*vc,Rc<k[c[d+7]+S]&&(k[c[d+7]+S]=Rc))}var pn=c[d+7]+S;k[pn]*=fT(a)}}b=l}DS.X=1;function iqb(){return 196}iqb.X=1;function jqb(a,d,e,f){2==(d|0)?1>(f|0)?(k[a+58]=e,a+=76,c[a]|=512):3>(f|0)?(k[a+66]=e,a+=76,c[a]|=32):3==(f|0)?(k[a+62]=e,a+=76,c[a]|=2048):6>(f|0)&&(k[a+70]=e,a+=76,c[a]|=128):3==(d|0)?1>(f|0)?(k[a+53]=e,a+=76,c[a]|=1):3==(f|0)&&(k[a+57]=e,a+=76,c[a]|=4):4==(d|0)&&(1>(f|0)?(k[a+61]=e,a+=76,c[a]|=256):3>(f|0)?(k[a+69]=e,a+=76,c[a]|=16):3==(f|0)?(k[a+65]=e,a+=76,c[a]|=1024):6>(f|0)&&(k[a+73]=e,a+=76,c[a]|=64))}jqb.X=1;function kqb(a,d,e){var f;f=3.4028234663852886e+38;2==(d|0)?1>(e|0)?f=k[a+58]:3>(e|0)?f=k[a+66]:3==(e|0)?f=k[a+62]:6>(e|0)&&(f=k[a+70]):3==(d|0)?1>(e|0)?f=k[a+53]:3==(e|0)&&(f=k[a+57]):4==(d|0)&&(1>(e|0)?f=k[a+61]:3>(e|0)?f=k[a+69]:3==(e|0)?f=k[a+65]:6>(e|0)&&(f=k[a+73]));return f}kqb.X=1;function gva(a,d){var e=b;b+=29;var f=e+4,g=e+8,h=e+9,i=e+13;k[g]=.5*(k[d+46]+k[d+47]);Q(f,d+239,g);wn(e,d+243,f);c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3];uw(i,c[d+7]+1);vw(h,i,a);c[a]=c[h];k[a]=k[h];c[a+1]=c[h+1];k[a+1]=k[h+1];c[a+2]=c[h+2];k[a+2]=k[h+2];c[a+3]=c[h+3];k[a+3]=k[h+3];b=e}gva.X=1;function hva(a,d){var e=d+29+12;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];c[a+2]=c[e+2];k[a+2]=k[e+2];c[a+3]=c[e+3];k[a+3]=k[e+3]}hva.X=1;function lqb(){}lqb.X=1;function mqb(a){xe(a)}mqb.X=1;function nqb(a,d,e){o2(a,d,e);mQ(a+13,d+14);mQ(a+29,d+30);k[d+46]=k[a+47];k[d+47]=k[a+46];k[d+48]=k[a+49];k[d+49]=k[a+48];c[d+50]=c[a+45]&1;c[d+51]=c[a+12]&1;return D.vf}nqb.X=1;function i2(a,d,e){c[a+4]=d;c[a]=q3+2;c[a+2]=-1;c[a+3]=-1;k[a+4]=3.4028234663852886e+38;c[a+5]=1;c[a+6]=0;c[a+7]=e;I2();c[a+8]=J2;k[a+9]=0;k[a+10]=.30000001192092896}i2.X=1;function N2(a,d,e,f,g,h){$2=a;if(e>f){d=1}else{if(e==f){d=0}else{a=g/h;g=0>a;a:do{if(g){h=d>=e;do{if(h&&d<e-a){h=(e-d)/a;break a}}while(0);h=d<e?0:1}else{if(0<a){h=d<=f;do{if(h&&d>f-a){h=(f-d)/a;break a}}while(0);h=d>f?0:1}else{h=0}}}while(0);d=h}}return d}N2.X=1;function oqb(a,d){return a<=d?a<-d^1:0}oqb.X=1;function tj(a){return k[a+5]*k[a+6]}tj.X=1;function pB(a){return k[a+51]}pB.X=1;function I2(){var a=b;b+=14;var d=a+4,e=a+5,f=a+6,g=a+7,h=a+11,i=a+12,j=a+13;0==c[pqb]<<24>>24&&0!=(Hb(pqb)|0)&&(k[d]=0,k[e]=0,k[f]=0,H(a,d,e,f),Sn(J2,0,0,0,a),Y2(14,J2));k[h]=0;k[i]=0;k[j]=0;H(g,h,i,j);fn(J2,0,g);b=a;return J2}I2.X=1;function g2(a,d,e,f){c[a+4]=d;c[a]=q3+2;c[a+2]=-1;c[a+3]=-1;k[a+4]=3.4028234663852886e+38;c[a+5]=1;c[a+6]=0;c[a+7]=e;c[a+8]=f;k[a+9]=0;k[a+10]=.30000001192092896}g2.X=1;function o2(a,d,e){var f;c[d]=v[c[c[e]+7]](e,c[a+7]);c[d+1]=v[c[c[e]+7]](e,c[a+8]);f=v[c[c[e]+10]](e,a);c[d+2]=v[c[c[e]+7]](e,f);if(0!=(c[d+2]|0)){v[c[c[e]+12]](e,f)}c[d+3]=c[a+4];c[d+6]=c[a+6]&1;c[d+5]=c[a+3];c[d+4]=c[a+2];k[d+7]=k[a+9];k[d+8]=k[a+10];e=c[d+9]=0;f=a+7;var g=(e|0)<(Po(c[f])|0);a:do{if(g){for(var h=a+7;;){if((uo(c[h],e)|0)==(a|0)&&(c[d+9]=1),e+=1,(e|0)>=(Po(c[f])|0)){break a}}}}while(0);e=0;f=a+8;g=(e|0)<(Po(c[f])|0);a:do{if(g){for(h=a+8;;){if((uo(c[h],e)|0)==(a|0)&&(c[d+9]=1),e+=1,(e|0)>=(Po(c[f])|0)){break a}}}}while(0);return D.wf}o2.X=1;function yj(a,d,e,f,g,h){k[a+1]=(e-d)/2;k[a]=eP(d+k[a+1]);k[a+2]=f;k[a+3]=g;k[a+4]=h}yj.X=1;function Cj(a,d){var e;k[a+5]=0;k[a+6]=0;c[a+7]=0;0<=k[a+1]&&(e=eP(d-k[a]),e<-k[a+1]?(c[a+7]=1,k[a+5]=-(e+k[a+1]),k[a+6]=1):e>k[a+1]&&(c[a+7]=1,k[a+5]=k[a+1]-e,k[a+6]=-1))}Cj.X=1;function vj(a,d){var e;0<k[a+1]&&(e=eP(k[d]-k[a]),oqb(e,k[a+1])||(k[d]=0<e?Bj(a):Dj(a)))}vj.X=1;function Bj(a){return eP(k[a]+k[a+1])}Bj.X=1;function Dj(a){return eP(k[a]-k[a+1])}Dj.X=1;function qqb(a,d,e,f,g,h){var i=b;b+=120;var j=i+4,l=i+8,m=i+12,n=i+28,p=i+44,r=i+60,s=i+76,t=i+92,w=i+96,x=i+97,y=i+98,z=i+99,A=i+103,C=i+104,B=i+105,K=i+106,E=i+110,G=i+111,M=i+112,L=i+113,F=i+117,I=i+118,R=i+119;Pz();Pz();AO(a,d,e,Rz,Rz,1);c[a]=rqb+2;var O=a+330;c[O]=c[f];k[O]=k[f];c[O+1]=c[f+1];k[O+1]=k[f+1];c[O+2]=c[f+2];k[O+2]=k[f+2];c[O+3]=c[f+3];k[O+3]=k[f+3];O=a+334;c[O]=c[g];k[O]=k[g];c[O+1]=c[g+1];k[O+1]=k[g+1];c[O+2]=c[g+2];k[O+2]=k[g+2];c[O+3]=c[g+3];k[O+3]=k[g+3];O=a+338;c[O]=c[h];k[O]=k[h];c[O+1]=c[h+1];k[O+1]=k[h+1];c[O+2]=c[h+2];k[O+2]=k[h+2];c[O+3]=c[h+3];k[O+3]=k[h+3];g=IB(g);c[i]=c[g];k[i]=k[g];c[i+1]=c[g+1];k[i+1]=k[g+1];c[i+2]=c[g+2];k[i+2]=k[g+2];c[i+3]=c[g+3];k[i+3]=k[g+3];h=IB(h);c[j]=c[h];k[j]=k[h];c[j+1]=c[h+1];k[j+1]=k[h+1];c[j+2]=c[h+2];k[j+2]=k[h+2];c[j+3]=c[h+3];k[j+3]=k[h+3];qn(l,j,i);eQ(m);Db(m,l,j,i,l+1,j+1,i+1,l+2,j+2,i+2);pQ(m,f);uw(p,d+1);WW(n,p,m);xi(a+11,n);uw(s,e+1);WW(r,s,m);xi(a+27,r);k[w]=0;k[x]=0;k[y]=0;H(t,w,x,y);XO(a,t);k[A]=0;k[C]=0;k[B]=0;H(z,A,C,B);mP(a,z);k[E]=0;k[G]=-1.5607963800430298;k[M]=-3.1315927505493164;H(K,E,G,M);jP(a,K);k[F]=0;k[I]=1.5607963800430298;k[R]=3.1315927505493164;H(L,F,I,R);nP(a,L);b=i}qqb.X=1;function sqb(){}sqb.X=1;function tqb(a){xe(a)}tqb.X=1;function Ama(a,d,e){var f=b;b+=16;var g=f+4,h=f+8,i=f+12;$3=e;c[a+21]&1?(e=J(a,a+13),N(g,a+4,d+1+12),no(h,d,g),c[f]=c[h],k[f]=k[h],c[f+1]=c[h+1],k[f+1]=k[h+1],c[f+2]=c[h+2],k[f+2]=k[h+2],c[f+3]=c[h+3],k[f+3]=k[h+3],-.10000000149011612<=e?(k[a+68]=0,k[a+67]=10):(d=-1/e,k[a+68]=J(a,f)*d,k[a+67]=d)):(k[a+8]=pB(a),k[a+68]=0,WP(i,a+13),c[a]=c[i],k[a]=k[i],c[a+1]=c[i+1],k[a+1]=k[i+1],c[a+2]=c[i+2],k[a+2]=k[i+2],c[a+3]=c[i+3],k[a+3]=k[i+3],k[a+67]=1);b=f}Ama.X=1;function uqb(a,d){var e,f;f=v[c[vqb]](a+(d+3));0!=(f|0)?(e=f+(d-(f+4)&d-1)+4,c[e-1]=f):e=f;return e}uqb.X=1;function wqb(a){if(0!=(a|0)){v[c[xqb]](c[a-1])}}wqb.X=1;function yqb(a){return Wa(a)}yqb.X=1;function zqb(a){r3(a)}zqb.X=1;function Ue(a,d){c[Aqb]+=1;return v[c[Bqb]](a,d)}Ue.X=1;function yh(a){0!=(a|0)&&(c[Cqb]+=1,v[c[Dqb]](a))}yh.X=1;function Eqb(a,d,e){var f,g;f=s3(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(s3(a)|0)&&Fqb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+3*g;if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}Eqb.X=1;function Gqb(a,d,e){var f,g;f=t3(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(t3(a)|0)&&Hqb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+5*g;if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3];c[j+4]=c[l+4];k[j+4]=k[l+4]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}Gqb.X=1;function Iqb(a,d,e,f){var g=b;b+=12;var h=g+4,i=g+7;KW(a);Jqb(a+5);Kqb(a+10);xZ(a,d,g);Eqb(a+5,e,h);Lqb(i);Gqb(a+10,f,i);b=g}Iqb.X=1;function Mqb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Mqb.X=1;function t3(a){return c[a+1]}t3.X=1;function Nqb(a){return c[a+2]}Nqb.X=1;function s3(a){return c[a+1]}s3.X=1;function Oqb(a){return c[a+2]}Oqb.X=1;function Hqb(a,d){var e;(Nqb(a)|0)<(d|0)&&(e=Pqb(a,d),Qqb(a,0,t3(a),e),Mqb(a,0,t3(a)),Rqb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Hqb.X=1;function Pqb(a,d){return 0!=(d|0)?Sqb(a,d,0):0}Pqb.X=1;function Qqb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+5*d;if(0!=(i|0)){var j=c[h]+5*d;c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];c[i+4]=c[j+4];k[i+4]=k[j+4]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Qqb.X=1;function Rqb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Tqb(a,c[a+3]),c[a+3]=0)}Rqb.X=1;function Tqb(a,d){$1=a;yh(d)}Tqb.X=1;function Sqb(a,d,e){$1=a;$3=e;return Ue(20*d,16)}Sqb.X=1;function Fqb(a,d){var e;(Oqb(a)|0)<(d|0)&&(e=Uqb(a,d),Vqb(a,0,s3(a),e),Wqb(a,0,s3(a)),Xqb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Fqb.X=1;function Uqb(a,d){return 0!=(d|0)?Yqb(a,d,0):0}Uqb.X=1;function Wqb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Wqb.X=1;function Kqb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Kqb.X=1;function Jqb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Jqb.X=1;function u3(a,d){var e;e=c[a+1];var f=c[d+1];(0<=e?e:e+0x10000000000000000)<(0<=f?f:f+0x10000000000000000)?e=-1:(e=c[a+1],f=c[d+1],(0<=e?e:e+0x10000000000000000)>(0<=f?f:f+0x10000000000000000)?e=1:(e=c[a],f=c[d],(0<=e?e:e+0x10000000000000000)<(0<=f?f:f+0x10000000000000000)?e=-1:(e=c[a],f=c[d],e=(0<=e?e:e+0x10000000000000000)>(0<=f?f:f+0x10000000000000000)?1:0)));return e}u3.X=1;function Vqb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+3*d;if(0!=(i|0)){var j=c[h]+3*d;c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Vqb.X=1;function Xqb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Zqb(a,c[a+3]),c[a+3]=0)}Xqb.X=1;function Zqb(a,d){$1=a;yh(d)}Zqb.X=1;function Yqb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}Yqb.X=1;function Lqb(a){k[a+4]=0}Lqb.X=1;function v3(a,d,e){var f=b;b+=4;var g,h=f+2;g=c[d+1];g=0>(0x7ffffffffffffc00<=g?g-0x10000000000000000:g)&1;g&1?w3(f,d):(c[f]=c[d],k[f]=k[d],c[f+1]=c[d+1],k[f+1]=k[d+1]);d=e;if(0>(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)){g=(g&1^1)&1,e=-e}x3(h,c[f],e);d=h+1;c[d]+=e*c[f+1];g&1?w3(a,h):(c[a]=c[h],k[a]=k[h],c[a+1]=c[h+1],k[a+1]=k[h+1]);b=f}v3.X=1;function w3(a,d){var e=c[d],f=c[d+1];y3(a,-c[d],(0==(0x7ffffffffffffc00<=e?e-0x10000000000000000:e)&1)+(((f|0)^-1)+4294967296*(Math.round(f/4294967296)^Math.round(-1/4294967296))))}w3.X=1;function x3(a,d,e){$qb(d,e,a,a+1)}x3.X=1;function z3(a,d,e){var f=b;b+=2;var g;g=d;g=0>(0x7ffffffffffffc00<=g?g-0x10000000000000000:g)&1;g&1&&(d=-d);var h=e;if(0>(0x7ffffffffffffc00<=h?h-0x10000000000000000:h)){g=(g&1^1)&1,e=-e}$qb(d,e,f,f+1);g&1?w3(a,f):(c[a]=c[f],k[a]=k[f],c[a+1]=c[f+1],k[a+1]=k[f+1]);b=f}z3.X=1;function $qb(a,d,e,f){var g=b;b+=1;var h,i,j;h=A3(a&4294967295,d&4294967295);i=A3(a&4294967295,B3(d));j=B3(a);j=A3(j,d&4294967295);a=B3(a);d=A3(a,B3(d));c[g]=((j&4294967295)>>>0)+((i&4294967295)>>>0);d+=B3(i)>>>0;d+=B3(j)>>>0;d+=B3(c[g])>>>0;arb(g);i=h+=c[g];j=c[g];if((0<=i?i:i+0x10000000000000000)<(0<=j?j:j+0x10000000000000000)){d+=1}c[e]=h;c[f]=d;b=g}$qb.X=1;function C3(a,d){var e=b;b+=4;var f;f=e+2;var g=c[a+2];(c[a+2]|0)!=(c[d+2]|0)?f=g-c[d+2]:0==(g|0)?f=0:(g=c[a+2],x3(e,c[a],c[d+1]),x3(f,c[a+1],c[d]),f=u3(e,f)*g);b=e;return f}C3.X=1;function brb(a,d){var e=b;b+=16;var f,g=e+2;f=e+4;var h=e+6,i=e+8,j=e+10,l=e+12,m=e+14,n=c[a+4];(c[a+4]|0)!=(c[d+4]|0)?f=n-c[d+4]:0==(n|0)?f=0:c[a+5]&1?f=-D3(d,(c[a+4]|0)*c[a]):(c[i]=c[a],k[i]=k[a],c[i+1]=c[a+1],k[i+1]=k[a+1],n=d+2,c[j]=c[n],k[j]=k[n],c[j+1]=c[n+1],k[j+1]=k[n+1],crb(i,n,e,g),i=a+2,c[l]=c[i],k[l]=k[i],c[l+1]=c[i+1],k[l+1]=k[i+1],c[m]=c[d],k[m]=k[d],c[m+1]=c[d+1],k[m+1]=k[d+1],crb(l,d,f,h),g=u3(g,h),f=0!=(g|0)?c[a+4]*g:c[a+4]*u3(e,f));b=e;return f}brb.X=1;function D3(a,d){var e=b;b+=2;var f,g;g=d;var h=c[a+5]&1;a:do{if(h){var i=f=(c[a+4]|0)*c[a],j=g;(0x7ffffffffffffc00<=i?i-0x10000000000000000:i)>(0x7ffffffffffffc00<=j?j-0x10000000000000000:j)?f=1:(i=g,f=(0x7ffffffffffffc00<=f?f-0x10000000000000000:f)<(0x7ffffffffffffc00<=i?i-0x10000000000000000:i)?-1:0)}else{f=g;f=0<(0x7ffffffffffffc00<=f?f-0x10000000000000000:f);do{if(f){if(!(0>=(c[a+4]|0))){break}f=-1;break a}i=g;j=c[a+4];if(0<=(0x7ffffffffffffc00<=i?i-0x10000000000000000:i)){f=j;break a}if(0<=(j|0)){f=1;break a}g=-g}while(0);v3(e,a+2,g);f=c[a+4]*u3(a,e)}}while(0);b=e;return f}D3.X=1;function crb(a,d,e,f){var g=b;b+=46;var h=a,a=b;b+=2;c[a]=c[h];k[a]=k[h];c[a+1]=c[h+1];k[a+1]=k[h+1];h=d;d=b;b+=2;c[d]=c[h];k[d]=k[h];c[d+1]=c[h+1];k[d+1]=k[h+1];var i=g+6,j=g+12,h=g+18,l=g+24,m=g+26,n=g+30,p=g+34,r=g+38,s=g+42,t=g+2,w=a;c[t]=c[w];k[t]=k[w];c[t+1]=c[w+1];k[t+1]=k[w+1];var t=E3(a),w=g+4,x=d;c[w]=c[x];k[w]=k[x];c[w+1]=c[x+1];k[w+1]=k[x+1];w=E3(d);x3(g,t,w);t=g+8;w=a;c[t]=c[w];k[t]=k[w];c[t+1]=c[w+1];k[t+1]=k[w+1];t=E3(a);w=g+10;x=d;c[w]=c[x];k[w]=k[x];c[w+1]=c[x+1];k[w+1]=k[x+1];w=F3(d);x3(i,t,w);t=g+14;w=a;c[t]=c[w];k[t]=k[w];c[t+1]=c[w+1];k[t+1]=k[w+1];t=F3(a);w=g+16;x=d;c[w]=c[x];k[w]=k[x];c[w+1]=c[x+1];k[w+1]=k[x+1];w=E3(d);x3(j,t,w);t=g+20;w=a;c[t]=c[w];k[t]=k[w];c[t+1]=c[w+1];k[t+1]=k[w+1];a=F3(a);t=g+22;w=d;c[t]=c[w];k[t]=k[w];c[t+1]=c[w+1];k[t+1]=k[w+1];d=F3(d);x3(h,a,d);d=g+28;c[d]=c[i];k[d]=k[i];c[d+1]=c[i+1];k[d+1]=k[i+1];d=E3(i);G3(m,d);d=g+32;c[d]=c[j];k[d]=k[j];c[d+1]=c[j+1];k[d+1]=k[j+1];d=E3(j);G3(n,d);H3(l,m,n);m=g+36;c[m]=c[i];k[m]=k[i];c[m+1]=c[i+1];k[m+1]=k[i+1];i=F3(i);G3(p,i);I3(h,p);p=g+40;c[p]=c[j];k[p]=k[j];c[p+1]=c[j+1];k[p+1]=k[j+1];j=F3(j);G3(r,j);I3(h,r);r=g+44;c[r]=c[l];k[r]=k[l];c[r+1]=c[l+1];k[r+1]=k[l+1];r=F3(l);G3(s,r);I3(h,s);drb(l);I3(g,l);erb(g,l)&&frb(h);c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[f]=c[h];k[f]=k[h];c[f+1]=c[h+1];k[f+1]=k[h+1];b=g}crb.X=1;function J3(a,d,e){var f,g;f=grb(a+12);g=grb(a+12);c[f+2]=g;c[g+2]=f;c[f+5]=c[a+25];c[g+5]=c[a+25];c[f+3]=e;c[g+3]=d;c[f+4]=0;c[g+4]=0;d=a+29;c[d]+=1;(c[a+29]|0)>(c[a+30]|0)&&(c[a+30]=c[a+29]);return f}J3.X=1;function grb(a){var d;d=c[a+2];0==(d|0)&&(d=c[a+1],0!=(d|0)?c[a+1]=c[d+2]:(d=Ue(12,16),0==(d|0)?d=0:hrb(d,c[a+3]),c[d+2]=c[a],c[a]=d),d=irb(d));c[a+2]=c[d];a=d;0==(a|0)?a=0:(c[a]=0,k[a]=0,c[a+1]=0,k[a+1]=0,c[a+2]=0,k[a+2]=0,c[a+3]=0,k[a+3]=0,c[a+4]=0,k[a+4]=0,c[a+5]=0,k[a+5]=0);return a}grb.X=1;function jrb(a,d,e,f,g){var h,i,j,l,m,n,p,r,s,t,w;$2=a;a=c[d+3];j=c[e+2];m=(c[a+13]|0)==(c[j+13]|0);a:do{if(m){if((c[a+14]|0)!=(c[j+14]|0)){h=20}else{if(h=c[j+1],(h|0)==(j|0)){c[f]=a,0!=(c[j+2]|0)&&(j=c[c[j+2]+3]),c[g]=j,i=0,h=86}else{l=c[j];c[h]=l;c[l+1]=h;var x=(j|0)==(c[e]|0);b:do{if(x){p=(c[l+13]|0)<(c[h+13]|0);do{if(!p&&!((c[l+13]|0)==(c[h+13]|0)&&(c[l+14]|0)<(c[h+14]|0))){c[e]=h;break b}}while(0);c[e]=l}}while(0);if((j|0)==(c[e+1]|0)){x=(c[l+13]|0)>(c[h+13]|0);do{if(!x&&!((c[l+13]|0)==(c[h+13]|0)&&(c[l+14]|0)>(c[h+14]|0))){c[e+1]=h;h=20;break a}}while(0);c[e+1]=l}h=20}}}else{h=20}}while(0);if(20==h){a=c[d+1];j=c[e+1];m=i=0;h=1;l=0;for(x=j;;){n=x=(c[x+13]-c[a+13])*h;x=0<(x|0);a:do{if(x){b:for(;;){p=c[j+14]-c[a+14];r=a;r=0!=(l|0)?c[r]:c[r+1];w=(r|0)!=(a|0);do{if(w&&(s=(c[r+13]-c[a+13])*h,t=c[r+14]-c[a+14],0>=(t|0))){if(0!=(s|0)){if(0<=(s|0)){break}if(!((n*t|0)<=(s*p|0))){break}}a=r;n=(c[j+13]-c[a+13])*h;continue b}}while(0);r=j;r=0!=(l|0)?c[r]:c[r+1];if((r|0)==(j|0)){break a}s=(c[r+13]-c[j+13])*h;t=c[r+14]-c[j+14];w=(c[r+13]-c[a+13])*h;if(0>=(w|0)){break a}if(0<=(t|0)){break a}if(0!=(s|0)){if(0<=(s|0)){break a}if((n*t|0)>=(s*p|0)){break a}}j=r;n=w}}else{if(0>(n|0)){b:for(;;){p=c[j+14]-c[a+14];r=j;r=0!=(l|0)?c[r+1]:c[r];w=(r|0)!=(j|0);do{if(w&&(s=(c[r+13]-c[j+13])*h,t=c[r+14]-c[j+14],0<=(t|0))){if(0!=(s|0)){if(0<=(s|0)){break}if(!((n*t|0)<=(s*p|0))){break}}j=r;n=(c[j+13]-c[a+13])*h;continue b}}while(0);r=a;r=0!=(l|0)?c[r+1]:c[r];if((r|0)==(a|0)){break a}s=(c[r+13]-c[a+13])*h;t=c[r+14]-c[a+14];w=(c[j+13]-c[r+13])*h;if(0<=(w|0)){break a}if(0>=(t|0)){break a}if(0!=(s|0)){if(0<=(s|0)){break a}if((n*t|0)>=(s*p|0)){break a}}a=r;n=w}}else{p=c[a+13];s=c[a+14];for(t=a;;){r=t;r=w=0!=(l|0)?c[r]:c[r+1];if((w|0)==(a|0)){break}if((c[r+13]|0)!=(p|0)){break}if(!((c[r+14]|0)<=(s|0))){break}t=r;s=c[r+14]}a=t;s=c[j+14];for(t=j;;){r=t;r=w=0!=(l|0)?c[r+1]:c[r];if((w|0)==(j|0)){break}if((c[r+13]|0)!=(p|0)){break}if(!((c[r+14]|0)>=(s|0))){break}t=r;s=c[r+14]}j=t}}}while(0);0==(l|0)&&(i=a,m=j,a=c[d],j=c[e],h=-1);l=x=l+1;n=j;if(!(1>=(x|0))){break}x=n}c[a+1]=n;c[j]=a;c[i]=m;c[m+1]=i;(c[c[e]+13]|0)<(c[c[d]+13]|0)&&(c[d]=c[e]);(c[c[e+1]+13]|0)>=(c[c[d+1]+13]|0)&&(c[d+1]=c[e+1]);c[d+3]=c[e+3];c[f]=i;c[g]=m;i=1}return i}jrb.X=1;function K3(a,d){return c[a+3]+d}K3.X=1;function krb(a,d){return(c[a]|0)!=(c[d]|0)?1:(c[a+1]|0)!=(c[d+1]|0)?1:(c[a+2]|0)!=(c[d+2]|0)}krb.X=1;function L3(a,d){c[a]=d;c[d+1]=a}L3.X=1;function lrb(a,d){return(c[a]|0)==(c[d]|0)?(c[a+1]|0)!=(c[d+1]|0)?0:(c[a+2]|0)==(c[d+2]|0):0}lrb.X=1;function M3(a,d,e,f){var g=b;b+=8;var h,i,j,l,m,n,p=g+4;i=e-d;do{if(0==(i|0)){c[f]=0,c[f+1]=0,c[f+2]=0,c[f+3]=0,h=27}else{if(2==(i|0)){if(j=c[K3(a+20,d)],l=j+18,krb(j+13,l+13)){m=c[j+13]-c[l+13];n=c[j+14]-c[l+14];0==(m|0)?0!=(n|0)?h=10:((c[j+15]|0)>(c[l+15]|0)&&(h=l,l=j,j=h),c[j]=j,c[j+1]=j,c[f]=j,c[f+1]=j,c[f+2]=j,c[f+3]=j,h=20):h=10;a:do{if(10==h){c[j]=l;c[j+1]=l;c[l]=j;c[l+1]=j;0>(m|0)?h=13:0==(m|0)&&0>(n|0)?h=13:(c[f]=l,c[f+1]=j,h=15);13==h&&(c[f]=j,c[f+1]=l);var r=0>(n|0);do{if(!r&&!(0==(n|0)&&0>(m|0))){c[f+2]=l;c[f+3]=j;break a}}while(0);c[f+2]=j;c[f+3]=l}}while(0);m=J3(a,j,l);L3(m,m);c[j+2]=m;m=c[m+2];L3(m,m);c[l+2]=m;h=27}else{h=21}}else{if(1==(i|0)){h=21}else{j=((i|0)/2&-1)+d;l=g;m=c[K3(a+20,j-1)]+13;c[l]=c[m];k[l]=k[m];c[l+1]=c[m+1];k[l+1]=k[m+1];c[l+2]=c[m+2];k[l+2]=k[m+2];c[l+3]=c[m+3];k[l+3]=k[m+3];l=j;for(m=a+20;(l|0)<(e|0)&&lrb(c[K3(m,l)]+13,g);){l+=1}M3(a,d,j,f);mrb(p);M3(a,l,e,p);nrb(a,f,p);h=27}}}}while(0);21==h&&(a=c[K3(a+20,d)],c[a+2]=0,c[a]=a,c[a+1]=a,c[f]=a,c[f+1]=a,c[f+2]=a,c[f+3]=a);b=g}M3.X=1;function orb(a,d){return c[d+1]*c[a+1]+c[d]*c[a]+c[d+2]*c[a+2]}orb.X=1;function nrb(a,d,e){var f=b;b+=68;var g,h,i,j,l,m=f+1,n,p,r,s,t=f+2,w=f+6,x=f+10,y=f+13,z=f+17,A,C=f+20,B=f+21,K=f+25,E=f+29,G=f+33,M=f+34,L=f+38,F=f+42,I,R,O=f+46,Z=f+50,P=f+54,S=f+57,da=f+60,V,ba=f+63,$,Y,la=f+66,ka=f+67,ja,ea=0!=(c[e+1]|0);a:do{if(ea){if(0!=(c[d+1]|0)){p=a+25;c[p]-=1;l=j=i=h=c[f]=0;s=r=p=n=c[m]=0;I=jrb(a,d,e,f,m);A=c[m];if(I){N3(w,A,c[f]);O3(y,0,0,-1);P3(x,y,w);Q3(z,w,x);A=c[c[f]+2];c[C]=0;I=0!=(A|0);b:do{if(I){for(;;){N3(B,c[A+3],c[f]);$dot=V=R3(B,x);V=0==(0x7ffffffffffffc00<=V?V-0x10000000000000000:V);do{if(V){N3(K,c[A+3],c[f]);var ca=R3(K,z);if(0<(0x7ffffffffffffc00<=ca?ca-0x10000000000000000:ca)){if(0!=(c[C]|0)&&(ca=c[C],O3(E,0,0,-1),1!=(S3(ca,A,w,E)|0))){break}c[C]=A}}}while(0);A=c[A];if((A|0)==(c[c[f]+2]|0)){break b}}}}while(0);A=I=c[c[m]+2];c[G]=0;I=0!=(I|0);b:do{if(I){for(;;){N3(M,c[A+3],c[m]);$dot1=V=R3(M,x);V=0==(0x7ffffffffffffc00<=V?V-0x10000000000000000:V);do{if(V&&(N3(L,c[A+3],c[m]),ca=R3(L,z),0<(0x7ffffffffffffc00<=ca?ca-0x10000000000000000:ca))){if(0!=(c[G]|0)&&(ca=c[G],O3(F,0,0,-1),2!=(S3(ca,A,w,F)|0))){break}c[G]=A}}while(0);A=c[A];if((A|0)==(c[c[m]+2]|0)){break b}}}}while(0);g=0!=(c[C]|0)?22:0!=(c[G]|0)?22:26;22==g&&(prb(a,c[f],c[m],C,G,0,0),0!=(c[C]|0)&&(c[f]=c[c[C]+3]),0!=(c[G]|0)&&(c[m]=c[c[G]+3]));A=t;I=c[m]+13;c[A]=c[I];k[A]=k[I];c[A+1]=c[I+1];k[A+1]=k[I+1];c[A+2]=c[I+2];k[A+2]=k[I+2];c[A+3]=c[I+3];k[A+3]=k[I+3];A=t+2}else{I=t,A+=13,c[I]=c[A],k[I]=k[A],c[I+1]=c[A+1],k[I+1]=k[A+1],c[I+2]=c[A+2],k[I+2]=k[A+2],c[I+3]=c[A+3],k[I+3]=k[A+3],A=t}c[A]+=1;A=c[f];I=c[m];R=1;for(var W=ca=t;;){N3(O,c[m],c[f]);T3(Z,t,c[f]+13);P3(P,Z,O);Q3(S,O,P);U3(da,0,0);V=qrb(a,0,c[f],O,P,S,da);U3(ba,0,0);$=Y=qrb(a,1,c[m],O,P,S,ba);ja=0!=(V|0);do{if(ja){var U=Y;g=34}else{if(0!=($|0)){if(0==(V|0)){var X=1;g=36}else{U=$,g=34}}else{a=J3(a,c[f],c[m]);L3(a,a);c[c[f]+2]=a;a=c[a+2];L3(a,a);c[c[m]+2]=a;break a}}}while(0);34==g&&(X=0==(U|0)?-1:C3(da,ba));Y=X;g=R&1?40:0<=(Y|0)?rrb(ba)?47:40:rrb(da)?47:40;40==g&&(R=g=J3(a,c[f],c[m]),0!=(l|0)?c[l+1]=R:j=R,c[g]=l,l=g,R=g=c[g+2],0!=(s|0)?c[s]=R:r=R,c[g+1]=s,s=g);c[la]=V;c[ka]=$;g=Y;0==(g|0)&&(prb(a,c[f],c[m],la,ka,0,0),g=Y);g=0<=(g|0);do{if(g&&0!=(c[ka]|0)){if(0!=(n|0)){R=c[n];var ma=(R|0)!=($|0);b:do{if(ma){for(;;){if(ja=c[R],V3(a,R),R=ja,(R|0)==($|0)){break b}}}}while(0);R=n}else{R=0}R=0!=(R|0);0!=(s|0)?(R?L3(n,r):(L3(c[$+1],r),p=r),L3(s,$),s=r=0):R||(p=$);n=c[m]+13;c[ca]=c[n];k[ca]=k[n];c[ca+1]=c[n+1];k[ca+1]=k[n+1];c[ca+2]=c[n+2];k[ca+2]=k[n+2];c[ca+3]=c[n+3];k[ca+3]=k[n+3];c[m]=c[c[ka]+3];n=c[c[ka]+2]}}while(0);$=0>=(Y|0);do{if($&&0!=(c[la]|0)){if(0!=(h|0)){Y=c[h+1];R=(Y|0)!=(V|0);b:do{if(R){for(;;){if(g=c[Y+1],V3(a,Y),Y=g,(Y|0)==(V|0)){break b}}}}while(0);Y=h}else{Y=0}Y=0!=(Y|0);0!=(l|0)?(g=j,Y?L3(g,h):(L3(g,c[V]),i=j),L3(V,l),l=j=0):Y||(i=V);h=c[f]+13;c[W]=c[h];k[W]=k[h];c[W+1]=c[h+1];k[W+1]=k[h+1];c[W+2]=c[h+2];k[W+2]=k[h+2];c[W+3]=c[h+3];k[W+3]=k[h+3];c[f]=c[c[la]+3];h=c[c[la]+2]}}while(0);if((c[f]|0)==(A|0)&&(c[m]|0)==(I|0)){break}R=0}V=0==(h|0);do{if(V){L3(j,l),c[c[f]+2]=l}else{A=c[h+1];ca=(A|0)!=(i|0);b:do{if(ca){for(;;){if(I=c[A+1],V3(a,A),A=I,(A|0)==(i|0)){break b}}}}while(0);0!=(l|0)&&(L3(j,h),L3(i,l))}}while(0);if(0==(n|0)){L3(s,r),c[c[m]+2]=s}else{i=c[n];l=(i|0)!=(p|0);b:do{if(l){for(;;){if(j=c[i],V3(a,i),i=j,(i|0)==(p|0)){break b}}}}while(0);0!=(s|0)&&(L3(n,r),L3(s,p))}}else{p=d,r=e,c[p]=c[r],k[p]=k[r],c[p+1]=c[r+1],k[p+1]=k[r+1],c[p+2]=c[r+2],k[p+2]=k[r+2],c[p+3]=c[r+3],k[p+3]=k[r+3]}}}while(0);b=f}nrb.X=1;function S3(a,d,e,f){var g=b;b+=14;var h=g+3,i=g+6,j=g+10,l=(c[a+1]|0)==(d|0);(c[a]|0)==(d|0)?l?(P3(g,f,e),N3(i,c[a+3],c[c[d+2]+3]),N3(j,c[d+3],c[c[d+2]+3]),P3(h,i,j),a=orb(g,h),a=0<(0x7ffffffffffffc00<=a?a-0x10000000000000000:a)?2:1):a=2:a=l?1:0;b=g;return a}S3.X=1;function P3(a,d,e){srb(a,c[e+2]*c[d+1]-c[e+1]*c[d+2]|0,c[e]*c[d+2]-c[e+2]*c[d]|0,c[e+1]*c[d]-c[e]*c[d+1]|0)}P3.X=1;function N3(a,d,e){T3(a,d+13,e+13)}N3.X=1;function R3(a,d){return c[d+1]*(c[a+1]|0)+c[d]*(c[a]|0)+c[d+2]*(c[a+2]|0)}R3.X=1;function trb(a){0==(c[a+2]|0)?(a=c[a+1],a=0==(0x7ffffffffffffc00<=a?a-0x10000000000000000:a)):a=0;return a}trb.X=1;function qrb(a,d,e,f,g,h,i){var j=b;b+=7;var l,m,n=j+4,p,d=d&1;l=0;m=c[e+2];var r=0!=(m|0);a:do{if(r){for(var s=a+25,t=n,w=n;;){if((c[m+5]|0)>(c[s]|0)&&(N3(j,c[m+3],e),U3(n,R3(j,h),R3(j,g)),!trb(n))){if(p=i,0==(l|0)){l=p,c[l]=c[t],k[l]=k[t],c[l+1]=c[t+1],k[l+1]=k[t+1],c[l+2]=c[t+2],k[l+2]=k[t+2],l=m}else{var x=C3(n,p);p=x;0>(x|0)?(l=i,c[l]=c[w],k[l]=k[w],c[l+1]=c[w+1],k[l+1]=k[w+1],c[l+2]=c[w+2],k[l+2]=k[w+2],l=m):0==(p|0)&&(d&1|0)==(2==(S3(l,m,f,j)|0)&1|0)&&(l=m)}}m=c[m];if((m|0)==(c[e+2]|0)){break a}}}}while(0);b=j;return l}qrb.X=1;function prb(a,d,e,f,g,h,i){var j=b;b+=94;var l,m,n=j+4,p=j+8,r=j+12,s=j+15,t,w=j+19,x,y,z,A,C,B,K,E,G=j+22,M,L,F=j+26,I,R=j+30,O=j+34,Z=j+37,P=j+40,S,da=j+44,V,ba,$,Y=j+48,la=j+52,ka=j+55,ja,ea=j+58,ca,W,U=j+62,X,ma=j+66,ga=j+70,ha=j+73,ta=j+76,ra,ua=j+80,za,Za,ib,Ca=j+84,Sa=j+88,mb=j+91;l=c[f];m=c[g];var Oa=0!=(l|0)?c[l+3]+13:d+13;c[j]=c[Oa];k[j]=k[Oa];c[j+1]=c[Oa+1];k[j+1]=k[Oa+1];c[j+2]=c[Oa+2];k[j+2]=k[Oa+2];c[j+3]=c[Oa+3];k[j+3]=k[Oa+3];var Pa=0!=(m|0)?c[m+3]+13:e+13;c[n]=c[Pa];k[n]=k[Pa];c[n+1]=c[Pa+1];k[n+1]=k[Pa+1];c[n+2]=c[Pa+2];k[n+2]=k[Pa+2];c[n+3]=c[Pa+3];k[n+3]=k[Pa+3];T3(p,e+13,d+13);T3(s,c[(0!=(l|0)?l:m)+3]+13,d+13);P3(r,s,p);t=R3(d+13,r);Q3(w,p,r);x=R3(j,w);var fc=0!=(c[f]|0);a:do{if(fc){for(var jb=a+25,La=j;;){if((c[c[f]+3]|0)==(h|0)){break a}y=c[c[c[f]+2]+1];var fb=R3(c[y+3]+13,r),Rb=t;if((0x7ffffffffffffc00<=fb?fb-0x10000000000000000:fb)<(0x7ffffffffffffc00<=Rb?Rb-0x10000000000000000:Rb)){break a}if((c[y+5]|0)==(c[jb]|0)){break a}var pb=z=R3(c[y+3]+13,w),Sb=x;if((0x7ffffffffffffc00<=pb?pb-0x10000000000000000:pb)<=(0x7ffffffffffffc00<=Sb?Sb-0x10000000000000000:Sb)){break a}x=z;c[f]=y;var ab=c[y+3]+13;c[La]=c[ab];k[La]=k[ab];c[La+1]=c[ab+1];k[La+1]=k[ab+1];c[La+2]=c[ab+2];k[La+2]=k[ab+2];c[La+3]=c[ab+3];k[La+3]=k[ab+3]}}}while(0);A=R3(n,w);var Ib=0!=(c[g]|0);a:do{if(Ib){for(var Fc=a+25,Ac=n;;){if((c[c[g]+3]|0)==(i|0)){break a}C=c[c[c[g]+2]];var ob=R3(c[C+3]+13,r),Gc=t;if((0x7ffffffffffffc00<=ob?ob-0x10000000000000000:ob)<(0x7ffffffffffffc00<=Gc?Gc-0x10000000000000000:Gc)){break a}if((c[C+5]|0)==(c[Fc]|0)){break a}var Yc=B=R3(c[C+3]+13,w),Cc=A;if((0x7ffffffffffffc00<=Yc?Yc-0x10000000000000000:Yc)<=(0x7ffffffffffffc00<=Cc?Cc-0x10000000000000000:Cc)){break a}A=B;c[g]=C;var Ub=c[C+3]+13;c[Ac]=c[Ub];k[Ac]=k[Ub];c[Ac+1]=c[Ub+1];k[Ac+1]=k[Ub+1];c[Ac+2]=c[Ub+2];k[Ac+2]=k[Ub+2];c[Ac+3]=c[Ub+3];k[Ac+3]=k[Ub+3]}}}while(0);var Uc=A-x;K=Uc;var nd=0<(0x7ffffffffffffc00<=Uc?Uc-0x10000000000000000:Uc);a:do{if(nd){var Ic=a+25,tc=j,hd=a+25,Tb=n;b:for(;;){T3(G,n,j);E=W3(G,p);var Jc=0!=(c[f]|0);do{if(Jc&&(c[c[f]+3]|0)!=(h|0)&&(M=c[c[c[f]]+2],(c[M+5]|0)>(c[Ic]|0))){T3(F,c[M+3]+13,j);L=R3(F,w);T3(R,c[M+3]+13,j);I=W3(R,p);var ub=L;if(0==(0x7ffffffffffffc00<=ub?ub-0x10000000000000000:ub)){var uc=I;if(0<=(0x7ffffffffffffc00<=uc?uc-0x10000000000000000:uc)){break}}else{var Kc=L;if(0<=(0x7ffffffffffffc00<=Kc?Kc-0x10000000000000000:Kc)){break}U3(O,I,L);U3(Z,E,K);if(!(0<=(C3(O,Z)|0))){break}}var gb=c[M+3]+13;c[tc]=c[gb];k[tc]=k[gb];c[tc+1]=c[gb+1];k[tc+1]=k[gb+1];c[tc+2]=c[gb+2];k[tc+2]=k[gb+2];c[tc+3]=c[gb+3];k[tc+3]=k[gb+3];T3(P,n,j);K=R3(P,w);c[f]=(c[f]|0)==(l|0)?0:M;continue b}}while(0);if(0==(c[g]|0)){break a}if((c[c[g]+3]|0)==(i|0)){break a}S=c[c[c[g]+2]];if((c[S+5]|0)<=(c[hd]|0)){break a}T3(da,c[S+3]+13,n);var gc=R3(da,r);if(0!=(0x7ffffffffffffc00<=gc?gc-0x10000000000000000:gc)){break a}V=R3(da,w);ba=W3(da,p);T3(Y,c[S+3]+13,j);var Lc=$=R3(Y,w);if(0>=(0x7ffffffffffffc00<=Lc?Lc-0x10000000000000000:Lc)){break a}var Dc=V;if(0==(0x7ffffffffffffc00<=Dc?Dc-0x10000000000000000:Dc)){var Eb=ba;if(0<=(0x7ffffffffffffc00<=Eb?Eb-0x10000000000000000:Eb)){break a}}else{var Ra=V;if(0<=(0x7ffffffffffffc00<=Ra?Ra-0x10000000000000000:Ra)){break a}U3(la,ba,V);U3(ka,E,K);if(0>=(C3(la,ka)|0)){break a}}c[g]=S;var qb=c[c[g]+3]+13;c[Tb]=c[qb];k[Tb]=k[qb];c[Tb+1]=c[qb+1];k[Tb+1]=k[qb+1];c[Tb+2]=c[qb+2];k[Tb+2]=k[qb+2];c[Tb+3]=c[qb+3];k[Tb+3]=k[qb+3];K=$}}else{var Ab=K;if(0>(0x7ffffffffffffc00<=Ab?Ab-0x10000000000000000:Ab)){var hc=a+25,Hc=n,ic=a+25,db=j;b:for(;;){T3(ea,n,j);ja=W3(ea,p);var bb=0!=(c[g]|0);do{if(bb&&(c[c[g]+3]|0)!=(i|0)&&(ca=c[c[c[g]+1]+2],(c[ca+5]|0)>(c[hc]|0))){T3(U,c[ca+3]+13,n);W=R3(U,w);T3(ma,c[ca+3]+13,n);X=W3(ma,p);var id=W;if(0==(0x7ffffffffffffc00<=id?id-0x10000000000000000:id)){var Zc=X;if(0>=(0x7ffffffffffffc00<=Zc?Zc-0x10000000000000000:Zc)){break}}else{var vb=W;if(0<=(0x7ffffffffffffc00<=vb?vb-0x10000000000000000:vb)){break}U3(ga,X,W);U3(ha,ja,K);if(!(0>=(C3(ga,ha)|0))){break}}var rb=c[ca+3]+13;c[Hc]=c[rb];k[Hc]=k[rb];c[Hc+1]=c[rb+1];k[Hc+1]=k[rb+1];c[Hc+2]=c[rb+2];k[Hc+2]=k[rb+2];c[Hc+3]=c[rb+3];k[Hc+3]=k[rb+3];T3(ta,n,j);K=R3(ta,w);c[g]=(c[g]|0)==(m|0)?0:ca;continue b}}while(0);if(0==(c[f]|0)){break a}if((c[c[f]+3]|0)==(h|0)){break a}ra=c[c[c[f]+2]+1];if((c[ra+5]|0)<=(c[ic]|0)){break a}T3(ua,c[ra+3]+13,j);var vc=R3(ua,r);if(0!=(0x7ffffffffffffc00<=vc?vc-0x10000000000000000:vc)){break a}za=R3(ua,w);Za=W3(ua,p);T3(Ca,n,c[ra+3]+13);var Qc=ib=R3(Ca,w);if(0<=(0x7ffffffffffffc00<=Qc?Qc-0x10000000000000000:Qc)){break a}var Rc=za;if(0==(0x7ffffffffffffc00<=Rc?Rc-0x10000000000000000:Rc)){var Xd=Za;if(0>=(0x7ffffffffffffc00<=Xd?Xd-0x10000000000000000:Xd)){break a}}else{var Sc=za;if(0<=(0x7ffffffffffffc00<=Sc?Sc-0x10000000000000000:Sc)){break a}U3(Sa,Za,za);U3(mb,ja,K);if(0<=(C3(Sa,mb)|0)){break a}}c[f]=ra;var Mc=c[c[f]+3]+13;c[db]=c[Mc];k[db]=k[Mc];c[db+1]=c[Mc+1];k[db+1]=k[Mc+1];c[db+2]=c[Mc+2];k[db+2]=k[Mc+2];c[db+3]=c[Mc+3];k[db+3]=k[Mc+3];K=ib}}}}while(0);b=j}prb.X=1;function T3(a,d,e){O3(a,c[d]-c[e],c[d+1]-c[e+1],c[d+2]-c[e+2])}T3.X=1;function Q3(a,d,e){srb(a,c[e+2]*(c[d+1]|0)-c[e+1]*(c[d+2]|0),c[e]*(c[d+2]|0)-c[e+2]*(c[d]|0),c[e+1]*(c[d]|0)-c[e]*(c[d+1]|0))}Q3.X=1;function W3(a,d){return c[d+1]*c[a+1]+c[d]*c[a]+c[d+2]*c[a+2]|0}W3.X=1;function rrb(a){0>(c[a+2]|0)?(a=c[a+1],a=0==(0x7ffffffffffffc00<=a?a-0x10000000000000000:a)):a=0;return a}rrb.X=1;function X3(a,d){return(d<<2)+c[a+3]}X3.X=1;function urb(a,d){return(c[a+1]|0)<(c[d+1]|0)?1:(c[a+1]|0)!=(c[d+1]|0)?0:(c[a]|0)<(c[d]|0)?1:(c[a]|0)!=(c[d]|0)?0:(c[a+2]|0)<(c[d+2]|0)}urb.X=1;function vrb(a){c[a+1]=c[a];c[a+2]=0}vrb.X=1;function wrb(a,d){c[a+3]=d}wrb.X=1;function V3(a,d){var e,f;e=c[d];f=c[d+2];(e|0)!=(d|0)?(c[e+1]=c[d+1],c[c[d+1]]=e,c[c[f+3]+2]=e):c[c[f+3]+2]=0;e=c[f];(e|0)!=(f|0)?(c[e+1]=c[f+1],c[c[f+1]]=e,c[c[d+3]+2]=e):c[c[d+3]+2]=0;xrb(a+12,d);xrb(a+12,f);e=a+29;c[e]-=1}V3.X=1;function yrb(a,d,e){var f,g;f=Y3(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(Y3(a)|0)&&zrb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=(g<<2)+c[i];if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2];c[j+3]=c[l+3];k[j+3]=k[l+3]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}yrb.X=1;function Arb(a,d){1<(Y3(a)|0)&&Z3(a,d,0,Y3(a)-1)}Arb.X=1;function Brb(a,d,e,f,g){var h=b;b+=80;var i=h+4,j=h+5,l=h+6,m=h+7,n=h+11,p=h+12,r=h+13,s=h+14,t=h+18,w=h+19,x=h+20,y=h+21,z=h+25,A=h+29,C=h+30,B=h+34,K=h+38,E=h+39,G=h+44,M=h+48,L=h+52,F=h+53,I=h+54,R=h+55,O=h+59,Z=h+63,P=h+67,S=h+71,da=h+75,V=h+76,e=e&1;k[i]=1.0000000150474662e+30;k[j]=1.0000000150474662e+30;k[l]=1.0000000150474662e+30;H(h,i,j,l);k[n]=-1.0000000150474662e+30;k[p]=-1.0000000150474662e+30;k[r]=-1.0000000150474662e+30;H(m,n,p,r);i=d;j=e&1;a:do{if(j){if(l=0,(l|0)<(g|0)){for(;;){if(n=i,k[t]=k[n],k[w]=k[n+1],k[x]=k[n+2],H(s,t,w,x),i+=f,hp(h,s),gp(m,s),l+=1,(l|0)>=(g|0)){break a}}}}else{if(l=0,(l|0)<(g|0)){for(;;){if(n=i,H(y,n,n+1,n+2),i+=f,hp(h,y),gp(m,y),l+=1,(l|0)>=(g|0)){break a}}}}}while(0);N(z,m,h);c[a+28]=fC(z);c[a+26]=aC(z);(c[a+26]|0)==(c[a+28]|0)&&(c[a+26]=(c[a+28]+1|0)%3);c[a+27]=-c[a+28]+ -c[a+26]+3;k[A]=10216;KB(z,A);c[a]=c[z];k[a]=k[z];c[a+1]=c[z+1];k[a+1]=k[z+1];c[a+2]=c[z+2];k[a+2]=k[z+2];c[a+3]=c[z+3];k[a+3]=k[z+3];0<k[z]&&(k[z]=1/k[z]);0<k[z+1]&&(k[z+1]=1/k[z+1]);0<k[z+2]&&(k[z+2]=1/k[z+2]);wn(B,h,m);k[K]=.5;Q(C,B,K);i=a+4;c[i]=c[C];k[i]=k[C];c[i+1]=c[C+1];k[i+1]=k[C+1];c[i+2]=c[C+2];k[i+2]=k[C+2];c[i+3]=c[C+3];k[i+3]=k[C+3];Crb(E);yrb(E,g,G);i=d;d=e&1;a:do{if(d){if(C=0,(C|0)<(g|0)){e=a+4;m=M;s=R;t=a+27;w=a+28;for(x=a+26;;){if(G=i,k[L]=k[G],k[F]=k[G+1],k[I]=k[G+2],H(M,L,F,I),i+=f,N(O,M,e),ig(R,O,z),c[m]=c[s],k[m]=k[s],c[m+1]=c[s+1],k[m+1]=k[s+1],c[m+2]=c[s+2],k[m+2]=k[s+2],c[m+3]=c[s+3],k[m+3]=k[s+3],c[X3(E,C)]=k[M+c[t]]&-1,c[X3(E,C)+1]=k[M+c[w]]&-1,c[X3(E,C)+2]=k[M+c[x]]&-1,c[X3(E,C)+3]=C,C+=1,(C|0)>=(g|0)){break a}}}}else{if(C=0,(C|0)<(g|0)){e=a+4;m=Z;s=P;t=a+27;w=a+28;for(x=a+26;;){if(G=i,H(Z,G,G+1,G+2),i+=f,N(S,Z,e),ig(P,S,z),c[m]=c[s],k[m]=k[s],c[m+1]=c[s+1],k[m+1]=k[s+1],c[m+2]=c[s+2],k[m+2]=k[s+2],c[m+3]=c[s+3],k[m+3]=k[s+3],c[X3(E,C)]=k[Z+c[t]]&-1,c[X3(E,C)+1]=k[Z+c[w]]&-1,c[X3(E,C)+2]=k[Z+c[x]]&-1,c[X3(E,C)+3]=C,C+=1,(C|0)>=(g|0)){break a}}}}}while(0);Arb(E,24);vrb(a+8);wrb(a+8,g);c[da]=0;a4(a+20,g,da);f=0;M=a+8;for(L=a+20;(f|0)<(g|0);){z=Drb(M),c[z+2]=0,F=z+13,I=X3(E,f),c[F]=c[I],k[F]=k[I],c[F+1]=c[I+1],k[F+1]=k[I+1],c[F+2]=c[I+2],k[F+2]=k[I+2],c[F+3]=c[I+3],k[F+3]=k[I+3],c[z+17]=-1,c[K3(L,f)]=z,f+=1}Erb(E);Frb(a+12);Grb(a+12,6*g);c[a+29]=0;c[a+30]=0;c[a+25]=-3;mrb(V);M3(a,0,g,V);c[a+31]=c[V];Erb(E);b=h}Brb.X=1;function Frb(a){c[a+1]=c[a];c[a+2]=0}Frb.X=1;function Grb(a,d){c[a+3]=d}Grb.X=1;function a4(a,d,e){var f,g;f=b4(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(b4(a)|0)&&Hrb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+g;0!=(j|0)&&(c[j]=c[e]);g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}a4.X=1;function Drb(a){var d;d=c[a+2];0==(d|0)&&(d=c[a+1],0!=(d|0)?c[a+1]=c[d+2]:(d=Ue(12,16),0==(d|0)?d=0:Irb(d,c[a+3]),c[d+2]=c[a],c[a]=d),d=Jrb(d));c[a+2]=c[d];a=d;0==(a|0)?a=0:Krb(a);return a}Drb.X=1;function Erb(a){Lrb(a,0,Y3(a));Mrb(a);Crb(a)}Erb.X=1;function c4(a,d,e){var f=b;b+=4;k[f+c[d+27]]=c[e]|0;k[f+c[d+28]]=c[e+1]|0;k[f+c[d+26]]=c[e+2]|0;ig(a,f,d);b=f}c4.X=1;function Nrb(a,d,e){var f=b;b+=9;var g=f+4,h=f+8;c4(f,d,e+7);c4(g,d,e+11);qn(a,f,g);if((c[d+27]+1|0)==(c[d+28]|0)){d=4}else{if((c[d+27]-2|0)==(c[d+28]|0)){d=4}else{var i=-JB(a),d=6}}4==d&&(i=JB(a));k[h]=i;KB(a,h);b=f}Nrb.X=1;function Orb(a,d,e){var f=b;b+=8;var g=f+4,h=Prb(e);k[f+c[d+27]]=h;h=Qrb(e);k[f+c[d+28]]=h;e=Rrb(e);k[f+c[d+26]]=e;ig(g,f,d);wn(a,g,d+4);b=f}Orb.X=1;function Prb(a){return 0<=(c[a+16]|0)?c[a+13]|0:Srb(a+5)}Prb.X=1;function Qrb(a){return 0<=(c[a+16]|0)?c[a+14]|0:Trb(a+5)}Qrb.X=1;function Rrb(a){return 0<=(c[a+16]|0)?c[a+15]|0:Urb(a+5)}Rrb.X=1;function Vrb(a,d,e){var f=b;b+=82;var g,h=f+1,i=f+6,j=f+11,l=f+15,m=f+17,n=f+19,p=f+21,r,s,t=f+23,w,x,y,z,A=f+24,C=f+28,B=f+31,K=f+35,E=f+39,G=f+43,M=f+47,L=f+51,F=f+53,I=f+55,R=f+57,O=f+59,Z=f+63,P=f+64,S=f+68,da=f+72,V=f+76,ba=f+77;k[f]=d;if(0!=(c[a+31]|0)){r=a+25;d=c[r]-1;c[r]=d;d4(h);c[c[a+31]+17]=d;e4(h,a+31);Wrb(i);r=c[a+31]+13;c[j]=c[r];k[j]=k[r];c[j+1]=c[r+1];k[j+1]=k[r+1];c[j+2]=c[r+2];k[j+2]=k[r+2];c[j+3]=c[r+3];k[j+3]=k[r+3];y3(l,0,0);y3(m,0,0);y3(n,0,0);y3(p,0,0);var $=a+16,Y=E+1,la=E+2;a:for(;0<(b4(h)|0);){if(r=c[K3(h,b4(h)-1)],Xrb(h),s=c[r+2],0!=(s|0)){for(;;){(c[c[s+3]+17]|0)!=(d|0)&&(c[c[s+3]+17]=d,e4(h,s+3));var ka=(c[s+5]|0)!=(d|0);b:do{if(ka){c[t]=Yrb($);Zrb(c[t],c[s+3],c[c[c[s+2]+1]+3],r);$rb(i,t);w=s;for(z=y=x=0;;){0!=(z|0)&&0!=(y|0)&&(T3(A,r+13,j),T3(B,x+13,j),T3(K,y+13,j),P3(C,B,K),z=R3(A,C),f4(G,r+13,x+13),f4(M,G,y+13),f4(E,M,j),g4(L,(c[E]|0)*z),I3(l,L),g4(F,(c[Y]|0)*z),I3(m,F),g4(I,(c[la]|0)*z),I3(n,I),g4(R,z),I3(p,R));c[w+5]=d;c[w+4]=c[t];x=y;y=c[w+3];w=c[c[w+2]+1];if((w|0)==(s|0)){break b}z=x}}}while(0);s=c[s];if((s|0)==(c[r+2]|0)){continue a}}}}j=0>=(h4(p)|0);a:do{if(j){g=0,$17=1}else{t=i4(l);k[O+c[a+27]]=t;t=i4(m);k[O+c[a+28]]=t;t=i4(n);k[O+c[a+26]]=t;k[Z]=4*i4(p);KB(O,Z);JL(O,a);t=j4(i);if(0<e){A=3.4028234663852886e+38;C=0;K=(C|0)<(t|0);do{if(K){for(;!(Nrb(P,a,c[k4(i,C)]),c4(da,a,c[k4(i,C)]+3),N(S,da,O),B=J(P,S),B<A&&(A=B),C+=1,(C|0)>=(t|0));){}if(0>=A){g=0;$17=1;break a}}}while(0);k[V]=A*e;k[f]=k[WX(f,V)]}A=243703;C=0;B=(C|0)<(t|0);b:do{if(B){for(;;){if(asb(k4(i,C),k4(i,(A>>>0)%(t>>>0))),C+=1,A=1664525*A+1013904223,(C|0)>=(t|0)){break b}}}}while(0);for(A=0;;){if((A|0)>=(t|0)){g=k[f];$17=1;break a}C=c[k4(i,A)];B=k[f];bsb(ba,h);C=csb(a,C,B,ba)^1;l4(ba);if(C){g=-k[f];$17=1;break a}A+=1}}}while(0);dsb(i);l4(h)}else{g=0}b=f;return g}Vrb.X=1;function asb(a,d){var e;e=c[a];c[a]=c[d];c[d]=e}asb.X=1;function b4(a){return c[a+1]}b4.X=1;function Xrb(a){a+=1;c[a]-=1}Xrb.X=1;function I3(a,d){var e;e=c[d]+c[a];var f=c[a];if((0<=e?e:e+0x10000000000000000)<(0<=f?f:f+0x10000000000000000)){f=a+1,c[f]+=1}c[a]=e;e=a+1;c[e]+=c[d+1];return a}I3.X=1;function h4(a){var d=c[a+1];0>(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)?a=-1:(d=c[a+1],0!=(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)?a=1:(a=c[a],a=0!=(0x7ffffffffffffc00<=a?a-0x10000000000000000:a)),a=a?1:0);return a}h4.X=1;function j4(a){return c[a+1]}j4.X=1;function k4(a,d){return c[a+3]+d}k4.X=1;function e4(a,d){(b4(a)|0)==(esb(a)|0)&&Hrb(a,fsb(a,b4(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}e4.X=1;function Yrb(a){var d;d=c[a+2];0==(d|0)&&(d=c[a+1],0!=(d|0)?c[a+1]=c[d+2]:(d=Ue(12,16),0==(d|0)?d=0:gsb(d,c[a+3]),c[d+2]=c[a],c[a]=d),d=hsb(d));c[a+2]=c[d];a=d;0==(a|0)?a=0:isb(a);return a}Yrb.X=1;function Zrb(a,d,e,f){var g=b;b+=8;var h=g+4;c[a+1]=d;var i=a+3,j=d+13;c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3];N3(g,e,d);e=a+7;c[e]=c[g];k[e]=k[g];c[e+1]=c[g+1];k[e+1]=k[g+1];c[e+2]=c[g+2];k[e+2]=k[g+2];c[e+3]=c[g+3];k[e+3]=k[g+3];N3(h,f,d);f=a+11;c[f]=c[h];k[f]=k[h];c[f+1]=c[h+1];k[f+1]=k[h+1];c[f+2]=c[h+2];k[f+2]=k[h+2];c[f+3]=c[h+3];k[f+3]=k[h+3];0!=(c[d+4]|0)?c[c[d+4]+2]=a:c[d+3]=a;c[d+4]=a;b=g}Zrb.X=1;function $rb(a,d){(j4(a)|0)==(jsb(a)|0)&&ksb(a,lsb(a,j4(a)));var e=c[a+3]+c[a+1];0!=(e|0)&&(c[e]=c[d]);e=a+1;c[e]+=1}$rb.X=1;function f4(a,d,e){O3(a,c[e]+c[d],c[e+1]+c[d+1],c[e+2]+c[d+2])}f4.X=1;function i4(a){var d=b;b+=2;var e=c[a+1];0<=(0x7ffffffffffffc00<=e?e-0x10000000000000000:e)?(e=c[a+1],a=c[a],a=0x10000000000000000*(0<=e?e:e+0x10000000000000000)+(0<=a?a:a+0x10000000000000000)):(w3(d,a),a=-i4(d));b=d;return a}i4.X=1;function csb(a,d,e,f){var g=b;b+=150;var h,i,j=g+4,l=g+8,m=g+9,n=g+13,p,r=g+16,s,t,w,x=g+20,y,z,A=g+26,C,B,K=g+32,E,G=g+38,M,L,F,I,R=g+44,O,Z,P,S,da=g+50,V=g+56,ba=g+57,$=g+60,Y,la,ka,ja,ea,ca=g+63,W,U=g+67,X=g+71,ma=g+73,ga=g+75,ha=g+77,ta=g+78,ra=g+86,ua=g+88,za=g+90,Za=g+92,ib=g+94,Ca=g+96,Sa=g+98,mb=g+100,Oa=g+102,Pa=g+104,fc=g+106,jb=g+108,La=g+110,fb=g+112,Rb=g+114,pb=g+116,Sb=g+118,ab=g+120,Ib=g+122,Fc=g+124,Ac=g+126,ob=g+128,Gc=g+130,Yc=g+132,Cc=g+134,Ub=g+136,Uc=g+138,nd=g+140,Ic=g+142,tc=g+143,hd=g+144,Tb=g+145,Jc=g+146,ub,uc,Kc=g+147,gb,gc,Lc=g+148,Dc=g+149;Nrb(j,a,d);k[l]=-e;Q(g,j,l);0<k[a]&&(k[g]/=k[a]);if(0<k[a+1]){var Eb=g+1;k[Eb]/=k[a+1]}if(0<k[a+2]){var Ra=g+2;k[Ra]/=k[a+2]}O3(m,k[g+c[a+27]]&-1,k[g+c[a+28]]&-1,k[g+c[a+26]]&-1);var qb=msb(m);a:do{if(qb){i=1}else{m4(n,d);p=R3(d+3,n);f4(r,d+3,m);var Ab=s=R3(r,n),hc=p;if((0x7ffffffffffffc00<=Ab?Ab-0x10000000000000000:Ab)>=(0x7ffffffffffffc00<=hc?hc-0x10000000000000000:hc)){i=0}else{t=0;w=c[c[d+1]+2];n4(x,c[d+1],n);y=D3(x,s);var Hc=0<=(y|0),ic=w;do{if(Hc){z=ic;for(var db=x,bb=A;;){n4(A,c[z+3],n);if(0>(brb(A,x)|0)){C=D3(A,s);c[db]=c[bb];k[db]=k[bb];c[db+1]=c[bb+1];k[db+1]=k[bb+1];c[db+2]=c[bb+2];k[db+2]=k[bb+2];c[db+3]=c[bb+3];k[db+3]=k[bb+3];c[db+4]=c[bb+4];k[db+4]=k[bb+4];c[db+5]=c[bb+5];k[db+5]=k[bb+5];w=z=c[z+2];if(0>(C|0)){var id=z,Zc=t=id;break}y=C}z=c[z+1];if((z|0)==(w|0)){Zc=t;break}}if(0!=(Zc|0)){break}i=0;break a}B=ic;for(var vb=x,rb=K;;){n4(K,c[B+3],n);if(0<(brb(K,x)|0)){y=D3(K,s);if(0<=(y|0)){var vc=B,Qc=t=vc;break}c[vb]=c[rb];k[vb]=k[rb];c[vb+1]=c[rb+1];k[vb+1]=k[rb+1];c[vb+2]=c[rb+2];k[vb+2]=k[rb+2];c[vb+3]=c[rb+3];k[vb+3]=k[rb+3];c[vb+4]=c[rb+4];k[vb+4]=k[rb+4];c[vb+5]=c[rb+5];k[vb+5]=k[rb+5];w=B=c[B+2]}B=c[B+1];if((B|0)==(w|0)){Qc=t;break}}if(0==(Qc|0)){i=1;break a}}while(0);var Rc=0==(y|0);b:do{if(Rc){for(E=c[c[t+2]];;){n4(G,c[E+3],n);if(!(0>=(D3(G,s)|0))){break b}E=c[E];if((E|0)==(c[t+2]|0)){break}}i=1;break a}}while(0);F=L=M=0;for(var Xd=a+8,Sc=r,Mc=r+1,$c=r+2,Cd=nd,wc=X,Bb=ta;;){var fd=0==(y|0);b:do{if(fd){for(w=I=c[c[t+2]];;){n4(R,c[I+3],n);if(0<=(D3(R,s)|0)){break b}t=c[I+2];I=c[I];if((I|0)==(w|0)){break}}i=1;break a}}while(0);var ad=t;if(0!=(M|0)){if((ad|0)==(M|0)){break}}else{M=ad}O=y;Z=t;P=L;for(S=c[t+2];;){S=c[c[S+2]+1];n4(da,c[S+3],n);var wd=D3(da,s);y=wd;if(0<=(wd|0)){break}}t=S;var Kd=y;if(0<(Kd|0)){c[V]=c[t+3];S=c[t+2];(c[S+1]|0)==(S|0)?c[c[V]+2]=0:(c[c[V]+2]=c[S+1],L3(c[S+1],c[S]),L3(S,S));m4(ba,c[t+4]);m4($,c[c[t+2]+4]);Y=R3(d+7,ba);la=R3(d+11,ba);ka=R3(d+7,$);ja=R3(d+11,$);T3(ca,c[t+4]+3,r);ea=R3(ca,ba);T3(U,c[c[t+2]+4]+3,r);W=R3(U,$);z3(ma,Y,ja);z3(ga,la,ka);o4(X,ma,ga);c[ha]=Drb(Xd);c[c[ha]+16]=-1;c[c[ha]+17]=-1;var Rd=c[ha]+5;z3(ua,(c[d+7]|0)*ea,ja);z3(za,(c[d+7]|0)*W,la);o4(Za,ua,za);z3(ib,(c[d+11]|0)*W,Y);H3(Ca,Za,ib);z3(Sa,(c[d+11]|0)*ea,ka);o4(mb,Ca,Sa);v3(Oa,X,c[Sc]|0);H3(ra,mb,Oa);z3(fc,(c[d+8]|0)*ea,ja);z3(jb,(c[d+8]|0)*W,la);o4(La,fc,jb);z3(fb,(c[d+12]|0)*W,Y);H3(Rb,La,fb);z3(pb,(c[d+12]|0)*ea,ka);o4(Sb,Rb,pb);v3(ab,X,c[Mc]|0);H3(Pa,Sb,ab);z3(Fc,(c[d+9]|0)*ea,ja);z3(Ac,(c[d+9]|0)*W,la);o4(ob,Fc,Ac);z3(Gc,(c[d+13]|0)*W,Y);H3(Yc,ob,Gc);z3(Cc,(c[d+13]|0)*ea,ka);o4(Ub,Yc,Cc);v3(Uc,X,c[$c]|0);H3(Ib,Ub,Uc);c[Cd]=c[wc];k[Cd]=k[wc];c[Cd+1]=c[wc+1];k[Cd+1]=k[wc+1];nsb(ta,ra,Pa,Ib,X);var Ec=Rd;c[Ec]=c[Bb];k[Ec]=k[Bb];c[Ec+1]=c[Bb+1];k[Ec+1]=k[Bb+1];c[Ec+2]=c[Bb+2];k[Ec+2]=k[Bb+2];c[Ec+3]=c[Bb+3];k[Ec+3]=k[Bb+3];c[Ec+4]=c[Bb+4];k[Ec+4]=k[Bb+4];c[Ec+5]=c[Bb+5];k[Ec+5]=k[Bb+5];c[Ec+6]=c[Bb+6];k[Ec+6]=k[Bb+6];c[Ec+7]=c[Bb+7];k[Ec+7]=k[Bb+7];var xd=Srb(c[ha]+5)&-1;c[c[ha]+13]=xd;var od=Trb(c[ha]+5)&-1;c[c[ha]+14]=od;var pd=Urb(c[ha]+5)&-1;c[c[ha]+15]=pd;c[t+3]=c[ha];c[c[ha]+2]=S;e4(f,ha);e4(f,V);c[Ic]=0;e4(f,Ic);var bd=y}else{bd=Kd}0!=(bd|0)?h=55:0!=(O|0)?h=55:(c[c[c[Z+2]]+3]|0)!=(c[t+3]|0)?h=55:(L=c[c[Z+2]],h=63);55==h&&(L=J3(a,c[Z+3],c[t+3]),0==(O|0)?(L3(L,c[c[Z+2]]),h=0==(O|0)?58:57):h=57,57==h&&(h=0!=(P|0)?58:59),58==h&&L3(c[Z+2],L),0==(y|0)&&L3(c[c[t+2]+1],c[L+2]),L3(c[L+2],c[t+2]));var jd=0!=(P|0);do{if(jd){var Ld=L,Gd=c[P+2];if(0<(O|0)){L3(Ld,Gd)}else{if((Ld|0)!=(Gd|0)){e4(f,P+3);var Dd=(c[L]|0)!=(c[P+2]|0);b:do{if(Dd){for(;;){if(c[tc]=c[c[L]+3],V3(a,c[L]),e4(f,tc),(c[L]|0)==(c[P+2]|0)){break b}}}}while(0);c[hd]=0;e4(f,hd)}}}}while(0);c[L+4]=d;c[c[L+2]+4]=c[t+4];0==(F|0)&&(F=L)}var fe=0<(y|0);do{if(fe){c[c[F+2]+3]=c[L+3],L3(c[M+2],F),L3(F,c[L+2])}else{if((F|0)!=(c[L+2]|0)){e4(f,L+3);var ge=(c[F]|0)!=(c[L+2]|0);b:do{if(ge){for(;;){if(c[Tb]=c[c[F]+3],V3(a,c[F]),e4(f,Tb),(c[F]|0)==(c[L+2]|0)){break b}}}}while(0);c[Jc]=0;e4(f,Jc)}}}while(0);c[a+31]=c[K3(f,0)];ub=0;var Hd=(ub|0)<(b4(f)|0);b:do{if(Hd){for(;;){uc=b4(f);var he=(ub|0)<(uc|0);c:do{if(he){for(;;){var Zd=ub;ub=Zd+1;c[Kc]=c[K3(f,Zd)];gb=0;var $d=ub;ub=$d+1;var pg=c[K3(f,$d)];gc=pg;var Ze=0!=(pg|0);d:do{if(Ze){for(;;){osb(c[Kc],gc);var Xg=0!=(c[gc+2]|0);e:do{if(Xg){for(;;){if(gb&1||(gb=1,e4(f,Kc)),e4(f,c[gc+2]+3),V3(a,c[gc+2]),0==(c[gc+2]|0)){break e}}}}while(0);var Dh=ub;ub=Dh+1;var wf=c[K3(f,Dh)];gc=wf;if(0==(wf|0)){break d}}}}while(0);gb&1&&(c[Lc]=0,e4(f,Lc));if((ub|0)>=(uc|0)){break c}}}}while(0);if((ub|0)>=(b4(f)|0)){break b}}}}while(0);c[Dc]=0;a4(f,0,Dc);var Oe=d+3,If=r;c[Oe]=c[If];k[Oe]=k[If];c[Oe+1]=c[If+1];k[Oe+1]=k[If+1];c[Oe+2]=c[If+2];k[Oe+2]=k[If+2];c[Oe+3]=c[If+3];k[Oe+3]=k[If+3];i=1}}}while(0);var Ai=i;b=g;return Ai}csb.X=1;function psb(a,d){$1=a;return 0!=(d|0)?d<<1:1}psb.X=1;function msb(a){return 0==(c[a]|0)?0!=(c[a+1]|0)?0:0==(c[a+2]|0):0}msb.X=1;function osb(a,d){var e;e=c[d+3];0!=(c[a+4]|0)?c[c[a+4]+2]=e:c[a+3]=e;0!=(c[d+4]|0)&&(c[a+4]=c[d+4]);var f=c[d+3];e=f;f=0!=(f|0);a:do{if(f){for(;;){c[e+1]=a;var g=c[e+2];e=g;if(0==(g|0)){break a}}}}while(0);c[d+3]=0;c[d+4]=0}osb.X=1;function qsb(a){return c[a+2]}qsb.X=1;function m4(a,d){P3(a,d+7,d+11)}m4.X=1;function n4(a,d,e){var f=b;b+=10;var g=f+2,h=f+4,i=f+6,j=f+8;0<=(c[d+16]|0)?rsb(a,R3(d+13,e)):(v3(g,d+5,c[e]),v3(h,d+7,c[e+1]),H3(i,g,h),v3(j,d+9,c[e+2]),H3(f,i,j),ssb(a,f,d+11));b=f}n4.X=1;function o4(a,d,e){var f=b;b+=2;w3(f,e);H3(a,d,f);b=f}o4.X=1;function nsb(a,d,e,f,g){var h=b,i=d,d=b;b+=2;c[d]=c[i];k[d]=k[i];c[d+1]=c[i+1];k[d+1]=k[i+1];i=e;e=b;b+=2;c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];i=f;f=b;b+=2;c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];i=g;g=b;b+=2;c[g]=c[i];k[g]=k[i];c[g+1]=c[i+1];k[g+1]=k[i+1];tsb(a,d,e,f,g);b=h}nsb.X=1;function H3(a,d,e){var f;f=c[e]+c[d];var g=c[d];y3(a,f,c[e+1]+c[d+1]+((0<=f?f:f+0x10000000000000000)<(0<=g?g:g+0x10000000000000000)&1))}H3.X=1;function Srb(a){return i4(a)/i4(a+6)}Srb.X=1;function Trb(a){return i4(a+2)/i4(a+6)}Trb.X=1;function Urb(a){return i4(a+4)/i4(a+6)}Urb.X=1;function usb(a,d,e){var f,g;f=e1(a);var h=(d|0)<(f|0);a:do{if(h){if(g=d,(g|0)<(f|0)){for(;;){if(g+=1,(g|0)>=(f|0)){break a}}}}else{if((d|0)>(e1(a)|0)&&vsb(a,d),g=f,(g|0)<(d|0)){for(var i=a+3;;){var j=c[i]+3*g;if(0!=(j|0)){var l=e;c[j]=c[l];k[j]=k[l];c[j+1]=c[l+1];k[j+1]=k[l+1];c[j+2]=c[l+2];k[j+2]=k[l+2]}g+=1;if((g|0)>=(d|0)){break a}}}}}while(0);c[a+1]=d}usb.X=1;function wsb(a,d){var e=b;b+=1;var f;c[e]=a;f=c[c[e]+17];0>(f|0)&&(f=b4(d),c[c[e]+17]=f,e4(d,e));b=e;return f}wsb.X=1;function xsb(a,d){(e1(a)|0)==(qsb(a)|0)&&vsb(a,psb(a,e1(a)));var e=c[a+3]+3*c[a+1];0!=(e|0)&&(c[e]=c[d],k[e]=k[d],c[e+1]=c[d+1],k[e+1]=k[d+1],c[e+2]=c[d+2],k[e+2]=k[d+2]);e=a+1;c[e]+=1}xsb.X=1;function vsb(a,d){var e;(qsb(a)|0)<(d|0)&&(e=ysb(a,d),zsb(a,0,e1(a),e),Adb(a,0,e1(a)),Bdb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}vsb.X=1;function ddb(a,d,e,f,g,h,i){var j=b;b+=55;var l,m=j+32,n=j+36,p=j+39,r=j+40,s=j+45,t,w,x,y,z=j+49,A=j+52,C,B,e=e&1;if(0>=(g|0)){UW(a),d1(a+5),wW(a+10),l=0}else{Asb(j);Brb(j,d,e&1,f,g);d=0;0<h?(d=h=Vrb(j,h,i),0>h?(UW(a),d1(a+5),wW(a+10),l=d,$11=1,h=49):h=13):h=13;if(13==h){xZ(a,0,m);c[n]=0;k[n]=0;c[n+1]=0;k[n+1]=0;c[n+2]=0;k[n+2]=0;usb(a+5,0,n);c[p]=0;PV(a+10,0,p);d4(r);wsb(c[j+31],r);l=0;m=a+5;n=a+5;p=a+5;h=a+5;i=a+5;f=a+5;for(g=a+5;(l|0)<(b4(r)|0);){e=c[K3(r,l)];Orb(s,j,e);PW(a,s);e=c[e+2];if(0!=(e|0)){w=t=-1;for(x=e;!(0>(c[x+5]|0)&&(y=e1(m),c[z]=0,k[z]=0,c[z+1]=0,k[z+1]=0,c[z+2]=0,k[z+2]=0,xsb(n,z),c[A]=0,k[A]=0,c[A+1]=0,k[A+1]=0,c[A+2]=0,k[A+2]=0,xsb(p,A),C=b1(h,y),B=b1(i,y+1),c[x+5]=y,c[c[x+2]+5]=y+1,c[C+1]=1,c[B+1]=-1,c[C+2]=wsb(c[x+3],r),c[B+2]=l),0<=(w|0)?c[b1(f,c[x+5])]=w-c[x+5]:t=c[x+5],w=c[x+5],x=c[x],(x|0)==(e|0));){}c[b1(g,t)]=w-t}l+=1}s=0;for(m=a+10;(s|0)<(l|0);){a=c[c[K3(r,s)]+2];n=0!=(a|0);a:do{if(n){for(z=a;;){p=0<=(c[z+5]|0);b:do{if(p){p_(m,z+5);for(A=z;;){if(c[A+5]=-1,A=c[c[A+2]+1],(A|0)==(z|0)){break b}}}}while(0);z=c[z];if((z|0)==(a|0)){break a}}}}while(0);s+=1}l=d;$11=1;l4(r)}Bsb(j)}b=j;return l}ddb.X=1;function lsb(a,d){$1=a;return 0!=(d|0)?d<<1:1}lsb.X=1;function Csb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Csb.X=1;function fsb(a,d){$1=a;return 0!=(d|0)?d<<1:1}fsb.X=1;function Dsb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Dsb.X=1;function Lrb(a,d,e){$1=a;a=d;d=(a|0)<(e|0);a:do{if(d){for(;;){if(a+=1,(a|0)>=(e|0)){break a}}}}while(0)}Lrb.X=1;function d4(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}d4.X=1;function Esb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Esb.X=1;function jsb(a){return c[a+2]}jsb.X=1;function Fsb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+d;0!=(i|0)&&(c[i]=c[c[h]+d]);d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Fsb.X=1;function hsb(a){var d,e;d=c[a];e=0;var f=a+1,g=(e|0)<(c[f]|0);a:do{if(g){for(var h=a+1;;){if(c[d]=(e+1|0)<(c[h]|0)?d+15:0,e+=1,d+=15,(e|0)>=(c[f]|0)){break a}}}}while(0);return c[a]}hsb.X=1;function Wrb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Wrb.X=1;function esb(a){return c[a+2]}esb.X=1;function Y3(a){return c[a+1]}Y3.X=1;function Crb(a){c[a+4]=1;c[a+3]=0;c[a+1]=0;c[a+2]=0}Crb.X=1;function ysb(a,d){return 0!=(d|0)?Gsb(a,d,0):0}ysb.X=1;function zsb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=f+3*d;if(0!=(i|0)){var j=c[h]+3*d;c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}zsb.X=1;function Gsb(a,d,e){$1=a;$3=e;return Ue(12*d,16)}Gsb.X=1;function bsb(a,d){var e=b;b+=1;var f;d4(a);f=b4(d);c[e]=0;a4(a,f,e);Esb(d,0,f,c[a+3]);b=e}bsb.X=1;function ksb(a,d){var e;(jsb(a)|0)<(d|0)&&(e=Hsb(a,d),Fsb(a,0,j4(a),e),Csb(a,0,j4(a)),Isb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}ksb.X=1;function Hsb(a,d){return 0!=(d|0)?Jsb(a,d,0):0}Hsb.X=1;function Isb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Ksb(a,c[a+3]),c[a+3]=0)}Isb.X=1;function Ksb(a,d){$1=a;yh(d)}Ksb.X=1;function Jsb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}Jsb.X=1;function isb(a){c[a]=0;c[a+1]=0;c[a+2]=0}isb.X=1;function gsb(a,d){c[a+1]=d;c[a+2]=0;c[a]=Ue(60*d,16)}gsb.X=1;function dsb(a){Csb(a,0,j4(a));Isb(a);Wrb(a)}dsb.X=1;function Hrb(a,d){var e;(esb(a)|0)<(d|0)&&(e=Lsb(a,d),Esb(a,0,b4(a),e),Dsb(a,0,b4(a)),Msb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}Hrb.X=1;function Lsb(a,d){return 0!=(d|0)?Nsb(a,d,0):0}Lsb.X=1;function Msb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Osb(a,c[a+3]),c[a+3]=0)}Msb.X=1;function Osb(a,d){$1=a;yh(d)}Osb.X=1;function Nsb(a,d,e){$1=a;$3=e;return Ue(d<<2,16)}Nsb.X=1;function l4(a){Dsb(a,0,b4(a));Msb(a);d4(a)}l4.X=1;function Mrb(a){0!=(c[a+3]|0)&&(c[a+4]&1&&Psb(a,c[a+3]),c[a+3]=0)}Mrb.X=1;function Psb(a,d){$1=a;yh(d)}Psb.X=1;function A3(a,d){return(d>>>0)*(a>>>0)}A3.X=1;function B3(a){return(Ma=(0<=a?a:a+0x10000000000000000)/4294967296,Ma-Ma%1)&4294967295}B3.X=1;function arb(a){c[a]*=4294967296}arb.X=1;function Jrb(a){var d,e;d=c[a];e=0;var f=a+1,g=(e|0)<(c[f]|0);a:do{if(g){for(var h=a+1;;){if(c[d]=(e+1|0)<(c[h]|0)?d+18:0,e+=1,d+=18,(e|0)>=(c[f]|0)){break a}}}}while(0);return c[a]}Jrb.X=1;function Qsb(a){return c[a+2]}Qsb.X=1;function irb(a){var d,e;d=c[a];e=0;var f=a+1,g=(e|0)<(c[f]|0);a:do{if(g){for(var h=a+1;;){if(c[d]=(e+1|0)<(c[h]|0)?d+6:0,e+=1,d+=6,(e|0)>=(c[f]|0)){break a}}}}while(0);return c[a]}irb.X=1;function E3(a){var d=b,e=a,a=b;b+=2;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];a=c[a];b=d;return a}E3.X=1;function F3(a){var d=b,e=a,a=b;b+=2;c[a]=c[e];k[a]=k[e];c[a+1]=c[e+1];k[a+1]=k[e+1];a=c[a+1];b=d;return a}F3.X=1;function drb(a){c[a+1]=c[a];c[a]=0}drb.X=1;function erb(a,d){var e=c[a+1],f=c[d+1];(0<=e?e:e+0x10000000000000000)<(0<=f?f:f+0x10000000000000000)?e=1:(e=c[a+1],f=c[d+1],(0x7ffffffffffffc00<=e?e-0x10000000000000000:e)!=(0x7ffffffffffffc00<=f?f-0x10000000000000000:f)?e=0:(e=c[a],f=c[d],e=(0<=e?e:e+0x10000000000000000)<(0<=f?f:f+0x10000000000000000)));return e}erb.X=1;function frb(a){var d=c[a]+1;c[a]=d;if(0==(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)){d=a+1,c[d]+=1}return a}frb.X=1;function G3(a,d){c[a]=d;c[a+1]=0}G3.X=1;function Krb(a){c[a]=0;k[a]=0;c[a+1]=0;k[a+1]=0;c[a+2]=0;k[a+2]=0;c[a+3]=0;k[a+3]=0;c[a+4]=0;k[a+4]=0;c[a+17]=-1}Krb.X=1;function Irb(a,d){c[a+1]=d;c[a+2]=0;c[a]=Ue(104*d,16)}Irb.X=1;function Z3(a,d,e,f){var g=b;b+=4;var h,i;h=e;i=f;var j=(((f+e|0)/2&-1)<<2)+c[a+3];c[g]=c[j];k[g]=k[j];c[g+1]=c[j+1];k[g+1]=k[j+1];c[g+2]=c[j+2];k[g+2]=k[j+2];c[g+3]=c[j+3];k[g+3]=k[j+3];for(var j=a+3,l=a+3;;){if(v[d]((h<<2)+c[j],g)){h+=1}else{var m=v[d](g,(i<<2)+c[l]);a:do{if(m){for(;;){if(i-=1,!v[d](g,(i<<2)+c[l])){break a}}}}while(0);(h|0)<=(i|0)&&(Rsb(a,h,i),h+=1,i-=1);if(!((h|0)<=(i|0))){break}}}(e|0)<(i|0)&&Z3(a,d,e,i);(h|0)<(f|0)&&Z3(a,d,h,f);b=g}Z3.X=1;function Rsb(a,d,e){var f=b;b+=4;var g=(d<<2)+c[a+3];c[f]=c[g];k[f]=k[g];c[f+1]=c[g+1];k[f+1]=k[g+1];c[f+2]=c[g+2];k[f+2]=k[g+2];c[f+3]=c[g+3];k[f+3]=k[g+3];d=(d<<2)+c[a+3];g=(e<<2)+c[a+3];c[d]=c[g];k[d]=k[g];c[d+1]=c[g+1];k[d+1]=k[g+1];c[d+2]=c[g+2];k[d+2]=k[g+2];c[d+3]=c[g+3];k[d+3]=k[g+3];a=(e<<2)+c[a+3];c[a]=c[f];k[a]=k[f];c[a+1]=c[f+1];k[a+1]=k[f+1];c[a+2]=c[f+2];k[a+2]=k[f+2];c[a+3]=c[f+3];k[a+3]=k[f+3];b=f}Rsb.X=1;function zrb(a,d){var e;(Qsb(a)|0)<(d|0)&&(e=Ssb(a,d),Tsb(a,0,Y3(a),e),Lrb(a,0,Y3(a)),Mrb(a),c[a+4]=1,c[a+3]=e,c[a+2]=d)}zrb.X=1;function Ssb(a,d){return 0!=(d|0)?Usb(a,d,0):0}Ssb.X=1;function Tsb(a,d,e,f){var g=(d|0)<(e|0);a:do{if(g){for(var h=a+3;;){var i=(d<<2)+f;if(0!=(i|0)){var j=(d<<2)+c[h];c[i]=c[j];k[i]=k[j];c[i+1]=c[j+1];k[i+1]=k[j+1];c[i+2]=c[j+2];k[i+2]=k[j+2];c[i+3]=c[j+3];k[i+3]=k[j+3]}d+=1;if((d|0)>=(e|0)){break a}}}}while(0)}Tsb.X=1;function Usb(a,d,e){$1=a;$3=e;return Ue(d<<4,16)}Usb.X=1;function hrb(a,d){c[a+1]=d;c[a+2]=0;c[a]=Ue(24*d,16)}hrb.X=1;function Vsb(a){var d,e=0!=(c[a]|0);a:do{if(e){for(var f=a,g=a;;){if(d=c[f],c[g]=c[d+2],Wsb(d),yh(d),0==(c[a]|0)){break a}}}}while(0)}Vsb.X=1;function Wsb(a){yh(c[a])}Wsb.X=1;function Xsb(a){var d,e=0!=(c[a]|0);a:do{if(e){for(var f=a,g=a;;){if(d=c[f],c[g]=c[d+2],Ysb(d),yh(d),0==(c[a]|0)){break a}}}}while(0)}Xsb.X=1;function Ysb(a){yh(c[a])}Ysb.X=1;function Zsb(a){var d,e=0!=(c[a]|0);a:do{if(e){for(var f=a,g=a;;){if(d=c[f],c[g]=c[d+2],$sb(d),yh(d),0==(c[a]|0)){break a}}}}while(0)}Zsb.X=1;function $sb(a){yh(c[a])}$sb.X=1;function Bsb(a){l4(a+20);Zsb(a+16);Xsb(a+12);Vsb(a+8)}Bsb.X=1;function atb(a){c[a]=0;c[a+1]=0;c[a+2]=0;c[a+3]=256}atb.X=1;function btb(a){c[a]=0;c[a+1]=0;c[a+2]=0;c[a+3]=256}btb.X=1;function ctb(a){c[a]=0;c[a+1]=0;c[a+2]=0;c[a+3]=256}ctb.X=1;function g4(a,d){c[a]=d;c[a+1]=0<=(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)?0:-1}g4.X=1;function y3(a,d,e){c[a]=d;c[a+1]=e}y3.X=1;function O3(a,d,e,f){c[a]=d;c[a+1]=e;c[a+2]=f;c[a+3]=-1}O3.X=1;function srb(a,d,e,f){c[a]=d;c[a+1]=e;c[a+2]=f}srb.X=1;function U3(a,d,e){if(0<(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)){c[a+2]=1,c[a]=d}else{var f=a+2;0>(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)?(c[f]=-1,c[a]=-d):(c[f]=0,c[a]=0)}0<(0x7ffffffffffffc00<=e?e-0x10000000000000000:e)?c[a+1]=e:0>(0x7ffffffffffffc00<=e?e-0x10000000000000000:e)?(c[a+2]=-c[a+2],c[a+1]=-e):c[a+1]=0}U3.X=1;function Asb(a){ctb(a+8);btb(a+12);atb(a+16);d4(a+20)}Asb.X=1;function tsb(a,d,e,f,g){var h=b,i=d,d=b;b+=2;c[d]=c[i];k[d]=k[i];c[d+1]=c[i+1];k[d+1]=k[i+1];i=e;e=b;b+=2;c[e]=c[i];k[e]=k[i];c[e+1]=c[i+1];k[e+1]=k[i+1];i=f;f=b;b+=2;c[f]=c[i];k[f]=k[i];c[f+1]=c[i+1];k[f+1]=k[i+1];i=g;g=b;b+=2;c[g]=c[i];k[g]=k[i];c[g+1]=c[i+1];k[g+1]=k[i+1];c[a]=c[d];k[a]=k[d];c[a+1]=c[d+1];k[a+1]=k[d+1];d=a+2;c[d]=c[e];k[d]=k[e];c[d+1]=c[e+1];k[d+1]=k[e+1];e=a+4;c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1];a+=6;c[a]=c[g];k[a]=k[g];c[a+1]=c[g+1];k[a+1]=k[g+1];b=h}tsb.X=1;function ssb(a,d,e){var f=b;b+=4;var g=f+2;c[a+4]=h4(d);0<=(c[a+4]|0)?(c[a]=c[d],k[a]=k[d],c[a+1]=c[d+1],k[a+1]=k[d+1]):(w3(f,d),c[a]=c[f],k[a]=k[f],c[a+1]=c[f+1],k[a+1]=k[f+1]);$dsign=d=h4(e);0<=(d|0)?(g=a+2,c[g]=c[e],k[g]=k[e],c[g+1]=c[e+1],k[g+1]=k[e+1]):(c[a+4]=-c[a+4],w3(g,e),e=a+2,c[e]=c[g],k[e]=k[g],c[e+1]=c[g+1],k[e+1]=k[g+1]);c[a+5]=0;b=f}ssb.X=1;function rsb(a,d){var e=b;b+=8;var f=e+2,g=e+4,h=e+6;if(0<(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)){c[a+4]=1,g4(e,d),c[a]=c[e],k[a]=k[e],c[a+1]=c[e+1],k[a+1]=k[e+1]}else{var i=a+4;0>(0x7ffffffffffffc00<=d?d-0x10000000000000000:d)?(c[i]=-1,g4(f,-d),c[a]=c[f],k[a]=k[f],c[a+1]=c[f+1],k[a+1]=k[f+1]):(c[i]=0,G3(g,0),c[a]=c[g],k[a]=k[g],c[a+1]=c[g+1],k[a+1]=k[g+1])}G3(h,1);f=a+2;c[f]=c[h];k[f]=k[h];c[f+1]=c[h+1];k[f+1]=k[h+1];c[a+5]=1;b=e}rsb.X=1;function xrb(a,d){dtb(d);c[d]=c[a+2];c[a+2]=d}xrb.X=1;function dtb(a){c[a]=0;k[a]=0;c[a+1]=0;k[a+1]=0;c[a+2]=0;k[a+2]=0;c[a+3]=0;k[a+3]=0;c[a+4]=0;k[a+4]=0}dtb.X=1;function mrb(a){c[a]=0;k[a]=0;c[a+1]=0;k[a+1]=0;c[a+2]=0;k[a+2]=0;c[a+3]=0;k[a+3]=0}mrb.X=1;function jkb(){c[p4]+=1}jkb.X=1;function etb(a){return c[a+6]}etb.X=1;function ftb(a){return c[a+5]}ftb.X=1;function gtb(){htb(q4);Y2(26,q4)}gtb.X=1;function htb(a){c[a]=xb(8);itb(a)}htb.X=1;function itb(a){jtb(c[a])}itb.X=1;function ktb(a){a=c[a];0!=(a|0)&&xe(a)}ktb.X=1;function ltb(a,d){c[a]=xb(8);var e=c[a],f=c[d];c[e]=c[f];k[e]=k[f];c[e+1]=c[f+1];k[e+1]=k[f+1]}ltb.X=1;function mtb(a){var d=b;b+=2;jtb(d);a=1e6*(c[d]-c[c[a]])+c[d+1]+ -c[c[a]+1];b=d;return a}mtb.X=1;function r4(a,d,e){c[a]=d;d=a+1;c[d]=0;k[d]=0;c[d+1]=0;k[d+1]=0;c[d+2]=0;k[d+2]=0;c[d+3]=0;k[d+3]=0;c[a+5]=e;c[a+6]=0;c[a+7]=0;s4(a)}r4.X=1;function s4(a){c[a+1]=0;k[a+2]=0;0!=(c[a+6]|0)&&s4(c[a+6]);0!=(c[a+7]|0)&&s4(c[a+7])}s4.X=1;function t4(a){var d=c[a+6];0!=(d|0)&&(t4(d),xe(d));a=c[a+7];0!=(a|0)&&(t4(a),xe(a))}t4.X=1;function ntb(a,d){var e,f,g=c[a+6];for(f=g;;){if(0==(g|0)){e=xb(32);r4(e,d,a);c[e+7]=c[a+6];c[a+6]=e;break}g=f;if((c[f]|0)==(d|0)){e=g;break}f=g=c[g+7]}return e}ntb.X=1;function otb(a){var d=a+1;c[d]+=1;var d=a+4,e=c[d];c[d]=e+1;0==(e|0)&&u4(a+3)}otb.X=1;function u4(a){c[a]=mtb(q4)}u4.X=1;function ptb(a){var d=b;b+=1;var e=a+4,f=c[e]-1;c[e]=f;0==(f|0)&&0!=(c[a+1]|0)&&(u4(d),c[d]-=c[a+3],e=a+2,k[e]+=(c[d]>>>0)/1e3);a=0==(c[a+4]|0);b=d;return a}ptb.X=1;function qtb(a,d){c[a]=d;c[a+1]=etb(c[a])}qtb.X=1;function rtb(){r4(v4,D.yf,0);Y2(28,v4)}rtb.X=1;function bVa(a){(a|0)!=(c[c[w4]]|0)&&(c[w4]=ntb(c[w4],a));otb(c[w4])}bVa.X=1;function aVa(){ptb(c[w4])&&(c[w4]=ftb(c[w4]))}aVa.X=1;function ekb(){itb(q4);s4(v4);otb(v4);c[p4]=0;u4(stb)}ekb.X=1;function ttb(){gtb();rtb()}ttb.X=1;function Wa(a){var d,e,f,g,h,i,j;244>=a>>>0?(a=11>a>>>0?16:a+11&-8,d=a>>>3,f=c[x4]>>>(d>>>0),0!=(f&3|0)?(d+=(f^-1)&1,f=(d<<1)+x4+10,e=c[f+2],g=c[e+2],(f|0)==(g|0)?c[x4]&=1<<d^-1:0!=(1==(g>>>0>=c[x4+4]>>>0&1)|0)?(c[f+2]=g,c[g+3]=f):y4(),c[e+1]=d<<3|3,d=(d<<3)+e+1,c[d]|=1,e+=8,d=41):a>>>0>c[x4+2]>>>0?0!=(f|0)?(e=(-(1<<d<<1)|1<<d<<1)&f<<d,e=(-e&e)-1,d=f=e>>>12&16,e>>>=f>>>0,f=e>>>5&8,e>>>=f>>>0,g=e>>>2&4,d=g+(f+d),e>>>=g>>>0,f=e>>>1&2,d=f+d,e>>>=f>>>0,f=e>>>1&1,d=f+d,e>>>=f>>>0,f=e+d,d=(f<<1)+x4+10,e=c[d+2],g=c[e+2],(d|0)==(g|0)?c[x4]&=1<<f^-1:0!=(1==(g>>>0>=c[x4+4]>>>0&1)|0)?(c[d+2]=g,c[g+3]=d):y4(),f=(f<<3)-a,c[e+1]=a|3,d=e+a,c[d+1]=f|1,c[d+f]=f,h=c[x4+2],0!=(h|0)&&(g=c[x4+5],h>>>=3,j=i=(h<<1)+x4+10,0!=(1<<h&c[x4]|0)?0!=(1==(c[i+2]>>>0>=c[x4+4]>>>0&1)|0)?j=c[i+2]:y4():c[x4]|=1<<h,c[i+2]=g,c[j+3]=g,c[g+2]=j,c[g+3]=i),c[x4+2]=f,c[x4+5]=d,e+=8,d=41):0==(c[x4+1]|0)?d=33:(e=d=utb(a),d=0!=(d|0)?41:33):d=33):4294967232<=a>>>0?(a=-1,d=33):(a=a+11&-8,0==(c[x4+1]|0)?d=33:(e=d=vtb(a),d=0!=(d|0)?41:33));33==d&&(a>>>0<=c[x4+2]>>>0?(d=c[x4+2]-a,e=c[x4+5],16<=d>>>0?(f=e+a,c[x4+5]=f,c[x4+2]=d,c[f+1]=d|1,c[f+d]=d,c[e+1]=a|3):(a=c[x4+2],c[x4+2]=0,c[x4+5]=0,c[e+1]=a|3,a=e+(a+1),c[a]|=1),e+=8):(e=a,a>>>0<c[x4+3]>>>0?(d=c[x4+3]-e,c[x4+3]=d,e=c[x4+6],f=e+a,c[x4+6]=f,c[f+1]=d|1,c[e+1]=a|3,e+=8):e=wtb(e)));return e}Module._malloc=Wa;Wa.X=1;function utb(a){var d,e,f,g,h,i,j,l,m;d=x4;f=(-c[d+1]&c[d+1])-1;g=e=f>>>12&16;f>>>=e>>>0;e=f>>>5&8;f>>>=e>>>0;h=f>>>2&4;g=h+(e+g);f>>>=h>>>0;e=f>>>1&2;g=e+g;f>>>=e>>>0;e=f>>>1&1;g=e+g;f>>>=e>>>0;e=f=c[f+(g+(d+76))];for(g=(c[e+1]&-8)-a;;){h=e+4;e=h=0!=(c[e+4]|0)?c[h]:c[h+1];if(0==(h|0)){break}h=(c[e+1]&-8)-a;h>>>0<g>>>0&&(g=h,f=e)}h=0!=(1==(f>>>0>=c[d+4]>>>0&1)|0);do{if(h&&(e=f+a,0!=(1==(f>>>0<e>>>0&1)|0))){i=c[f+6];m=(c[f+3]|0)!=(f|0);var n=f;do{if(m){j=c[n+2],h=c[f+3],0!=(1==(j>>>0>=c[d+4]>>>0&1)|0)?(c[j+3]=h,c[h+2]=j):y4()}else{j=h=n+5;h=l=c[h];if(0!=(l|0)){__label__=17}else{if(j=h=f+4,h=l=c[h],0==(l|0)){break}}for(;;){var p=h+5;l=p;if(0==(c[p]|0)&&(l=p=h+4,0==(c[p]|0))){break}j=h=l;h=c[h]}0!=(1==(j>>>0>=c[d+4]>>>0&1)|0)?c[j]=0:y4()}}while(0);0!=(i|0)&&(m=d+c[f+7]+76,(f|0)==(c[m]|0)?(n=h,c[m]=n,0==(n|0)&&(m=d+1,c[m]&=1<<c[f+7]^-1)):0!=(1==(i>>>0>=c[d+4]>>>0&1)|0)?(m=h,n=i+4,(c[i+4]|0)==(f|0)?c[n]=m:c[n+1]=m):y4(),0!=(h|0)&&(0!=(1==(h>>>0>=c[d+4]>>>0&1)|0)?(c[h+6]=i,i=m=c[f+4],0!=(m|0)&&(0!=(1==(i>>>0>=c[d+4]>>>0&1)|0)?(c[h+4]=i,c[i+6]=h):y4()),i=m=c[f+5],0!=(m|0)&&(0!=(1==(i>>>0>=c[d+4]>>>0&1)|0)?(c[h+5]=i,c[i+6]=h):y4())):y4()));16>g>>>0?(c[f+1]=a+g|3,d=a+(g+(f+1)),c[d]|=1):(c[f+1]=a|3,c[e+1]=g|1,c[e+g]=g,h=c[d+2],0!=(h|0)&&(a=c[d+5],h>>>=3,m=i=(h<<1)+d+10,0!=(1<<h&c[d]|0)?0!=(1==(c[i+2]>>>0>=c[d+4]>>>0&1)|0)?m=c[i+2]:y4():(n=d,c[n]|=1<<h),c[i+2]=a,c[m+3]=a,c[a+2]=m,c[a+3]=i),c[d+2]=g,c[d+5]=e);return f+8}}while(0);y4();return na}utb.X=1;function vtb(a){var d,e,f,g,h,i,j,l,m,n,p,r,s;f=x4;g=0;h=-a;i=a>>>8;0==(i|0)?j=0:65535<i>>>0?j=31:(j=i,i=j-256>>>16&8,s=j<<i,j=s-4096>>>16&4,i+=j,j=s<<j,s=j-16384>>>16&2,j=-(s+i)+(j<<s>>>15)+14,j=(j<<1)+(a>>>(j+7>>>0)&1));i=s=c[f+(j+76)];s=0!=(s|0);do{if(s){d=a<<(31==(j|0)?0:-(j>>>1)+25);for(l=0;;){n=(c[i+1]&-8)-a;if(n>>>0<h>>>0&&(g=m=i,h=n,0==(n|0))){p=m;break}m=c[i+5];i=n=c[i+(d>>>31&1)+4];0!=(m|0)?(n=i,(m|0)==(n|0)?m=n:(l=m,m=i)):m=n;if(0==(m|0)){i=p=l;break}d<<=1}d=0==(p|0)?20:23}else{d=20}}while(0);20==d&&(0!=(g|0)?d=23:(p=(-(1<<j<<1)|1<<j<<1)&c[f+1],0==(p|0)?d=23:(r=(-p&p)-1,i=p=r>>>12&16,r>>>=p>>>0,p=r>>>5&8,r>>>=p>>>0,j=r>>>2&4,i=j+(p+i),r>>>=j>>>0,p=r>>>1&2,i=p+i,r>>>=p>>>0,p=r>>>1&1,i=p+i,r>>>=p>>>0,i=r=c[r+(i+(f+76))],d=24)));23==d&&(r=i);r=0!=(r|0);a:do{if(r){for(;;){if(p=(c[i+1]&-8)-a,p>>>0<h>>>0&&(h=p,g=i),p=i+4,i=p=0!=(c[i+4]|0)?c[p]:c[p+1],0==(p|0)){break a}}}}while(0);i=0!=(g|0);a:do{if(i){if(h>>>0<c[f+2]-a>>>0){p=0!=(1==(g>>>0>=c[f+4]>>>0&1)|0);do{if(p&&(r=g+a,0!=(1==(g>>>0<r>>>0&1)|0))){i=c[g+6];p=(c[g+3]|0)!=(g|0);j=g;do{if(p){s=c[j+2],e=c[g+3],0!=(1==(s>>>0>=c[f+4]>>>0&1)|0)?(c[s+3]=e,c[e+2]=s):y4()}else{s=e=j+5;e=d=c[e];if(0==(d|0)&&(s=e=g+4,e=d=c[e],0==(d|0))){break}for(;;){d=l=e+5;if(0==(c[l]|0)&&(d=l=e+4,0==(c[l]|0))){break}s=e=d;e=c[e]}0!=(1==(s>>>0>=c[f+4]>>>0&1)|0)?c[s]=0:y4()}}while(0);0!=(i|0)&&(p=f+c[g+7]+76,(g|0)==(c[p]|0)?(j=e,c[p]=j,0==(j|0)&&(p=f+1,c[p]&=1<<c[g+7]^-1)):0!=(1==(i>>>0>=c[f+4]>>>0&1)|0)?(p=e,j=i+4,(c[i+4]|0)==(g|0)?c[j]=p:c[j+1]=p):y4(),0!=(e|0)&&(0!=(1==(e>>>0>=c[f+4]>>>0&1)|0)?(c[e+6]=i,i=p=c[g+4],0!=(p|0)&&(0!=(1==(i>>>0>=c[f+4]>>>0&1)|0)?(c[e+4]=i,c[i+6]=e):y4()),i=p=c[g+5],0!=(p|0)&&(0!=(1==(i>>>0>=c[f+4]>>>0&1)|0)?(c[e+5]=i,c[i+6]=e):y4())):y4()));e=16>h>>>0;b:do{if(e){c[g+1]=a+h|3,i=a+(h+(g+1)),c[i]|=1}else{if(c[g+1]=a|3,c[r+1]=h|1,c[r+h]=h,32>h>>>3>>>0){i=h>>>3,j=p=(i<<1)+f+10,0!=(1<<i&c[f]|0)?0!=(1==(c[p+2]>>>0>=c[f+4]>>>0&1)|0)?j=c[p+2]:y4():(s=f,c[s]|=1<<i),c[p+2]=r,c[j+3]=r,c[r+2]=j,c[r+3]=p}else{if(i=r,p=h>>>8,0==(p|0)?j=0:65535<p>>>0?j=31:(j=p-256>>>16&8,p=s=p<<j,s=s-4096>>>16&4,j+=s,p=s=p<<s,s=d=s-16384>>>16&2,j=d+j,s=-j+(p<<s>>>15)+14,j=(s<<1)+(h>>>(s+7>>>0)&1)),p=f+(j+76),c[i+7]=j,c[i+5]=0,c[i+4]=0,0!=(1<<j&c[f+1]|0)){p=c[p];for(j=h<<(31==(j|0)?0:-(j>>>1)+25);;){if((c[p+1]&-8|0)!=(h|0)){if(s=p+(j>>>31&1)+4,j<<=1,d=s,0!=(c[s]|0)){p=c[d]}else{if(0!=(1==(d>>>0>=c[f+4]>>>0&1)|0)){c[s]=i;c[i+6]=p;a=i;c[i+3]=a;c[i+2]=a;break b}y4()}}else{s=c[p+2];if(0!=(1==((p>>>0>=c[f+4]>>>0?s>>>0>=c[f+4]>>>0:0)&1)|0)){a=i;c[s+3]=a;c[p+2]=a;c[i+2]=s;c[i+3]=p;c[i+6]=0;break b}y4()}}}else{s=f+1,c[s]|=1<<j,c[p]=i,c[i+6]=p,p=i,c[i+3]=p,c[i+2]=p}}}}while(0);e=g+8;d=100;break a}}while(0);y4()}else{d=99}}else{d=99}}while(0);99==d&&(e=0);return e}vtb.X=1;function wtb(a){var d,e,f,g,h,i,j,l,m,n;f=x4;g=-1;h=0;0==(c[z4]|0)&&xtb();l=0!=(c[f+110]&4|0);a:do{if(!l){i=-1;if(0==(c[f+6]|0)){j=0,d=8}else{var p=A4(f,c[f+6]);d=p;j=0;if(0==(p|0)){d=8}else{if(j=(c[z4+2]-1^-1)&a+ -c[f+3]+c[z4+2]+47,2147483647>j>>>0){if(i=p=B4(j),(p|0)!=(c[d]+c[d+1]|0)){d=18}else{var r=i;g=r;h=j;d=19}}else{d=18}}}8==d&&(d=p=B4(0),-1==(p|0)?d=18:(j=(c[z4+2]-1^-1)&a+c[z4+2]+47,0==(c[z4+1]-1&d|0)?p=j:j=p=(d-1+c[z4+1]&(c[z4+1]-1^-1))-d+j,2147483647>p>>>0?(i=p=B4(j),(p|0)!=(d|0)?d=18:(g=r=d,h=j,d=19)):d=18));18==d&&(r=g);if(-1==(r|0)){p=-1!=(i|0);b:do{if(p){var s=2147483647>j>>>0;do{if(s&&j>>>0<a+48>>>0&&(d=(c[z4+2]-1^-1)&a+ -j+c[z4+2]+47,2147483647>d>>>0)){if(-1==(B4(d)|0)){B4(-j);break b}j+=d}}while(0);if(-1!=(i|0)){g=l=i;h=j;m=l;d=31;break a}}}while(0);j=f+110;c[j]|=4}}d=30}while(0);30==d&&(m=g);if(-1==(m|0)){if(j=(c[z4+2]-1^-1)&a+c[z4+2]+47,2147483647>j>>>0){if(j=B4(j),l=B4(0),-1==(j|0)){d=38}else{if(-1==(l|0)){d=38}else{if(j>>>0<l>>>0){if(l-=j,l>>>0>a+40>>>0){g=j;h=l;var t=j;d=39}else{d=38}}else{d=38}}}}else{d=38}}else{d=38}38==d&&(t=g);t=-1!=(t|0);a:do{if(t){j=f+108;l=c[j]+h;c[j]=l;l>>>0>c[f+109]>>>0&&(c[f+109]=c[f+108]);j=0!=(c[f+6]|0);l=f;b:do{if(j){for(m=i=l+111;;){if(0==(i|0)){n=m;break}i=m;if((g|0)==(c[m]+c[m+1]|0)){n=i;break}m=i=c[i+2]}i=0!=(n|0);do{if(i&&0==(c[m+3]&8|0)&&c[f+6]>>>0>=c[m]>>>0&&c[f+6]>>>0<c[m]+c[m+1]>>>0){j=m+1;c[j]+=h;C4(f,c[f+6],h+c[f+3]);break b}}while(0);g>>>0<c[f+4]>>>0&&(c[f+4]=g);for(r=m=i=f+111;;){i=m;if(0==(r|0)){var w=i;break}r=m;if((c[i]|0)==(g+h|0)){w=r;break}r=m=i=c[r+2]}i=0!=(w|0);do{if(i&&0==(c[m+3]&8|0)){n=c[m];c[m]=g;w=m+1;c[w]+=h;e=ytb(f,g,n,a);d=74;break a}}while(0);ztb(f,g,h,0)}else{d=0==(c[l+4]|0)?45:g>>>0<c[f+4]>>>0?45:46,45==d&&(c[f+4]=g),c[f+111]=g,c[f+112]=h,c[f+114]=0,c[f+9]=c[z4],c[f+8]=-1,Atb(f),m=f,(f|0)==(x4|0)?C4(m,g,h-40):(m=m-8+(c[f-8+1]&-8),C4(f,m,g+h-40+ -m))}}while(0);a>>>0<c[f+3]>>>0?(j=f+3,e=c[j]-a,c[j]=e,j=c[f+6],l=j+a,c[f+6]=l,c[l+1]=e|1,c[j+1]=a|3,e=j+8,d=74):d=73}else{d=73}}while(0);73==d&&(c[D4]=12,e=0);return e}wtb.X=1;function r3(a){var d,e,f,g,h,i,j,l,m,n,p,r,s=0!=(a|0);a:do{if(s){e=a-8;n=0!=(1==((e>>>0>=c[x4+4]>>>0?1!=(c[e+1]&3|0):0)&1)|0);b:do{if(n){f=c[e+1]&-8;g=e+f;r=0!=(c[e+1]&1|0);do{if(!r){d=c[e];if(0==(c[e+1]&3|0)){break a}h=e+ -d;f+=d;e=h;if(0==(1==(h>>>0>=c[x4+4]>>>0&1)|0)){break b}if((e|0)==(c[x4+5]|0)){if(3!=(c[g+1]&3|0)){break}c[x4+2]=f;g+=1;c[g]&=-2;c[e+1]=f|1;c[e+f]=f;break a}h=e;if(32>d>>>3>>>0){if(h=c[h+2],i=c[e+3],j=d>>>3,(h|0)==(i|0)){c[x4]&=1<<j^-1}else{if((h|0)==((j<<1)+x4+10|0)){d=16}else{if(h>>>0>=c[x4+4]>>>0){d=16}else{var t=0;d=18}}16==d&&(t=(i|0)==((j<<1)+x4+10|0)?1:i>>>0>=c[x4+4]>>>0);0!=(1==(t&1)|0)?(c[h+3]=i,c[i+2]=h):y4()}}else{d=h;i=c[d+6];j=(c[d+3]|0)!=(d|0);var w=d;do{if(j){l=c[w+2],h=c[d+3],0!=(1==(l>>>0>=c[x4+4]>>>0&1)|0)?(c[l+3]=h,c[h+2]=l):y4()}else{l=h=w+5;h=m=c[h];if(0==(m|0)&&(l=h=d+4,h=m=c[h],0==(m|0))){break}for(;;){var x=h+5;m=x;if(0==(c[x]|0)&&(m=x=h+4,0==(c[x]|0))){break}l=h=m;h=c[h]}0!=(1==(l>>>0>=c[x4+4]>>>0&1)|0)?c[l]=0:y4()}}while(0);0!=(i|0)&&(j=x4+c[d+7]+76,(d|0)==(c[j]|0)?(w=h,c[j]=w,0==(w|0)&&(c[x4+1]&=1<<c[d+7]^-1)):0!=(1==(i>>>0>=c[x4+4]>>>0&1)|0)?(j=h,w=i+4,(c[i+4]|0)==(d|0)?c[w]=j:c[w+1]=j):y4(),0!=(h|0)&&(0!=(1==(h>>>0>=c[x4+4]>>>0&1)|0)?(c[h+6]=i,i=j=c[d+4],0!=(j|0)&&(0!=(1==(i>>>0>=c[x4+4]>>>0&1)|0)?(c[h+4]=i,c[i+6]=h):y4()),d=i=c[d+5],0!=(i|0)&&(0!=(1==(d>>>0>=c[x4+4]>>>0&1)|0)?(c[h+5]=d,c[d+6]=h):y4())):y4()))}}}while(0);if(0!=(1==((e>>>0<g>>>0?0!=(c[g+1]&1|0):0)&1)|0)){a=0!=(c[g+1]&2|0);s=g;do{if(a){n=s+1,c[n]&=-2,c[e+1]=f|1,c[e+f]=f}else{if((s|0)==(c[x4+6]|0)){f=c[x4+3]+f;c[x4+3]=f;c[x4+6]=e;c[e+1]=f|1;(e|0)==(c[x4+5]|0)&&(c[x4+5]=0,c[x4+2]=0);if(f>>>0<=c[x4+7]>>>0){break a}Btb(0);break a}if((g|0)==(c[x4+5]|0)){f=c[x4+2]+f;c[x4+2]=f;c[x4+5]=e;c[e+1]=f|1;c[e+f]=f;break a}n=c[g+1]&-8;f+=n;r=32>n>>>3>>>0;t=g;do{if(r){h=c[t+2],i=c[g+3],j=n>>>3,(h|0)==(i|0)?c[x4]&=1<<j^-1:((h|0)==((j<<1)+x4+10|0)?d=71:h>>>0>=c[x4+4]>>>0?d=71:(p=0,d=73),71==d&&(p=(i|0)==((j<<1)+x4+10|0)?1:i>>>0>=c[x4+4]>>>0),0!=(1==(p&1)|0)?(c[h+3]=i,c[i+2]=h):y4())}else{d=t;i=c[d+6];j=(c[d+3]|0)!=(d|0);w=d;do{if(j){l=c[w+2],h=c[d+3],0!=(1==(l>>>0>=c[x4+4]>>>0&1)|0)?(c[l+3]=h,c[h+2]=l):y4()}else{l=h=w+5;h=m=c[h];if(0==(m|0)&&(l=h=d+4,h=m=c[h],0==(m|0))){break}for(;;){m=x=h+5;if(0==(c[x]|0)&&(m=x=h+4,0==(c[x]|0))){break}l=h=m;h=c[h]}0!=(1==(l>>>0>=c[x4+4]>>>0&1)|0)?c[l]=0:y4()}}while(0);0!=(i|0)&&(j=x4+c[d+7]+76,(d|0)==(c[j]|0)?(w=h,c[j]=w,0==(w|0)&&(c[x4+1]&=1<<c[d+7]^-1)):0!=(1==(i>>>0>=c[x4+4]>>>0&1)|0)?(j=h,w=i+4,(c[i+4]|0)==(d|0)?c[w]=j:c[w+1]=j):y4(),0!=(h|0)&&(0!=(1==(h>>>0>=c[x4+4]>>>0&1)|0)?(c[h+6]=i,i=j=c[d+4],0!=(j|0)&&(0!=(1==(i>>>0>=c[x4+4]>>>0&1)|0)?(c[h+4]=i,c[i+6]=h):y4()),d=i=c[d+5],0!=(i|0)&&(0!=(1==(d>>>0>=c[x4+4]>>>0&1)|0)?(c[h+5]=d,c[d+6]=h):y4())):y4()))}}while(0);c[e+1]=f|1;c[e+f]=f;if((e|0)==(c[x4+5]|0)){c[x4+2]=f;break a}}}while(0);if(32>f>>>3>>>0){f>>>=3;p=g=(f<<1)+x4+10;0!=(1<<f&c[x4]|0)?0!=(1==(c[g+2]>>>0>=c[x4+4]>>>0&1)|0)?p=c[g+2]:y4():c[x4]|=1<<f;c[g+2]=e;c[p+3]=e;c[e+2]=p;c[e+3]=g;break a}g=f>>>8;0==(g|0)?p=0:65535<g>>>0?p=31:(p=g-256>>>16&8,g=a=g<<p,a=a-4096>>>16&4,p+=a,g=a=g<<a,a=s=a-16384>>>16&2,p=s+p,a=-p+(g<<a>>>15)+14,p=(a<<1)+(f>>>(a+7>>>0)&1));g=x4+(p+76);c[e+7]=p;c[e+5]=0;c[e+4]=0;s=0!=(1<<p&c[x4+1]|0);c:do{if(s){a=c[g];for(n=f<<(31==(p|0)?0:-(p>>>1)+25);;){if((c[a+1]&-8|0)!=(f|0)){if(r=a+(n>>>31&1)+4,n<<=1,t=r,0!=(c[r]|0)){a=c[t]}else{if(0!=(1==(t>>>0>=c[x4+4]>>>0&1)|0)){c[r]=e;c[e+6]=a;f=e;c[e+3]=f;c[e+2]=f;break c}y4()}}else{r=c[a+2];if(0!=(1==((a>>>0>=c[x4+4]>>>0?r>>>0>=c[x4+4]>>>0:0)&1)|0)){f=e;c[r+3]=f;c[a+2]=f;c[e+2]=r;c[e+3]=a;c[e+6]=0;break c}y4()}}}else{c[x4+1]|=1<<p,c[g]=e,c[e+6]=g,a=e,c[e+3]=a,c[e+2]=a}}while(0);f=c[x4+8]-1;c[x4+8]=f;if(0!=(f|0)){break a}Ctb();break a}}}while(0);y4()}}while(0)}Module._free=r3;r3.X=1;function Ctb(){var a,d,e;a=x4;d=$released=0;var f=c[a+111+2];e=f;f=0!=(f|0);a:do{if(f){for(;;){$base=c[e];$size=c[e+1];var g=c[e+2];$next=g;d+=1;e=g;if(0==(g|0)){break a}}}}while(0);c[a+8]=4294967295<d>>>0?d:-1}Ctb.X=1;function Btb(a){var d,e,f,g,h;e=x4;f=a;a=0;0==(c[z4]|0)&&xtb();if(4294967232>f>>>0&&0!=(c[e+6]|0)){f+=40;if(c[e+3]>>>0>f>>>0){d=c[z4+2];g=(Math.floor((c[e+3]-1+ -f+d>>>0)/(d>>>0))-1)*d;f=A4(e,c[e+6]);if(0!=(c[f+3]&8|0)){d=14}else{if(2147483647<=g>>>0&&(g=-2147483648-d),d=B4(0),(d|0)!=(c[f]+c[f+1]|0)){d=14}else{if(g=B4(-g),h=B4(0),-1==(g|0)){d=14}else{if(h>>>0<d>>>0){var i=d-h,a=i;d=15}else{d=14}}}}14==d&&(i=a);0!=(i|0)&&(i=f+1,c[i]-=a,i=e+108,c[i]-=a,C4(e,c[e+6],c[e+3]-a))}0==(a|0)&&c[e+3]>>>0>c[e+7]>>>0&&(c[e+7]=-1)}return 0!=(a|0)?1:0}Btb.X=1;function xtb(){var a,d,e=0==(c[z4]|0);a:do{if(e){d=a=Dtb();var f=0!=(d-1&d|0);do{if(!f&&0==(a-1&a|0)){c[z4+2]=d;c[z4+1]=a;c[z4+3]=-1;c[z4+4]=2097152;c[z4+5]=0;c[x4+110]=c[z4+5];a=Math.floor(Date.now()/1e3)^1431655765;a|=8;a&=-8;c[z4]=a;break a}}while(0);y4()}}while(0)}xtb.X=1;function A4(a,d){var e,f;f=a+111;a:for(;;){var g=d>>>0>=c[f]>>>0;do{if(g&&d>>>0<c[f]+c[f+1]>>>0){e=f;break a}}while(0);f=g=c[f+2];if(0==(g|0)){e=0;break}}return e}A4.X=1;function C4(a,d,e){var f;f=0==(d+8&7|0)?0:8-(d+8&7)&7;d+=f;e-=f;c[a+6]=d;c[a+3]=e;c[d+1]=e|1;c[d+(e+1)]=40;c[a+7]=c[z4+4]}C4.X=1;function Atb(a){var d,e;for(d=0;;){var f=e=(d<<1)+a+10;c[e+3]=f;c[e+2]=f;d=e=d+1;if(32<=e>>>0){break}}}Atb.X=1;function ytb(a,d,e,f){var g,h,i,j,l,m,n,p,r,s,t,d=d+(0==(d+8&7|0)?0:8-(d+8&7)&7),e=e+(0==(e+8&7|0)?0:8-(e+8&7)&7);h=d+f;i=e-d-f;c[d+1]=f|3;f=(e|0)==(c[a+6]|0);a:do{if(f){j=a+3,s=c[j]+i,c[j]=s,c[a+6]=h,c[h+1]=s|1}else{if((e|0)==(c[a+5]|0)){j=a+2,s=c[j]+i,j=c[j]=s,c[a+5]=h,c[h+1]=j|1,c[h+j]=j}else{if(1==(c[e+1]&3|0)){j=c[e+1]&-8;s=32>j>>>3>>>0;t=e;do{if(s){if(l=c[t+2],m=c[e+3],n=j>>>3,(l|0)==(m|0)){g=a,c[g]&=1<<n^-1}else{if((l|0)==((n<<1)+a+10|0)){g=16}else{if(l>>>0>=c[a+4]>>>0){g=16}else{var w=0;g=18}}16==g&&(w=(m|0)==((n<<1)+a+10|0)?1:m>>>0>=c[a+4]>>>0);0!=(1==(w&1)|0)?(c[l+3]=m,c[m+2]=l):y4()}}else{n=t;l=c[n+6];m=(c[n+3]|0)!=(n|0);var x=n;do{if(m){p=c[x+2],g=c[n+3],0!=(1==(p>>>0>=c[a+4]>>>0&1)|0)?(c[p+3]=g,c[g+2]=p):y4()}else{p=g=x+5;g=r=c[g];if(0==(r|0)&&(p=g=n+4,g=r=c[g],0==(r|0))){break}for(;;){var y=g+5;r=y;if(0==(c[y]|0)&&(r=y=g+4,0==(c[y]|0))){break}p=g=r;g=c[g]}0!=(1==(p>>>0>=c[a+4]>>>0&1)|0)?c[p]=0:y4()}}while(0);0!=(l|0)&&(m=a+c[n+7]+76,(n|0)==(c[m]|0)?(x=g,c[m]=x,0==(x|0)&&(m=a+1,c[m]&=1<<c[n+7]^-1)):0!=(1==(l>>>0>=c[a+4]>>>0&1)|0)?(m=g,x=l+4,(c[l+4]|0)==(n|0)?c[x]=m:c[x+1]=m):y4(),0!=(g|0)&&(0!=(1==(g>>>0>=c[a+4]>>>0&1)|0)?(c[g+6]=l,l=m=c[n+4],0!=(m|0)&&(0!=(1==(l>>>0>=c[a+4]>>>0&1)|0)?(c[g+4]=l,c[l+6]=g):y4()),n=l=c[n+5],0!=(l|0)&&(0!=(1==(n>>>0>=c[a+4]>>>0&1)|0)?(c[g+5]=n,c[n+6]=g):y4())):y4()))}}while(0);e+=j;i+=j}j=e+1;c[j]&=-2;c[h+1]=i|1;c[h+i]=i;if(32>i>>>3>>>0){j=i>>>3,t=s=(j<<1)+a+10,0!=(1<<j&c[a]|0)?0!=(1==(c[s+2]>>>0>=c[a+4]>>>0&1)|0)?t=c[s+2]:y4():(n=a,c[n]|=1<<j),c[s+2]=h,c[t+3]=h,c[h+2]=t,c[h+3]=s}else{if(j=h,s=i>>>8,0==(s|0)?t=0:65535<s>>>0?t=31:(t=s-256>>>16&8,s=n=s<<t,n=n-4096>>>16&4,t+=n,s=n=s<<n,n=g=n-16384>>>16&2,t=g+t,n=-t+(s<<n>>>15)+14,t=(n<<1)+(i>>>(n+7>>>0)&1)),s=a+(t+76),c[j+7]=t,c[j+5]=0,c[j+4]=0,0!=(1<<t&c[a+1]|0)){s=c[s];for(t=i<<(31==(t|0)?0:-(t>>>1)+25);;){if((c[s+1]&-8|0)!=(i|0)){if(n=s+(t>>>31&1)+4,t<<=1,g=n,0!=(c[n]|0)){s=c[g]}else{if(0!=(1==(g>>>0>=c[a+4]>>>0&1)|0)){c[n]=j;c[j+6]=s;a=j;c[j+3]=a;c[j+2]=a;break a}y4()}}else{n=c[s+2];if(0!=(1==((s>>>0>=c[a+4]>>>0?n>>>0>=c[a+4]>>>0:0)&1)|0)){a=j;c[n+3]=a;c[s+2]=a;c[j+2]=n;c[j+3]=s;c[j+6]=0;break a}y4()}}}else{n=a+1,c[n]|=1<<t,c[s]=j,c[j+6]=s,s=j,c[j+3]=s,c[j+2]=s}}}}}while(0);return d+8}ytb.X=1;function Etb(){return D.Je}Etb.X=1;function Ftb(){return D.ke}Ftb.X=1;function Gtb(){return Ja=c[Htb],c[Htb]=Ja,Ja}Gtb.X=1;function E4(a){c[a]=Itb+2;c[a]=Jtb+2}E4.X=1;function xe(a){0!=(a|0)&&r3(a)}xe.X=1;function Ktb(a){Ltb(a);xe(a)}Ktb.X=1;function Mtb(a){Ltb(a)}Mtb.X=1;function Ntb(a){E4(a);c[a]=Otb+2}Ntb.X=1;function Ptb(a){Ltb(a);xe(a)}Ptb.X=1;function ztb(a,d,e,f){var g,h,i,j,l;g=c[a+6];h=A4(a,g);i=c[h]+c[h+1];h=i+ -47;h+=0==(h+8&7|0)?0:8-(h+8&7)&7;h=h>>>0<g+16>>>0?g:h;j=h+8;l=h+24;C4(a,d,e-40);c[h+1]=27;var m=a+111;c[j]=c[m];k[j]=k[m];c[j+1]=c[m+1];k[j+1]=k[m+1];c[j+2]=c[m+2];k[j+2]=k[m+2];c[j+3]=c[m+3];k[j+3]=k[m+3];c[a+111]=d;c[a+112]=e;c[a+114]=f;c[a+113]=j;d=l+4;c[l+1]=7;e=d+1>>>0<i>>>0;a:do{if(e){for(;;){if(l=d,d=l+4,c[l+1]=7,d+1>>>0>=i>>>0){break a}}}}while(0);i=(h|0)!=(g|0);a:do{if(i){if(d=g,e=h-g,f=d+(e+1),c[f]&=-2,c[d+1]=e|1,c[d+e]=e,32>e>>>3>>>0){e>>>=3,l=f=(e<<1)+a+10,0!=(1<<e&c[a]|0)?0!=(1==(c[f+2]>>>0>=c[a+4]>>>0&1)|0)?l=c[f+2]:y4():(j=a,c[j]|=1<<e),c[f+2]=d,c[l+3]=d,c[d+2]=l,c[d+3]=f}else{if(f=e>>>8,0==(f|0)?l=0:65535<f>>>0?l=31:(l=f-256>>>16&8,f=j=f<<l,j=j-4096>>>16&4,l+=j,f=j=f<<j,j=m=j-16384>>>16&2,l=m+l,j=-l+(f<<j>>>15)+14,l=(j<<1)+(e>>>(j+7>>>0)&1)),f=a+(l+76),c[d+7]=l,c[d+5]=0,c[d+4]=0,0!=(1<<l&c[a+1]|0)){f=c[f];for(l=e<<(31==(l|0)?0:-(l>>>1)+25);;){if((c[f+1]&-8|0)!=(e|0)){if(j=f+(l>>>31&1)+4,l<<=1,m=j,0!=(c[j]|0)){f=c[m]}else{if(0!=(1==(m>>>0>=c[a+4]>>>0&1)|0)){c[j]=d;c[d+6]=f;a=d;c[d+3]=a;c[d+2]=a;break a}y4()}}else{j=c[f+2];if(0!=(1==((f>>>0>=c[a+4]>>>0?j>>>0>=c[a+4]>>>0:0)&1)|0)){a=d;c[j+3]=a;c[f+2]=a;c[d+2]=j;c[d+3]=f;c[d+6]=0;break a}y4()}}}else{e=a+1,c[e]|=1<<l,c[f]=d,c[d+6]=f,e=d,c[d+3]=e,c[d+2]=e}}}}while(0)}ztb.X=1;function xb(a){var d;for(0==(a|0)?a=1:__label__=4;;){var e=Wa(a);d=e;if(0==(e|0)){if(d=Gtb(),0!=(d|0)){v[d]()}else{d=Wa(4);E4(d);e=F4;if(!Qtb){try{c[__ZTVN10__cxxabiv119__pointer_type_infoE]=0}catch(f){}try{c[G4]=1}catch(g){}try{c[H4]=2}catch(h){}Qtb=ia}Module.f("Compiled code throwing an exception, "+[d,e,30]+", at "+Error().stack);c[Rtb]=d;c[Rtb+1]=e;c[Rtb+2]=30;"uncaught_exception"in I4?I4.L++:I4.L=1;aa(d)}}else{return d}}return na}xb.X=1;function Hb(a){return!c[a]?c[a]=1:0}var qia,gIa,ec=Math.sqrt,ZKa=Math.acos,ud=Math.sin,td=Math.cos,lFa=Math.pow,sc=Math.abs,QMa=Math.asin,ee=Math.atan2;function hNa(a,d){a>>>=0;d>>>=0;return{v:a*d>>>0,A:4294967295<a*d}}function Y2(a,d){eb.unshift({j:a,s:d})}function Vcb(a,d){var e=D.Ie,f=D.Md;aa("Assertion failed: "+Qa(d)+", at: "+[Qa(e),a,Qa(f)])}var n2=Math.abs,qjb=Math.sqrt,J4=13,Stb=9,Ttb=22,Utb=5,Vtb=21,Wtb=6;function K4(a){D4||(D4=u([0],"i32",q));c[D4]=a}var D4,L4=0,r2=0,M4=0,Xtb=2,s2=[na],Ytb=ia;function Ztb(a,d){if("string"!==typeof a){return na}d===fa&&(d="/");a&&"/"==a[0]&&(d="");for(var e=(d+"/"+a).split("/").reverse(),f=[""];e.length;){var g=e.pop();""==g||"."==g||(".."==g?1<f.length&&f.pop():f.push(g))}return 1==f.length?"/":f.join("/")}function $tb(a,d,e){var f={Gf:oa,p:oa,error:0,name:na,path:na,object:na,G:oa,I:na,H:na},a=Ztb(a);if("/"==a){f.Gf=ia,f.p=f.G=ia,f.name="/",f.path=f.I="/",f.object=f.H=N4}else{if(a!==na){for(var e=e||0,a=a.slice(1).split("/"),g=N4,h=[""];a.length;){1==a.length&&g.h&&(f.G=ia,f.I=1==h.length?"/":h.join("/"),f.H=g,f.name=a[0]);var i=a.shift();if(g.h){if(g.K){if(!g.d.hasOwnProperty(i)){f.error=2;break}}else{f.error=J4;break}}else{f.error=20;break}g=g.d[i];if(g.link&&!(d&&0==a.length)){if(40<e){f.error=40;break}f=Ztb(g.link,h.join("/"));f=$tb([f].concat(a).join("/"),d,e+1);break}h.push(i);0==a.length&&(f.p=ia,f.path=h.join("/"),f.object=g)}}}return f}function aub(a){bub();a=$tb(a,fa);if(a.p){return a.object}K4(a.error);return na}function cub(a,d,e,f,g){a||(a="/");"string"===typeof a&&(a=aub(a));a||(K4(J4),aa(Error("Parent path must exist.")));a.h||(K4(20),aa(Error("Parent must be a folder.")));!a.write&&!Ytb&&(K4(J4),aa(Error("Parent folder must be writeable.")));if(!d||"."==d||".."==d){K4(2),aa(Error("Name must not be empty."))}a.d.hasOwnProperty(d)&&(K4(17),aa(Error("Can't overwrite object.")));a.d[d]={K:f===fa?ia:f,write:g===fa?oa:g,timestamp:Date.now(),Ff:Xtb++};for(var h in e){e.hasOwnProperty(h)&&(a.d[d][h]=e[h])}return a.d[d]}function O4(a,d,e,f){return cub(a,d,{h:ia,e:oa,d:{}},e,f)}function dub(a,d,e,f){a=aub(a);a===na&&aa(Error("Invalid parent."));for(d=d.split("/").reverse();d.length;){var g=d.pop();g&&(a.d.hasOwnProperty(g)||O4(a,g,e,f),a=a.d[g])}return a}function P4(a,d,e,f,g){e.h=oa;return cub(a,d,e,f,g)}function eub(a,d,e,f,g){if("string"===typeof e){for(var h=Array(e.length),i=0,j=e.length;i<j;++i){h[i]=e.charCodeAt(i)}e=h}e={e:oa,d:e.subarray?e.subarray(0):e};return P4(a,d,e,f,g)}function Q4(a,d,e,f){!e&&!f&&aa(Error("A device must have at least one callback defined."));return P4(a,d,{e:ia,input:e,i:f},Boolean(e),Boolean(f))}function bub(){N4||(N4={K:ia,write:ia,h:ia,e:oa,timestamp:Date.now(),Ff:1,d:{}})}var R4,N4;function Ojb(a,d,e){var f=s2[a];if(f){if(f.m){if(0>e){return K4(Ttb),-1}if(f.object.e){if(f.object.i){for(var g=0;g<e;g++){try{f.object.i(c[d+g])}catch(h){return K4(Utb),-1}}f.object.timestamp=Date.now();return g}K4(Wtb);return-1}g=f.position;a=s2[a];if(!a||a.object.e){K4(Stb),d=-1}else{if(a.m){if(a.object.h){K4(Vtb),d=-1}else{if(0>e||0>g){K4(Ttb),d=-1}else{for(var i=a.object.d;i.length<g;){i.push(0)}for(var j=0;j<e;j++){i[g+j]=Ha[d+j]}a.object.timestamp=Date.now();d=j}}}else{K4(J4),d=-1}}-1!=d&&(f.position+=d);return d}K4(J4);return-1}K4(Stb);return-1}function jtb(a){var d,e={Df:["i32","i32"],g:0,k:0},f=[],g=-1;e.Ef=e.Df.map((function(a){var d,h;a in faa||a in gaa||"*"==a[a.length-1]?h=d=wa(a):(isPointerType(a)?0:/^\[\d+\ x\ (.*)\]/.test(a)||/<?{ ?[^}]* ?}>?/.test(a)||"%"==a[0])?(d=Types.types[a].g,h=Types.types[a].k):aa("Unclear type in struct: "+a+", in "+e.Hf+" :: "+dump(Types.types[e.Hf]));h=e.ag?1:Math.min(h,xa);e.k=Math.max(e.k,h);a=Ia(e.g,h);e.g=a+d;0<=g&&f.push(a-g);return g=a}));e.g=Ia(e.g,e.k);if(0==f.length){e.B=e.g}else{var h={};1==f.filter((function(a){return h[a]?oa:h[a]=ia})).length&&(e.B=f[0])}e.$f=1!=e.B;d=e.Ef;var i=Date.now();c[a+d[0]]=Math.floor(i/1e3);c[a+d[1]]=Math.floor(1e3*(i-1e3*Math.floor(i/1e3)))}function y4(){aa("abort() at "+Error().stack)}function Dtb(){switch(8){case 8:return naa;case 54:;case 56:;case 21:;case 61:;case 63:;case 22:;case 67:;case 23:;case 24:;case 25:;case 26:;case 27:;case 69:;case 28:;case 101:;case 70:;case 71:;case 29:;case 30:;case 199:;case 75:;case 76:;case 32:;case 43:;case 44:;case 80:;case 46:;case 47:;case 45:;case 48:;case 49:;case 42:;case 82:;case 33:;case 7:;case 108:;case 109:;case 107:;case 112:;case 119:;case 121:return 200809;case 13:;case 104:;case 94:;case 95:;case 34:;case 35:;case 77:;case 81:;case 83:;case 84:;case 85:;case 86:;case 87:;case 88:;case 89:;case 90:;case 91:;case 94:;case 95:;case 110:;case 111:;case 113:;case 114:;case 115:;case 116:;case 117:;case 118:;case 120:;case 40:;case 16:;case 79:;case 19:return-1;case 92:;case 93:;case 5:;case 72:;case 6:;case 74:;case 92:;case 93:;case 96:;case 97:;case 98:;case 99:;case 102:;case 103:;case 105:return 1;case 38:;case 66:;case 50:;case 51:;case 4:return 1024;case 15:;case 64:;case 41:return 32;case 55:;case 37:;case 17:return 2147483647;case 18:;case 1:return 47839;case 59:;case 57:return 99;case 68:;case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1e3;case 106:return 700;case 52:return 256;case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4}K4(Ttb);return-1}function B4(a){fub||(Ea=Ea+4095>>12<<12,fub=ia);var d=Ea;0!=a&&haa(a);return d}var fub;function I4(){return!!I4.L}var Qtb,Ltb;function P8a(a,d){var e=4;if(d<a&&a<d+e){d+=e;for(a+=e;e--;){a--,d--,c[a]=c[d],k[a]=k[d]}}else{for(var f=d,g=a,e=f+e;f<e;f++,g++){c[g]=c[f],k[g]=k[f]}}}var gub=oa,hub,S4,iub,T4;cb.unshift({j:(function(){if(!Module.noFSInit&&!R4){var a,d,e,f=(function(a){a===na||10===a?(d.n(d.buffer.join("")),d.buffer=[]):d.buffer.push(j.J(a))});ya(!R4,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");R4=ia;bub();a=a||Module.stdin;d=d||Module.stdout;e=e||Module.stderr;var g=ia,h=ia,i=ia;a||(g=oa,a=(function(){if(!a.o||!a.o.length){var d;"undefined"!=typeof window&&"function"==typeof window.prompt?(d=window.prompt("Input: "),d===na&&(d=String.fromCharCode(0))):"function"==typeof readline&&(d=readline());d||(d="");a.o=Xa(d+"\n",ia)}return a.o.shift()}));var j=new Ba;d||(h=oa,d=f);d.n||(d.n=Module.print);d.buffer||(d.buffer=[]);e||(i=oa,e=f);e.n||(e.n=Module.print);e.buffer||(e.buffer=[]);try{O4("/","tmp",ia,ia)}catch(l){}var f=O4("/","dev",ia,ia),m=Q4(f,"stdin",a),n=Q4(f,"stdout",na,d);e=Q4(f,"stderr",na,e);Q4(f,"tty",a,d);s2[1]={path:"/dev/stdin",object:m,position:0,D:ia,m:oa,C:oa,F:!g,error:oa,u:oa,M:[]};s2[2]={path:"/dev/stdout",object:n,position:0,D:oa,m:ia,C:oa,F:!h,error:oa,u:oa,M:[]};s2[3]={path:"/dev/stderr",object:e,position:0,D:oa,m:ia,C:oa,F:!i,error:oa,u:oa,M:[]};L4=u([1],"void*",Va);r2=u([2],"void*",Va);M4=u([3],"void*",Va);dub("/","dev/shm/tmp",ia,ia);for(g=s2.length;g<Math.max(L4,r2,M4)+1;g++){s2[g]=na}s2[L4]=s2[1];s2[r2]=s2[2];s2[M4]=s2[3];u([u([0,L4,r2,M4],"void*",q)],"void*",q)}})});qaa.push({j:(function(){Ytb=oa})});eb.push({j:(function(){R4&&(s2[2]&&0<s2[2].object.i.buffer.length&&s2[2].object.i(10),s2[3]&&0<s2[3].object.i.buffer.length&&s2[3].object.i(10))})});Module.FS_createFolder=O4;Module.FS_createPath=dub;Module.FS_createDataFile=eub;Module.FS_createPreloadedFile=(function(a,d,e,f,g,h,i,j){function l(a){return{jpg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[a.substr(-3)]}function m(e){function l(e){j||eub(a,d,e,f,g);h&&h();sb("cp "+p)}var m=oa;Module.preloadPlugins.forEach((function(a){!m&&a.canHandle(p)&&(a.handle(e,p,l,(function(){i&&i();sb("cp "+p)})),m=ia)}));m||l(e)}if(!hub){hub=ia;try{new Blob,S4=ia}catch(n){S4=oa,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}iub="undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:!S4?console.log("warning: no BlobBuilder"):na;T4="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:console.log("warning: cannot create object URLs");Module.preloadPlugins||(Module.preloadPlugins=[]);Module.preloadPlugins.push({canHandle:(function(a){return a.substr(-4)in{".jpg":1,".png":1,".bmp":1}}),handle:(function(a,d,e,f){var g=na;if(S4){try{g=new Blob([a],{type:l(d)})}catch(h){var i="Blob constructor present but fails: "+h+"; falling back to blob builder";Aa||(Aa={});Aa[i]||(Aa[i]=1,Module.f(i))}}g||(g=new iub,g.append((new Uint8Array(a)).buffer),g=g.getBlob());var j=T4.createObjectURL(g),m=new Image;m.onload=(function(){ya(m.complete,"Image "+d+" could not be decoded");var f=document.createElement("canvas");f.width=m.width;f.height=m.height;f.getContext("2d").drawImage(m,0,0);Module.preloadedImages[d]=f;T4.revokeObjectURL(j);e&&e(a)});m.onerror=(function(){console.log("Image "+j+" could not be decoded");f&&f()});m.src=j})});Module.preloadPlugins.push({canHandle:(function(a){return a.substr(-4)in{".ogg":1,".wav":1,".mp3":1}}),handle:(function(a,d,e,f){function g(f){i||(i=ia,Module.preloadedAudios[d]=f,e&&e(a))}function h(){i||(i=ia,Module.preloadedAudios[d]=new Audio,f&&f())}var i=oa;if(S4){try{var j=new Blob([a],{type:l(d)})}catch(m){return h()}var j=T4.createObjectURL(j),n=new Audio;n.addEventListener("canplaythrough",(function(){g(n)}),oa);n.onerror=(function(){if(!i){console.log("warning: browser could not fully decode audio "+d+", trying slower base64 approach");for(var e="",f=0,h=0,j=0;j<a.length;j++){f=f<<8|a[j];for(h+=8;6<=h;){var l=f>>h-6&63,h=h-6,e=e+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[l]}}2==h?(e+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(f&3)<<4],e+="=="):4==h&&(e+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(f&15)<<2],e+="=");n.src="data:audio/x-"+d.substr(-3)+";base64,"+e;g(n)}});n.src=j;setTimeout((function(){g(n)}),1e4)}else{return h()}})})}for(var p,r=[a,d],s=r[0],t=1;t<r.length;t++){"/"!=s[s.length-1]&&(s+="/"),s+=r[t]}"/"==s[0]&&(s=s.substr(1));p=s;nb("cp "+p);if("string"==typeof e){var w=i,x=(function(){w?w():aa('Loading data file "'+e+'" failed.')}),y=new XMLHttpRequest;y.open("GET",e,ia);y.responseType="arraybuffer";y.onload=(function(){if(200==y.status){var a=y.response;ya(a,'Loading data file "'+e+'" failed (no arrayBuffer).');a=new Uint8Array(a);m(a);sb("al "+e)}else{x()}});y.onerror=x;y.send(na);nb("al "+e)}else{m(e)}});Module.FS_createLazyFile=(function(a,d,e,f,g){if("undefined"!==typeof XMLHttpRequest){va||aa("Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc");var h=(function(a,d){this.length=d;this.t=a;this.l=[]});h.prototype.Mf=(function(a){this.Zf=a});var i=new XMLHttpRequest;i.open("HEAD",e,oa);i.send(na);200<=i.status&&300>i.status||304===i.status||aa(Error("Couldn't load "+e+". Status: "+i.status));var j=Number(i.getResponseHeader("Content-length")),l,m=1048576;if(!((l=i.getResponseHeader("Accept-Ranges"))&&"bytes"===l)){m=j}var n=new h(m,j);n.Mf((function(a){var d=a*n.t,f=(a+1)*n.t-1,f=Math.min(f,j-1);if("undefined"===typeof n.l[a]){var g=n.l;d>f&&aa(Error("invalid range ("+d+", "+f+") or no bytes requested!"));f>j-1&&aa(Error("only "+j+" bytes available! programmer error!"));var h=new XMLHttpRequest;h.open("GET",e,oa);j!==m&&h.setRequestHeader("Range","bytes="+d+"-"+f);"undefined"!=typeof Uint8Array&&(h.responseType="arraybuffer");h.overrideMimeType&&h.overrideMimeType("text/plain; charset=x-user-defined");h.send(na);200<=h.status&&300>h.status||304===h.status||aa(Error("Couldn't load "+e+". Status: "+h.status));d=h.response!==fa?new Uint8Array(h.response||[]):Xa(h.responseText||"",ia);g[a]=d}"undefined"===typeof n.l[a]&&aa(Error("doXHR failed!"));return n.l[a]}));h={e:oa,d:n}}else{h={e:oa,url:e}}return P4(a,d,h,f,g)});Module.FS_createLink=(function(a,d,e,f,g){return P4(a,d,{e:oa,link:e},f,g)});Module.FS_createDevice=Q4;K4(0);var Rtb=u(12,"void*",q);u([0],"i8",q);Module.requestFullScreen=(function(){function a(){}function d(){var a=oa;if((document.webkitFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement)===e){e.Lf=e.requestPointerLock||e.mozRequestPointerLock||e.webkitRequestPointerLock,e.Lf(),a=ia}if(Module.onFullScreen){Module.onFullScreen(a)}}var e=Module.canvas;document.addEventListener("fullscreenchange",d,oa);document.addEventListener("mozfullscreenchange",d,oa);document.addEventListener("webkitfullscreenchange",d,oa);document.addEventListener("pointerlockchange",a,oa);document.addEventListener("mozpointerlockchange",a,oa);document.addEventListener("webkitpointerlockchange",a,oa);e.Kf=e.requestFullScreen||e.mozRequestFullScreen||(e.webkitRequestFullScreen?(function(){e.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}):na);e.Kf()});Module.requestAnimationFrame=(function(a){window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||window.setTimeout);window.requestAnimationFrame(a)});Module.pauseMainLoop=pa();Module.resumeMainLoop=(function(){gub&&(gub=oa,na())});Module.Cf=(function(a){function d(){for(var a=0;0>a;a++){f.push(0)}}var e=a.length+1,f=[u(Xa("/bin/this.program"),"i8",q)];d();for(var g=0;g<e-1;g+=1){f.push(u(Xa(a[g]),"i8",q)),d()}f.push(0);f=u(f,"i32",q);return _main(e,f,0)});var Kb,Gb,Xb,Qb,cc,ac,rc,pc,Nc,zc,gd,ed,ve,te,Ae,ze,Qe,Pe,lf,jf,of,nf,uf,sf,cg,bg,hg,fg,Og,Ng,Tg,Sg,ih,hh,$l,Zl,en,dn,oo,mo,rp,pp,fq,eq,nq,mq,uq,tq,xq,wq,Yt,Xt,ov,mv,ix,hx,sx,rx,vx,ux,Bx,Ax,Rx,Qx,$x,Zx,cy,by,hy,gy,$z,Zz,UA,TA,XA,WA,bB,aB,HB,FB,QB,OB,UB,TB,YB,WB,vC,tC,BC,zC,SC,RC,VC,UC,YC,XC,fD,eD,kD,jD,GE,FE,wF,vF,GF,FF,JF,IF,OF,NF,rG,pG,cH,bH,lH,kH,oH,nH,tH,sH,GH,FH,HI,GI,OI,NI,UI,TI,iJ,hJ,NJ,MJ,TJ,SJ,YJ,XJ,gK,fK,qK,pK,wK,vK,BK,AK,KK,JK,VM,UM,aN,$M,fN,eN,oN,nN,QO,OO,SP,RP,VP,UP,aQ,ZP,dQ,cQ,lQ,jQ,YQ,XQ,pR,oR,sS,rS,vS,uS,aV,Xya,bV,jza,cV,pza,dV,Aza,eV,Nza,iV,EBa,jV,MBa,kV,QBa,lV,mCa,oV,FCa,pV,OCa,qV,XCa,rV,eDa,sV,gDa,tV,PDa,uV,cEa,vV,eEa,wV,jEa,xV,JEa,zV,QEa,CV,cFa,FV,gFa,GV,jFa,JV,FFa,LV,XFa,MV,kGa,NV,mGa,OV,rGa,cW,MIa,eW,ZIa,gW,fJa,iW,sJa,jW,mKa,G4,q3,U4,V4,HV,oFa,kLa,H4,W4,X4,cLa,uLa,Y4,tLa,Z4,DLa,a5,b5,wLa,IW,c5,d5,yLa,rMa,e5,Rz,Sz,vMa,f5,g5,nMa,HMa,h5,Xc,cd,SMa,i5,j5,OMa,$W,k5,l5,fNa,kNa,m5,n5,o5,p5,q5,cX,fX,vX,r5,s5,t5,aOa,tOa,XNa,zX,JOa,u5,jub,v5,IX,w5,APa,x5,nLa,y5,OX,z5,rQa,A5,B5,eQa,xQa,C5,BQa,D5,RX,IQa,SQa,E5,F5,G5,RQa,UX,SX,H5,FRa,I5,J5,lRa,KRa,K5,tVa,L5,bY,aSa,M5,GY,N5,ETa,O5,HTa,P5,Q5,vTa,NTa,R5,S5,OTa,VTa,T5,ZTa,U5,eUa,V5,iUa,W5,RTa,X5,qUa,Y5,GUa,Z5,a6,yUa,OUa,b6,VUa,c6,ZUa,d6,OY,e6,AVa,f6,VY,g6,gWa,h6,jWa,kWa,lWa,i6,j6,k6,eZ,l6,GWa,m6,KWa,jZ,n6,o6,YWa,p6,fWa,q6,pZ,rZ,r6,s6,BXa,t6,JXa,u6,VXa,uZ,rYa,v6,w6,uYa,x6,yYa,y6,wZ,z6,QYa,UYa,yZ,$Ya,A6,B6,AZ,C6,kub,D6,CZ,E6,r_a,F6,Q_a,G6,lub,H6,mub,I6,X_a,J6,$_a,a0a,b0a,K6,L6,M6,n1a,N6,VZ,X0a,d_,O6,Z1a,P6,b2a,Q6,e2a,R6,j_,S6,T6,D2a,U6,H2a,V6,L2a,W6,Q2a,X6,U2a,Y6,Z2a,Z6,c3a,a7,g3a,b7,s3a,c7,j2a,QQa,d7,A3a,e7,E3a,f7,r_,g7,nub,h7,j5a,i7,H_,j7,z5a,k7,l7,x5a,F5a,m7,K5a,n7,y8a,o7,p7,oub,q7,n8a,r7,h8a,X_,Z_,s7,t7,J8a,u7,g9a,h9a,k9a,j9a,lUa,v7,u9a,p9a,l0,w7,m0,x7,pub,y7,V9a,HW,z7,r0,$9a,w3a,A7,j$a,B7,n$a,C7,L$a,$$a,D7,Dab,E7,qub,F7,G7,rub,A0,H7,Tab,I7,vbb,J7,Abb,K7,nX,W0,Y0,Mbb,U0,Z0,L7,M7,Dcb,N7,Gcb,O7,Kcb,P7,Ncb,Q7,VX,Qcb,Scb,Ucb,a1,tdb,c1,sdb,R7,S7,f1,n1,T7,aeb,geb,U7,V7,meb,W7,veb,X7,A1,Y7,B1,Z7,J1,a8,NKa,b8,YW,c8,K1,d8,Yfb,e8,eLa,f8,ogb,g8,rgb,h8,L1,i8,$gb,j8,sTa,k8,tTa,l8,AW,m8,R1,n8,T1,o8,bib,p8,nib,q8,rib,r8,Eib,s8,h2,k2,t8,cb=cb.concat([{j:ttb}]),sub,u8,Hjb,v8,u2,D2,w8,x8,Ilb,y8,G2,z8,A8,Xlb,Ujb,H2,B8,Lmb,C8,Vmb,D8,O2,fnb,E8,R2,T2,xnb,F8,G8,H8,Onb,I8,rnb,Inb,V2,J8,X2,fob,Z2,xob,K8,LMa,L8,Xm,Wm,a3,Mob,M8,$ob,b3,h3,dpb,N8,O8,Sob,o3,P8,p3,Q8,J2,pqb,rqb,R8,Aqb,Cqb,Bqb,Dqb,vqb,xqb,q4,v4,w4,p4,stb,x4,z4,Htb,Jtb,Otb,F4,S8,Itb;Kb=u(4,"float",q);Gb=u(1,"i64",q);Xb=u(12,"float",q);Qb=u(1,"i64",q);cc=u(12,"float",q);ac=u(1,"i64",q);rc=u(12,"float",q);pc=u(1,"i64",q);Nc=u(12,"float",q);zc=u(1,"i64",q);gd=u(12,"float",q);ed=u(1,"i64",q);ve=u(12,"float",q);te=u(1,"i64",q);Ae=u(12,"float",q);ze=u(1,"i64",q);Qe=u(4,"float",q);Pe=u(1,"i64",q);lf=u(4,"float",q);jf=u(1,"i64",q);of=u(4,"float",q);nf=u(1,"i64",q);uf=u(4,"float",q);sf=u(1,"i64",q);cg=u(4,"float",q);bg=u(1,"i64",q);hg=u(4,"float",q);fg=u(1,"i64",q);Og=u(4,"float",q);Ng=u(1,"i64",q);Tg=u(4,"float",q);Sg=u(1,"i64",q);ih=u(4,"float",q);hh=u(1,"i64",q);$l=u(4,"float",q);Zl=u(1,"i64",q);en=u(4,"float",q);dn=u(1,"i64",q);oo=u(4,"float",q);mo=u(1,"i64",q);rp=u(4,"float",q);pp=u(1,"i64",q);fq=u(4,"float",q);eq=u(1,"i64",q);nq=u(4,"float",q);mq=u(1,"i64",q);uq=u(4,"float",q);tq=u(1,"i64",q);xq=u(4,"float",q);wq=u(1,"i64",q);Yt=u(4,"float",q);Xt=u(1,"i64",q);ov=u(4,"float",q);mv=u(1,"i64",q);ix=u(4,"float",q);hx=u(1,"i64",q);sx=u(4,"float",q);rx=u(1,"i64",q);vx=u(4,"float",q);ux=u(1,"i64",q);Bx=u(4,"float",q);Ax=u(1,"i64",q);Rx=u(4,"float",q);Qx=u(1,"i64",q);$x=u(4,"float",q);Zx=u(1,"i64",q);cy=u(4,"float",q);by=u(1,"i64",q);hy=u(4,"float",q);gy=u(1,"i64",q);$z=u(4,"float",q);Zz=u(1,"i64",q);UA=u(4,"float",q);TA=u(1,"i64",q);XA=u(4,"float",q);WA=u(1,"i64",q);bB=u(4,"float",q);aB=u(1,"i64",q);HB=u(4,"float",q);FB=u(1,"i64",q);QB=u(4,"float",q);OB=u(1,"i64",q);UB=u(4,"float",q);TB=u(1,"i64",q);YB=u(4,"float",q);WB=u(1,"i64",q);vC=u(4,"float",q);tC=u(1,"i64",q);BC=u(4,"float",q);zC=u(1,"i64",q);SC=u(4,"float",q);RC=u(1,"i64",q);VC=u(4,"float",q);UC=u(1,"i64",q);YC=u(4,"float",q);XC=u(1,"i64",q);fD=u(4,"float",q);eD=u(1,"i64",q);kD=u(4,"float",q);jD=u(1,"i64",q);GE=u(4,"float",q);FE=u(1,"i64",q);wF=u(4,"float",q);vF=u(1,"i64",q);GF=u(4,"float",q);FF=u(1,"i64",q);JF=u(4,"float",q);IF=u(1,"i64",q);OF=u(4,"float",q);NF=u(1,"i64",q);rG=u(4,"float",q);pG=u(1,"i64",q);cH=u(4,"float",q);bH=u(1,"i64",q);lH=u(4,"float",q);kH=u(1,"i64",q);oH=u(4,"float",q);nH=u(1,"i64",q);tH=u(4,"float",q);sH=u(1,"i64",q);GH=u(4,"float",q);FH=u(1,"i64",q);HI=u(4,"float",q);GI=u(1,"i64",q);OI=u(4,"float",q);NI=u(1,"i64",q);UI=u(4,"float",q);TI=u(1,"i64",q);iJ=u(4,"float",q);hJ=u(1,"i64",q);NJ=u(4,"float",q);MJ=u(1,"i64",q);TJ=u(4,"float",q);SJ=u(1,"i64",q);YJ=u(4,"float",q);XJ=u(1,"i64",q);gK=u(4,"float",q);fK=u(1,"i64",q);qK=u(4,"float",q);pK=u(1,"i64",q);wK=u(4,"float",q);vK=u(1,"i64",q);BK=u(4,"float",q);AK=u(1,"i64",q);KK=u(4,"float",q);JK=u(1,"i64",q);VM=u(4,"float",q);UM=u(1,"i64",q);aN=u(4,"float",q);$M=u(1,"i64",q);fN=u(4,"float",q);eN=u(1,"i64",q);oN=u(4,"float",q);nN=u(1,"i64",q);QO=u(4,"float",q);OO=u(1,"i64",q);SP=u(4,"float",q);RP=u(1,"i64",q);VP=u(16,"float",q);UP=u(1,"i64",q);aQ=u(16,"float",q);ZP=u(1,"i64",q);dQ=u(4,"float",q);cQ=u(1,"i64",q);lQ=u(4,"float",q);jQ=u(1,"i64",q);YQ=u(4,"float",q);XQ=u(1,"i64",q);pR=u(4,"float",q);oR=u(1,"i64",q);sS=u(4,"float",q);rS=u(1,"i64",q);vS=u(4,"float",q);uS=u(1,"i64",q);aV=u(4,"float",q);Xya=u(1,"i64",q);bV=u(4,"float",q);jza=u(1,"i64",q);cV=u(4,"float",q);pza=u(1,"i64",q);dV=u(4,"float",q);Aza=u(1,"i64",q);eV=u(4,"float",q);Nza=u(1,"i64",q);iV=u(4,"float",q);EBa=u(1,"i64",q);jV=u(4,"float",q);MBa=u(1,"i64",q);kV=u(4,"float",q);QBa=u(1,"i64",q);lV=u(4,"float",q);mCa=u(1,"i64",q);oV=u(4,"float",q);FCa=u(1,"i64",q);pV=u(4,"float",q);OCa=u(1,"i64",q);qV=u(4,"float",q);XCa=u(1,"i64",q);rV=u(4,"float",q);eDa=u(1,"i64",q);sV=u(4,"float",q);gDa=u(1,"i64",q);tV=u(4,"float",q);PDa=u(1,"i64",q);uV=u(4,"float",q);cEa=u(1,"i64",q);vV=u(4,"float",q);eEa=u(1,"i64",q);wV=u(4,"float",q);jEa=u(1,"i64",q);xV=u(4,"float",q);JEa=u(1,"i64",q);zV=u(4,"float",q);QEa=u(1,"i64",q);CV=u(4,"float",q);cFa=u(1,"i64",q);FV=u(4,"float",q);gFa=u(1,"i64",q);GV=u(4,"float",q);jFa=u(1,"i64",q);JV=u(4,"float",q);FFa=u(1,"i64",q);LV=u(4,"float",q);XFa=u(1,"i64",q);MV=u(4,"float",q);kGa=u(1,"i64",q);NV=u(4,"float",q);mGa=u(1,"i64",q);OV=u(4,"float",q);rGa=u(1,"i64",q);cW=u(4,"float",q);MIa=u(1,"i64",q);eW=u(4,"float",q);ZIa=u(1,"i64",q);gW=u(4,"float",q);fJa=u(1,"i64",q);iW=u(4,"float",q);sJa=u(1,"i64",q);jW=u(4,"float",q);mKa=u(1,"i64",q);q3=u([0,0,32,34,36,38,40,40,42,40,40,44,46],"*",q);u(1,"void*",q);D.La=u([49,55,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,0],"i8",q);D.ba=u([49,51,98,116,84,121,112,101,100,79,98,106,101,99,116,0],"i8",q);U4=u(2,"*",q);V4=u([0,0,0,1,0,1026],"* * i32 i32 * i32".split(" "),q);HV=u(4,"float",q);oFa=u(1,"i64",q);kLa=u([0,0,48,50,52,54],"*",q);u(1,"void*",q);D.Rc=u([78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,55,67,108,111,115,101,115,116,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0],"i8",q);D.Nc=u([78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0],"i8",q);W4=u(2,"*",q);X4=u(3,"*",q);cLa=u([0,0,56,58,52,40],"*",q);u(1,"void*",q);uLa=u([0,0,60,62,64],"*",q);u(1,"void*",q);D.tc=u([51,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,67,114,101,97,116,101,70,117,110,99,0],"i8",q);Y4=u(2,"*",q);tLa=u([0,0,66,68,40,40,40],"*",q);u(1,"void*",q);D.hd=u([78,51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,54,82,101,115,117,108,116,69,0],"i8",q);Z4=u(2,"*",q);DLa=u([0,0,70,72,74,76],"*",q);u(1,"void*",q);D.nc=u([50,57,67,111,110,99,114,101,116,101,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0],"i8",q);D.Oc=u([78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,49,67,111,110,116,97,99,116,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0],"i8",q);a5=u(2,"*",q);b5=u(3,"*",q);wLa=u([0,0,78,80,74,40],"*",q);u(1,"void*",q);IW=u([0,0,82,84,86,88],"*",q);u(1,"void*",q);D.Pc=u([78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,65,108,108,72,105,116,115,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0],"i8",q);D.Mc=u([78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0],"i8",q);c5=u(2,"*",q);d5=u(3,"*",q);yLa=u([0,0,90,92,86,40],"*",q);u(1,"void*",q);rMa=u([0,0,94,96,86,98],"*",q);u(1,"void*",q);D.Qc=u([78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,50,52,67,108,111,115,101,115,116,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,0],"i8",q);e5=u(3,"*",q);Rz=u(16,"float",q);Sz=u(1,"i64",q);vMa=u([0,0,100,102,104,106],"*",q);u(1,"void*",q);D.hb=u([50,48,98,116,68,101,102,97,117,108,116,77,111,116,105,111,110,83,116,97,116,101,0],"i8",q);D.$=u([49,51,98,116,77,111,116,105,111,110,83,116,97,116,101,0],"i8",q);f5=u(2,"*",q);g5=u(3,"*",q);nMa=u([0,0,108,110,40,40],"*",q);u(1,"void*",q);HMa=u([0,0,112,114,40],"*",q);u(1,"void*",q);D.Wa=u([49,56,98,116,86,101,104,105,99,108,101,82,97,121,99,97,115,116,101,114,0],"i8",q);h5=u(2,"*",q);Xc=u(12,"float",q);cd=u(1,"i64",q);u([116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,298,300,302,304,306,308,310,312,314,316,318,320,322,324,326,328,330,332,334,336,338,340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,372,374,376,378,380,382,384,386,388,390,392,394,396,398,400,402,404,406,408,410,412,414,416,418,420,422,424,426,428,430,432,434,436,438,440,442,444,446,448,450,452,454,456,458,460,462,464,466,468,470,472,474,476,478,480,482,484,486,488,490,492,494,496,498,500,502,504,506,508,510,512,514,516,518,520,522,524,526,528,530,532,534,536,538,540,542,544,546,548,550,552,554,556,558,560,562,564,566,568,570,572,574,576,578,580,582,584,586,588,590,592,594,596,598,600,602,604,606,608,610,612,614,616,618,620,622,624,626,628,630,632,634,636,638,640,642,644,646,648,650,652,654,656,658,660,662,664,666,668,670,672,674,676,678,680,682,684,686,688,690,692,694,696,698,700,702,704,706,708,710,712,714,716,718,720,722,724,726,728,730,732,734,736,738,740,742,744,746,748,750,752,754,756,758,760,762,764,766,768,770,772,774,776,778,780,782,784,786,788,790,792,794,796,798,800,802,804,806,808,810,812,814,816,818,820,822,824,826,828,830,832,834,836,838,840,842,844,846,848,850,852,854,856,858,860,862,864,866,868,870,872,874,876,878,880,882,884,886,888,890,892,894,896,898,900,902,904,906,908,910,912,914,916,918,920,922,924,926,928,930,932,934,936,938,940,942,944,946,948,950,952,954,956,958,960,962,964,966,968,970,972,974,976,978,980,982,984,986,988,990,992,994,996,998,1e3,1002,1004,1006,1008,1010,1012,1014,1016,1018,1020,1022,1024,1026,1028,1030,1032,1034,1036,1038,1040,1042,1044,1046,1048,1050,1052,1054,1056,1058,1060,1062,1064,1066,1068,1070,1072,1074,1076,1078,1080,1082,1084,1086,1088,1090,1092,1094,1096,1098,1100,1102,1104,1106,1108,1110,1112,1114,1116,1118,1120,1122,1124,1126,1128,1130,1132,1134,1136,1138,1140,1142,1144,1146,1148,1150,1152,1154,1156,1158,1160,1162,1164,1166,1168,1170,1172,1174,1176,1178,1180,1182,1184,1186,1188,1190,1192,1194,1196,1198,1200,1202,1204,1206,1208,1210,1212,1214,1216,1218,1220,1222,1224,1226,1228,1230,1232,1234,1236,1238,1240,1242,1244,1246,1248,1250,1252,1254,1256,1258,1260,1262,1264,1266,1268,1270,1272,1274,1276,1278,1280,1282,1284,1286,1288,1290,1292,1294,1296,1298,1300,1302,1304,1306,1308,1310,1312,1314,1316,1318,1320,1322,1324,1326,1328,1330,1332,1334,1336,1338,1340,1342,1344,1346,1348,1350,1352,1354,1356,1358,1360,1362,1364,1366,1368,1370,1372,1374,1376,1378,1380,1382,1384,1386,1388,1390,1392,1394,1396,1398,1400,1402,1404,1406,1408,1410,1412,1414,1416,1418,1420,1422,1424,1426,1428,1430,1432,1434,1436,1438,1440,1442,1444,1446,1448,1450,1452,1454,1456,1458,1460,1462,1464,1466,1468,1470,1472,1474,1476,1478,1480,1482,1484,1486,1488,1490,1492,1494,1496,1498,1500,1502,1504,1506,1508,1510,1512,1514,1516,1518,1520,1522,1524,1526,1528,1530,1532,1534,1536,1538,1540,1542,1544,1546,1548,1550,1552,1554,1556,1558,1560,1562,1564,1566,1568,1570,1572,1574,1576,1578,1580,1582,1584,1586,1588,1590,1592,1594,1596,1598,1600,1602,1604,1606,1608,1610,1612,1614,1616,1618,1620,1622,1624,1626,1628,1630,1632,1634,1636,1638,1640,1642,1644,1646,1648,1650,1652,1654,1656,1658,1660,1662,1664,1666,1668,1670,1672,1674,1676,1678,1680,1682,1684,1686,1688,1690,1692,1694,1696,1698,1700,1702,1704,1706,1708,1710,1712,1714,1716,1718,1720,1722,1724,1726,1728,1730,1732,1734,1736,1738,1740,1742,1744,1746,1748,1750,1752,1754,1756,1758,1760,1762,1764,1766,1768,1770,1772,1774,1776,1778,1780,1782,1784,1786,1788,1790,1792,1794,1796,1798,1800,1802,1804,1806,1808,1810,1812,1814,1816,1818,1820,1822,1824,1826,1828,1830,1832,1834,1836,1838,1840,1842,1844,1846,1848,1850,1852,1854,1856,1858,1860,1862,1864,1866,1868,1870,1872,1874,1876,1878,1880,1882,1884,1886,1888,1890,1892,1894,1896,1898,1900,1902,1904,1906,1908,1910,1912,1914,1916,1918,1920,1922,1924,1926,1928,1930,1932,1934,1936,1938,1940,1942,1944,1946,1948,1950,1952,1954,1956,1958,1960,1962,1964,1966,1968,1970,1972,1974,1976,1978,1980,1982,1984,1986,1988,1990,1992,1994,1996,1998,2e3,2002,2004,2006,2008,2010,2012,2014,2016,2018,2020,2022,2024,2026,2028,2030,2032,2034,2036,2038,2040,2042,2044,2046,2048,2050,2052,2054,2056,2058,2060,2062,2064,2066,2068,2070,2072,2074,2076,2078,2080,2082,2084,2086,2088,2090,2092,2094,2096,2098,2100,2102,2104,2106,2108,2110,2112,2114,2116,2118,2120,2122,2124,2126,2128,2130,2132,2134,2136,2138,2140,2142,2144,2146,2148,2150,2152,2154,2156,2158,2160,2162,2164,2166,2168,2170,2172,2174,2176,2178,2180,2182,2184,2186,2188,2190,2192,2194,2196,2198,2200,2202,2204,2206,2208,2210,2212,2214,2216,2218,2220,2222,2224,2226,2228,2230,2232,2234,2236,2238,2240,2242,2244,2246,2248,2250,2252,2254,2256,2258,2260,2262,2264,2266,2268,2270,2272,2274,2276,2278,2280,2282,2284,2286,2288,2290,2292,2294,2296,2298,2300,2302,2304,2306,2308,2310,2312,2314,2316,2318,2320,2322,2324,2326,2328,2330,2332,2334,2336,2338,2340,2342,2344,2346,2348,2350,2352,2354,2356,2358,2360,2362,2364,2366,2368,2370,2372,2374,2376,2378,2380,2382,2384,2386,2388,2390,2392,2394,2396,2398,2400,2402,2404,2406,2408,2410,2412,2414,2416,2418,2420,2422,2424,2426,2428,2430,2432,2434,2436,2438,2440,2442,2444,2446,2448,2450,2452,2454,2456,2458,2460,2462,2464,2466,2468,2470,2472,2474,2476,2478,2480,2482,2484,2486,2488,2490,2492,2494,2496,2498,2500,2502,2504,2506,2508,2510,2512,2514,2516,2518,2520,2522,2524,2526,2528,2530,2532,2534,2536,2538,2540,2542,2544,2546,2548,2550,2552,2554,2556,2558,2560,2562,2564,2566,2568,2570,2572,2574,2576,2578,2580,2582,2584,2586,2588,2590,2592,2594,2596,2598,2600,2602,2604,2606,2608,2610,2612,2614,2616,2618,2620,2622,2624,2626,2628,2630,2632,2634,2636,2638,2640,2642,2644,2646,2648,2650,2652,2654,2656,2658,2660,2662,2664,2666,2668,2670,2672,2674,2676,2678,2680,2682,2684,2686,2688,2690,2692,2694,2696,2698,2700,2702,2704,2706,2708,2710,2712,2714,2716,2718,2720,2722,2724,2726,2728,2730,2732,2734,2736,2738,2740,2742,2744,2746,2748,2750,2752,2754,2756,2758,2760,2762,2764,2766,2768,2770,2772,2774,2776,2778,2780,2782,2784,2786,2788,2790,2792,2794,2796,2798,2800,2802,2804,2806,2808,2810,2812,2814,2816,2818,2820,2822,2824,2826,2828,2830,2832,2834,2836,2838,2840,2842,2844,2846,2848,2850,2852,2854,2856,2858,2860,2862,2864,2866,2868,2870,2872,2874,2876,2878,2880,2882,2884,2886,2888,2890,2892,2894,2896,2898,2900,2902,2904,2906,2908,2910,2912,2914,2916,2918,2920,2922,2924,2926,2928,2930,2932,2934,2936,2938,2940,2942,2944,2946,2948,2950,2952,2954,2956,2958,2960,2962,2964,2966,2968,2970,2972,2974,2976,2978,2980,2982,2984,2986,2988,2990,2992,2994,2996,2998,3e3,3002,3004,3006,3008,3010,3012,3014,3016,3018,3020,3022,3024,3026,3028,3030,3032,3034,3036,3038,3040,3042,3044,3046,3048,3050,3052,3054,3056,3058,3060,3062,3064,3066,3068,3070,3072,3074,3076,3078,3080,3082,3084,3086,3088,3090,3092,3094,3096,3098,3100,3102,3104,3106,3108,3110,3112,3114,3116,3118,3120,3122,3124,3126,3128,3130,3132,3134,3136,3138,3140,3142,3144,3146,3148,3150,3152,3154,3156,3158,3160,3162,3164,3166,3168,3170,3172,3174,3176,3178,3180,3182,3184,3186,3188,3190,3192,3194,3196,3198,3200,3202,3204,3206,3208,3210,3212,3214,3216,3218,3220,3222,3224,3226,3228,3230,3232,3234,3236,3238,3240,3242,3244,3246,3248,3250,3252,3254,3256,3258,3260,3262,3264,3266,3268,3270,3272,3274,3276,3278,3280,3282,3284,3286,3288,3290,3292,3294,3296,3298,3300,3302,3304,3306,3308,3310,3312,3314,3316,3318,3320,3322,3324,3326,3328,3330,3332,3334,3336,3338,3340,3342,3344,3346,3348,3350,3352,3354,3356,3358,3360,3362,3364,3366,3368,3370,3372,3374,3376,3378,3380,3382,3384,3386,3388,3390,3392,3394,3396,3398,3400,3402,3404,3406,3408,3410,3412,3414,3416,3418,3420,3422,3424,3426,3428,3430,3432,3434,3436,3438,3440,3442,3444,3446,3448,3450,3452,3454,3456,3458,3460,3462,3464,3466,3468,3470,3472,3474,3476,3478,3480,3482,3484,3486,3488,3490,3492,3494,3496,3498,3500,3502,3504,3506,3508,3510,3512,3514,3516,3518,3520,3522,3524,3526,3528,3530,3532,3534,3536,3538,3540,3542,3544,3546,3548,3550,3552,3554,3556,3558,3560,3562,3564,3566,3568,3570,3572,3574,3576,3578,3580,3582,3584,3586,3588,3590,3592,3594,3596,3598,3600,3602,3604,3606,3608,3610,3612,3614,3616,3618,3620,3622,3624,3626,3628,3630,3632,3634,3636,3638,3640,3642,3644,3646,3648,3650,3652,3654,3656,3658,3660,3662,3664,3666,3668,3670,3672,3674,3676,3678,3680,3682,3684,3686,3688,3690,3692,3694,3696,3698,3700,3702,3704,3706,3708,3710,3712,3714,3716,3718,3720,3722,3724,3726,3728,3730,3732,3734,3736,3738,3740,3742,3744,3746,3748,3750,3752,3754,3756,3758,3760,3762,3764,3766,3768,3770,3772,3774,3776,3778,3780,3782,3784,3786,3788,3790,3792,3794,3796,3798,3800,3802,3804,3806,3808,3810,3812,3814,3816,3818,3820,3822,3824,3826,3828,3830,3832,3834,3836,3838,3840,3842,3844,3846,3848,3850,3852,3854,3856,3858,3860,3862,3864,3866,3868,3870,3872,3874,3876,3878,3880,3882,3884,3886,3888,3890,3892,3894,3896,3898,3900,3902,3904,3906,3908,3910,3912,3914,3916,3918,3920,3922,3924,3926,3928,3930,3932,3934,3936,3938,3940,3942,3944,3946,3948,3950,3952,3954,3956,3958,3960,3962,3964,3966,3968,3970,3972,3974,3976,3978,3980,3982,3984,3986,3988,3990,3992,3994,3996,3998,4e3,4002,4004,4006,4008,4010,4012,4014,4016,4018,4020,4022,4024,4026,4028,4030,4032,4034,4036,4038,4040,4042,4044,4046,4048,4050,4052,4054,4056,4058,4060,4062,4064,4066,4068,4070,4072,4074,4076,4078,4080,4082,4084,4086,4088,4090,4092,4094,4096,4098,4100,4102,4104,4106,4108,4110,4112,4114,4116,4118,4120,4122,4124,4126,4128,4130,4132,4134,4136,4138,4140,4142,4144,4146,4148,4150,4152,4154,4156,4158,4160,4162,4164,4166,4168,4170,4172,4174,4176,4178,4180,4182,4184,4186,4188,4190,4192,4194,4196,4198,4200,4202,4204,4206,4208,4210,4212,4214,4216,4218,4220,4222,4224,4226,4228,4230,4232,4234,4236,4238,4240,4242,4244,4246,4248,4250,4252,4254,4256,4258,4260,4262,4264,4266,4268,4270,4272,4274,4276,4278,4280,4282,4284,4286,4288,4290,4292,4294,4296,4298,4300,4302,4304,4306,4308,4310,4312,4314,4316,4318,4320,4322,4324,4326,4328,4330,4332,4334,4336,4338,4340,4342,4344,4346,4348,4350,4352,4354,4356,4358,4360,4362,4364,4366,4368,4370,4372,4374,4376,4378,4380,4382,4384,4386,4388,4390,4392,4394,4396,4398,4400,4402,4404,4406,4408,4410,4412,4414,4416,4418,4420,4422,4424,4426,4428,4430,4432,4434,4436,4438,4440,4442,4444,4446,4448,4450,4452,4454,4456,4458,4460,4462,4464,4466,4468,4470,4472,4474,4476,4478,4480,4482,4484,4486,4488,4490,4492,4494,4496,4498,4500,4502,4504,4506,4508,4510,4512,4514,4516,4518,4520,4522,4524,4526,4528,4530,4532,4534,4536,4538,4540,4542,4544,4546,4548,4550,4552,4554,4556,4558,4560,4562,4564,4566,4568,4570,4572,4574,4576,4578,4580,4582,4584,4586,4588,4590,4592,4594,4596,4598,4600,4602,4604,4606,4608,4610,4612,4614,4616,4618,4620,4622,4624,4626,4628,4630,4632,4634,4636,4638,4640,4642,4644,4646,4648,4650,4652,4654,4656,4658,4660,4662,4664,4666,4668,4670,4672,4674,4676,4678,4680,4682,4684,4686,4688,4690,4692,4694,4696,4698,4700,4702,4704,4706,4708,4710,4712,4714,4716,4718,4720,4722,4724,4726,4728,4730,4732,4734,4736,4738,4740,4742,4744,4746,4748,4750,4752,4754,4756,4758,4760,4762,4764,4766,4768,4770,4772,4774,4776,4778,4780,4782,4784,4786,4788,4790,4792,4794,4796,4798,4800,4802,4804,4806,4808,4810,4812,4814,4816,4818,4820,4822,4824,4826,4828,4830,4832,4834,4836,4838,4840,4842,4844,4846,4848,4850,4852,4854,4856,4858,4860,4862,4864,4866,4868,4870,4872,4874,4876,4878,4880,4882,4884,4886,4888,4890,4892,4894,4896,4898,4900,4902,4904,4906,4908,4910,4912,4914,4916,4918,4920,4922,4924,4926,4928,4930,4932,4934,4936,4938,4940,4942,4944,4946,4948,4950,4952,4954,4956,4958,4960,4962,4964,4966,4968,4970,4972,4974,4976,4978,4980,4982,4984,4986,4988,4990,4992,4994,4996,4998,5e3,5002,5004,5006,5008,5010,5012,5014,5016,5018,5020,5022,5024,5026,5028,5030,5032,5034,5036,5038,5040,5042,5044,5046,5048,5050,5052,5054,5056,5058,5060,5062,5064,5066,5068,5070,5072,5074,5076,5078,5080,5082,5084,5086,5088,5090,5092,5094,5096,5098,5100,5102,5104,5106,5108,5110,5112,5114,5116,5118,5120,5122,5124,5126,5128,5130,5132,5134,5136,5138,5140,5142,5144,5146,5148,5150,5152,5154,5156,5158,5160,5162,5164,5166,5168,5170,5172,5174,5176,5178,5180,5182,5184,5186,5188,5190,5192,5194,5196,5198,5200,5202,5204,5206,5208,5210,5212,5214,5216,5218,5220,5222,5224,5226,5228,5230,5232,5234,5236,5238,5240,5242,5244,5246,5248,5250,5252,5254,5256,5258,5260,5262,5264,5266,5268,5270,5272,5274,5276,5278,5280,5282,5284,5286,5288,5290,5292,5294,5296,5298,5300,5302,5304,5306,5308,5310,5312,5314,5316,5318,5320,5322,5324,5326,5328,5330,5332,5334,5336,5338,5340,5342,5344,5346,5348,5350,5352,5354,5356,5358,5360,5362,5364,5366,5368,5370,5372,5374,5376,5378,5380,5382,5384,5386,5388,5390,5392,5394,5396,5398,5400,5402,5404,5406,5408,5410,5412,5414,5416,5418,5420,5422,5424,5426,5428,5430,5432,5434,5436,5438,5440,5442,5444,5446,5448,5450,5452,5454,5456,5458,5460,5462,5464,5466,5468,5470,5472,5474,5476,5478,5480,5482,5484,5486,5488,5490,5492,5494,5496,5498,5500,5502,5504,5506,5508,5510,5512,5514,5516,5518,5520,5522,5524,5526,5528,5530,5532,5534,5536,5538,5540,5542,5544,5546,5548,5550,5552,5554,5556,5558,5560,5562,5564,5566,5568,5570,5572,5574,5576,5578,5580,5582,5584,5586,5588,5590,5592,5594,5596,5598,5600,5602,5604,5606,5608,5610,5612,5614,5616,5618,5620,5622,5624,5626,5628,5630,5632,5634,5636,5638,5640,5642,5644,5646,5648,5650,5652,5654,5656,5658,5660,5662,5664,5666,5668,5670,5672,5674,5676,5678,5680,5682,5684,5686,5688,5690,5692,5694,5696,5698,5700,5702,5704,5706,5708,5710,5712,5714,5716,5718,5720,5722,5724,5726,5728,5730,5732,5734,5736,5738,5740,5742,5744,5746,5748,5750,5752,5754,5756,5758,5760,5762,5764,5766,5768,5770,5772,5774,5776,5778,5780,5782,5784,5786,5788,5790,5792,5794,5796,5798,5800,5802,5804,5806,5808,5810,5812,5814,5816,5818,5820,5822,5824,5826,5828,5830,5832,5834,5836,5838,5840,5842,5844,5846,5848,5850,5852,5854,5856,5858,5860,5862,5864,5866,5868,5870,5872,5874,5876,5878,5880,5882,5884,5886,5888,5890,5892,5894,5896,5898,5900,5902,5904,5906,5908,5910,5912,5914,5916,5918,5920,5922,5924,5926,5928,5930,5932,5934,5936,5938,5940,5942,5944,5946,5948,5950,5952,5954,5956,5958,5960,5962,5964,5966,5968,5970,5972,5974,5976,5978,5980,5982,5984,5986,5988,5990,5992,5994,5996,5998,6e3,6002,6004,6006,6008,6010,6012,6014,6016,6018,6020,6022,6024,6026,6028,6030,6032,6034,6036,6038,6040,6042,6044,6046,6048,6050,6052,6054,6056,6058,6060,6062,6064,6066,6068,6070,6072,6074,6076,6078,6080,6082,6084,6086,6088,6090,6092,6094,6096,6098,6100,6102,6104,6106,6108,6110,6112,6114,6116,6118,6120,6122,6124,6126,6128,6130,6132,6134,6136,6138,6140,6142,6144,6146,6148,6150,6152,6154,6156,6158,6160,6162,6164,6166,6168,6170,6172,6174,6176,6178,6180,6182,6184,6186,6188,6190,6192,6194,6196,6198,6200,6202,6204,6206,6208,6210,6212,6214,6216,6218,6220,6222,6224,6226,6228,6230,6232,6234,6236,6238,6240,6242,6244,6246,6248,6250,6252,6254,6256,6258,6260,6262,6264,6266,6268,6270,6272,6274,6276,6278,6280,6282,6284,6286,6288,6290,6292,6294,6296,6298,6300,6302,6304,6306,6308,6310,6312,6314,6316,6318,6320,6322,6324,6326,6328,6330,6332,6334,6336,6338,6340,6342,6344,6346,6348,6350,6352,6354,6356,6358,6360,6362,6364,6366,6368,6370,6372,6374,6376,6378,6380,6382,6384,6386,6388,6390,6392,6394,6396,6398,6400,6402,6404,6406,6408,6410,6412,6414,6416,6418,6420,6422,6424,6426,6428,6430,6432,6434,6436,6438,6440,6442,6444,6446,6448,6450,6452,6454,6456,6458,6460,6462,6464,6466,6468,6470,6472,6474,6476,6478,6480],"*",q);SMa=u([0,0,6482,6484,6486],"*",q);u(1,"void*",q);D.ub=u([50,50,83,112,104,101,114,101,84,114,105,97,110,103,108,101,68,101,116,101,99,116,111,114,0],"i8",q);D.Jc=u([51,54,98,116,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,111,114,73,110,116,101,114,102,97,99,101,0],"i8",q);i5=u(2,"*",q);j5=u(3,"*",q);OMa=u([0,0,6488,6490,40],"*",q);u(1,"void*",q);$W=u([0,0,6492,6494,40,40,40],"*",q);u(1,"void*",q);D.qc=u([51,48,98,116,65,99,116,105,118,97,116,105,110,103,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);D.fb=u([50,48,98,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);k5=u(2,"*",q);l5=u(3,"*",q);fNa=u([0,0,6496,6498,6500,6502,6504,6506,6508,6510,6512,6514,6516,6518,6520,6522],"*",q);u(1,"void*",q);kNa=u([0,0,6524,6526,6528,6530,6532,6534,6536,6538,6540,6542,6544,6546,6548,6550],"*",q);u(1,"void*",q);D.Da=u([49,55,98,116,51,50,66,105,116,65,120,105,115,83,119,101,101,112,51,0],"i8",q);D.cb=u([50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,106,69,0],"i8",q);D.lb=u([50,49,98,116,66,114,111,97,100,112,104,97,115,101,73,110,116,101,114,102,97,99,101,0],"i8",q);m5=u(2,"*",q);n5=u(3,"*",q);o5=u(3,"*",q);D.Q=u([49,50,98,116,65,120,105,115,83,119,101,101,112,51,0],"i8",q);D.eb=u([50,48,98,116,65,120,105,115,83,119,101,101,112,51,73,110,116,101,114,110,97,108,73,116,69,0],"i8",q);p5=u(3,"*",q);q5=u(3,"*",q);cX=u([0,0,6552,6554,6500,6502,6504,6506,6508,6510,6512,6514,6516,6518,6520,6522],"*",q);u(1,"void*",q);fX=u([0,0,6556,6558,6528,6530,6532,6534,6536,6538,6540,6542,6544,6546,6548,6550],"*",q);u(1,"void*",q);vX=u([0,0,6560,6562,6564,6566,6568,6570,6572,6574,6576,6578,6580,6582,6584,6586,6588,6590,6592],"*",q);u(1,"void*",q);D.oa=u([49,53,98,116,78,117,108,108,80,97,105,114,67,97,99,104,101,0],"i8",q);D.zb=u([50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0],"i8",q);D.$b=u([50,53,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,108,108,98,97,99,107,0],"i8",q);r5=u(2,"*",q);s5=u(3,"*",q);t5=u(3,"*",q);aOa=u([0,0,6594,6596,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"*",q);u(1,"void*",q);tOa=u([0,0,6598,6600,40,40,40],"*",q);u(1,"void*",q);XNa=u([0,0,6602,6604,40,40,40,40,40,40,40,40,40,40,6606,40],"*",q);u(1,"void*",q);zX=u([0,0,6608,6610,6612,6614,6616],"*",q);u(1,"void*",q);JOa=u([2],"i32",q);D.rc=u([51,48,98,116,66,111,120,50,100,66,111,120,50,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);u5=u(3,"*",q);jub=u([0,0,6618,6620,6622,6624,6626,6628,6630,6632,6634,6636,6638,6640,6642,6644,6646,6648,6650,6652,6654,6656,6658,6660,6662,6664,6666,6668,6670,6672,6674,6676],"*",q);u(1,"void*",q);D.R=u([49,50,98,116,66,111,120,50,100,83,104,97,112,101,0],"i8",q);v5=u(3,"*",q);D.nf=u([98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0],"i8",q);D.Nd=u([66,111,120,50,100,0],"i8",q);IX=u([0,0,6678,6680,6682,6684,6686],"*",q);u(1,"void*",q);D.dc=u([50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);w5=u(3,"*",q);APa=u([0,0,6688,6690,6692],"*",q);u(1,"void*",q);D.ra=u([49,54,98,116,66,111,120,66,111,120,68,101,116,101,99,116,111,114,0],"i8",q);x5=u(3,"*",q);nLa=u([0,0,6694,6696,6698,6624,6626,6628,6700,6632,6702,6704,6706,6640,6642,6644,6646,6708,6710,6712,6654,6714,6716,6660,6718,6720,6722,6724,6726,6728,6730,6732],"*",q);u(1,"void*",q);D.N=u([49,48,98,116,66,111,120,83,104,97,112,101,0],"i8",q);y5=u(3,"*",q);D.Sd=u([66,111,120,0],"i8",q);OX=u([0,0,6734,6736,6738,6624,6626,6628,6740,6742,6744,6746,6748,6750,6752,6754,6646,6756,6758,6760,6762,6764],"*",q);u(1,"void*",q);D.me=u([98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0],"i8",q);D.vb=u([50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0],"i8",q);z5=u(3,"*",q);D.Vd=u([66,86,72,84,82,73,65,78,71,76,69,77,69,83,72,0],"i8",q);rQa=u([0,0,6766,6768,6770],"*",q);u(1,"void*",q);D.Jd=u([90,78,75,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0],"i8",q);D.pb=u([50,49,98,116,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0],"i8",q);A5=u(2,"*",q);B5=u(3,"*",q);eQa=u([0,0,6772,6774,40],"*",q);u(1,"void*",q);xQa=u([0,0,6776,6778,6780],"*",q);u(1,"void*",q);D.yd=u([90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,55,112,101,114,102,111,114,109,67,111,110,118,101,120,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,83,52,95,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0],"i8",q);C5=u(3,"*",q);BQa=u([0,0,6782,6784,6786],"*",q);u(1,"void*",q);D.xd=u([90,78,50,50,98,116,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,52,112,101,114,102,111,114,109,82,97,121,99,97,115,116,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0],"i8",q);D5=u(3,"*",q);RX=u([0,0,6788,6790,6792,6624,6626,6628,6794,6632,6796,6798,6800,6640,6802,6804,6646,6806,6808,6810,6654,6812,6814],"*",q);u(1,"void*",q);IQa=u([0,0,6816,6818,6792,6624,6626,6628,6794,6632,6796,6820,6800,6640,6802,6804,6646,6806,6808,6810,6654,6812,6814],"*",q);u(1,"void*",q);SQa=u([0,0,6822,6824,6792,6624,6626,6628,6794,6632,6796,6826,6800,6640,6802,6804,6646,6806,6808,6810,6654,6812,6814],"*",q);u(1,"void*",q);D.ca=u([49,52,98,116,67,97,112,115,117,108,101,83,104,97,112,101,0],"i8",q);E5=u(3,"*",q);D.ia=u([49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,90,0],"i8",q);F5=u(3,"*",q);D.ha=u([49,53,98,116,67,97,112,115,117,108,101,83,104,97,112,101,88,0],"i8",q);G5=u(3,"*",q);D.Ne=u([67,97,112,115,117,108,101,88,0],"i8",q);D.ee=u([67,97,112,115,117,108,101,90,0],"i8",q);D.Ae=u([98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0],"i8",q);D.Ve=u([67,97,112,115,117,108,101,83,104,97,112,101,0],"i8",q);RQa=u([0,0,6828,6830,40,40,40],"*",q);u(1,"void*",q);UX=u(1,"i32",q);SX=u([0,0,6832,6834,6836,6838,6840,6842,6844,6846,6848,6850,6852,6854,6856,6858,6860,6862],"*",q);u(1,"void*",q);D.mb=u([50,49,98,116,67,111,108,108,105,115,105,111,110,68,105,115,112,97,116,99,104,101,114,0],"i8",q);H5=u(3,"*",q);FRa=u([0,0,6864,6866,6868],"*",q);u(1,"void*",q);D.Db=u([50,51,98,116,67,111,108,108,105,115,105,111,110,80,97,105,114,67,97,108,108,98,97,99,107,0],"i8",q);D.Ja=u([49,55,98,116,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0],"i8",q);I5=u(2,"*",q);J5=u(3,"*",q);lRa=u([0,0,6870,6872,40],"*",q);u(1,"void*",q);KRa=u([0,0,6874,6876,6878,6880,6882,6884,6886],"*",q);u(1,"void*",q);D.bf=u([98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0],"i8",q);D.Fa=u([49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,0],"i8",q);K5=u(2,"*",q);D.jf=u([98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0],"i8",q);tVa=u([0,0,6888,6890,40,6624,6626,6628,40,40,40,40,40,40,6892,6894,6646],"*",q);u(1,"void*",q);D.sa=u([49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0],"i8",q);L5=u(2,"*",q);bY=u([0,0,6896,6898,6900,6902,6904,6906,6908,6910,6912,6914,6916,6918],"*",q);u(1,"void*",q);aSa=u(1,"i1",q);D.pf=u([79,118,101,114,102,108,111,119,32,105,110,32,65,65,66,66,44,32,111,98,106,101,99,116,32,114,101,109,111,118,101,100,32,102,114,111,109,32,115,105,109,117,108,97,116,105,111,110,0],"i8",q);D.oe=u([73,102,32,121,111,117,32,99,97,110,32,114,101,112,114,111,100,117,99,101,32,116,104,105,115,44,32,112,108,101,97,115,101,32,101,109,97,105,108,32,98,117,103,115,64,99,111,110,116,105,110,117,111,117,115,112,104,121,115,105,99,115,46,99,111,109,10,0],"i8",q);D.Fe=u([80,108,101,97,115,101,32,105,110,99,108,117,100,101,32,97,98,111,118,101,32,105,110,102,111,114,109,97,116,105,111,110,44,32,121,111,117,114,32,80,108,97,116,102,111,114,109,44,32,118,101,114,115,105,111,110,32,111,102,32,79,83,46,10,0],"i8",q);D.Pe=u([84,104,97,110,107,115,46,10,0],"i8",q);D.Ye=u([117,112,100,97,116,101,65,97,98,98,115,0],"i8",q);D.$e=u([112,101,114,102,111,114,109,68,105,115,99,114,101,116,101,67,111,108,108,105,115,105,111,110,68,101,116,101,99,116,105,111,110,0],"i8",q);D.hf=u([99,97,108,99,117,108,97,116,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,0],"i8",q);D.sf=u([100,105,115,112,97,116,99,104,65,108,108,67,111,108,108,105,115,105,111,110,80,97,105,114,115,0],"i8",q);D.tf=u([99,111,110,118,101,120,83,119,101,101,112,67,111,109,112,111,117,110,100,0],"i8",q);D.zf=u([99,111,110,118,101,120,83,119,101,101,112,84,101,115,116,0],"i8",q);D.ta=u([49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,0],"i8",q);M5=u(2,"*",q);GY=u([0,0,6920,6922,6924,6926,-4,0,6928,6930,6932],"*",q);u(1,"void*",q);D.Ca=u([49,55,68,101,98,117,103,68,114,97,119,99,97,108,108,98,97,99,107,0],"i8",q);N5=u([0,0,0,2,0,2,0,1026],"* * i32 i32 * i32 * i32".split(" "),q);ETa=u([0,0,6934,6936,6938,6940,6942],"*",q);u(1,"void*",q);D.Bb=u([50,51,98,116,66,114,105,100,103,101,100,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0],"i8",q);O5=u(3,"*",q);HTa=u([0,0,6944,6946,6948],"*",q);u(1,"void*",q);D.Nb=u([50,51,98,116,83,105,110,103,108,101,67,111,110,116,97,99,116,67,97,108,108,98,97,99,107,0],"i8",q);D.Pb=u([50,52,98,116,66,114,111,97,100,112,104,97,115,101,65,97,98,98,67,97,108,108,98,97,99,107,0],"i8",q);P5=u(2,"*",q);Q5=u(3,"*",q);vTa=u([0,0,6950,6952,40],"*",q);u(1,"void*",q);NTa=u([0,0,6954,6956,6958],"*",q);u(1,"void*",q);D.rb=u([50,49,98,116,83,105,110,103,108,101,83,119,101,101,112,67,97,108,108,98,97,99,107,0],"i8",q);D.Cb=u([50,51,98,116,66,114,111,97,100,112,104,97,115,101,82,97,121,67,97,108,108,98,97,99,107,0],"i8",q);R5=u(3,"*",q);S5=u(3,"*",q);OTa=u([0,0,6960,6962,40],"*",q);u(1,"void*",q);VTa=u([0,0,6964,6966,6968],"*",q);u(1,"void*",q);D.$a=u([49,57,98,116,83,105,110,103,108,101,82,97,121,67,97,108,108,98,97,99,107,0],"i8",q);T5=u(3,"*",q);ZTa=u([0,0,6970,6972,6974,6976],"*",q);u(1,"void*",q);D.sd=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,53,95,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,49,52,76,111,99,97,108,73,110,102,111,65,100,100,101,114,95,49,0],"i8",q);U5=u(3,"*",q);eUa=u([0,0,6978,6980,6982,6984],"*",q);u(1,"void*",q);D.ud=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,53,95,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0],"i8",q);V5=u(3,"*",q);iUa=u([0,0,6986,6988,6982,6990],"*",q);u(1,"void*",q);D.td=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,55,111,98,106,101,99,116,81,117,101,114,121,83,105,110,103,108,101,69,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,53,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,53,95,82,78,83,95,50,48,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,102,69,51,50,66,114,105,100,103,101,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0],"i8",q);W5=u(3,"*",q);RTa=u([0,0,6992,6994,40],"*",q);u(1,"void*",q);D.uc=u([51,48,98,116,67,111,110,118,101,120,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0],"i8",q);X5=u(2,"*",q);qUa=u([0,0,6996,6998,7e3,7002],"*",q);u(1,"void*",q);D.od=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,51,114,97,121,84,101,115,116,83,105,110,103,108,101,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,50,95,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,49,53,76,111,99,97,108,73,110,102,111,65,100,100,101,114,50,0],"i8",q);Y5=u(3,"*",q);GUa=u([0,0,7004,7006,7008,7010,7012,7014,7016],"*",q);u(1,"void*",q);D.rd=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,51,114,97,121,84,101,115,116,83,105,110,103,108,101,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,50,95,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,57,82,97,121,84,101,115,116,101,114,95,49,0],"i8",q);D.jd=u([78,54,98,116,68,98,118,116,56,73,67,111,108,108,105,100,101,69,0],"i8",q);Z5=u(2,"*",q);a6=u(3,"*",q);yUa=u([0,0,7018,7020,7008,7022,7012,7014,7016],"*",q);u(1,"void*",q);OUa=u([0,0,7024,7026,7028,7030],"*",q);u(1,"void*",q);D.qd=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,51,114,97,121,84,101,115,116,83,105,110,103,108,101,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,50,95,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,95,48,0],"i8",q);b6=u(3,"*",q);VUa=u([0,0,7032,7034,7028,7036],"*",q);u(1,"void*",q);D.pd=u([90,78,49,54,98,116,67,111,108,108,105,115,105,111,110,87,111,114,108,100,49,51,114,97,121,84,101,115,116,83,105,110,103,108,101,69,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,50,95,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,80,75,49,54,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,83,50,95,82,78,83,95,49,55,82,97,121,82,101,115,117,108,116,67,97,108,108,98,97,99,107,69,69,50,57,66,114,105,100,103,101,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0],"i8",q);c6=u(3,"*",q);ZUa=u([0,0,7038,7040,7042,7044,7046],"*",q);u(1,"void*",q);D.Lc=u([78,49,50,98,116,67,111,110,118,101,120,67,97,115,116,49,48,67,97,115,116,82,101,115,117,108,116,69,0],"i8",q);d6=u(2,"*",q);OY=u([0,0,7048,7050,7052,7054,7056],"*",q);u(1,"void*",q);D.ic=u([50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);e6=u(3,"*",q);AVa=u([0,0,7058,7060,7008,7062,7012,7014,7016],"*",q);u(1,"void*",q);D.wb=u([50,50,98,116,67,111,109,112,111,117,110,100,76,101,97,102,67,97,108,108,98,97,99,107,0],"i8",q);f6=u(3,"*",q);VY=u([0,0,7064,7066,7068,6624,6626,6628,7070,7072,7074,7076,7078,7080,7082,7084,6646,7086,7088],"*",q);u(1,"void*",q);D.Af=u([98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,67,104,105,108,100,68,97,116,97,0],"i8",q);D.qe=u([98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,68,97,116,97,0],"i8",q);D.ja=u([49,53,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,0],"i8",q);g6=u(3,"*",q);D.He=u([67,111,109,112,111,117,110,100,0],"i8",q);gWa=u([0,0,7090,7092,40,6624,6626,6628,40,40,40,40,6748,6750,6892,6894,6646,40],"*",q);u(1,"void*",q);D.da=u([49,52,98,116,67,111,110,99,97,118,101,83,104,97,112,101,0],"i8",q);h6=u(3,"*",q);jWa=u([0,0,7094,7096,7098,6624,6626,6628,7100,6632,7102,7104,7106,6640,6642,6644,6646,7108,7110,7112,6654,6812,6814],"*",q);u(1,"void*",q);kWa=u([0,0,7114,7116,7098,6624,6626,6628,7100,6632,7102,7104,7106,6640,6642,6644,6646,7108,7110,7112,6654,6812,6814],"*",q);u(1,"void*",q);lWa=u([0,0,7118,7120,7098,6624,6626,6628,7100,6632,7102,7104,7106,6640,6642,6644,6646,7108,7110,7112,6654,6812,6814],"*",q);u(1,"void*",q);D.O=u([49,49,98,116,67,111,110,101,83,104,97,112,101,0],"i8",q);i6=u(3,"*",q);D.S=u([49,50,98,116,67,111,110,101,83,104,97,112,101,88,0],"i8",q);j6=u(3,"*",q);D.T=u([49,50,98,116,67,111,110,101,83,104,97,112,101,90,0],"i8",q);k6=u(3,"*",q);D.Pd=u([67,111,110,101,0],"i8",q);eZ=u([0,0,7122,7124,7126],"*",q);u(1,"void*",q);D.fc=u([50,55,98,116,67,111,110,116,105,110,117,111,117,115,67,111,110,118,101,120,67,111,108,108,105,115,105,111,110,0],"i8",q);l6=u(3,"*",q);GWa=u([0,0,7128,7130,7132,7134,7136],"*",q);u(1,"void*",q);D.za=u([49,54,98,116,80,111,105,110,116,67,111,108,108,101,99,116,111,114,0],"i8",q);m6=u(3,"*",q);KWa=u([0,0,7138,7140,7142],"*",q);u(1,"void*",q);jZ=u([0,0,7144,7146,7148,7150,7152],"*",q);u(1,"void*",q);D.gc=u([50,55,98,116,67,111,110,118,101,120,50,100,67,111,110,118,101,120,50,100,65,108,103,111,114,105,116,104,109,0],"i8",q);n6=u(3,"*",q);D.Zc=u([78,50,55,98,116,67,111,110,118,101,120,50,100,67,111,110,118,101,120,50,100,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);o6=u(3,"*",q);YWa=u([0,0,7154,7156,7158,6624,6626,6628,7160,7162,7164,7166,7168,7170,6892,6894,6646,7172,7174,7176,7178,7180,7182],"*",q);u(1,"void*",q);D.ka=u([49,53,98,116,67,111,110,118,101,120,50,100,83,104,97,112,101,0],"i8",q);p6=u(3,"*",q);D.Zd=u([67,111,110,118,101,120,50,100,83,104,97,112,101,0],"i8",q);fWa=u([0,0,7184,7186,40],"*",q);u(1,"void*",q);D.U=u([49,50,98,116,67,111,110,118,101,120,67,97,115,116,0],"i8",q);q6=u(2,"*",q);pZ=u([0,0,7188,7190,7192,7194,7196],"*",q);u(1,"void*",q);rZ=u([0,0,7198,7200,7202],"*",q);u(1,"void*",q);D.Cc=u([51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);r6=u(3,"*",q);D.Rb=u([50,52,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0],"i8",q);s6=u(3,"*",q);BXa=u([0,0,7204,7206,7208],"*",q);u(1,"void*",q);D.Gd=u([90,78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,50,49,99,97,108,99,117,108,97,116,101,84,105,109,101,79,102,73,109,112,97,99,116,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,51,49,76,111,99,97,108,84,114,105,97,110,103,108,101,83,112,104,101,114,101,67,97,115,116,67,97,108,108,98,97,99,107,0],"i8",q);t6=u(3,"*",q);JXa=u([0,0,7210,7212,7214,6624,6626,6628,7216,6632,7218,7220,7106,6640,6642,6644,6646,6806,7222,7224,6654,7226,7228,6660,7230,7232,7234,7236,7238,7240,7242,7244],"*",q);u(1,"void*",q);D.pa=u([49,53,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,0],"i8",q);u6=u(3,"*",q);D.Qd=u([84,114,105,97,110,103,108,101,0],"i8",q);VXa=u([0,0,7246,7248,7250],"*",q);u(1,"void*",q);uZ=u([0,0,7252,7254,7256,7258,7260],"*",q);u(1,"void*",q);rYa=u(1,"i8",q);D.Fb=u([50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,0],"i8",q);v6=u(3,"*",q);D.Wc=u([78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);w6=u(3,"*",q);uYa=u([0,0,7262,7264,6938,6940,7266],"*",q);u(1,"void*",q);D.Tb=u([50,52,98,116,80,101,114,116,117,114,98,101,100,67,111,110,116,97,99,116,82,101,115,117,108,116,0],"i8",q);x6=u(3,"*",q);yYa=u([0,0,7268,7270,7272,7274,7276],"*",q);u(1,"void*",q);D.zd=u([90,78,50,51,98,116,67,111,110,118,101,120,67,111,110,118,101,120,65,108,103,111,114,105,116,104,109,49,54,112,114,111,99,101,115,115,67,111,108,108,105,115,105,111,110,69,80,49,55,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,83,49,95,82,75,49,54,98,116,68,105,115,112,97,116,99,104,101,114,73,110,102,111,80,49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,69,49,51,98,116,68,117,109,109,121,82,101,115,117,108,116,0],"i8",q);y6=u(3,"*",q);wZ=u([0,0,7278,7280,7282,6624,6626,6628,7284,6632,7286,7288,7106,6640,7290,7292,6646,7294,7296,7298,6654,6812,6814,6660,7300,7302,7304,7306,7308,7310,7312],"*",q);u(1,"void*",q);D.Rd=u([98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,68,97,116,97,0],"i8",q);D.Ga=u([49,55,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,0],"i8",q);z6=u(3,"*",q);D.re=u([67,111,110,118,101,120,0],"i8",q);QYa=u([0,0,7314,7316,7098,6624,6626,6628,7216,6632,40,40,7106,6640,6642,6644,6646,6806,40,40,6654,6812,6814],"*",q);u(1,"void*",q);UYa=u([0,0,7318,7320,7322,6624,6626,6628,7324,6632,40,40,7106,6640,6642,6644,6646,6806,40,40,6654,6812,6814],"*",q);u(1,"void*",q);yZ=u(24,"float",q);$Ya=u(1,"i64",q);D.ob=u([50,49,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,0],"i8",q);A6=u(3,"*",q);D.Ac=u([51,50,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,65,97,98,98,67,97,99,104,105,110,103,83,104,97,112,101,0],"i8",q);B6=u(3,"*",q);AZ=u([0,0,7326,7328,7330,7332,7334],"*",q);u(1,"void*",q);D.xc=u([51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);C6=u(3,"*",q);kub=u([0,0,7336,7338,7282,6624,6626,6628,7340,6632,7286,7342,7106,6640,6642,6644,6646,7344,7346,7348,6654,6812,6814,6660,7350,7352,7354,7356,7358,7360,7362],"*",q);u(1,"void*",q);D.Gb=u([50,51,98,116,67,111,110,118,101,120,80,111,105,110,116,67,108,111,117,100,83,104,97,112,101,0],"i8",q);D6=u(3,"*",q);D.Td=u([67,111,110,118,101,120,80,111,105,110,116,67,108,111,117,100,0],"i8",q);CZ=u([0,0,7364,7366],"*",q);u(1,"void*",q);D.Na=u([49,56,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,0],"i8",q);E6=u(2,"*",q);r_a=u([0,0,7368,7370,40,6624,6626,6628,40,40,40,40,40,40,6892,6894,6646,40,40,40,40,40,40],"*",q);u(1,"void*",q);D.Y=u([49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,0],"i8",q);F6=u(3,"*",q);Q_a=u([0,0,7372,7374,7282,6624,6626,6628,7376,7378,7286,7380,7106,6640,6642,6644,6646,7382,7384,7386,6654,6812,6814,6660,7388,7390,7392,7394,7396,7398,7400],"*",q);u(1,"void*",q);D.Wb=u([50,53,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0],"i8",q);G6=u(3,"*",q);D.Wd=u([67,111,110,118,101,120,84,114,105,109,101,115,104,0],"i8",q);lub=u([0,0,7402,7404,7406],"*",q);u(1,"void*",q);D.Ld=u([90,78,75,50,53,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,51,49,99,97,108,99,117,108,97,116,101,80,114,105,110,99,105,112,97,108,65,120,105,115,84,114,97,110,115,102,111,114,109,69,82,49,49,98,116,84,114,97,110,115,102,111,114,109,82,57,98,116,86,101,99,116,111,114,51,82,102,69,49,53,73,110,101,114,116,105,97,67,97,108,108,98,97,99,107,95,48,0],"i8",q);H6=u(3,"*",q);mub=u([0,0,7408,7410,7412],"*",q);u(1,"void*",q);D.Kd=u([90,78,75,50,53,98,116,67,111,110,118,101,120,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,51,49,99,97,108,99,117,108,97,116,101,80,114,105,110,99,105,112,97,108,65,120,105,115,84,114,97,110,115,102,111,114,109,69,82,49,49,98,116,84,114,97,110,115,102,111,114,109,82,57,98,116,86,101,99,116,111,114,51,82,102,69,49,52,67,101,110,116,101,114,67,97,108,108,98,97,99,107,0],"i8",q);I6=u(3,"*",q);X_a=u([0,0,7414,7416,7418],"*",q);u(1,"void*",q);D.cc=u([50,54,76,111,99,97,108,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0],"i8",q);J6=u(3,"*",q);$_a=u([0,0,7420,7422,7424,6624,6626,6628,7426,6632,7428,7430,7432,6640,7434,7436,6646,7438,7440,7442,6654,6812,6814,7444],"*",q);u(1,"void*",q);a0a=u([0,0,7446,7448,7424,6624,6626,6628,7426,6632,7428,7450,7432,6640,7434,7436,6646,7438,7452,7454,6654,6812,6814,7456],"*",q);u(1,"void*",q);b0a=u([0,0,7458,7460,7424,6624,6626,6628,7426,6632,7428,7462,7432,6640,7434,7436,6646,7438,7464,7466,6654,6812,6814,7468],"*",q);u(1,"void*",q);D.la=u([49,53,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,0],"i8",q);K6=u(3,"*",q);D.ua=u([49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,88,0],"i8",q);L6=u(3,"*",q);D.va=u([49,54,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,90,0],"i8",q);M6=u(3,"*",q);D.ne=u([67,121,108,105,110,100,101,114,90,0],"i8",q);D.Xd=u([67,121,108,105,110,100,101,114,88,0],"i8",q);D.te=u([98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0],"i8",q);D.Ue=u([67,121,108,105,110,100,101,114,89,0],"i8",q);n1a=u([0,0,7470,7472,7008,7474,7012,7014,7016],"*",q);u(1,"void*",q);D.gb=u([50,48,98,116,68,98,118,116,78,111,100,101,69,110,117,109,101,114,97,116,111,114,0],"i8",q);N6=u(3,"*",q);VZ=u(12,"float",q);X0a=u(1,"i64",q);d_=u([0,0,7476,7478,7480,7482,7484,7486,7488,7490,7492,7494,7496,7498,7500,7502],"*",q);u(1,"void*",q);D.wa=u([49,54,98,116,68,98,118,116,66,114,111,97,100,112,104,97,115,101,0],"i8",q);O6=u(3,"*",q);Z1a=u([0,0,7504,7506,7008,7508,7012,7014,7016],"*",q);u(1,"void*",q);D.bb=u([50,48,66,114,111,97,100,112,104,97,115,101,65,97,98,98,84,101,115,116,101,114,0],"i8",q);P6=u(3,"*",q);b2a=u([0,0,7510,7512,7008,7514,7012,7014,7016],"*",q);u(1,"void*",q);D.Xa=u([49,57,66,114,111,97,100,112,104,97,115,101,82,97,121,84,101,115,116,101,114,0],"i8",q);Q6=u(3,"*",q);e2a=u([0,0,7516,7518,7520,7522,7012,7014,7016],"*",q);u(1,"void*",q);D.Oa=u([49,56,98,116,68,98,118,116,84,114,101,101,67,111,108,108,105,100,101,114,0],"i8",q);R6=u(3,"*",q);j_=u([0,0,7524,7526,7528,7530,7532,7534,7536],"*",q);u(1,"void*",q);D.yc=u([51,49,98,116,68,101,102,97,117,108,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0],"i8",q);D.Qb=u([50,52,98,116,67,111,108,108,105,115,105,111,110,67,111,110,102,105,103,117,114,97,116,105,111,110,0],"i8",q);S6=u(2,"*",q);T6=u(3,"*",q);D2a=u([0,0,7538,7540,7542],"*",q);u(1,"void*",q);D.cd=u([78,51,49,98,116,67,111,110,118,101,120,80,108,97,110,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);U6=u(3,"*",q);H2a=u([0,0,7544,7546,7548],"*",q);u(1,"void*",q);D.Yc=u([78,50,54,98,116,66,111,120,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);V6=u(3,"*",q);L2a=u([0,0,7550,7552,7554],"*",q);u(1,"void*",q);D.gd=u([78,51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);W6=u(3,"*",q);Q2a=u([0,0,7556,7558,7560],"*",q);u(1,"void*",q);D.dd=u([78,51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);X6=u(3,"*",q);U2a=u([0,0,7562,7564,7566],"*",q);u(1,"void*",q);D.Sc=u([78,49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);Y6=u(3,"*",q);Z2a=u([0,0,7568,7570,7572],"*",q);u(1,"void*",q);D.bd=u([78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);Z6=u(3,"*",q);c3a=u([0,0,7574,7576,7578],"*",q);u(1,"void*",q);D.ad=u([78,50,56,98,116,67,111,109,112,111,117,110,100,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);a7=u(3,"*",q);g3a=u([0,0,7580,7582,7584],"*",q);u(1,"void*",q);D.fd=u([78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,55,83,119,97,112,112,101,100,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);b7=u(3,"*",q);s3a=u([0,0,7586,7588,7590],"*",q);u(1,"void*",q);D.ed=u([78,51,51,98,116,67,111,110,118,101,120,67,111,110,99,97,118,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);c7=u(3,"*",q);j2a=u([0,0,7592,7594,40,40,40,40],"*",q);u(1,"void*",q);QQa=u([0,0,7596,7598,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"*",q);u(1,"void*",q);D.V=u([49,50,98,116,68,105,115,112,97,116,99,104,101,114,0],"i8",q);d7=u(2,"*",q);A3a=u([0,0,7600,7602,7604,7606,7608],"*",q);u(1,"void*",q);D.xa=u([49,54,98,116,69,109,112,116,121,65,108,103,111,114,105,116,104,109,0],"i8",q);e7=u(3,"*",q);E3a=u([0,0,7610,7612,7614,6624,6626,6628,7616,7618,7620,7622,6748,6750,6892,6894,6646,7624],"*",q);u(1,"void*",q);D.W=u([49,50,98,116,69,109,112,116,121,83,104,97,112,101,0],"i8",q);f7=u(3,"*",q);D.se=u([69,109,112,116,121,0],"i8",q);r_=u([0,0,7626,7628,7630,7632,7634],"*",q);u(1,"void*",q);u(2,["*","i8"],q);u(1,"i64",q);D.hc=u([50,55,98,116,71,73,109,112,97,99,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);g7=u(3,"*",q);nub=u([0,0,4,7636,7638],"*",q);u(1,"void*",q);D.$c=u([78,50,55,98,116,71,73,109,112,97,99,116,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,49,48,67,114,101,97,116,101,70,117,110,99,69,0],"i8",q);h7=u(3,"*",q);j5a=u([0,0,7640,7642,7644],"*",q);u(1,"void*",q);D.Yb=u([50,53,98,116,71,73,109,112,97,99,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0],"i8",q);i7=u(3,"*",q);H_=u([0,0,7646,7648,7650,6624,6626,6628,7216,6632,7218,7220,7106,6640,6642,6644,6646,6806,7222,7224,6654,7226,7228,6660,7230,7232,7234,7236,7238,7240,7242,7244],"*",q);u(1,"void*",q);D.Ka=u([49,55,98,116,84,114,105,97,110,103,108,101,83,104,97,112,101,69,120,0],"i8",q);j7=u(3,"*",q);z5a=u([0,0,7652,7654,7656],"*",q);u(1,"void*",q);D.Uc=u([78,49,56,71,73,77,95,83,104,97,112,101,82,101,116,114,105,101,118,101,114,49,57,84,101,116,114,97,83,104,97,112,101,82,101,116,114,105,101,118,101,114,69,0],"i8",q);D.Tc=u([78,49,56,71,73,77,95,83,104,97,112,101,82,101,116,114,105,101,118,101,114,49,57,67,104,105,108,100,83,104,97,112,101,82,101,116,114,105,101,118,101,114,69,0],"i8",q);k7=u(2,"*",q);l7=u(3,"*",q);x5a=u([0,0,7658,7660,7662],"*",q);u(1,"void*",q);F5a=u([0,0,7664,7666,7668],"*",q);u(1,"void*",q);D.Vc=u([78,49,56,71,73,77,95,83,104,97,112,101,82,101,116,114,105,101,118,101,114,50,50,84,114,105,97,110,103,108,101,83,104,97,112,101,82,101,116,114,105,101,118,101,114,69,0],"i8",q);m7=u(3,"*",q);K5a=u([0,0,7670,7672,7674,6624,6626,6628,7676,6632,7286,7678,7106,6640,6642,6644,6646,6806,7680,7682,6654,6812,6814,6660,7684,7686,7688,7690,7692,7694,7696,7698],"*",q);u(1,"void*",q);D.jb=u([50,48,98,116,84,101,116,114,97,104,101,100,114,111,110,83,104,97,112,101,69,120,0],"i8",q);n7=u(3,"*",q);D.ue=u([98,116,66,85,95,83,105,109,112,108,101,120,49,116,111,52,0],"i8",q);D.we=u([98,116,71,73,109,112,97,99,116,77,101,115,104,83,104,97,112,101,68,97,116,97,0],"i8",q);y8a=u([0,0,7700,7702,7704,6624,6626,6628,7706,7708,7710,7712,7714,6750,6892,6894,6646,7716,7718,7720,7722,7724,7726,7728,7730,7732,7734,7736,7738,7740,7742,7744,7746,7748,7750,7752,7754],"*",q);u(1,"void*",q);D.xb=u([50,50,98,116,71,73,109,112,97,99,116,67,111,109,112,111,117,110,100,83,104,97,112,101,0],"i8",q);D.Ib=u([50,51,98,116,71,73,109,112,97,99,116,83,104,97,112,101,73,110,116,101,114,102,97,99,101,0],"i8",q);o7=u(3,"*",q);p7=u(3,"*",q);oub=u([0,0,7756,7758,7704,6624,6626,6628,7760,7762,7764,7766,7768,7770,6892,6894,6646,7772,7718,7720,7722,7774,7776,7778,7780,7782,7784,7786,7788,7790,7792,7794,7796,7798,7800,7802,7754],"*",q);u(1,"void*",q);D.yb=u([50,50,98,116,71,73,109,112,97,99,116,77,101,115,104,83,104,97,112,101,80,97,114,116,0],"i8",q);q7=u(3,"*",q);n8a=u([0,0,7804,7806,7704,6624,6626,6628,7808,7708,7810,7812,7814,6750,7816,7818,6646,7820,7822,7824,7722,7826,7828,7830,7832,7834,7836,7838,7840,7842,7844,7846,7848,7850,7852,7854,7856],"*",q);u(1,"void*",q);D.Pa=u([49,56,98,116,71,73,109,112,97,99,116,77,101,115,104,83,104,97,112,101,0],"i8",q);r7=u(3,"*",q);D.Yd=u([71,73,109,112,97,99,116,77,101,115,104,0],"i8",q);h8a=u([0,0,7858,7860,7704,6624,6626,6628,7706,7708,40,40,7714,6750,6892,6894,6646,7716,7718,7720,7722,40,40,40,40,40,40,40,40,7740,7742,7794,40,40,40,40,7754],"*",q);u(1,"void*",q);D.ve=u([71,73,109,112,97,99,116,77,101,115,104,83,104,97,112,101,80,97,114,116,0],"i8",q);D.Ke=u([71,73,109,112,97,99,116,67,111,109,112,111,117,110,100,0],"i8",q);X_=u([0,0,6874,7862,7864,6880,6882,6884,6886,7866,7868],"*",q);u(1,"void*",q);Z_=u([0,0,6874,7870,7872,6880,6882,6884,6886,7874,7876],"*",q);u(1,"void*",q);D.Z=u([49,51,98,116,71,104,111,115,116,79,98,106,101,99,116,0],"i8",q);s7=u(3,"*",q);D.Sb=u([50,52,98,116,80,97,105,114,67,97,99,104,105,110,103,71,104,111,115,116,79,98,106,101,99,116,0],"i8",q);t7=u(3,"*",q);J8a=u([0,0,7878,7880,7882],"*",q);u(1,"void*",q);D.na=u([49,53,98,116,71,106,107,67,111,110,118,101,120,67,97,115,116,0],"i8",q);u7=u(3,"*",q);g9a=u([1,2,0],"i32",q);h9a=u([2,0,1],"i32",q);k9a=u([1,2,0],"i32",q);j9a=u([1,2,0],"i32",q);lUa=u([0,0,10,7884,7886],"*",q);u(1,"void*",q);D.vc=u([51,48,98,116,71,106,107,69,112,97,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0],"i8",q);v7=u(3,"*",q);u9a=u(1,"i32",q);p9a=u(1,"i32",q);l0=u([0,0,7888,7890,7892],"*",q);u(1,"void*",q);D.Ha=u([49,55,98,116,71,106,107,80,97,105,114,68,101,116,101,99,116,111,114,0],"i8",q);w7=u(3,"*",q);m0=u([0,0,7894,7896,7898,6624,6626,6628,7900,7902,7904,7906,6748,6750,6892,6894,6646,7908,7910],"*",q);u(1,"void*",q);D.Zb=u([50,53,98,116,72,101,105,103,104,116,102,105,101,108,100,84,101,114,114,97,105,110,83,104,97,112,101,0],"i8",q);x7=u(3,"*",q);D.Be=u([72,69,73,71,72,84,70,73,69,76,68,0],"i8",q);pub=u([0,0,7912,7914,7916],"*",q);u(1,"void*",q);D.Eb=u([50,51,98,116,67,111,110,110,101,99,116,105,118,105,116,121,80,114,111,99,101,115,115,111,114,0],"i8",q);y7=u(3,"*",q);V9a=u(1,"i1 (%class.btManifoldPoint*, %class.btCollisionObject*, i32, i32, %class.btCollisionObject*, i32, i32)*",q);HW=u([0,0,7918,7920,6938,6940,7922],"*",q);u(1,"void*",q);D.ya=u([49,54,98,116,77,97,110,105,102,111,108,100,82,101,115,117,108,116,0],"i8",q);z7=u(3,"*",q);r0=u(248,"float",q);$9a=u(1,"i64",q);w3a=u([0,0,12,7924,7926],"*",q);u(1,"void*",q);D.Dc=u([51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,0],"i8",q);A7=u(3,"*",q);j$a=u([0,0,7928,7930,7932,7934,7936],"*",q);u(1,"void*",q);D.Hd=u([90,78,51,51,98,116,77,105,110,107,111,119,115,107,105,80,101,110,101,116,114,97,116,105,111,110,68,101,112,116,104,83,111,108,118,101,114,49,50,99,97,108,99,80,101,110,68,101,112,116,104,69,82,50,50,98,116,86,111,114,111,110,111,105,83,105,109,112,108,101,120,83,111,108,118,101,114,80,75,49,51,98,116,67,111,110,118,101,120,83,104,97,112,101,83,52,95,82,75,49,49,98,116,84,114,97,110,115,102,111,114,109,83,55,95,82,57,98,116,86,101,99,116,111,114,51,83,57,95,83,57,95,80,49,50,98,116,73,68,101,98,117,103,68,114,97,119,80,49,50,98,116,83,116,97,99,107,65,108,108,111,99,69,50,48,98,116,73,110,116,101,114,109,101,100,105,97,116,101,82,101,115,117,108,116,0],"i8",q);B7=u(3,"*",q);n$a=u([0,0,7938,7940,7098,6624,6626,6628,7216,6632,7942,7944,7106,7946,6642,6644,6646,6806,7948,7950,6654,6812,6814],"*",q);u(1,"void*",q);D.Za=u([49,57,98,116,77,105,110,107,111,119,115,107,105,83,117,109,83,104,97,112,101,0],"i8",q);C7=u(3,"*",q);D.ae=u([77,105,110,107,111,119,115,107,105,83,117,109,0],"i8",q);L$a=u([0,0,7952,7954,7956,7958,7960,7962,7964,40,7966,7968,7970,7972,7974,7976],"*",q);u(1,"void*",q);$$a=u(1,"i8",q);D.ib=u([50,48,98,116,77,117,108,116,105,83,97,112,66,114,111,97,100,112,104,97,115,101,0],"i8",q);D7=u(3,"*",q);Dab=u([0,0,7978,7980,7982],"*",q);u(1,"void*",q);D.vd=u([90,78,50,48,98,116,77,117,108,116,105,83,97,112,66,114,111,97,100,112,104,97,115,101,55,115,101,116,65,97,98,98,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,50,49,77,121,78,111,100,101,79,118,101,114,108,97,112,67,97,108,108,98,97,99,107,0],"i8",q);E7=u(3,"*",q);qub=u([0,0,7984,7986,7988],"*",q);u(1,"void*",q);D.wd=u([90,78,50,48,98,116,77,117,108,116,105,83,97,112,66,114,111,97,100,112,104,97,115,101,67,49,69,105,80,50,50,98,116,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,69,51,49,98,116,77,117,108,116,105,83,97,112,79,118,101,114,108,97,112,70,105,108,116,101,114,67,97,108,108,98,97,99,107,0],"i8",q);D.Kb=u([50,51,98,116,79,118,101,114,108,97,112,70,105,108,116,101,114,67,97,108,108,98,97,99,107,0],"i8",q);F7=u(2,"*",q);G7=u(3,"*",q);rub=u([0,0,7990,7992,40],"*",q);u(1,"void*",q);A0=u([0,0,7994,7996,7322,6624,6626,6628,7324,6632,7998,8e3,7106,6640,8002,8004,6646,6806,8006,8008,6654,6812,6814],"*",q);u(1,"void*",q);D.Ee=u([98,116,80,111,115,105,116,105,111,110,65,110,100,82,97,100,105,117,115,0],"i8",q);D.be=u([98,116,77,117,108,116,105,83,112,104,101,114,101,83,104,97,112,101,68,97,116,97,0],"i8",q);D.Ra=u([49,56,98,116,77,117,108,116,105,83,112,104,101,114,101,83,104,97,112,101,0],"i8",q);H7=u(3,"*",q);D.xe=u([77,117,108,116,105,83,112,104,101,114,101,0],"i8",q);Tab=u([0,0,8010,8012,8014,8016,8018,8020,8022,8024],"*",q);u(1,"void*",q);D.ea=u([49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,0],"i8",q);I7=u(3,"*",q);vbb=u([0,0,8026,8028,8030],"*",q);u(1,"void*",q);D.md=u([90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,48,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,95,48,0],"i8",q);J7=u(3,"*",q);Abb=u([0,0,8032,8034,8036],"*",q);u(1,"void*",q);D.nd=u([90,78,49,52,98,116,79,112,116,105,109,105,122,101,100,66,118,104,53,98,117,105,108,100,69,80,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,98,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,50,57,81,117,97,110,116,105,122,101,100,78,111,100,101,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0],"i8",q);K7=u(3,"*",q);nX=u(1,"i32",q);W0=u(1,"i32",q);Y0=u(1,"i32",q);Mbb=u(1,"i32",q);U0=u([0,0,8038,8040,8042,8044,8046,8048,8050,8052,8054,8056,8058,8060,8062,8064,8066,8068,8070],"*",q);u(1,"void*",q);Z0=u([0,0,8072,8074,8076,8078,8080,8082,8084,8086,8088,8090,8092,8094,8096,8098,8100,8102,8104],"*",q);u(1,"void*",q);D.jc=u([50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0],"i8",q);L7=u(3,"*",q);D.lc=u([50,56,98,116,83,111,114,116,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,0],"i8",q);M7=u(3,"*",q);Dcb=u([0,0,8106,8108,8110],"*",q);u(1,"void*",q);D.Fd=u([90,78,50,56,98,116,83,111,114,116,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0],"i8",q);N7=u(3,"*",q);Gcb=u([0,0,8112,8114,8116],"*",q);u(1,"void*",q);D.Ed=u([90,78,50,56,98,116,83,111,114,116,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0],"i8",q);O7=u(3,"*",q);Kcb=u([0,0,8118,8120,8122],"*",q);u(1,"void*",q);D.Dd=u([90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,51,55,114,101,109,111,118,101,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,115,67,111,110,116,97,105,110,105,110,103,80,114,111,120,121,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,56,82,101,109,111,118,101,80,97,105,114,67,97,108,108,98,97,99,107,0],"i8",q);P7=u(3,"*",q);Ncb=u([0,0,8124,8126,8128],"*",q);u(1,"void*",q);D.Cd=u([90,78,50,56,98,116,72,97,115,104,101,100,79,118,101,114,108,97,112,112,105,110,103,80,97,105,114,67,97,99,104,101,49,57,99,108,101,97,110,80,114,111,120,121,70,114,111,109,80,97,105,114,115,69,80,49,55,98,116,66,114,111,97,100,112,104,97,115,101,80,114,111,120,121,80,49,50,98,116,68,105,115,112,97,116,99,104,101,114,69,49,55,67,108,101,97,110,80,97,105,114,67,97,108,108,98,97,99,107,0],"i8",q);Q7=u(3,"*",q);VX=u([.019999999552965164],"float",q);Qcb=u(1,"i1 (i8*)*",q);Scb=u(1,"i1 (%class.btManifoldPoint*, i8*, i8*)*",q);Ucb=u(1,"i32",q);D.Ie=u([46,46,47,46,46,47,115,114,99,47,66,117,108,108,101,116,67,111,108,108,105,115,105,111,110,47,78,97,114,114,111,119,80,104,97,115,101,67,111,108,108,105,115,105,111,110,47,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,116,97,99,116,67,108,105,112,112,105,110,103,46,99,112,112,0],"i8",q);D.Md=u([98,111,111,108,32,84,101,115,116,83,101,112,65,120,105,115,40,99,111,110,115,116,32,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,32,38,44,32,99,111,110,115,116,32,98,116,67,111,110,118,101,120,80,111,108,121,104,101,100,114,111,110,32,38,44,32,99,111,110,115,116,32,98,116,84,114,97,110,115,102,111,114,109,32,38,44,32,99,111,110,115,116,32,98,116,84,114,97,110,115,102,111,114,109,32,38,44,32,99,111,110,115,116,32,98,116,86,101,99,116,111,114,51,32,38,44,32,102,108,111,97,116,32,38,41,0],"i8",q);D.ce=u([100,48,62,61,48,46,48,102,0],"i8",q);D.ye=u([100,49,62,61,48,46,48,102,0],"i8",q);a1=u([0,0,8130,8132,7098,6624,6626,6628,7216,6632,7286,40,7106,6640,6642,6644,6646,6806,7680,7682,6654,6812,6814,6660,40,40,40,40,40,40,40],"*",q);u(1,"void*",q);tdb=u([0,0,8134,8136,7282,6624,6626,6628,7676,6632,7286,40,7106,6640,6642,6644,6646,6806,7680,7682,6654,6812,6814,6660,40,40,40,40,40,40,40],"*",q);u(1,"void*",q);c1=u(24,"float",q);sdb=u(1,"i64",q);D.Mb=u([50,51,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,83,104,97,112,101,0],"i8",q);R7=u(3,"*",q);D.Fc=u([51,52,98,116,80,111,108,121,104,101,100,114,97,108,67,111,110,118,101,120,65,97,98,98,67,97,99,104,105,110,103,83,104,97,112,101,0],"i8",q);S7=u(3,"*",q);f1=u([0,0,8138,8140,8014,8016,8018,8020,8022],"*",q);u(1,"void*",q);n1=u(1,"i32",q);D.Me=u([98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0],"i8",q);D.de=u([98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0],"i8",q);D.ze=u([98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0],"i8",q);D.Le=u([98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0],"i8",q);D.fa=u([49,52,98,116,81,117,97,110,116,105,122,101,100,66,118,104,0],"i8",q);T7=u(2,"*",q);aeb=u([0,0,8142,8144,7028,40],"*",q);u(1,"void*",q);geb=u([0,0,8146,8148,6982,40],"*",q);u(1,"void*",q);D.bc=u([50,53,98,116,84,114,105,97,110,103,108,101,82,97,121,99,97,115,116,67,97,108,108,98,97,99,107,0],"i8",q);U7=u(3,"*",q);D.mc=u([50,56,98,116,84,114,105,97,110,103,108,101,67,111,110,118,101,120,99,97,115,116,67,97,108,108,98,97,99,107,0],"i8",q);V7=u(3,"*",q);meb=u([0,0,8150,8152,8154,6624,6626,6628,8156,8158,8160,8162,6748,6750,8164,8166,6646,8168],"*",q);u(1,"void*",q);D.kc=u([50,56,98,116,83,99,97,108,101,100,66,118,104,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0],"i8",q);W7=u(3,"*",q);D.Qe=u([98,116,83,99,97,108,101,100,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0],"i8",q);D.fe=u([83,67,65,76,69,68,66,86,72,84,82,73,65,78,71,76,69,77,69,83,72,0],"i8",q);veb=u([0,0,8170,8172,8174],"*",q);u(1,"void*",q);D.Ub=u([50,52,98,116,83,99,97,108,101,100,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0],"i8",q);X7=u(3,"*",q);u(248,"float",q);u(1,"i64",q);A1=u([0,0,8176,8178,8180,8182,8184,8186,8188,8190,8192,8194,8196,8198,8200,8202],"*",q);u(1,"void*",q);D.Sa=u([49,56,98,116,83,105,109,112,108,101,66,114,111,97,100,112,104,97,115,101,0],"i8",q);Y7=u(3,"*",q);B1=u([0,0,8204,8206,8208,8210],"*",q);u(1,"void*",q);D.Re=u([105,115,108,97,110,100,85,110,105,111,110,70,105,110,100,65,110,100,81,117,105,99,107,83,111,114,116,0],"i8",q);D.ge=u([112,114,111,99,101,115,115,73,115,108,97,110,100,115,0],"i8",q);D.ac=u([50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,0],"i8",q);Z7=u(2,"*",q);J1=u([0,0,8212,8214,8216,8218,8220],"*",q);u(1,"void*",q);D.pc=u([50,57,98,116,83,112,104,101,114,101,66,111,120,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);a8=u(3,"*",q);NKa=u([0,0,8222,8224,8226,6624,6626,6628,7216,6632,8228,8230,8232,8234,6642,6644,6646,8236,8238,8240,6654,6812,6814],"*",q);u(1,"void*",q);D.aa=u([49,51,98,116,83,112,104,101,114,101,83,104,97,112,101,0],"i8",q);b8=u(3,"*",q);D.he=u([83,80,72,69,82,69,0],"i8",q);YW=u([0,0,8242,8244,8246,8248,8250],"*",q);u(1,"void*",q);D.Bc=u([51,50,98,116,83,112,104,101,114,101,83,112,104,101,114,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);c8=u(3,"*",q);K1=u([0,0,8252,8254,8256,8258,8260],"*",q);u(1,"void*",q);D.Gc=u([51,52,98,116,83,112,104,101,114,101,84,114,105,97,110,103,108,101,67,111,108,108,105,115,105,111,110,65,108,103,111,114,105,116,104,109,0],"i8",q);d8=u(3,"*",q);Yfb=u([0,0,8262,8264,8266,6624,6626,6628,8268,8270,8272,8274,6748,6750,8276,8278,6646,8280],"*",q);u(1,"void*",q);D.Ua=u([49,56,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,0],"i8",q);e8=u(3,"*",q);D.Se=u([98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,68,97,116,97,0],"i8",q);D.ie=u([83,84,65,84,73,67,80,76,65,78,69,0],"i8",q);D.Te=u([98,116,73,110,116,73,110,100,101,120,68,97,116,97,0],"i8",q);D.je=u([98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0],"i8",q);D.Ce=u([98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0],"i8",q);D.q=u([98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0],"i8",q);D.We=u([98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0],"i8",q);D.df=u([98,116,77,101,115,104,80,97,114,116,68,97,116,97,0],"i8",q);D.kf=u([98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0],"i8",q);eLa=u([0,0,8282,8284,8286,40,40,40,40,40,40,40,8288,8290,8292,8294,8296],"*",q);u(1,"void*",q);D.Ob=u([50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,0],"i8",q);f8=u(2,"*",q);ogb=u([0,0,8298,8300,8302],"*",q);u(1,"void*",q);D.Bd=u([90,78,50,51,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,50,51,99,97,108,99,117,108,97,116,101,65,97,98,98,66,114,117,116,101,70,111,114,99,101,69,82,57,98,116,86,101,99,116,111,114,51,83,49,95,69,50,51,65,97,98,98,67,97,108,99,117,108,97,116,105,111,110,67,97,108,108,98,97,99,107,0],"i8",q);g8=u(3,"*",q);rgb=u([0,0,8304,8306,8308],"*",q);u(1,"void*",q);D.Ab=u([50,50,98,116,83,117,98,115,105,109,112,108,101,120,67,111,110,118,101,120,67,97,115,116,0],"i8",q);h8=u(3,"*",q);L1=u([0,0,8310,8312,7674,6624,6626,6628,7676,6632,7286,7678,7106,6640,6642,6644,6646,6806,7680,7682,6654,6812,6814,6660,7684,7686,7688,7690,7692,7694,7696,7698],"*",q);u(1,"void*",q);D.qa=u([49,54,98,116,66,85,95,83,105,109,112,108,101,120,49,116,111,52,0],"i8",q);i8=u(3,"*",q);$gb=u([0,0,8314,8316,8318],"*",q);u(1,"void*",q);D.Ba=u([49,54,98,116,84,114,105,97,110,103,108,101,66,117,102,102,101,114,0],"i8",q);j8=u(3,"*",q);sTa=u([0,0,8320,8322,40],"*",q);u(1,"void*",q);D.Va=u([49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,0],"i8",q);k8=u(2,"*",q);tTa=u([0,0,8324,8326,40],"*",q);u(1,"void*",q);D.zc=u([51,49,98,116,73,110,116,101,114,110,97,108,84,114,105,97,110,103,108,101,73,110,100,101,120,67,97,108,108,98,97,99,107,0],"i8",q);l8=u(2,"*",q);AW=u([0,0,8328,8330,8286,8332,8334,8336,8338,8340,8342,8344,8346,8348,8350,8294,8296],"*",q);u(1,"void*",q);D.ec=u([50,54,98,116,84,114,105,97,110,103,108,101,73,110,100,101,120,86,101,114,116,101,120,65,114,114,97,121,0],"i8",q);m8=u(3,"*",q);R1=u([0,0,8352,8354,8286,8332,8334,8336,8338,8340,8342,8344,8346,8348,8350,8294,8296,8356,8358],"*",q);u(1,"void*",q);D.Hc=u([51,52,98,116,84,114,105,97,110,103,108,101,73,110,100,101,120,86,101,114,116,101,120,77,97,116,101,114,105,97,108,65,114,114,97,121,0],"i8",q);n8=u(3,"*",q);T1=u([0,0,8360,8362,8286,8332,8334,8336,8338,8340,8364,8366,8346,8348,8350,8294,8296],"*",q);u(1,"void*",q);D.ga=u([49,52,98,116,84,114,105,97,110,103,108,101,77,101,115,104,0],"i8",q);o8=u(3,"*",q);bib=u([0,0,8368,8370,6738,6624,6626,6628,8372,6742,6744,8374,6748,6750,6892,6894,6646,8376,6758,6760],"*",q);u(1,"void*",q);D.ab=u([49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,0],"i8",q);p8=u(3,"*",q);D.Ze=u([84,82,73,65,78,71,76,69,77,69,83,72,0],"i8",q);nib=u([0,0,8378,8380,8382],"*",q);u(1,"void*",q);D.kb=u([50,49,83,117,112,112,111,114,116,86,101,114,116,101,120,67,97,108,108,98,97,99,107,0],"i8",q);q8=u(3,"*",q);rib=u([0,0,8384,8386,8388],"*",q);u(1,"void*",q);D.Id=u([90,78,75,49,57,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,49,57,112,114,111,99,101,115,115,65,108,108,84,114,105,97,110,103,108,101,115,69,80,49,56,98,116,84,114,105,97,110,103,108,101,67,97,108,108,98,97,99,107,82,75,57,98,116,86,101,99,116,111,114,51,83,52,95,69,49,54,70,105,108,116,101,114,101,100,67,97,108,108,98,97,99,107,0],"i8",q);r8=u(3,"*",q);Eib=u([0,0,8390,8392,8394,6624,6626,6628,8396,8398,8400,8402,8404,8406,6892,6894,6646,8408,8410,8412,8414,8416,8418],"*",q);u(1,"void*",q);D.sb=u([50,49,98,116,85,110,105,102,111,114,109,83,99,97,108,105,110,103,83,104,97,112,101,0],"i8",q);s8=u(3,"*",q);D.af=u([85,110,105,102,111,114,109,83,99,97,108,105,110,103,83,104,97,112,101,0],"i8",q);u(1,"i8* (i32)*",q);u(1,"i8* (i32)*",q);u(1,"i8* (i8*, i32, i32)*",q);u(1,"void (i8*)*",q);u(91,"i32 float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i8 float float float float i8 i8 float float float float i8 i8".split(" "),q);u(1,"i64",q);u(1,"*",q);u(1,"i64",q);u(1,"*",q);u(1,"i64",q);h2=u([0,0,8420,8422,8424,38,8426,8428,8430,8432,8434,8436,8438,8440],"*",q);u(1,"void*",q);k2=u([1,0,0,0],"float",q);D.nb=u([50,49,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,0],"i8",q);t8=u(3,"*",q);D.cf=u([98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0],"i8",q);sub=u([0,0,8442,8444,8446,38,8448,8450,42,40,40,44,46],"*",q);u(1,"void*",q);D.Ya=u([49,57,98,116,67,111,110,116,97,99,116,67,111,110,115,116,114,97,105,110,116,0],"i8",q);u8=u(3,"*",q);Hjb=u([0,0,8452,8454,6900,6902,6904,8456,6908,6910,8458,8460,6916,8462,8464,8466,8468,8470,8472,8474,8476,8478,8480,8482,8484,8486,8488,8490,8492,8494,8496,8498,8500,8502,8504,8506,8508,8510,8512,8514,8516,8518,8520,8522,8524,8526,8528],"*",q);u(1,"void*",q);D.ef=u([116,111,105,32,61,32,37,102,10,0],"i8",q);D.Vb=u([50,53,98,116,67,111,110,116,105,110,117,111,117,115,68,121,110,97,109,105,99,115,87,111,114,108,100,0],"i8",q);v8=u(3,"*",q);u2=u([0,0,8530,8532,6900,6902,6904,8456,6908,6910,8458,8460,6916,8462,8464,8466,8468,8470,8472,8474,8476,8478,8480,8482,8484,8486,8488,8490,8492,8494,8534,8498,8500,8502,8504,8506,8508,8510,8512,8514,8516,8536,8520,8522,8524,8526],"*",q);u(1,"void*",q);D.gf=u([100,101,98,117,103,68,114,97,119,87,111,114,108,100,0],"i8",q);D.le=u([115,121,110,99,104,114,111,110,105,122,101,77,111,116,105,111,110,83,116,97,116,101,115,0],"i8",q);D.De=u([115,116,101,112,83,105,109,117,108,97,116,105,111,110,0],"i8",q);D.Oe=u([105,110,116,101,114,110,97,108,83,105,110,103,108,101,83,116,101,112,83,105,109,117,108,97,116,105,111,110,0],"i8",q);D.Xe=u([117,112,100,97,116,101,65,99,116,105,111,110,115,0],"i8",q);D.ff=u([117,112,100,97,116,101,65,99,116,105,118,97,116,105,111,110,83,116,97,116,101,0],"i8",q);D.lf=u([115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,0],"i8",q);D.qf=u([99,97,108,99,117,108,97,116,101,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,115,0],"i8",q);D2=u(1,"i32",q);D.xf=u([105,110,116,101,103,114,97,116,101,84,114,97,110,115,102,111,114,109,115,0],"i8",q);D.Bf=u([67,67,68,32,109,111,116,105,111,110,32,99,108,97,109,112,105,110,103,0],"i8",q);D.Od=u([97,100,100,83,112,101,99,117,108,97,116,105,118,101,67,111,110,116,97,99,116,115,0],"i8",q);D.Ud=u([115,101,97,114,99,104,32,115,112,101,99,117,108,97,116,105,118,101,32,99,111,110,116,97,99,116,115,0],"i8",q);D.$d=u([112,114,101,100,105,99,116,85,110,99,111,110,115,116,114,97,105,110,116,77,111,116,105,111,110,0],"i8",q);D.Hb=u([50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0],"i8",q);D.ma=u([49,53,98,116,68,121,110,97,109,105,99,115,87,111,114,108,100,0],"i8",q);w8=u(3,"*",q);x8=u(3,"*",q);Ilb=u([0,0,8538,8540,8542,8544],"*",q);u(1,"void*",q);D.Ec=u([51,52,98,116,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0],"i8",q);y8=u(3,"*",q);G2=u([0,0,8546,8548,8550],"*",q);u(1,"void*",q);D.Ad=u([90,78,50,51,98,116,68,105,115,99,114,101,116,101,68,121,110,97,109,105,99,115,87,111,114,108,100,49,54,115,111,108,118,101,67,111,110,115,116,114,97,105,110,116,115,69,82,49,57,98,116,67,111,110,116,97,99,116,83,111,108,118,101,114,73,110,102,111,69,50,55,73,110,112,108,97,99,101,83,111,108,118,101,114,73,115,108,97,110,100,67,97,108,108,98,97,99,107,0],"i8",q);D.Xc=u([78,50,53,98,116,83,105,109,117,108,97,116,105,111,110,73,115,108,97,110,100,77,97,110,97,103,101,114,49,52,73,115,108,97,110,100,67,97,108,108,98,97,99,107,69,0],"i8",q);z8=u(2,"*",q);A8=u(3,"*",q);Xlb=u([0,0,8552,8554,40],"*",q);u(1,"void*",q);Ujb=u([0,0,8556,8558,6900,6902,6904,40,6908,6910,6912,6914,6916,6918,40,8560,8562,40,40,40,40,40,40,40,40,40,40,8564,8566,8568,40,40,8570,8572,8574,8576],"*",q);u(1,"void*",q);H2=u([0,0,8578,8580,8582,38,8584,8586,42,8588,8590,8592,8594,8596],"*",q);u(1,"void*",q);D.Jb=u([50,51,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,0],"i8",q);B8=u(3,"*",q);Lmb=u([0,0,8598,8600,8582,38,8584,8602,42,8588,8590,8604,8606,8596,8608],"*",q);u(1,"void*",q);D.oc=u([50,57,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,0],"i8",q);C8=u(3,"*",q);D.r=u([98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0],"i8",q);Vmb=u([0,0,8610,8612,8582,38,8584,8602,42,8588,8590,8604,8606,8596,8608],"*",q);u(1,"void*",q);D.Qa=u([49,56,98,116,72,105,110,103,101,50,67,111,110,115,116,114,97,105,110,116,0],"i8",q);D8=u(3,"*",q);O2=u([0,0,8614,8616,8618,38,8620,8622,42,8624,8626,8628,8630],"*",q);u(1,"void*",q);fnb=u([0,0,1,0],"float",q);D.Ia=u([49,55,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,0],"i8",q);E8=u(3,"*",q);D.mf=u([98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0],"i8",q);R2=u([0,0,8632,8634,8636,8638,8640,8642,8644,8646,8648,8650,8652,8654,8656],"*",q);u(1,"void*",q);T2=u(12,"float",q);xnb=u(1,"i64",q);D.wc=u([51,48,98,116,75,105,110,101,109,97,116,105,99,67,104,97,114,97,99,116,101,114,67,111,110,116,114,111,108,108,101,114,0],"i8",q);D.sc=u([51,48,98,116,67,104,97,114,97,99,116,101,114,67,111,110,116,114,111,108,108,101,114,73,110,116,101,114,102,97,99,101,0],"i8",q);D.Ea=u([49,55,98,116,65,99,116,105,111,110,73,110,116,101,114,102,97,99,101,0],"i8",q);F8=u(2,"*",q);G8=u(3,"*",q);H8=u(3,"*",q);Onb=u([0,0,8658,8660,52,8662],"*",q);u(1,"void*",q);D.Kc=u([52,51,98,116,75,105,110,101,109,97,116,105,99,67,108,111,115,101,115,116,78,111,116,77,101,67,111,110,118,101,120,82,101,115,117,108,116,67,97,108,108,98,97,99,107,0],"i8",q);I8=u(3,"*",q);rnb=u([0,0,8664,8666,40,40,40,40,40,40,40,40,40,40,40],"*",q);u(1,"void*",q);Inb=u([0,0,8668,8670,40,40],"*",q);u(1,"void*",q);V2=u([0,0,8672,8674,8676,38,8678,8680,42,8682,8684,8686,8688],"*",q);u(1,"void*",q);D.Lb=u([50,51,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,0],"i8",q);J8=u(3,"*",q);D.of=u([98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0],"i8",q);X2=u(152,"* float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i32 float * * * * i32 i32 i32 i32 float float float i32 * float float float i32 float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i8 float float float float float float * i8 i32 i32 * i8 i32 i32 float float float float float float float float float float float float float float float float float float float float float float float float i32 i32".split(" "),q);fob=u(1,"i64",q);Z2=u([0,0,8690,8692,8694,8696,8698,8700,8702],"*",q);u(1,"void*",q);xob=u([1],"float",q);D.Aa=u([49,54,98,116,82,97,121,99,97,115,116,86,101,104,105,99,108,101,0],"i8",q);K8=u(3,"*",q);LMa=u([0,0,8704,8706,8708],"*",q);u(1,"void*",q);D.Xb=u([50,53,98,116,68,101,102,97,117,108,116,86,101,104,105,99,108,101,82,97,121,99,97,115,116,101,114,0],"i8",q);L8=u(3,"*",q);Xm=u([2],"float",q);Wm=u(1,"i8",q);a3=u([0,0,8710,14,8712,6880,8714,8716,8718],"*",q);u(1,"void*",q);Mob=u(1,"i32",q);D.rf=u([98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0],"i8",q);D.P=u([49,49,98,116,82,105,103,105,100,66,111,100,121,0],"i8",q);M8=u(3,"*",q);$ob=u(1,"i32",q);b3=u([0,0,8720,8722,8724,8726,8728,8730,8732,8734,8736,8738],"*",q);u(1,"void*",q);D.uf=u([115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,83,101,116,117,112,0],"i8",q);D.pe=u([115,111,108,118,101,71,114,111,117,112,67,97,99,104,101,70,114,105,101,110,100,108,121,73,116,101,114,97,116,105,111,110,115,0],"i8",q);D.Ge=u([115,111,108,118,101,71,114,111,117,112,0],"i8",q);h3=u(152,"* float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i32 float * * * * i32 i32 i32 i32 float float float i32 * float float float i32 float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i8 float float float float float float * i8 i32 i32 * i8 i32 i32 float float float float float float float float float float float float float float float float float float float float float float float float i32 i32".split(" "),q);dpb=u(1,"i64",q);D.Ic=u([51,53,98,116,83,101,113,117,101,110,116,105,97,108,73,109,112,117,108,115,101,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0],"i8",q);D.Ma=u([49,56,98,116,67,111,110,115,116,114,97,105,110,116,83,111,108,118,101,114,0],"i8",q);N8=u(2,"*",q);O8=u(3,"*",q);Sob=u([0,0,8740,8742,8724,40,8728,40],"*",q);u(1,"void*",q);o3=u([0,0,8744,8746,8748,6902,6904,8750,6908,6910,6912,8752,6916,6918,8754,8560,8562,8756,8758,8760,8762,8764,8766,8768,8770,8772,8774,8564,8566,8568,8776,8778,8570,8572,8574,8576],"*",q);u(1,"void*",q);D.qb=u([50,49,98,116,83,105,109,112,108,101,68,121,110,97,109,105,99,115,87,111,114,108,100,0],"i8",q);P8=u(3,"*",q);p3=u([0,0,8780,8782,36,38,8784,8786,42,8788,8790,8792,8794],"*",q);u(1,"void*",q);D.Ta=u([49,56,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,0],"i8",q);Q8=u(3,"*",q);D.vf=u([98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0],"i8",q);D.wf=u([98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0],"i8",q);J2=u(152,"* float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i32 float * * * * i32 i32 i32 i32 float float float i32 * float float float i32 float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float float i8 float float float float float float * i8 i32 i32 * i8 i32 i32 float float float float float float float float float float float float float float float float float float float float float float float float i32 i32".split(" "),q);pqb=u(1,"i64",q);rqb=u([0,0,8796,8798,8582,38,8584,8586,42,8588,8590,8592,8594,8596],"*",q);u(1,"void*",q);D.tb=u([50,49,98,116,85,110,105,118,101,114,115,97,108,67,111,110,115,116,114,97,105,110,116,0],"i8",q);R8=u(3,"*",q);Aqb=u(1,"i32",q);Cqb=u(1,"i32",q);u(1,"i32",q);Bqb=u([16],"i8* (i32, i32)*",q);Dqb=u([18],"void (i8*)*",q);vqb=u([20],"i8* (i32)*",q);xqb=u([22],"void (i8*)*",q);u(4,"float",q);u(1,"i64",q);u(4,"float",q);u(1,"i64",q);u([.0010000000474974513],"float",q);u([-1],"i32",q);u([3.4028234663852886e+38,3.4028234663852886e+38,3.4028234663852886e+38],"float",q);u([-3.4028234663852886e+38,-3.4028234663852886e+38,-3.4028234663852886e+38],"float",q);q4=u(1,"*",q);v4=u(8,"* i32 float i32 i32 * * *".split(" "),q);D.yf=u([82,111,111,116,0],"i8",q);w4=u(1,"%class.CProfileNode*",q);p4=u(1,"i32",q);stb=u(1,"i32",q);D.Qf=u([80,114,111,102,105,108,105,110,103,58,32,37,115,32,40,116,111,116,97,108,32,114,117,110,110,105,110,103,32,116,105,109,101,58,32,37,46,51,102,32,109,115,41,32,45,45,45,10,0],"i8",q);D.Rf=u([37,100,32,45,45,32,37,115,32,40,37,46,50,102,32,37,37,41,32,58,58,32,37,46,51,102,32,109,115,32,47,32,102,114,97,109,101,32,40,37,100,32,99,97,108,108,115,41,10,0],"i8",q);D.Sf=u([37,115,32,40,37,46,51,102,32,37,37,41,32,58,58,32,37,46,51,102,32,109,115,10,0],"i8",q);D.Tf=u([85,110,97,99,99,111,117,110,116,101,100,58,0],"i8",q);D.Uf=u([83,68,78,65,78,65,77,69,42,1,0,0,109,95,115,105,122,101,0,109,95,99,97,112,97,99,105,116,121,0,42,109,95,100,97,116,97,0,109,95,99,111,108,108,105,115,105,111,110,83,104,97,112,101,115,0,109,95,99,111,108,108,105,115,105,111,110,79,98,106,101,99,116,115,0,109,95,99,111,110,115,116,114,97,105,110,116,115,0,42,102,105,114,115,116,0,42,108,97,115,116,0,109,95,102,108,111,97,116,115,91,52,93,0,109,95,101,108,91,51,93,0,109,95,98,97,115,105,115,0,109,95,111,114,105,103,105,110,0,109,95,114,111,111,116,78,111,100,101,73,110,100,101,120,0,109,95,115,117,98,116,114,101,101,83,105,122,101,0,109,95,113,117,97,110,116,105,122,101,100,65,97,98,98,77,105,110,91,51,93,0,109,95,113,117,97,110,116,105,122,101,100,65,97,98,98,77,97,120,91,51,93,0,109,95,97,97,98,98,77,105,110,79,114,103,0,109,95,97,97,98,98,77,97,120,79,114,103,0,109,95,101,115,99,97,112,101,73,110,100,101,120,0,109,95,115,117,98,80,97,114,116,0,109,95,116,114,105,97,110,103,108,101,73,110,100,101,120,0,109,95,112,97,100,91,52,93,0,109,95,101,115,99,97,112,101,73,110,100,101,120,79,114,84,114,105,97,110,103,108,101,73,110,100,101,120,0,109,95,98,118,104,65,97,98,98,77,105,110,0,109,95,98,118,104,65,97,98,98,77,97,120,0,109,95,98,118,104,81,117,97,110,116,105,122,97,116,105,111,110,0,109,95,99,117,114,78,111,100,101,73,110,100,101,120,0,109,95,117,115,101,81,117,97,110,116,105,122,97,116,105,111,110,0,109,95,110,117,109,67,111,110,116,105,103,117,111,117,115,76,101,97,102,78,111,100,101,115,0,109,95,110,117,109,81,117,97,110,116,105,122,101,100,67,111,110,116,105,103,117,111,117,115,78,111,100,101,115,0,42,109,95,99,111,110,116,105,103,117,111,117,115,78,111,100,101,115,80,116,114,0,42,109,95,113,117,97,110,116,105,122,101,100,67,111,110,116,105,103,117,111,117,115,78,111,100,101,115,80,116,114,0,42,109,95,115,117,98,84,114,101,101,73,110,102,111,80,116,114,0,109,95,116,114,97,118,101,114,115,97,108,77,111,100,101,0,109,95,110,117,109,83,117,98,116,114,101,101,72,101,97,100,101,114,115,0,42,109,95,110,97,109,101,0,109,95,115,104,97,112,101,84,121,112,101,0,109,95,112,97,100,100,105,110,103,91,52,93,0,109,95,99,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,109,95,108,111,99,97,108,83,99,97,108,105,110,103,0,109,95,112,108,97,110,101,78,111,114,109,97,108,0,109,95,112,108,97,110,101,67,111,110,115,116,97,110,116,0,109,95,105,109,112,108,105,99,105,116,83,104,97,112,101,68,105,109,101,110,115,105,111,110,115,0,109,95,99,111,108,108,105,115,105,111,110,77,97,114,103,105,110,0,109,95,112,97,100,100,105,110,103,0,109,95,112,111,115,0,109,95,114,97,100,105,117,115,0,109,95,99,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,42,109,95,108,111,99,97,108,80,111,115,105,116,105,111,110,65,114,114,97,121,80,116,114,0,109,95,108,111,99,97,108,80,111,115,105,116,105,111,110,65,114,114,97,121,83,105,122,101,0,109,95,118,97,108,117,101,0,109,95,112,97,100,91,50,93,0,109,95,118,97,108,117,101,115,91,51,93,0,109,95,112,97,100,0,42,109,95,118,101,114,116,105,99,101,115,51,102,0,42,109,95,118,101,114,116,105,99,101,115,51,100,0,42,109,95,105,110,100,105,99,101,115,51,50,0,42,109,95,51,105,110,100,105,99,101,115,49,54,0,42,109,95,51,105,110,100,105,99,101,115,56,0,42,109,95,105,110,100,105,99,101,115,49,54,0,109,95,110,117,109,84,114,105,97,110,103,108,101,115,0,109,95,110,117,109,86,101,114,116,105,99,101,115,0,42,109,95,109,101,115,104,80,97,114,116,115,80,116,114,0,109,95,115,99,97,108,105,110,103,0,109,95,110,117,109,77,101,115,104,80,97,114,116,115,0,109,95,109,101,115,104,73,110,116,101,114,102,97,99,101,0,42,109,95,113,117,97,110,116,105,122,101,100,70,108,111,97,116,66,118,104,0,42,109,95,113,117,97,110,116,105,122,101,100,68,111,117,98,108,101,66,118,104,0,42,109,95,116,114,105,97,110,103,108,101,73,110,102,111,77,97,112,0,109,95,112,97,100,51,91,52,93,0,109,95,116,114,105,109,101,115,104,83,104,97,112,101,68,97,116,97,0,109,95,116,114,97,110,115,102,111,114,109,0,42,109,95,99,104,105,108,100,83,104,97,112,101,0,109,95,99,104,105,108,100,83,104,97,112,101,84,121,112,101,0,109,95,99,104,105,108,100,77,97,114,103,105,110,0,42,109,95,99,104,105,108,100,83,104,97,112,101,80,116,114,0,109,95,110,117,109,67,104,105,108,100,83,104,97,112,101,115,0,109,95,117,112,65,120,105,115,0,109,95,102,108,97,103,115,0,109,95,101,100,103,101,86,48,86,49,65,110,103,108,101,0,109,95,101,100,103,101,86,49,86,50,65,110,103,108,101,0,109,95,101,100,103,101,86,50,86,48,65,110,103,108,101,0,42,109,95,104,97,115,104,84,97,98,108,101,80,116,114,0,42,109,95,110,101,120,116,80,116,114,0,42,109,95,118,97,108,117,101,65,114,114,97,121,80,116,114,0,42,109,95,107,101,121,65,114,114,97,121,80,116,114,0,109,95,99,111,110,118,101,120,69,112,115,105,108,111,110,0,109,95,112,108,97,110,97,114,69,112,115,105,108,111,110,0,109,95,101,113,117,97,108,86,101,114,116,101,120,84,104,114,101,115,104,111,108,100,0,109,95,101,100,103,101,68,105,115,116,97,110,99,101,84,104,114,101,115,104,111,108,100,0,109,95,122,101,114,111,65,114,101,97,84,104,114,101,115,104,111,108,100,0,109,95,110,101,120,116,83,105,122,101,0,109,95,104,97,115,104,84,97,98,108,101,83,105,122,101,0,109,95,110,117,109,86,97,108,117,101,115,0,109,95,110,117,109,75,101,121,115,0,109,95,103,105,109,112,97,99,116,83,117,98,84,121,112,101,0,42,109,95,117,110,115,99,97,108,101,100,80,111,105,110,116,115,70,108,111,97,116,80,116,114,0,42,109,95,117,110,115,99,97,108,101,100,80,111,105,110,116,115,68,111,117,98,108,101,80,116,114,0,109,95,110,117,109,85,110,115,99,97,108,101,100,80,111,105,110,116,115,0,109,95,112,97,100,100,105,110,103,51,91,52,93,0,42,109,95,98,114,111,97,100,112,104,97,115,101,72,97,110,100,108,101,0,42,109,95,99,111,108,108,105,115,105,111,110,83,104,97,112,101,0,42,109,95,114,111,111,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,109,95,119,111,114,108,100,84,114,97,110,115,102,111,114,109,0,109,95,105,110,116,101,114,112,111,108,97,116,105,111,110,87,111,114,108,100,84,114,97,110,115,102,111,114,109,0,109,95,105,110,116,101,114,112,111,108,97,116,105,111,110,76,105,110,101,97,114,86,101,108,111,99,105,116,121,0,109,95,105,110,116,101,114,112,111,108,97,116,105,111,110,65,110,103,117,108,97,114,86,101,108,111,99,105,116,121,0,109,95,97,110,105,115,111,116,114,111,112,105,99,70,114,105,99,116,105,111,110,0,109,95,99,111,110,116,97,99,116,80,114,111,99,101,115,115,105,110,103,84,104,114,101,115,104,111,108,100,0,109,95,100,101,97,99,116,105,118,97,116,105,111,110,84,105,109,101,0,109,95,102,114,105,99,116,105,111,110,0,109,95,114,101,115,116,105,116,117,116,105,111,110,0,109,95,104,105,116,70,114,97,99,116,105,111,110,0,109,95,99,99,100,83,119,101,112,116,83,112,104,101,114,101,82,97,100,105,117,115,0,109,95,99,99,100,77,111,116,105,111,110,84,104,114,101,115,104,111,108,100,0,109,95,104,97,115,65,110,105,115,111,116,114,111,112,105,99,70,114,105,99,116,105,111,110,0,109,95,99,111,108,108,105,115,105,111,110,70,108,97,103,115,0,109,95,105,115,108,97,110,100,84,97,103,49,0,109,95,99,111,109,112,97,110,105,111,110,73,100,0,109,95,97,99,116,105,118,97,116,105,111,110,83,116,97,116,101,49,0,109,95,105,110,116,101,114,110,97,108,84,121,112,101,0,109,95,99,104,101,99,107,67,111,108,108,105,100,101,87,105,116,104,0,109,95,99,111,108,108,105,115,105,111,110,79,98,106,101,99,116,68,97,116,97,0,109,95,105,110,118,73,110,101,114,116,105,97,84,101,110,115,111,114,87,111,114,108,100,0,109,95,108,105,110,101,97,114,86,101,108,111,99,105,116,121,0,109,95,97,110,103,117,108,97,114,86,101,108,111,99,105,116,121,0,109,95,97,110,103,117,108,97,114,70,97,99,116,111,114,0,109,95,108,105,110,101,97,114,70,97,99,116,111,114,0,109,95,103,114,97,118,105,116,121,0,109,95,103,114,97,118,105,116,121,95,97,99,99,101,108,101,114,97,116,105,111,110,0,109,95,105,110,118,73,110,101,114,116,105,97,76,111,99,97,108,0,109,95,116,111,116,97,108,70,111,114,99,101,0,109,95,116,111,116,97,108,84,111,114,113,117,101,0,109,95,105,110,118,101,114,115,101,77,97,115,115,0,109,95,108,105,110,101,97,114,68,97,109,112,105,110,103,0,109,95,97,110,103,117,108,97,114,68,97,109,112,105,110,103,0,109,95,97,100,100,105,116,105,111,110,97,108,68,97,109,112,105,110,103,70,97,99,116,111,114,0,109,95,97,100,100,105,116,105,111,110,97,108,76,105,110,101,97,114,68,97,109,112,105,110,103,84,104,114,101,115,104,111,108,100,83,113,114,0,109,95,97,100,100,105,116,105,111,110,97,108,65,110,103,117,108,97,114,68,97,109,112,105,110,103,84,104,114,101,115,104,111,108,100,83,113,114,0,109,95,97,100,100,105,116,105,111,110,97,108,65,110,103,117,108,97,114,68,97,109,112,105,110,103,70,97,99,116,111,114,0,109,95,108,105,110,101,97,114,83,108,101,101,112,105,110,103,84,104,114,101,115,104,111,108,100,0,109,95,97,110,103,117,108,97,114,83,108,101,101,112,105,110,103,84,104,114,101,115,104,111,108,100,0,109,95,97,100,100,105,116,105,111,110,97,108,68,97,109,112,105,110,103,0,109,95,110,117,109,67,111,110,115,116,114,97,105,110,116,82,111,119,115,0,110,117,98,0,42,109,95,114,98,65,0,42,109,95,114,98,66,0,109,95,111,98,106,101,99,116,84,121,112,101,0,109,95,117,115,101,114,67,111,110,115,116,114,97,105,110,116,84,121,112,101,0,109,95,117,115,101,114,67,111,110,115,116,114,97,105,110,116,73,100,0,109,95,110,101,101,100,115,70,101,101,100,98,97,99,107,0,109,95,97,112,112,108,105,101,100,73,109,112,117,108,115,101,0,109,95,100,98,103,68,114,97,119,83,105,122,101,0,109,95,100,105,115,97,98,108,101,67,111,108,108,105,115,105,111,110,115,66,101,116,119,101,101,110,76,105,110,107,101,100,66,111,100,105,101,115,0,109,95,112,97,100,52,91,52,93,0,109,95,116,121,112,101,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,109,95,112,105,118,111,116,73,110,65,0,109,95,112,105,118,111,116,73,110,66,0,109,95,114,98,65,70,114,97,109,101,0,109,95,114,98,66,70,114,97,109,101,0,109,95,117,115,101,82,101,102,101,114,101,110,99,101,70,114,97,109,101,65,0,109,95,97,110,103,117,108,97,114,79,110,108,121,0,109,95,101,110,97,98,108,101,65,110,103,117,108,97,114,77,111,116,111,114,0,109,95,109,111,116,111,114,84,97,114,103,101,116,86,101,108,111,99,105,116,121,0,109,95,109,97,120,77,111,116,111,114,73,109,112,117,108,115,101,0,109,95,108,111,119,101,114,76,105,109,105,116,0,109,95,117,112,112,101,114,76,105,109,105,116,0,109,95,108,105,109,105,116,83,111,102,116,110,101,115,115,0,109,95,98,105,97,115,70,97,99,116,111,114,0,109,95,114,101,108,97,120,97,116,105,111,110,70,97,99,116,111,114,0,109,95,115,119,105,110,103,83,112,97,110,49,0,109,95,115,119,105,110,103,83,112,97,110,50,0,109,95,116,119,105,115,116,83,112,97,110,0,109,95,100,97,109,112,105,110,103,0,109,95,108,105,110,101,97,114,85,112,112,101,114,76,105,109,105,116,0,109,95,108,105,110,101,97,114,76,111,119,101,114,76,105,109,105,116,0,109,95,97,110,103,117,108,97,114,85,112,112,101,114,76,105,109,105,116,0,109,95,97,110,103,117,108,97,114,76,111,119,101,114,76,105,109,105,116,0,109,95,117,115,101,76,105,110,101,97,114,82,101,102,101,114,101,110,99,101,70,114,97,109,101,65,0,109,95,117,115,101,79,102,102,115,101,116,70,111,114,67,111,110,115,116,114,97,105,110,116,70,114,97,109,101,0,109,95,54,100,111,102,68,97,116,97,0,109,95,115,112,114,105,110,103,69,110,97,98,108,101,100,91,54,93,0,109,95,101,113,117,105,108,105,98,114,105,117,109,80,111,105,110,116,91,54,93,0,109,95,115,112,114,105,110,103,83,116,105,102,102,110,101,115,115,91,54,93,0,109,95,115,112,114,105,110,103,68,97,109,112,105,110,103,91,54,93,0,109,95,108,105,110,101,97,114,83,116,105,102,102,110,101,115,115,0,109,95,97,110,103,117,108,97,114,83,116,105,102,102,110,101,115,115,0,109,95,118,111,108,117,109,101,83,116,105,102,102,110,101,115,115,0,42,109,95,109,97,116,101,114,105,97,108,0,109,95,112,111,115,105,116,105,111,110,0,109,95,112,114,101,118,105,111,117,115,80,111,115,105,116,105,111,110,0,109,95,118,101,108,111,99,105,116,121,0,109,95,97,99,99,117,109,117,108,97,116,101,100,70,111,114,99,101,0,109,95,110,111,114,109,97,108,0,109,95,97,114,101,97,0,109,95,97,116,116,97,99,104,0,109,95,110,111,100,101,73,110,100,105,99,101,115,91,50,93,0,109,95,114,101,115,116,76,101,110,103,116,104,0,109,95,98,98,101,110,100,105,110,103,0,109,95,110,111,100,101,73,110,100,105,99,101,115,91,51,93,0,109,95,114,101,115,116,65,114,101,97,0,109,95,99,48,91,52,93,0,109,95,110,111,100,101,73,110,100,105,99,101,115,91,52,93,0,109,95,114,101,115,116,86,111,108,117,109,101,0,109,95,99,49,0,109,95,99,50,0,109,95,99,48,0,109,95,108,111,99,97,108,70,114,97,109,101,0,42,109,95,114,105,103,105,100,66,111,100,121,0,109,95,110,111,100,101,73,110,100,101,120,0,109,95,97,101,114,111,77,111,100,101,108,0,109,95,98,97,117,109,103,97,114,116,101,0,109,95,100,114,97,103,0,109,95,108,105,102,116,0,109,95,112,114,101,115,115,117,114,101,0,109,95,118,111,108,117,109,101,0,109,95,100,121,110,97,109,105,99,70,114,105,99,116,105,111,110,0,109,95,112,111,115,101,77,97,116,99,104,0,109,95,114,105,103,105,100,67,111,110,116,97,99,116,72,97,114,100,110,101,115,115,0,109,95,107,105,110,101,116,105,99,67,111,110,116,97,99,116,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,67,111,110,116,97,99,116,72,97,114,100,110,101,115,115,0,109,95,97,110,99,104,111,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,82,105,103,105,100,67,108,117,115,116,101,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,75,105,110,101,116,105,99,67,108,117,115,116,101,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,83,111,102,116,67,108,117,115,116,101,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,82,105,103,105,100,67,108,117,115,116,101,114,73,109,112,117,108,115,101,83,112,108,105,116,0,109,95,115,111,102,116,75,105,110,101,116,105,99,67,108,117,115,116,101,114,73,109,112,117,108,115,101,83,112,108,105,116,0,109,95,115,111,102,116,83,111,102,116,67,108,117,115,116,101,114,73,109,112,117,108,115,101,83,112,108,105,116,0,109,95,109,97,120,86,111,108,117,109,101,0,109,95,116,105,109,101,83,99,97,108,101,0,109,95,118,101,108,111,99,105,116,121,73,116,101,114,97,116,105,111,110,115,0,109,95,112,111,115,105,116,105,111,110,73,116,101,114,97,116,105,111,110,115,0,109,95,100,114,105,102,116,73,116,101,114,97,116,105,111,110,115,0,109,95,99,108,117,115,116,101,114,73,116,101,114,97,116,105,111,110,115,0,109,95,114,111,116,0,109,95,115,99,97,108,101,0,109,95,97,113,113,0,109,95,99,111,109,0,42,109,95,112,111,115,105,116,105,111,110,115,0,42,109,95,119,101,105,103,104,116,115,0,109,95,110,117,109,80,111,115,105,116,105,111,110,115,0,109,95,110,117,109,87,101,105,103,116,115,0,109,95,98,118,111,108,117,109,101,0,109,95,98,102,114,97,109,101,0,109,95,102,114,97,109,101,120,102,111,114,109,0,109,95,108,111,99,105,105,0,109,95,105,110,118,119,105,0,109,95,118,105,109,112,117,108,115,101,115,91,50,93,0,109,95,100,105,109,112,117,108,115,101,115,91,50,93,0,109,95,108,118,0,109,95,97,118,0,42,109,95,102,114,97,109,101,114,101,102,115,0,42,109,95,110,111,100,101,73,110,100,105,99,101,115,0,42,109,95,109,97,115,115,101,115,0,109,95,110,117,109,70,114,97,109,101,82,101,102,115,0,109,95,110,117,109,78,111,100,101,115,0,109,95,110,117,109,77,97,115,115,101,115,0,109,95,105,100,109,97,115,115,0,109,95,105,109,97,115,115,0,109,95,110,118,105,109,112,117,108,115,101,115,0,109,95,110,100,105,109,112,117,108,115,101,115,0,109,95,110,100,97,109,112,105,110,103,0,109,95,108,100,97,109,112,105,110,103,0,109,95,97,100,97,109,112,105,110,103,0,109,95,109,97,116,99,104,105,110,103,0,109,95,109,97,120,83,101,108,102,67,111,108,108,105,115,105,111,110,73,109,112,117,108,115,101,0,109,95,115,101,108,102,67,111,108,108,105,115,105,111,110,73,109,112,117,108,115,101,70,97,99,116,111,114,0,109,95,99,111,110,116,97,105,110,115,65,110,99,104,111,114,0,109,95,99,111,108,108,105,100,101,0,109,95,99,108,117,115,116,101,114,73,110,100,101,120,0,42,109,95,98,111,100,121,65,0,42,109,95,98,111,100,121,66,0,109,95,114,101,102,115,91,50,93,0,109,95,99,102,109,0,109,95,101,114,112,0,109,95,115,112,108,105,116,0,109,95,100,101,108,101,116,101,0,109,95,114,101,108,80,111,115,105,116,105,111,110,91,50,93,0,109,95,98,111,100,121,65,116,121,112,101,0,109,95,98,111,100,121,66,116,121,112,101,0,109,95,106,111,105,110,116,84,121,112,101,0,42,109,95,112,111,115,101,0,42,42,109,95,109,97,116,101,114,105,97,108,115,0,42,109,95,110,111,100,101,115,0,42,109,95,108,105,110,107,115,0,42,109,95,102,97,99,101,115,0,42,109,95,116,101,116,114,97,104,101,100,114,97,0,42,109,95,97,110,99,104,111,114,115,0,42,109,95,99,108,117,115,116,101,114,115,0,42,109,95,106,111,105,110,116,115,0,109,95,110,117,109,77,97,116,101,114,105,97,108,115,0,109,95,110,117,109,76,105,110,107,115,0,109,95,110,117,109,70,97,99,101,115,0,109,95,110,117,109,84,101,116,114,97,104,101,100,114,97,0,109,95,110,117,109,65,110,99,104,111,114,115,0,109,95,110,117,109,67,108,117,115,116,101,114,115,0,109,95,110,117,109,74,111,105,110,116,115,0,109,95,99,111,110,102,105,103,0,0,0,0,84,89,80,69,72,0,0,0,99,104,97,114,0,117,99,104,97,114,0,115,104,111,114,116,0,117,115,104,111,114,116,0,105,110,116,0,108,111,110,103,0,117,108,111,110,103,0,102,108,111,97,116,0,100,111,117,98,108,101,0,118,111,105,100,0,80,111,105,110,116,101,114,65,114,114,97,121,0,98,116,80,104,121,115,105,99,115,83,121,115,116,101,109,0,76,105,115,116,66,97,115,101,0,98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0,98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0,98,116,77,97,116,114,105,120,51,120,51,70,108,111,97,116,68,97,116,97,0,98,116,77,97,116,114,105,120,51,120,51,68,111,117,98,108,101,68,97,116,97,0,98,116,84,114,97,110,115,102,111,114,109,70,108,111,97,116,68,97,116,97,0,98,116,84,114,97,110,115,102,111,114,109,68,111,117,98,108,101,68,97,116,97,0,98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,70,108,111,97,116,68,97,116,97,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,111,117,98,108,101,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,68,111,117,98,108,101,68,97,116,97,0,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,68,97,116,97,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,98,116,80,111,115,105,116,105,111,110,65,110,100,82,97,100,105,117,115,0,98,116,77,117,108,116,105,83,112,104,101,114,101,83,104,97,112,101,68,97,116,97,0,98,116,73,110,116,73,110,100,101,120,68,97,116,97,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,68,97,116,97,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,77,101,115,104,80,97,114,116,68,97,116,97,0,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,98,116,84,114,105,97,110,103,108,101,73,110,102,111,77,97,112,68,97,116,97,0,98,116,83,99,97,108,101,100,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,67,104,105,108,100,68,97,116,97,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,68,97,116,97,0,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,98,116,84,114,105,97,110,103,108,101,73,110,102,111,68,97,116,97,0,98,116,71,73,109,112,97,99,116,77,101,115,104,83,104,97,112,101,68,97,116,97,0,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,68,97,116,97,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,68,111,117,98,108,101,68,97,116,97,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,98,116,82,105,103,105,100,66,111,100,121,68,111,117,98,108,101,68,97,116,97,0,98,116,67,111,110,115,116,114,97,105,110,116,73,110,102,111,49,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,82,105,103,105,100,66,111,100,121,68,97,116,97,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,68,111,117,98,108,101,68,97,116,97,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,68,111,117,98,108,101,68,97,116,97,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,83,111,102,116,66,111,100,121,77,97,116,101,114,105,97,108,68,97,116,97,0,83,111,102,116,66,111,100,121,78,111,100,101,68,97,116,97,0,83,111,102,116,66,111,100,121,76,105,110,107,68,97,116,97,0,83,111,102,116,66,111,100,121,70,97,99,101,68,97,116,97,0,83,111,102,116,66,111,100,121,84,101,116,114,97,68,97,116,97,0,83,111,102,116,82,105,103,105,100,65,110,99,104,111,114,68,97,116,97,0,83,111,102,116,66,111,100,121,67,111,110,102,105,103,68,97,116,97,0,83,111,102,116,66,111,100,121,80,111,115,101,68,97,116,97,0,83,111,102,116,66,111,100,121,67,108,117,115,116,101,114,68,97,116,97,0,98,116,83,111,102,116,66,111,100,121,74,111,105,110,116,68,97,116,97,0,98,116,83,111,102,116,66,111,100,121,70,108,111,97,116,68,97,116,97,0,84,76,69,78,1,0,1,0,2,0,2,0,4,0,4,0,4,0,4,0,8,0,0,0,12,0,36,0,8,0,16,0,32,0,48,0,96,0,64,0,128,0,20,0,48,0,80,0,16,0,84,0,132,0,12,0,52,0,52,0,20,0,64,0,4,0,4,0,8,0,4,0,32,0,28,0,60,0,56,0,76,0,76,0,24,0,60,0,60,0,16,0,64,0,68,0,200,1,248,0,224,1,152,3,8,0,44,0,0,0,76,0,108,0,84,1,212,0,204,0,244,0,84,1,196,0,16,0,100,0,20,0,36,0,100,0,92,0,104,0,192,0,92,1,104,0,164,1,83,84,82,67,61,0,0,0,10,0,3,0,4,0,0,0,4,0,1,0,9,0,2,0,11,0,3,0,10,0,3,0,10,0,4,0,10,0,5,0,12,0,2,0,9,0,6,0,9,0,7,0,13,0,1,0,7,0,8,0,14,0,1,0,8,0,8,0,15,0,1,0,13,0,9,0,16,0,1,0,14,0,9,0,17,0,2,0,15,0,10,0,13,0,11,0,18,0,2,0,16,0,10,0,14,0,11,0,19,0,4,0,4,0,12,0,4,0,13,0,2,0,14,0,2,0,15,0,20,0,6,0,13,0,16,0,13,0,17,0,4,0,18,0,4,0,19,0,4,0,20,0,0,0,21,0,21,0,6,0,14,0,16,0,14,0,17,0,4,0,18,0,4,0,19,0,4,0,20,0,0,0,21,0,22,0,3,0,2,0,14,0,2,0,15,0,4,0,22,0,23,0,12,0,13,0,23,0,13,0,24,0,13,0,25,0,4,0,26,0,4,0,27,0,4,0,28,0,4,0,29,0,20,0,30,0,22,0,31,0,19,0,32,0,4,0,33,0,4,0,34,0,24,0,12,0,14,0,23,0,14,0,24,0,14,0,25,0,4,0,26,0,4,0,27,0,4,0,28,0,4,0,29,0,21,0,30,0,22,0,31,0,4,0,33,0,4,0,34,0,19,0,32,0,25,0,3,0,0,0,35,0,4,0,36,0,0,0,37,0,26,0,5,0,25,0,38,0,13,0,39,0,13,0,40,0,7,0,41,0,0,0,21,0,27,0,5,0,25,0,38,0,13,0,39,0,13,0,42,0,7,0,43,0,4,0,44,0,28,0,2,0,13,0,45,0,7,0,46,0,29,0,4,0,27,0,47,0,28,0,48,0,4,0,49,0,0,0,37,0,30,0,1,0,4,0,50,0,31,0,2,0,2,0,50,0,0,0,51,0,32,0,2,0,2,0,52,0,0,0,51,0,33,0,2,0,0,0,52,0,0,0,53,0,34,0,8,0,13,0,54,0,14,0,55,0,30,0,56,0,32,0,57,0,33,0,58,0,31,0,59,0,4,0,60,0,4,0,61,0,35,0,4,0,34,0,62,0,13,0,63,0,4,0,64,0,0,0,37,0,36,0,7,0,25,0,38,0,35,0,65,0,23,0,66,0,24,0,67,0,37,0,68,0,7,0,43,0,0,0,69,0,38,0,2,0,36,0,70,0,13,0,39,0,39,0,4,0,17,0,71,0,25,0,72,0,4,0,73,0,7,0,74,0,40,0,4,0,25,0,38,0,39,0,75,0,4,0,76,0,7,0,43,0,41,0,3,0,27,0,47,0,4,0,77,0,0,0,37,0,42,0,3,0,27,0,47,0,4,0,77,0,0,0,37,0,43,0,4,0,4,0,78,0,7,0,79,0,7,0,80,0,7,0,81,0,37,0,14,0,4,0,82,0,4,0,83,0,43,0,84,0,4,0,85,0,7,0,86,0,7,0,87,0,7,0,88,0,7,0,89,0,7,0,90,0,4,0,91,0,4,0,92,0,4,0,93,0,4,0,94,0,0,0,37,0,44,0,5,0,25,0,38,0,35,0,65,0,13,0,39,0,7,0,43,0,4,0,95,0,45,0,5,0,27,0,47,0,13,0,96,0,14,0,97,0,4,0,98,0,0,0,99,0,46,0,24,0,9,0,100,0,9,0,101,0,25,0,102,0,0,0,35,0,18,0,103,0,18,0,104,0,14,0,105,0,14,0,106,0,14,0,107,0,8,0,108,0,8,0,109,0,8,0,110,0,8,0,111,0,8,0,112,0,8,0,113,0,8,0,114,0,4,0,115,0,4,0,116,0,4,0,117,0,4,0,118,0,4,0,119,0,4,0,120,0,4,0,121,0,0,0,37,0,47,0,23,0,9,0,100,0,9,0,101,0,25,0,102,0,0,0,35,0,17,0,103,0,17,0,104,0,13,0,105,0,13,0,106,0,13,0,107,0,7,0,108,0,7,0,109,0,7,0,110,0,7,0,111,0,7,0,112,0,7,0,113,0,7,0,114,0,4,0,115,0,4,0,116,0,4,0,117,0,4,0,118,0,4,0,119,0,4,0,120,0,4,0,121,0,48,0,21,0,47,0,122,0,15,0,123,0,13,0,124,0,13,0,125,0,13,0,126,0,13,0,127,0,13,0,128,0,13,0,129,0,13,0,130,0,13,0,131,0,13,0,132,0,7,0,133,0,7,0,134,0,7,0,135,0,7,0,136,0,7,0,137,0,7,0,138,0,7,0,139,0,7,0,140,0,7,0,141,0,4,0,142,0,49,0,22,0,46,0,122,0,16,0,123,0,14,0,124,0,14,0,125,0,14,0,126,0,14,0,127,0,14,0,128,0,14,0,129,0,14,0,130,0,14,0,131,0,14,0,132,0,8,0,133,0,8,0,134,0,8,0,135,0,8,0,136,0,8,0,137,0,8,0,138,0,8,0,139,0,8,0,140,0,8,0,141,0,4,0,142,0,0,0,37,0,50,0,2,0,4,0,143,0,4,0,144,0,51,0,11,0,52,0,145,0,52,0,146,0,0,0,35,0,4,0,147,0,4,0,148,0,4,0,149,0,4,0,150,0,7,0,151,0,7,0,152,0,4,0,153,0,0,0,154,0,53,0,3,0,51,0,155,0,13,0,156,0,13,0,157,0,54,0,3,0,51,0,155,0,14,0,156,0,14,0,157,0,55,0,13,0,51,0,155,0,18,0,158,0,18,0,159,0,4,0,160,0,4,0,161,0,4,0,162,0,7,0,163,0,7,0,164,0,7,0,165,0,7,0,166,0,7,0,167,0,7,0,168,0,7,0,169,0,56,0,13,0,51,0,155,0,17,0,158,0,17,0,159,0,4,0,160,0,4,0,161,0,4,0,162,0,7,0,163,0,7,0,164,0,7,0,165,0,7,0,166,0,7,0,167,0,7,0,168,0,7,0,169,0,57,0,11,0,51,0,155,0,17,0,158,0,17,0,159,0,7,0,170,0,7,0,171,0,7,0,172,0,7,0,167,0,7,0,168,0,7,0,169,0,7,0,173,0,0,0,21,0,58,0,9,0,51,0,155,0,17,0,158,0,17,0,159,0,13,0,174,0,13,0,175,0,13,0,176,0,13,0,177,0,4,0,178,0,4,0,179,0,59,0,5,0,58,0,180,0,4,0,181,0,7,0,182,0,7,0,183,0,7,0,184,0,60,0,9,0,51,0,155,0,17,0,158,0,17,0,159,0,7,0,174,0,7,0,175,0,7,0,176,0,7,0,177,0,4,0,178,0,4,0,179,0,61,0,4,0,7,0,185,0,7,0,186,0,7,0,187,0,4,0,78,0,62,0,10,0,61,0,188,0,13,0,189,0,13,0,190,0,13,0,191,0,13,0,192,0,13,0,193,0,7,0,133,0,7,0,194,0,4,0,195,0,4,0,53,0,63,0,4,0,61,0,188,0,4,0,196,0,7,0,197,0,4,0,198,0,64,0,4,0,13,0,193,0,61,0,188,0,4,0,199,0,7,0,200,0,65,0,7,0,13,0,201,0,61,0,188,0,4,0,202,0,7,0,203,0,7,0,204,0,7,0,205,0,4,0,53,0,66,0,6,0,15,0,206,0,13,0,204,0,13,0,207,0,52,0,208,0,4,0,209,0,7,0,205,0,67,0,26,0,4,0,210,0,7,0,211,0,7,0,173,0,7,0,212,0,7,0,213,0,7,0,214,0,7,0,215,0,7,0,216,0,7,0,217,0,7,0,218,0,7,0,219,0,7,0,220,0,7,0,221,0,7,0,222,0,7,0,223,0,7,0,224,0,7,0,225,0,7,0,226,0,7,0,227,0,7,0,228,0,7,0,229,0,4,0,230,0,4,0,231,0,4,0,232,0,4,0,233,0,4,0,116,0,68,0,12,0,15,0,234,0,15,0,235,0,15,0,236,0,13,0,237,0,13,0,238,0,7,0,239,0,4,0,240,0,4,0,241,0,4,0,242,0,4,0,243,0,7,0,203,0,4,0,53,0,69,0,27,0,17,0,244,0,15,0,245,0,15,0,246,0,13,0,237,0,13,0,247,0,13,0,248,0,13,0,249,0,13,0,250,0,13,0,251,0,4,0,252,0,7,0,253,0,4,0,254,0,4,0,255,0,4,0,0,1,7,0,1,1,7,0,2,1,4,0,3,1,4,0,4,1,7,0,5,1,7,0,6,1,7,0,7,1,7,0,8,1,7,0,9,1,7,0,10,1,4,0,11,1,4,0,12,1,4,0,13,1,70,0,12,0,9,0,14,1,9,0,15,1,13,0,16,1,7,0,17,1,7,0,18,1,7,0,19,1,4,0,20,1,13,0,21,1,4,0,22,1,4,0,23,1,4,0,24,1,4,0,53,0,71,0,19,0,47,0,122,0,68,0,25,1,61,0,26,1,62,0,27,1,63,0,28,1,64,0,29,1,65,0,30,1,66,0,31,1,69,0,32,1,70,0,33,1,4,0,34,1,4,0,255,0,4,0,35,1,4,0,36,1,4,0,37,1,4,0,38,1,4,0,39,1,4,0,40,1,67,0,41,1],"i8",q);u([8276],"i32",q);D.Vf=u([83,68,78,65,78,65,77,69,42,1,0,0,109,95,115,105,122,101,0,109,95,99,97,112,97,99,105,116,121,0,42,109,95,100,97,116,97,0,109,95,99,111,108,108,105,115,105,111,110,83,104,97,112,101,115,0,109,95,99,111,108,108,105,115,105,111,110,79,98,106,101,99,116,115,0,109,95,99,111,110,115,116,114,97,105,110,116,115,0,42,102,105,114,115,116,0,42,108,97,115,116,0,109,95,102,108,111,97,116,115,91,52,93,0,109,95,101,108,91,51,93,0,109,95,98,97,115,105,115,0,109,95,111,114,105,103,105,110,0,109,95,114,111,111,116,78,111,100,101,73,110,100,101,120,0,109,95,115,117,98,116,114,101,101,83,105,122,101,0,109,95,113,117,97,110,116,105,122,101,100,65,97,98,98,77,105,110,91,51,93,0,109,95,113,117,97,110,116,105,122,101,100,65,97,98,98,77,97,120,91,51,93,0,109,95,97,97,98,98,77,105,110,79,114,103,0,109,95,97,97,98,98,77,97,120,79,114,103,0,109,95,101,115,99,97,112,101,73,110,100,101,120,0,109,95,115,117,98,80,97,114,116,0,109,95,116,114,105,97,110,103,108,101,73,110,100,101,120,0,109,95,112,97,100,91,52,93,0,109,95,101,115,99,97,112,101,73,110,100,101,120,79,114,84,114,105,97,110,103,108,101,73,110,100,101,120,0,109,95,98,118,104,65,97,98,98,77,105,110,0,109,95,98,118,104,65,97,98,98,77,97,120,0,109,95,98,118,104,81,117,97,110,116,105,122,97,116,105,111,110,0,109,95,99,117,114,78,111,100,101,73,110,100,101,120,0,109,95,117,115,101,81,117,97,110,116,105,122,97,116,105,111,110,0,109,95,110,117,109,67,111,110,116,105,103,117,111,117,115,76,101,97,102,78,111,100,101,115,0,109,95,110,117,109,81,117,97,110,116,105,122,101,100,67,111,110,116,105,103,117,111,117,115,78,111,100,101,115,0,42,109,95,99,111,110,116,105,103,117,111,117,115,78,111,100,101,115,80,116,114,0,42,109,95,113,117,97,110,116,105,122,101,100,67,111,110,116,105,103,117,111,117,115,78,111,100,101,115,80,116,114,0,42,109,95,115,117,98,84,114,101,101,73,110,102,111,80,116,114,0,109,95,116,114,97,118,101,114,115,97,108,77,111,100,101,0,109,95,110,117,109,83,117,98,116,114,101,101,72,101,97,100,101,114,115,0,42,109,95,110,97,109,101,0,109,95,115,104,97,112,101,84,121,112,101,0,109,95,112,97,100,100,105,110,103,91,52,93,0,109,95,99,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,109,95,108,111,99,97,108,83,99,97,108,105,110,103,0,109,95,112,108,97,110,101,78,111,114,109,97,108,0,109,95,112,108,97,110,101,67,111,110,115,116,97,110,116,0,109,95,105,109,112,108,105,99,105,116,83,104,97,112,101,68,105,109,101,110,115,105,111,110,115,0,109,95,99,111,108,108,105,115,105,111,110,77,97,114,103,105,110,0,109,95,112,97,100,100,105,110,103,0,109,95,112,111,115,0,109,95,114,97,100,105,117,115,0,109,95,99,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,42,109,95,108,111,99,97,108,80,111,115,105,116,105,111,110,65,114,114,97,121,80,116,114,0,109,95,108,111,99,97,108,80,111,115,105,116,105,111,110,65,114,114,97,121,83,105,122,101,0,109,95,118,97,108,117,101,0,109,95,112,97,100,91,50,93,0,109,95,118,97,108,117,101,115,91,51,93,0,109,95,112,97,100,0,42,109,95,118,101,114,116,105,99,101,115,51,102,0,42,109,95,118,101,114,116,105,99,101,115,51,100,0,42,109,95,105,110,100,105,99,101,115,51,50,0,42,109,95,51,105,110,100,105,99,101,115,49,54,0,42,109,95,51,105,110,100,105,99,101,115,56,0,42,109,95,105,110,100,105,99,101,115,49,54,0,109,95,110,117,109,84,114,105,97,110,103,108,101,115,0,109,95,110,117,109,86,101,114,116,105,99,101,115,0,42,109,95,109,101,115,104,80,97,114,116,115,80,116,114,0,109,95,115,99,97,108,105,110,103,0,109,95,110,117,109,77,101,115,104,80,97,114,116,115,0,109,95,109,101,115,104,73,110,116,101,114,102,97,99,101,0,42,109,95,113,117,97,110,116,105,122,101,100,70,108,111,97,116,66,118,104,0,42,109,95,113,117,97,110,116,105,122,101,100,68,111,117,98,108,101,66,118,104,0,42,109,95,116,114,105,97,110,103,108,101,73,110,102,111,77,97,112,0,109,95,112,97,100,51,91,52,93,0,109,95,116,114,105,109,101,115,104,83,104,97,112,101,68,97,116,97,0,109,95,116,114,97,110,115,102,111,114,109,0,42,109,95,99,104,105,108,100,83,104,97,112,101,0,109,95,99,104,105,108,100,83,104,97,112,101,84,121,112,101,0,109,95,99,104,105,108,100,77,97,114,103,105,110,0,42,109,95,99,104,105,108,100,83,104,97,112,101,80,116,114,0,109,95,110,117,109,67,104,105,108,100,83,104,97,112,101,115,0,109,95,117,112,65,120,105,115,0,109,95,102,108,97,103,115,0,109,95,101,100,103,101,86,48,86,49,65,110,103,108,101,0,109,95,101,100,103,101,86,49,86,50,65,110,103,108,101,0,109,95,101,100,103,101,86,50,86,48,65,110,103,108,101,0,42,109,95,104,97,115,104,84,97,98,108,101,80,116,114,0,42,109,95,110,101,120,116,80,116,114,0,42,109,95,118,97,108,117,101,65,114,114,97,121,80,116,114,0,42,109,95,107,101,121,65,114,114,97,121,80,116,114,0,109,95,99,111,110,118,101,120,69,112,115,105,108,111,110,0,109,95,112,108,97,110,97,114,69,112,115,105,108,111,110,0,109,95,101,113,117,97,108,86,101,114,116,101,120,84,104,114,101,115,104,111,108,100,0,109,95,101,100,103,101,68,105,115,116,97,110,99,101,84,104,114,101,115,104,111,108,100,0,109,95,122,101,114,111,65,114,101,97,84,104,114,101,115,104,111,108,100,0,109,95,110,101,120,116,83,105,122,101,0,109,95,104,97,115,104,84,97,98,108,101,83,105,122,101,0,109,95,110,117,109,86,97,108,117,101,115,0,109,95,110,117,109,75,101,121,115,0,109,95,103,105,109,112,97,99,116,83,117,98,84,121,112,101,0,42,109,95,117,110,115,99,97,108,101,100,80,111,105,110,116,115,70,108,111,97,116,80,116,114,0,42,109,95,117,110,115,99,97,108,101,100,80,111,105,110,116,115,68,111,117,98,108,101,80,116,114,0,109,95,110,117,109,85,110,115,99,97,108,101,100,80,111,105,110,116,115,0,109,95,112,97,100,100,105,110,103,51,91,52,93,0,42,109,95,98,114,111,97,100,112,104,97,115,101,72,97,110,100,108,101,0,42,109,95,99,111,108,108,105,115,105,111,110,83,104,97,112,101,0,42,109,95,114,111,111,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,0,109,95,119,111,114,108,100,84,114,97,110,115,102,111,114,109,0,109,95,105,110,116,101,114,112,111,108,97,116,105,111,110,87,111,114,108,100,84,114,97,110,115,102,111,114,109,0,109,95,105,110,116,101,114,112,111,108,97,116,105,111,110,76,105,110,101,97,114,86,101,108,111,99,105,116,121,0,109,95,105,110,116,101,114,112,111,108,97,116,105,111,110,65,110,103,117,108,97,114,86,101,108,111,99,105,116,121,0,109,95,97,110,105,115,111,116,114,111,112,105,99,70,114,105,99,116,105,111,110,0,109,95,99,111,110,116,97,99,116,80,114,111,99,101,115,115,105,110,103,84,104,114,101,115,104,111,108,100,0,109,95,100,101,97,99,116,105,118,97,116,105,111,110,84,105,109,101,0,109,95,102,114,105,99,116,105,111,110,0,109,95,114,101,115,116,105,116,117,116,105,111,110,0,109,95,104,105,116,70,114,97,99,116,105,111,110,0,109,95,99,99,100,83,119,101,112,116,83,112,104,101,114,101,82,97,100,105,117,115,0,109,95,99,99,100,77,111,116,105,111,110,84,104,114,101,115,104,111,108,100,0,109,95,104,97,115,65,110,105,115,111,116,114,111,112,105,99,70,114,105,99,116,105,111,110,0,109,95,99,111,108,108,105,115,105,111,110,70,108,97,103,115,0,109,95,105,115,108,97,110,100,84,97,103,49,0,109,95,99,111,109,112,97,110,105,111,110,73,100,0,109,95,97,99,116,105,118,97,116,105,111,110,83,116,97,116,101,49,0,109,95,105,110,116,101,114,110,97,108,84,121,112,101,0,109,95,99,104,101,99,107,67,111,108,108,105,100,101,87,105,116,104,0,109,95,99,111,108,108,105,115,105,111,110,79,98,106,101,99,116,68,97,116,97,0,109,95,105,110,118,73,110,101,114,116,105,97,84,101,110,115,111,114,87,111,114,108,100,0,109,95,108,105,110,101,97,114,86,101,108,111,99,105,116,121,0,109,95,97,110,103,117,108,97,114,86,101,108,111,99,105,116,121,0,109,95,97,110,103,117,108,97,114,70,97,99,116,111,114,0,109,95,108,105,110,101,97,114,70,97,99,116,111,114,0,109,95,103,114,97,118,105,116,121,0,109,95,103,114,97,118,105,116,121,95,97,99,99,101,108,101,114,97,116,105,111,110,0,109,95,105,110,118,73,110,101,114,116,105,97,76,111,99,97,108,0,109,95,116,111,116,97,108,70,111,114,99,101,0,109,95,116,111,116,97,108,84,111,114,113,117,101,0,109,95,105,110,118,101,114,115,101,77,97,115,115,0,109,95,108,105,110,101,97,114,68,97,109,112,105,110,103,0,109,95,97,110,103,117,108,97,114,68,97,109,112,105,110,103,0,109,95,97,100,100,105,116,105,111,110,97,108,68,97,109,112,105,110,103,70,97,99,116,111,114,0,109,95,97,100,100,105,116,105,111,110,97,108,76,105,110,101,97,114,68,97,109,112,105,110,103,84,104,114,101,115,104,111,108,100,83,113,114,0,109,95,97,100,100,105,116,105,111,110,97,108,65,110,103,117,108,97,114,68,97,109,112,105,110,103,84,104,114,101,115,104,111,108,100,83,113,114,0,109,95,97,100,100,105,116,105,111,110,97,108,65,110,103,117,108,97,114,68,97,109,112,105,110,103,70,97,99,116,111,114,0,109,95,108,105,110,101,97,114,83,108,101,101,112,105,110,103,84,104,114,101,115,104,111,108,100,0,109,95,97,110,103,117,108,97,114,83,108,101,101,112,105,110,103,84,104,114,101,115,104,111,108,100,0,109,95,97,100,100,105,116,105,111,110,97,108,68,97,109,112,105,110,103,0,109,95,110,117,109,67,111,110,115,116,114,97,105,110,116,82,111,119,115,0,110,117,98,0,42,109,95,114,98,65,0,42,109,95,114,98,66,0,109,95,111,98,106,101,99,116,84,121,112,101,0,109,95,117,115,101,114,67,111,110,115,116,114,97,105,110,116,84,121,112,101,0,109,95,117,115,101,114,67,111,110,115,116,114,97,105,110,116,73,100,0,109,95,110,101,101,100,115,70,101,101,100,98,97,99,107,0,109,95,97,112,112,108,105,101,100,73,109,112,117,108,115,101,0,109,95,100,98,103,68,114,97,119,83,105,122,101,0,109,95,100,105,115,97,98,108,101,67,111,108,108,105,115,105,111,110,115,66,101,116,119,101,101,110,76,105,110,107,101,100,66,111,100,105,101,115,0,109,95,112,97,100,52,91,52,93,0,109,95,116,121,112,101,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,109,95,112,105,118,111,116,73,110,65,0,109,95,112,105,118,111,116,73,110,66,0,109,95,114,98,65,70,114,97,109,101,0,109,95,114,98,66,70,114,97,109,101,0,109,95,117,115,101,82,101,102,101,114,101,110,99,101,70,114,97,109,101,65,0,109,95,97,110,103,117,108,97,114,79,110,108,121,0,109,95,101,110,97,98,108,101,65,110,103,117,108,97,114,77,111,116,111,114,0,109,95,109,111,116,111,114,84,97,114,103,101,116,86,101,108,111,99,105,116,121,0,109,95,109,97,120,77,111,116,111,114,73,109,112,117,108,115,101,0,109,95,108,111,119,101,114,76,105,109,105,116,0,109,95,117,112,112,101,114,76,105,109,105,116,0,109,95,108,105,109,105,116,83,111,102,116,110,101,115,115,0,109,95,98,105,97,115,70,97,99,116,111,114,0,109,95,114,101,108,97,120,97,116,105,111,110,70,97,99,116,111,114,0,109,95,115,119,105,110,103,83,112,97,110,49,0,109,95,115,119,105,110,103,83,112,97,110,50,0,109,95,116,119,105,115,116,83,112,97,110,0,109,95,100,97,109,112,105,110,103,0,109,95,108,105,110,101,97,114,85,112,112,101,114,76,105,109,105,116,0,109,95,108,105,110,101,97,114,76,111,119,101,114,76,105,109,105,116,0,109,95,97,110,103,117,108,97,114,85,112,112,101,114,76,105,109,105,116,0,109,95,97,110,103,117,108,97,114,76,111,119,101,114,76,105,109,105,116,0,109,95,117,115,101,76,105,110,101,97,114,82,101,102,101,114,101,110,99,101,70,114,97,109,101,65,0,109,95,117,115,101,79,102,102,115,101,116,70,111,114,67,111,110,115,116,114,97,105,110,116,70,114,97,109,101,0,109,95,54,100,111,102,68,97,116,97,0,109,95,115,112,114,105,110,103,69,110,97,98,108,101,100,91,54,93,0,109,95,101,113,117,105,108,105,98,114,105,117,109,80,111,105,110,116,91,54,93,0,109,95,115,112,114,105,110,103,83,116,105,102,102,110,101,115,115,91,54,93,0,109,95,115,112,114,105,110,103,68,97,109,112,105,110,103,91,54,93,0,109,95,108,105,110,101,97,114,83,116,105,102,102,110,101,115,115,0,109,95,97,110,103,117,108,97,114,83,116,105,102,102,110,101,115,115,0,109,95,118,111,108,117,109,101,83,116,105,102,102,110,101,115,115,0,42,109,95,109,97,116,101,114,105,97,108,0,109,95,112,111,115,105,116,105,111,110,0,109,95,112,114,101,118,105,111,117,115,80,111,115,105,116,105,111,110,0,109,95,118,101,108,111,99,105,116,121,0,109,95,97,99,99,117,109,117,108,97,116,101,100,70,111,114,99,101,0,109,95,110,111,114,109,97,108,0,109,95,97,114,101,97,0,109,95,97,116,116,97,99,104,0,109,95,110,111,100,101,73,110,100,105,99,101,115,91,50,93,0,109,95,114,101,115,116,76,101,110,103,116,104,0,109,95,98,98,101,110,100,105,110,103,0,109,95,110,111,100,101,73,110,100,105,99,101,115,91,51,93,0,109,95,114,101,115,116,65,114,101,97,0,109,95,99,48,91,52,93,0,109,95,110,111,100,101,73,110,100,105,99,101,115,91,52,93,0,109,95,114,101,115,116,86,111,108,117,109,101,0,109,95,99,49,0,109,95,99,50,0,109,95,99,48,0,109,95,108,111,99,97,108,70,114,97,109,101,0,42,109,95,114,105,103,105,100,66,111,100,121,0,109,95,110,111,100,101,73,110,100,101,120,0,109,95,97,101,114,111,77,111,100,101,108,0,109,95,98,97,117,109,103,97,114,116,101,0,109,95,100,114,97,103,0,109,95,108,105,102,116,0,109,95,112,114,101,115,115,117,114,101,0,109,95,118,111,108,117,109,101,0,109,95,100,121,110,97,109,105,99,70,114,105,99,116,105,111,110,0,109,95,112,111,115,101,77,97,116,99,104,0,109,95,114,105,103,105,100,67,111,110,116,97,99,116,72,97,114,100,110,101,115,115,0,109,95,107,105,110,101,116,105,99,67,111,110,116,97,99,116,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,67,111,110,116,97,99,116,72,97,114,100,110,101,115,115,0,109,95,97,110,99,104,111,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,82,105,103,105,100,67,108,117,115,116,101,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,75,105,110,101,116,105,99,67,108,117,115,116,101,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,83,111,102,116,67,108,117,115,116,101,114,72,97,114,100,110,101,115,115,0,109,95,115,111,102,116,82,105,103,105,100,67,108,117,115,116,101,114,73,109,112,117,108,115,101,83,112,108,105,116,0,109,95,115,111,102,116,75,105,110,101,116,105,99,67,108,117,115,116,101,114,73,109,112,117,108,115,101,83,112,108,105,116,0,109,95,115,111,102,116,83,111,102,116,67,108,117,115,116,101,114,73,109,112,117,108,115,101,83,112,108,105,116,0,109,95,109,97,120,86,111,108,117,109,101,0,109,95,116,105,109,101,83,99,97,108,101,0,109,95,118,101,108,111,99,105,116,121,73,116,101,114,97,116,105,111,110,115,0,109,95,112,111,115,105,116,105,111,110,73,116,101,114,97,116,105,111,110,115,0,109,95,100,114,105,102,116,73,116,101,114,97,116,105,111,110,115,0,109,95,99,108,117,115,116,101,114,73,116,101,114,97,116,105,111,110,115,0,109,95,114,111,116,0,109,95,115,99,97,108,101,0,109,95,97,113,113,0,109,95,99,111,109,0,42,109,95,112,111,115,105,116,105,111,110,115,0,42,109,95,119,101,105,103,104,116,115,0,109,95,110,117,109,80,111,115,105,116,105,111,110,115,0,109,95,110,117,109,87,101,105,103,116,115,0,109,95,98,118,111,108,117,109,101,0,109,95,98,102,114,97,109,101,0,109,95,102,114,97,109,101,120,102,111,114,109,0,109,95,108,111,99,105,105,0,109,95,105,110,118,119,105,0,109,95,118,105,109,112,117,108,115,101,115,91,50,93,0,109,95,100,105,109,112,117,108,115,101,115,91,50,93,0,109,95,108,118,0,109,95,97,118,0,42,109,95,102,114,97,109,101,114,101,102,115,0,42,109,95,110,111,100,101,73,110,100,105,99,101,115,0,42,109,95,109,97,115,115,101,115,0,109,95,110,117,109,70,114,97,109,101,82,101,102,115,0,109,95,110,117,109,78,111,100,101,115,0,109,95,110,117,109,77,97,115,115,101,115,0,109,95,105,100,109,97,115,115,0,109,95,105,109,97,115,115,0,109,95,110,118,105,109,112,117,108,115,101,115,0,109,95,110,100,105,109,112,117,108,115,101,115,0,109,95,110,100,97,109,112,105,110,103,0,109,95,108,100,97,109,112,105,110,103,0,109,95,97,100,97,109,112,105,110,103,0,109,95,109,97,116,99,104,105,110,103,0,109,95,109,97,120,83,101,108,102,67,111,108,108,105,115,105,111,110,73,109,112,117,108,115,101,0,109,95,115,101,108,102,67,111,108,108,105,115,105,111,110,73,109,112,117,108,115,101,70,97,99,116,111,114,0,109,95,99,111,110,116,97,105,110,115,65,110,99,104,111,114,0,109,95,99,111,108,108,105,100,101,0,109,95,99,108,117,115,116,101,114,73,110,100,101,120,0,42,109,95,98,111,100,121,65,0,42,109,95,98,111,100,121,66,0,109,95,114,101,102,115,91,50,93,0,109,95,99,102,109,0,109,95,101,114,112,0,109,95,115,112,108,105,116,0,109,95,100,101,108,101,116,101,0,109,95,114,101,108,80,111,115,105,116,105,111,110,91,50,93,0,109,95,98,111,100,121,65,116,121,112,101,0,109,95,98,111,100,121,66,116,121,112,101,0,109,95,106,111,105,110,116,84,121,112,101,0,42,109,95,112,111,115,101,0,42,42,109,95,109,97,116,101,114,105,97,108,115,0,42,109,95,110,111,100,101,115,0,42,109,95,108,105,110,107,115,0,42,109,95,102,97,99,101,115,0,42,109,95,116,101,116,114,97,104,101,100,114,97,0,42,109,95,97,110,99,104,111,114,115,0,42,109,95,99,108,117,115,116,101,114,115,0,42,109,95,106,111,105,110,116,115,0,109,95,110,117,109,77,97,116,101,114,105,97,108,115,0,109,95,110,117,109,76,105,110,107,115,0,109,95,110,117,109,70,97,99,101,115,0,109,95,110,117,109,84,101,116,114,97,104,101,100,114,97,0,109,95,110,117,109,65,110,99,104,111,114,115,0,109,95,110,117,109,67,108,117,115,116,101,114,115,0,109,95,110,117,109,74,111,105,110,116,115,0,109,95,99,111,110,102,105,103,0,0,0,0,84,89,80,69,72,0,0,0,99,104,97,114,0,117,99,104,97,114,0,115,104,111,114,116,0,117,115,104,111,114,116,0,105,110,116,0,108,111,110,103,0,117,108,111,110,103,0,102,108,111,97,116,0,100,111,117,98,108,101,0,118,111,105,100,0,80,111,105,110,116,101,114,65,114,114,97,121,0,98,116,80,104,121,115,105,99,115,83,121,115,116,101,109,0,76,105,115,116,66,97,115,101,0,98,116,86,101,99,116,111,114,51,70,108,111,97,116,68,97,116,97,0,98,116,86,101,99,116,111,114,51,68,111,117,98,108,101,68,97,116,97,0,98,116,77,97,116,114,105,120,51,120,51,70,108,111,97,116,68,97,116,97,0,98,116,77,97,116,114,105,120,51,120,51,68,111,117,98,108,101,68,97,116,97,0,98,116,84,114,97,110,115,102,111,114,109,70,108,111,97,116,68,97,116,97,0,98,116,84,114,97,110,115,102,111,114,109,68,111,117,98,108,101,68,97,116,97,0,98,116,66,118,104,83,117,98,116,114,101,101,73,110,102,111,68,97,116,97,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,70,108,111,97,116,68,97,116,97,0,98,116,79,112,116,105,109,105,122,101,100,66,118,104,78,111,100,101,68,111,117,98,108,101,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,78,111,100,101,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,70,108,111,97,116,68,97,116,97,0,98,116,81,117,97,110,116,105,122,101,100,66,118,104,68,111,117,98,108,101,68,97,116,97,0,98,116,67,111,108,108,105,115,105,111,110,83,104,97,112,101,68,97,116,97,0,98,116,83,116,97,116,105,99,80,108,97,110,101,83,104,97,112,101,68,97,116,97,0,98,116,67,111,110,118,101,120,73,110,116,101,114,110,97,108,83,104,97,112,101,68,97,116,97,0,98,116,80,111,115,105,116,105,111,110,65,110,100,82,97,100,105,117,115,0,98,116,77,117,108,116,105,83,112,104,101,114,101,83,104,97,112,101,68,97,116,97,0,98,116,73,110,116,73,110,100,101,120,68,97,116,97,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,68,97,116,97,0,98,116,83,104,111,114,116,73,110,116,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,67,104,97,114,73,110,100,101,120,84,114,105,112,108,101,116,68,97,116,97,0,98,116,77,101,115,104,80,97,114,116,68,97,116,97,0,98,116,83,116,114,105,100,105,110,103,77,101,115,104,73,110,116,101,114,102,97,99,101,68,97,116,97,0,98,116,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,98,116,84,114,105,97,110,103,108,101,73,110,102,111,77,97,112,68,97,116,97,0,98,116,83,99,97,108,101,100,84,114,105,97,110,103,108,101,77,101,115,104,83,104,97,112,101,68,97,116,97,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,67,104,105,108,100,68,97,116,97,0,98,116,67,111,109,112,111,117,110,100,83,104,97,112,101,68,97,116,97,0,98,116,67,121,108,105,110,100,101,114,83,104,97,112,101,68,97,116,97,0,98,116,67,97,112,115,117,108,101,83,104,97,112,101,68,97,116,97,0,98,116,84,114,105,97,110,103,108,101,73,110,102,111,68,97,116,97,0,98,116,71,73,109,112,97,99,116,77,101,115,104,83,104,97,112,101,68,97,116,97,0,98,116,67,111,110,118,101,120,72,117,108,108,83,104,97,112,101,68,97,116,97,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,68,111,117,98,108,101,68,97,116,97,0,98,116,67,111,108,108,105,115,105,111,110,79,98,106,101,99,116,70,108,111,97,116,68,97,116,97,0,98,116,82,105,103,105,100,66,111,100,121,70,108,111,97,116,68,97,116,97,0,98,116,82,105,103,105,100,66,111,100,121,68,111,117,98,108,101,68,97,116,97,0,98,116,67,111,110,115,116,114,97,105,110,116,73,110,102,111,49,0,98,116,84,121,112,101,100,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,82,105,103,105,100,66,111,100,121,68,97,116,97,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,98,116,80,111,105,110,116,50,80,111,105,110,116,67,111,110,115,116,114,97,105,110,116,68,111,117,98,108,101,68,97,116,97,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,68,111,117,98,108,101,68,97,116,97,0,98,116,72,105,110,103,101,67,111,110,115,116,114,97,105,110,116,70,108,111,97,116,68,97,116,97,0,98,116,67,111,110,101,84,119,105,115,116,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,71,101,110,101,114,105,99,54,68,111,102,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,71,101,110,101,114,105,99,54,68,111,102,83,112,114,105,110,103,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,98,116,83,108,105,100,101,114,67,111,110,115,116,114,97,105,110,116,68,97,116,97,0,83,111,102,116,66,111,100,121,77,97,116,101,114,105,97,108,68,97,116,97,0,83,111,102,116,66,111,100,121,78,111,100,101,68,97,116,97,0,83,111,102,116,66,111,100,121,76,105,110,107,68,97,116,97,0,83,111,102,116,66,111,100,121,70,97,99,101,68,97,116,97,0,83,111,102,116,66,111,100,121,84,101,116,114,97,68,97,116,97,0,83,111,102,116,82,105,103,105,100,65,110,99,104,111,114,68,97,116,97,0,83,111,102,116,66,111,100,121,67,111,110,102,105,103,68,97,116,97,0,83,111,102,116,66,111,100,121,80,111,115,101,68,97,116,97,0,83,111,102,116,66,111,100,121,67,108,117,115,116,101,114,68,97,116,97,0,98,116,83,111,102,116,66,111,100,121,74,111,105,110,116,68,97,116,97,0,98,116,83,111,102,116,66,111,100,121,70,108,111,97,116,68,97,116,97,0,84,76,69,78,1,0,1,0,2,0,2,0,4,0,4,0,4,0,4,0,8,0,0,0,16,0,48,0,16,0,16,0,32,0,48,0,96,0,64,0,128,0,20,0,48,0,80,0,16,0,96,0,144,0,16,0,56,0,56,0,20,0,72,0,4,0,4,0,8,0,4,0,56,0,32,0,80,0,72,0,96,0,80,0,32,0,64,0,64,0,16,0,72,0,80,0,216,1,8,1,240,1,168,3,8,0,56,0,0,0,88,0,120,0,96,1,224,0,216,0,0,1,96,1,208,0,16,0,104,0,24,0,40,0,104,0,96,0,104,0,200,0,104,1,112,0,216,1,83,84,82,67,61,0,0,0,10,0,3,0,4,0,0,0,4,0,1,0,9,0,2,0,11,0,3,0,10,0,3,0,10,0,4,0,10,0,5,0,12,0,2,0,9,0,6,0,9,0,7,0,13,0,1,0,7,0,8,0,14,0,1,0,8,0,8,0,15,0,1,0,13,0,9,0,16,0,1,0,14,0,9,0,17,0,2,0,15,0,10,0,13,0,11,0,18,0,2,0,16,0,10,0,14,0,11,0,19,0,4,0,4,0,12,0,4,0,13,0,2,0,14,0,2,0,15,0,20,0,6,0,13,0,16,0,13,0,17,0,4,0,18,0,4,0,19,0,4,0,20,0,0,0,21,0,21,0,6,0,14,0,16,0,14,0,17,0,4,0,18,0,4,0,19,0,4,0,20,0,0,0,21,0,22,0,3,0,2,0,14,0,2,0,15,0,4,0,22,0,23,0,12,0,13,0,23,0,13,0,24,0,13,0,25,0,4,0,26,0,4,0,27,0,4,0,28,0,4,0,29,0,20,0,30,0,22,0,31,0,19,0,32,0,4,0,33,0,4,0,34,0,24,0,12,0,14,0,23,0,14,0,24,0,14,0,25,0,4,0,26,0,4,0,27,0,4,0,28,0,4,0,29,0,21,0,30,0,22,0,31,0,4,0,33,0,4,0,34,0,19,0,32,0,25,0,3,0,0,0,35,0,4,0,36,0,0,0,37,0,26,0,5,0,25,0,38,0,13,0,39,0,13,0,40,0,7,0,41,0,0,0,21,0,27,0,5,0,25,0,38,0,13,0,39,0,13,0,42,0,7,0,43,0,4,0,44,0,28,0,2,0,13,0,45,0,7,0,46,0,29,0,4,0,27,0,47,0,28,0,48,0,4,0,49,0,0,0,37,0,30,0,1,0,4,0,50,0,31,0,2,0,2,0,50,0,0,0,51,0,32,0,2,0,2,0,52,0,0,0,51,0,33,0,2,0,0,0,52,0,0,0,53,0,34,0,8,0,13,0,54,0,14,0,55,0,30,0,56,0,32,0,57,0,33,0,58,0,31,0,59,0,4,0,60,0,4,0,61,0,35,0,4,0,34,0,62,0,13,0,63,0,4,0,64,0,0,0,37,0,36,0,7,0,25,0,38,0,35,0,65,0,23,0,66,0,24,0,67,0,37,0,68,0,7,0,43,0,0,0,69,0,38,0,2,0,36,0,70,0,13,0,39,0,39,0,4,0,17,0,71,0,25,0,72,0,4,0,73,0,7,0,74,0,40,0,4,0,25,0,38,0,39,0,75,0,4,0,76,0,7,0,43,0,41,0,3,0,27,0,47,0,4,0,77,0,0,0,37,0,42,0,3,0,27,0,47,0,4,0,77,0,0,0,37,0,43,0,4,0,4,0,78,0,7,0,79,0,7,0,80,0,7,0,81,0,37,0,14,0,4,0,82,0,4,0,83,0,43,0,84,0,4,0,85,0,7,0,86,0,7,0,87,0,7,0,88,0,7,0,89,0,7,0,90,0,4,0,91,0,4,0,92,0,4,0,93,0,4,0,94,0,0,0,37,0,44,0,5,0,25,0,38,0,35,0,65,0,13,0,39,0,7,0,43,0,4,0,95,0,45,0,5,0,27,0,47,0,13,0,96,0,14,0,97,0,4,0,98,0,0,0,99,0,46,0,24,0,9,0,100,0,9,0,101,0,25,0,102,0,0,0,35,0,18,0,103,0,18,0,104,0,14,0,105,0,14,0,106,0,14,0,107,0,8,0,108,0,8,0,109,0,8,0,110,0,8,0,111,0,8,0,112,0,8,0,113,0,8,0,114,0,4,0,115,0,4,0,116,0,4,0,117,0,4,0,118,0,4,0,119,0,4,0,120,0,4,0,121,0,0,0,37,0,47,0,23,0,9,0,100,0,9,0,101,0,25,0,102,0,0,0,35,0,17,0,103,0,17,0,104,0,13,0,105,0,13,0,106,0,13,0,107,0,7,0,108,0,7,0,109,0,7,0,110,0,7,0,111,0,7,0,112,0,7,0,113,0,7,0,114,0,4,0,115,0,4,0,116,0,4,0,117,0,4,0,118,0,4,0,119,0,4,0,120,0,4,0,121,0,48,0,21,0,47,0,122,0,15,0,123,0,13,0,124,0,13,0,125,0,13,0,126,0,13,0,127,0,13,0,128,0,13,0,129,0,13,0,130,0,13,0,131,0,13,0,132,0,7,0,133,0,7,0,134,0,7,0,135,0,7,0,136,0,7,0,137,0,7,0,138,0,7,0,139,0,7,0,140,0,7,0,141,0,4,0,142,0,49,0,22,0,46,0,122,0,16,0,123,0,14,0,124,0,14,0,125,0,14,0,126,0,14,0,127,0,14,0,128,0,14,0,129,0,14,0,130,0,14,0,131,0,14,0,132,0,8,0,133,0,8,0,134,0,8,0,135,0,8,0,136,0,8,0,137,0,8,0,138,0,8,0,139,0,8,0,140,0,8,0,141,0,4,0,142,0,0,0,37,0,50,0,2,0,4,0,143,0,4,0,144,0,51,0,11,0,52,0,145,0,52,0,146,0,0,0,35,0,4,0,147,0,4,0,148,0,4,0,149,0,4,0,150,0,7,0,151,0,7,0,152,0,4,0,153,0,0,0,154,0,53,0,3,0,51,0,155,0,13,0,156,0,13,0,157,0,54,0,3,0,51,0,155,0,14,0,156,0,14,0,157,0,55,0,13,0,51,0,155,0,18,0,158,0,18,0,159,0,4,0,160,0,4,0,161,0,4,0,162,0,7,0,163,0,7,0,164,0,7,0,165,0,7,0,166,0,7,0,167,0,7,0,168,0,7,0,169,0,56,0,13,0,51,0,155,0,17,0,158,0,17,0,159,0,4,0,160,0,4,0,161,0,4,0,162,0,7,0,163,0,7,0,164,0,7,0,165,0,7,0,166,0,7,0,167,0,7,0,168,0,7,0,169,0,57,0,11,0,51,0,155,0,17,0,158,0,17,0,159,0,7,0,170,0,7,0,171,0,7,0,172,0,7,0,167,0,7,0,168,0,7,0,169,0,7,0,173,0,0,0,21,0,58,0,9,0,51,0,155,0,17,0,158,0,17,0,159,0,13,0,174,0,13,0,175,0,13,0,176,0,13,0,177,0,4,0,178,0,4,0,179,0,59,0,5,0,58,0,180,0,4,0,181,0,7,0,182,0,7,0,183,0,7,0,184,0,60,0,9,0,51,0,155,0,17,0,158,0,17,0,159,0,7,0,174,0,7,0,175,0,7,0,176,0,7,0,177,0,4,0,178,0,4,0,179,0,61,0,4,0,7,0,185,0,7,0,186,0,7,0,187,0,4,0,78,0,62,0,10,0,61,0,188,0,13,0,189,0,13,0,190,0,13,0,191,0,13,0,192,0,13,0,193,0,7,0,133,0,7,0,194,0,4,0,195,0,4,0,53,0,63,0,4,0,61,0,188,0,4,0,196,0,7,0,197,0,4,0,198,0,64,0,4,0,13,0,193,0,61,0,188,0,4,0,199,0,7,0,200,0,65,0,7,0,13,0,201,0,61,0,188,0,4,0,202,0,7,0,203,0,7,0,204,0,7,0,205,0,4,0,53,0,66,0,6,0,15,0,206,0,13,0,204,0,13,0,207,0,52,0,208,0,4,0,209,0,7,0,205,0,67,0,26,0,4,0,210,0,7,0,211,0,7,0,173,0,7,0,212,0,7,0,213,0,7,0,214,0,7,0,215,0,7,0,216,0,7,0,217,0,7,0,218,0,7,0,219,0,7,0,220,0,7,0,221,0,7,0,222,0,7,0,223,0,7,0,224,0,7,0,225,0,7,0,226,0,7,0,227,0,7,0,228,0,7,0,229,0,4,0,230,0,4,0,231,0,4,0,232,0,4,0,233,0,4,0,116,0,68,0,12,0,15,0,234,0,15,0,235,0,15,0,236,0,13,0,237,0,13,0,238,0,7,0,239,0,4,0,240,0,4,0,241,0,4,0,242,0,4,0,243,0,7,0,203,0,4,0,53,0,69,0,27,0,17,0,244,0,15,0,245,0,15,0,246,0,13,0,237,0,13,0,247,0,13,0,248,0,13,0,249,0,13,0,250,0,13,0,251,0,4,0,252,0,7,0,253,0,4,0,254,0,4,0,255,0,4,0,0,1,7,0,1,1,7,0,2,1,4,0,3,1,4,0,4,1,7,0,5,1,7,0,6,1,7,0,7,1,7,0,8,1,7,0,9,1,7,0,10,1,4,0,11,1,4,0,12,1,4,0,13,1,70,0,12,0,9,0,14,1,9,0,15,1,13,0,16,1,7,0,17,1,7,0,18,1,7,0,19,1,4,0,20,1,13,0,21,1,4,0,22,1,4,0,23,1,4,0,24,1,4,0,53,0,71,0,19,0,47,0,122,0,68,0,25,1,61,0,26,1,62,0,27,1,63,0,28,1,64,0,29,1,65,0,30,1,66,0,31,1,69,0,32,1,70,0,33,1,4,0,34,1,4,0,255,0,4,0,35,1,4,0,36,1,4,0,37,1,4,0,38,1,4,0,39,1,4,0,40,1,67,0,41,1],"i8",q);u([8276],"i32",q);x4=u(117,"i32 i32 i32 i32 * * * i32 i32 i32 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * i32 i32 i32 * i32 * i32 * i32".split(" "),q);z4=u(6,"i32",q);D.Of=u([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0],"i8",q);D.Nf=u([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",q);D.Pf=u([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",q);u(1,"i8",q);Htb=u(1,"void ()*",q);Jtb=u([0,0,30,8800,8802],"*",q);u(1,"void*",q);D.Je=u([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0],"i8",q);Otb=u([0,0,30,8804,8806],"*",q);u(1,"void*",q);D.ke=u([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",q);D.ld=u([83,116,57,98,97,100,95,97,108,108,111,99,0],"i8",q);F4=u(3,"*",q);D.kd=u([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",q);S8=u(3,"*",q);D.Wf=u([45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0],"i8",q);D.Xf=u([119,104,97,116,39,115,32,119,114,111,110,103,0],"i8",q);G4=u([1],"i8*",q);c[q3+1]=V4;c[U4]=G4+2;c[U4+1]=D.ba;c[V4]=NaN;c[V4+1]=D.La;c[V4+4]=U4;c[kLa+1]=X4;H4=u([2],"i8*",q);c[W4]=G4+2;c[W4+1]=D.Nc;c[X4]=H4+2;c[X4+1]=D.Rc;c[X4+2]=W4;c[cLa+1]=W4;c[uLa+1]=Y4;c[Y4]=G4+2;c[Y4+1]=D.tc;c[tLa+1]=Z4;c[Z4]=G4+2;c[Z4+1]=D.hd;c[DLa+1]=b5;c[a5]=G4+2;c[a5+1]=D.Oc;c[b5]=H4+2;c[b5+1]=D.nc;c[b5+2]=a5;c[wLa+1]=a5;c[IW+1]=d5;c[c5]=G4+2;c[c5+1]=D.Mc;c[d5]=H4+2;c[d5+1]=D.Pc;c[d5+2]=c5;c[yLa+1]=c5;c[rMa+1]=e5;c[e5]=H4+2;c[e5+1]=D.Qc;c[e5+2]=c5;c[vMa+1]=g5;c[f5]=G4+2;c[f5+1]=D.$;c[g5]=H4+2;c[g5+1]=D.hb;c[g5+2]=f5;c[nMa+1]=f5;c[HMa+1]=h5;c[h5]=G4+2;c[h5+1]=D.Wa;c[SMa+1]=j5;c[i5]=G4+2;c[i5+1]=D.Jc;c[j5]=H4+2;c[j5+1]=D.ub;c[j5+2]=i5;c[OMa+1]=i5;c[$W+1]=l5;c[k5]=G4+2;c[k5+1]=D.fb;c[l5]=H4+2;c[l5+1]=D.qc;c[l5+2]=k5;c[fNa+1]=q5;c[kNa+1]=o5;c[m5]=G4+2;c[m5+1]=D.lb;c[n5]=H4+2;c[n5+1]=D.cb;c[n5+2]=m5;c[o5]=H4+2;c[o5+1]=D.Da;c[o5+2]=n5;c[p5]=H4+2;c[p5+1]=D.eb;c[p5+2]=m5;c[q5]=H4+2;c[q5+1]=D.Q;c[q5+2]=p5;c[cX+1]=p5;c[fX+1]=n5;c[vX+1]=t5;c[r5]=G4+2;c[r5+1]=D.$b;c[s5]=H4+2;c[s5+1]=D.zb;c[s5+2]=r5;c[t5]=H4+2;c[t5+1]=D.oa;c[t5+2]=s5;c[aOa+1]=s5;c[tOa+1]=r5;c[XNa+1]=m5;c[zX+1]=u5;c[u5]=H4+2;c[u5+1]=D.rc;c[u5+2]=l5;c[jub+1]=v5;c[v5]=H4+2;c[v5+1]=D.R;c[v5+2]=R7;c[IX+1]=w5;c[w5]=H4+2;c[w5+1]=D.dc;c[w5+2]=l5;c[APa+1]=x5;c[x5]=H4+2;c[x5+1]=D.ra;c[x5+2]=i5;c[nLa+1]=y5;c[y5]=H4+2;c[y5+1]=D.N;c[y5+2]=R7;c[OX+1]=z5;c[z5]=H4+2;c[z5+1]=D.vb;c[z5+2]=p8;c[rQa+1]=B5;c[A5]=G4+2;c[A5+1]=D.pb;c[B5]=H4+2;c[B5+1]=D.Jd;c[B5+2]=A5;c[eQa+1]=A5;c[xQa+1]=C5;c[C5]=H4+2;c[C5+1]=D.yd;c[C5+2]=A5;c[BQa+1]=D5;c[D5]=H4+2;c[D5+1]=D.xd;c[D5+2]=A5;c[RX+1]=E5;c[IQa+1]=G5;c[SQa+1]=F5;c[E5]=H4+2;c[E5+1]=D.ca;c[E5+2]=A6;c[F5]=H4+2;c[F5+1]=D.ia;c[F5+2]=E5;c[G5]=H4+2;c[G5+1]=D.ha;c[G5+2]=E5;c[RQa+1]=k5;c[SX+1]=H5;c[H5]=H4+2;c[H5+1]=D.mb;c[H5+2]=d7;c[FRa+1]=J5;c[I5]=G4+2;c[I5+1]=D.Ja;c[J5]=H4+2;c[J5+1]=D.Db;c[J5+2]=I5;c[lRa+1]=I5;c[KRa+1]=K5;c[K5]=G4+2;c[K5+1]=D.Fa;c[tVa+1]=L5;c[L5]=G4+2;c[L5+1]=D.sa;c[bY+1]=M5;c[M5]=G4+2;c[M5+1]=D.ta;c[GY+1]=N5;c[GY+7]=N5;c[N5]=NaN;c[N5+1]=D.Ca;c[N5+4]=k8;c[N5+6]=l8;c[ETa+1]=O5;c[O5]=H4+2;c[O5+1]=D.Bb;c[O5+2]=z7;c[HTa+1]=Q5;c[P5]=G4+2;c[P5+1]=D.Pb;c[Q5]=H4+2;c[Q5+1]=D.Nb;c[Q5+2]=P5;c[vTa+1]=P5;c[NTa+1]=S5;c[R5]=H4+2;c[R5+1]=D.Cb;c[R5+2]=P5;c[S5]=H4+2;c[S5+1]=D.rb;c[S5+2]=R5;c[OTa+1]=R5;c[VTa+1]=T5;c[T5]=H4+2;c[T5+1]=D.$a;c[T5+2]=R5;c[ZTa+1]=U5;c[U5]=H4+2;c[U5+1]=D.sd;c[U5+2]=W4;c[eUa+1]=V5;c[V5]=H4+2;c[V5+1]=D.ud;c[V5+2]=V7;c[iUa+1]=W5;c[W5]=H4+2;c[W5+1]=D.td;c[W5+2]=V7;c[RTa+1]=X5;c[X5]=G4+2;c[X5+1]=D.uc;c[qUa+1]=Y5;c[Y5]=H4+2;c[Y5+1]=D.od;c[Y5+2]=c5;c[GUa+1]=a6;c[Z5]=G4+2;c[Z5+1]=D.jd;c[a6]=H4+2;c[a6+1]=D.rd;c[a6+2]=Z5;c[yUa+1]=Z5;c[OUa+1]=b6;c[b6]=H4+2;c[b6+1]=D.qd;c[b6+2]=U7;c[VUa+1]=c6;c[c6]=H4+2;c[c6+1]=D.pd;c[c6+2]=U7;c[ZUa+1]=d6;c[d6]=G4+2;c[d6+1]=D.Lc;c[OY+1]=e6;c[e6]=H4+2;c[e6+1]=D.ic;c[e6+2]=l5;c[AVa+1]=f6;c[f6]=H4+2;c[f6+1]=D.wb;c[f6+2]=Z5;c[VY+1]=g6;c[g6]=H4+2;c[g6+1]=D.ja;c[g6+2]=L5;c[gWa+1]=h6;c[h6]=H4+2;c[h6+1]=D.da;c[h6+2]=L5;c[jWa+1]=i6;c[kWa+1]=k6;c[lWa+1]=j6;c[i6]=H4+2;c[i6+1]=D.O;c[i6+2]=A6;c[j6]=H4+2;c[j6+1]=D.S;c[j6+2]=i6;c[k6]=H4+2;c[k6+1]=D.T;c[k6+2]=i6;c[eZ+1]=l6;c[l6]=H4+2;c[l6+1]=D.fc;c[l6+2]=q6;c[GWa+1]=m6;c[m6]=H4+2;c[m6+1]=D.za;c[m6+2]=Z4;c[KWa+1]=o6;c[jZ+1]=n6;c[n6]=H4+2;c[n6+1]=D.gc;c[n6+2]=l5;c[o6]=H4+2;c[o6+1]=D.Zc;c[o6+2]=Y4;c[YWa+1]=p6;c[p6]=H4+2;c[p6+1]=D.ka;c[p6+2]=F6;c[fWa+1]=q6;c[q6]=G4+2;c[q6+1]=D.U;c[pZ+1]=r6;c[rZ+1]=s6;c[r6]=H4+2;c[r6+1]=D.Cc;c[r6+2]=l5;c[s6]=H4+2;c[s6+1]=D.Rb;c[s6+2]=k8;c[BXa+1]=t6;c[t6]=H4+2;c[t6+1]=D.Gd;c[t6+2]=k8;c[JXa+1]=u6;c[u6]=H4+2;c[u6+1]=D.pa;c[u6+2]=R7;c[VXa+1]=w6;c[uZ+1]=v6;c[v6]=H4+2;c[v6+1]=D.Fb;c[v6+2]=l5;c[w6]=H4+2;c[w6+1]=D.Wc;c[w6+2]=Y4;c[uYa+1]=x6;c[x6]=H4+2;c[x6+1]=D.Tb;c[x6+2]=z7;c[yYa+1]=y6;c[y6]=H4+2;c[y6+1]=D.zd;c[y6+2]=Z4;c[wZ+1]=z6;c[z6]=H4+2;c[z6+1]=D.Ga;c[z6+2]=S7;c[QYa+1]=A6;c[UYa+1]=B6;c[A6]=H4+2;c[A6+1]=D.ob;c[A6+2]=F6;c[B6]=H4+2;c[B6+1]=D.Ac;c[B6+2]=A6;c[AZ+1]=C6;c[C6]=H4+2;c[C6+1]=D.xc;c[C6+2]=k5;c[kub+1]=D6;c[D6]=H4+2;c[D6+1]=D.Gb;c[D6+2]=S7;c[CZ+1]=E6;c[E6]=G4+2;c[E6+1]=D.Na;c[r_a+1]=F6;c[F6]=H4+2;c[F6+1]=D.Y;c[F6+2]=L5;c[Q_a+1]=G6;c[G6]=H4+2;c[G6+1]=D.Wb;c[G6+2]=S7;c[lub+1]=H6;c[H6]=H4+2;c[H6+1]=D.Ld;c[H6+2]=l8;c[mub+1]=I6;c[I6]=H4+2;c[I6+1]=D.Kd;c[I6+2]=l8;c[X_a+1]=J6;c[J6]=H4+2;c[J6+1]=D.cc;c[J6+2]=l8;c[$_a+1]=K6;c[a0a+1]=L6;c[b0a+1]=M6;c[K6]=H4+2;c[K6+1]=D.la;c[K6+2]=A6;c[L6]=H4+2;c[L6+1]=D.ua;c[L6+2]=K6;c[M6]=H4+2;c[M6+1]=D.va;c[M6+2]=K6;c[n1a+1]=N6;c[N6]=H4+2;c[N6+1]=D.gb;c[N6+2]=Z5;c[d_+1]=O6;c[O6]=H4+2;c[O6+1]=D.wa;c[O6+2]=m5;c[Z1a+1]=P6;c[P6]=H4+2;c[P6+1]=D.bb;c[P6+2]=Z5;c[b2a+1]=Q6;c[Q6]=H4+2;c[Q6+1]=D.Xa;c[Q6+2]=Z5;c[e2a+1]=R6;c[R6]=H4+2;c[R6+1]=D.Oa;c[R6+2]=Z5;c[j_+1]=T6;c[S6]=G4+2;c[S6+1]=D.Qb;c[T6]=H4+2;c[T6+1]=D.yc;c[T6+2]=S6;c[D2a+1]=U6;c[U6]=H4+2;c[U6+1]=D.cd;c[U6+2]=Y4;c[H2a+1]=V6;c[V6]=H4+2;c[V6+1]=D.Yc;c[V6+2]=Y4;c[L2a+1]=W6;c[W6]=H4+2;c[W6+1]=D.gd;c[W6+2]=Y4;c[Q2a+1]=X6;c[X6]=H4+2;c[X6+1]=D.dd;c[X6+2]=Y4;c[U2a+1]=Y6;c[Y6]=H4+2;c[Y6+1]=D.Sc;c[Y6+2]=Y4;c[Z2a+1]=Z6;c[Z6]=H4+2;c[Z6+1]=D.bd;c[Z6+2]=Y4;c[c3a+1]=a7;c[a7]=H4+2;c[a7+1]=D.ad;c[a7+2]=Y4;c[g3a+1]=b7;c[b7]=H4+2;c[b7+1]=D.fd;c[b7+2]=Y4;c[s3a+1]=c7;c[c7]=H4+2;c[c7+1]=D.ed;c[c7+2]=Y4;c[j2a+1]=S6;c[QQa+1]=d7;c[d7]=G4+2;c[d7+1]=D.V;c[A3a+1]=e7;c[e7]=H4+2;c[e7+1]=D.xa;c[e7+2]=k5;c[E3a+1]=f7;c[f7]=H4+2;c[f7+1]=D.W;c[f7+2]=h6;c[r_+1]=g7;c[g7]=H4+2;c[g7+1]=D.hc;c[g7+2]=l5;c[nub+1]=h7;c[h7]=H4+2;c[h7+1]=D.$c;c[h7+2]=Y4;c[j5a+1]=i7;c[i7]=H4+2;c[i7+1]=D.Yb;c[i7+2]=k8;c[H_+1]=j7;c[j7]=H4+2;c[j7+1]=D.Ka;c[j7+2]=u6;c[z5a+1]=l7;c[k7]=G4+2;c[k7+1]=D.Tc;c[l7]=H4+2;c[l7+1]=D.Uc;c[l7+2]=k7;c[x5a+1]=k7;c[F5a+1]=m7;c[m7]=H4+2;c[m7+1]=D.Vc;c[m7+2]=k7;c[K5a+1]=n7;c[n7]=H4+2;c[n7+1]=D.jb;c[n7+2]=i8;c[y8a+1]=p7;c[o7]=H4+2;c[o7+1]=D.Ib;c[o7+2]=h6;c[p7]=H4+2;c[p7+1]=D.xb;c[p7+2]=o7;c[oub+1]=q7;c[q7]=H4+2;c[q7+1]=D.yb;c[q7+2]=o7;c[n8a+1]=r7;c[r7]=H4+2;c[r7+1]=D.Pa;c[r7+2]=o7;c[h8a+1]=o7;c[X_+1]=s7;c[Z_+1]=t7;c[s7]=H4+2;c[s7+1]=D.Z;c[s7+2]=K5;c[t7]=H4+2;c[t7+1]=D.Sb;c[t7+2]=s7;c[J8a+1]=u7;c[u7]=H4+2;c[u7+1]=D.na;c[u7+2]=q6;c[lUa+1]=v7;c[v7]=H4+2;c[v7+1]=D.vc;c[v7+2]=X5;c[l0+1]=w7;c[w7]=H4+2;c[w7+1]=D.Ha;c[w7+2]=i5;c[m0+1]=x7;c[x7]=H4+2;c[x7+1]=D.Zb;c[x7+2]=h6;c[pub+1]=y7;c[y7]=H4+2;c[y7+1]=D.Eb;c[y7+2]=k8;c[HW+1]=z7;c[z7]=H4+2;c[z7+1]=D.ya;c[z7+2]=Z4;c[w3a+1]=A7;c[A7]=H4+2;c[A7+1]=D.Dc;c[A7+2]=X5;c[j$a+1]=B7;c[B7]=H4+2;c[B7+1]=D.Hd;c[B7+2]=Z4;c[n$a+1]=C7;c[C7]=H4+2;c[C7+1]=D.Za;c[C7+2]=A6;c[L$a+1]=D7;c[D7]=H4+2;c[D7+1]=D.ib;c[D7+2]=m5;c[Dab+1]=E7;c[E7]=H4+2;c[E7+1]=D.vd;c[E7+2]=A5;c[qub+1]=G7;c[F7]=G4+2;c[F7+1]=D.Kb;c[G7]=H4+2;c[G7+1]=D.wd;c[G7+2]=F7;c[rub+1]=F7;c[A0+1]=H7;c[H7]=H4+2;c[H7+1]=D.Ra;c[H7+2]=B6;c[Tab+1]=I7;c[I7]=H4+2;c[I7+1]=D.ea;c[I7+2]=T7;c[vbb+1]=J7;c[J7]=H4+2;c[J7+1]=D.md;c[J7+2]=l8;c[Abb+1]=K7;c[K7]=H4+2;c[K7+1]=D.nd;c[K7+2]=l8;c[U0+1]=L7;c[Z0+1]=M7;c[L7]=H4+2;c[L7+1]=D.jc;c[L7+2]=s5;c[M7]=H4+2;c[M7+1]=D.lc;c[M7+2]=s5;c[Dcb+1]=N7;c[N7]=H4+2;c[N7+1]=D.Fd;c[N7+2]=I5;c[Gcb+1]=O7;c[O7]=H4+2;c[O7+1]=D.Ed;c[O7+2]=I5;c[Kcb+1]=P7;c[P7]=H4+2;c[P7+1]=D.Dd;c[P7+2]=I5;c[Ncb+1]=Q7;c[Q7]=H4+2;c[Q7+1]=D.Cd;c[Q7+2]=I5;c[a1+1]=R7;c[tdb+1]=S7;c[R7]=H4+2;c[R7+1]=D.Mb;c[R7+2]=A6;c[S7]=H4+2;c[S7+1]=D.Fc;c[S7+2]=R7;c[f1+1]=T7;c[T7]=G4+2;c[T7+1]=D.fa;c[aeb+1]=U7;c[geb+1]=V7;c[U7]=H4+2;c[U7+1]=D.bc;c[U7+2]=k8;c[V7]=H4+2;c[V7+1]=D.mc;c[V7+2]=k8;c[meb+1]=W7;c[W7]=H4+2;c[W7+1]=D.kc;c[W7+2]=h6;c[veb+1]=X7;c[X7]=H4+2;c[X7+1]=D.Ub;c[X7+2]=k8;c[A1+1]=Y7;c[Y7]=H4+2;c[Y7+1]=D.Sa;c[Y7+2]=m5;c[B1+1]=Z7;c[Z7]=G4+2;c[Z7+1]=D.ac;c[J1+1]=a8;c[a8]=H4+2;c[a8+1]=D.pc;c[a8+2]=l5;c[NKa+1]=b8;c[b8]=H4+2;c[b8+1]=D.aa;c[b8+2]=A6;c[YW+1]=c8;c[c8]=H4+2;c[c8+1]=D.Bc;c[c8+2]=l5;c[K1+1]=d8;c[d8]=H4+2;c[d8+1]=D.Gc;c[d8+2]=l5;c[Yfb+1]=e8;c[e8]=H4+2;c[e8+1]=D.Ua;c[e8+2]=h6;c[eLa+1]=f8;c[f8]=G4+2;c[f8+1]=D.Ob;c[ogb+1]=g8;c[g8]=H4+2;c[g8+1]=D.Bd;c[g8+2]=l8;c[rgb+1]=h8;c[h8]=H4+2;c[h8+1]=D.Ab;c[h8+2]=q6;c[L1+1]=i8;c[i8]=H4+2;c[i8+1]=D.qa;c[i8+2]=S7;c[$gb+1]=j8;c[j8]=H4+2;c[j8+1]=D.Ba;c[j8+2]=k8;c[sTa+1]=k8;c[k8]=G4+2;c[k8+1]=D.Va;c[tTa+1]=l8;c[l8]=G4+2;c[l8+1]=D.zc;c[AW+1]=m8;c[m8]=H4+2;c[m8+1]=D.ec;c[m8+2]=f8;c[R1+1]=n8;c[n8]=H4+2;c[n8+1]=D.Hc;c[n8+2]=m8;c[T1+1]=o8;c[o8]=H4+2;c[o8+1]=D.ga;c[o8+2]=m8;c[bib+1]=p8;c[p8]=H4+2;c[p8+1]=D.ab;c[p8+2]=h6;c[nib+1]=q8;c[q8]=H4+2;c[q8+1]=D.kb;c[q8+2]=k8;c[rib+1]=r8;c[r8]=H4+2;c[r8+1]=D.Id;c[r8+2]=l8;c[Eib+1]=s8;c[s8]=H4+2;c[s8+1]=D.sb;c[s8+2]=F6;c[h2+1]=t8;c[t8]=H4+2;c[t8+1]=D.nb;c[t8+2]=V4;c[sub+1]=u8;c[u8]=H4+2;c[u8+1]=D.Ya;c[u8+2]=V4;c[Hjb+1]=v8;c[v8]=H4+2;c[v8+1]=D.Vb;c[v8+2]=x8;c[u2+1]=x8;c[w8]=H4+2;c[w8+1]=D.ma;c[w8+2]=M5;c[x8]=H4+2;c[x8+1]=D.Hb;c[x8+2]=w8;c[Ilb+1]=y8;c[y8]=H4+2;c[y8+1]=D.Ec;c[y8+2]=X4;c[G2+1]=A8;c[z8]=G4+2;c[z8+1]=D.Xc;c[A8]=H4+2;c[A8+1]=D.Ad;c[A8+2]=z8;c[Xlb+1]=z8;c[Ujb+1]=w8;c[H2+1]=B8;c[B8]=H4+2;c[B8+1]=D.Jb;c[B8+2]=V4;c[Lmb+1]=C8;c[C8]=H4+2;c[C8+1]=D.oc;c[C8+2]=B8;c[Vmb+1]=D8;c[D8]=H4+2;c[D8+1]=D.Qa;c[D8+2]=C8;c[O2+1]=E8;c[E8]=H4+2;c[E8+1]=D.Ia;c[E8+2]=V4;c[R2+1]=H8;c[F8]=G4+2;c[F8+1]=D.Ea;c[G8]=H4+2;c[G8+1]=D.sc;c[G8+2]=F8;c[H8]=H4+2;c[H8+1]=D.wc;c[H8+2]=G8;c[Onb+1]=I8;c[I8]=H4+2;c[I8+1]=D.Kc;c[I8+2]=X4;c[rnb+1]=G8;c[Inb+1]=F8;c[V2+1]=J8;c[J8]=H4+2;c[J8+1]=D.Lb;c[J8+2]=V4;c[Z2+1]=K8;c[K8]=H4+2;c[K8+1]=D.Aa;c[K8+2]=F8;c[LMa+1]=L8;c[L8]=H4+2;c[L8+1]=D.Xb;c[L8+2]=h5;c[a3+1]=M8;c[M8]=H4+2;c[M8+1]=D.P;c[M8+2]=K5;c[b3+1]=O8;c[N8]=G4+2;c[N8+1]=D.Ma;c[O8]=H4+2;c[O8+1]=D.Ic;c[O8+2]=N8;c[Sob+1]=N8;c[o3+1]=P8;c[P8]=H4+2;c[P8+1]=D.qb;c[P8+2]=w8;c[p3+1]=Q8;c[Q8]=H4+2;c[Q8+1]=D.Ta;c[Q8+2]=V4;c[rqb+1]=R8;c[R8]=H4+2;c[R8+1]=D.tb;c[R8+2]=B8;c[w4]=v4;c[Jtb+1]=F4;c[Otb+1]=S8;c[F4]=H4+2;c[F4+1]=D.ld;c[F4+2]=fa;c[S8]=H4+2;c[S8+1]=D.kd;c[S8+2]=F4;v=[0,0,os,0,f5a,0,tf,0,kf,0,qSa,0,a$a,0,gob,0,uqb,0,wqb,0,yqb,0,zqb,0,urb,0,ktb,0,t4,0,Mtb,0,vKa,0,wKa,0,CJa,0,DJa,0,(function(){aa("Pure virtual function called!")}),0,EJa,0,vaa,0,o2,0,lLa,0,mLa,0,oLa,0,DW,0,pLa,0,qLa,0,zLa,0,ALa,0,rLa,0,BLa,0,CLa,0,ELa,0,FLa,0,xLa,0,sLa,0,GLa,0,HLa,0,ILa,0,KLa,0,RLa,0,WLa,0,pMa,0,qMa,0,sMa,0,tMa,0,uMa,0,wMa,0,xMa,0,yMa,0,zMa,0,AMa,0,BMa,0,MMa,0,NMa,0,wb,0,yb,0,Cb,0,Fb,0,waa,0,xaa,0,Pb,0,yaa,0,Zb,0,zaa,0,Aaa,0,Baa,0,Caa,0,oc,0,Daa,0,yc,0,Eaa,0,Faa,0,Vc,0,dd,0,Haa,0,Iaa,0,Jaa,0,Kaa,0,Laa,0,Maa,0,Naa,0,Oaa,0,vd,0,ke,0,le,0,Saa,0,oe,0,Taa,0,se,0,Uaa,0,we,0,ye,0,Be,0,Ce,0,zd,0,Ad,0,Bd,0,Ed,0,Fd,0,Id,0,Jd,0,Md,0,Nd,0,Od,0,Paa,0,Pd,0,Qd,0,Ee,0,Sd,0,Qaa,0,Td,0,Ud,0,Vd,0,Wd,0,Yd,0,ae,0,be,0,ce,0,de,0,Fe,0,Xaa,0,Ne,0,Yaa,0,Re,0,Zaa,0,Ve,0,We,0,Xe,0,$aa,0,aba,0,bba,0,ef,0,ff,0,cba,0,dba,0,hf,0,mf,0,pf,0,qf,0,eba,0,rf,0,vf,0,fba,0,gba,0,hba,0,iba,0,Df,0,Ef,0,Ff,0,jba,0,kba,0,lba,0,mba,0,Nf,0,Of,0,nba,0,Pf,0,Qf,0,Rf,0,Sf,0,oba,0,pba,0,qba,0,Zf,0,$f,0,ag,0,dg,0,eg,0,rba,0,kg,0,lg,0,mg,0,ng,0,sba,0,og,0,tba,0,uba,0,Ig,0,zba,0,Jg,0,Kg,0,Bh,0,Fh,0,Gh,0,Hh,0,Aba,0,Mg,0,Bba,0,Pg,0,Qg,0,Cba,0,Dba,0,Rg,0,Ug,0,Eba,0,Fba,0,Wg,0,Gba,0,Hba,0,Iba,0,ah,0,Jba,0,ch,0,dh,0,Kba,0,gh,0,Lba,0,Mba,0,jh,0,kh,0,Nba,0,Oba,0,mh,0,nh,0,oh,0,ph,0,qh,0,Pba,0,Qba,0,Rba,0,Sba,0,Tba,0,uh,0,vh,0,wh,0,Uba,0,vba,0,wba,0,zg,0,Ag,0,Bg,0,xba,0,Cg,0,Dg,0,yba,0,Eg,0,Fg,0,Gg,0,xh,0,Hg,0,zh,0,Ih,0,Jh,0,Kh,0,Lh,0,Mh,0,Wba,0,Xba,0,Yba,0,Zba,0,$ba,0,si,0,aca,0,bca,0,ti,0,vi,0,cca,0,yi,0,dca,0,eca,0,Ci,0,fca,0,gca,0,hca,0,ica,0,jca,0,kca,0,lca,0,Ei,0,mca,0,nca,0,oca,0,pca,0,qca,0,Gi,0,rca,0,sca,0,tca,0,uca,0,Ii,0,vca,0,wca,0,xca,0,yca,0,zca,0,Aca,0,Bca,0,Cca,0,Dca,0,Eca,0,Fca,0,Gca,0,Hca,0,Ica,0,Jca,0,Kca,0,Lca,0,Mca,0,Nca,0,Oca,0,Pca,0,Qca,0,Rca,0,Sca,0,Tca,0,Uca,0,ej,0,fj,0,gj,0,hj,0,ij,0,jj,0,kj,0,lj,0,mj,0,nj,0,oj,0,pj,0,qj,0,Vca,0,rj,0,Wca,0,uj,0,wj,0,Xca,0,Yca,0,Zca,0,xj,0,zj,0,Aj,0,$ca,0,ada,0,bda,0,cda,0,dda,0,eda,0,fda,0,Ej,0,Fj,0,Gj,0,Jj,0,Kj,0,Lj,0,Mj,0,Oj,0,gda,0,Pj,0,Qj,0,aj,0,bj,0,Rj,0,cj,0,dj,0,Sj,0,Tj,0,Uj,0,Vj,0,jk,0,kk,0,lk,0,mk,0,nk,0,ok,0,pk,0,kda,0,ida,0,lda,0,mda,0,jda,0,nda,0,oda,0,Zj,0,uk,0,xk,0,pda,0,qda,0,rda,0,sda,0,tda,0,uda,0,vda,0,wda,0,xda,0,Dk,0,bk,0,yda,0,dk,0,ek,0,fk,0,gk,0,zda,0,Gk,0,Hk,0,Ada,0,Bda,0,Cda,0,Ik,0,Jk,0,Dda,0,Pk,0,Rk,0,Mk,0,Eda,0,Nk,0,Fda,0,Gda,0,Ok,0,Wk,0,Xk,0,Hda,0,Ida,0,Jda,0,Kda,0,Lda,0,Mda,0,Nda,0,cl,0,dl,0,Oda,0,Pda,0,hl,0,Qda,0,il,0,jl,0,ll,0,ml,0,nl,0,ol,0,Rda,0,Sda,0,ql,0,Tda,0,Uda,0,Vda,0,rl,0,sl,0,Wda,0,tl,0,Xda,0,ul,0,vl,0,wl,0,xl,0,zl,0,Yda,0,Al,0,Zda,0,Bl,0,Cl,0,Dl,0,El,0,Fl,0,Gl,0,Hl,0,Il,0,$da,0,Kl,0,Ll,0,Ml,0,aea,0,Nl,0,Ol,0,Pl,0,Ql,0,bea,0,cea,0,Ul,0,Vl,0,Wl,0,dea,0,Yl,0,lm,0,gea,0,hea,0,nm,0,pm,0,iea,0,qm,0,rm,0,sm,0,tm,0,um,0,vm,0,wm,0,xm,0,jea,0,zm,0,kea,0,lea,0,Bm,0,Cm,0,mea,0,nea,0,Em,0,Fm,0,Gm,0,Hm,0,Im,0,em,0,fm,0,gm,0,eea,0,hm,0,fea,0,Km,0,pea,0,Nm,0,qea,0,rea,0,sea,0,tea,0,uea,0,Qm,0,Sm,0,vea,0,wea,0,xea,0,cn,0,zea,0,Aea,0,Bea,0,Cea,0,Ym,0,jn,0,Dea,0,Eea,0,Fea,0,Gea,0,Hea,0,Iea,0,Jea,0,Kea,0,Lea,0,Mea,0,Nea,0,Oea,0,Pea,0,Qea,0,Rea,0,Sea,0,Tea,0,Uea,0,Pn,0,Rn,0,Tn,0,Vea,0,Wea,0,Xea,0,Yea,0,Zea,0,$ea,0,afa,0,bfa,0,cfa,0,dfa,0,efa,0,ffa,0,gfa,0,hfa,0,ifa,0,jfa,0,kfa,0,lfa,0,Cn,0,mfa,0,nfa,0,ofa,0,pfa,0,qfa,0,rfa,0,sfa,0,ufa,0,vfa,0,wfa,0,xfa,0,yfa,0,zfa,0,Afa,0,Bfa,0,Cfa,0,Dfa,0,Efa,0,Ffa,0,Gfa,0,Hfa,0,go,0,Ifa,0,Jfa,0,io,0,jo,0,Kfa,0,Lfa,0,Mfa,0,Nfa,0,lo,0,Ofa,0,Pfa,0,Qfa,0,Rfa,0,Sfa,0,Tfa,0,qo,0,Ufa,0,Vfa,0,Wfa,0,Xfa,0,Yfa,0,Yn,0,Zfa,0,$fa,0,aga,0,bga,0,cga,0,dga,0,ega,0,fga,0,gga,0,hga,0,iga,0,jga,0,kga,0,lga,0,mga,0,nga,0,oga,0,pga,0,qga,0,rga,0,sga,0,tga,0,uga,0,vga,0,$n,0,Ao,0,wga,0,xga,0,yga,0,zga,0,Aga,0,Bga,0,Cga,0,Dga,0,Fga,0,Gga,0,Hga,0,Iga,0,Eo,0,No,0,Jga,0,Kga,0,Lga,0,Mga,0,Nga,0,Oga,0,Pga,0,Qga,0,Rga,0,Sga,0,To,0,Uo,0,Tga,0,Vo,0,Uga,0,Vga,0,Wga,0,Ega,0,Xga,0,Yga,0,Zga,0,$ga,0,aha,0,bp,0,bha,0,ep,0,dha,0,eha,0,jp,0,kp,0,lp,0,mp,0,np,0,fha,0,op,0,gha,0,wp,0,iha,0,tp,0,jha,0,Jo,0,up,0,vp,0,kha,0,yp,0,Qp,0,Rp,0,Sp,0,Tp,0,Up,0,Vp,0,lha,0,Wp,0,mha,0,nha,0,oha,0,pha,0,qha,0,rha,0,Xp,0,sha,0,Yp,0,tha,0,uha,0,vha,0,wha,0,Zp,0,$p,0,xha,0,yha,0,aq,0,zha,0,Aha,0,bq,0,cq,0,dq,0,Bha,0,gq,0,hq,0,iq,0,jq,0,Cha,0,kq,0,lq,0,Dha,0,oq,0,pq,0,qq,0,rq,0,Eha,0,sq,0,vq,0,yq,0,zq,0,Fha,0,Gha,0,Aq,0,Hha,0,Iha,0,Bq,0,Jha,0,Kha,0,Cq,0,Dq,0,Eq,0,Fq,0,Lha,0,Mha,0,Nha,0,qr,0,Oha,0,rr,0,sr,0,tr,0,ur,0,vr,0,Pha,0,Qha,0,Rha,0,Sha,0,Tha,0,Gq,0,wr,0,yr,0,Hq,0,Uha,0,Iq,0,Jq,0,Kq,0,Ar,0,Lq,0,Mq,0,Nq,0,Oq,0,Br,0,Cr,0,Dr,0,Pq,0,Er,0,Qq,0,Fr,0,Rq,0,Gr,0,Sq,0,Tq,0,Uq,0,Vq,0,Wq,0,Xq,0,Yq,0,Zq,0,$q,0,Vha,0,Wha,0,Xha,0,br,0,Ir,0,Jr,0,cr,0,Yha,0,dr,0,er,0,Lr,0,fr,0,gr,0,Mr,0,hr,0,ir,0,Zha,0,jr,0,Or,0,$ha,0,lr,0,mr,0,or,0,pr,0,Pr,0,Qr,0,Rr,0,$r,0,aia,0,bia,0,as,0,bs,0,cs,0,ds,0,cia,0,dia,0,es,0,eia,0,gs,0,hs,0,fia,0,is,0,js,0,ks,0,ls,0,ms,0,gia,0,ns,0,hia,0,ps,0,ws,0,ys,0,zs,0,As,0,iia,0,jia,0,lia,0,mia,0,oia,0,pia,0,Hs,0,Is,0,Js,0,Ks,0,Ls,0,ria,0,Ms,0,sia,0,Os,0,Ps,0,Qs,0,tia,0,Rs,0,Ss,0,uia,0,Xs,0,Ys,0,Zs,0,yia,0,via,0,at,0,bt,0,dt,0,wia,0,Us,0,Vs,0,et,0,ft,0,zia,0,gt,0,ht,0,it,0,Aia,0,Bia,0,jt,0,kt,0,lt,0,mt,0,nt,0,Cia,0,Dia,0,pt,0,qt,0,Eia,0,rt,0,st,0,tt,0,ut,0,vt,0,wt,0,xt,0,yt,0,Fia,0,zt,0,At,0,Bt,0,Ct,0,Gia,0,Dt,0,Et,0,Hia,0,Gt,0,Ht,0,Iia,0,Jia,0,Kia,0,It,0,Jt,0,Lia,0,Mia,0,Wt,0,Oia,0,Pia,0,Zt,0,$t,0,au,0,bu,0,cu,0,du,0,eu,0,fu,0,gu,0,hu,0,iu,0,Qia,0,ju,0,Ria,0,lu,0,Sia,0,mu,0,Tia,0,nu,0,ou,0,Uia,0,Via,0,pu,0,Wia,0,qu,0,Xia,0,Yia,0,Ot,0,ru,0,Zia,0,$ia,0,aja,0,bja,0,cja,0,Rt,0,tu,0,uu,0,vu,0,wu,0,dja,0,xu,0,yu,0,eja,0,zu,0,Bu,0,fja,0,Eu,0,gja,0,hja,0,ija,0,jja,0,kja,0,lja,0,Fu,0,mja,0,nja,0,Gu,0,oja,0,pja,0,Hu,0,sja,0,tja,0,Ju,0,uja,0,vja,0,Yu,0,yja,0,zja,0,Aja,0,Bja,0,Cja,0,Zu,0,dv,0,Dja,0,ev,0,fv,0,gv,0,Eja,0,Fja,0,Gja,0,Hja,0,hv,0,Ija,0,Jja,0,Kja,0,Lja,0,Mja,0,Nja,0,Oja,0,kv,0,lv,0,Pja,0,Qja,0,Rja,0,Sja,0,Tja,0,Uja,0,Uu,0,Vja,0,Wja,0,Xja,0,rv,0,Yja,0,Xu,0,Zja,0,$ja,0,aka,0,vv,0,bka,0,xv,0,cka,0,zv,0,dka,0,Bv,0,Dv,0,Ev,0,Rv,0,ika,0,jka,0,Sv,0,Tv,0,kka,0,Uv,0,lka,0,mka,0,nka,0,Wv,0,Xv,0,Yv,0,oka,0,pka,0,Zv,0,qka,0,$v,0,rka,0,ska,0,tka,0,uka,0,vka,0,cw,0,wka,0,xka,0,yka,0,zka,0,Aka,0,dw,0,Bka,0,ew,0,fw,0,gw,0,hw,0,jw,0,kw,0,Cka,0,Dka,0,mw,0,nw,0,Eka,0,Fka,0,Gka,0,Hka,0,Ika,0,Jka,0,Kka,0,Lka,0,Mka,0,Nka,0,hka,0,Kv,0,Lv,0,Oka,0,Nv,0,Pka,0,Ov,0,Pv,0,Qv,0,yw,0,zw,0,$w,0,bx,0,Aw,0,Bw,0,Ska,0,Cw,0,Dw,0,Qka,0,Ew,0,Fw,0,Gw,0,Hw,0,Iw,0,Jw,0,Kw,0,Lw,0,dx,0,Mw,0,Nw,0,Ow,0,Pw,0,Qw,0,Rw,0,Tka,0,Tw,0,Uw,0,Vw,0,Ww,0,ex,0,fx,0,Uka,0,gx,0,Vka,0,Wka,0,jx,0,kx,0,lx,0,Xka,0,Yka,0,Zka,0,mx,0,nx,0,px,0,$ka,0,ala,0,qx,0,tx,0,bla,0,xx,0,yx,0,zx,0,Cx,0,cla,0,dla,0,ela,0,fla,0,Dx,0,Ex,0,Fx,0,gla,0,hla,0,ila,0,jla,0,Gx,0,Hx,0,kla,0,Ix,0,Jx,0,lla,0,Kx,0,Lx,0,mla,0,nla,0,ola,0,Ox,0,pla,0,Px,0,qla,0,rla,0,Sx,0,Tx,0,Ux,0,sla,0,tla,0,ula,0,Vx,0,Wx,0,vla,0,wla,0,Yx,0,ay,0,xla,0,dy,0,ey,0,fy,0,iy,0,yla,0,zla,0,Ala,0,Bla,0,Cla,0,jy,0,ky,0,ly,0,Dla,0,Ela,0,Fla,0,Gla,0,my,0,ny,0,Hla,0,oy,0,py,0,Ila,0,qy,0,ry,0,Jla,0,sy,0,Kla,0,Mx,0,Lla,0,uy,0,Mla,0,wy,0,yy,0,Nla,0,Dy,0,Ola,0,Ey,0,Jy,0,Ly,0,My,0,Pla,0,Gy,0,Hy,0,Qla,0,hz,0,Ny,0,iz,0,jz,0,kz,0,lz,0,Xla,0,mz,0,nz,0,Yla,0,Zla,0,pz,0,qz,0,rz,0,sz,0,tz,0,vz,0,wz,0,xz,0,Py,0,Rla,0,Qy,0,Sla,0,Ry,0,yz,0,Bz,0,Dz,0,Sy,0,Ty,0,Uy,0,Vy,0,Wy,0,Fz,0,Tla,0,Gz,0,Xy,0,Yy,0,Zy,0,$y,0,Hz,0,az,0,bz,0,$la,0,dz,0,ez,0,Iz,0,Jz,0,Ula,0,fz,0,Kz,0,Lz,0,Mz,0,Vla,0,gz,0,Nz,0,Oz,0,Uz,0,Vz,0,Wla,0,Wz,0,Xz,0,ama,0,Yz,0,bma,0,cma,0,aA,0,MA,0,NA,0,hma,0,ima,0,OA,0,QA,0,RA,0,jma,0,kma,0,SA,0,VA,0,lma,0,YA,0,ZA,0,$A,0,cB,0,mma,0,nma,0,oma,0,pma,0,qma,0,dB,0,eB,0,fB,0,rma,0,sma,0,tma,0,uma,0,gB,0,hB,0,vma,0,iB,0,jB,0,wma,0,kB,0,lB,0,xma,0,yma,0,zma,0,mB,0,bA,0,cA,0,dA,0,eA,0,fA,0,gA,0,nB,0,hA,0,iA,0,dma,0,jA,0,kA,0,lA,0,mA,0,nA,0,oA,0,pA,0,qA,0,rA,0,sA,0,tA,0,oB,0,uA,0,vA,0,wA,0,xA,0,yA,0,Bma,0,zA,0,AA,0,BA,0,qB,0,rB,0,ema,0,CA,0,DA,0,EA,0,FA,0,GA,0,tB,0,HA,0,IA,0,fma,0,JA,0,KA,0,LA,0,gma,0,uB,0,vB,0,AB,0,wB,0,Cma,0,Dma,0,Ema,0,Fma,0,Gma,0,Hma,0,DB,0,Ima,0,Jma,0,EB,0,Kma,0,Lma,0,Mma,0,NB,0,Nma,0,SB,0,Oma,0,VB,0,Pma,0,Qma,0,Rma,0,mC,0,Sma,0,Tma,0,Uma,0,Vma,0,pC,0,qC,0,Wma,0,Xma,0,sC,0,Yma,0,Zma,0,$ma,0,ana,0,bna,0,xC,0,yC,0,cna,0,dna,0,DC,0,ena,0,fna,0,gna,0,hna,0,ina,0,GC,0,HC,0,jna,0,IC,0,kna,0,MC,0,NC,0,lna,0,mna,0,nna,0,ona,0,pna,0,OC,0,PC,0,qna,0,rna,0,sna,0,QC,0,tna,0,una,0,TC,0,vna,0,WC,0,wna,0,xna,0,ZC,0,$C,0,yna,0,zna,0,aD,0,Ana,0,Bna,0,bD,0,Cna,0,Dna,0,cD,0,Ena,0,Fna,0,dD,0,gD,0,hD,0,Gna,0,Hna,0,Ina,0,Jna,0,Kna,0,iD,0,Lna,0,Mna,0,Nna,0,Ona,0,Pna,0,Qna,0,Rna,0,lD,0,mD,0,Sna,0,nD,0,Tna,0,oD,0,pD,0,qD,0,rD,0,sD,0,tD,0,uD,0,vD,0,wD,0,xD,0,YD,0,ZD,0,$D,0,yD,0,aE,0,zD,0,AD,0,Una,0,BD,0,CD,0,DD,0,Vna,0,bE,0,dE,0,ED,0,Wna,0,Xna,0,FD,0,GD,0,HD,0,eE,0,Yna,0,fE,0,ID,0,JD,0,gE,0,hE,0,iE,0,KD,0,LD,0,MD,0,coa,0,Zna,0,jE,0,OD,0,lE,0,mE,0,PD,0,$na,0,nE,0,QD,0,RD,0,oE,0,SD,0,aoa,0,boa,0,qE,0,rE,0,sE,0,tE,0,doa,0,eoa,0,foa,0,goa,0,wE,0,xE,0,zE,0,ioa,0,joa,0,koa,0,loa,0,moa,0,EE,0,ooa,0,poa,0,JE,0,LE,0,qoa,0,NE,0,roa,0,OE,0,eF,0,fF,0,gF,0,uoa,0,voa,0,woa,0,xoa,0,yoa,0,zoa,0,Aoa,0,Boa,0,lF,0,mF,0,nF,0,UE,0,oF,0,VE,0,WE,0,XE,0,pF,0,qF,0,YE,0,ZE,0,soa,0,$E,0,toa,0,aF,0,Coa,0,bF,0,rF,0,sF,0,cF,0,tF,0,Eoa,0,uF,0,Foa,0,Goa,0,xF,0,yF,0,zF,0,AF,0,Hoa,0,BF,0,Ioa,0,CF,0,DF,0,Joa,0,EF,0,HF,0,KF,0,LF,0,Koa,0,MF,0,PF,0,Loa,0,Moa,0,Noa,0,Ooa,0,QF,0,RF,0,Poa,0,Qoa,0,Roa,0,Soa,0,Toa,0,SF,0,TF,0,Uoa,0,UF,0,lG,0,PG,0,mG,0,nG,0,Xoa,0,oG,0,Yoa,0,Zoa,0,VF,0,WF,0,XF,0,YF,0,ZF,0,$F,0,$oa,0,aG,0,bG,0,sG,0,cG,0,tG,0,dG,0,uG,0,vG,0,eG,0,Voa,0,Woa,0,fG,0,xG,0,yG,0,zG,0,apa,0,BG,0,CG,0,bpa,0,cpa,0,dpa,0,EG,0,FG,0,epa,0,GG,0,HG,0,IG,0,fpa,0,JG,0,gpa,0,hpa,0,ipa,0,KG,0,LG,0,MG,0,OG,0,kpa,0,aH,0,rpa,0,spa,0,dH,0,eH,0,fH,0,tpa,0,gH,0,upa,0,hH,0,iH,0,vpa,0,jH,0,mH,0,pH,0,qH,0,wpa,0,rH,0,uH,0,xpa,0,ypa,0,zpa,0,Apa,0,vH,0,wH,0,Bpa,0,Cpa,0,Dpa,0,Epa,0,Fpa,0,xH,0,yH,0,Gpa,0,zH,0,AH,0,BH,0,CH,0,DH,0,Hpa,0,QH,0,EH,0,Ipa,0,Jpa,0,RG,0,HH,0,IH,0,JH,0,SG,0,KH,0,LH,0,lpa,0,mpa,0,npa,0,TG,0,UG,0,opa,0,VG,0,Kpa,0,Lpa,0,ppa,0,WG,0,Mpa,0,XG,0,Npa,0,qpa,0,Opa,0,MH,0,ZG,0,$G,0,NH,0,Ppa,0,gI,0,hI,0,SH,0,TH,0,UH,0,Qpa,0,Rpa,0,VH,0,WH,0,Spa,0,iI,0,jI,0,XH,0,YH,0,kI,0,ZH,0,$H,0,lI,0,mI,0,nI,0,oI,0,qI,0,Upa,0,Vpa,0,Wpa,0,sI,0,tI,0,Xpa,0,vI,0,Ypa,0,Zpa,0,wI,0,$pa,0,xI,0,zI,0,BI,0,CI,0,aqa,0,bqa,0,EI,0,cqa,0,FI,0,dqa,0,eqa,0,II,0,VI,0,JI,0,fqa,0,gqa,0,MI,0,hqa,0,PI,0,iqa,0,RI,0,jqa,0,SI,0,kqa,0,YI,0,ZI,0,lqa,0,aJ,0,mqa,0,nqa,0,oqa,0,pqa,0,bJ,0,qqa,0,dJ,0,eJ,0,rqa,0,fJ,0,gJ,0,sqa,0,tqa,0,jJ,0,kJ,0,uqa,0,lJ,0,mJ,0,nJ,0,oJ,0,vqa,0,wqa,0,xqa,0,pJ,0,yqa,0,qJ,0,rJ,0,sJ,0,uJ,0,wJ,0,xJ,0,yJ,0,zqa,0,Aqa,0,zJ,0,AJ,0,BJ,0,CJ,0,DJ,0,Bqa,0,Cqa,0,Dqa,0,Eqa,0,EJ,0,FJ,0,Fqa,0,Gqa,0,GJ,0,Hqa,0,Iqa,0,HJ,0,IJ,0,JJ,0,Jqa,0,KJ,0,Kqa,0,LJ,0,Lqa,0,Mqa,0,OJ,0,PJ,0,QJ,0,Nqa,0,RJ,0,Oqa,0,UJ,0,VJ,0,Pqa,0,WJ,0,Qqa,0,ZJ,0,$J,0,aK,0,Rqa,0,Sqa,0,Tqa,0,Uqa,0,bK,0,Vqa,0,cK,0,dK,0,Wqa,0,eK,0,Xqa,0,Yqa,0,hK,0,iK,0,Zqa,0,jK,0,kK,0,lK,0,mK,0,$qa,0,ara,0,bra,0,nK,0,oK,0,cra,0,rK,0,sK,0,tK,0,dra,0,uK,0,era,0,xK,0,yK,0,fra,0,zK,0,CK,0,DK,0,EK,0,gra,0,hra,0,ira,0,jra,0,FK,0,GK,0,HK,0,kra,0,IK,0,lra,0,mra,0,LK,0,nra,0,MK,0,NK,0,OK,0,PK,0,ora,0,pra,0,QK,0,hL,0,RK,0,SK,0,TK,0,UK,0,VK,0,iL,0,WK,0,XK,0,YK,0,ZK,0,$K,0,qra,0,aL,0,rra,0,bL,0,jL,0,cL,0,dL,0,kL,0,lL,0,mL,0,nL,0,oL,0,pL,0,qL,0,rL,0,sL,0,tL,0,uL,0,vL,0,wL,0,xL,0,yL,0,zL,0,sra,0,AL,0,BL,0,CL,0,EL,0,FL,0,tra,0,HL,0,zra,0,fL,0,Ara,0,KL,0,gL,0,Bra,0,Cra,0,NL,0,ura,0,OL,0,vra,0,wra,0,PL,0,QL,0,RL,0,aM,0,Mra,0,bM,0,Nra,0,Ora,0,Pra,0,TL,0,dM,0,eM,0,UL,0,fM,0,Qra,0,hM,0,Rra,0,Sra,0,iM,0,jM,0,Tra,0,kM,0,lM,0,mM,0,nM,0,oM,0,pM,0,Ura,0,Vra,0,rM,0,sM,0,tM,0,uM,0,Wra,0,Xra,0,Yra,0,Zra,0,$ra,0,vM,0,wM,0,asa,0,bsa,0,csa,0,xM,0,yM,0,dsa,0,Dra,0,Era,0,Fra,0,zM,0,AM,0,Gra,0,Hra,0,BM,0,esa,0,WL,0,XL,0,DM,0,YL,0,Ira,0,Jra,0,ZL,0,Kra,0,EM,0,FM,0,HM,0,IM,0,JM,0,KM,0,$L,0,Lra,0,LM,0,gsa,0,hsa,0,PM,0,NM,0,isa,0,RM,0,SM,0,jsa,0,TM,0,ksa,0,lsa,0,WM,0,XM,0,YM,0,msa,0,ZM,0,nsa,0,bN,0,cN,0,osa,0,dN,0,psa,0,gN,0,hN,0,iN,0,qsa,0,rsa,0,ssa,0,tsa,0,jN,0,kN,0,lN,0,usa,0,mN,0,vsa,0,wsa,0,pN,0,xsa,0,qN,0,rN,0,sN,0,tN,0,ysa,0,zsa,0,Asa,0,uN,0,Bsa,0,Csa,0,wN,0,Dsa,0,xN,0,yN,0,Esa,0,zN,0,AN,0,BN,0,CN,0,DN,0,Fsa,0,Gsa,0,Hsa,0,EN,0,FN,0,GN,0,Isa,0,Jsa,0,Ksa,0,Lsa,0,IN,0,JN,0,KN,0,Msa,0,Nsa,0,LN,0,Osa,0,MN,0,NN,0,ON,0,PN,0,Psa,0,Qsa,0,RN,0,SN,0,TN,0,UN,0,VN,0,WN,0,XN,0,YN,0,ZN,0,$N,0,aO,0,bO,0,cO,0,dO,0,eO,0,Rsa,0,fO,0,gO,0,hO,0,iO,0,Ssa,0,Tsa,0,jO,0,kO,0,lO,0,Usa,0,Vsa,0,Wsa,0,Xsa,0,mO,0,nO,0,Ysa,0,Zsa,0,$sa,0,oO,0,pO,0,qO,0,ata,0,bta,0,cta,0,rO,0,sO,0,tO,0,dta,0,HN,0,uO,0,eta,0,fta,0,gta,0,hta,0,ita,0,jta,0,xO,0,zO,0,kta,0,lta,0,BO,0,HO,0,IO,0,JO,0,KO,0,nta,0,MO,0,NO,0,ota,0,pta,0,qta,0,rta,0,sta,0,SO,0,TO,0,tta,0,UO,0,uta,0,vta,0,WO,0,wta,0,xta,0,yta,0,zta,0,Ata,0,Bta,0,Cta,0,Dta,0,Eta,0,Fta,0,Gta,0,Hta,0,bP,0,Ita,0,EO,0,Jta,0,Kta,0,FO,0,Lta,0,fP,0,gP,0,Mta,0,Nta,0,Ota,0,GO,0,Pta,0,Qta,0,kP,0,Rta,0,Sta,0,Tta,0,Uta,0,Vta,0,Wta,0,Xta,0,bua,0,dua,0,eua,0,fua,0,gua,0,QP,0,TP,0,XP,0,YP,0,bQ,0,hua,0,iua,0,jua,0,kua,0,mua,0,nua,0,iQ,0,oua,0,pua,0,oQ,0,qua,0,rua,0,qQ,0,rQ,0,tQ,0,qP,0,rP,0,Yta,0,sP,0,tP,0,uP,0,vP,0,wP,0,xP,0,yP,0,Zta,0,zP,0,vQ,0,xQ,0,AP,0,BP,0,yQ,0,CP,0,DP,0,EP,0,zQ,0,FP,0,GP,0,HP,0,IP,0,JP,0,$ta,0,aua,0,KP,0,AQ,0,LP,0,MP,0,BQ,0,CQ,0,DQ,0,OQ,0,PQ,0,EQ,0,uua,0,sua,0,tua,0,RQ,0,FQ,0,GQ,0,HQ,0,SQ,0,vua,0,xR,0,zR,0,AR,0,CR,0,UQ,0,VQ,0,WQ,0,ZQ,0,wua,0,xua,0,$Q,0,yua,0,bR,0,zua,0,Aua,0,Bua,0,Cua,0,dR,0,Dua,0,Eua,0,Fua,0,eR,0,fR,0,Gua,0,Hua,0,gR,0,Iua,0,Jua,0,Kua,0,Lua,0,Mua,0,Nua,0,iR,0,Oua,0,kR,0,Pua,0,Qua,0,nR,0,Rua,0,qR,0,Sua,0,rR,0,sR,0,tR,0,Tua,0,uR,0,vR,0,Wua,0,Xua,0,gS,0,hS,0,iS,0,jS,0,Yua,0,Zua,0,$ua,0,kS,0,ava,0,bva,0,cva,0,lS,0,mS,0,nS,0,oS,0,dva,0,eva,0,pS,0,fva,0,qS,0,tS,0,iva,0,jva,0,kva,0,lva,0,mva,0,wS,0,nva,0,ova,0,xS,0,pva,0,qva,0,yS,0,zS,0,rva,0,sva,0,tva,0,uva,0,UR,0,vva,0,wva,0,xva,0,yva,0,zva,0,Ava,0,Bva,0,Cva,0,Dva,0,Eva,0,Fva,0,Gva,0,Hva,0,Iva,0,Jva,0,Kva,0,Lva,0,Mva,0,Nva,0,ES,0,Pva,0,Qva,0,Rva,0,Sva,0,Tva,0,Uva,0,Vva,0,Wva,0,Xva,0,Yva,0,Zva,0,jT,0,kT,0,$va,0,awa,0,bwa,0,nT,0,cwa,0,dwa,0,oT,0,ewa,0,pT,0,qT,0,fwa,0,gwa,0,hwa,0,iwa,0,rT,0,tT,0,jwa,0,kwa,0,lwa,0,vT,0,mwa,0,nwa,0,owa,0,pwa,0,qwa,0,rwa,0,swa,0,twa,0,uwa,0,vwa,0,wwa,0,xwa,0,ywa,0,zwa,0,Awa,0,Bwa,0,Cwa,0,Dwa,0,Ewa,0,Fwa,0,Gwa,0,yT,0,Hwa,0,Iwa,0,Jwa,0,Kwa,0,Lwa,0,BT,0,CT,0,DT,0,Mwa,0,ET,0,FT,0,Nwa,0,GT,0,HT,0,jU,0,kU,0,IT,0,JT,0,KT,0,Qwa,0,lU,0,Rwa,0,LT,0,mU,0,nU,0,Swa,0,Twa,0,MT,0,oU,0,pU,0,qU,0,rU,0,sU,0,tU,0,Uwa,0,uU,0,Vwa,0,Wwa,0,Xwa,0,Ywa,0,Zwa,0,$wa,0,axa,0,wU,0,bxa,0,xU,0,cxa,0,dxa,0,exa,0,fxa,0,yU,0,zU,0,gxa,0,hxa,0,AU,0,ixa,0,jxa,0,NT,0,OT,0,PT,0,QT,0,RT,0,BU,0,DU,0,ST,0,TT,0,Owa,0,UT,0,FU,0,VT,0,WT,0,XT,0,YT,0,ZT,0,$T,0,kxa,0,bU,0,lxa,0,mxa,0,cU,0,dU,0,GU,0,nxa,0,HU,0,fU,0,gU,0,IU,0,hU,0,oxa,0,iU,0,JU,0,KU,0,LU,0,pxa,0,yxa,0,MU,0,qxa,0,rxa,0,sxa,0,zxa,0,NU,0,OU,0,PU,0,Axa,0,Bxa,0,QU,0,RU,0,SU,0,txa,0,uxa,0,TU,0,UU,0,Cxa,0,WU,0,Dxa,0,Exa,0,Fxa,0,Gxa,0,Hxa,0,Ixa,0,Jxa,0,Kxa,0,Lxa,0,Mxa,0,Nxa,0,Oxa,0,Pxa,0,Qxa,0,Rxa,0,Sxa,0,Txa,0,Uxa,0,Vxa,0,Wxa,0,Xxa,0,Yxa,0,Zxa,0,XU,0,$xa,0,aya,0,bya,0,cya,0,dya,0,vxa,0,eya,0,fya,0,gya,0,wxa,0,hya,0,jya,0,lya,0,mya,0,nya,0,oya,0,pya,0,xxa,0,qya,0,rya,0,sya,0,tya,0,uya,0,vya,0,wya,0,yya,0,Dya,0,Fya,0,Gya,0,Hya,0,Iya,0,Jya,0,Kya,0,Lya,0,zya,0,Mya,0,Nya,0,Oya,0,Pya,0,Qya,0,Rya,0,Sya,0,Tya,0,Uya,0,Vya,0,Wya,0,Yya,0,Zya,0,$ya,0,aza,0,bza,0,cza,0,dza,0,eza,0,fza,0,gza,0,hza,0,iza,0,kza,0,lza,0,mza,0,nza,0,oza,0,qza,0,rza,0,sza,0,tza,0,uza,0,vza,0,wza,0,xza,0,yza,0,zza,0,Bza,0,Cza,0,Dza,0,Eza,0,Fza,0,Gza,0,Hza,0,Iza,0,Jza,0,Uza,0,Kza,0,Lza,0,Mza,0,Oza,0,Pza,0,Aya,0,Bya,0,Qza,0,Cya,0,Rza,0,Sza,0,Wza,0,vAa,0,wAa,0,Xza,0,xAa,0,Yza,0,yAa,0,Zza,0,$za,0,aAa,0,zAa,0,bAa,0,cAa,0,dAa,0,eAa,0,AAa,0,BAa,0,CAa,0,DAa,0,EAa,0,fAa,0,gAa,0,FAa,0,hAa,0,GAa,0,JAa,0,KAa,0,MAa,0,NAa,0,jAa,0,PAa,0,kAa,0,lAa,0,QAa,0,RAa,0,SAa,0,TAa,0,UAa,0,mAa,0,nAa,0,VAa,0,oAa,0,WAa,0,pAa,0,XAa,0,YAa,0,qAa,0,ZAa,0,$Aa,0,aBa,0,bBa,0,rAa,0,sAa,0,cBa,0,tAa,0,uAa,0,dBa,0,eBa,0,fBa,0,gBa,0,hBa,0,iBa,0,jBa,0,kBa,0,lBa,0,wCa,0,nBa,0,oBa,0,pBa,0,qBa,0,rBa,0,sBa,0,tBa,0,uBa,0,vBa,0,wBa,0,xBa,0,yBa,0,zBa,0,ABa,0,BBa,0,CBa,0,DBa,0,FBa,0,GBa,0,HBa,0,IBa,0,JBa,0,KBa,0,LBa,0,NBa,0,OBa,0,PBa,0,RBa,0,SBa,0,TBa,0,UBa,0,VBa,0,WBa,0,xCa,0,XBa,0,YBa,0,ZBa,0,$Ba,0,aCa,0,bCa,0,cCa,0,dCa,0,eCa,0,fCa,0,gCa,0,hCa,0,iCa,0,jCa,0,kCa,0,lCa,0,nCa,0,oCa,0,pCa,0,qCa,0,rCa,0,sCa,0,tCa,0,uCa,0,vCa,0,zCa,0,ACa,0,BCa,0,CCa,0,DCa,0,ECa,0,GCa,0,HCa,0,ICa,0,JCa,0,KCa,0,LCa,0,MCa,0,NCa,0,PCa,0,QCa,0,RCa,0,SCa,0,TCa,0,UCa,0,VCa,0,WCa,0,YCa,0,ZCa,0,$Ca,0,aDa,0,bDa,0,cDa,0,dDa,0,fDa,0,hDa,0,iDa,0,jDa,0,kDa,0,lDa,0,mDa,0,nDa,0,oDa,0,pDa,0,qDa,0,rDa,0,sDa,0,tDa,0,uDa,0,vDa,0,wDa,0,xDa,0,yDa,0,zDa,0,ADa,0,BDa,0,CDa,0,DDa,0,EDa,0,FDa,0,GDa,0,HDa,0,IDa,0,JDa,0,KDa,0,LDa,0,MDa,0,NDa,0,ODa,0,QDa,0,RDa,0,SDa,0,TDa,0,UDa,0,VDa,0,WDa,0,XDa,0,YDa,0,ZDa,0,$Da,0,aEa,0,bEa,0,dEa,0,fEa,0,gEa,0,hEa,0,iEa,0,kEa,0,lEa,0,mEa,0,nEa,0,pEa,0,qEa,0,rEa,0,sEa,0,tEa,0,uEa,0,vEa,0,wEa,0,xEa,0,yEa,0,zEa,0,AEa,0,BEa,0,CEa,0,DEa,0,EEa,0,FEa,0,GEa,0,HEa,0,IEa,0,OEa,0,PEa,0,SEa,0,TEa,0,UEa,0,VEa,0,XEa,0,ZEa,0,$Ea,0,bFa,0,fFa,0,hFa,0,iFa,0,mFa,0,pFa,0,qFa,0,sFa,0,tFa,0,uFa,0,wFa,0,xFa,0,yFa,0,zFa,0,AFa,0,BFa,0,CFa,0,DFa,0,EFa,0,IFa,0,JFa,0,KFa,0,LFa,0,MFa,0,NFa,0,OFa,0,PFa,0,QFa,0,RFa,0,SFa,0,TFa,0,UFa,0,VFa,0,WFa,0,YFa,0,ZFa,0,$Fa,0,aGa,0,bGa,0,cGa,0,dGa,0,eGa,0,fGa,0,gGa,0,hGa,0,iGa,0,jGa,0,lGa,0,nGa,0,oGa,0,pGa,0,qGa,0,sGa,0,tGa,0,uGa,0,vGa,0,xGa,0,yGa,0,zGa,0,AGa,0,BGa,0,CGa,0,DGa,0,EGa,0,FGa,0,GGa,0,HGa,0,IGa,0,JGa,0,KGa,0,LGa,0,MGa,0,NGa,0,OGa,0,PGa,0,QGa,0,RGa,0,SGa,0,TGa,0,UGa,0,VGa,0,WGa,0,XGa,0,YGa,0,ZGa,0,$Ga,0,aHa,0,bHa,0,cHa,0,dHa,0,eHa,0,fHa,0,gHa,0,hHa,0,iHa,0,jHa,0,kHa,0,lHa,0,HHa,0,IHa,0,JHa,0,KHa,0,mHa,0,LHa,0,nHa,0,MHa,0,oHa,0,pHa,0,RHa,0,qHa,0,rHa,0,sHa,0,tHa,0,uHa,0,vHa,0,wHa,0,xHa,0,SHa,0,yHa,0,zHa,0,AHa,0,THa,0,BHa,0,UHa,0,CHa,0,DHa,0,VHa,0,EHa,0,FHa,0,WHa,0,XHa,0,ZHa,0,aIa,0,eIa,0,fIa,0,hIa,0,iIa,0,jIa,0,kIa,0,lIa,0,mIa,0,nIa,0,oIa,0,rIa,0,sIa,0,tIa,0,uIa,0,pIa,0,qIa,0,wIa,0,xIa,0,yIa,0,zIa,0,AIa,0,CIa,0,DIa,0,EIa,0,FIa,0,GIa,0,HIa,0,IIa,0,JIa,0,KIa,0,LIa,0,NIa,0,OIa,0,PIa,0,QIa,0,RIa,0,SIa,0,TIa,0,UIa,0,VIa,0,WIa,0,XIa,0,YIa,0,$Ia,0,aJa,0,bJa,0,cJa,0,eJa,0,gJa,0,hJa,0,iJa,0,jJa,0,kJa,0,lJa,0,mJa,0,nJa,0,oJa,0,pJa,0,rJa,0,tJa,0,uJa,0,vJa,0,wJa,0,xJa,0,yJa,0,zJa,0,AJa,0,MJa,0,NJa,0,OJa,0,PJa,0,QJa,0,RJa,0,SJa,0,TJa,0,UJa,0,VJa,0,WJa,0,XJa,0,YJa,0,BJa,0,ZJa,0,$Ja,0,aKa,0,bKa,0,cKa,0,eKa,0,fKa,0,gKa,0,hKa,0,xKa,0,jKa,0,kKa,0,lKa,0,nKa,0,GJa,0,oKa,0,HJa,0,IJa,0,pKa,0,rKa,0,tKa,0,uKa,0,LJa,0,ZMa,0,$Ma,0,TMa,0,aNa,0,bNa,0,dNa,0,cNa,0,zNa,0,ENa,0,ANa,0,BNa,0,CNa,0,JNa,0,KNa,0,LNa,0,MNa,0,HNa,0,INa,0,NNa,0,ONa,0,FNa,0,mNa,0,DNa,0,qNa,0,rNa,0,sNa,0,tNa,0,uNa,0,vNa,0,wNa,0,oNa,0,pNa,0,xNa,0,yNa,0,nNa,0,YNa,0,gOa,0,ZNa,0,hOa,0,bOa,0,dOa,0,UNa,0,VNa,0,WNa,0,eOa,0,fOa,0,uOa,0,iOa,0,jOa,0,kOa,0,lOa,0,mOa,0,nOa,0,oOa,0,pOa,0,qOa,0,vOa,0,wOa,0,xOa,0,yOa,0,zOa,0,AOa,0,rOa,0,DOa,0,COa,0,EOa,0,sOa,0,OOa,0,dPa,0,kPa,0,aPa,0,SRa,0,URa,0,TRa,0,ePa,0,ZOa,0,bPa,0,UOa,0,fPa,0,$Oa,0,VOa,0,GX,0,VRa,0,gPa,0,hPa,0,iPa,0,RYa,0,WOa,0,jPa,0,jdb,0,XOa,0,YOa,0,nPa,0,oPa,0,lPa,0,pPa,0,qPa,0,rPa,0,uPa,0,tPa,0,vPa,0,mPa,0,zPa,0,yPa,0,GPa,0,xPa,0,JPa,0,OPa,0,HPa,0,KPa,0,IPa,0,FPa,0,LPa,0,MPa,0,NPa,0,UPa,0,PPa,0,VPa,0,QPa,0,RPa,0,WPa,0,XPa,0,SPa,0,YPa,0,ZPa,0,$Pa,0,bQa,0,aQa,0,eib,0,lQa,0,fib,0,iib,0,cQa,0,fQa,0,gQa,0,dQa,0,mQa,0,jQa,0,jib,0,pQa,0,nQa,0,oQa,0,qQa,0,sQa,0,tQa,0,uQa,0,vQa,0,wQa,0,yQa,0,zQa,0,AQa,0,CQa,0,DQa,0,TQa,0,UQa,0,VQa,0,WQa,0,GQa,0,JQa,0,XQa,0,KQa,0,YQa,0,SYa,0,EQa,0,FQa,0,LQa,0,MQa,0,aRa,0,bRa,0,OQa,0,ZQa,0,$Qa,0,NQa,0,cRa,0,dRa,0,gRa,0,fRa,0,uRa,0,hRa,0,tRa,0,sRa,0,wRa,0,vRa,0,xRa,0,CRa,0,DRa,0,ERa,0,qRa,0,rRa,0,ARa,0,BRa,0,zRa,0,GRa,0,HRa,0,IRa,0,JRa,0,MRa,0,kRa,0,LRa,0,PRa,0,NRa,0,QRa,0,RRa,0,WRa,0,XRa,0,ORa,0,HX,0,aY,0,YRa,0,lSa,0,JSa,0,KSa,0,LSa,0,GSa,0,vSa,0,ZRa,0,cY,0,mSa,0,SSa,0,ISa,0,zTa,0,ATa,0,BTa,0,yTa,0,CTa,0,DTa,0,DSa,0,FTa,0,wTa,0,xTa,0,GTa,0,BSa,0,ITa,0,JTa,0,KTa,0,LTa,0,zSa,0,PTa,0,STa,0,TTa,0,UTa,0,xSa,0,WTa,0,XTa,0,YTa,0,$Ta,0,aUa,0,bUa,0,cUa,0,fUa,0,xeb,0,gUa,0,hUa,0,jUa,0,kUa,0,mUa,0,nUa,0,pUa,0,rUa,0,sUa,0,BUa,0,oUa,0,HUa,0,tUa,0,IUa,0,JUa,0,uUa,0,vUa,0,KUa,0,LUa,0,wUa,0,MUa,0,PUa,0,beb,0,QUa,0,UUa,0,WUa,0,XUa,0,RUa,0,SUa,0,TUa,0,kSa,0,$Ua,0,hVa,0,gVa,0,mVa,0,uVa,0,vVa,0,lVa,0,BVa,0,CVa,0,FVa,0,EVa,0,PVa,0,YVa,0,VVa,0,QVa,0,SVa,0,WVa,0,XVa,0,TVa,0,ZVa,0,NVa,0,OVa,0,iWa,0,hWa,0,qWa,0,rWa,0,sWa,0,pWa,0,tWa,0,eWa,0,fW,0,oWa,0,mWa,0,nWa,0,wWa,0,xWa,0,uWa,0,vWa,0,pSa,0,FWa,0,DWa,0,EWa,0,HWa,0,yWa,0,zWa,0,IWa,0,MWa,0,LWa,0,WWa,0,RWa,0,QWa,0,SWa,0,TWa,0,VWa,0,$Wa,0,ZWa,0,eXa,0,gXa,0,hXa,0,dXa,0,mXa,0,iXa,0,jXa,0,cXa,0,aXa,0,bXa,0,fXa,0,kXa,0,lXa,0,nXa,0,oXa,0,rXa,0,qXa,0,xXa,0,yXa,0,sXa,0,qZ,0,uXa,0,DXa,0,AXa,0,CXa,0,aYa,0,vXa,0,bYa,0,KXa,0,FX,0,LXa,0,EXa,0,MXa,0,NXa,0,FXa,0,OXa,0,GXa,0,HXa,0,PXa,0,QXa,0,IXa,0,RXa,0,SXa,0,TXa,0,XXa,0,WXa,0,tYa,0,$Xa,0,ZXa,0,hYa,0,qYa,0,sYa,0,pYa,0,vYa,0,wYa,0,xYa,0,zYa,0,mYa,0,nYa,0,oYa,0,OYa,0,XYa,0,udb,0,FYa,0,qdb,0,DYa,0,EYa,0,NYa,0,IYa,0,GYa,0,HYa,0,JYa,0,KYa,0,LYa,0,MYa,0,AYa,0,BYa,0,CYa,0,aZa,0,bZa,0,cZa,0,dZa,0,VYa,0,ZYa,0,fZa,0,eZa,0,hZa,0,YYa,0,iZa,0,wZa,0,EZa,0,jZa,0,rZa,0,uZa,0,kZa,0,tZa,0,sZa,0,mZa,0,nZa,0,vZa,0,oZa,0,pZa,0,qZa,0,AZa,0,zZa,0,t_a,0,s_a,0,N_a,0,R_a,0,L_a,0,M_a,0,E_a,0,K_a,0,F_a,0,J_a,0,x_a,0,y_a,0,z_a,0,A_a,0,B_a,0,C_a,0,D_a,0,S_a,0,T_a,0,U_a,0,O_a,0,V_a,0,W_a,0,I_a,0,Y_a,0,Z_a,0,r0a,0,s0a,0,c0a,0,t0a,0,d0a,0,i0a,0,u0a,0,j0a,0,v0a,0,w0a,0,m0a,0,o0a,0,x0a,0,y0a,0,z0a,0,k0a,0,e0a,0,q0a,0,A0a,0,B0a,0,C0a,0,l0a,0,g0a,0,p0a,0,D0a,0,i1a,0,o1a,0,p1a,0,w1a,0,v1a,0,x1a,0,z1a,0,I1a,0,A1a,0,B1a,0,F1a,0,K1a,0,N1a,0,O1a,0,R1a,0,U1a,0,M1a,0,H1a,0,$1a,0,a2a,0,E1a,0,c2a,0,d2a,0,y1a,0,f2a,0,g2a,0,h2a,0,w2a,0,v2a,0,y2a,0,z2a,0,A2a,0,C2a,0,B2a,0,E2a,0,F2a,0,G2a,0,I2a,0,J2a,0,K2a,0,M2a,0,N2a,0,O2a,0,R2a,0,S2a,0,T2a,0,V2a,0,W2a,0,X2a,0,$2a,0,a3a,0,b3a,0,d3a,0,e3a,0,f3a,0,h3a,0,i3a,0,r3a,0,t3a,0,u3a,0,v3a,0,x3a,0,y3a,0,j3a,0,z3a,0,B3a,0,C3a,0,k3a,0,l3a,0,m3a,0,G3a,0,F3a,0,H3a,0,I3a,0,q3a,0,n3a,0,o3a,0,p3a,0,r4a,0,q4a,0,e5a,0,S4a,0,g5a,0,h5a,0,i5a,0,d5a,0,k5a,0,l5a,0,G4a,0,v5a,0,p5a,0,A5a,0,r5a,0,B5a,0,C5a,0,t5a,0,D5a,0,G5a,0,s5a,0,H5a,0,u5a,0,P5a,0,vgb,0,rdb,0,w5a,0,odb,0,pdb,0,sgb,0,tgb,0,wgb,0,xgb,0,Jgb,0,Cgb,0,Egb,0,Dgb,0,G6a,0,I6a,0,J6a,0,L6a,0,v6a,0,y6a,0,p6a,0,M6a,0,q6a,0,N6a,0,w6a,0,r6a,0,s6a,0,x6a,0,P6a,0,Q6a,0,T6a,0,U6a,0,V6a,0,W6a,0,X6a,0,Y6a,0,B7a,0,C7a,0,D7a,0,E7a,0,F7a,0,Z6a,0,H7a,0,I7a,0,J7a,0,y7a,0,A6a,0,$6a,0,K7a,0,z7a,0,S6a,0,a7a,0,A7a,0,L7a,0,b7a,0,c7a,0,d7a,0,M7a,0,e7a,0,O7a,0,R7a,0,T7a,0,f7a,0,g7a,0,U7a,0,h7a,0,V7a,0,X7a,0,Y7a,0,C6a,0,i7a,0,Z7a,0,j7a,0,F6a,0,E6a,0,$7a,0,b8a,0,k7a,0,l7a,0,m7a,0,n7a,0,o7a,0,p7a,0,q7a,0,r7a,0,s7a,0,t7a,0,u7a,0,v7a,0,w7a,0,c8a,0,x7a,0,o6a,0,j8a,0,k8a,0,Y_,0,z8a,0,w8a,0,x8a,0,C8a,0,B8a,0,E8a,0,F8a,0,UWa,0,K8a,0,mZ,0,m9a,0,l9a,0,CWa,0,v9a,0,gZ,0,B9a,0,x9a,0,C9a,0,G9a,0,A9a,0,F9a,0,y9a,0,E9a,0,z9a,0,H9a,0,L9a,0,Q9a,0,eRa,0,W9a,0,p0,0,h$a,0,X9a,0,i$a,0,k$a,0,b$a,0,c$a,0,l$a,0,s$a,0,t$a,0,r$a,0,d$a,0,q$a,0,o$a,0,p$a,0,v$a,0,u$a,0,A$a,0,e$a,0,X$a,0,V$a,0,W$a,0,Z$a,0,T$a,0,U$a,0,cab,0,P$a,0,O$a,0,Cab,0,Eab,0,Fab,0,Hab,0,Gab,0,Bab,0,Iab,0,Jab,0,Rab,0,cbb,0,Oab,0,Mab,0,Nab,0,Qab,0,Kab,0,Lab,0,Uab,0,dbb,0,hbb,0,ebb,0,$db,0,Xdb,0,Zdb,0,gbb,0,ubb,0,wbb,0,xbb,0,zbb,0,Bbb,0,Cbb,0,Fbb,0,Ebb,0,ucb,0,Sbb,0,Jbb,0,wcb,0,xcb,0,lcb,0,Gbb,0,ycb,0,Hbb,0,mcb,0,Ubb,0,Lbb,0,kcb,0,ncb,0,icb,0,ccb,0,bcb,0,Ybb,0,Wbb,0,gcb,0,zcb,0,Acb,0,ocb,0,dcb,0,Bcb,0,ecb,0,pcb,0,acb,0,$bb,0,qcb,0,rcb,0,Tbb,0,Ccb,0,Ecb,0,scb,0,Fcb,0,Hcb,0,Icb,0,Jcb,0,Lcb,0,tcb,0,Mcb,0,Ocb,0,Pcb,0,EX,0,Ycb,0,vdb,0,Ddb,0,G0,0,Ndb,0,heb,0,ieb,0,jeb,0,keb,0,oeb,0,neb,0,seb,0,teb,0,feb,0,ceb,0,deb,0,eeb,0,ueb,0,peb,0,reb,0,web,0,zeb,0,Meb,0,Leb,0,Neb,0,Veb,0,Yeb,0,Xeb,0,Zeb,0,$eb,0,bfb,0,Seb,0,Teb,0,cfb,0,Qeb,0,Reb,0,ffb,0,efb,0,kfb,0,lfb,0,vfb,0,ufb,0,wfb,0,zfb,0,Cfb,0,oSa,0,Ifb,0,Gfb,0,Hfb,0,Afb,0,iSa,0,Jfb,0,Ffb,0,Dfb,0,Efb,0,Lfb,0,Kfb,0,Sfb,0,Mfb,0,Tfb,0,Vfb,0,Ufb,0,Wfb,0,Nfb,0,Xfb,0,$fb,0,Zfb,0,agb,0,dgb,0,Rfb,0,cgb,0,Ofb,0,Pfb,0,egb,0,bgb,0,Qfb,0,fgb,0,ggb,0,hgb,0,igb,0,jgb,0,kgb,0,mgb,0,ngb,0,pgb,0,qgb,0,jSa,0,ugb,0,iY,0,Ogb,0,ghb,0,Sgb,0,Ugb,0,Pgb,0,Fgb,0,bhb,0,Ggb,0,chb,0,O1,0,hhb,0,dhb,0,ehb,0,ihb,0,jhb,0,rhb,0,khb,0,lhb,0,Ngb,0,fhb,0,qhb,0,whb,0,Ghb,0,uhb,0,vhb,0,Shb,0,Yhb,0,Hhb,0,Ihb,0,dib,0,cib,0,QX,0,$hb,0,gib,0,mib,0,oib,0,pib,0,qib,0,sib,0,tib,0,Gib,0,Fib,0,Lib,0,Nib,0,Oib,0,Kib,0,Bib,0,Pib,0,Qib,0,Jib,0,Hib,0,Iib,0,Mib,0,Rib,0,Sib,0,zjb,0,Ajb,0,ojb,0,jjb,0,njb,0,pjb,0,wjb,0,xjb,0,sjb,0,Bjb,0,yjb,0,Djb,0,Cjb,0,vjb,0,tjb,0,ujb,0,Jjb,0,Ijb,0,akb,0,lkb,0,mkb,0,tlb,0,ikb,0,ykb,0,Ckb,0,Hkb,0,Mkb,0,fkb,0,gkb,0,hkb,0,skb,0,xkb,0,nkb,0,clb,0,$kb,0,dlb,0,elb,0,rlb,0,Kjb,0,ckb,0,Rkb,0,Skb,0,Tkb,0,Ukb,0,blb,0,glb,0,ilb,0,flb,0,Ykb,0,Mjb,0,Wjb,0,dkb,0,Ljb,0,Sjb,0,Qjb,0,q2,0,Vjb,0,jlb,0,kkb,0,alb,0,Jlb,0,Klb,0,Llb,0,C2,0,Mlb,0,Ylb,0,Zlb,0,$lb,0,amb,0,bmb,0,Nlb,0,Olb,0,Plb,0,Qlb,0,Rlb,0,Slb,0,Tlb,0,Ulb,0,Vlb,0,Hmb,0,Imb,0,xmb,0,ymb,0,zmb,0,Fmb,0,Gmb,0,Amb,0,Jmb,0,Emb,0,Rmb,0,Smb,0,Pmb,0,Omb,0,Tmb,0,Qmb,0,Wmb,0,Xmb,0,hnb,0,inb,0,$mb,0,anb,0,bnb,0,dnb,0,enb,0,cnb,0,jnb,0,tnb,0,snb,0,Nnb,0,Hnb,0,Cnb,0,Enb,0,vnb,0,Fnb,0,Gnb,0,Knb,0,Lnb,0,Mnb,0,Jnb,0,ynb,0,Pnb,0,Qnb,0,Rnb,0,Snb,0,Tnb,0,Unb,0,bob,0,cob,0,Vnb,0,Wnb,0,Xnb,0,Znb,0,$nb,0,Ynb,0,dob,0,kob,0,job,0,Dob,0,zob,0,tob,0,wob,0,Cob,0,Eob,0,Fob,0,Aob,0,Qob,0,apb,0,Nob,0,Tob,0,Uob,0,Xob,0,Wob,0,rpb,0,Jpb,0,spb,0,vpb,0,ppb,0,xpb,0,npb,0,qpb,0,Ipb,0,Ppb,0,Spb,0,Rpb,0,cqb,0,Kpb,0,$pb,0,Tpb,0,Lpb,0,Mpb,0,Xpb,0,Ypb,0,dqb,0,aqb,0,bqb,0,Zpb,0,eqb,0,Opb,0,Npb,0,Wpb,0,lqb,0,mqb,0,gqb,0,hqb,0,jqb,0,kqb,0,iqb,0,nqb,0,sqb,0,tqb,0,Ktb,0,Etb,0,Ptb,0,Ftb,0,RMa,0,xs,0,bW,0,BOa,0,sPa,0,wPa,0,yR,0,BR,0,Te,0,oEa,0,wGa,0,Sr,0,Bi,0,qM,0,NY,0,Qk,0,PA,0,ox,0,Xx,0,wY,0,sSa,0,JWa,0,PWa,0,XWa,0,oZ,0,pXa,0,UXa,0,YXa,0,Ch,0,zZ,0,xZa,0,P_a,0,RH,0,QG,0,Vza,0,WY,0,aZ,0,xr,0,Ij,0,Y2a,0,D3a,0,p4a,0,v8a,0,A8a,0,lZ,0,kZ,0,BWa,0,vJ,0,tJ,0,AI,0,m$a,0,WI,0,xp,0,dX,0,jcb,0,wk,0,mW,0,Wdb,0,leb,0,Ceb,0,Deb,0,Keb,0,dfb,0,tfb,0,Wj,0,P2a,0,QN,0,hY,0,J5a,0,ygb,0,zgb,0,Agb,0,Bgb,0,mV,0,Fhb,0,Ky,0,NX,0,Dib,0,mfb,0,Tib,0,Cu,0,Au,0,Gjb,0,ot,0,AO,0,yO,0,Kmb,0,Umb,0,Fv,0,Cv,0,Ymb,0,Zmb,0,nnb,0,kya,0,iya,0,hF,0,Qn,0,Sn,0,pI,0,Qpb,0,uT,0,sT,0,qqb,0,Iqb,0,htb,0,ltb,0,r4,0,qtb,0,E4,0,Ntb,0];Module.FUNCTION_TABLE=v;function tb(a){function d(){var d=0;uaa=ia;Module._main&&(Ya(qaa),d=Module.Cf(a),Module.noExitRuntime||Ya(eb));if(Module.postRun){for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);0<Module.postRun.length;){Module.postRun.pop()()}}return d}a=a||Module.arguments;if(0<hb){return Module.f("run() called, but dependencies remain, so not running"),0}if(Module.preRun){"function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);var e=Module.preRun;Module.preRun=[];for(var f=e.length-1;0<=f;f--){e[f]()}if(0<hb){return 0}}return Module.setStatus?(Module.setStatus("Running..."),setTimeout((function(){setTimeout((function(){Module.setStatus("")}),1);d()}),1),0):d()}Module.run=tb;if(Module.preInit){for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;){Module.preInit.pop()()}}Ya(cb);var tub=ia;Module.noInitialRun&&(tub=oa);tub&&tb();var uub={};function T(a,d){var e=d?d.prototype.b:uub,f=e[a];if(f){return f}d=d||Object;f=Object.create(d.prototype);f.a=a;f.c=d;return e[a]=f}Module.wrapPointer=T;Module.castObject=(function(a,d){return T(a.a,d)});Module.NULL=T(0);Module.destroy=(function(a){a.__destroy__||aa("Error: Cannot destroy object. (Did you create it yourself?)");a.__destroy__();a.c!==Object?delete a.c.prototype.b[a.a]:delete uub[a.a]});Module.compare=(function(a,d){return a.a===d.a});Module.getPointer=(function(a){return a.a});Module.getClass=(function(a){return a.c});Module.customizeVTable=(function(a,d){for(var e=Ua(a.a,"void*"),f=0;Ua(e+xa*f,"void*");){f++}var g=Wa(f*xa);Ta(a.a,g,"void*");for(var h,i=v.length,j=0;j<f;j++){var l=v.length;((function(a){v.push((function(){h=a}))}))(j);v.push(0);Ta(g+xa*j,l,"void*")}var m=[{a:0}];d.forEach((function(d){for(;;){try{d.original.apply(a,m);break}catch(f){m.push(m[0])}}d.If=Ua(e+h*xa,"void*")}));v=v.slice(0,i);var n={};d.forEach((function(a){var d=v.length;v.push(a.replacement);v.push(0);n[a.If]=d}));for(j=0;j<f;j++){i=Ua(e+xa*j,"void*"),i in n&&(i=n[i]),Ta(g+xa*j,i,"void*")}return a});function T8(a){return"number"==typeof a?a:u(Xa(a),"i8",Va)}function U8(a,d,e,f,g,h,i,j,l){this.a=a===fa?wb():d===fa?yb(a.a):Cb(a,d,e,f,g,h,i,j,l);U8.prototype.b[this.a]=this;this.c=U8}U8.prototype.b={};Module.btMatrix3x3=U8;U8.prototype.getColumn=(function(a){return T(Fb(this.a,a),Module.btVector3)});U8.prototype.serialize=(function(a){Lb(this.a,a.a)});U8.prototype.deSerializeDouble=(function(a){Nb(this.a,a.a)});U8.prototype.scaled=(function(a){return T(Pb(this.a,a.a),Module.btMatrix3x3)});U8.prototype.op_sub=(function(a){return T(Yb(this.a,a.a),Module.btMatrix3x3)});U8.prototype.transposeTimes=(function(a){return T(Zb(this.a,a.a),Module.btMatrix3x3)});U8.prototype.getRotation=(function(a){dc(this.a,a.a)});U8.prototype.tdotz=(function(a){return kc(this.a,a.a)});U8.prototype.serializeFloat=(function(a){lc(this.a,a.a)});U8.prototype.tdotx=(function(a){return nc(this.a,a.a)});U8.prototype.absolute=(function(){return T(oc(this.a),Module.btMatrix3x3)});U8.prototype.tdoty=(function(a){return xc(this.a,a.a)});U8.prototype.inverse=(function(){return T(yc(this.a),Module.btMatrix3x3)});U8.prototype.cofac=(function(a,d,e,f){return Oc(this.a,a,d,e,f)});U8.prototype.deSerializeFloat=(function(a){Pc(this.a,a.a)});U8.prototype.getIdentity=(function(){return T(Vc(),Module.btMatrix3x3)});U8.prototype.adjoint=(function(){return T(dd(this.a),Module.btMatrix3x3)});U8.prototype.getRow=(function(a){return T((a<<2)+this.a,Module.btVector3)});U8.prototype.op_add=(function(a){return T(kd(this.a,a.a),Module.btMatrix3x3)});U8.prototype.op_mul=(function(a){return T(ld(this.a,a.a),Module.btMatrix3x3)});U8.prototype.diagonalize=(function(a,d,e){md(this.a,a.a,d,e)});U8.prototype.setRotation=(function(a){zb(this.a,a.a)});U8.prototype.setEulerZYX=(function(a,d,e){sd(this.a,a,d,e)});U8.prototype.setIdentity=(function(){qd(this.a)});U8.prototype.op_set=(function(a){return T(Wb(this.a,a.a),Module.btMatrix3x3)});U8.prototype.getEulerZYX=(function(a,d,e,f){f===fa?vd(this.a,a,d,e):ke(this.a,a,d,e,f)});U8.prototype.setEulerYPR=(function(a,d,e){le(this.a,a,d,e)});U8.prototype.determinant=(function(){return me(this.a)});U8.prototype.setValue=(function(a,d,e,f,g,h,i,j,l){oe(this.a,a,d,e,f,g,h,i,j,l)});U8.prototype.deSerialize=(function(a){qe(this.a,a.a)});U8.prototype.transpose=(function(){return T(se(this.a),Module.btMatrix3x3)});U8.prototype.op_get=(function(a){return T((a<<2)+this.a,Module.btVector3)});U8.prototype.__destroy__=(function(){we(this.a)});U8.prototype.timesTranspose=(function(a){return T(ye(this.a,a.a),Module.btMatrix3x3)});U8.prototype.getEulerYPR=(function(a,d,e){Be(this.a,a,d,e)});function V8(){this.a=Ce();V8.prototype.b[this.a]=this;this.c=V8}V8.prototype.b={};Module.btDispatcherInfo=V8;V8.prototype.set_m_enableSatConvex=(function(a){zd(this.a,a)});V8.prototype.set_m_stepCount=(function(a){Ad(this.a,a)});V8.prototype.get_m_timeOfImpact=(function(){return Bd(this.a)});V8.prototype.get_m_stepCount=(function(){return Ed(this.a)});V8.prototype.get_m_useEpa=(function(){return Fd(this.a)});V8.prototype.get_m_useContinuous=(function(){return Id(this.a)});V8.prototype.set_m_useContinuous=(function(a){Jd(this.a,a)});V8.prototype.get_m_dispatchFunc=(function(){return Md(this.a)});V8.prototype.set_m_stackAllocator=(function(a){Nd(this.a,a.a)});V8.prototype.get_m_stackAllocator=(function(){return T(Od(this.a),Module.btStackAlloc)});V8.prototype.get_m_timeStep=(function(){return k[this.a]});V8.prototype.get_m_convexConservativeDistanceThreshold=(function(){return Pd(this.a)});V8.prototype.get_m_enableSatConvex=(function(){return Qd(this.a)});V8.prototype.__destroy__=(function(){Ee(this.a)});V8.prototype.set_m_allowedCcdPenetration=(function(a){Sd(this.a,a)});V8.prototype.set_m_timeStep=(function(a){k[this.a]=a});V8.prototype.set_m_timeOfImpact=(function(a){Td(this.a,a)});V8.prototype.set_m_useConvexConservativeDistanceUtil=(function(a){Ud(this.a,a)});V8.prototype.get_m_useConvexConservativeDistanceUtil=(function(){return Vd(this.a)});V8.prototype.get_m_allowedCcdPenetration=(function(){return Wd(this.a)});V8.prototype.set_m_convexConservativeDistanceThreshold=(function(a){Yd(this.a,a)});V8.prototype.set_m_dispatchFunc=(function(a){ae(this.a,a)});V8.prototype.get_m_enableSPU=(function(){return be(this.a)});V8.prototype.set_m_enableSPU=(function(a){ce(this.a,a)});V8.prototype.set_m_useEpa=(function(a){de(this.a,a)});W8.prototype.calculateLocalInertia=(function(a,d){Fe(this.a,a,d.a)});W8.prototype.isCompound=(function(){return Ge(this.a)});W8.prototype.localGetSupportingVertex=(function(a){return T(Ne(this.a,a.a),Module.btVector3)});W8.prototype.setUserPointer=(function(a){Je(this.a,a)});function W8(a,d){this.a=Re(a,d);W8.prototype.b[this.a]=this;this.c=W8}W8.prototype.b={};Module.btCapsuleShape=W8;W8.prototype.getUpAxis=(function(){return Ke(this.a)});W8.prototype.serialize=(function(a,d){return Ve(this.a,a,d.a)});W8.prototype.getLocalScaling=(function(){return T(We(this.a),Module.btVector3)});W8.prototype.getNumPreferredPenetrationDirections=(function(){return Xe(this.a)});W8.prototype.isPolyhedral=(function(){return Ye(this.a)});W8.prototype.getRadius=(function(){return cf(this.a)});W8.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});W8.prototype.calculateSerializeBufferSize=(function(){return ef(this.a)});W8.prototype.getName=(function(){return ff(this.a)});W8.prototype.getHalfHeight=(function(){return gf(this.a)});W8.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});W8.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(hf(this.a,a.a),Module.btVector3)});W8.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(mf(this.a,a.a),Module.btVector3)});W8.prototype.setLocalScaling=(function(a){pf(this.a,a.a)});W8.prototype.getAabb=(function(a,d,e){qf(this.a,a.a,d.a,e.a)});W8.prototype.getMarginNV=(function(){return Le(this.a)});W8.prototype.localGetSupportVertexNonVirtual=(function(a){return T(rf(this.a,a.a),Module.btVector3)});W8.prototype.getContactBreakingThreshold=(function(a){return vf(this.a,a)});W8.prototype.isConvex=(function(){return xf(this.a)});W8.prototype.isInfinite=(function(){return zf(this.a)});W8.prototype.getUserPointer=(function(){return Me(this.a)});W8.prototype.isNonMoving=(function(){return Bf(this.a)});W8.prototype.getMargin=(function(){return Df(this.a)});W8.prototype.getPreferredPenetrationDirection=(function(a,d){Ef(this.a,a,d.a)});W8.prototype.setMargin=(function(a){Ff(this.a,a)});W8.prototype.isConvex2d=(function(){return Gf(this.a)});W8.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});W8.prototype.isSoftBody=(function(){return Kf(this.a)});W8.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});W8.prototype.__destroy__=(function(){Nf(this.a)});W8.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){Of(this.a,a.a,d.a,e)});W8.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});W8.prototype.getBoundingSphere=(function(a,d){Pf(this.a,a.a,d)});W8.prototype.getAngularMotionDisc=(function(){return Qf(this.a)});W8.prototype.serializeSingleShape=(function(a){Rf(this.a,a.a)});W8.prototype.getAabbSlow=(function(a,d,e){Sf(this.a,a.a,d.a,e.a)});W8.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});W8.prototype.isConcave=(function(){return Uf(this.a)});W8.prototype.getShapeType=(function(){return Ie(this.a)});X8.prototype.calculateLocalInertia=(function(a,d){Zf(this.a,a,d.a)});X8.prototype.getNumPlanes=(function(){return $f(this.a)});X8.prototype.localGetSupportingVertex=(function(a){return T(ag(this.a,a.a),Module.btVector3)});X8.prototype.getAngularMotionDisc=(function(){return dg(this.a)});X8.prototype.getScaledPoint=(function(a){return T(eg(this.a,a),Module.btVector3)});X8.prototype.isConvex=(function(){return xf(this.a)});X8.prototype.getEdge=(function(a,d,e){kg(this.a,a,d.a,e.a)});X8.prototype.getNumVertices=(function(){return lg(this.a)});X8.prototype.getLocalScaling=(function(){return T(mg(this.a),Module.btVector3)});X8.prototype.getNumPreferredPenetrationDirections=(function(){return ng(this.a)});X8.prototype.isPolyhedral=(function(){return Ye(this.a)});X8.prototype.getVertex=(function(a,d){og(this.a,a,d.a)});X8.prototype.getUnscaledPoints=(function(){return T(wg(this.a),Module.btVector3)});X8.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});X8.prototype.calculateSerializeBufferSize=(function(){return Ig(this.a)});X8.prototype.setUserPointer=(function(a){Je(this.a,a)});X8.prototype.getNumEdges=(function(){return Jg(this.a)});X8.prototype.getName=(function(){return Kg(this.a)});function X8(a,d,e){this.a=a===fa?Bh():d===fa?Fh(a):e===fa?Gh(a,d):Hh(a,d,e);X8.prototype.b[this.a]=this;this.c=X8}X8.prototype.b={};Module.btConvexHullShape=X8;X8.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});X8.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(Mg(this.a,a.a),Module.btVector3)});X8.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});X8.prototype.setLocalScaling=(function(a){Pg(this.a,a.a)});X8.prototype.getAabb=(function(a,d,e){Qg(this.a,a.a,d.a,e.a)});X8.prototype.getMarginNV=(function(){return Le(this.a)});X8.prototype.isConvex2d=(function(){return Gf(this.a)});X8.prototype.localGetSupportVertexNonVirtual=(function(a){return T(Rg(this.a,a.a),Module.btVector3)});X8.prototype.getContactBreakingThreshold=(function(a){return Ug(this.a,a)});X8.prototype.addPoint=(function(a){Vg(this.a,a.a)});X8.prototype.isInfinite=(function(){return zf(this.a)});X8.prototype.serialize=(function(a,d){return Wg(this.a,a,d.a)});X8.prototype.isConcave=(function(){return Uf(this.a)});X8.prototype.getUserPointer=(function(){return Me(this.a)});X8.prototype.isNonMoving=(function(){return Bf(this.a)});X8.prototype.getMargin=(function(){return ah(this.a)});X8.prototype.recalcLocalAabb=(function(){bh(this.a)});X8.prototype.getPreferredPenetrationDirection=(function(a,d){ch(this.a,a,d.a)});X8.prototype.setMargin=(function(a){dh(this.a,a)});X8.prototype.getNonvirtualAabb=(function(a,d,e,f){eh(this.a,a.a,d.a,e.a,f)});X8.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(gh(this.a,a.a),Module.btVector3)});X8.prototype.isSoftBody=(function(){return Kf(this.a)});X8.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});X8.prototype.__destroy__=(function(){jh(this.a)});X8.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){kh(this.a,a.a,d.a,e)});X8.prototype.getPoints=(function(){return T(lh(this.a),Module.btVector3)});X8.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});X8.prototype.getBoundingSphere=(function(a,d){mh(this.a,a.a,d)});X8.prototype.isInside=(function(a,d){return nh(this.a,a.a,d)});X8.prototype.serializeSingleShape=(function(a){oh(this.a,a.a)});X8.prototype.getAabbSlow=(function(a,d,e){ph(this.a,a.a,d.a,e.a)});X8.prototype.getPlane=(function(a,d,e){qh(this.a,a.a,d.a,e)});X8.prototype.isCompound=(function(){return Ge(this.a)});X8.prototype.getConvexPolyhedron=(function(){return yg(this.a)});X8.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});X8.prototype.getShapeType=(function(){return Ie(this.a)});X8.prototype.getNumPoints=(function(){return sh(this.a)});X8.prototype.initializePolyhedralFeatures=(function(){return uh(this.a)});Y8.prototype.__destroy__=(function(){vh(this.a)});function Y8(a){this.a=wh(a);Y8.prototype.b[this.a]=this;this.c=Y8}Y8.prototype.b={};Module.btTypedObject=Y8;Y8.prototype.getObjectType=(function(){return c[this.a]});Y8.prototype.get_m_objectType=(function(){return c[this.a]});Y8.prototype.set_m_objectType=(function(a){c[this.a]=a});Z8.prototype.get_m_numVertices=(function(){return zg(this.a)});Z8.prototype.get_m_vertexBase=(function(){return Ag(this.a)});Z8.prototype.set_m_indexType=(function(a){Bg(this.a,a)});Z8.prototype.set_m_numTriangles=(function(a){c[this.a]=a});Z8.prototype.get_m_vertexType=(function(){return Cg(this.a)});Z8.prototype.get_m_vertexStride=(function(){return Dg(this.a)});Z8.prototype.get_m_numTriangles=(function(){return c[this.a]});Z8.prototype.set_m_numVertices=(function(a){Eg(this.a,a)});Z8.prototype.set_m_vertexType=(function(a){Fg(this.a,a)});Z8.prototype.get_m_indexType=(function(){return Gg(this.a)});Z8.prototype.__destroy__=(function(){xh(this.a)});Z8.prototype.set_m_vertexBase=(function(a){var d=b;try{Hg(this.a,T8(a))}finally{b=d}});function Z8(){this.a=zh();Z8.prototype.b[this.a]=this;this.c=Z8}Z8.prototype.b={};Module.btIndexedMesh=Z8;Z8.prototype.get_m_triangleIndexBase=(function(){return Ih(this.a)});Z8.prototype.set_m_triangleIndexStride=(function(a){Jh(this.a,a)});Z8.prototype.set_m_vertexStride=(function(a){Kh(this.a,a)});Z8.prototype.set_m_triangleIndexBase=(function(a){var d=b;try{Lh(this.a,T8(a))}finally{b=d}});Z8.prototype.get_m_triangleIndexStride=(function(){return Mh(this.a)});a9.prototype.getFriction=(function(){return Nh(this.a)});a9.prototype.setContactProcessingThreshold=(function(a){Oh(this.a,a)});a9.prototype.setInterpolationLinearVelocity=(function(a){qi(this.a,a.a)});a9.prototype.getDeactivationTime=(function(){return Ph(this.a)});a9.prototype.setInterpolationAngularVelocity=(function(a){ri(this.a,a.a)});a9.prototype.serialize=(function(a,d){return si(this.a,a,d.a)});a9.prototype.setFriction=(function(a){Qh(this.a,a)});a9.prototype.internalSetExtensionPointer=(function(a){Rh(this.a,a)});a9.prototype.activate=(function(a){a===fa?ti(this.a):vi(this.a,a)});a9.prototype.setInterpolationWorldTransform=(function(a){wi(this.a,a.a)});function a9(){this.a=yi();a9.prototype.b[this.a]=this;this.c=a9}a9.prototype.b={};Module.btCollisionObject=a9;a9.prototype.getInterpolationLinearVelocity=(function(){return T(this.a+33,Module.btVector3)});a9.prototype.mergesSimulationIslands=(function(){return Sh(this.a)});a9.prototype.setCollisionShape=(function(a){Ci(this.a,a.a)});a9.prototype.setCcdMotionThreshold=(function(a){Th(this.a,a)});a9.prototype.getIslandTag=(function(){return Uh(this.a)});a9.prototype.setCompanionId=(function(a){Vh(this.a,a)});a9.prototype.getCcdMotionThreshold=(function(){return Wh(this.a)});a9.prototype.setUserPointer=(function(a){Xh(this.a,a)});a9.prototype.checkCollideWith=(function(a){return Di(this.a,a.a)});a9.prototype.getAnisotropicFriction=(function(){return T(this.a+41,Module.btVector3)});a9.prototype.calculateSerializeBufferSize=(function(){return Ei(this.a)});a9.prototype.getInterpolationAngularVelocity=(function(){return T(this.a+37,Module.btVector3)});a9.prototype.forceActivationState=(function(a){Fi(this.a,a)});a9.prototype.getInterpolationWorldTransform=(function(){return T(this.a+17,Module.btTransform)});a9.prototype.setIslandTag=(function(a){Yh(this.a,a)});a9.prototype.setHitFraction=(function(a){Zh(this.a,a)});a9.prototype.serializeSingleObject=(function(a){Gi(this.a,a.a)});a9.prototype.getCollisionFlags=(function(){return $h(this.a)});a9.prototype.isStaticObject=(function(){return ai(this.a)});a9.prototype.getCollisionShape=(function(){return T(bi(this.a),Module.btCollisionShape)});a9.prototype.setAnisotropicFriction=(function(a){Hi(this.a,a.a)});a9.prototype.__destroy__=(function(){Ii(this.a)});a9.prototype.getBroadphaseHandle=(function(){return T(ci(this.a),Module.btBroadphaseProxy)});a9.prototype.getRestitution=(function(){return di(this.a)});a9.prototype.getUserPointer=(function(){return ei(this.a)});a9.prototype.setCcdSweptSphereRadius=(function(a){fi(this.a,a)});a9.prototype.getWorldTransform=(function(){return T(this.a+1,Module.btTransform)});a9.prototype.getCcdSquareMotionThreshold=(function(){return gi(this.a)});a9.prototype.setWorldTransform=(function(a){Ji(this.a,a.a)});a9.prototype.internalSetTemporaryCollisionShape=(function(a){hi(this.a,a.a)});a9.prototype.getCompanionId=(function(){return ii(this.a)});a9.prototype.isActive=(function(){return Ki(this.a)});a9.prototype.getInternalType=(function(){return ji(this.a)});a9.prototype.getActivationState=(function(){return ki(this.a)});a9.prototype.hasContactResponse=(function(){return li(this.a)});a9.prototype.setActivationState=(function(a){Li(this.a,a)});a9.prototype.getRootCollisionShape=(function(){return T(mi(this.a),Module.btCollisionShape)});a9.prototype.getContactProcessingThreshold=(function(){return ni(this.a)});a9.prototype.getHitFraction=(function(){return oi(this.a)});a9.prototype.getCcdSweptSphereRadius=(function(){return pi(this.a)});a9.prototype.setDeactivationTime=(function(a){Mi(this.a,a)});a9.prototype.internalGetExtensionPointer=(function(){return Ni(this.a)});a9.prototype.setCollisionFlags=(function(a){Oi(this.a,a)});a9.prototype.isStaticOrKinematicObject=(function(){return Pi(this.a)});a9.prototype.setRestitution=(function(a){Qi(this.a,a)});a9.prototype.hasAnisotropicFriction=(function(){return Ri(this.a)});a9.prototype.setBroadphaseHandle=(function(a){Si(this.a,a.a)});a9.prototype.isKinematicObject=(function(){return Ti(this.a)});function b9(){aa("btBroadphaseInterface is abstract!")}b9.prototype.b={};Module.btBroadphaseInterface=b9;b9.prototype.rayTest=(function(a,d,e,f,g){f===fa?ej(this.a,a.a,d.a,e.a):g===fa?fj(this.a,a.a,d.a,e.a,f.a):gj(this.a,a.a,d.a,e.a,f.a,g.a)});b9.prototype.setAabb=(function(a,d,e,f){hj(this.a,a.a,d.a,e.a,f.a)});b9.prototype.getOverlappingPairCache=(function(){return T(ij(this.a),Module.btOverlappingPairCache)});b9.prototype.resetPool=(function(a){jj(this.a,a.a)});b9.prototype.calculateOverlappingPairs=(function(a){kj(this.a,a.a)});b9.prototype.printStats=(function(){lj(this.a)});b9.prototype.getAabb=(function(a,d,e){mj(this.a,a.a,d.a,e.a)});b9.prototype.aabbTest=(function(a,d,e){nj(this.a,a.a,d.a,e.a)});b9.prototype.createProxy=(function(a,d,e,f,g,h,i,j){return T(oj(this.a,a.a,d.a,e,f,g,h,i.a,j),Module.btBroadphaseProxy)});b9.prototype.getBroadphaseAabb=(function(a,d){pj(this.a,a.a,d.a)});b9.prototype.destroyProxy=(function(a,d){qj(this.a,a.a,d.a)});c9.prototype.getCorrection=(function(){return Ui(this.a)});function c9(){this.a=rj();c9.prototype.b[this.a]=this;this.c=c9}c9.prototype.b={};Module.btAngularLimit=c9;c9.prototype.getError=(function(){return tj(this.a)});c9.prototype.fit=(function(a){uj(this.a,a)});c9.prototype.__destroy__=(function(){wj(this.a)});c9.prototype.isLimit=(function(){return Vi(this.a)});c9.prototype.getBiasFactor=(function(){return Wi(this.a)});c9.prototype.getSign=(function(){return Xi(this.a)});c9.prototype.set=(function(a,d,e,f,g){e===fa?xj(this.a,a,d):f===fa?zj(this.a,a,d,e):g===fa?Aj(this.a,a,d,e,f):yj(this.a,a,d,e,f,g)});c9.prototype.getSoftness=(function(){return Yi(this.a)});c9.prototype.getHigh=(function(){return Bj(this.a)});c9.prototype.test=(function(a){Cj(this.a,a)});c9.prototype.getHalfRange=(function(){return Zi(this.a)});c9.prototype.getLow=(function(){return Dj(this.a)});c9.prototype.getRelaxationFactor=(function(){return $i(this.a)});d9.prototype.__destroy__=(function(){Ej(this.a)});d9.prototype.getStackAllocator=(function(){return T(Fj(this.a),Module.btStackAlloc)});function d9(a){this.a=a===fa?Gj():Jj(a.a);d9.prototype.b[this.a]=this;this.c=d9}d9.prototype.b={};Module.btDefaultCollisionConfiguration=d9;d9.prototype.getPersistentManifoldPool=(function(){return Kj(this.a)});d9.prototype.getSimplexSolver=(function(){return Lj(this.a)});d9.prototype.setConvexConvexMultipointIterations=(function(a,d){a===fa?Mj(this.a):d===fa?Oj(this.a,a):Nj(this.a,a,d)});d9.prototype.getCollisionAlgorithmPool=(function(){return Pj(this.a)});d9.prototype.getCollisionAlgorithmCreateFunc=(function(a,d){return T(Qj(this.a,a,d),Module.btCollisionAlgorithmCreateFunc)});function e9(){aa("ContactResultCallback is abstract!")}e9.prototype.b={};Module.ContactResultCallback=e9;e9.prototype.set_m_collisionFilterGroup=(function(a){aj(this.a,a)});e9.prototype.set_m_collisionFilterMask=(function(a){bj(this.a,a)});e9.prototype.addSingleResult=(function(a,d,e,f,g,h,i){return Rj(this.a,a.a,d.a,e,f,g.a,h,i)});e9.prototype.get_m_collisionFilterMask=(function(){return cj(this.a)});e9.prototype.get_m_collisionFilterGroup=(function(){return dj(this.a)});e9.prototype.needsCollision=(function(a){return Sj(this.a,a.a)});f9.prototype.getAllContactManifolds=(function(a){Tj(this.a,a)});function f9(a,d,e,f){this.a=d===fa?Uj(a.a):Vj(a.a,d.a,e.a,f.a);f9.prototype.b[this.a]=this;this.c=f9}f9.prototype.b={};Module.btSphereSphereCollisionAlgorithm=f9;f9.prototype.calculateTimeOfImpact=(function(a,d,e,f){return jk(this.a,a.a,d.a,e.a,f.a)});f9.prototype.processCollision=(function(a,d,e,f){kk(this.a,a.a,d.a,e.a,f.a)});f9.prototype.__destroy__=(function(){lk(this.a)});function g9(){aa("btCollisionConfiguration is abstract!")}g9.prototype.b={};Module.btCollisionConfiguration=g9;g9.prototype.getPersistentManifoldPool=(function(){return mk(this.a)});g9.prototype.getStackAllocator=(function(){return T(nk(this.a),Module.btStackAlloc)});g9.prototype.getCollisionAlgorithmPool=(function(){return ok(this.a)});g9.prototype.getCollisionAlgorithmCreateFunc=(function(a,d){return T(pk(this.a,a,d),Module.btCollisionAlgorithmCreateFunc)});h9.prototype.getNumContacts=(function(){return Xj(this.a)});h9.prototype.set_m_objectType=(function(a){c[this.a]=a});h9.prototype.getBody1=(function(){return Yj(this.a)});h9.prototype.validContactDistance=(function(a){return qk(this.a,a.a)});h9.prototype.get_m_objectType=(function(){return c[this.a]});h9.prototype.refreshContactPoints=(function(a,d){sk(this.a,a.a,d.a)});h9.prototype.clearUserCache=(function(a){tk(this.a,a.a)});h9.prototype.set_m_index1a=(function(a){Zj(this.a,a)});function h9(a,d,e,f,g){this.a=a===fa?uk():xk(a,d,e,f,g);h9.prototype.b[this.a]=this;this.c=h9}h9.prototype.b={};Module.btPersistentManifold=h9;h9.prototype.addManifoldPoint=(function(a){return zk(this.a,a.a)});h9.prototype.getCacheEntry=(function(a){return Ak(this.a,a.a)});h9.prototype.getObjectType=(function(){return c[this.a]});h9.prototype.getContactPoint=(function(a){return T(this.a+69*a+1,Module.btManifoldPoint)});h9.prototype.getContactBreakingThreshold=(function(){return rk(this.a)});h9.prototype.clearManifold=(function(){Bk(this.a)});h9.prototype.getBody0=(function(){return $j(this.a)});h9.prototype.setBodies=(function(a,d){ak(this.a,a,d)});h9.prototype.removeContactPoint=(function(a){Ck(this.a,a)});h9.prototype.__destroy__=(function(){Dk(this.a)});h9.prototype.get_m_index1a=(function(){return bk(this.a)});h9.prototype.getContactProcessingThreshold=(function(){return ck(this.a)});h9.prototype.get_m_companionIdB=(function(){return dk(this.a)});h9.prototype.get_m_companionIdA=(function(){return ek(this.a)});h9.prototype.set_m_companionIdB=(function(a){fk(this.a,a)});h9.prototype.set_m_companionIdA=(function(a){gk(this.a,a)});h9.prototype.replaceContactPoint=(function(a,d){Ek(this.a,a.a,d)});function vub(){aa("btNodeOverlapCallback is abstract!")}vub.prototype.b={};Module.btNodeOverlapCallback=vub;vub.prototype.processNode=(function(a,d){Gk(this.a,a,d)});i9.prototype.calculateLocalInertia=(function(a,d){Hk(this.a,a,d.a)});i9.prototype.getDynamicAabbTree=(function(){return T(hk(this.a),Module.btDbvt)});i9.prototype.isConvex=(function(){return xf(this.a)});i9.prototype.getUpdateRevision=(function(){return ik(this.a)});i9.prototype.serialize=(function(a,d){return Ik(this.a,a,d.a)});i9.prototype.getLocalScaling=(function(){return T(Jk(this.a),Module.btVector3)});i9.prototype.createAabbTreeFromChildren=(function(){Kk(this.a)});function i9(a){this.a=a===fa?Pk():Rk(a);i9.prototype.b[this.a]=this;this.c=i9}i9.prototype.b={};Module.btCompoundShape=i9;i9.prototype.calculateSerializeBufferSize=(function(){return Mk(this.a)});i9.prototype.setUserPointer=(function(a){Je(this.a,a)});i9.prototype.getName=(function(){return Nk(this.a)});i9.prototype.isCompound=(function(){return Ge(this.a)});i9.prototype.isPolyhedral=(function(){return Ye(this.a)});i9.prototype.setLocalScaling=(function(a){Ok(this.a,a.a)});i9.prototype.getAabb=(function(a,d,e){Wk(this.a,a.a,d.a,e.a)});i9.prototype.getContactBreakingThreshold=(function(a){return Xk(this.a,a)});i9.prototype.getChildShape=(function(a){return T(Yk(this.a,a),Module.btCollisionShape)});i9.prototype.addChildShape=(function(a,d){$k(this.a,a.a,d.a)});i9.prototype.isInfinite=(function(){return zf(this.a)});i9.prototype.getChildTransform=(function(a){return T(al(this.a,a),Module.btTransform)});i9.prototype.getUserPointer=(function(){return Me(this.a)});i9.prototype.isNonMoving=(function(){return Bf(this.a)});i9.prototype.getChildList=(function(){return T(bl(this.a),Module.btCompoundShapeChild)});i9.prototype.getMargin=(function(){return cl(this.a)});i9.prototype.setMargin=(function(a){dl(this.a,a)});i9.prototype.getNumChildShapes=(function(){return el(this.a)});i9.prototype.removeChildShapeByIndex=(function(a){gl(this.a,a)});i9.prototype.recalculateLocalAabb=(function(){hl(this.a)});i9.prototype.isSoftBody=(function(){return Kf(this.a)});i9.prototype.__destroy__=(function(){il(this.a)});i9.prototype.updateChildTransform=(function(a,d,e){e===fa?jl(this.a,a,d.a):ll(this.a,a,d.a,e)});i9.prototype.getBoundingSphere=(function(a,d){ml(this.a,a.a,d)});i9.prototype.getAngularMotionDisc=(function(){return nl(this.a)});i9.prototype.serializeSingleShape=(function(a){ol(this.a,a.a)});i9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});i9.prototype.calculatePrincipalAxisTransform=(function(a,d,e){pl(this.a,a,d.a,e.a)});i9.prototype.removeChildShape=(function(a){ql(this.a,a.a)});i9.prototype.getShapeType=(function(){return Ie(this.a)});i9.prototype.isConcave=(function(){return Uf(this.a)});i9.prototype.isConvex2d=(function(){return Gf(this.a)});function j9(){aa("btDynamicsWorld is abstract!")}j9.prototype.b={};Module.btDynamicsWorld=j9;j9.prototype.setGravity=(function(a){rl(this.a,a.a)});j9.prototype.addAction=(function(a){sl(this.a,a.a)});j9.prototype.getSolverInfo=(function(){return T(this.a+27,Module.btContactSolverInfo)});j9.prototype.serialize=(function(a){tl(this.a,a.a)});j9.prototype.getDispatcher=(function(){return T(Sk(this.a),Module.btDispatcher)});j9.prototype.addRigidBody=(function(a,d,e){d===fa?ul(this.a,a.a):vl(this.a,a.a,d,e)});j9.prototype.clearForces=(function(){wl(this.a)});j9.prototype.removeVehicle=(function(a){xl(this.a,a.a)});j9.prototype.getDebugDrawer=(function(){return zl(this.a)});j9.prototype.setBroadphase=(function(a){Tk(this.a,a.a)});j9.prototype.performDiscreteCollisionDetection=(function(){Al(this.a)});j9.prototype.getCollisionObjectArray=(function(){return this.a+1});j9.prototype.debugDrawObject=(function(a,d,e){Bl(this.a,a.a,d.a,e.a)});j9.prototype.removeConstraint=(function(a){Cl(this.a,a.a)});j9.prototype.rayTest=(function(a,d,e){Dl(this.a,a.a,d.a,e.a)});j9.prototype.getNumConstraints=(function(){return El(this.a)});j9.prototype.addCollisionObject=(function(a,d,e){d===fa?Fl(this.a,a.a):e===fa?Gl(this.a,a.a,d):Hl(this.a,a.a,d,e)});j9.prototype.removeRigidBody=(function(a){Il(this.a,a.a)});j9.prototype.contactTest=(function(a,d){Jl(this.a,a.a,d.a)});j9.prototype.setInternalTickCallback=(function(a,d,e){d===fa?Kl(this.a,a):e===fa?Ll(this.a,a,d):Ml(this.a,a,d,e)});j9.prototype.getForceUpdateAllAabbs=(function(){return Vk(this.a)});j9.prototype.updateAabbs=(function(){Nl(this.a)});j9.prototype.setDebugDrawer=(function(a){Ol(this.a,a)});j9.prototype.synchronizeMotionStates=(function(){Pl(this.a)});j9.prototype.convexSweepTest=(function(a,d,e,f,g){g===fa?Ql(this.a,a.a,d.a,e.a,f.a):Rl(this.a,a.a,d.a,e.a,f.a,g)});j9.prototype.getNumCollisionObjects=(function(){return Sl(this.a)});j9.prototype.__destroy__=(function(){Ul(this.a)});j9.prototype.addConstraint=(function(a,d){d===fa?Vl(this.a,a.a):Wl(this.a,a.a,d)});j9.prototype.contactPairTest=(function(a,d,e){Xl(this.a,a.a,d.a,e.a)});j9.prototype.getGravity=(function(){return T(Yl(this.a),Module.btVector3)});j9.prototype.debugDrawWorld=(function(){lm(this.a)});j9.prototype.getBroadphase=(function(){return T(am(this.a),Module.btBroadphaseInterface)});j9.prototype.rayTestSingle=(function(a,d,e,f,g,h){mm(a.a,d.a,e.a,f.a,g.a,h.a)});j9.prototype.removeAction=(function(a){nm(this.a,a.a)});j9.prototype.setForceUpdateAllAabbs=(function(a){pm(this.a,a)});j9.prototype.setWorldUserInfo=(function(a){cm(this.a,a)});j9.prototype.removeCharacter=(function(a){qm(this.a,a.a)});j9.prototype.getConstraint=(function(a){return T(rm(this.a,a),Module.btTypedConstraint)});j9.prototype.getConstraintSolver=(function(){return T(sm(this.a),Module.btConstraintSolver)});j9.prototype.stepSimulation=(function(a,d,e){return d===fa?tm(this.a,a):e===fa?um(this.a,a,d):vm(this.a,a,d,e)});j9.prototype.addCharacter=(function(a){wm(this.a,a.a)});j9.prototype.getWorldType=(function(){return xm(this.a)});j9.prototype.updateSingleAabb=(function(a){ym(this.a,a.a)});j9.prototype.addVehicle=(function(a){zm(this.a,a.a)});j9.prototype.getPairCache=(function(){return T(Am(this.a),Module.btOverlappingPairCache)});j9.prototype.getWorldUserInfo=(function(){return dm(this.a)});j9.prototype.removeCollisionObject=(function(a){Bm(this.a,a.a)});j9.prototype.setConstraintSolver=(function(a){Cm(this.a,a.a)});j9.prototype.objectQuerySingle=(function(a,d,e,f,g,h,i,j){Dm(a.a,d.a,e.a,f.a,g.a,h.a,i.a,j)});j9.prototype.getDispatchInfo=(function(){return T(this.a+7,Module.btDispatcherInfo)});function k9(a){this.a=Em(a.a);k9.prototype.b[this.a]=this;this.c=k9}k9.prototype.b={};Module.btDefaultVehicleRaycaster=k9;k9.prototype.__destroy__=(function(){Fm(this.a)});k9.prototype.castRay=(function(a,d,e){return Gm(this.a,a.a,d.a,e.a)});l9.prototype.__destroy__=(function(){Hm(this.a)});function l9(){this.a=Im();l9.prototype.b[this.a]=this;this.c=l9}l9.prototype.b={};Module.btConstraintSetting=l9;l9.prototype.set_m_impulseClamp=(function(a){em(this.a,a)});l9.prototype.get_m_damping=(function(){return fm(this.a)});l9.prototype.get_m_impulseClamp=(function(){return gm(this.a)});l9.prototype.set_m_tau=(function(a){k[this.a]=a});l9.prototype.set_m_damping=(function(a){hm(this.a,a)});l9.prototype.get_m_tau=(function(){return k[this.a]});m9.prototype.__destroy__=(function(){Km(this.a)});m9.prototype.create=(function(a){Mm(this.a,a)});function m9(a){this.a=Nm(a);m9.prototype.b[this.a]=this;this.c=m9}m9.prototype.b={};Module.btStackAlloc=m9;m9.prototype.allocate=(function(a){return im(this.a,a)});m9.prototype.destroy=(function(){Lm(this.a)});m9.prototype.beginBlock=(function(){return T(Pm(this.a),Module.btBlock)});m9.prototype.getAvailableMemory=(function(){return jm(this.a)});m9.prototype.endBlock=(function(a){km(this.a,a.a)});function n9(){this.a=Qm();n9.prototype.b[this.a]=this;this.c=n9}n9.prototype.b={};Module.btContactSolverInfo=n9;n9.prototype.__destroy__=(function(){Sm(this.a)});o9.prototype.updateDeactivation=(function(a){Tm(this.a,a)});o9.prototype.setUserPointer=(function(a){Xh(this.a,a)});o9.prototype.wantsSleeping=(function(){return Vm(this.a)});o9.prototype.getOrientation=(function(){return T(cn(this.a),Module.btQuaternion)});o9.prototype.setMassProps=(function(a,d){fn(this.a,a,d.a)});o9.prototype.setMotionState=(function(a){gn(this.a,a.a)});o9.prototype.clearForces=(function(){hn(this.a)});o9.prototype.getInterpolationLinearVelocity=(function(){return T(this.a+33,Module.btVector3)});o9.prototype.set_m_frictionSolverType=(function(a){Ym(this.a,a)});o9.prototype.setCollisionShape=(function(a){jn(this.a,a.a)});o9.prototype.getHitFraction=(function(){return oi(this.a)});o9.prototype.getTurnVelocity=(function(){return T(this.a+146,Module.btVector3)});o9.prototype.internalGetInvMass=(function(){return T(this.a+138,Module.btVector3)});o9.prototype.setIslandTag=(function(a){Yh(this.a,a)});o9.prototype.getInvMass=(function(){return Zm(this.a)});o9.prototype.getCollisionFlags=(function(){return $h(this.a)});o9.prototype.getTotalForce=(function(){return T(this.a+101,Module.btVector3)});o9.prototype.getCenterOfMassPosition=(function(){return T(this.a+1+12,Module.btVector3)});o9.prototype.getDeactivationTime=(function(){return Ph(this.a)});o9.prototype.getRootCollisionShape=(function(){return T(mi(this.a),Module.btCollisionShape)});o9.prototype.getGravity=(function(){return T(this.a+93,Module.btVector3)});o9.prototype.setCenterOfMassTransform=(function(a){kn(this.a,a.a)});o9.prototype.setFlags=(function(a){$m(this.a,a)});o9.prototype.isActive=(function(){return Ki(this.a)});o9.prototype.getActivationState=(function(){return ki(this.a)});o9.prototype.getTotalTorque=(function(){return T(this.a+105,Module.btVector3)});o9.prototype.getInvInertiaTensorWorld=(function(){return T(this.a+64,Module.btMatrix3x3)});o9.prototype.computeImpulseDenominator=(function(a,d){return ln(this.a,a.a,d.a)});function o9(a,d,e,f){this.a=d===fa?Pn(a.a):f===fa?Rn(a,d.a,e.a):Tn(a,d.a,e.a,f.a);o9.prototype.b[this.a]=this;this.c=o9}o9.prototype.b={};Module.btRigidBody=o9;o9.prototype.getLinearSleepingThreshold=(function(){return an(this.a)});o9.prototype.internalGetExtensionPointer=(function(){return Ni(this.a)});o9.prototype.applyForce=(function(a,d){sn(this.a,a.a,d.a)});o9.prototype.internalGetVelocityInLocalPointObsolete=(function(a,d){vn(this.a,a.a,d.a)});o9.prototype.mergesSimulationIslands=(function(){return Sh(this.a)});o9.prototype.getFriction=(function(){return Nh(this.a)});o9.prototype.setContactProcessingThreshold=(function(a){Oh(this.a,a)});o9.prototype.internalGetDeltaAngularVelocity=(function(){return T(this.a+130,Module.btVector3)});o9.prototype.applyCentralForce=(function(a){tn(this.a,a.a)});o9.prototype.applyImpulse=(function(a,d){yn(this.a,a.a,d.a)});o9.prototype.applyTorque=(function(a){un(this.a,a.a)});o9.prototype.getIslandTag=(function(){return Uh(this.a)});o9.prototype.internalGetAngularFactor=(function(){return T(this.a+134,Module.btVector3)});o9.prototype.predictIntegratedTransform=(function(a,d){Bn(this.a,a,d.a)});o9.prototype.getInterpolationAngularVelocity=(function(){return T(this.a+37,Module.btVector3)});o9.prototype.forceActivationState=(function(a){Fi(this.a,a)});o9.prototype.getAngularVelocity=(function(){return T(this.a+80,Module.btVector3)});o9.prototype.getLinearVelocity=(function(){return T(this.a+76,Module.btVector3)});o9.prototype.checkCollideWithOverride=(function(a){return Cn(this.a,a.a)});o9.prototype.getBroadphaseHandle=(function(){return T(ci(this.a),Module.btBroadphaseProxy)});o9.prototype.getUserPointer=(function(){return ei(this.a)});o9.prototype.setCcdSweptSphereRadius=(function(a){fi(this.a,a)});o9.prototype.setAngularVelocity=(function(a){Dn(this.a,a.a)});o9.prototype.addConstraintRef=(function(a){En(this.a,a.a)});o9.prototype.integrateVelocities=(function(a){Fn(this.a,a)});o9.prototype.isInWorld=(function(){return Mn(this.a)});o9.prototype.internalSetTemporaryCollisionShape=(function(a){hi(this.a,a.a)});o9.prototype.computeAngularImpulseDenominator=(function(a){return Nn(this.a,a.a)});o9.prototype.getAngularDamping=(function(){return bn(this.a)});o9.prototype.setNewBroadphaseProxy=(function(a){On(this.a,a.a)});o9.prototype.removeConstraintRef=(function(a){ao(this.a,a.a)});o9.prototype.getAngularFactor=(function(){return T(this.a+134,Module.btVector3)});o9.prototype.isStaticOrKinematicObject=(function(){return Pi(this.a)});o9.prototype.setRestitution=(function(a){Qi(this.a,a)});o9.prototype.isKinematicObject=(function(){return Ti(this.a)});o9.prototype.proceedToTransform=(function(a){kn(this.a,a.a)});o9.prototype.internalWritebackVelocity=(function(a){a===fa?bo(this.a):eo(this.a,a)});o9.prototype.setInterpolationLinearVelocity=(function(a){qi(this.a,a.a)});o9.prototype.applyGravity=(function(){fo(this.a)});o9.prototype.serialize=(function(a,d){return go(this.a,a,d.a)});o9.prototype.internalApplyImpulse=(function(a,d,e){ho(this.a,a.a,d.a,e)});o9.prototype.internalSetExtensionPointer=(function(a){Rh(this.a,a)});o9.prototype.activate=(function(a){a===fa?io(this.a):jo(this.a,a)});o9.prototype.getMotionState=(function(){return T(Un(this.a),Module.btMotionState)});o9.prototype.setCompanionId=(function(a){Vh(this.a,a)});o9.prototype.internalApplyPushImpulse=(function(a,d,e){ko(this.a,a.a,d.a,e)});o9.prototype.setCcdMotionThreshold=(function(a){Th(this.a,a)});o9.prototype.getVelocityInLocalPoint=(function(a){return T(lo(this.a,a.a),Module.btVector3)});o9.prototype.getCcdMotionThreshold=(function(){return Wh(this.a)});o9.prototype.getLinearFactor=(function(){return T(this.a+85,Module.btVector3)});o9.prototype.getAnisotropicFriction=(function(){return T(this.a+41,Module.btVector3)});o9.prototype.getAngularSleepingThreshold=(function(){return Vn(this.a)});o9.prototype.getInterpolationWorldTransform=(function(){return T(this.a+17,Module.btTransform)});o9.prototype.getAabb=(function(a,d){po(this.a,a.a,d.a)});o9.prototype.serializeSingleObject=(function(a){qo(this.a,a.a)});o9.prototype.translate=(function(a){ro(this.a,a.a)});o9.prototype.getWorldTransform=(function(){return T(this.a+1,Module.btTransform)});o9.prototype.getBroadphaseProxy=(function(){return T(Wn(this.a),Module.btBroadphaseProxy)});o9.prototype.getCollisionShape=(function(){return T(Xn(this.a),Module.btCollisionShape)});o9.prototype.setAnisotropicFriction=(function(a){Hi(this.a,a.a)});o9.prototype.get_m_contactSolverType=(function(){return Yn(this.a)});o9.prototype.internalGetDeltaLinearVelocity=(function(){return T(this.a+126,Module.btVector3)});o9.prototype.hasContactResponse=(function(){return li(this.a)});o9.prototype.upcast=(function(a){return T(so(a.a),Module.btRigidBody)});o9.prototype.getCompanionId=(function(){return ii(this.a)});o9.prototype.saveKinematicState=(function(a){to(this.a,a)});o9.prototype.setWorldTransform=(function(a){Ji(this.a,a.a)});o9.prototype.setActivationState=(function(a){Li(this.a,a)});o9.prototype.getDeltaAngularVelocity=(function(){return T(this.a+130,Module.btVector3)});o9.prototype.getCcdSweptSphereRadius=(function(){return pi(this.a)});o9.prototype.getConstraintRef=(function(a){return T(uo(this.a,a),Module.btTypedConstraint)});o9.prototype.setDeactivationTime=(function(a){Mi(this.a,a)});o9.prototype.getCenterOfMassTransform=(function(){return T(this.a+1,Module.btTransform)});o9.prototype.hasAnisotropicFriction=(function(){return Ri(this.a)});o9.prototype.setBroadphaseHandle=(function(a){Si(this.a,a.a)});o9.prototype.getFlags=(function(){return Zn(this.a)});o9.prototype.setGravity=(function(a){wo(this.a,a.a)});o9.prototype.getCcdSquareMotionThreshold=(function(){return gi(this.a)});o9.prototype.setAngularFactor=(function(a){xo(this.a,a.a)});o9.prototype.getPushVelocity=(function(){return T(this.a+142,Module.btVector3)});o9.prototype.updateInertiaTensor=(function(){yo(this.a)});o9.prototype.setInterpolationAngularVelocity=(function(a){ri(this.a,a.a)});o9.prototype.setFriction=(function(a){Qh(this.a,a)});o9.prototype.setDamping=(function(a,d){zo(this.a,a,d)});o9.prototype.getInternalType=(function(){return ji(this.a)});o9.prototype.set_m_contactSolverType=(function(a){$n(this.a,a)});o9.prototype.calculateSerializeBufferSize=(function(){return Ao(this.a)});o9.prototype.checkCollideWith=(function(a){return Di(this.a,a.a)});o9.prototype.getInvInertiaDiagLocal=(function(){return T(this.a+97,Module.btVector3)});o9.prototype.applyTorqueImpulse=(function(a){An(this.a,a.a)});o9.prototype.internalGetPushVelocity=(function(){return T(this.a+142,Module.btVector3)});o9.prototype.setLinearFactor=(function(a){Co(this.a,a.a)});o9.prototype.setLinearVelocity=(function(a){co(this.a,a.a)});o9.prototype.isStaticObject=(function(){return ai(this.a)});o9.prototype.applyCentralImpulse=(function(a){zn(this.a,a.a)});o9.prototype.setCollisionFlags=(function(a){Oi(this.a,a)});o9.prototype.getDeltaLinearVelocity=(function(){return T(this.a+126,Module.btVector3)});o9.prototype.setInvInertiaDiagLocal=(function(a){Mo(this.a,a.a)});o9.prototype.setSleepingThresholds=(function(a,d){Do(this.a,a,d)});o9.prototype.get_m_frictionSolverType=(function(){return Eo(this.a)});o9.prototype.__destroy__=(function(){No(this.a)});o9.prototype.internalGetAngularVelocity=(function(a){Oo(this.a,a.a)});o9.prototype.getNumConstraintRefs=(function(){return Po(this.a)});o9.prototype.getRestitution=(function(){return di(this.a)});o9.prototype.getContactProcessingThreshold=(function(){return ni(this.a)});o9.prototype.internalGetTurnVelocity=(function(){return T(this.a+146,Module.btVector3)});o9.prototype.setInterpolationWorldTransform=(function(a){wi(this.a,a.a)});o9.prototype.setHitFraction=(function(a){Zh(this.a,a)});o9.prototype.applyDamping=(function(a){Ro(this.a,a)});o9.prototype.getLinearDamping=(function(){return Fo(this.a)});p9.prototype.buildInternal=(function(){So(this.a)});p9.prototype.serialize=(function(a,d,e){return e===fa?To(this.a,a,d.a):Uo(this.a,a,d,e)});p9.prototype.getLeafNodeArray=(function(){return this.a+26});p9.prototype.setQuantizationValues=(function(a,d,e){e===fa?Vo(this.a,a.a,d.a):Wo(this.a,a.a,d.a,e)});p9.prototype.quantize=(function(a,d,e){Xo(this.a,a,d.a,e)});p9.prototype.isQuantized=(function(){return Go(this.a)});p9.prototype.getAlignmentSerializationPadding=(function(){return 0});p9.prototype.updateBvhNodes=(function(a,d,e,f){Yo(this.a,a.a,d,e,f)});p9.prototype.calculateSerializeBufferSize=(function(){return Zo(this.a)});p9.prototype.getQuantizedNodeArray=(function(){return this.a+31});p9.prototype.reportAabbOverlappingNodex=(function(a,d,e){$o(this.a,a.a,d.a,e.a)});p9.prototype.reportRayOverlappingNodex=(function(a,d,e){ap(this.a,a.a,d.a,e.a)});p9.prototype.build=(function(a,d,e,f){bp(this.a,a.a,d,e.a,f.a)});p9.prototype.refitPartial=(function(a,d,e){dp(this.a,a.a,d.a,e.a)});p9.prototype.deSerializeInPlace=(function(a,d,e){return T(ep(a,d,e),Module.btOptimizedBvh)});p9.prototype.quantizeWithClamp=(function(a,d,e){fp(this.a,a,d.a,e)});p9.prototype.refit=(function(a,d,e){ip(this.a,a.a,d.a,e.a)});p9.prototype.deSerializeDouble=(function(a){jp(this.a,a.a)});p9.prototype.calculateSerializeBufferSizeNew=(function(){return kp(this.a)});p9.prototype.__destroy__=(function(){lp(this.a)});p9.prototype.deSerializeFloat=(function(a){mp(this.a,a.a)});p9.prototype.serializeInPlace=(function(a,d,e){return np(this.a,a,d,e)});p9.prototype.getSubtreeInfoArray=(function(){return this.a+37});p9.prototype.unQuantize=(function(a){return T(op(this.a,a),Module.btVector3)});p9.prototype.reportBoxCastOverlappingNodex=(function(a,d,e,f,g){sp(this.a,a.a,d.a,e.a,f.a,g.a)});function p9(){this.a=wp();p9.prototype.b[this.a]=this;this.c=p9}p9.prototype.b={};Module.btOptimizedBvh=p9;function q9(){aa("btTypedConstraint is abstract!")}q9.prototype.b={};Module.btTypedConstraint=q9;q9.prototype.getRigidBodyB=(function(){return T(Ho(this.a),Module.btRigidBody)});q9.prototype.buildJacobian=(function(){tp(this.a)});q9.prototype.getRigidBodyA=(function(){return T(Io(this.a),Module.btRigidBody)});q9.prototype.set_m_objectType=(function(a){Jo(this.a,a)});q9.prototype.serialize=(function(a,d){return up(this.a,a,d.a)});q9.prototype.enableFeedback=(function(a){vp(this.a,a)});q9.prototype.getUserConstraintId=(function(){return Lo(this.a)});q9.prototype.get_m_objectType=(function(){return yp(this.a)});q9.prototype.setParam=(function(a,d,e){e===fa?Qp(this.a,a,d):Rp(this.a,a,d,e)});q9.prototype.getParam=(function(a,d){return d===fa?Sp(this.a,a):Tp(this.a,a,d)});q9.prototype.getInfo1=(function(a){Up(this.a,a.a)});q9.prototype.getInfo2=(function(a){Vp(this.a,a.a)});q9.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});q9.prototype.calculateSerializeBufferSize=(function(){return Wp(this.a)});q9.prototype.isEnabled=(function(){return Ap(this.a)});q9.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});q9.prototype.getConstraintType=(function(){return Cp(this.a)});q9.prototype.getDbgDrawSize=(function(){return Dp(this.a)});q9.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});q9.prototype.needsFeedback=(function(){return Fp(this.a)});q9.prototype.getObjectType=(function(){return Xp(this.a)});q9.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});q9.prototype.setEnabled=(function(a){Yp(this.a,a)});q9.prototype.getUid=(function(){return Ip(this.a)});q9.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});q9.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});q9.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});q9.prototype.__destroy__=(function(){Zp(this.a)});q9.prototype.setupSolverConstraint=(function(a,d,e,f){$p(this.a,a,d,e,f)});q9.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});q9.prototype.getUserConstraintType=(function(){return Np(this.a)});q9.prototype.solveConstraintObsolete=(function(a,d,e){aq(this.a,a.a,d.a,e)});q9.prototype.getAppliedImpulse=(function(){return Op(this.a)});q9.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});function r9(){aa("btPolyhedralConvexShape is abstract!")}r9.prototype.b={};Module.btPolyhedralConvexShape=r9;r9.prototype.calculateLocalInertia=(function(a,d){bq(this.a,a,d.a)});r9.prototype.getNumPlanes=(function(){return cq(this.a)});r9.prototype.localGetSupportingVertex=(function(a){return T(dq(this.a,a.a),Module.btVector3)});r9.prototype.setUserPointer=(function(a){Je(this.a,a)});r9.prototype.isInside=(function(a,d){return gq(this.a,a.a,d)});r9.prototype.getNumVertices=(function(){return hq(this.a)});r9.prototype.getLocalScaling=(function(){return T(iq(this.a),Module.btVector3)});r9.prototype.getNumPreferredPenetrationDirections=(function(){return jq(this.a)});r9.prototype.isPolyhedral=(function(){return Ye(this.a)});r9.prototype.getVertex=(function(a,d){kq(this.a,a,d.a)});r9.prototype.localGetSupportVertexNonVirtual=(function(a){return T(lq(this.a,a.a),Module.btVector3)});r9.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});r9.prototype.calculateSerializeBufferSize=(function(){return oq(this.a)});r9.prototype.getNumEdges=(function(){return pq(this.a)});r9.prototype.getName=(function(){return qq(this.a)});r9.prototype.getEdge=(function(a,d,e){rq(this.a,a,d.a,e.a)});r9.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});r9.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(sq(this.a,a.a),Module.btVector3)});r9.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(vq(this.a,a.a),Module.btVector3)});r9.prototype.setLocalScaling=(function(a){yq(this.a,a.a)});r9.prototype.getAabb=(function(a,d,e){zq(this.a,a.a,d.a,e.a)});r9.prototype.getMarginNV=(function(){return Le(this.a)});r9.prototype.isConvex2d=(function(){return Gf(this.a)});r9.prototype.getContactBreakingThreshold=(function(a){return Aq(this.a,a)});r9.prototype.isConvex=(function(){return xf(this.a)});r9.prototype.isInfinite=(function(){return zf(this.a)});r9.prototype.serialize=(function(a,d){return Bq(this.a,a,d.a)});r9.prototype.getUserPointer=(function(){return Me(this.a)});r9.prototype.isNonMoving=(function(){return Bf(this.a)});r9.prototype.getMargin=(function(){return Cq(this.a)});r9.prototype.getPreferredPenetrationDirection=(function(a,d){Dq(this.a,a,d.a)});r9.prototype.setMargin=(function(a){Eq(this.a,a)});r9.prototype.initializePolyhedralFeatures=(function(){return Fq(this.a)});r9.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});r9.prototype.isSoftBody=(function(){return Kf(this.a)});r9.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});r9.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){qr(this.a,a.a,d.a,e)});r9.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});r9.prototype.getBoundingSphere=(function(a,d){rr(this.a,a.a,d)});r9.prototype.getAngularMotionDisc=(function(){return sr(this.a)});r9.prototype.serializeSingleShape=(function(a){tr(this.a,a.a)});r9.prototype.getAabbSlow=(function(a,d,e){ur(this.a,a.a,d.a,e.a)});r9.prototype.getPlane=(function(a,d,e){vr(this.a,a.a,d.a,e)});r9.prototype.isCompound=(function(){return Ge(this.a)});r9.prototype.getConvexPolyhedron=(function(){return yg(this.a)});r9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});r9.prototype.getShapeType=(function(){return Ie(this.a)});r9.prototype.isConcave=(function(){return Uf(this.a)});s9.prototype.set_m_pid=(function(a){Gq(this.a,a)});function s9(a){this.a=a===fa?wr():yr(a.a);s9.prototype.b[this.a]=this;this.c=s9}s9.prototype.b={};Module.btDbvtBroadphase=s9;s9.prototype.get_m_deferedcollide=(function(){return Hq(this.a)});s9.prototype.performDeferredRemoval=(function(a){zr(this.a,a.a)});s9.prototype.set_m_releasepaircache=(function(a){Iq(this.a,a)});s9.prototype.get_m_dupdates=(function(){return Jq(this.a)});s9.prototype.set_m_paircache=(function(a){Kq(this.a,a.a)});s9.prototype.calculateOverlappingPairs=(function(a){Ar(this.a,a.a)});s9.prototype.get_m_releasepaircache=(function(){return Lq(this.a)});s9.prototype.set_m_fupdates=(function(a){Mq(this.a,a)});s9.prototype.set_m_deferedcollide=(function(a){Nq(this.a,a)});s9.prototype.set_m_cid=(function(a){Oq(this.a,a)});s9.prototype.rayTest=(function(a,d,e,f,g){f===fa?Br(this.a,a.a,d.a,e.a):g===fa?Cr(this.a,a.a,d.a,e.a,f.a):Dr(this.a,a.a,d.a,e.a,f.a,g.a)});s9.prototype.set_m_newpairs=(function(a){Pq(this.a,a)});s9.prototype.setAabb=(function(a,d,e,f){Er(this.a,a.a,d.a,e.a,f.a)});s9.prototype.get_m_fixedleft=(function(){return Qq(this.a)});s9.prototype.resetPool=(function(a){Fr(this.a,a.a)});s9.prototype.set_m_gid=(function(a){Rq(this.a,a)});s9.prototype.getAabb=(function(a,d,e){Gr(this.a,a.a,d.a,e.a)});s9.prototype.get_m_stageCurrent=(function(){return Sq(this.a)});s9.prototype.set_m_updates_call=(function(a){Tq(this.a,a)});s9.prototype.set_m_needcleanup=(function(a){Uq(this.a,a)});s9.prototype.set_m_updates_done=(function(a){Vq(this.a,a)});s9.prototype.get_m_fupdates=(function(){return Wq(this.a)});s9.prototype.get_m_pid=(function(){return Xq(this.a)});s9.prototype.set_m_dupdates=(function(a){Yq(this.a,a)});s9.prototype.get_m_cid=(function(){return Zq(this.a)});s9.prototype.set_m_updates_ratio=(function(a){$q(this.a,a)});s9.prototype.setVelocityPrediction=(function(a){ar(this.a,a)});s9.prototype.benchmark=pa();s9.prototype.collide=(function(a){Hr(this.a,a.a)});s9.prototype.get_m_updates_call=(function(){return br(this.a)});s9.prototype.printStats=(function(){Ir(this.a)});s9.prototype.createProxy=(function(a,d,e,f,g,h,i,j){return T(Jr(this.a,a.a,d.a,e,f,g,h,i.a,j),Module.btBroadphaseProxy)});s9.prototype.get_m_cupdates=(function(){return cr(this.a)});s9.prototype.optimize=(function(){Kr(this.a)});s9.prototype.set_m_cupdates=(function(a){dr(this.a,a)});s9.prototype.get_m_prediction=(function(){return er(this.a)});s9.prototype.__destroy__=(function(){Lr(this.a)});s9.prototype.get_m_gid=(function(){return fr(this.a)});s9.prototype.get_m_needcleanup=(function(){return gr(this.a)});s9.prototype.getOverlappingPairCache=(function(){return T(Mr(this.a),Module.btOverlappingPairCache)});s9.prototype.get_m_newpairs=(function(){return hr(this.a)});s9.prototype.get_m_updates_ratio=(function(){return ir(this.a)});s9.prototype.setAabbForceUpdate=(function(a,d,e,f){Nr(this.a,a.a,d.a,e.a,f.a)});s9.prototype.set_m_prediction=(function(a){jr(this.a,a)});s9.prototype.aabbTest=(function(a,d,e){Or(this.a,a.a,d.a,e.a)});s9.prototype.getVelocityPrediction=(function(){return kr(this.a)});s9.prototype.get_m_paircache=(function(){return T(lr(this.a),Module.btOverlappingPairCache)});s9.prototype.get_m_updates_done=(function(){return mr(this.a)});s9.prototype.set_m_fixedleft=(function(a){or(this.a,a)});s9.prototype.set_m_stageCurrent=(function(a){pr(this.a,a)});s9.prototype.getBroadphaseAabb=(function(a,d){Pr(this.a,a.a,d.a)});s9.prototype.destroyProxy=(function(a,d){Qr(this.a,a.a,d.a)});function t9(a){this.a=Rr(a.a);t9.prototype.b[this.a]=this;this.c=t9}t9.prototype.b={};Module.btCollisionDispatcher=t9;t9.prototype.freeCollisionAlgorithm=(function(a){$r(this.a,a)});t9.prototype.setNearCallback=(function(a){Tr(this.a,a)});t9.prototype.getNearCallback=(function(){return Ur(this.a)});t9.prototype.findAlgorithm=(function(a,d,e){return e===fa?T(as(this.a,a.a,d.a),Module.btCollisionAlgorithm):T(bs(this.a,a.a,d.a,e.a),Module.btCollisionAlgorithm)});t9.prototype.needsResponse=(function(a,d){return cs(this.a,a.a,d.a)});t9.prototype.releaseManifold=(function(a){ds(this.a,a.a)});t9.prototype.getDispatcherFlags=(function(){return Vr(this.a)});t9.prototype.setDispatcherFlags=(function(a){Wr(this.a,a)});t9.prototype.getManifoldByIndexInternal=(function(a){return T(es(this.a,a),Module.btPersistentManifold)});t9.prototype.registerCollisionCreateFunc=(function(a,d,e){fs(this.a,a,d,e.a)});t9.prototype.needsCollision=(function(a,d){return gs(this.a,a.a,d.a)});t9.prototype.getNumManifolds=(function(){return hs(this.a)});t9.prototype.setCollisionConfiguration=(function(a){Xr(this.a,a.a)});t9.prototype.clearManifold=(function(a){is(this.a,a.a)});t9.prototype.getNewManifold=(function(a,d){return T(js(this.a,a,d),Module.btPersistentManifold)});t9.prototype.dispatchAllCollisionPairs=(function(a,d,e){ks(this.a,a.a,d.a,e.a)});t9.prototype.allocateCollisionAlgorithm=(function(a){return ls(this.a,a)});t9.prototype.__destroy__=(function(){ms(this.a)});t9.prototype.getCollisionConfiguration=(function(){return T(Yr(this.a),Module.btCollisionConfiguration)});t9.prototype.getInternalManifoldPointer=(function(){return T(ns(this.a),Module.btPersistentManifold)});t9.prototype.defaultNearCallback=(function(a,d,e){os(a.a,d.a,e.a)});t9.prototype.getInternalManifoldPool=(function(){return ps(this.a)});function u9(a,d,e,f,g){this.a=e===fa?ws(a.a,d.a):f===fa?ys(a.a,d.a,e):g===fa?zs(a.a,d.a,e,f.a):As(a.a,d.a,e,f.a,g);u9.prototype.b[this.a]=this;this.c=u9}u9.prototype.b={};Module.btAxisSweep3=u9;u9.prototype.getNumHandles=(function(){return Zr(this.a)});u9.prototype.addHandle=(function(a,d,e,f,g,h,i){return rs(this.a,a.a,d.a,e,f,g,h.a,i)});u9.prototype.quantize=(function(a,d,e){ss(this.a,a,d.a,e)});u9.prototype.removeHandle=(function(a,d){Es(this.a,a,d.a)});u9.prototype.getOverlappingPairUserCallback=(function(){return T(Bs(this.a),Module.btOverlappingPairCallback)});u9.prototype.processAllOverlappingPairs=(function(a){qia(this.a,a.a)});u9.prototype.rayTest=(function(a,d,e,f,g){f===fa?Hs(this.a,a.a,d.a,e.a):g===fa?Is(this.a,a.a,d.a,e.a,f.a):Js(this.a,a.a,d.a,e.a,f.a,g.a)});u9.prototype.setAabb=(function(a,d,e,f){Ks(this.a,a.a,d.a,e.a,f.a)});u9.prototype.resetPool=(function(a){Ls(this.a,a.a)});u9.prototype.testAabbOverlap=(function(a,d){return Cs(this.a,a.a,d.a)});u9.prototype.getAabb=(function(a,d,e){Ms(this.a,a.a,d.a,e.a)});u9.prototype.updateHandle=(function(a,d,e,f){Ns(this.a,a,d.a,e.a,f.a)});u9.prototype.printStats=(function(){Os(this.a)});u9.prototype.createProxy=(function(a,d,e,f,g,h,i,j){return T(Ps(this.a,a.a,d.a,e,f,g,h,i.a,j),Module.btBroadphaseProxy)});u9.prototype.__destroy__=(function(){Qs(this.a)});u9.prototype.setOverlappingPairUserCallback=(function(a){Ds(this.a,a.a)});u9.prototype.calculateOverlappingPairs=(function(a){Rs(this.a,a.a)});u9.prototype.getOverlappingPairCache=(function(){return T(Ss(this.a),Module.btOverlappingPairCache)});u9.prototype.unQuantize=(function(a,d,e){Ts(this.a,a.a,d.a,e.a)});u9.prototype.aabbTest=(function(a,d,e){Xs(this.a,a.a,d.a,e.a)});u9.prototype.getBroadphaseAabb=(function(a,d){Ys(this.a,a.a,d.a)});u9.prototype.destroyProxy=(function(a,d){Zs(this.a,a.a,d.a)});u9.prototype.getHandle=(function(a){return ts(this.a,a)});v9.prototype.set_m_dispatcher1=(function(a){c[this.a]=a.a});v9.prototype.__destroy__=(function(){at(this.a)});function v9(a){this.a=a===fa?bt():dt(a.a);v9.prototype.b[this.a]=this;this.c=v9}v9.prototype.b={};Module.btCollisionAlgorithmConstructionInfo=v9;v9.prototype.get_m_dispatcher1=(function(){return T(c[this.a],Module.btDispatcher)});v9.prototype.set_m_manifold=(function(a){Us(this.a,a.a)});v9.prototype.get_m_manifold=(function(){return T(Vs(this.a),Module.btPersistentManifold)});w9.prototype.setGravity=(function(a){et(this.a,a.a)});w9.prototype.addAction=(function(a){ft(this.a,a.a)});w9.prototype.getSolverInfo=(function(){return T(this.a+27,Module.btContactSolverInfo)});w9.prototype.getDebugDrawer=(function(){return gt(this.a)});w9.prototype.applyGravity=(function(){ht(this.a)});w9.prototype.serialize=(function(a){it(this.a,a.a)});w9.prototype.getDispatcher=(function(){return T(Sk(this.a),Module.btDispatcher)});w9.prototype.getCollisionWorld=(function(){return T(this.a,Module.btCollisionWorld)});w9.prototype.addRigidBody=(function(a,d,e){d===fa?jt(this.a,a.a):kt(this.a,a.a,d,e)});w9.prototype.clearForces=(function(){lt(this.a)});w9.prototype.removeVehicle=(function(a){mt(this.a,a.a)});function w9(a,d,e,f){this.a=nt(a.a,d.a,e.a,f.a);w9.prototype.b[this.a]=this;this.c=w9}w9.prototype.b={};Module.btDiscreteDynamicsWorld=w9;w9.prototype.setBroadphase=(function(a){Tk(this.a,a.a)});w9.prototype.getSynchronizeAllMotionStates=(function(){return Ws(this.a)});w9.prototype.setNumTasks=(function(a){pt(this.a,a)});w9.prototype.setSynchronizeAllMotionStates=(function(a){qt(this.a,a)});w9.prototype.getCollisionObjectArray=(function(){return this.a+1});w9.prototype.debugDrawObject=(function(a,d,e){rt(this.a,a.a,d.a,e.a)});w9.prototype.removeConstraint=(function(a){st(this.a,a.a)});w9.prototype.rayTest=(function(a,d,e){tt(this.a,a.a,d.a,e.a)});w9.prototype.getNumConstraints=(function(){return ut(this.a)});w9.prototype.addCollisionObject=(function(a,d,e){d===fa?vt(this.a,a.a):e===fa?wt(this.a,a.a,d):xt(this.a,a.a,d,e)});w9.prototype.removeRigidBody=(function(a){yt(this.a,a.a)});w9.prototype.contactTest=(function(a,d){Jl(this.a,a.a,d.a)});w9.prototype.performDiscreteCollisionDetection=(function(){zt(this.a)});w9.prototype.setInternalTickCallback=(function(a,d,e){d===fa?At(this.a,a):e===fa?Bt(this.a,a,d):Ct(this.a,a,d,e)});w9.prototype.getForceUpdateAllAabbs=(function(){return Vk(this.a)});w9.prototype.updateAabbs=(function(){Dt(this.a)});w9.prototype.setDebugDrawer=(function(a){Et(this.a,a)});w9.prototype.debugDrawConstraint=(function(a){Ft(this.a,a.a)});w9.prototype.debugDrawWorld=(function(){Gt(this.a)});w9.prototype.convexSweepTest=(function(a,d,e,f,g){g===fa?Ht(this.a,a.a,d.a,e.a,f.a):Rl(this.a,a.a,d.a,e.a,f.a,g)});w9.prototype.getNumCollisionObjects=(function(){return Sl(this.a)});w9.prototype.setWorldUserInfo=(function(a){cm(this.a,a)});w9.prototype.addConstraint=(function(a,d){d===fa?It(this.a,a.a):Jt(this.a,a.a,d)});w9.prototype.getWorldUserInfo=(function(){return dm(this.a)});w9.prototype.contactPairTest=(function(a,d,e){Xl(this.a,a.a,d.a,e.a)});w9.prototype.getGravity=(function(){return T(Wt(this.a),Module.btVector3)});w9.prototype.getBroadphase=(function(){return T(am(this.a),Module.btBroadphaseInterface)});w9.prototype.rayTestSingle=(function(a,d,e,f,g,h){mm(a.a,d.a,e.a,f.a,g.a,h.a)});w9.prototype.removeAction=(function(a){Zt(this.a,a.a)});w9.prototype.setForceUpdateAllAabbs=(function(a){$t(this.a,a)});w9.prototype.__destroy__=(function(){au(this.a)});w9.prototype.removeCharacter=(function(a){bu(this.a,a.a)});w9.prototype.getConstraint=(function(a){return T(cu(this.a,a),Module.btTypedConstraint)});w9.prototype.getConstraintSolver=(function(){return T(du(this.a),Module.btConstraintSolver)});w9.prototype.stepSimulation=(function(a,d,e){return d===fa?eu(this.a,a):e===fa?fu(this.a,a,d):gu(this.a,a,d,e)});w9.prototype.addCharacter=(function(a){hu(this.a,a.a)});w9.prototype.getWorldType=(function(){return iu(this.a)});w9.prototype.updateSingleAabb=(function(a){ym(this.a,a.a)});w9.prototype.updateVehicles=(function(a){ju(this.a,a)});w9.prototype.synchronizeSingleMotionState=(function(a){ku(this.a,a.a)});w9.prototype.addVehicle=(function(a){lu(this.a,a.a)});w9.prototype.getPairCache=(function(){return T(Am(this.a),Module.btOverlappingPairCache)});w9.prototype.synchronizeMotionStates=(function(){mu(this.a)});w9.prototype.getSimulationIslandManager=(function(){return Kt(this.a)});w9.prototype.removeCollisionObject=(function(a){nu(this.a,a.a)});w9.prototype.setConstraintSolver=(function(a){ou(this.a,a.a)});w9.prototype.objectQuerySingle=(function(a,d,e,f,g,h,i,j){Dm(a.a,d.a,e.a,f.a,g.a,h.a,i.a,j)});w9.prototype.getDispatchInfo=(function(){return T(this.a+7,Module.btDispatcherInfo)});function Bub(){aa("btTriangleCallback is abstract!")}Bub.prototype.b={};Module.btTriangleCallback=Bub;Bub.prototype.processTriangle=(function(a,d,e){pu(this.a,a.a,d,e)});x9.prototype.getRigidBodyB=(function(){return T(Lt(this.a),Module.btRigidBody)});x9.prototype.buildJacobian=(function(){qu(this.a)});x9.prototype.getRigidBodyA=(function(){return T(Mt(this.a),Module.btRigidBody)});x9.prototype.isPastSwingLimit=(function(){return Nt(this.a)});x9.prototype.set_m_objectType=(function(a){Ot(this.a,a)});x9.prototype.setEnabled=(function(a){ru(this.a,a)});x9.prototype.getFrameOffsetA=(function(){return T(this.a+74,Module.btTransform)});x9.prototype.getFrameOffsetB=(function(){return T(this.a+90,Module.btTransform)});x9.prototype.getSwingSpan2=(function(){return Pt(this.a)});x9.prototype.getSwingSpan1=(function(){return Qt(this.a)});x9.prototype.calcAngleInfo2=(function(a,d,e,f){su(this.a,a.a,d.a,e.a,f.a)});x9.prototype.get_m_objectType=(function(){return Rt(this.a)});x9.prototype.setParam=(function(a,d,e){e===fa?tu(this.a,a,d):uu(this.a,a,d,e)});x9.prototype.getParam=(function(a,d){return d===fa?vu(this.a,a):wu(this.a,a,d)});x9.prototype.setDamping=(function(a){St(this.a,a)});x9.prototype.getInfo1=(function(a){xu(this.a,a.a)});x9.prototype.getInfo2=(function(a){yu(this.a,a.a)});x9.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});function x9(a,d,e,f){this.a=e===fa?zu(a.a,d.a):Bu(a.a,d.a,e.a,f.a);x9.prototype.b[this.a]=this;this.c=x9}x9.prototype.b={};Module.btConeTwistConstraint=x9;x9.prototype.setMotorTarget=(function(a){Du(this.a,a.a)});x9.prototype.calculateSerializeBufferSize=(function(){return Eu(this.a)});x9.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});x9.prototype.isEnabled=(function(){return Ap(this.a)});x9.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});x9.prototype.getConstraintType=(function(){return Cp(this.a)});x9.prototype.getTwistAngle=(function(){return Tt(this.a)});x9.prototype.setMaxMotorImpulseNormalized=(function(a){Ut(this.a,a)});x9.prototype.enableFeedback=(function(a){Fu(this.a,a)});x9.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});x9.prototype.needsFeedback=(function(){return Fp(this.a)});x9.prototype.getObjectType=(function(){return Gu(this.a)});x9.prototype.getSolveTwistLimit=(function(){return Vt(this.a)});x9.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});x9.prototype.enableMotor=(function(a){Hu(this.a,a)});x9.prototype.getBFrame=(function(){return T(this.a+90,Module.btTransform)});x9.prototype.getInfo1NonVirtual=(function(a){Iu(0,a.a)});x9.prototype.serialize=(function(a,d){return Ju(this.a,a,d.a)});x9.prototype.getUid=(function(){return Ip(this.a)});x9.prototype.getDbgDrawSize=(function(){return Dp(this.a)});x9.prototype.__destroy__=(function(){Yu(this.a)});x9.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});x9.prototype.getFixThresh=(function(){return Ku(this.a)});x9.prototype.getSolveSwingLimit=(function(){return Lu(this.a)});x9.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});x9.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});x9.prototype.setAngularOnly=(function(a){Zu(this.a,a)});x9.prototype.setFrames=(function(a,d){dv(this.a,a.a,d.a)});x9.prototype.setLimit=(function(a,d,e,f,g,h){e===fa?Mu(this.a,a,d):f===fa?ev(this.a,a,d,e):g===fa?fv(this.a,a,d,e,f):h===fa?gv(this.a,a,d,e,f,g):Nu(this.a,a,d,e,f,g,h)});x9.prototype.getAppliedImpulse=(function(){return Op(this.a)});x9.prototype.getTwistLimitSign=(function(){return Ou(this.a)});x9.prototype.setMaxMotorImpulse=(function(a){Pu(this.a,a)});x9.prototype.setupSolverConstraint=(function(a,d,e,f){hv(this.a,a,d,e,f)});x9.prototype.getUserConstraintId=(function(){return Lo(this.a)});x9.prototype.updateRHS=pa();x9.prototype.getInfo2NonVirtual=(function(a,d,e,f,g){iv(this.a,a.a,d.a,e.a,f.a,g.a)});x9.prototype.setFixThresh=(function(a){Qu(this.a,a)});x9.prototype.setMotorTargetInConstraintSpace=(function(a){jv(this.a,a.a)});x9.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});x9.prototype.getUserConstraintType=(function(){return Np(this.a)});x9.prototype.solveConstraintObsolete=(function(a,d,e){kv(this.a,a.a,d.a,e)});x9.prototype.GetPointForAngle=(function(a,d){return T(lv(this.a,a,d),Module.btVector3)});x9.prototype.calcAngleInfo=(function(){pv(this.a)});x9.prototype.getTwistSpan=(function(){return Ru(this.a)});x9.prototype.getAFrame=(function(){return T(this.a+74,Module.btTransform)});y9.prototype.getRigidBodyB=(function(){return T(Su(this.a),Module.btRigidBody)});y9.prototype.getInfo2NonVirtual=(function(a,d,e,f,g){qv(this.a,a.a,d.a,e.a,f.a,g.a)});y9.prototype.getRigidBodyA=(function(){return T(Tu(this.a),Module.btRigidBody)});y9.prototype.set_m_objectType=(function(a){Uu(this.a,a)});y9.prototype.getMotorTargetVelosity=(function(){return Vu(this.a)});y9.prototype.getFrameOffsetA=(function(){return T(this.a+137,Module.btTransform)});y9.prototype.getFrameOffsetB=(function(){return T(this.a+153,Module.btTransform)});y9.prototype.buildJacobian=(function(){rv(this.a)});y9.prototype.setMaxMotorImpulse=(function(a){Wu(this.a,a)});y9.prototype.get_m_objectType=(function(){return Xu(this.a)});y9.prototype.getHingeAngle=(function(a,d){return a===fa?sv(this.a):tv(this.a,a.a,d.a)});y9.prototype.testLimit=(function(a,d){uv(this.a,a.a,d.a)});y9.prototype.getInfo1=(function(a){vv(this.a,a.a)});y9.prototype.getInfo2Internal=(function(a,d,e,f,g){wv(this.a,a.a,d.a,e.a,f.a,g.a)});y9.prototype.getInfo2=(function(a){xv(this.a,a.a)});y9.prototype.getUpperLimit=(function(){return yv(this.a)});y9.prototype.enableAngularMotor=(function(a,d,e){zv(this.a,a,d,e)});y9.prototype.getLimitSign=(function(){return Av(this.a)});function y9(a,d,e,f,g,h,i){this.a=f===fa?Bv(a.a,d.a,e.a):g===fa?Dv(a.a,d.a,e.a,f):i===fa?Ev(a.a,d.a,e.a,f.a,g.a,h.a):Rv(a.a,d.a,e.a,f.a,g.a,h.a,i);y9.prototype.b[this.a]=this;this.c=y9}y9.prototype.b={};Module.btHingeConstraint=y9;y9.prototype.isEnabled=(function(){return Ap(this.a)});y9.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});y9.prototype.solveConstraintObsolete=(function(a,d,e){Sv(this.a,a.a,d.a,e)});y9.prototype.setEnabled=(function(a){Tv(this.a,a)});y9.prototype.getConstraintType=(function(){return Cp(this.a)});y9.prototype.enableFeedback=(function(a){Uv(this.a,a)});y9.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});y9.prototype.getMaxMotorImpulse=(function(){return Gv(this.a)});y9.prototype.getLowerLimit=(function(){return Vv(this.a)});y9.prototype.setParam=(function(a,d,e){e===fa?Wv(this.a,a,d):Xv(this.a,a,d,e)});y9.prototype.setUseFrameOffset=(function(a){Yv(this.a,a)});y9.prototype.getEnableAngularMotor=(function(){return Hv(this.a)});y9.prototype.needsFeedback=(function(){return Fp(this.a)});y9.prototype.getObjectType=(function(){return Zv(this.a)});y9.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});y9.prototype.enableMotor=(function(a){$v(this.a,a)});y9.prototype.getBFrame=(function(){return T(this.a+153,Module.btTransform)});y9.prototype.getInfo1NonVirtual=(function(a){aw(this.a,a.a)});y9.prototype.getInfo2InternalUsingFrameOffset=(function(a,d,e,f,g){bw(this.a,a.a,d.a,e.a,f.a,g.a)});y9.prototype.getUid=(function(){return Ip(this.a)});y9.prototype.getDbgDrawSize=(function(){return Dp(this.a)});y9.prototype.serialize=(function(a,d){return cw(this.a,a,d.a)});y9.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});y9.prototype.getUseFrameOffset=(function(){return Iv(this.a)});y9.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});y9.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});y9.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});y9.prototype.calculateSerializeBufferSize=(function(){return dw(this.a)});y9.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});y9.prototype.setAngularOnly=(function(a){ew(this.a,a)});y9.prototype.getParam=(function(a,d){return d===fa?fw(this.a,a):gw(this.a,a,d)});y9.prototype.setLimit=(function(a,d,e,f,g){e===fa?hw(this.a,a,d):f===fa?jw(this.a,a,d,e):g===fa?kw(this.a,a,d,e,f):iw(this.a,a,d,e,f,g)});y9.prototype.getSolveLimit=(function(){return lw(this.a)});y9.prototype.__destroy__=(function(){mw(this.a)});y9.prototype.setupSolverConstraint=(function(a,d,e,f){nw(this.a,a,d,e,f)});y9.prototype.getUserConstraintId=(function(){return Lo(this.a)});y9.prototype.updateRHS=pa();y9.prototype.setMotorTarget=(function(a,d){ow(this.a,a.a,d)});y9.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});y9.prototype.getUserConstraintType=(function(){return Np(this.a)});y9.prototype.getAngularOnly=(function(){return Jv(this.a)});y9.prototype.setFrames=(function(a,d){pw(this.a,a.a,d.a)});y9.prototype.getAppliedImpulse=(function(){return Op(this.a)});y9.prototype.setAxis=(function(a){qw(this.a,a.a)});y9.prototype.getAFrame=(function(){return T(this.a+137,Module.btTransform)});z9.prototype.set_m_loLimit=(function(a){k[this.a]=a});z9.prototype.set_m_currentLimitError=(function(a){Kv(this.a,a)});z9.prototype.set_m_maxLimitForce=(function(a){Lv(this.a,a)});z9.prototype.needApplyTorques=(function(){return Mv(this.a)});z9.prototype.set_m_currentPosition=(function(a){Nv(this.a,a)});z9.prototype.solveAngularLimits=(function(a,d,e,f,g){return xw(this.a,a,d.a,e,f.a,g.a)});z9.prototype.get_m_stopERP=(function(){return Ov(this.a)});z9.prototype.set_m_stopERP=(function(a){Pv(this.a,a)});z9.prototype.set_m_stopCFM=(function(a){Qv(this.a,a)});z9.prototype.get_m_currentPosition=(function(){return yw(this.a)});z9.prototype.get_m_stopCFM=(function(){return zw(this.a)});function z9(a){this.a=a===fa?$w():bx(a.a);z9.prototype.b[this.a]=this;this.c=z9}z9.prototype.b={};Module.btRotationalLimitMotor=z9;z9.prototype.get_m_enableMotor=(function(){return Aw(this.a)});z9.prototype.set_m_enableMotor=(function(a){Bw(this.a,a)});z9.prototype.testLimitValue=(function(a){return cx(this.a,a)});z9.prototype.get_m_currentLimitError=(function(){return Cw(this.a)});z9.prototype.set_m_limitSoftness=(function(a){Dw(this.a,a)});z9.prototype.get_m_loLimit=(function(){return k[this.a]});z9.prototype.get_m_currentLimit=(function(){return Ew(this.a)});z9.prototype.set_m_hiLimit=(function(a){Fw(this.a,a)});z9.prototype.get_m_bounce=(function(){return Gw(this.a)});z9.prototype.get_m_targetVelocity=(function(){return Hw(this.a)});z9.prototype.get_m_accumulatedImpulse=(function(){return Iw(this.a)});z9.prototype.set_m_damping=(function(a){Jw(this.a,a)});z9.prototype.set_m_maxMotorForce=(function(a){Kw(this.a,a)});z9.prototype.set_m_normalCFM=(function(a){Lw(this.a,a)});z9.prototype.__destroy__=(function(){dx(this.a)});z9.prototype.get_m_maxLimitForce=(function(){return Mw(this.a)});z9.prototype.get_m_damping=(function(){return Nw(this.a)});z9.prototype.get_m_normalCFM=(function(){return Ow(this.a)});z9.prototype.get_m_hiLimit=(function(){return Pw(this.a)});z9.prototype.set_m_accumulatedImpulse=(function(a){Qw(this.a,a)});z9.prototype.set_m_targetVelocity=(function(a){Rw(this.a,a)});z9.prototype.isLimited=(function(){return Sw(this.a)});z9.prototype.get_m_maxMotorForce=(function(){return Tw(this.a)});z9.prototype.set_m_currentLimit=(function(a){Uw(this.a,a)});z9.prototype.set_m_bounce=(function(a){Vw(this.a,a)});z9.prototype.get_m_limitSoftness=(function(){return Ww(this.a)});function Cub(){aa("btVehicleRaycaster is abstract!")}Cub.prototype.b={};Module.btVehicleRaycaster=Cub;Cub.prototype.castRay=(function(a,d,e){return ex(this.a,a.a,d.a,e.a)});A9.prototype.calculateLocalInertia=(function(a,d){fx(this.a,a,d.a)});A9.prototype.isCompound=(function(){return Ge(this.a)});A9.prototype.localGetSupportingVertex=(function(a){return T(gx(this.a,a.a),Module.btVector3)});A9.prototype.setUserPointer=(function(a){Je(this.a,a)});A9.prototype.getMarginNV=(function(){return Le(this.a)});A9.prototype.serialize=(function(a,d){return jx(this.a,a,d.a)});A9.prototype.getLocalScaling=(function(){return T(kx(this.a),Module.btVector3)});A9.prototype.getNumPreferredPenetrationDirections=(function(){return lx(this.a)});A9.prototype.isPolyhedral=(function(){return Ye(this.a)});A9.prototype.getRadius=(function(){return Xw(this.a)});A9.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});A9.prototype.calculateSerializeBufferSize=(function(){return mx(this.a)});function A9(a,d){this.a=nx(a,d);A9.prototype.b[this.a]=this;this.c=A9}A9.prototype.b={};Module.btConeShapeZ=A9;A9.prototype.getName=(function(){return px(this.a)});A9.prototype.getHeight=(function(){return Yw(this.a)});A9.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});A9.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(qx(this.a,a.a),Module.btVector3)});A9.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(tx(this.a,a.a),Module.btVector3)});A9.prototype.setConeUpIndex=(function(a){wx(this.a,a)});A9.prototype.setLocalScaling=(function(a){xx(this.a,a.a)});A9.prototype.getAabb=(function(a,d,e){yx(this.a,a.a,d.a,e.a)});A9.prototype.localGetSupportVertexNonVirtual=(function(a){return T(zx(this.a,a.a),Module.btVector3)});A9.prototype.getContactBreakingThreshold=(function(a){return Cx(this.a,a)});A9.prototype.isConvex=(function(){return xf(this.a)});A9.prototype.isInfinite=(function(){return zf(this.a)});A9.prototype.getUserPointer=(function(){return Me(this.a)});A9.prototype.isNonMoving=(function(){return Bf(this.a)});A9.prototype.getMargin=(function(){return Dx(this.a)});A9.prototype.getPreferredPenetrationDirection=(function(a,d){Ex(this.a,a,d.a)});A9.prototype.setMargin=(function(a){Fx(this.a,a)});A9.prototype.isConvex2d=(function(){return Gf(this.a)});A9.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});A9.prototype.isSoftBody=(function(){return Kf(this.a)});A9.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});A9.prototype.__destroy__=(function(){Gx(this.a)});A9.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){Hx(this.a,a.a,d.a,e)});A9.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});A9.prototype.getBoundingSphere=(function(a,d){Ix(this.a,a.a,d)});A9.prototype.getAngularMotionDisc=(function(){return Jx(this.a)});A9.prototype.getConeUpIndex=(function(){return Zw(this.a)});A9.prototype.serializeSingleShape=(function(a){Kx(this.a,a.a)});A9.prototype.getAabbSlow=(function(a,d,e){Lx(this.a,a.a,d.a,e.a)});A9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});A9.prototype.isConcave=(function(){return Uf(this.a)});A9.prototype.getShapeType=(function(){return Ie(this.a)});B9.prototype.calculateLocalInertia=(function(a,d){Ox(this.a,a,d.a)});B9.prototype.isCompound=(function(){return Ge(this.a)});B9.prototype.localGetSupportingVertex=(function(a){return T(Px(this.a,a.a),Module.btVector3)});B9.prototype.setUserPointer=(function(a){Je(this.a,a)});B9.prototype.getMarginNV=(function(){return Le(this.a)});B9.prototype.serialize=(function(a,d){return Sx(this.a,a,d.a)});B9.prototype.getLocalScaling=(function(){return T(Tx(this.a),Module.btVector3)});B9.prototype.getNumPreferredPenetrationDirections=(function(){return Ux(this.a)});B9.prototype.isPolyhedral=(function(){return Ye(this.a)});B9.prototype.getRadius=(function(){return Xw(this.a)});B9.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});B9.prototype.calculateSerializeBufferSize=(function(){return Vx(this.a)});function B9(a,d){this.a=Wx(a,d);B9.prototype.b[this.a]=this;this.c=B9}B9.prototype.b={};Module.btConeShapeX=B9;B9.prototype.getHeight=(function(){return Yw(this.a)});B9.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});B9.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(Yx(this.a,a.a),Module.btVector3)});B9.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(ay(this.a,a.a),Module.btVector3)});B9.prototype.setConeUpIndex=(function(a){wx(this.a,a)});B9.prototype.setLocalScaling=(function(a){dy(this.a,a.a)});B9.prototype.getAabb=(function(a,d,e){ey(this.a,a.a,d.a,e.a)});B9.prototype.localGetSupportVertexNonVirtual=(function(a){return T(fy(this.a,a.a),Module.btVector3)});B9.prototype.getContactBreakingThreshold=(function(a){return iy(this.a,a)});B9.prototype.isConvex=(function(){return xf(this.a)});B9.prototype.isInfinite=(function(){return zf(this.a)});B9.prototype.isConcave=(function(){return Uf(this.a)});B9.prototype.getUserPointer=(function(){return Me(this.a)});B9.prototype.isNonMoving=(function(){return Bf(this.a)});B9.prototype.getMargin=(function(){return jy(this.a)});B9.prototype.getPreferredPenetrationDirection=(function(a,d){ky(this.a,a,d.a)});B9.prototype.setMargin=(function(a){ly(this.a,a)});B9.prototype.isConvex2d=(function(){return Gf(this.a)});B9.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});B9.prototype.isSoftBody=(function(){return Kf(this.a)});B9.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});B9.prototype.__destroy__=(function(){my(this.a)});B9.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){ny(this.a,a.a,d.a,e)});B9.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});B9.prototype.getBoundingSphere=(function(a,d){oy(this.a,a.a,d)});B9.prototype.getAngularMotionDisc=(function(){return py(this.a)});B9.prototype.getConeUpIndex=(function(){return Zw(this.a)});B9.prototype.serializeSingleShape=(function(a){qy(this.a,a.a)});B9.prototype.getAabbSlow=(function(a,d,e){ry(this.a,a.a,d.a,e.a)});B9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});B9.prototype.getName=(function(){return sy(this.a)});B9.prototype.getShapeType=(function(){return Ie(this.a)});C9.prototype.get_m_weldingThreshold=(function(){return Mx(this.a)});C9.prototype.addIndex=(function(a){ty(this.a,a)});C9.prototype.preallocateVertices=(function(a){uy(this.a,a)});C9.prototype.calculateAabbBruteForce=(function(a,d){vy(this.a,a.a,d.a)});C9.prototype.findOrAddVertex=(function(a,d){return wy(this.a,a.a,d)});C9.prototype.addIndexedMesh=(function(a,d){d===fa?yy(this.a,a.a):zy(this.a,a.a,d)});C9.prototype.getPremadeAabb=(function(a,d){Dy(this.a,a.a,d.a)});C9.prototype.getUse4componentVertices=(function(){return Nx(this.a)});C9.prototype.calculateSerializeBufferSize=(function(){return Ey(this.a)});function C9(a,d){this.a=a===fa?Jy():d===fa?Ly(a):My(a,d);C9.prototype.b[this.a]=this;this.c=C9}C9.prototype.b={};Module.btTriangleMesh=C9;C9.prototype.getScaling=(function(){return T(this.a+1,Module.btVector3)});C9.prototype.setPremadeAabb=(function(a,d){Gy(this.a,a.a,d.a)});C9.prototype.InternalProcessAllTriangles=(function(a,d,e){Hy(this.a,a.a,d.a,e.a)});C9.prototype.setScaling=(function(a){Iy(this.a,a.a)});C9.prototype.unLockReadOnlyVertexBase=(function(a){hz(this.a,a)});C9.prototype.set_m_weldingThreshold=(function(a){Ny(this.a,a)});C9.prototype.getLockedReadOnlyVertexIndexBase=(function(a,d,e,f,g,h,i,j,l){l===fa?iz(this.a,a,d,e,f,g,h,i,j):jz(this.a,a,d,e,f,g,h,i,j,l)});C9.prototype.preallocateIndices=(function(a){kz(this.a,a)});C9.prototype.serialize=(function(a,d){return lz(this.a,a,d.a)});C9.prototype.getUse32bitIndices=(function(){return Oy(this.a)});C9.prototype.unLockVertexBase=(function(a){mz(this.a,a)});C9.prototype.__destroy__=(function(){nz(this.a)});C9.prototype.getNumTriangles=(function(){return oz(this.a)});C9.prototype.getIndexedMeshArray=(function(){return this.a+5});C9.prototype.getNumSubParts=(function(){return pz(this.a)});C9.prototype.getLockedVertexIndexBase=(function(a,d,e,f,g,h,i,j,l){l===fa?qz(this.a,a,d,e,f,g,h,i,j):rz(this.a,a,d,e,f,g,h,i,j,l)});C9.prototype.hasPremadeAabb=(function(){return sz(this.a)});C9.prototype.addTriangle=(function(a,d,e,f){f===fa?tz(this.a,a.a,d.a,e.a):vz(this.a,a.a,d.a,e.a,f)});function Dub(){aa("btBroadphaseAabbCallback is abstract!")}Dub.prototype.b={};Module.btBroadphaseAabbCallback=Dub;Dub.prototype.process=(function(a){return wz(this.a,a.a)});D9.prototype.__destroy__=(function(){xz(this.a)});D9.prototype.set_m_internalTmpValue=(function(a){Py(this.a,a)});D9.prototype.get_m_pProxy0=(function(){return T(c[this.a],Module.btBroadphaseProxy)});D9.prototype.get_m_pProxy1=(function(){return T(Qy(this.a),Module.btBroadphaseProxy)});D9.prototype.set_m_pProxy0=(function(a){c[this.a]=a.a});D9.prototype.set_m_pProxy1=(function(a){Ry(this.a,a.a)});function D9(a,d){this.a=a===fa?yz():d===fa?Bz(a.a):Dz(a.a,d.a);D9.prototype.b[this.a]=this;this.c=D9}D9.prototype.b={};Module.btBroadphasePair=D9;D9.prototype.get_m_internalTmpValue=(function(){return Sy(this.a)});D9.prototype.get_m_internalInfo1=(function(){return Ty(this.a)});D9.prototype.get_m_algorithm=(function(){return T(Uy(this.a),Module.btCollisionAlgorithm)});D9.prototype.set_m_internalInfo1=(function(a){Vy(this.a,a)});D9.prototype.set_m_algorithm=(function(a){Wy(this.a,a.a)});function E9(){aa("btBroadphaseRayCallback is abstract!")}E9.prototype.b={};Module.btBroadphaseRayCallback=E9;E9.prototype.process=(function(a){return Fz(this.a,a.a)});E9.prototype.get_m_rayDirectionInverse=(function(){return T(this.a+1,Module.btVector3)});E9.prototype.set_m_rayDirectionInverse=(function(a){Gz(this.a,a.a)});E9.prototype.set_m_lambda_max=(function(a){Xy(this.a,a)});E9.prototype.get_m_lambda_max=(function(){return Yy(this.a)});function F9(){aa("ConvexResultCallback is abstract!")}F9.prototype.b={};Module.ConvexResultCallback=F9;F9.prototype.get_m_closestHitFraction=(function(){return Zy(this.a)});F9.prototype.set_m_collisionFilterGroup=(function(a){$y(this.a,a)});F9.prototype.needsCollision=(function(a){return Hz(this.a,a.a)});F9.prototype.set_m_closestHitFraction=(function(a){az(this.a,a)});F9.prototype.set_m_collisionFilterMask=(function(a){bz(this.a,a)});F9.prototype.hasHit=(function(){return cz(this.a)});F9.prototype.get_m_collisionFilterMask=(function(){return dz(this.a)});F9.prototype.get_m_collisionFilterGroup=(function(){return ez(this.a)});F9.prototype.addSingleResult=(function(a,d){return Iz(this.a,a.a,d)});G9.prototype.__destroy__=(function(){Jz(this.a)});G9.prototype.get_m_startWorldTrans=(function(){return T(this.a+33,Module.btTransform)});G9.prototype.get_m_userPointer=(function(){return fz(this.a)});G9.prototype.getWorldTransform=(function(a){Kz(this.a,a.a)});G9.prototype.set_m_startWorldTrans=(function(a){Lz(this.a,a.a)});G9.prototype.setWorldTransform=(function(a){Mz(this.a,a.a)});G9.prototype.get_m_graphicsWorldTrans=(function(){return T(this.a+1,Module.btTransform)});G9.prototype.set_m_userPointer=(function(a){gz(this.a,a)});G9.prototype.set_m_graphicsWorldTrans=(function(a){Nz(this.a,a.a)});function G9(a,d){this.a=a===fa?Oz():d===fa?Uz(a.a):Vz(a.a,d.a);G9.prototype.b[this.a]=this;this.c=G9}G9.prototype.b={};Module.btDefaultMotionState=G9;G9.prototype.get_m_centerOfMassOffset=(function(){return T(this.a+17,Module.btTransform)});G9.prototype.set_m_centerOfMassOffset=(function(a){Wz(this.a,a.a)});H9.prototype.calculateLocalInertia=(function(a,d){Xz(this.a,a,d.a)});H9.prototype.isCompound=(function(){return Ge(this.a)});H9.prototype.localGetSupportingVertex=(function(a){return T(Yz(this.a,a.a),Module.btVector3)});H9.prototype.setUserPointer=(function(a){Je(this.a,a)});H9.prototype.getMarginNV=(function(){return Le(this.a)});H9.prototype.serialize=(function(a,d){return aA(this.a,a,d.a)});H9.prototype.getLocalScaling=(function(){return T(MA(this.a),Module.btVector3)});H9.prototype.getNumPreferredPenetrationDirections=(function(){return NA(this.a)});H9.prototype.isPolyhedral=(function(){return Ye(this.a)});H9.prototype.getRadius=(function(){return Xw(this.a)});function H9(a,d){this.a=OA(a,d);H9.prototype.b[this.a]=this;this.c=H9}H9.prototype.b={};Module.btConeShape=H9;H9.prototype.calculateSerializeBufferSize=(function(){return QA(this.a)});H9.prototype.getName=(function(){return RA(this.a)});H9.prototype.getHeight=(function(){return Yw(this.a)});H9.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});H9.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(SA(this.a,a.a),Module.btVector3)});H9.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(VA(this.a,a.a),Module.btVector3)});H9.prototype.setConeUpIndex=(function(a){wx(this.a,a)});H9.prototype.setLocalScaling=(function(a){YA(this.a,a.a)});H9.prototype.getAabb=(function(a,d,e){ZA(this.a,a.a,d.a,e.a)});H9.prototype.localGetSupportVertexNonVirtual=(function(a){return T($A(this.a,a.a),Module.btVector3)});H9.prototype.getContactBreakingThreshold=(function(a){return cB(this.a,a)});H9.prototype.isConvex=(function(){return xf(this.a)});H9.prototype.isInfinite=(function(){return zf(this.a)});H9.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});H9.prototype.getUserPointer=(function(){return Me(this.a)});H9.prototype.isNonMoving=(function(){return Bf(this.a)});H9.prototype.getMargin=(function(){return dB(this.a)});H9.prototype.getPreferredPenetrationDirection=(function(a,d){eB(this.a,a,d.a)});H9.prototype.setMargin=(function(a){fB(this.a,a)});H9.prototype.isConvex2d=(function(){return Gf(this.a)});H9.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});H9.prototype.isSoftBody=(function(){return Kf(this.a)});H9.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});H9.prototype.__destroy__=(function(){gB(this.a)});H9.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){hB(this.a,a.a,d.a,e)});H9.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});H9.prototype.getBoundingSphere=(function(a,d){iB(this.a,a.a,d)});H9.prototype.getAngularMotionDisc=(function(){return jB(this.a)});H9.prototype.getConeUpIndex=(function(){return Zw(this.a)});H9.prototype.serializeSingleShape=(function(a){kB(this.a,a.a)});H9.prototype.getAabbSlow=(function(a,d,e){lB(this.a,a.a,d.a,e.a)});H9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});H9.prototype.isConcave=(function(){return Uf(this.a)});H9.prototype.getShapeType=(function(){return Ie(this.a)});I9.prototype.set_m_chassisConnectionPointCS=(function(a){mB(this.a,a.a)});I9.prototype.set_m_maxSuspensionTravelCm=(function(a){bA(this.a,a)});I9.prototype.get_m_wheelsRadius=(function(){return cA(this.a)});I9.prototype.get_m_suspensionRestLength1=(function(){return dA(this.a)});I9.prototype.set_m_suspensionStiffness=(function(a){eA(this.a,a)});I9.prototype.set_m_wheelsRadius=(function(a){fA(this.a,a)});I9.prototype.get_m_maxSuspensionForce=(function(){return gA(this.a)});I9.prototype.updateWheel=(function(a,d){nB(this.a,a.a,d.a)});I9.prototype.get_m_wheelsDampingCompression=(function(){return hA(this.a)});I9.prototype.get_m_clippedInvContactDotSuspension=(function(){return iA(this.a)});I9.prototype.get_m_worldTransform=(function(){return T(this.a+23,Module.btTransform)});I9.prototype.get_m_frictionSlip=(function(){return jA(this.a)});I9.prototype.get_m_bIsFrontWheel=(function(){return kA(this.a)});I9.prototype.set_m_engineForce=(function(a){lA(this.a,a)});I9.prototype.get_m_engineForce=(function(){return mA(this.a)});I9.prototype.get_m_steering=(function(){return nA(this.a)});I9.prototype.get_m_rollInfluence=(function(){return oA(this.a)});I9.prototype.get_m_suspensionRelativeVelocity=(function(){return pA(this.a)});I9.prototype.set_m_clientInfo=(function(a){qA(this.a,a)});I9.prototype.set_m_brake=(function(a){rA(this.a,a)});I9.prototype.set_m_suspensionRelativeVelocity=(function(a){sA(this.a,a)});I9.prototype.set_m_bIsFrontWheel=(function(a){tA(this.a,a)});I9.prototype.set_m_wheelDirectionCS=(function(a){oB(this.a,a.a)});I9.prototype.set_m_wheelsDampingCompression=(function(a){uA(this.a,a)});I9.prototype.set_m_deltaRotation=(function(a){vA(this.a,a)});I9.prototype.get_m_clientInfo=(function(){return wA(this.a)});I9.prototype.set_m_frictionSlip=(function(a){xA(this.a,a)});I9.prototype.get_m_skidInfo=(function(){return yA(this.a)});I9.prototype.getSuspensionRestLength=(function(){return pB(this.a)});I9.prototype.get_m_wheelsDampingRelaxation=(function(){return zA(this.a)});I9.prototype.get_m_maxSuspensionTravelCm=(function(){return AA(this.a)});I9.prototype.set_m_steering=(function(a){BA(this.a,a)});I9.prototype.set_m_wheelAxleCS=(function(a){qB(this.a,a.a)});function I9(a){this.a=rB(a.a);I9.prototype.b[this.a]=this;this.c=I9}I9.prototype.b={};Module.btWheelInfo=I9;I9.prototype.get_m_chassisConnectionPointCS=(function(){return T(this.a+39,Module.btVector3)});I9.prototype.get_m_brake=(function(){return CA(this.a)});I9.prototype.set_m_skidInfo=(function(a){DA(this.a,a)});I9.prototype.get_m_wheelsSuspensionForce=(function(){return EA(this.a)});I9.prototype.set_m_suspensionRestLength1=(function(a){FA(this.a,a)});I9.prototype.set_m_rollInfluence=(function(a){GA(this.a,a)});I9.prototype.__destroy__=(function(){tB(this.a)});I9.prototype.get_m_rotation=(function(){return HA(this.a)});I9.prototype.set_m_wheelsDampingRelaxation=(function(a){IA(this.a,a)});I9.prototype.get_m_wheelDirectionCS=(function(){return T(this.a+43,Module.btVector3)});I9.prototype.get_m_suspensionStiffness=(function(){return JA(this.a)});I9.prototype.set_m_clippedInvContactDotSuspension=(function(a){KA(this.a,a)});I9.prototype.set_m_rotation=(function(a){LA(this.a,a)});I9.prototype.get_m_wheelAxleCS=(function(){return T(this.a+47,Module.btVector3)});I9.prototype.set_m_wheelsSuspensionForce=(function(a){uB(this.a,a)});I9.prototype.set_m_maxSuspensionForce=(function(a){vB(this.a,a)});I9.prototype.set_m_worldTransform=(function(a){AB(this.a,a.a)});I9.prototype.get_m_deltaRotation=(function(){return wB(this.a)});J9.prototype.setMin=(function(a){hp(this.a,a.a)});J9.prototype.getSkewSymmetricMatrix=(function(a,d,e){CB(this.a,a.a,d.a,e.a)});J9.prototype.serialize=(function(a){Mb(this.a,a.a)});J9.prototype.deSerializeDouble=(function(a){Ob(this.a,a.a)});J9.prototype.getX=(function(){return k[this.a]});J9.prototype.minAxis4=(function(){return xB(this.a)});J9.prototype.getZ=(function(){return DB(this.a)});J9.prototype.setInterpolate3=(function(a,d,e){yB(this.a,a.a,d.a,e)});J9.prototype.triple=(function(a,d){return ne(this.a,a.a,d.a)});J9.prototype.absolute=(function(){return T(EB(this.a),Module.btVector3)});J9.prototype.normalize=(function(){return T(IB(this.a),Module.btVector3)});J9.prototype.angle=(function(a){return LB(this.a,a.a)});J9.prototype.deSerializeFloat=(function(a){Tc(this.a,a.a)});J9.prototype.lerp=(function(a,d){return T(NB(this.a,a.a,d),Module.btVector3)});J9.prototype.setMax=(function(a){gp(this.a,a.a)});J9.prototype.cross=(function(a){return T(SB(this.a,a.a),Module.btVector3)});J9.prototype.serializeDouble=(function(a){zB(this.a,a.a)});J9.prototype.absolute4=(function(){return T(VB(this.a),Module.btVector4)});J9.prototype.getW=(function(){return ZB(this.a)});J9.prototype.distance2=(function(a){return kC(this.a,a.a)});J9.prototype.closestAxis=(function(){return lC(this.a)});J9.prototype.setValue=(function(a,d,e,f){mC(this.a,a,d,e,f)});J9.prototype.fuzzyZero=(function(){return nC(this.a)});J9.prototype.deSerialize=(function(a){re(this.a,a.a)});J9.prototype.distance=(function(a){return oC(this.a,a.a)});J9.prototype.minAxis=(function(){return aC(this.a)});function J9(a,d,e,f){this.a=a===fa?pC():qC(a,d,e,f);J9.prototype.b[this.a]=this;this.c=J9}J9.prototype.b={};Module.btVector4=J9;J9.prototype.isZero=(function(){return bC(this.a)});J9.prototype.safeNormalize=(function(){return T(rC(this.a),Module.btVector3)});J9.prototype.normalized=(function(){return T(sC(this.a),Module.btVector3)});J9.prototype.serializeFloat=(function(a){mc(this.a,a.a)});J9.prototype.setX=(function(a){k[this.a]=a});J9.prototype.setY=(function(a){cC(this.a,a)});J9.prototype.setZ=(function(a){dC(this.a,a)});J9.prototype.maxAxis4=(function(){return eC(this.a)});J9.prototype.__destroy__=(function(){xC(this.a)});J9.prototype.rotate=(function(a,d){return T(yC(this.a,a.a,d),Module.btVector3)});J9.prototype.maxAxis=(function(){return fC(this.a)});J9.prototype.closestAxis4=(function(){return CC(this.a)});J9.prototype.getY=(function(){return DC(this.a)});J9.prototype.length2=(function(){return Um(this.a)});J9.prototype.setZero=(function(){EC(this.a)});J9.prototype.length=(function(){return JB(this.a)});J9.prototype.setW=(function(a){gC(this.a,a)});J9.prototype.furthestAxis=(function(){return FC(this.a)});J9.prototype.w=(function(){return GC(this.a)});J9.prototype.y=(function(){return HC(this.a)});J9.prototype.x=(function(){return k[this.a]});J9.prototype.z=(function(){return IC(this.a)});J9.prototype.dot=(function(a){return J(this.a,a.a)});function K9(){aa("btActionInterface is abstract!")}K9.prototype.b={};Module.btActionInterface=K9;K9.prototype.updateAction=(function(a,d){MC(this.a,a.a,d)});K9.prototype.debugDraw=(function(a){NC(this.a,a)});L9.prototype.setMin=(function(a){hp(this.a,a.a)});L9.prototype.getSkewSymmetricMatrix=(function(a,d,e){CB(this.a,a.a,d.a,e.a)});L9.prototype.serialize=(function(a){Mb(this.a,a.a)});L9.prototype.deSerializeDouble=(function(a){Ob(this.a,a.a)});L9.prototype.getX=(function(){return k[this.a]});L9.prototype.getY=(function(){return OC(this.a)});L9.prototype.getZ=(function(){return PC(this.a)});L9.prototype.setInterpolate3=(function(a,d,e){yB(this.a,a.a,d.a,e)});L9.prototype.triple=(function(a,d){return ne(this.a,a.a,d.a)});L9.prototype.op_sub=(function(a){return T(JC(this.a,a.a),Module.btVector3)});L9.prototype.absolute=(function(){return T(QC(this.a),Module.btVector3)});L9.prototype.normalize=(function(){return T(IB(this.a),Module.btVector3)});L9.prototype.angle=(function(a){return LB(this.a,a.a)});L9.prototype.lerp=(function(a,d){return T(TC(this.a,a.a,d),Module.btVector3)});L9.prototype.setMax=(function(a){gp(this.a,a.a)});L9.prototype.cross=(function(a){return T(WC(this.a,a.a),Module.btVector3)});L9.prototype.op_add=(function(a){return T(xn(this.a,a.a),Module.btVector3)});L9.prototype.op_comp=(function(a){return KC(this.a,a.a)});L9.prototype.__destroy__=(function(){ZC(this.a)});L9.prototype.op_mul=(function(a){return T($C(this.a,a),Module.btVector3)});L9.prototype.serializeDouble=(function(a){zB(this.a,a.a)});L9.prototype.isZero=(function(){return bC(this.a)});L9.prototype.op_set=(function(a){return aD(this.a,a.a)});L9.prototype.distance2=(function(a){return kC(this.a,a.a)});L9.prototype.closestAxis=(function(){return lC(this.a)});L9.prototype.setValue=(function(a,d,e){bD(this.a,a,d,e)});L9.prototype.fuzzyZero=(function(){return nC(this.a)});L9.prototype.deSerialize=(function(a){re(this.a,a.a)});L9.prototype.op_div=(function(a){return T(cD(this.a,a),Module.btVector3)});L9.prototype.minAxis=(function(){return aC(this.a)});L9.prototype.safeNormalize=(function(){return T(rC(this.a),Module.btVector3)});L9.prototype.normalized=(function(){return T(dD(this.a),Module.btVector3)});function L9(a,d,e){this.a=a===fa?gD():hD(a,d,e);L9.prototype.b[this.a]=this;this.c=L9}L9.prototype.b={};Module.btVector3=L9;L9.prototype.serializeFloat=(function(a){mc(this.a,a.a)});L9.prototype.setX=(function(a){k[this.a]=a});L9.prototype.setY=(function(a){cC(this.a,a)});L9.prototype.setZ=(function(a){dC(this.a,a)});L9.prototype.distance=(function(a){return oC(this.a,a.a)});L9.prototype.rotate=(function(a,d){return T(iD(this.a,a.a,d),Module.btVector3)});L9.prototype.maxAxis=(function(){return fC(this.a)});L9.prototype.deSerializeFloat=(function(a){Tc(this.a,a.a)});L9.prototype.length2=(function(){return Um(this.a)});L9.prototype.setZero=(function(){EC(this.a)});L9.prototype.length=(function(){return JB(this.a)});L9.prototype.setW=(function(a){gC(this.a,a)});L9.prototype.dot=(function(a){return J(this.a,a.a)});L9.prototype.w=(function(){return lD(this.a)});L9.prototype.y=(function(){return mD(this.a)});L9.prototype.x=(function(){return k[this.a]});L9.prototype.z=(function(){return nD(this.a)});L9.prototype.furthestAxis=(function(){return FC(this.a)});function M9(){aa("btSerializer is abstract!")}M9.prototype.b={};Module.btSerializer=M9;M9.prototype.setSerializationFlags=(function(a){oD(this.a,a)});M9.prototype.findNameForPointer=(function(a){return pD(this.a,a)});M9.prototype.startSerialization=(function(){qD(this.a)});M9.prototype.getSerializationFlags=(function(){return rD(this.a)});M9.prototype.finishSerialization=(function(){sD(this.a)});M9.prototype.getUniquePointer=(function(a){return tD(this.a,a)});M9.prototype.getBufferPointer=(function(){return uD(this.a)});M9.prototype.getCurrentBufferSize=(function(){return vD(this.a)});M9.prototype.finalizeChunk=(function(a,d,e,f){var g=b;try{wD(this.a,a.a,T8(d),e,f)}finally{b=g}});M9.prototype.serializeName=(function(a){var d=b;try{xD(this.a,T8(a))}finally{b=d}});M9.prototype.findPointer=(function(a){return YD(this.a,a)});M9.prototype.registerNameForPointer=(function(a,d){var e=b;try{ZD(this.a,a,T8(d))}finally{b=e}});M9.prototype.allocate=(function(a,d){return T($D(this.a,a,d),Module.btChunk)});N9.prototype.set_m_edgeV2V0Angle=(function(a){yD(this.a,a)});N9.prototype.__destroy__=(function(){aE(this.a)});N9.prototype.get_m_edgeV1V2Angle=(function(){return zD(this.a)});N9.prototype.get_m_edgeV0V1Angle=(function(){return AD(this.a)});N9.prototype.set_m_flags=(function(a){c[this.a]=a});N9.prototype.set_m_edgeV0V1Angle=(function(a){BD(this.a,a)});N9.prototype.get_m_edgeV2V0Angle=(function(){return CD(this.a)});N9.prototype.set_m_edgeV1V2Angle=(function(a){DD(this.a,a)});N9.prototype.get_m_flags=(function(){return c[this.a]});function N9(){this.a=bE();N9.prototype.b[this.a]=this;this.c=N9}N9.prototype.b={};Module.btTriangleInfo=N9;O9.prototype.addSingleResult=(function(a,d){return dE(this.a,a.a,d)});O9.prototype.set_m_collisionFilterGroup=(function(a){ED(this.a,a)});O9.prototype.get_m_rayToWorld=(function(){return T(this.a+10,Module.btVector3)});O9.prototype.get_m_hitPointWorld=(function(){return T(this.a+18,Module.btVector3)});O9.prototype.set_m_collisionObject=(function(a){FD(this.a,a.a)});O9.prototype.get_m_collisionObject=(function(){return T(GD(this.a),Module.btCollisionObject)});O9.prototype.set_m_flags=(function(a){HD(this.a,a)});O9.prototype.set_m_rayToWorld=(function(a){eE(this.a,a.a)});O9.prototype.get_m_rayFromWorld=(function(){return T(this.a+6,Module.btVector3)});O9.prototype.needsCollision=(function(a){return fE(this.a,a.a)});O9.prototype.get_m_collisionFilterMask=(function(){return ID(this.a)});O9.prototype.get_m_closestHitFraction=(function(){return JD(this.a)});O9.prototype.set_m_hitNormalWorld=(function(a){gE(this.a,a.a)});O9.prototype.set_m_hitPointWorld=(function(a){hE(this.a,a.a)});O9.prototype.__destroy__=(function(){iE(this.a)});O9.prototype.get_m_flags=(function(){return KD(this.a)});O9.prototype.set_m_closestHitFraction=(function(a){LD(this.a,a)});O9.prototype.set_m_collisionFilterMask=(function(a){MD(this.a,a)});O9.prototype.hasHit=(function(){return ND(this.a)});O9.prototype.get_m_hitNormalWorld=(function(){return T(this.a+14,Module.btVector3)});function O9(a,d){this.a=jE(a.a,d.a);O9.prototype.b[this.a]=this;this.c=O9}O9.prototype.b={};Module.ClosestRayResultCallback=O9;O9.prototype.get_m_collisionFilterGroup=(function(){return OD(this.a)});O9.prototype.set_m_rayFromWorld=(function(a){lE(this.a,a.a)});P9.prototype.__destroy__=(function(){mE(this.a)});P9.prototype.set_m_localShapeInfo=(function(a){PD(this.a,a.a)});P9.prototype.get_m_hitNormalLocal=(function(){return T(this.a+2,Module.btVector3)});P9.prototype.set_m_hitNormalLocal=(function(a){nE(this.a,a.a)});P9.prototype.set_m_hitFraction=(function(a){QD(this.a,a)});P9.prototype.get_m_hitFraction=(function(){return RD(this.a)});function P9(a,d,e,f){this.a=oE(a.a,d.a,e.a,f);P9.prototype.b[this.a]=this;this.c=P9}P9.prototype.b={};Module.LocalRayResult=P9;P9.prototype.get_m_localShapeInfo=(function(){return T(SD(this.a),Module.LocalShapeInfo)});P9.prototype.set_m_collisionObject=(function(a){c[this.a]=a.a});P9.prototype.get_m_collisionObject=(function(){return T(c[this.a],Module.btCollisionObject)});function Q9(){aa("btConstraintSolver is abstract!")}Q9.prototype.b={};Module.btConstraintSolver=Q9;Q9.prototype.reset=(function(){qE(this.a)});Q9.prototype.allSolved=(function(a,d,e){rE(this.a,a.a,d,e.a)});Q9.prototype.solveGroup=(function(a,d,e,f,g,h,i,j,l,m){return sE(this.a,a.a,d,e.a,f,g.a,h,i.a,j,l.a,m.a)});Q9.prototype.prepareSolve=(function(a,d){tE(this.a,a,d)});R9.prototype.updateSuspension=(function(a){uE(this.a,a)});R9.prototype.getRigidBody=(function(){return T(TD(this.a),Module.btRigidBody)});R9.prototype.getUserConstraintId=(function(){return UD(this.a)});R9.prototype.getWheelTransformWS=(function(a){return T(vE(this.a,a),Module.btTransform)});R9.prototype.addWheel=(function(a,d,e,f,g,h,i){return T(wE(this.a,a.a,d.a,e.a,f,g,h.a,i),Module.btWheelInfo)});R9.prototype.updateWheelTransform=(function(a,d){d===fa?xE(this.a,a):zE(this.a,a,d)});R9.prototype.setUserConstraintId=(function(a){VD(this.a,a)});R9.prototype.getNumWheels=(function(){return AE(this.a)});R9.prototype.rayCast=(function(a){return CE(this.a,a.a)});R9.prototype.getRightAxis=(function(){return WD(this.a)});R9.prototype.applyEngineForce=(function(a,d){DE(this.a,a,d)});R9.prototype.getForwardVector=(function(){return T(EE(this.a),Module.btVector3)});R9.prototype.getWheelInfo=(function(a){return T(IE(this.a,a),Module.btWheelInfo)});R9.prototype.getChassisWorldTransform=(function(){return T(HE(this.a),Module.btTransform)});R9.prototype.updateWheelTransformsWS=(function(a,d){d===fa?JE(this.a,a.a):LE(this.a,a.a,d)});R9.prototype.resetSuspension=(function(){ME(this.a)});R9.prototype.setCoordinateSystem=(function(a,d,e){NE(this.a,a,d,e)});R9.prototype.setUserConstraintType=(function(a){XD(this.a,a)});R9.prototype.debugDraw=(function(a){OE(this.a,a)});R9.prototype.__destroy__=(function(){eF(this.a)});R9.prototype.updateFriction=(function(a){fF(this.a,a)});function R9(a,d,e){this.a=gF(0,d.a,e.a);R9.prototype.b[this.a]=this;this.c=R9}R9.prototype.b={};Module.btRaycastVehicle=R9;R9.prototype.getForwardAxis=(function(){return PE(this.a)});R9.prototype.getSteeringValue=(function(a){return iF(this.a,a)});R9.prototype.getUserConstraintType=(function(){return QE(this.a)});R9.prototype.getUpAxis=(function(){return RE(this.a)});R9.prototype.setPitchControl=(function(a){SE(this.a,a)});R9.prototype.getCurrentSpeedKmHour=(function(){return TE(this.a)});R9.prototype.setBrake=(function(a,d){jF(this.a,a,d)});R9.prototype.setSteeringValue=(function(a,d){kF(this.a,a,d)});R9.prototype.updateVehicle=(function(a){lF(this.a,a)});R9.prototype.updateAction=(function(a,d){mF(this.a,a.a,d)});S9.prototype.__destroy__=(function(){nF(this.a)});S9.prototype.set_m_collisionFilterGroup=(function(a){UE(this.a,a)});S9.prototype.needsCollision=(function(a){return oF(this.a,a.a)});S9.prototype.set_m_closestHitFraction=(function(a){VE(this.a,a)});S9.prototype.set_m_collisionFilterMask=(function(a){WE(this.a,a)});S9.prototype.get_m_closestHitFraction=(function(){return XE(this.a)});S9.prototype.addSingleResult=(function(a,d){return pF(this.a,a.a,d)});S9.prototype.set_m_rayToWorld=(function(a){qF(this.a,a.a)});S9.prototype.set_m_flags=(function(a){YE(this.a,a)});S9.prototype.get_m_collisionFilterMask=(function(){return ZE(this.a)});S9.prototype.get_m_rayToWorld=(function(){return T(this.a+15,Module.btVector3)});S9.prototype.get_m_flags=(function(){return $E(this.a)});S9.prototype.get_m_rayFromWorld=(function(){return T(this.a+11,Module.btVector3)});S9.prototype.get_m_collisionFilterGroup=(function(){return aF(this.a)});S9.prototype.hasHit=(function(){return ND(this.a)});S9.prototype.set_m_collisionObject=(function(a){bF(this.a,a.a)});S9.prototype.set_m_rayFromWorld=(function(a){rF(this.a,a.a)});function S9(a,d){this.a=sF(a.a,d.a);S9.prototype.b[this.a]=this;this.c=S9}S9.prototype.b={};Module.AllHitsRayResultCallback=S9;S9.prototype.get_m_collisionObject=(function(){return T(cF(this.a),Module.btCollisionObject)});T9.prototype.calculateLocalInertia=(function(a,d){tF(this.a,a,d.a)});T9.prototype.isCompound=(function(){return Ge(this.a)});T9.prototype.localGetSupportingVertex=(function(a){return T(uF(this.a,a.a),Module.btVector3)});T9.prototype.setUserPointer=(function(a){Je(this.a,a)});T9.prototype.getUpAxis=(function(){return dF(this.a)});T9.prototype.serialize=(function(a,d){return xF(this.a,a,d.a)});T9.prototype.getLocalScaling=(function(){return T(yF(this.a),Module.btVector3)});T9.prototype.serializeSingleShape=(function(a){zF(this.a,a.a)});T9.prototype.getNumPreferredPenetrationDirections=(function(){return AF(this.a)});T9.prototype.isPolyhedral=(function(){return Ye(this.a)});T9.prototype.getRadius=(function(){return BF(this.a)});T9.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});T9.prototype.calculateSerializeBufferSize=(function(){return CF(this.a)});T9.prototype.getName=(function(){return DF(this.a)});T9.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});T9.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(EF(this.a,a.a),Module.btVector3)});T9.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(HF(this.a,a.a),Module.btVector3)});T9.prototype.setLocalScaling=(function(a){KF(this.a,a.a)});T9.prototype.getAabb=(function(a,d,e){LF(this.a,a.a,d.a,e.a)});T9.prototype.getMarginNV=(function(){return Le(this.a)});T9.prototype.localGetSupportVertexNonVirtual=(function(a){return T(MF(this.a,a.a),Module.btVector3)});T9.prototype.getContactBreakingThreshold=(function(a){return PF(this.a,a)});T9.prototype.isConvex=(function(){return xf(this.a)});T9.prototype.isInfinite=(function(){return zf(this.a)});T9.prototype.getUserPointer=(function(){return Me(this.a)});T9.prototype.isNonMoving=(function(){return Bf(this.a)});T9.prototype.getMargin=(function(){return QF(this.a)});T9.prototype.getPreferredPenetrationDirection=(function(a,d){RF(this.a,a,d.a)});T9.prototype.getHalfExtentsWithoutMargin=(function(){return T(this.a+7,Module.btVector3)});T9.prototype.isConvex2d=(function(){return Gf(this.a)});T9.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});T9.prototype.isSoftBody=(function(){return Kf(this.a)});T9.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});T9.prototype.__destroy__=(function(){SF(this.a)});T9.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){TF(this.a,a.a,d.a,e)});T9.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});T9.prototype.getBoundingSphere=(function(a,d){UF(this.a,a.a,d)});T9.prototype.getAngularMotionDisc=(function(){return lG(this.a)});function T9(a){this.a=PG(a.a);T9.prototype.b[this.a]=this;this.c=T9}T9.prototype.b={};Module.btCylinderShapeX=T9;T9.prototype.getAabbSlow=(function(a,d,e){mG(this.a,a.a,d.a,e.a)});T9.prototype.setMargin=(function(a){nG(this.a,a)});T9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});T9.prototype.getHalfExtentsWithMargin=(function(){return T(oG(this.a),Module.btVector3)});T9.prototype.isConcave=(function(){return Uf(this.a)});T9.prototype.getShapeType=(function(){return Ie(this.a)});function U9(){aa("RayResultCallback is abstract!")}U9.prototype.b={};Module.RayResultCallback=U9;U9.prototype.get_m_closestHitFraction=(function(){return VF(this.a)});U9.prototype.set_m_collisionFilterGroup=(function(a){WF(this.a,a)});U9.prototype.get_m_flags=(function(){return XF(this.a)});U9.prototype.set_m_closestHitFraction=(function(a){YF(this.a,a)});U9.prototype.set_m_collisionFilterMask=(function(a){ZF(this.a,a)});U9.prototype.set_m_flags=(function(a){$F(this.a,a)});U9.prototype.hasHit=(function(){return ND(this.a)});U9.prototype.get_m_collisionFilterMask=(function(){return aG(this.a)});U9.prototype.get_m_collisionFilterGroup=(function(){return bG(this.a)});U9.prototype.addSingleResult=(function(a,d){return sG(this.a,a.a,d)});U9.prototype.set_m_collisionObject=(function(a){cG(this.a,a.a)});U9.prototype.needsCollision=(function(a){return tG(this.a,a.a)});U9.prototype.get_m_collisionObject=(function(){return T(dG(this.a),Module.btCollisionObject)});V9.prototype.__destroy__=(function(){uG(this.a)});function V9(){this.a=vG();V9.prototype.b[this.a]=this;this.c=V9}V9.prototype.b={};Module.btVehicleRaycasterResult=V9;V9.prototype.set_m_distFraction=(function(a){eG(this.a,a)});V9.prototype.get_m_hitNormalInWorld=(function(){return T(this.a+4,Module.btVector3)});V9.prototype.get_m_hitPointInWorld=(function(){return T(this.a,Module.btVector3)});V9.prototype.get_m_distFraction=(function(){return fG(this.a)});V9.prototype.set_m_hitNormalInWorld=(function(a){xG(this.a,a.a)});V9.prototype.set_m_hitPointInWorld=(function(a){yG(this.a,a.a)});W9.prototype.__destroy__=(function(){zG(this.a)});W9.prototype.setMin=(function(a){AG(this.a,a.a)});W9.prototype.setValue=(function(a,d,e,f){f===fa?BG(this.a,a,d,e):CG(this.a,a,d,e,f)});W9.prototype.setMax=(function(a){DG(this.a,a.a)});W9.prototype.op_comp=(function(a){return hG(this.a,a.a)});W9.prototype.getX=(function(){return k[this.a]});W9.prototype.getY=(function(){return EG(this.a)});W9.prototype.getZ=(function(){return FG(this.a)});W9.prototype.setW=(function(a){iG(this.a,a)});W9.prototype.op_set=(function(a){return GG(this.a,a.a)});W9.prototype.w=(function(){return HG(this.a)});W9.prototype.y=(function(){return IG(this.a)});W9.prototype.x=(function(){return k[this.a]});W9.prototype.z=(function(){return JG(this.a)});W9.prototype.setX=(function(a){k[this.a]=a});W9.prototype.setY=(function(a){jG(this.a,a)});W9.prototype.setZ=(function(a){kG(this.a,a)});function W9(a,d,e,f){this.a=a===fa?KG():f===fa?LG(a,d,e):MG(a,d,e,f);W9.prototype.b[this.a]=this;this.c=W9}W9.prototype.b={};Module.btQuadWord=W9;X9.prototype.calculateLocalInertia=(function(a,d){OG(this.a,a,d.a)});X9.prototype.isCompound=(function(){return Ge(this.a)});X9.prototype.localGetSupportingVertex=(function(a){return T(aH(this.a,a.a),Module.btVector3)});X9.prototype.setUserPointer=(function(a){Je(this.a,a)});X9.prototype.getUpAxis=(function(){return dF(this.a)});X9.prototype.serialize=(function(a,d){return dH(this.a,a,d.a)});X9.prototype.getLocalScaling=(function(){return T(eH(this.a),Module.btVector3)});X9.prototype.getNumPreferredPenetrationDirections=(function(){return fH(this.a)});X9.prototype.isPolyhedral=(function(){return Ye(this.a)});X9.prototype.getRadius=(function(){return gH(this.a)});X9.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});X9.prototype.calculateSerializeBufferSize=(function(){return hH(this.a)});X9.prototype.getName=(function(){return iH(this.a)});X9.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});X9.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(jH(this.a,a.a),Module.btVector3)});X9.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(mH(this.a,a.a),Module.btVector3)});X9.prototype.setLocalScaling=(function(a){pH(this.a,a.a)});X9.prototype.getAabb=(function(a,d,e){qH(this.a,a.a,d.a,e.a)});X9.prototype.getMarginNV=(function(){return Le(this.a)});X9.prototype.localGetSupportVertexNonVirtual=(function(a){return T(rH(this.a,a.a),Module.btVector3)});X9.prototype.getContactBreakingThreshold=(function(a){return uH(this.a,a)});X9.prototype.isConvex=(function(){return xf(this.a)});X9.prototype.isInfinite=(function(){return zf(this.a)});X9.prototype.getUserPointer=(function(){return Me(this.a)});X9.prototype.isNonMoving=(function(){return Bf(this.a)});X9.prototype.getMargin=(function(){return vH(this.a)});X9.prototype.getPreferredPenetrationDirection=(function(a,d){wH(this.a,a,d.a)});X9.prototype.getHalfExtentsWithoutMargin=(function(){return T(this.a+7,Module.btVector3)});X9.prototype.isConvex2d=(function(){return Gf(this.a)});X9.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});X9.prototype.isSoftBody=(function(){return Kf(this.a)});X9.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});X9.prototype.__destroy__=(function(){xH(this.a)});X9.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){yH(this.a,a.a,d.a,e)});X9.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});X9.prototype.getBoundingSphere=(function(a,d){zH(this.a,a.a,d)});X9.prototype.getAngularMotionDisc=(function(){return AH(this.a)});X9.prototype.serializeSingleShape=(function(a){BH(this.a,a.a)});X9.prototype.getAabbSlow=(function(a,d,e){CH(this.a,a.a,d.a,e.a)});X9.prototype.setMargin=(function(a){DH(this.a,a)});X9.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});function X9(a){this.a=QH(a.a);X9.prototype.b[this.a]=this;this.c=X9}X9.prototype.b={};Module.btCylinderShape=X9;X9.prototype.getHalfExtentsWithMargin=(function(){return T(EH(this.a),Module.btVector3)});X9.prototype.isConcave=(function(){return Uf(this.a)});X9.prototype.getShapeType=(function(){return Ie(this.a)});function Y9(){aa("btStorageResult is abstract!")}Y9.prototype.b={};Module.btStorageResult=Y9;Y9.prototype.set_m_distance=(function(a){RG(this.a,a)});Y9.prototype.set_m_closestPointInB=(function(a){HH(this.a,a.a)});Y9.prototype.addContactPoint=(function(a,d,e){IH(this.a,a.a,d.a,e)});Y9.prototype.set_m_normalOnSurfaceB=(function(a){JH(this.a,a.a)});Y9.prototype.get_m_distance=(function(){return SG(this.a)});Y9.prototype.setShapeIdentifiersB=(function(a,d){KH(this.a,a,d)});Y9.prototype.setShapeIdentifiersA=(function(a,d){LH(this.a,a,d)});Y9.prototype.get_m_closestPointInB=(function(){return T(this.a+5,Module.btVector3)});Y9.prototype.get_m_normalOnSurfaceB=(function(){return T(this.a+1,Module.btVector3)});Z9.prototype.get_m_clientObject=(function(){return c[this.a]});Z9.prototype.get_stage=(function(){return TG(this.a)});Z9.prototype.set_stage=(function(a){UG(this.a,a)});Z9.prototype.set_m_clientObject=(function(a){c[this.a]=a});Z9.prototype.get_leaf=(function(){return T(VG(this.a),Module.btDbvtNode)});Z9.prototype.isCompound=(function(a){return He(a)});Z9.prototype.isPolyhedral=(function(a){return bf(a)});Z9.prototype.get_m_aabbMin=(function(){return T(this.a+5,Module.btVector3)});Z9.prototype.set_m_uniqueId=(function(a){WG(this.a,a)});Z9.prototype.isConvex=(function(a){return yf(a)});Z9.prototype.get_m_collisionFilterMask=(function(){return XG(this.a)});Z9.prototype.getUid=(function(){return YG(this.a)});Z9.prototype.get_m_aabbMax=(function(){return T(this.a+9,Module.btVector3)});Z9.prototype.isNonMoving=(function(a){return Cf(a)});Z9.prototype.set_m_aabbMin=(function(a){MH(this.a,a.a)});Z9.prototype.set_m_multiSapParentProxy=(function(a){ZG(this.a,a)});Z9.prototype.set_m_collisionFilterGroup=(function(a){$G(this.a,a)});function Z9(a,d,e,f,g){this.a=NH(a.a,d.a,e,f,g);Z9.prototype.b[this.a]=this;this.c=Z9}Z9.prototype.b={};Module.btDbvtProxy=Z9;Z9.prototype.isSoftBody=(function(a){return Lf(a)});Z9.prototype.set_m_aabbMax=(function(a){gI(this.a,a.a)});Z9.prototype.__destroy__=(function(){hI(this.a)});Z9.prototype.get_m_uniqueId=(function(){return SH(this.a)});Z9.prototype.set_m_collisionFilterMask=(function(a){TH(this.a,a)});Z9.prototype.set_leaf=(function(a){UH(this.a,a.a)});Z9.prototype.isInfinite=(function(a){return Af(a)});Z9.prototype.isConcave=(function(a){return Yf(a)});Z9.prototype.get_m_multiSapParentProxy=(function(){return VH(this.a)});Z9.prototype.get_m_collisionFilterGroup=(function(){return WH(this.a)});Z9.prototype.isConvex2d=(function(a){return Hf(a)});function a$(){this.a=iI();a$.prototype.b[this.a]=this;this.c=a$}a$.prototype.b={};Module.ConcreteContactResultCallback=a$;a$.prototype.__destroy__=(function(){jI(this.a)});a$.prototype.set_m_collisionFilterGroup=(function(a){XH(this.a,a)});a$.prototype.set_m_collisionFilterMask=(function(a){YH(this.a,a)});a$.prototype.addSingleResult=(function(a,d,e,f,g,h,i){return kI(this.a,a.a,d.a,e,f,g.a,h,i)});a$.prototype.get_m_collisionFilterMask=(function(){return ZH(this.a)});a$.prototype.get_m_collisionFilterGroup=(function(){return $H(this.a)});a$.prototype.needsCollision=(function(a){return lI(this.a,a.a)});b$.prototype.reset=(function(){mI(this.a)});b$.prototype.__destroy__=(function(){nI(this.a)});function b$(){this.a=oI();b$.prototype.b[this.a]=this;this.c=b$}b$.prototype.b={};Module.btSequentialImpulseConstraintSolver=b$;b$.prototype.prepareSolve=(function(a,d){qI(this.a,a,d)});b$.prototype.btRand2=(function(){return rI(this.a)});b$.prototype.getRandSeed=(function(){return aI(this.a)});b$.prototype.setRandSeed=(function(a){bI(this.a,a)});b$.prototype.allSolved=(function(a,d,e){sI(this.a,a.a,d,e.a)});b$.prototype.solveGroup=(function(a,d,e,f,g,h,i,j,l,m){return tI(this.a,a.a,d,e.a,f,g.a,h,i.a,j,l.a,m.a)});b$.prototype.btRandInt2=(function(a){return uI(this.a,a)});c$.prototype.__destroy__=(function(){vI(this.a)});c$.prototype.getPersistentManifold=(function(){return T(cI(this.a),Module.btPersistentManifold)});c$.prototype.getBody0Internal=(function(){return T(dI(this.a),Module.btCollisionObject)});c$.prototype.addContactPoint=(function(a,d,e){wI(this.a,a.a,d.a,e)});c$.prototype.getBody1Internal=(function(){return T(eI(this.a),Module.btCollisionObject)});function c$(a,d){this.a=a===fa?xI():zI(a.a,d.a);c$.prototype.b[this.a]=this;this.c=c$}c$.prototype.b={};Module.btManifoldResult=c$;c$.prototype.setShapeIdentifiersB=(function(a,d){BI(this.a,a,d)});c$.prototype.setShapeIdentifiersA=(function(a,d){CI(this.a,a,d)});c$.prototype.refreshContactPoints=(function(){DI(this.a)});c$.prototype.setPersistentManifold=(function(a){fI(this.a,a.a)});d$.prototype.calculateLocalInertia=(function(a,d){EI(this.a,a,d.a)});d$.prototype.isCompound=(function(){return Ge(this.a)});d$.prototype.localGetSupportingVertex=(function(a){return T(FI(this.a,a.a),Module.btVector3)});d$.prototype.setUserPointer=(function(a){Je(this.a,a)});d$.prototype.getMarginNV=(function(){return Le(this.a)});d$.prototype.serialize=(function(a,d){return II(this.a,a,d.a)});function d$(a,d,e){this.a=VI(a.a,d,e);d$.prototype.b[this.a]=this;this.c=d$}d$.prototype.b={};Module.btMultiSphereShape=d$;d$.prototype.getNumPreferredPenetrationDirections=(function(){return JI(this.a)});d$.prototype.isPolyhedral=(function(){return Ye(this.a)});d$.prototype.getSphereRadius=(function(a){return KI(this.a,a)});d$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(MI(this.a,a.a),Module.btVector3)});d$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});d$.prototype.calculateSerializeBufferSize=(function(){return PI(this.a)});d$.prototype.getSphereCount=(function(){return QI(this.a)});d$.prototype.getName=(function(){return RI(this.a)});d$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});d$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(SI(this.a,a.a),Module.btVector3)});d$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});d$.prototype.setLocalScaling=(function(a){YI(this.a,a.a)});d$.prototype.getAabb=(function(a,d,e){ZI(this.a,a.a,d.a,e.a)});d$.prototype.getSpherePosition=(function(a){return T($I(this.a,a),Module.btVector3)});d$.prototype.getContactBreakingThreshold=(function(a){return aJ(this.a,a)});d$.prototype.isConvex=(function(){return xf(this.a)});d$.prototype.isInfinite=(function(){return zf(this.a)});d$.prototype.getUserPointer=(function(){return Me(this.a)});d$.prototype.isNonMoving=(function(){return Bf(this.a)});d$.prototype.getMargin=(function(){return bJ(this.a)});d$.prototype.recalcLocalAabb=(function(){cJ(this.a)});d$.prototype.getPreferredPenetrationDirection=(function(a,d){dJ(this.a,a,d.a)});d$.prototype.setMargin=(function(a){eJ(this.a,a)});d$.prototype.isConvex2d=(function(){return Gf(this.a)});d$.prototype.getLocalScaling=(function(){return T(fJ(this.a),Module.btVector3)});d$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(gJ(this.a,a.a),Module.btVector3)});d$.prototype.isSoftBody=(function(){return Kf(this.a)});d$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});d$.prototype.__destroy__=(function(){jJ(this.a)});d$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){kJ(this.a,a.a,d.a,e)});d$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});d$.prototype.getBoundingSphere=(function(a,d){lJ(this.a,a.a,d)});d$.prototype.getAngularMotionDisc=(function(){return mJ(this.a)});d$.prototype.serializeSingleShape=(function(a){nJ(this.a,a.a)});d$.prototype.getAabbSlow=(function(a,d,e){oJ(this.a,a.a,d.a,e.a)});d$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});d$.prototype.isConcave=(function(){return Uf(this.a)});d$.prototype.getShapeType=(function(){return Ie(this.a)});e$.prototype.calculateLocalInertia=(function(a,d){pJ(this.a,a,d.a)});e$.prototype.setUserPointer=(function(a){Je(this.a,a)});e$.prototype.serialize=(function(a,d){return qJ(this.a,a,d.a)});e$.prototype.getLocalScaling=(function(){return T(rJ(this.a),Module.btVector3)});function e$(a,d,e,f,g,h,i,j,l){this.a=j===fa?sJ(a,d,e,f,g,h,i):uJ(a,d,e,f,g,h,i,j,l);e$.prototype.b[this.a]=this;this.c=e$}e$.prototype.b={};Module.btHeightfieldTerrainShape=e$;e$.prototype.processAllTriangles=(function(a,d,e){wJ(this.a,a.a,d.a,e.a)});e$.prototype.calculateSerializeBufferSize=(function(){return xJ(this.a)});e$.prototype.getName=(function(){return yJ(this.a)});e$.prototype.isCompound=(function(){return Ge(this.a)});e$.prototype.isPolyhedral=(function(){return Ye(this.a)});e$.prototype.setLocalScaling=(function(a){zJ(this.a,a.a)});e$.prototype.getAabb=(function(a,d,e){AJ(this.a,a.a,d.a,e.a)});e$.prototype.setUseDiamondSubdivision=(function(a){a===fa?BJ(this.a):CJ(this.a,a)});e$.prototype.getContactBreakingThreshold=(function(a){return DJ(this.a,a)});e$.prototype.isConvex=(function(){return xf(this.a)});e$.prototype.isInfinite=(function(){return zf(this.a)});e$.prototype.getUserPointer=(function(){return Me(this.a)});e$.prototype.isNonMoving=(function(){return Bf(this.a)});e$.prototype.getMargin=(function(){return EJ(this.a)});e$.prototype.setMargin=(function(a){FJ(this.a,a)});e$.prototype.isConvex2d=(function(){return Gf(this.a)});e$.prototype.isSoftBody=(function(){return Kf(this.a)});e$.prototype.__destroy__=(function(){GJ(this.a)});e$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});e$.prototype.isConcave=(function(){return Uf(this.a)});e$.prototype.getAngularMotionDisc=(function(){return HJ(this.a)});e$.prototype.serializeSingleShape=(function(a){IJ(this.a,a.a)});e$.prototype.getBoundingSphere=(function(a,d){JJ(this.a,a.a,d)});e$.prototype.getShapeType=(function(){return Ie(this.a)});function f$(){aa("btConvexInternalAabbCachingShape is abstract!")}f$.prototype.b={};Module.btConvexInternalAabbCachingShape=f$;f$.prototype.calculateLocalInertia=(function(a,d){KJ(this.a,a,d.a)});f$.prototype.isCompound=(function(){return Ge(this.a)});f$.prototype.localGetSupportingVertex=(function(a){return T(LJ(this.a,a.a),Module.btVector3)});f$.prototype.setUserPointer=(function(a){Je(this.a,a)});f$.prototype.getMarginNV=(function(){return Le(this.a)});f$.prototype.serialize=(function(a,d){return OJ(this.a,a,d.a)});f$.prototype.getLocalScaling=(function(){return T(PJ(this.a),Module.btVector3)});f$.prototype.getNumPreferredPenetrationDirections=(function(){return QJ(this.a)});f$.prototype.isPolyhedral=(function(){return Ye(this.a)});f$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(RJ(this.a,a.a),Module.btVector3)});f$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});f$.prototype.calculateSerializeBufferSize=(function(){return UJ(this.a)});f$.prototype.getName=(function(){return VJ(this.a)});f$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});f$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(WJ(this.a,a.a),Module.btVector3)});f$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});f$.prototype.setLocalScaling=(function(a){ZJ(this.a,a.a)});f$.prototype.getAabb=(function(a,d,e){$J(this.a,a.a,d.a,e.a)});f$.prototype.getContactBreakingThreshold=(function(a){return aK(this.a,a)});f$.prototype.isConvex=(function(){return xf(this.a)});f$.prototype.isInfinite=(function(){return zf(this.a)});f$.prototype.getUserPointer=(function(){return Me(this.a)});f$.prototype.isNonMoving=(function(){return Bf(this.a)});f$.prototype.getMargin=(function(){return bK(this.a)});f$.prototype.recalcLocalAabb=(function(){cJ(this.a)});f$.prototype.getPreferredPenetrationDirection=(function(a,d){cK(this.a,a,d.a)});f$.prototype.setMargin=(function(a){dK(this.a,a)});f$.prototype.isConvex2d=(function(){return Gf(this.a)});f$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(eK(this.a,a.a),Module.btVector3)});f$.prototype.isSoftBody=(function(){return Kf(this.a)});f$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});f$.prototype.__destroy__=(function(){hK(this.a)});f$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){iK(this.a,a.a,d.a,e)});f$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});f$.prototype.getBoundingSphere=(function(a,d){jK(this.a,a.a,d)});f$.prototype.getAngularMotionDisc=(function(){return kK(this.a)});f$.prototype.serializeSingleShape=(function(a){lK(this.a,a.a)});f$.prototype.getAabbSlow=(function(a,d,e){mK(this.a,a.a,d.a,e.a)});f$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});f$.prototype.isConcave=(function(){return Uf(this.a)});f$.prototype.getShapeType=(function(){return Ie(this.a)});function g$(){aa("btConvexShape is abstract!")}g$.prototype.b={};Module.btConvexShape=g$;g$.prototype.calculateLocalInertia=(function(a,d){nK(this.a,a,d.a)});g$.prototype.localGetSupportingVertex=(function(a){return T(oK(this.a,a.a),Module.btVector3)});g$.prototype.setUserPointer=(function(a){Je(this.a,a)});g$.prototype.serialize=(function(a,d){return rK(this.a,a,d.a)});g$.prototype.getLocalScaling=(function(){return T(sK(this.a),Module.btVector3)});g$.prototype.getNumPreferredPenetrationDirections=(function(){return tK(this.a)});g$.prototype.isPolyhedral=(function(){return Ye(this.a)});g$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(uK(this.a,a.a),Module.btVector3)});g$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});g$.prototype.calculateSerializeBufferSize=(function(){return xK(this.a)});g$.prototype.getName=(function(){return yK(this.a)});g$.prototype.isCompound=(function(){return Ge(this.a)});g$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(zK(this.a,a.a),Module.btVector3)});g$.prototype.setLocalScaling=(function(a){CK(this.a,a.a)});g$.prototype.getAabb=(function(a,d,e){DK(this.a,a.a,d.a,e.a)});g$.prototype.getContactBreakingThreshold=(function(a){return EK(this.a,a)});g$.prototype.isConvex=(function(){return xf(this.a)});g$.prototype.isInfinite=(function(){return zf(this.a)});g$.prototype.getUserPointer=(function(){return Me(this.a)});g$.prototype.isNonMoving=(function(){return Bf(this.a)});g$.prototype.getMargin=(function(){return FK(this.a)});g$.prototype.getPreferredPenetrationDirection=(function(a,d){GK(this.a,a,d.a)});g$.prototype.setMargin=(function(a){HK(this.a,a)});g$.prototype.isConvex2d=(function(){return Gf(this.a)});g$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(IK(this.a,a.a),Module.btVector3)});g$.prototype.isSoftBody=(function(){return Kf(this.a)});g$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});g$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){LK(this.a,a.a,d.a,e)});g$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});g$.prototype.getBoundingSphere=(function(a,d){MK(this.a,a.a,d)});g$.prototype.getAngularMotionDisc=(function(){return NK(this.a)});g$.prototype.serializeSingleShape=(function(a){OK(this.a,a.a)});g$.prototype.getAabbSlow=(function(a,d,e){PK(this.a,a.a,d.a,e.a)});g$.prototype.isConcave=(function(){return Uf(this.a)});g$.prototype.getShapeType=(function(){return Ie(this.a)});function Eub(){aa("btDiscreteCollisionDetectorInterface is abstract!")}Eub.prototype.b={};Module.btDiscreteCollisionDetectorInterface=Eub;Eub.prototype.getClosestPoints=(function(a,d,e,f){f===fa?QK(this.a,a.a,d.a,e):hL(this.a,a.a,d.a,e,f)});h$.prototype.set_m_customCollisionAlgorithmMaxElementSize=(function(a){RK(this.a,a)});h$.prototype.set_m_collisionAlgorithmPool=(function(a){SK(this.a,a)});h$.prototype.get_m_customCollisionAlgorithmMaxElementSize=(function(){return TK(this.a)});h$.prototype.get_m_persistentManifoldPool=(function(){return UK(this.a)});h$.prototype.set_m_useEpaPenetrationAlgorithm=(function(a){VK(this.a,a)});h$.prototype.__destroy__=(function(){iL(this.a)});h$.prototype.get_m_defaultStackAllocatorSize=(function(){return WK(this.a)});h$.prototype.set_m_defaultStackAllocatorSize=(function(a){XK(this.a,a)});h$.prototype.get_m_defaultMaxCollisionAlgorithmPoolSize=(function(){return YK(this.a)});h$.prototype.set_m_defaultMaxPersistentManifoldPoolSize=(function(a){ZK(this.a,a)});h$.prototype.get_m_useEpaPenetrationAlgorithm=(function(){return $K(this.a)});h$.prototype.set_m_stackAlloc=(function(a){c[this.a]=a.a});h$.prototype.get_m_collisionAlgorithmPool=(function(){return aL(this.a)});h$.prototype.get_m_stackAlloc=(function(){return T(c[this.a],Module.btStackAlloc)});h$.prototype.set_m_defaultMaxCollisionAlgorithmPoolSize=(function(a){bL(this.a,a)});function h$(){this.a=jL();h$.prototype.b[this.a]=this;this.c=h$}h$.prototype.b={};Module.btDefaultCollisionConstructionInfo=h$;h$.prototype.get_m_defaultMaxPersistentManifoldPoolSize=(function(){return cL(this.a)});h$.prototype.set_m_persistentManifoldPool=(function(a){dL(this.a,a)});function i$(){aa("btDispatcher is abstract!")}i$.prototype.b={};Module.btDispatcher=i$;i$.prototype.allocateCollisionAlgorithm=(function(a){return kL(this.a,a)});i$.prototype.getManifoldByIndexInternal=(function(a){return T(lL(this.a,a),Module.btPersistentManifold)});i$.prototype.getNumManifolds=(function(){return mL(this.a)});i$.prototype.clearManifold=(function(a){nL(this.a,a.a)});i$.prototype.freeCollisionAlgorithm=(function(a){oL(this.a,a)});i$.prototype.getInternalManifoldPointer=(function(){return T(pL(this.a),Module.btPersistentManifold)});i$.prototype.findAlgorithm=(function(a,d,e){return e===fa?T(qL(this.a,a.a,d.a),Module.btCollisionAlgorithm):T(rL(this.a,a.a,d.a,e.a),Module.btCollisionAlgorithm)});i$.prototype.needsResponse=(function(a,d){return sL(this.a,a.a,d.a)});i$.prototype.getNewManifold=(function(a,d){return T(tL(this.a,a,d),Module.btPersistentManifold)});i$.prototype.dispatchAllCollisionPairs=(function(a,d,e){uL(this.a,a.a,d.a,e.a)});i$.prototype.getInternalManifoldPool=(function(){return vL(this.a)});i$.prototype.needsCollision=(function(a,d){return wL(this.a,a.a,d.a)});i$.prototype.releaseManifold=(function(a){xL(this.a,a.a)});j$.prototype.__destroy__=(function(){yL(this.a)});j$.prototype.set_m_linearJointAxis=(function(a){zL(this.a,a.a)});j$.prototype.get_m_bJ=(function(){return T(this.a+8,Module.btVector3)});function j$(a,d,e,f,g,h,i,j,l){this.a=a===fa?AL():g===fa?BL(a.a,d.a,e.a,f.a):h===fa?CL(a.a,d.a,e.a,f.a,g.a):i===fa?EL(a.a,d.a,e.a,f.a,g.a,h):FL(a.a,d.a,e.a,f.a,g.a,h.a,i,j.a,l);j$.prototype.b[this.a]=this;this.c=j$}j$.prototype.b={};Module.btJacobianEntry=j$;j$.prototype.get_m_linearJointAxis=(function(){return T(this.a,Module.btVector3)});j$.prototype.set_m_aJ=(function(a){HL(this.a,a.a)});j$.prototype.getDiagonal=(function(){return eL(this.a)});j$.prototype.set_m_Adiag=(function(a){fL(this.a,a)});j$.prototype.getRelativeVelocity=(function(a,d,e,f){return IL(this.a,a.a,d.a,e.a,f.a)});j$.prototype.set_m_bJ=(function(a){KL(this.a,a.a)});j$.prototype.get_m_Adiag=(function(){return gL(this.a)});j$.prototype.getNonDiagonal=(function(a,d,e){return e===fa?LL(this.a,a.a,d):ML(this.a,a.a,d,e)});j$.prototype.set_m_1MinvJt=(function(a){NL(this.a,a.a)});j$.prototype.get_m_0MinvJt=(function(){return T(this.a+12,Module.btVector3)});j$.prototype.set_m_0MinvJt=(function(a){OL(this.a,a.a)});j$.prototype.get_m_aJ=(function(){return T(this.a+4,Module.btVector3)});j$.prototype.get_m_1MinvJt=(function(){return T(this.a+16,Module.btVector3)});function k$(){aa("btOverlappingPairCallback is abstract!")}k$.prototype.b={};Module.btOverlappingPairCallback=k$;k$.prototype.addOverlappingPair=(function(a,d){return T(PL(this.a,a.a,d.a),Module.btBroadphasePair)});k$.prototype.removeOverlappingPair=(function(a,d,e){return QL(this.a,a.a,d.a,e.a)});k$.prototype.removeOverlappingPairsContainingProxy=(function(a,d){RL(this.a,a.a,d.a)});l$.prototype.__destroy__=(function(){aM(this.a)});l$.prototype.setUid1=(function(a){c[this.a]=a});function l$(a){this.a=bM(a);l$.prototype.b[this.a]=this;this.c=l$}l$.prototype.b={};Module.btHashInt=l$;l$.prototype.equals=(function(a){return cM(this.a,a.a)});l$.prototype.getUid1=(function(){return c[this.a]});l$.prototype.getHash=(function(){return SL(this.a)});m$.prototype.get_m_swapped=(function(){return TL(this.a)});m$.prototype.__destroy__=(function(){dM(this.a)});m$.prototype.CreateCollisionAlgorithm=(function(a,d,e){return T(eM(this.a,a.a,d.a,e.a),Module.btCollisionAlgorithm)});m$.prototype.set_m_swapped=(function(a){UL(this.a,a)});function m$(){this.a=fM();m$.prototype.b[this.a]=this;this.c=m$}m$.prototype.b={};Module.btCollisionAlgorithmCreateFunc=m$;n$.prototype.setBroadphase=(function(a){Tk(this.a,a.a)});n$.prototype.serialize=(function(a){hM(this.a,a.a)});n$.prototype.getDispatcher=(function(){return T(Sk(this.a),Module.btDispatcher)});n$.prototype.getDispatchInfo=(function(){return T(this.a+7,Module.btDispatcherInfo)});n$.prototype.getDebugDrawer=(function(){return iM(this.a)});n$.prototype.performDiscreteCollisionDetection=(function(){jM(this.a)});n$.prototype.getCollisionObjectArray=(function(){return this.a+1});n$.prototype.debugDrawObject=(function(a,d,e){kM(this.a,a.a,d.a,e.a)});n$.prototype.rayTest=(function(a,d,e){lM(this.a,a.a,d.a,e.a)});n$.prototype.addCollisionObject=(function(a,d,e){d===fa?mM(this.a,a.a):e===fa?nM(this.a,a.a,d):oM(this.a,a.a,d,e)});function n$(a,d,e){this.a=pM(a.a,d.a,e.a);n$.prototype.b[this.a]=this;this.c=n$}n$.prototype.b={};Module.btCollisionWorld=n$;n$.prototype.contactTest=(function(a,d){Jl(this.a,a.a,d.a)});n$.prototype.getForceUpdateAllAabbs=(function(){return Vk(this.a)});n$.prototype.updateAabbs=(function(){rM(this.a)});n$.prototype.setDebugDrawer=(function(a){sM(this.a,a)});n$.prototype.debugDrawWorld=(function(){tM(this.a)});n$.prototype.convexSweepTest=(function(a,d,e,f,g){g===fa?uM(this.a,a.a,d.a,e.a,f.a):Rl(this.a,a.a,d.a,e.a,f.a,g)});n$.prototype.getNumCollisionObjects=(function(){return Sl(this.a)});n$.prototype.contactPairTest=(function(a,d,e){Xl(this.a,a.a,d.a,e.a)});n$.prototype.getBroadphase=(function(){return T(am(this.a),Module.btBroadphaseInterface)});n$.prototype.rayTestSingle=(function(a,d,e,f,g,h){mm(a.a,d.a,e.a,f.a,g.a,h.a)});n$.prototype.setForceUpdateAllAabbs=(function(a){vM(this.a,a)});n$.prototype.__destroy__=(function(){wM(this.a)});n$.prototype.objectQuerySingle=(function(a,d,e,f,g,h,i,j){Dm(a.a,d.a,e.a,f.a,g.a,h.a,i.a,j)});n$.prototype.updateSingleAabb=(function(a){ym(this.a,a.a)});n$.prototype.getPairCache=(function(){return T(Am(this.a),Module.btOverlappingPairCache)});n$.prototype.removeCollisionObject=(function(a){xM(this.a,a.a)});o$.prototype.set_m_currentLimitError=(function(a){yM(this.a,a.a)});o$.prototype.needApplyForce=(function(a){return VL(this.a,a)});o$.prototype.get_m_currentLimitError=(function(){return T(this.a+38,Module.btVector3)});o$.prototype.get_m_currentLinearDiff=(function(){return T(this.a+42,Module.btVector3)});o$.prototype.get_m_stopERP=(function(){return T(this.a+19,Module.btVector3)});o$.prototype.set_m_stopERP=(function(a){zM(this.a,a.a)});o$.prototype.set_m_stopCFM=(function(a){AM(this.a,a.a)});o$.prototype.get_m_stopCFM=(function(){return T(this.a+23,Module.btVector3)});o$.prototype.get_m_lowerLimit=(function(){return T(this.a,Module.btVector3)});o$.prototype.set_m_maxMotorForce=(function(a){BM(this.a,a.a)});o$.prototype.testLimitValue=(function(a,d){return CM(this.a,a,d)});o$.prototype.set_m_restitution=(function(a){WL(this.a,a)});o$.prototype.set_m_limitSoftness=(function(a){XL(this.a,a)});o$.prototype.set_m_currentLinearDiff=(function(a){DM(this.a,a.a)});o$.prototype.get_m_restitution=(function(){return YL(this.a)});o$.prototype.get_m_targetVelocity=(function(){return T(this.a+30,Module.btVector3)});o$.prototype.get_m_maxMotorForce=(function(){return T(this.a+34,Module.btVector3)});o$.prototype.set_m_damping=(function(a){ZL(this.a,a)});o$.prototype.get_m_upperLimit=(function(){return T(this.a+4,Module.btVector3)});o$.prototype.set_m_accumulatedImpulse=(function(a){EM(this.a,a.a)});function o$(a){this.a=a===fa?FM():HM(a.a);o$.prototype.b[this.a]=this;this.c=o$}o$.prototype.b={};Module.btTranslationalLimitMotor=o$;o$.prototype.set_m_upperLimit=(function(a){IM(this.a,a.a)});o$.prototype.__destroy__=(function(){JM(this.a)});o$.prototype.set_m_normalCFM=(function(a){KM(this.a,a.a)});o$.prototype.get_m_damping=(function(){return $L(this.a)});o$.prototype.get_m_normalCFM=(function(){return T(this.a+15,Module.btVector3)});o$.prototype.set_m_targetVelocity=(function(a){LM(this.a,a.a)});o$.prototype.isLimited=(function(a){return MM(this.a,a)});o$.prototype.get_m_accumulatedImpulse=(function(){return T(this.a+8,Module.btVector3)});o$.prototype.set_m_lowerLimit=(function(a){PM(this.a,a.a)});o$.prototype.get_m_limitSoftness=(function(){return NM(this.a)});o$.prototype.solveLinearAxis=(function(a,d,e,f,g,h,i,j,l){return QM(this.a,a,d,e.a,f.a,g.a,h.a,i,j.a,l.a)});function Fub(){aa("btInternalTriangleIndexCallback is abstract!")}Fub.prototype.b={};Module.btInternalTriangleIndexCallback=Fub;Fub.prototype.internalProcessTriangleIndex=(function(a,d,e){RM(this.a,a.a,d,e)});function p$(){aa("btConvexInternalShape is abstract!")}p$.prototype.b={};Module.btConvexInternalShape=p$;p$.prototype.calculateLocalInertia=(function(a,d){SM(this.a,a,d.a)});p$.prototype.isCompound=(function(){return Ge(this.a)});p$.prototype.localGetSupportingVertex=(function(a){return T(TM(this.a,a.a),Module.btVector3)});p$.prototype.setUserPointer=(function(a){Je(this.a,a)});p$.prototype.getMarginNV=(function(){return Le(this.a)});p$.prototype.serialize=(function(a,d){return WM(this.a,a,d.a)});p$.prototype.getLocalScaling=(function(){return T(XM(this.a),Module.btVector3)});p$.prototype.getNumPreferredPenetrationDirections=(function(){return YM(this.a)});p$.prototype.isPolyhedral=(function(){return Ye(this.a)});p$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(ZM(this.a,a.a),Module.btVector3)});p$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});p$.prototype.calculateSerializeBufferSize=(function(){return bN(this.a)});p$.prototype.getName=(function(){return cN(this.a)});p$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});p$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(dN(this.a,a.a),Module.btVector3)});p$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});p$.prototype.setLocalScaling=(function(a){gN(this.a,a.a)});p$.prototype.getAabb=(function(a,d,e){hN(this.a,a.a,d.a,e.a)});p$.prototype.getContactBreakingThreshold=(function(a){return iN(this.a,a)});p$.prototype.isConvex=(function(){return xf(this.a)});p$.prototype.isInfinite=(function(){return zf(this.a)});p$.prototype.getUserPointer=(function(){return Me(this.a)});p$.prototype.isNonMoving=(function(){return Bf(this.a)});p$.prototype.getMargin=(function(){return jN(this.a)});p$.prototype.getPreferredPenetrationDirection=(function(a,d){kN(this.a,a,d.a)});p$.prototype.setMargin=(function(a){lN(this.a,a)});p$.prototype.isConvex2d=(function(){return Gf(this.a)});p$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(mN(this.a,a.a),Module.btVector3)});p$.prototype.isSoftBody=(function(){return Kf(this.a)});p$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});p$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){pN(this.a,a.a,d.a,e)});p$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});p$.prototype.getBoundingSphere=(function(a,d){qN(this.a,a.a,d)});p$.prototype.getAngularMotionDisc=(function(){return rN(this.a)});p$.prototype.serializeSingleShape=(function(a){sN(this.a,a.a)});p$.prototype.getAabbSlow=(function(a,d,e){tN(this.a,a.a,d.a,e.a)});p$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});p$.prototype.isConcave=(function(){return Uf(this.a)});p$.prototype.getShapeType=(function(){return Ie(this.a)});q$.prototype.__destroy__=(function(){uN(this.a)});q$.prototype.equals=(function(a){return vN(this.a,a.a)});q$.prototype.getHash=(function(){return OM(this.a)});function q$(a){this.a=wN(a);q$.prototype.b[this.a]=this;this.c=q$}q$.prototype.b={};Module.btHashPtr=q$;q$.prototype.getPointer=(function(){return c[this.a]});function Gub(){aa("btOverlapCallback is abstract!")}Gub.prototype.b={};Module.btOverlapCallback=Gub;Gub.prototype.processOverlap=(function(a){return xN(this.a,a.a)});r$.prototype.calculateLocalInertia=(function(a,d){yN(this.a,a,d.a)});r$.prototype.setUserPointer=(function(a){Je(this.a,a)});r$.prototype.serialize=(function(a,d){return zN(this.a,a,d.a)});r$.prototype.getLocalScaling=(function(){return T(AN(this.a),Module.btVector3)});r$.prototype.processAllTriangles=(function(a,d,e){BN(this.a,a.a,d.a,e.a)});r$.prototype.calculateSerializeBufferSize=(function(){return CN(this.a)});r$.prototype.getName=(function(){return DN(this.a)});r$.prototype.isCompound=(function(){return Ge(this.a)});r$.prototype.isPolyhedral=(function(){return Ye(this.a)});r$.prototype.getPlaneNormal=(function(){return T(this.a+12,Module.btVector3)});r$.prototype.setLocalScaling=(function(a){EN(this.a,a.a)});r$.prototype.getAabb=(function(a,d,e){FN(this.a,a.a,d.a,e.a)});r$.prototype.getContactBreakingThreshold=(function(a){return GN(this.a,a)});r$.prototype.isConvex=(function(){return xf(this.a)});r$.prototype.isInfinite=(function(){return zf(this.a)});r$.prototype.getUserPointer=(function(){return Me(this.a)});r$.prototype.isNonMoving=(function(){return Bf(this.a)});r$.prototype.getMargin=(function(){return IN(this.a)});r$.prototype.getPlaneConstant=(function(){return JN(this.a)});r$.prototype.setMargin=(function(a){KN(this.a,a)});r$.prototype.isConvex2d=(function(){return Gf(this.a)});r$.prototype.isSoftBody=(function(){return Kf(this.a)});r$.prototype.__destroy__=(function(){LN(this.a)});r$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});r$.prototype.getBoundingSphere=(function(a,d){MN(this.a,a.a,d)});r$.prototype.getAngularMotionDisc=(function(){return NN(this.a)});r$.prototype.serializeSingleShape=(function(a){ON(this.a,a.a)});function r$(a,d){this.a=PN(a.a,d);r$.prototype.b[this.a]=this;this.c=r$}r$.prototype.b={};Module.btStaticPlaneShape=r$;r$.prototype.isConcave=(function(){return Uf(this.a)});r$.prototype.getShapeType=(function(){return Ie(this.a)});function s$(){aa("btOverlappingPairCache is abstract!")}s$.prototype.b={};Module.btOverlappingPairCache=s$;s$.prototype.sortOverlappingPairs=(function(a){RN(this.a,a.a)});s$.prototype.setInternalGhostPairCallback=(function(a){SN(this.a,a.a)});s$.prototype.addOverlappingPair=(function(a,d){return T(TN(this.a,a.a,d.a),Module.btBroadphasePair)});s$.prototype.removeOverlappingPairsContainingProxy=(function(a,d){UN(this.a,a.a,d.a)});s$.prototype.hasDeferredRemoval=(function(){return VN(this.a)});s$.prototype.getOverlappingPairArray=(function(){return WN(this.a)});s$.prototype.findPair=(function(a,d){return T(XN(this.a,a.a,d.a),Module.btBroadphasePair)});s$.prototype.cleanProxyFromPairs=(function(a,d){YN(this.a,a.a,d.a)});s$.prototype.cleanOverlappingPair=(function(a,d){ZN(this.a,a.a,d.a)});s$.prototype.getNumOverlappingPairs=(function(){return $N(this.a)});s$.prototype.removeOverlappingPair=(function(a,d,e){return aO(this.a,a.a,d.a,e.a)});s$.prototype.setOverlapFilterCallback=(function(a){bO(this.a,a.a)});s$.prototype.getOverlappingPairArrayPtr=(function(){return T(cO(this.a),Module.btBroadphasePair)});s$.prototype.processAllOverlappingPairs=(function(a,d){dO(this.a,a.a,d.a)});function t$(){aa("btCollisionShape is abstract!")}t$.prototype.b={};Module.btCollisionShape=t$;t$.prototype.calculateLocalInertia=(function(a,d){eO(this.a,a,d.a)});t$.prototype.setUserPointer=(function(a){Je(this.a,a)});t$.prototype.serialize=(function(a,d){return fO(this.a,a,d.a)});t$.prototype.getLocalScaling=(function(){return T(gO(this.a),Module.btVector3)});t$.prototype.calculateSerializeBufferSize=(function(){return hO(this.a)});t$.prototype.getName=(function(){return iO(this.a)});t$.prototype.isCompound=(function(){return Ge(this.a)});t$.prototype.isPolyhedral=(function(){return Ye(this.a)});t$.prototype.setLocalScaling=(function(a){jO(this.a,a.a)});t$.prototype.getAabb=(function(a,d,e){kO(this.a,a.a,d.a,e.a)});t$.prototype.getContactBreakingThreshold=(function(a){return lO(this.a,a)});t$.prototype.isConvex=(function(){return xf(this.a)});t$.prototype.isInfinite=(function(){return zf(this.a)});t$.prototype.getUserPointer=(function(){return Me(this.a)});t$.prototype.isNonMoving=(function(){return Bf(this.a)});t$.prototype.getMargin=(function(){return mO(this.a)});t$.prototype.setMargin=(function(a){nO(this.a,a)});t$.prototype.isConvex2d=(function(){return Gf(this.a)});t$.prototype.isSoftBody=(function(){return Kf(this.a)});t$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});t$.prototype.getBoundingSphere=(function(a,d){oO(this.a,a.a,d)});t$.prototype.getAngularMotionDisc=(function(){return pO(this.a)});t$.prototype.serializeSingleShape=(function(a){qO(this.a,a.a)});t$.prototype.isConcave=(function(){return Uf(this.a)});t$.prototype.getShapeType=(function(){return Ie(this.a)});u$.prototype.getRigidBodyB=(function(){return T(Ho(this.a),Module.btRigidBody)});u$.prototype.buildJacobian=(function(){rO(this.a)});u$.prototype.setParam=(function(a,d,e){e===fa?sO(this.a,a,d):tO(this.a,a,d,e)});u$.prototype.getUid=(function(){return Ip(this.a)});u$.prototype.set_m_objectType=(function(a){HN(this.a,a)});u$.prototype.setEnabled=(function(a){uO(this.a,a)});u$.prototype.getFrameOffsetA=(function(){return T(this.a+11,Module.btTransform)});u$.prototype.getRelativePivotPosition=(function(a){return vO(this.a,a)});u$.prototype.getFrameOffsetB=(function(){return T(this.a+27,Module.btTransform)});u$.prototype.getInfo2NonVirtual=(function(a,d,e,f,g,h,i){wO(this.a,a.a,d.a,e.a,f.a,g.a,h.a,i.a)});u$.prototype.getCalculatedTransformA=(function(){return T(this.a+267,Module.btTransform)});u$.prototype.getUserConstraintId=(function(){return Lo(this.a)});function u$(a,d,e,f,g){this.a=f===fa?xO(a.a,d.a,e):zO(a.a,d.a,e.a,f.a,g);u$.prototype.b[this.a]=this;this.c=u$}u$.prototype.b={};Module.btGeneric6DofConstraint=u$;u$.prototype.getRigidBodyA=(function(){return T(Io(this.a),Module.btRigidBody)});u$.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});u$.prototype.getParam=(function(a,d){return d===fa?BO(this.a,a):HO(this.a,a,d)});u$.prototype.getInfo1=(function(a){IO(this.a,a.a)});u$.prototype.getInfo2=(function(a){JO(this.a,a.a)});u$.prototype.calcAnchorPos=(function(){KO(this.a)});u$.prototype.getAngularLowerLimit=(function(a){LO(this.a,a.a)});u$.prototype.calculateSerializeBufferSize=(function(){return MO(this.a)});u$.prototype.getAxis=(function(a){return T(NO(this.a,a),Module.btVector3)});u$.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});u$.prototype.isEnabled=(function(){return Ap(this.a)});u$.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});u$.prototype.getLinearUpperLimit=(function(a){RO(this.a,a.a)});u$.prototype.getConstraintType=(function(){return Cp(this.a)});u$.prototype.enableFeedback=(function(a){SO(this.a,a)});u$.prototype.setUseFrameOffset=(function(a){TO(this.a,a)});u$.prototype.needsFeedback=(function(){return Fp(this.a)});u$.prototype.getObjectType=(function(){return UO(this.a)});u$.prototype.getRotationalLimitMotor=(function(a){return T(CO(this.a,a),Module.btRotationalLimitMotor)});u$.prototype.getInfo1NonVirtual=(function(a){VO(this.a,a.a)});u$.prototype.serialize=(function(a,d){return WO(this.a,a,d.a)});u$.prototype.setLinearLowerLimit=(function(a){XO(this.a,a.a)});u$.prototype.getDbgDrawSize=(function(){return Dp(this.a)});u$.prototype.getLinearLowerLimit=(function(a){YO(this.a,a.a)});u$.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});u$.prototype.isLimited=(function(a){return ZO(this.a,a)});u$.prototype.getUseFrameOffset=(function(){return DO(this.a)});u$.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});u$.prototype.getCalculatedTransformB=(function(){return T(this.a+283,Module.btTransform)});u$.prototype.calculateTransforms=(function(a,d){a===fa?$O(this.a):aP(this.a,a.a,d.a)});u$.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});u$.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});u$.prototype.get_limit_motor_info2=(function(a,d,e,f,g,h,i,j,l,m,n,p){return p===fa?bP(this.a,a.a,d.a,e.a,f.a,g.a,h.a,i.a,j.a,l,m.a,n):cP(this.a,a.a,d.a,e.a,f.a,g.a,h.a,i.a,j.a,l,m.a,n,p)});u$.prototype.get_m_useSolveConstraintObsolete=(function(){return EO(this.a)});u$.prototype.getAppliedImpulse=(function(){return Op(this.a)});u$.prototype.setLimit=(function(a,d,e){dP(this.a,a,d,e)});u$.prototype.set_m_useSolveConstraintObsolete=(function(a){FO(this.a,a)});u$.prototype.getTranslationalLimitMotor=(function(){return T(this.a+169,Module.btTranslationalLimitMotor)});u$.prototype.__destroy__=(function(){fP(this.a)});u$.prototype.setupSolverConstraint=(function(a,d,e,f){gP(this.a,a,d,e,f)});u$.prototype.getAngle=(function(a){return hP(this.a,a)});u$.prototype.updateRHS=pa();u$.prototype.getAngularUpperLimit=(function(a){iP(this.a,a.a)});u$.prototype.get_m_objectType=(function(){return GO(this.a)});u$.prototype.setAngularLowerLimit=(function(a){jP(this.a,a.a)});u$.prototype.getUserConstraintType=(function(){return Np(this.a)});u$.prototype.solveConstraintObsolete=(function(a,d,e){kP(this.a,a.a,d.a,e)});u$.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});u$.prototype.setFrames=(function(a,d){lP(this.a,a.a,d.a)});u$.prototype.setLinearUpperLimit=(function(a){mP(this.a,a.a)});u$.prototype.setAngularUpperLimit=(function(a){nP(this.a,a.a)});u$.prototype.setAxis=(function(a,d){oP(this.a,a.a,d.a)});u$.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});u$.prototype.testAngularLimitMotor=(function(a){return pP(this.a,a)});v$.prototype.setFromOpenGLMatrix=(function(a){NP(this.a,a)});v$.prototype.setBasis=(function(a){Wb(this.a,a.a)});v$.prototype.getOrigin=(function(){return T(this.a+12,Module.btVector3)});v$.prototype.deSerializeDouble=(function(a){OP(this.a,a.a)});v$.prototype.deSerializeFloat=(function(a){PP(this.a,a.a)});v$.prototype.getRotation=(function(){return T(QP(this.a),Module.btQuaternion)});v$.prototype.inverse=(function(){return T(TP(this.a),Module.btTransform)});v$.prototype.getIdentity=(function(){return T(XP(),Module.btTransform)});v$.prototype.inverseTimes=(function(a){return T(YP(this.a,a.a),Module.btTransform)});v$.prototype.op_mul=(function(a){return T(bQ(this.a,a.a),Module.btVector3)});v$.prototype.setRotation=(function(a){zb(this.a,a.a)});v$.prototype.setIdentity=(function(){eQ(this.a)});v$.prototype.op_set=(function(a){return T(xi(this.a,a.a),Module.btTransform)});v$.prototype.getOpenGLMatrix=(function(a){fQ(this.a,a)});v$.prototype.serialize=(function(a){gQ(this.a,a.a)});v$.prototype.deSerialize=(function(a){hQ(this.a,a.a)});v$.prototype.invXform=(function(a){return T(iQ(this.a,a.a),Module.btVector3)});v$.prototype.serializeFloat=(function(a){mQ(this.a,a.a)});v$.prototype.mult=(function(a,d){nQ(this.a,a.a,d.a)});v$.prototype.__destroy__=(function(){oQ(this.a)});v$.prototype.getBasis=(function(){return T(this.a,Module.btMatrix3x3)});v$.prototype.setOrigin=(function(a){pQ(this.a,a.a)});function v$(a,d){this.a=a===fa?qQ():d===fa?rQ(a.a):tQ(a.a,d.a);v$.prototype.b[this.a]=this;this.c=v$}v$.prototype.b={};Module.btTransform=v$;w$.prototype.get_m_restitution=(function(){return qP(this.a)});w$.prototype.get_m_additionalDamping=(function(){return rP(this.a)});w$.prototype.set_m_mass=(function(a){k[this.a]=a});w$.prototype.set_m_additionalDamping=(function(a){sP(this.a,a)});w$.prototype.set_m_angularSleepingThreshold=(function(a){tP(this.a,a)});w$.prototype.set_m_angularDamping=(function(a){uP(this.a,a)});w$.prototype.get_m_linearSleepingThreshold=(function(){return vP(this.a)});w$.prototype.set_m_friction=(function(a){wP(this.a,a)});w$.prototype.get_m_linearDamping=(function(){return xP(this.a)});w$.prototype.get_m_angularDamping=(function(){return yP(this.a)});w$.prototype.get_m_mass=(function(){return k[this.a]});w$.prototype.set_m_linearDamping=(function(a){zP(this.a,a)});function w$(a,d,e,f){this.a=f===fa?vQ(a,d.a,e.a):xQ(a,d.a,e.a,f.a);w$.prototype.b[this.a]=this;this.c=w$}w$.prototype.b={};Module.btRigidBodyConstructionInfo=w$;w$.prototype.set_m_restitution=(function(a){AP(this.a,a)});w$.prototype.get_m_additionalAngularDampingFactor=(function(){return BP(this.a)});w$.prototype.set_m_startWorldTransform=(function(a){yQ(this.a,a.a)});w$.prototype.get_m_additionalAngularDampingThresholdSqr=(function(){return CP(this.a)});w$.prototype.set_m_collisionShape=(function(a){DP(this.a,a.a)});w$.prototype.set_m_additionalAngularDampingThresholdSqr=(function(a){EP(this.a,a)});w$.prototype.set_m_localInertia=(function(a){zQ(this.a,a.a)});w$.prototype.set_m_additionalLinearDampingThresholdSqr=(function(a){FP(this.a,a)});w$.prototype.get_m_collisionShape=(function(){return T(GP(this.a),Module.btCollisionShape)});w$.prototype.set_m_motionState=(function(a){HP(this.a,a.a)});w$.prototype.get_m_friction=(function(){return IP(this.a)});w$.prototype.set_m_linearSleepingThreshold=(function(a){JP(this.a,a)});w$.prototype.get_m_startWorldTransform=(function(){return T(this.a+2,Module.btTransform)});w$.prototype.get_m_localInertia=(function(){return T(this.a+19,Module.btVector3)});w$.prototype.get_m_motionState=(function(){return T(KP(this.a),Module.btMotionState)});w$.prototype.__destroy__=(function(){AQ(this.a)});w$.prototype.get_m_additionalDampingFactor=(function(){return LP(this.a)});w$.prototype.get_m_additionalLinearDampingThresholdSqr=(function(){return MP(this.a)});w$.prototype.set_m_additionalDampingFactor=(function(a){BQ(this.a,a)});w$.prototype.get_m_angularSleepingThreshold=(function(){return CQ(this.a)});w$.prototype.set_m_additionalAngularDampingFactor=(function(a){DQ(this.a,a)});x$.prototype.set_m_transformB=(function(a){OQ(this.a,a.a)});function x$(){this.a=PQ();x$.prototype.b[this.a]=this;this.c=x$}x$.prototype.b={};Module.ClosestPointInput=x$;x$.prototype.get_m_maximumDistanceSquared=(function(){return EQ(this.a)});x$.prototype.set_m_transformA=(function(a){xi(this.a,a.a)});x$.prototype.get_m_transformA=(function(){return T(this.a,Module.btTransform)});x$.prototype.get_m_transformB=(function(){return T(this.a+16,Module.btTransform)});x$.prototype.__destroy__=(function(){RQ(this.a)});x$.prototype.set_m_stackAlloc=(function(a){FQ(this.a,a.a)});x$.prototype.get_m_stackAlloc=(function(){return T(GQ(this.a),Module.btStackAlloc)});x$.prototype.set_m_maximumDistanceSquared=(function(a){HQ(this.a,a)});y$.prototype.calculateLocalInertia=(function(a,d){SQ(this.a,a,d.a)});y$.prototype.getLocalAabbMax=(function(){return T(this.a+8,Module.btVector3)});function y$(a,d,e,f,g){this.a=e===fa?xR(a.a,d):f===fa?zR(a.a,d,e):g===fa?AR(a.a,d,e.a,f.a):CR(a.a,d,e.a,f.a,g);y$.prototype.b[this.a]=this;this.c=y$}y$.prototype.b={};Module.btBvhTriangleMeshShape=y$;y$.prototype.serializeSingleTriangleInfoMap=(function(a){UQ(this.a,a.a)});y$.prototype.serialize=(function(a,d){return VQ(this.a,a,d.a)});y$.prototype.localGetSupportingVertex=(function(a){return T(WQ(this.a,a.a),Module.btVector3)});y$.prototype.getLocalScaling=(function(){return T(ZQ(this.a),Module.btVector3)});y$.prototype.getOwnsBvh=(function(){return IQ(this.a)});y$.prototype.getMeshInterface=(function(){return T(JQ(this.a),Module.btStridingMeshInterface)});y$.prototype.processAllTriangles=(function(a,d,e){$Q(this.a,a.a,d.a,e.a)});y$.prototype.refitTree=(function(a,d){aR(this.a,a.a,d.a)});y$.prototype.calculateSerializeBufferSize=(function(){return bR(this.a)});y$.prototype.setUserPointer=(function(a){Je(this.a,a)});y$.prototype.performRaycast=(function(a,d,e){cR(this.a,a.a,d.a,e.a)});y$.prototype.setTriangleInfoMap=(function(a){KQ(this.a,a.a)});y$.prototype.usesQuantizedAabbCompression=(function(){return LQ(this.a)});y$.prototype.getName=(function(){return dR(this.a)});y$.prototype.getTriangleInfoMap=(function(){return T(MQ(this.a),Module.btTriangleInfoMap)});y$.prototype.isCompound=(function(){return Ge(this.a)});y$.prototype.isPolyhedral=(function(){return Ye(this.a)});y$.prototype.setLocalScaling=(function(a){eR(this.a,a.a)});y$.prototype.getAabb=(function(a,d,e){fR(this.a,a.a,d.a,e.a)});y$.prototype.getOptimizedBvh=(function(){return T(NQ(this.a),Module.btOptimizedBvh)});y$.prototype.getLocalAabbMin=(function(){return T(this.a+4,Module.btVector3)});y$.prototype.getContactBreakingThreshold=(function(a){return gR(this.a,a)});y$.prototype.isConvex=(function(){return xf(this.a)});y$.prototype.isInfinite=(function(){return zf(this.a)});y$.prototype.buildOptimizedBvh=(function(){hR(this.a)});y$.prototype.isConcave=(function(){return Uf(this.a)});y$.prototype.getUserPointer=(function(){return Me(this.a)});y$.prototype.isNonMoving=(function(){return Bf(this.a)});y$.prototype.getMargin=(function(){return iR(this.a)});y$.prototype.recalcLocalAabb=(function(){jR(this.a)});y$.prototype.setMargin=(function(a){kR(this.a,a)});y$.prototype.partialRefitTree=(function(a,d){lR(this.a,a.a,d.a)});y$.prototype.performConvexcast=(function(a,d,e,f,g){mR(this.a,a.a,d.a,e.a,f.a,g.a)});y$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(nR(this.a,a.a),Module.btVector3)});y$.prototype.isSoftBody=(function(){return Kf(this.a)});y$.prototype.__destroy__=(function(){qR(this.a)});y$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});y$.prototype.getBoundingSphere=(function(a,d){rR(this.a,a.a,d)});y$.prototype.getAngularMotionDisc=(function(){return sR(this.a)});y$.prototype.serializeSingleShape=(function(a){tR(this.a,a.a)});y$.prototype.getShapeType=(function(){return Ie(this.a)});y$.prototype.serializeSingleBvh=(function(a){uR(this.a,a.a)});y$.prototype.setOptimizedBvh=(function(a,d){d===fa?vR(this.a,a.a):wR(this.a,a.a,d.a)});y$.prototype.isConvex2d=(function(){return Gf(this.a)});function Hub(){aa("btOverlapFilterCallback is abstract!")}Hub.prototype.b={};Module.btOverlapFilterCallback=Hub;Hub.prototype.needBroadphaseCollision=(function(a,d){return gS(this.a,a.a,d.a)});function z$(){aa("btActivatingCollisionAlgorithm is abstract!")}z$.prototype.b={};Module.btActivatingCollisionAlgorithm=z$;z$.prototype.getAllContactManifolds=(function(a){hS(this.a,a)});z$.prototype.calculateTimeOfImpact=(function(a,d,e,f){return iS(this.a,a.a,d.a,e.a,f.a)});z$.prototype.processCollision=(function(a,d,e,f){jS(this.a,a.a,d.a,e.a,f.a)});A$.prototype.getRigidBodyB=(function(){return T(DR(this.a),Module.btRigidBody)});A$.prototype.getRigidBodyA=(function(){return T(ER(this.a),Module.btRigidBody)});A$.prototype.getAngDepth=(function(){return FR(this.a)});A$.prototype.buildJacobian=(function(){kS(this.a)});A$.prototype.getTargetAngMotorVelocity=(function(){return GR(this.a)});A$.prototype.getAngularPos=(function(){return HR(this.a)});A$.prototype.setRestitutionLimAng=(function(a){IR(this.a,a)});A$.prototype.getParam=(function(a,d){return d===fa?lS(this.a,a):mS(this.a,a,d)});A$.prototype.getInfo1=(function(a){nS(this.a,a.a)});A$.prototype.getInfo2=(function(a){oS(this.a,a.a)});A$.prototype.isEnabled=(function(){return Ap(this.a)});A$.prototype.getPoweredLinMotor=(function(){return JR(this.a)});A$.prototype.setUseFrameOffset=(function(a){pS(this.a,a)});A$.prototype.setSoftnessLimLin=(function(a){KR(this.a,a)});A$.prototype.getAncorInA=(function(){return T(qS(this.a),Module.btVector3)});A$.prototype.getAncorInB=(function(){return T(tS(this.a),Module.btVector3)});A$.prototype.setDampingDirAng=(function(a){LR(this.a,a)});A$.prototype.getSolveLinLimit=(function(){return MR(this.a)});A$.prototype.getUseFrameOffset=(function(){return NR(this.a)});A$.prototype.getMaxAngMotorForce=(function(){return OR(this.a)});A$.prototype.setRestitutionDirAng=(function(a){PR(this.a,a)});A$.prototype.setupSolverConstraint=(function(a,d,e,f){wS(this.a,a,d,e,f)});A$.prototype.needsFeedback=(function(){return Fp(this.a)});A$.prototype.getMaxLinMotorForce=(function(){return QR(this.a)});A$.prototype.getObjectType=(function(){return xS(this.a)});A$.prototype.setDampingOrthoLin=(function(a){RR(this.a,a)});A$.prototype.getSolveAngLimit=(function(){return SR(this.a)});A$.prototype.setPoweredAngMotor=(function(a){yS(this.a,a)});A$.prototype.enableFeedback=(function(a){zS(this.a,a)});A$.prototype.getLinearPos=(function(){return TR(this.a)});A$.prototype.getCalculatedTransformB=(function(){return T(this.a+223,Module.btTransform)});A$.prototype.getCalculatedTransformA=(function(){return T(this.a+207,Module.btTransform)});A$.prototype.testAngLimits=(function(){AS(this.a)});A$.prototype.get_m_objectType=(function(){return UR(this.a)});A$.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});A$.prototype.setDampingDirLin=(function(a){VR(this.a,a)});A$.prototype.getUpperAngLimit=(function(){return WR(this.a)});A$.prototype.setUpperAngLimit=(function(a){BS(this.a,a)});A$.prototype.getRestitutionLimAng=(function(){return XR(this.a)});A$.prototype.getSoftnessOrthoLin=(function(){return YR(this.a)});A$.prototype.setLowerLinLimit=(function(a){ZR(this.a,a)});A$.prototype.getRestitutionDirLin=(function(){return $R(this.a)});A$.prototype.getInfo1NonVirtual=(function(a){CS(0,a.a)});A$.prototype.setRestitutionLimLin=(function(a){aS(this.a,a)});A$.prototype.getUid=(function(){return Ip(this.a)});A$.prototype.setTargetLinMotorVelocity=(function(a){bS(this.a,a)});A$.prototype.getUpperLinLimit=(function(){return cS(this.a)});A$.prototype.setMaxLinMotorForce=(function(a){dS(this.a,a)});A$.prototype.getLowerAngLimit=(function(){return eS(this.a)});A$.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});A$.prototype.setSoftnessDirLin=(function(a){fS(this.a,a)});A$.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});A$.prototype.getInfo2NonVirtual=(function(a,d,e,f,g,h,i){DS(this.a,a.a,d.a,e.a,f.a,g.a,h,i)});A$.prototype.set_m_objectType=(function(a){ES(this.a,a)});A$.prototype.getFrameOffsetA=(function(){return T(this.a+13,Module.btTransform)});A$.prototype.getFrameOffsetB=(function(){return T(this.a+29,Module.btTransform)});A$.prototype.getDampingDirAng=(function(){return FS(this.a)});A$.prototype.getRestitutionLimLin=(function(){return GS(this.a)});A$.prototype.getSoftnessOrthoAng=(function(){return HS(this.a)});A$.prototype.setSoftnessOrthoLin=(function(a){IS(this.a,a)});A$.prototype.setSoftnessLimAng=(function(a){JS(this.a,a)});A$.prototype.getDampingDirLin=(function(){return KS(this.a)});A$.prototype.getDbgDrawSize=(function(){return Dp(this.a)});A$.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});A$.prototype.getSoftnessLimLin=(function(){return LS(this.a)});A$.prototype.setEnabled=(function(a){jT(this.a,a)});A$.prototype.setPoweredLinMotor=(function(a){kT(this.a,a)});A$.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});A$.prototype.calculateTransforms=(function(a,d){lT(this.a,a.a,d.a)});A$.prototype.getLinDepth=(function(){return mT(this.a)});A$.prototype.serialize=(function(a,d){return nT(this.a,a,d.a)});A$.prototype.getDampingLimLin=(function(){return MS(this.a)});A$.prototype.getRestitutionDirAng=(function(){return NS(this.a)});A$.prototype.solveConstraintObsolete=(function(a,d,e){oT(this.a,a.a,d.a,e)});A$.prototype.getAppliedImpulse=(function(){return Op(this.a)});A$.prototype.setParam=(function(a,d,e){e===fa?pT(this.a,a,d):qT(this.a,a,d,e)});A$.prototype.getDampingLimAng=(function(){return OS(this.a)});A$.prototype.setRestitutionOrthoLin=(function(a){PS(this.a,a)});A$.prototype.setRestitutionDirLin=(function(a){QS(this.a,a)});A$.prototype.setDampingLimAng=(function(a){RS(this.a,a)});function A$(a,d,e,f,g){this.a=f===fa?rT(a.a,d.a,e):tT(a.a,d.a,e.a,f.a,g);A$.prototype.b[this.a]=this;this.c=A$}A$.prototype.b={};Module.btSliderConstraint=A$;A$.prototype.getUserConstraintId=(function(){return Lo(this.a)});A$.prototype.setSoftnessDirAng=(function(a){SS(this.a,a)});A$.prototype.setUpperLinLimit=(function(a){TS(this.a,a)});A$.prototype.calculateSerializeBufferSize=(function(){return vT(this.a)});A$.prototype.setTargetAngMotorVelocity=(function(a){US(this.a,a)});A$.prototype.getSoftnessDirAng=(function(){return VS(this.a)});A$.prototype.setMaxAngMotorForce=(function(a){WS(this.a,a)});A$.prototype.setLowerAngLimit=(function(a){wT(this.a,a)});A$.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});A$.prototype.getConstraintType=(function(){return Cp(this.a)});A$.prototype.getPoweredAngMotor=(function(){return XS(this.a)});A$.prototype.getDampingOrthoAng=(function(){return YS(this.a)});A$.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});A$.prototype.getRestitutionOrthoLin=(function(){return ZS(this.a)});A$.prototype.getTargetLinMotorVelocity=(function(){return $S(this.a)});A$.prototype.testLinLimits=(function(){xT(this.a)});A$.prototype.getLowerLinLimit=(function(){return aT(this.a)});A$.prototype.setDampingOrthoAng=(function(a){bT(this.a,a)});A$.prototype.getUserConstraintType=(function(){return Np(this.a)});A$.prototype.setRestitutionOrthoAng=(function(a){cT(this.a,a)});A$.prototype.getRestitutionOrthoAng=(function(){return dT(this.a)});A$.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});A$.prototype.getDampingOrthoLin=(function(){return eT(this.a)});A$.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});A$.prototype.getSoftnessLimAng=(function(){return fT(this.a)});A$.prototype.__destroy__=(function(){yT(this.a)});A$.prototype.setSoftnessOrthoAng=(function(a){gT(this.a,a)});A$.prototype.setDampingLimLin=(function(a){hT(this.a,a)});A$.prototype.setFrames=(function(a,d){zT(this.a,a.a,d.a)});A$.prototype.getSoftnessDirLin=(function(){return iT(this.a)});A$.prototype.getUseLinearReferenceFrameA=(function(){return AT(this.a)});B$.prototype.set_m_suspensionCompression=(function(a){BT(this.a,a)});B$.prototype.set_m_maxSuspensionTravelCm=(function(a){CT(this.a,a)});B$.prototype.get_m_maxSuspensionTravelCm=(function(){return DT(this.a)});B$.prototype.set_m_suspensionStiffness=(function(a){k[this.a]=a});B$.prototype.get_m_frictionSlip=(function(){return ET(this.a)});B$.prototype.get_m_suspensionDamping=(function(){return FT(this.a)});B$.prototype.get_m_suspensionStiffness=(function(){return k[this.a]});B$.prototype.get_m_suspensionCompression=(function(){return GT(this.a)});B$.prototype.set_m_suspensionDamping=(function(a){HT(this.a,a)});function B$(){this.a=jU();B$.prototype.b[this.a]=this;this.c=B$}B$.prototype.b={};Module.btVehicleTuning=B$;B$.prototype.__destroy__=(function(){kU(this.a)});B$.prototype.set_m_frictionSlip=(function(a){IT(this.a,a)});B$.prototype.set_m_maxSuspensionForce=(function(a){JT(this.a,a)});B$.prototype.get_m_maxSuspensionForce=(function(){return KT(this.a)});function C$(){aa("btContactConstraint is abstract!")}C$.prototype.b={};Module.btContactConstraint=C$;C$.prototype.getRigidBodyB=(function(){return T(Ho(this.a),Module.btRigidBody)});C$.prototype.buildJacobian=(function(){lU(this.a)});C$.prototype.getRigidBodyA=(function(){return T(Io(this.a),Module.btRigidBody)});C$.prototype.set_m_objectType=(function(a){LT(this.a,a)});C$.prototype.serialize=(function(a,d){return mU(this.a,a,d.a)});C$.prototype.enableFeedback=(function(a){nU(this.a,a)});C$.prototype.getContactManifold=(function(){return T(this.a+11,Module.btPersistentManifold)});C$.prototype.getUserConstraintId=(function(){return Lo(this.a)});C$.prototype.get_m_objectType=(function(){return MT(this.a)});C$.prototype.setParam=(function(a,d,e){e===fa?oU(this.a,a,d):pU(this.a,a,d,e)});C$.prototype.getParam=(function(a,d){return d===fa?qU(this.a,a):rU(this.a,a,d)});C$.prototype.getInfo1=(function(a){sU(this.a,a.a)});C$.prototype.getInfo2=(function(a){tU(this.a,a.a)});C$.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});C$.prototype.calculateSerializeBufferSize=(function(){return uU(this.a)});C$.prototype.isEnabled=(function(){return Ap(this.a)});C$.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});C$.prototype.setContactManifold=(function(a){vU(this.a,a.a)});C$.prototype.getConstraintType=(function(){return Cp(this.a)});C$.prototype.getDbgDrawSize=(function(){return Dp(this.a)});C$.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});C$.prototype.needsFeedback=(function(){return Fp(this.a)});C$.prototype.getObjectType=(function(){return wU(this.a)});C$.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});C$.prototype.setEnabled=(function(a){xU(this.a,a)});C$.prototype.getUid=(function(){return Ip(this.a)});C$.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});C$.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});C$.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});C$.prototype.__destroy__=(function(){yU(this.a)});C$.prototype.setupSolverConstraint=(function(a,d,e,f){zU(this.a,a,d,e,f)});C$.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});C$.prototype.getUserConstraintType=(function(){return Np(this.a)});C$.prototype.solveConstraintObsolete=(function(a,d,e){AU(this.a,a.a,d.a,e)});C$.prototype.getAppliedImpulse=(function(){return Op(this.a)});C$.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});D$.prototype.get_m_contactCFM1=(function(){return NT(this.a)});D$.prototype.get_m_contactCFM2=(function(){return OT(this.a)});D$.prototype.set_m_appliedImpulse=(function(a){PT(this.a,a)});D$.prototype.set_m_contactCFM1=(function(a){QT(this.a,a)});D$.prototype.get_m_combinedFriction=(function(){return RT(this.a)});function D$(a,d,e,f){this.a=a===fa?BU():DU(a.a,d.a,e.a,f);D$.prototype.b[this.a]=this;this.c=D$}D$.prototype.b={};Module.btManifoldPoint=D$;D$.prototype.get_m_partId0=(function(){return ST(this.a)});D$.prototype.get_m_partId1=(function(){return TT(this.a)});D$.prototype.get_m_normalWorldOnB=(function(){return T(this.a+16,Module.btVector3)});D$.prototype.set_m_combinedFriction=(function(a){UT(this.a,a)});D$.prototype.set_m_lateralFrictionDir1=(function(a){FU(this.a,a.a)});D$.prototype.get_m_index1=(function(){return VT(this.a)});D$.prototype.get_m_index0=(function(){return WT(this.a)});D$.prototype.set_m_userPersistentData=(function(a){XT(this.a,a)});D$.prototype.set_m_contactCFM2=(function(a){YT(this.a,a)});D$.prototype.get_m_appliedImpulse=(function(){return ZT(this.a)});D$.prototype.get_m_userPersistentData=(function(){return $T(this.a)});D$.prototype.getDistance=(function(){return aU(this.a)});D$.prototype.get_m_lifeTime=(function(){return bU(this.a)});D$.prototype.getPositionWorldOnB=(function(){return T(this.a+8,Module.btVector3)});D$.prototype.getPositionWorldOnA=(function(){return T(this.a+12,Module.btVector3)});D$.prototype.set_m_partId0=(function(a){cU(this.a,a)});D$.prototype.set_m_partId1=(function(a){dU(this.a,a)});D$.prototype.set_m_positionWorldOnA=(function(a){GU(this.a,a.a)});D$.prototype.setDistance=(function(a){eU(this.a,a)});D$.prototype.set_m_positionWorldOnB=(function(a){HU(this.a,a.a)});D$.prototype.get_m_appliedImpulseLateral1=(function(){return fU(this.a)});D$.prototype.get_m_appliedImpulseLateral2=(function(){return gU(this.a)});D$.prototype.__destroy__=(function(){IU(this.a)});D$.prototype.set_m_lateralFrictionInitialized=(function(a){hU(this.a,a)});D$.prototype.getLifeTime=(function(){return Fk(this.a)});D$.prototype.set_m_index0=(function(a){iU(this.a,a)});D$.prototype.get_m_contactMotion1=(function(){return JU(this.a)});D$.prototype.get_m_contactMotion2=(function(){return KU(this.a)});D$.prototype.set_m_index1=(function(a){LU(this.a,a)});D$.prototype.get_m_lateralFrictionDir1=(function(){return T(this.a+37,Module.btVector3)});D$.prototype.set_m_normalWorldOnB=(function(a){yxa(this.a,a.a)});D$.prototype.set_m_combinedRestitution=(function(a){MU(this.a,a)});D$.prototype.get_m_positionWorldOnA=(function(){return T(this.a+12,Module.btVector3)});D$.prototype.get_m_lateralFrictionDir2=(function(){return T(this.a+41,Module.btVector3)});D$.prototype.get_m_positionWorldOnB=(function(){return T(this.a+8,Module.btVector3)});D$.prototype.set_m_lateralFrictionDir2=(function(a){zxa(this.a,a.a)});D$.prototype.set_m_appliedImpulseLateral1=(function(a){NU(this.a,a)});D$.prototype.set_m_appliedImpulseLateral2=(function(a){OU(this.a,a)});D$.prototype.get_m_lateralFrictionInitialized=(function(){return PU(this.a)});D$.prototype.set_m_localPointB=(function(a){Axa(this.a,a.a)});D$.prototype.set_m_localPointA=(function(a){Bxa(this.a,a.a)});D$.prototype.get_m_combinedRestitution=(function(){return QU(this.a)});D$.prototype.set_m_contactMotion1=(function(a){RU(this.a,a)});D$.prototype.set_m_contactMotion2=(function(a){SU(this.a,a)});D$.prototype.get_m_localPointB=(function(){return T(this.a+4,Module.btVector3)});D$.prototype.get_m_localPointA=(function(){return T(this.a,Module.btVector3)});D$.prototype.set_m_distance1=(function(a){TU(this.a,a)});D$.prototype.get_m_distance1=(function(){return UU(this.a)});D$.prototype.getAppliedImpulse=(function(){return VU(this.a)});D$.prototype.set_m_lifeTime=(function(a){WU(this.a,a)});function E$(){aa("btStridingMeshInterface is abstract!")}E$.prototype.b={};Module.btStridingMeshInterface=E$;E$.prototype.getLockedReadOnlyVertexIndexBase=(function(a,d,e,f,g,h,i,j,l){l===fa?Dxa(this.a,a,d,e,f,g,h,i,j):Exa(this.a,a,d,e,f,g,h,i,j,l)});E$.prototype.preallocateIndices=(function(a){Fxa(this.a,a)});E$.prototype.calculateAabbBruteForce=(function(a,d){vy(this.a,a.a,d.a)});E$.prototype.serialize=(function(a,d){return Hxa(this.a,a,d.a)});E$.prototype.preallocateVertices=(function(a){Ixa(this.a,a)});E$.prototype.calculateSerializeBufferSize=(function(){return Jxa(this.a)});E$.prototype.setScaling=(function(a){Iy(this.a,a.a)});E$.prototype.getScaling=(function(){return T(this.a+1,Module.btVector3)});E$.prototype.setPremadeAabb=(function(a,d){Mxa(this.a,a.a,d.a)});E$.prototype.InternalProcessAllTriangles=(function(a,d,e){Nxa(this.a,a.a,d.a,e.a)});E$.prototype.getPremadeAabb=(function(a,d){Oxa(this.a,a.a,d.a)});E$.prototype.getNumSubParts=(function(){return Pxa(this.a)});E$.prototype.getLockedVertexIndexBase=(function(a,d,e,f,g,h,i,j,l){l===fa?Qxa(this.a,a,d,e,f,g,h,i,j):Rxa(this.a,a,d,e,f,g,h,i,j,l)});E$.prototype.hasPremadeAabb=(function(){return Sxa(this.a)});E$.prototype.unLockVertexBase=(function(a){Txa(this.a,a)});E$.prototype.unLockReadOnlyVertexBase=(function(a){Uxa(this.a,a)});F$.prototype.getRigidBodyB=(function(){return T(Ho(this.a),Module.btRigidBody)});F$.prototype.getInfo2NonVirtual=(function(a,d,e){YU(this.a,a.a,d.a,e.a)});F$.prototype.setParam=(function(a,d,e){e===fa?Xxa(this.a,a,d):Yxa(this.a,a,d,e)});F$.prototype.getUid=(function(){return Ip(this.a)});F$.prototype.set_m_objectType=(function(a){XU(this.a,a)});F$.prototype.setEnabled=(function(a){$xa(this.a,a)});F$.prototype.setUserConstraintId=(function(a){Bp(this.a,a)});F$.prototype.serialize=(function(a,d){return bya(this.a,a,d.a)});F$.prototype.buildJacobian=(function(){cya(this.a)});F$.prototype.getUserConstraintId=(function(){return Lo(this.a)});F$.prototype.get_m_objectType=(function(){return vxa(this.a)});F$.prototype.getRigidBodyA=(function(){return T(Io(this.a),Module.btRigidBody)});F$.prototype.getParam=(function(a,d){return d===fa?fya(this.a,a):gya(this.a,a,d)});F$.prototype.set_m_useSolveConstraintObsolete=(function(a){wxa(this.a,a)});function F$(a,d,e,f){this.a=e===fa?hya(a.a,d.a):jya(a.a,d.a,e.a,f.a);F$.prototype.b[this.a]=this;this.c=F$}F$.prototype.b={};Module.btPoint2PointConstraint=F$;F$.prototype.getObjectType=(function(){return lya(this.a)});F$.prototype.getInfo2=(function(a){mya(this.a,a.a)});F$.prototype.calculateSerializeBufferSize=(function(){return nya(this.a)});F$.prototype.getPivotInA=(function(){return T(this.a+74,Module.btVector3)});F$.prototype.getPivotInB=(function(){return T(this.a+78,Module.btVector3)});F$.prototype.get_m_setting=(function(){return T(this.a+86,Module.btConstraintSetting)});F$.prototype.isEnabled=(function(){return Ap(this.a)});F$.prototype.set_m_setting=(function(a){rya(this.a,a.a)});F$.prototype.getConstraintType=(function(){return Cp(this.a)});F$.prototype.enableFeedback=(function(a){tya(this.a,a)});F$.prototype.internalSetAppliedImpulse=(function(a){Ep(this.a,a)});F$.prototype.needsFeedback=(function(){return Fp(this.a)});F$.prototype.setPivotA=(function(a){xya(this.a,a.a)});F$.prototype.getUserConstraintPtr=(function(){return Gp(this.a)});F$.prototype.setPivotB=(function(a){Eya(this.a,a.a)});F$.prototype.getInfo1NonVirtual=(function(a){$U(this.a,a.a)});F$.prototype.getInfo1=(function(a){Gya(this.a,a.a)});F$.prototype.getDbgDrawSize=(function(){return Dp(this.a)});F$.prototype.setDbgDrawSize=(function(a){Jp(this.a,a)});F$.prototype.setUserConstraintType=(function(a){Kp(this.a,a)});F$.prototype.setBreakingImpulseThreshold=(function(a){zp(this.a,a)});F$.prototype.internalGetAppliedImpulse=(function(){return Lp(this.a)});F$.prototype.get_m_useSolveConstraintObsolete=(function(){return zya(this.a)});F$.prototype.__destroy__=(function(){Mya(this.a)});F$.prototype.setupSolverConstraint=(function(a,d,e,f){Nya(this.a,a,d,e,f)});F$.prototype.updateRHS=pa();F$.prototype.getBreakingImpulseThreshold=(function(){return Mp(this.a)});F$.prototype.getUserConstraintType=(function(){return Np(this.a)});F$.prototype.solveConstraintObsolete=(function(a,d,e){Rya(this.a,a.a,d.a,e)});F$.prototype.getAppliedImpulse=(function(){return Op(this.a)});F$.prototype.setUserConstraintPtr=(function(a){Pp(this.a,a)});G$.prototype.calculateLocalInertia=(function(a,d){Uya(this.a,a,d.a)});G$.prototype.isCompound=(function(){return Ge(this.a)});G$.prototype.localGetSupportingVertex=(function(a){return T(Wya(this.a,a.a),Module.btVector3)});G$.prototype.setUserPointer=(function(a){Je(this.a,a)});G$.prototype.getUpAxis=(function(){return dF(this.a)});G$.prototype.serialize=(function(a,d){return $ya(this.a,a,d.a)});G$.prototype.getLocalScaling=(function(){return T(aza(this.a),Module.btVector3)});G$.prototype.getNumPreferredPenetrationDirections=(function(){return bza(this.a)});G$.prototype.isPolyhedral=(function(){return Ye(this.a)});G$.prototype.getRadius=(function(){return dza(this.a)});G$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});G$.prototype.calculateSerializeBufferSize=(function(){return fza(this.a)});G$.prototype.getName=(function(){return gza(this.a)});G$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});G$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(iza(this.a,a.a),Module.btVector3)});G$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});G$.prototype.setLocalScaling=(function(a){lza(this.a,a.a)});G$.prototype.getAabb=(function(a,d,e){mza(this.a,a.a,d.a,e.a)});G$.prototype.getMarginNV=(function(){return Le(this.a)});G$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(oza(this.a,a.a),Module.btVector3)});G$.prototype.getContactBreakingThreshold=(function(a){return qza(this.a,a)});G$.prototype.isConvex=(function(){return xf(this.a)});G$.prototype.isInfinite=(function(){return zf(this.a)});G$.prototype.getUserPointer=(function(){return Me(this.a)});G$.prototype.isNonMoving=(function(){return Bf(this.a)});G$.prototype.getMargin=(function(){return vza(this.a)});G$.prototype.getPreferredPenetrationDirection=(function(a,d){wza(this.a,a,d.a)});G$.prototype.getHalfExtentsWithoutMargin=(function(){return T(this.a+7,Module.btVector3)});G$.prototype.isConvex2d=(function(){return Gf(this.a)});G$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(zza(this.a,a.a),Module.btVector3)});G$.prototype.isSoftBody=(function(){return Kf(this.a)});G$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});G$.prototype.__destroy__=(function(){Dza(this.a)});G$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){Eza(this.a,a.a,d.a,e)});G$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});G$.prototype.getBoundingSphere=(function(a,d){Gza(this.a,a.a,d)});G$.prototype.getAngularMotionDisc=(function(){return Hza(this.a)});G$.prototype.serializeSingleShape=(function(a){Iza(this.a,a.a)});G$.prototype.getAabbSlow=(function(a,d,e){Jza(this.a,a.a,d.a,e.a)});function G$(a){this.a=Uza(a.a);G$.prototype.b[this.a]=this;this.c=G$}G$.prototype.b={};Module.btCylinderShapeZ=G$;G$.prototype.setMargin=(function(a){Kza(this.a,a)});G$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});G$.prototype.getHalfExtentsWithMargin=(function(){return T(Mza(this.a),Module.btVector3)});G$.prototype.isConcave=(function(){return Uf(this.a)});G$.prototype.getShapeType=(function(){return Ie(this.a)});H$.prototype.get_m_subtreeSize=(function(){return Aya(this.a)});H$.prototype.get_m_rootNodeIndex=(function(){return Bya(this.a)});H$.prototype.__destroy__=(function(){Qza(this.a)});H$.prototype.set_m_rootNodeIndex=(function(a){Cya(this.a,a)});H$.prototype.setAabbFromQuantizeNode=(function(a){ZU(this.a,a.a)});function H$(){this.a=Sza();H$.prototype.b[this.a]=this;this.c=H$}H$.prototype.b={};Module.btBvhSubtreeInfo=H$;H$.prototype.set_m_subtreeSize=(function(a){Wza(this.a,a)});function I$(){aa("btMotionState is abstract!")}I$.prototype.b={};Module.btMotionState=I$;I$.prototype.setWorldTransform=(function(a){vAa(this.a,a.a)});I$.prototype.getWorldTransform=(function(a){wAa(this.a,a.a)});J$.prototype.get_m_convexToWorld=(function(){return T(this.a+8,Module.btVector3)});J$.prototype.__destroy__=(function(){xAa(this.a)});J$.prototype.set_m_collisionFilterGroup=(function(a){Yza(this.a,a)});J$.prototype.needsCollision=(function(a){return yAa(this.a,a.a)});J$.prototype.set_m_closestHitFraction=(function(a){Zza(this.a,a)});J$.prototype.get_m_closestHitFraction=(function(){return $za(this.a)});J$.prototype.get_m_hitCollisionObject=(function(){return T(aAa(this.a),Module.btCollisionObject)});J$.prototype.addSingleResult=(function(a,d){return zAa(this.a,a.a,d)});J$.prototype.set_m_hitCollisionObject=(function(a){bAa(this.a,a.a)});J$.prototype.get_m_hitNormalWorld=(function(){return T(this.a+12,Module.btVector3)});J$.prototype.get_m_hitPointWorld=(function(){return T(this.a+16,Module.btVector3)});J$.prototype.get_m_collisionFilterMask=(function(){return eAa(this.a)});J$.prototype.hasHit=(function(){return cz(this.a)});J$.prototype.set_m_hitPointWorld=(function(a){BAa(this.a,a.a)});J$.prototype.set_m_convexToWorld=(function(a){CAa(this.a,a.a)});function J$(a,d){this.a=DAa(a.a,d.a);J$.prototype.b[this.a]=this;this.c=J$}J$.prototype.b={};Module.ClosestConvexResultCallback=J$;J$.prototype.set_m_hitNormalWorld=(function(a){EAa(this.a,a.a)});J$.prototype.get_m_convexFromWorld=(function(){return T(this.a+4,Module.btVector3)});J$.prototype.get_m_collisionFilterGroup=(function(){return gAa(this.a)});J$.prototype.set_m_convexFromWorld=(function(a){FAa(this.a,a.a)});J$.prototype.set_m_collisionFilterMask=(function(a){hAa(this.a,a)});K$.prototype.updateSeparatingDistance=(function(a,d){HAa(this.a,a.a,d.a)});K$.prototype.__destroy__=(function(){JAa(this.a)});function K$(a,d){this.a=KAa(a,d);K$.prototype.b[this.a]=this;this.c=K$}K$.prototype.b={};Module.btConvexSeparatingDistanceUtil=K$;K$.prototype.getConservativeSeparatingDistance=(function(){return iAa(this.a)});K$.prototype.initSeparatingDistance=(function(a,d,e,f){OAa(this.a,a.a,d,e.a,f.a)});L$.prototype.get_m_clientObject=(function(){return c[this.a]});L$.prototype.isInfinite=(function(a){return Af(a)});L$.prototype.set_m_clientObject=(function(a){c[this.a]=a});L$.prototype.set_m_multiSapParentProxy=(function(a){lAa(this.a,a)});function L$(a,d,e,f,g,h){this.a=a===fa?QAa():h===fa?RAa(a.a,d.a,e,f,g):SAa(a.a,d.a,e,f,g,h);L$.prototype.b[this.a]=this;this.c=L$}L$.prototype.b={};Module.btBroadphaseProxy=L$;L$.prototype.isCompound=(function(a){return He(a)});L$.prototype.isPolyhedral=(function(a){return bf(a)});L$.prototype.get_m_aabbMin=(function(){return T(this.a+5,Module.btVector3)});L$.prototype.set_m_uniqueId=(function(a){nAa(this.a,a)});L$.prototype.isConvex=(function(a){return yf(a)});L$.prototype.get_m_collisionFilterMask=(function(){return oAa(this.a)});L$.prototype.getUid=(function(){return YG(this.a)});L$.prototype.get_m_aabbMax=(function(){return T(this.a+9,Module.btVector3)});L$.prototype.isNonMoving=(function(a){return Cf(a)});L$.prototype.set_m_aabbMin=(function(a){YAa(this.a,a.a)});L$.prototype.set_m_collisionFilterGroup=(function(a){qAa(this.a,a)});L$.prototype.isConvex2d=(function(a){return Hf(a)});L$.prototype.isSoftBody=(function(a){return Lf(a)});L$.prototype.set_m_aabbMax=(function(a){aBa(this.a,a.a)});L$.prototype.__destroy__=(function(){bBa(this.a)});L$.prototype.get_m_uniqueId=(function(){return rAa(this.a)});L$.prototype.set_m_collisionFilterMask=(function(a){sAa(this.a,a)});L$.prototype.isConcave=(function(a){return Yf(a)});L$.prototype.get_m_multiSapParentProxy=(function(){return tAa(this.a)});L$.prototype.get_m_collisionFilterGroup=(function(){return uAa(this.a)});M$.prototype.getLockedReadOnlyVertexIndexBase=(function(a,d,e,f,g,h,i,j,l){l===fa?dBa(this.a,a,d,e,f,g,h,i,j):eBa(this.a,a,d,e,f,g,h,i,j,l)});M$.prototype.preallocateIndices=(function(a){fBa(this.a,a)});M$.prototype.calculateAabbBruteForce=(function(a,d){vy(this.a,a.a,d.a)});M$.prototype.__destroy__=(function(){hBa(this.a)});M$.prototype.preallocateVertices=(function(a){iBa(this.a,a)});M$.prototype.serialize=(function(a,d){return jBa(this.a,a,d.a)});M$.prototype.getIndexedMeshArray=(function(){return this.a+5});function M$(a,d,e,f,g,h){this.a=a===fa?lBa():wCa(a,d,e,f,g,h);M$.prototype.b[this.a]=this;this.c=M$}M$.prototype.b={};Module.btTriangleIndexVertexArray=M$;M$.prototype.setScaling=(function(a){Iy(this.a,a.a)});M$.prototype.getScaling=(function(){return T(this.a+1,Module.btVector3)});M$.prototype.calculateSerializeBufferSize=(function(){return pBa(this.a)});M$.prototype.setPremadeAabb=(function(a,d){qBa(this.a,a.a,d.a)});M$.prototype.InternalProcessAllTriangles=(function(a,d,e){rBa(this.a,a.a,d.a,e.a)});M$.prototype.getPremadeAabb=(function(a,d){sBa(this.a,a.a,d.a)});M$.prototype.addIndexedMesh=(function(a,d){d===fa?tBa(this.a,a.a):zy(this.a,a.a,d)});M$.prototype.getNumSubParts=(function(){return vBa(this.a)});M$.prototype.getLockedVertexIndexBase=(function(a,d,e,f,g,h,i,j,l){l===fa?wBa(this.a,a,d,e,f,g,h,i,j):xBa(this.a,a,d,e,f,g,h,i,j,l)});M$.prototype.hasPremadeAabb=(function(){return yBa(this.a)});M$.prototype.unLockVertexBase=(function(a){zBa(this.a,a)});M$.prototype.unLockReadOnlyVertexBase=(function(a){ABa(this.a,a)});N$.prototype.calculateLocalInertia=(function(a,d){BBa(this.a,a,d.a)});N$.prototype.getNumPlanes=(function(){return CBa(this.a)});N$.prototype.localGetSupportingVertex=(function(a){return T(DBa(this.a,a.a),Module.btVector3)});N$.prototype.setUserPointer=(function(a){Je(this.a,a)});N$.prototype.isInside=(function(a,d){return GBa(this.a,a.a,d)});N$.prototype.getNumVertices=(function(){return HBa(this.a)});N$.prototype.getLocalScaling=(function(){return T(IBa(this.a),Module.btVector3)});N$.prototype.isPolyhedral=(function(){return Ye(this.a)});N$.prototype.getNumPreferredPenetrationDirections=(function(){return KBa(this.a)});N$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(LBa(this.a,a.a),Module.btVector3)});N$.prototype.getVertex=(function(a,d){NBa(this.a,a,d.a)});N$.prototype.getPlaneEquation=(function(a,d){OBa(this.a,a.a,d)});N$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(PBa(this.a,a.a),Module.btVector3)});N$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});N$.prototype.calculateSerializeBufferSize=(function(){return SBa(this.a)});N$.prototype.getNumEdges=(function(){return TBa(this.a)});N$.prototype.getName=(function(){return UBa(this.a)});N$.prototype.getEdge=(function(a,d,e){VBa(this.a,a,d.a,e.a)});N$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});function N$(a){this.a=xCa(a.a);N$.prototype.b[this.a]=this;this.c=N$}N$.prototype.b={};Module.btBoxShape=N$;N$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});N$.prototype.isCompound=(function(){return Ge(this.a)});N$.prototype.setLocalScaling=(function(a){ZBa(this.a,a.a)});N$.prototype.getAabb=(function(a,d,e){$Ba(this.a,a.a,d.a,e.a)});N$.prototype.getMarginNV=(function(){return Le(this.a)});N$.prototype.getContactBreakingThreshold=(function(a){return bCa(this.a,a)});N$.prototype.isConvex=(function(){return xf(this.a)});N$.prototype.isInfinite=(function(){return zf(this.a)});N$.prototype.serialize=(function(a,d){return eCa(this.a,a,d.a)});N$.prototype.getUserPointer=(function(){return Me(this.a)});N$.prototype.isNonMoving=(function(){return Bf(this.a)});N$.prototype.getMargin=(function(){return hCa(this.a)});N$.prototype.getPreferredPenetrationDirection=(function(a,d){iCa(this.a,a,d.a)});N$.prototype.getHalfExtentsWithoutMargin=(function(){return T(this.a+7,Module.btVector3)});N$.prototype.initializePolyhedralFeatures=(function(){return kCa(this.a)});N$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(lCa(this.a,a.a),Module.btVector3)});N$.prototype.isSoftBody=(function(){return Kf(this.a)});N$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});N$.prototype.__destroy__=(function(){pCa(this.a)});N$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){qCa(this.a,a.a,d.a,e)});N$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});N$.prototype.getBoundingSphere=(function(a,d){sCa(this.a,a.a,d)});N$.prototype.getAngularMotionDisc=(function(){return tCa(this.a)});N$.prototype.serializeSingleShape=(function(a){uCa(this.a,a.a)});N$.prototype.getAabbSlow=(function(a,d,e){vCa(this.a,a.a,d.a,e.a)});N$.prototype.getPlane=(function(a,d,e){zCa(this.a,a.a,d.a,e)});N$.prototype.setMargin=(function(a){ACa(this.a,a)});N$.prototype.getConvexPolyhedron=(function(){return yg(this.a)});N$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});N$.prototype.getShapeType=(function(){return Ie(this.a)});N$.prototype.getHalfExtentsWithMargin=(function(){return T(ECa(this.a),Module.btVector3)});N$.prototype.isConcave=(function(){return Uf(this.a)});N$.prototype.isConvex2d=(function(){return Gf(this.a)});function O$(){aa("Result is abstract!")}O$.prototype.b={};Module.Result=O$;O$.prototype.setShapeIdentifiersB=(function(a,d){ICa(this.a,a,d)});O$.prototype.setShapeIdentifiersA=(function(a,d){JCa(this.a,a,d)});O$.prototype.addContactPoint=(function(a,d,e){KCa(this.a,a.a,d.a,e)});function P$(){aa("btPolyhedralConvexAabbCachingShape is abstract!")}P$.prototype.b={};Module.btPolyhedralConvexAabbCachingShape=P$;P$.prototype.calculateLocalInertia=(function(a,d){LCa(this.a,a,d.a)});P$.prototype.getNumPlanes=(function(){return MCa(this.a)});P$.prototype.localGetSupportingVertex=(function(a){return T(NCa(this.a,a.a),Module.btVector3)});P$.prototype.setUserPointer=(function(a){Je(this.a,a)});P$.prototype.isInside=(function(a,d){return QCa(this.a,a.a,d)});P$.prototype.getNumVertices=(function(){return RCa(this.a)});P$.prototype.getLocalScaling=(function(){return T(SCa(this.a),Module.btVector3)});P$.prototype.getNumPreferredPenetrationDirections=(function(){return TCa(this.a)});P$.prototype.isPolyhedral=(function(){return Ye(this.a)});P$.prototype.getVertex=(function(a,d){VCa(this.a,a,d.a)});P$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(WCa(this.a,a.a),Module.btVector3)});P$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});P$.prototype.calculateSerializeBufferSize=(function(){return ZCa(this.a)});P$.prototype.getNumEdges=(function(){return $Ca(this.a)});P$.prototype.getName=(function(){return aDa(this.a)});P$.prototype.getEdge=(function(a,d,e){bDa(this.a,a,d.a,e.a)});P$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});P$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(dDa(this.a,a.a),Module.btVector3)});P$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(fDa(this.a,a.a),Module.btVector3)});P$.prototype.setLocalScaling=(function(a){hDa(this.a,a.a)});P$.prototype.getAabb=(function(a,d,e){iDa(this.a,a.a,d.a,e.a)});P$.prototype.isConvex2d=(function(){return Gf(this.a)});P$.prototype.getContactBreakingThreshold=(function(a){return kDa(this.a,a)});P$.prototype.isConvex=(function(){return xf(this.a)});P$.prototype.isInfinite=(function(){return zf(this.a)});P$.prototype.serialize=(function(a,d){return nDa(this.a,a,d.a)});P$.prototype.getUserPointer=(function(){return Me(this.a)});P$.prototype.isNonMoving=(function(){return Bf(this.a)});P$.prototype.getMargin=(function(){return qDa(this.a)});P$.prototype.recalcLocalAabb=(function(){bh(this.a)});P$.prototype.getPreferredPenetrationDirection=(function(a,d){sDa(this.a,a,d.a)});P$.prototype.setMargin=(function(a){tDa(this.a,a)});P$.prototype.initializePolyhedralFeatures=(function(){return uDa(this.a)});P$.prototype.getMarginNV=(function(){return Le(this.a)});P$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});P$.prototype.isSoftBody=(function(){return Kf(this.a)});P$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});P$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){zDa(this.a,a.a,d.a,e)});P$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});P$.prototype.getBoundingSphere=(function(a,d){BDa(this.a,a.a,d)});P$.prototype.getAngularMotionDisc=(function(){return CDa(this.a)});P$.prototype.serializeSingleShape=(function(a){DDa(this.a,a.a)});P$.prototype.getAabbSlow=(function(a,d,e){EDa(this.a,a.a,d.a,e.a)});P$.prototype.getPlane=(function(a,d,e){FDa(this.a,a.a,d.a,e)});P$.prototype.isCompound=(function(){return Ge(this.a)});P$.prototype.getConvexPolyhedron=(function(){return yg(this.a)});P$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});P$.prototype.getShapeType=(function(){return Ie(this.a)});P$.prototype.isConcave=(function(){return Uf(this.a)});P$.prototype.getNonvirtualAabb=(function(a,d,e,f){eh(this.a,a.a,d.a,e.a,f)});Q$.prototype.calculateLocalInertia=(function(a,d){MDa(this.a,a,d.a)});Q$.prototype.isCompound=(function(){return Ge(this.a)});Q$.prototype.localGetSupportingVertex=(function(a){return T(ODa(this.a,a.a),Module.btVector3)});Q$.prototype.setUserPointer=(function(a){Je(this.a,a)});Q$.prototype.getUpAxis=(function(){return Ke(this.a)});Q$.prototype.serialize=(function(a,d){return SDa(this.a,a,d.a)});Q$.prototype.getLocalScaling=(function(){return T(TDa(this.a),Module.btVector3)});Q$.prototype.getNumPreferredPenetrationDirections=(function(){return UDa(this.a)});Q$.prototype.isPolyhedral=(function(){return Ye(this.a)});Q$.prototype.getRadius=(function(){return cf(this.a)});Q$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});Q$.prototype.calculateSerializeBufferSize=(function(){return YDa(this.a)});Q$.prototype.getName=(function(){return ZDa(this.a)});Q$.prototype.getHalfHeight=(function(){return gf(this.a)});Q$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});Q$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(bEa(this.a,a.a),Module.btVector3)});Q$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(dEa(this.a,a.a),Module.btVector3)});Q$.prototype.setLocalScaling=(function(a){fEa(this.a,a.a)});Q$.prototype.getAabb=(function(a,d,e){gEa(this.a,a.a,d.a,e.a)});Q$.prototype.getMarginNV=(function(){return Le(this.a)});Q$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(iEa(this.a,a.a),Module.btVector3)});Q$.prototype.getContactBreakingThreshold=(function(a){return kEa(this.a,a)});Q$.prototype.isConvex=(function(){return xf(this.a)});Q$.prototype.isInfinite=(function(){return zf(this.a)});function Q$(a,d){this.a=nEa(a,d);Q$.prototype.b[this.a]=this;this.c=Q$}Q$.prototype.b={};Module.btCapsuleShapeX=Q$;Q$.prototype.getUserPointer=(function(){return Me(this.a)});Q$.prototype.isNonMoving=(function(){return Bf(this.a)});Q$.prototype.getMargin=(function(){return rEa(this.a)});Q$.prototype.getPreferredPenetrationDirection=(function(a,d){sEa(this.a,a,d.a)});Q$.prototype.setMargin=(function(a){tEa(this.a,a)});Q$.prototype.isConvex2d=(function(){return Gf(this.a)});Q$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});Q$.prototype.isSoftBody=(function(){return Kf(this.a)});Q$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});Q$.prototype.__destroy__=(function(){yEa(this.a)});Q$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){zEa(this.a,a.a,d.a,e)});Q$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});Q$.prototype.getBoundingSphere=(function(a,d){BEa(this.a,a.a,d)});Q$.prototype.getAngularMotionDisc=(function(){return CEa(this.a)});Q$.prototype.serializeSingleShape=(function(a){DEa(this.a,a.a)});Q$.prototype.getAabbSlow=(function(a,d,e){EEa(this.a,a.a,d.a,e.a)});Q$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});Q$.prototype.isConcave=(function(){return Uf(this.a)});Q$.prototype.getShapeType=(function(){return Ie(this.a)});R$.prototype.nearest=(function(a){return T(IEa(this.a,a.a),Module.btQuaternion)});R$.prototype.setMin=(function(a){AG(this.a,a.a)});R$.prototype.farthest=(function(a){return T(PEa(this.a,a.a),Module.btQuaternion)});R$.prototype.getX=(function(){return k[this.a]});R$.prototype.getY=(function(){return TEa(this.a)});R$.prototype.getZ=(function(){return UEa(this.a)});R$.prototype.setEuler=(function(a,d,e){VEa(this.a,a,d,e)});R$.prototype.op_sub=(function(a){return T(YEa(this.a,a.a),Module.btQuaternion)});R$.prototype.getW=(function(){return ZEa(this.a)});R$.prototype.normalize=(function(){return T(AV(this.a),Module.btQuaternion)});R$.prototype.slerp=(function(a,d){return T(bFa(this.a,a.a,d),Module.btQuaternion)});R$.prototype.inverse=(function(){return T(fFa(this.a),Module.btQuaternion)});R$.prototype.angle=(function(a){return DV(this.a,a.a)});R$.prototype.getAxis=(function(){return T(iFa(this.a),Module.btVector3)});R$.prototype.getIdentity=(function(){return T(mFa(),Module.btQuaternion)});R$.prototype.setMax=(function(a){DG(this.a,a.a)});R$.prototype.op_add=(function(a){return T(rFa(this.a,a.a),Module.btQuaternion)});R$.prototype.op_mul=(function(a){return T(sFa(this.a,a),Module.btQuaternion)});R$.prototype.setRotation=(function(a,d){tFa(this.a,a.a,d)});R$.prototype.setEulerZYX=(function(a,d,e){uFa(this.a,a,d,e)});R$.prototype.setValue=(function(a,d,e,f){f===fa?wFa(this.a,a,d,e):xFa(this.a,a,d,e,f)});function R$(a,d,e,f){this.a=a===fa?yFa():e===fa?zFa(a.a,d):f===fa?AFa(a,d,e):BFa(a,d,e,f);R$.prototype.b[this.a]=this;this.c=R$}R$.prototype.b={};Module.btQuaternion=R$;R$.prototype.op_div=(function(a){return T(CFa(this.a,a),Module.btQuaternion)});R$.prototype.setW=(function(a){iG(this.a,a)});R$.prototype.normalized=(function(){return T(EFa(this.a),Module.btQuaternion)});R$.prototype.setX=(function(a){k[this.a]=a});R$.prototype.setY=(function(a){jG(this.a,a)});R$.prototype.setZ=(function(a){kG(this.a,a)});R$.prototype.__destroy__=(function(){LFa(this.a)});R$.prototype.getAngle=(function(){return KV(this.a)});R$.prototype.length2=(function(){return rd(this.a)});R$.prototype.length=(function(){return BV(this.a)});R$.prototype.w=(function(){return PFa(this.a)});R$.prototype.y=(function(){return QFa(this.a)});R$.prototype.x=(function(){return k[this.a]});R$.prototype.z=(function(){return SFa(this.a)});R$.prototype.dot=(function(a){return yV(this.a,a.a)});S$.prototype.calculateLocalInertia=(function(a,d){UFa(this.a,a,d.a)});S$.prototype.isCompound=(function(){return Ge(this.a)});S$.prototype.localGetSupportingVertex=(function(a){return T(WFa(this.a,a.a),Module.btVector3)});S$.prototype.setUserPointer=(function(a){Je(this.a,a)});S$.prototype.getUpAxis=(function(){return Ke(this.a)});S$.prototype.serialize=(function(a,d){return $Fa(this.a,a,d.a)});S$.prototype.getLocalScaling=(function(){return T(aGa(this.a),Module.btVector3)});S$.prototype.getNumPreferredPenetrationDirections=(function(){return bGa(this.a)});S$.prototype.isPolyhedral=(function(){return Ye(this.a)});S$.prototype.getRadius=(function(){return cf(this.a)});S$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});S$.prototype.calculateSerializeBufferSize=(function(){return fGa(this.a)});S$.prototype.getName=(function(){return gGa(this.a)});S$.prototype.getHalfHeight=(function(){return gf(this.a)});S$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});S$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(jGa(this.a,a.a),Module.btVector3)});S$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(lGa(this.a,a.a),Module.btVector3)});S$.prototype.setLocalScaling=(function(a){nGa(this.a,a.a)});S$.prototype.getAabb=(function(a,d,e){oGa(this.a,a.a,d.a,e.a)});S$.prototype.getMarginNV=(function(){return Le(this.a)});S$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(qGa(this.a,a.a),Module.btVector3)});S$.prototype.getContactBreakingThreshold=(function(a){return sGa(this.a,a)});S$.prototype.isConvex=(function(){return xf(this.a)});S$.prototype.isInfinite=(function(){return zf(this.a)});function S$(a,d){this.a=vGa(a,d);S$.prototype.b[this.a]=this;this.c=S$}S$.prototype.b={};Module.btCapsuleShapeZ=S$;S$.prototype.getUserPointer=(function(){return Me(this.a)});S$.prototype.isNonMoving=(function(){return Bf(this.a)});S$.prototype.getMargin=(function(){return zGa(this.a)});S$.prototype.getPreferredPenetrationDirection=(function(a,d){AGa(this.a,a,d.a)});S$.prototype.setMargin=(function(a){BGa(this.a,a)});S$.prototype.isConvex2d=(function(){return Gf(this.a)});S$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});S$.prototype.isSoftBody=(function(){return Kf(this.a)});S$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});S$.prototype.__destroy__=(function(){GGa(this.a)});S$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){HGa(this.a,a.a,d.a,e)});S$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});S$.prototype.getBoundingSphere=(function(a,d){JGa(this.a,a.a,d)});S$.prototype.getAngularMotionDisc=(function(){return KGa(this.a)});S$.prototype.serializeSingleShape=(function(a){LGa(this.a,a.a)});S$.prototype.getAabbSlow=(function(a,d,e){MGa(this.a,a.a,d.a,e.a)});S$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});S$.prototype.isConcave=(function(){return Uf(this.a)});S$.prototype.getShapeType=(function(){return Ie(this.a)});function T$(){aa("btConcaveShape is abstract!")}T$.prototype.b={};Module.btConcaveShape=T$;T$.prototype.calculateLocalInertia=(function(a,d){QGa(this.a,a,d.a)});T$.prototype.setUserPointer=(function(a){Je(this.a,a)});T$.prototype.serialize=(function(a,d){return SGa(this.a,a,d.a)});T$.prototype.getLocalScaling=(function(){return T(TGa(this.a),Module.btVector3)});T$.prototype.processAllTriangles=(function(a,d,e){UGa(this.a,a.a,d.a,e.a)});T$.prototype.calculateSerializeBufferSize=(function(){return VGa(this.a)});T$.prototype.getName=(function(){return WGa(this.a)});T$.prototype.isCompound=(function(){return Ge(this.a)});T$.prototype.isPolyhedral=(function(){return Ye(this.a)});T$.prototype.setLocalScaling=(function(a){ZGa(this.a,a.a)});T$.prototype.getAabb=(function(a,d,e){$Ga(this.a,a.a,d.a,e.a)});T$.prototype.getContactBreakingThreshold=(function(a){return aHa(this.a,a)});T$.prototype.isConvex=(function(){return xf(this.a)});T$.prototype.isInfinite=(function(){return zf(this.a)});T$.prototype.getUserPointer=(function(){return Me(this.a)});T$.prototype.isNonMoving=(function(){return Bf(this.a)});T$.prototype.getMargin=(function(){return fHa(this.a)});T$.prototype.setMargin=(function(a){gHa(this.a,a)});T$.prototype.isConvex2d=(function(){return Gf(this.a)});T$.prototype.isSoftBody=(function(){return Kf(this.a)});T$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});T$.prototype.getBoundingSphere=(function(a,d){kHa(this.a,a.a,d)});T$.prototype.getAngularMotionDisc=(function(){return lHa(this.a)});T$.prototype.serializeSingleShape=(function(a){HHa(this.a,a.a)});T$.prototype.isConcave=(function(){return Uf(this.a)});T$.prototype.getShapeType=(function(){return Ie(this.a)});function U$(){aa("btTriangleInfoMap is abstract!")}U$.prototype.b={};Module.btTriangleInfoMap=U$;U$.prototype.__destroy__=(function(){KHa(this.a)});U$.prototype.get_m_zeroAreaThreshold=(function(){return mHa(this.a)});U$.prototype.calculateSerializeBufferSize=(function(){return LHa(this.a)});U$.prototype.get_m_maxEdgeAngleThreshold=(function(){return nHa(this.a)});U$.prototype.deSerialize=(function(a){NHa(this.a,a.a)});U$.prototype.set_m_convexEpsilon=(function(a){oHa(this.a,a)});U$.prototype.get_m_edgeDistanceThreshold=(function(){return pHa(this.a)});U$.prototype.serialize=(function(a,d){return RHa(this.a,a,d.a)});U$.prototype.set_m_equalVertexThreshold=(function(a){qHa(this.a,a)});U$.prototype.set_m_planarEpsilon=(function(a){rHa(this.a,a)});U$.prototype.get_m_equalVertexThreshold=(function(){return sHa(this.a)});U$.prototype.get_m_convexEpsilon=(function(){return tHa(this.a)});U$.prototype.set_m_edgeDistanceThreshold=(function(a){uHa(this.a,a)});U$.prototype.set_m_maxEdgeAngleThreshold=(function(a){vHa(this.a,a)});U$.prototype.set_m_zeroAreaThreshold=(function(a){wHa(this.a,a)});U$.prototype.get_m_planarEpsilon=(function(){return xHa(this.a)});V$.prototype.__destroy__=(function(){SHa(this.a)});V$.prototype.set_m_localShapeInfo=(function(a){yHa(this.a,a.a)});V$.prototype.get_m_hitNormalLocal=(function(){return T(this.a+2,Module.btVector3)});V$.prototype.get_m_hitCollisionObject=(function(){return T(c[this.a],Module.btCollisionObject)});V$.prototype.set_m_hitNormalLocal=(function(a){THa(this.a,a.a)});V$.prototype.set_m_hitFraction=(function(a){BHa(this.a,a)});function V$(a,d,e,f,g){this.a=UHa(a.a,d.a,e.a,f.a,g);V$.prototype.b[this.a]=this;this.c=V$}V$.prototype.b={};Module.LocalConvexResult=V$;V$.prototype.set_m_hitCollisionObject=(function(a){c[this.a]=a.a});V$.prototype.get_m_hitFraction=(function(){return DHa(this.a)});V$.prototype.set_m_hitPointLocal=(function(a){VHa(this.a,a.a)});V$.prototype.get_m_localShapeInfo=(function(){return T(EHa(this.a),Module.LocalShapeInfo)});V$.prototype.get_m_hitPointLocal=(function(){return T(this.a+6,Module.btVector3)});W$.prototype.getNumHandles=(function(){return GHa(this.a)});W$.prototype.addHandle=(function(a,d,e,f,g,h,i){return TV(this.a,a.a,d.a,e,f,g,h.a,i)});W$.prototype.quantize=(function(a,d,e){UV(this.a,a,d.a,e)});W$.prototype.removeHandle=(function(a,d){ZV(this.a,a,d.a)});W$.prototype.getOverlappingPairUserCallback=(function(){return T($Ha(this.a),Module.btOverlappingPairCallback)});W$.prototype.processAllOverlappingPairs=(function(a){gIa(this.a,a.a)});W$.prototype.rayTest=(function(a,d,e,f,g){f===fa?hIa(this.a,a.a,d.a,e.a):g===fa?iIa(this.a,a.a,d.a,e.a,f.a):jIa(this.a,a.a,d.a,e.a,f.a,g.a)});W$.prototype.setAabb=(function(a,d,e,f){kIa(this.a,a.a,d.a,e.a,f.a)});W$.prototype.resetPool=(function(a){lIa(this.a,a.a)});W$.prototype.testAabbOverlap=(function(a,d){return YV(this.a,a.a,d.a)});W$.prototype.getAabb=(function(a,d,e){nIa(this.a,a.a,d.a,e.a)});W$.prototype.updateHandle=(function(a,d,e,f){$V(this.a,a,d.a,e.a,f.a)});function W$(a,d,e,f,g){this.a=e===fa?rIa(a.a,d.a):f===fa?sIa(a.a,d.a,e):g===fa?tIa(a.a,d.a,e,f.a):uIa(a.a,d.a,e,f.a,g);W$.prototype.b[this.a]=this;this.c=W$}W$.prototype.b={};Module.bt32BitAxisSweep3=W$;W$.prototype.printStats=(function(){pIa(this.a)});W$.prototype.createProxy=(function(a,d,e,f,g,h,i,j){return T(qIa(this.a,a.a,d.a,e,f,g,h,i.a,j),Module.btBroadphaseProxy)});W$.prototype.__destroy__=(function(){wIa(this.a)});W$.prototype.setOverlappingPairUserCallback=(function(a){vIa(this.a,a.a)});W$.prototype.calculateOverlappingPairs=(function(a){yIa(this.a,a.a)});W$.prototype.getOverlappingPairCache=(function(){return T(zIa(this.a),Module.btOverlappingPairCache)});W$.prototype.unQuantize=(function(a,d,e){BIa(this.a,a.a,d.a,e.a)});W$.prototype.aabbTest=(function(a,d,e){CIa(this.a,a.a,d.a,e.a)});W$.prototype.getBroadphaseAabb=(function(a,d){DIa(this.a,a.a,d.a)});W$.prototype.destroyProxy=(function(a,d){EIa(this.a,a.a,d.a)});W$.prototype.getHandle=(function(a){return VV(this.a,a)});function X$(){aa("btCollisionAlgorithm is abstract!")}X$.prototype.b={};Module.btCollisionAlgorithm=X$;X$.prototype.getAllContactManifolds=(function(a){GIa(this.a,a)});X$.prototype.calculateTimeOfImpact=(function(a,d,e,f){return HIa(this.a,a.a,d.a,e.a,f.a)});X$.prototype.processCollision=(function(a,d,e,f){IIa(this.a,a.a,d.a,e.a,f.a)});Y$.prototype.calculateLocalInertia=(function(a,d){JIa(this.a,a,d.a)});Y$.prototype.isCompound=(function(){return Ge(this.a)});Y$.prototype.localGetSupportingVertex=(function(a){return T(LIa(this.a,a.a),Module.btVector3)});Y$.prototype.setUserPointer=(function(a){Je(this.a,a)});Y$.prototype.getMarginNV=(function(){return Le(this.a)});Y$.prototype.serialize=(function(a,d){return PIa(this.a,a,d.a)});Y$.prototype.getLocalScaling=(function(){return T(QIa(this.a),Module.btVector3)});Y$.prototype.getNumPreferredPenetrationDirections=(function(){return RIa(this.a)});Y$.prototype.isPolyhedral=(function(){return Ye(this.a)});Y$.prototype.getRadius=(function(){return dW(this.a)});Y$.prototype.getAabbNonVirtual=(function(a,d,e){df(this.a,a.a,d.a,e.a)});Y$.prototype.calculateSerializeBufferSize=(function(){return VIa(this.a)});Y$.prototype.getName=(function(){return WIa(this.a)});Y$.prototype.getLocalScalingNV=(function(){return T(this.a+3,Module.btVector3)});Y$.prototype.localGetSupportVertexWithoutMarginNonVirtual=(function(a){return T(YIa(this.a,a.a),Module.btVector3)});Y$.prototype.setImplicitShapeDimensions=(function(a){Jf(this.a,a.a)});Y$.prototype.setLocalScaling=(function(a){aJa(this.a,a.a)});Y$.prototype.getAabb=(function(a,d,e){bJa(this.a,a.a,d.a,e.a)});Y$.prototype.setUnscaledRadius=(function(a){dJa(this.a,a)});Y$.prototype.localGetSupportVertexNonVirtual=(function(a){return T(eJa(this.a,a.a),Module.btVector3)});Y$.prototype.getContactBreakingThreshold=(function(a){return gJa(this.a,a)});Y$.prototype.isConvex=(function(){return xf(this.a)});Y$.prototype.isInfinite=(function(){return zf(this.a)});Y$.prototype.getUserPointer=(function(){return Me(this.a)});Y$.prototype.isNonMoving=(function(){return Bf(this.a)});Y$.prototype.getMargin=(function(){return lJa(this.a)});Y$.prototype.getPreferredPenetrationDirection=(function(a,d){mJa(this.a,a,d.a)});Y$.prototype.setMargin=(function(a){nJa(this.a,a)});Y$.prototype.isConvex2d=(function(){return Gf(this.a)});function Y$(a){this.a=pJa(a);Y$.prototype.b[this.a]=this;this.c=Y$}Y$.prototype.b={};Module.btSphereShape=Y$;Y$.prototype.localGetSupportingVertexWithoutMargin=(function(a){return T(rJa(this.a,a.a),Module.btVector3)});Y$.prototype.isSoftBody=(function(){return Kf(this.a)});Y$.prototype.getMarginNonVirtual=(function(){return Mf(this.a)});Y$.prototype.__destroy__=(function(){vJa(this.a)});Y$.prototype.batchedUnitVectorGetSupportingVertexWithoutMargin=(function(a,d,e){wJa(this.a,a.a,d.a,e)});Y$.prototype.getImplicitShapeDimensions=(function(){return T(this.a+7,Module.btVector3)});Y$.prototype.getBoundingSphere=(function(a,d){yJa(this.a,a.a,d)});Y$.prototype.getAngularMotionDisc=(function(){return zJa(this.a)});Y$.prototype.serializeSingleShape=(function(a){AJa(this.a,a.a)});Y$.prototype.getAabbSlow=(function(a,d,e){MJa(this.a,a.a,d.a,e.a)});Y$.prototype.calculateTemporalAabb=(function(a,d,e,f,g,h){Tf(this.a,a.a,d.a,e.a,f,g.a,h.a)});Y$.prototype.isConcave=(function(){return Uf(this.a)});Y$.prototype.getShapeType=(function(){return Ie(this.a)});Z$.prototype.setTraversalMode=(function(a){FJa(this.a,a)});Z$.prototype.buildInternal=(function(){So(this.a)});Z$.prototype.serialize=(function(a,d,e){return e===fa?SJa(this.a,a,d.a):TJa(this.a,a,d,e)});Z$.prototype.getLeafNodeArray=(function(){return this.a+26});Z$.prototype.setQuantizationValues=(function(a,d,e){e===fa?VJa(this.a,a.a,d.a):Wo(this.a,a.a,d.a,e)});Z$.prototype.quantize=(function(a,d,e){Xo(this.a,a,d.a,e)});Z$.prototype.isQuantized=(function(){return Go(this.a)});Z$.prototype.getAlignmentSerializationPadding=(function(){return 0});Z$.prototype.calculateSerializeBufferSize=(function(){return Zo(this.a)});Z$.prototype.getQuantizedNodeArray=(function(){return this.a+31});Z$.prototype.reportAabbOverlappingNodex=(function(a,d,e){$o(this.a,a.a,d.a,e.a)});Z$.prototype.reportRayOverlappingNodex=(function(a,d,e){ap(this.a,a.a,d.a,e.a)});Z$.prototype.deSerializeInPlace=(function(a,d,e){return T(cKa(a,d,e),Module.btQuantizedBvh)});Z$.prototype.quantizeWithClamp=(function(a,d,e){fp(this.a,a,d.a,e)});Z$.prototype.deSerializeDouble=(function(a){fKa(this.a,a.a)});Z$.prototype.calculateSerializeBufferSizeNew=(function(){return gKa(this.a)});Z$.prototype.__destroy__=(function(){hKa(this.a)});function Z$(){this.a=xKa();Z$.prototype.b[this.a]=this;this.c=Z$}Z$.prototype.b={};Module.btQuantizedBvh=Z$;Z$.prototype.deSerializeFloat=(function(a){jKa(this.a,a.a)});Z$.prototype.getSubtreeInfoArray=(function(){return this.a+37});Z$.prototype.unQuantize=(function(a){return T(lKa(this.a,a),Module.btVector3)});Z$.prototype.reportBoxCastOverlappingNodex=(function(a,d,e,f,g){sp(this.a,a.a,d.a,e.a,f.a,g.a)});$$.prototype.get_m_string=(function(){return c[this.a]});$$.prototype.__destroy__=(function(){oKa(this.a)});$$.prototype.set_m_hash=(function(a){HJa(this.a,a)});$$.prototype.set_m_string=(function(a){var d=b;try{var e=T8(a);c[this.a]=e}finally{b=d}});function $$(a){var d=b;try{this.a=pKa(T8(a))}finally{b=d}$$.prototype.b[this.a]=this;this.c=$$}$$.prototype.b={};Module.btHashString=$$;$$.prototype.equals=(function(a){return sKa(this.a,a.a)});$$.prototype.getHash=(function(){return JJa(this.a)});$$.prototype.portableStringCompare=(function(a,d){var e=b;try{return uKa(this.a,T8(a),T8(d))}finally{b=e}});$$.prototype.get_m_hash=(function(){return LJa(this.a)});this.Ammo=Module;module.exports=this.Ammo;

}).call(this,require('_process'),"/src/server/lib")
},{"_process":4,"fs":1,"path":3}],72:[function(require,module,exports){
'use strict';

module.exports = function(THREE, Ammo) {
	var THREE_REVISION = parseInt( THREE.REVISION, 10 ),
		SUPPORT_TRANSFERABLE,
		_matrix = new THREE.Matrix4, _is_simulating = false,
		_Physijs = Physijs, // used for noConflict method
		Physijs = {}, // object assigned to window.Physijs
		Eventable, // class to provide simple event methods
		getObjectId, // returns a unique ID for a Physijs mesh object
		getEulerXYZFromQuaternion, getQuatertionFromEuler,
		convertWorldPositionToObject, // Converts a world-space position to object-space
		addObjectChildren,

		_temp1, _temp2,
		_temp_vector3_1 = new THREE.Vector3,
		_temp_vector3_2 = new THREE.Vector3,
		_temp_matrix4_1 = new THREE.Matrix4,
		_quaternion_1 = new THREE.Quaternion,

	// constants
		MESSAGE_TYPES = {
			WORLDREPORT: 0,
			COLLISIONREPORT: 1,
			VEHICLEREPORT: 2,
			CONSTRAINTREPORT: 3
		},
		REPORT_ITEMSIZE = 14,
		VEHICLEREPORT_ITEMSIZE = 9,
		CONSTRAINTREPORT_ITEMSIZE = 6;

	Physijs.scripts = {};

	Eventable = function() {
		this._eventListeners = {};
	};
	Eventable.prototype.addEventListener = function( event_name, callback ) {
		if ( !this._eventListeners.hasOwnProperty( event_name ) ) {
			this._eventListeners[event_name] = [];
		}
		this._eventListeners[event_name].push( callback );
	};
	Eventable.prototype.removeEventListener = function( event_name, callback ) {
		var index;

		if ( !this._eventListeners.hasOwnProperty( event_name ) ) return false;

		if ( (index = this._eventListeners[event_name].indexOf( callback )) >= 0 ) {
			this._eventListeners[event_name].splice( index, 1 );
			return true;
		}

		return false;
	};
	Eventable.prototype.dispatchEvent = function( event_name ) {
		var i,
			parameters = Array.prototype.splice.call( arguments, 1 );

		if ( this._eventListeners.hasOwnProperty( event_name ) ) {
			for ( i = 0; i < this._eventListeners[event_name].length; i++ ) {
				this._eventListeners[event_name][i].apply( this, parameters );
			}
		}
	};
	Eventable.make = function( obj ) {
		obj.prototype.addEventListener = Eventable.prototype.addEventListener;
		obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;
		obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;
	};

	getObjectId = (function() {
		var _id = 1;
		return function() {
			return _id++;
		};
	})();

	getEulerXYZFromQuaternion = function ( x, y, z, w ) {
		return new THREE.Vector3(
			Math.atan2( 2 * ( x * w - y * z ), ( w * w - x * x - y * y + z * z ) ),
			Math.asin( 2 *  ( x * z + y * w ) ),
			Math.atan2( 2 * ( z * w - x * y ), ( w * w + x * x - y * y - z * z ) )
		);
	};

	getQuatertionFromEuler = function( x, y, z ) {
		var c1, s1, c2, s2, c3, s3, c1c2, s1s2;
		c1 = Math.cos( y  );
		s1 = Math.sin( y  );
		c2 = Math.cos( -z );
		s2 = Math.sin( -z );
		c3 = Math.cos( x  );
		s3 = Math.sin( x  );

		c1c2 = c1 * c2;
		s1s2 = s1 * s2;

		return {
			w: c1c2 * c3  - s1s2 * s3,
			x: c1c2 * s3  + s1s2 * c3,
			y: s1 * c2 * c3 + c1 * s2 * s3,
			z: c1 * s2 * c3 - s1 * c2 * s3
		};
	};

	convertWorldPositionToObject = function( position, object ) {
		_temp_matrix4_1.identity(); // reset temp matrix

		// Set the temp matrix's rotation to the object's rotation
		if ( object.useQuaternion ) {
			_temp_matrix4_1.identity().setRotationFromQuaternion( object.quaternion );
		} else {
			_temp_matrix4_1.identity().setRotationFromEuler( object.rotation );
		}

		// Invert rotation matrix in order to "unrotate" a point back to object space
		_temp_matrix4_1.getInverse( _temp_matrix4_1 );

		// Yay! Temp vars!
		_temp_vector3_1.copy( position );
		_temp_vector3_2.copy( object.position );

		// Apply the rotation

		return _temp_vector3_1.sub( _temp_vector3_2 ).applyMatrix4( _temp_matrix4_1 );
	};



	// Physijs.noConflict
	Physijs.noConflict = function() {
		window.Physijs = _Physijs;
		return Physijs;
	};


	// Physijs.createMaterial
	Physijs.createMaterial = function( material, friction, restitution ) {
		var physijs_material = function(){};
		physijs_material.prototype = material;
		physijs_material = new physijs_material;

		physijs_material._physijs = {
			id: material.id,
			friction: friction === undefined ? .8 : friction,
			restitution: restitution === undefined ? .2 : restitution
		};

		return physijs_material;
	};


	// Constraints
	Physijs.PointConstraint = function( objecta, objectb, position ) {
		if ( position === undefined ) {
			position = objectb;
			objectb = undefined;
		}

		this.type = 'point';
		this.appliedImpulse = 0;
		this.id = getObjectId();
		this.objecta = objecta._physijs.id;
		this.positiona = convertWorldPositionToObject( position, objecta ).clone();

		if ( objectb ) {
			this.objectb = objectb._physijs.id;
			this.positionb = convertWorldPositionToObject( position, objectb ).clone();
		}
	};
	Physijs.PointConstraint.prototype.getDefinition = function() {
		return {
			type: this.type,
			id: this.id,
			objecta: this.objecta,
			objectb: this.objectb,
			positiona: this.positiona,
			positionb: this.positionb
		};
	};

	Physijs.HingeConstraint = function( objecta, objectb, position, axis ) {
		if ( axis === undefined ) {
			axis = position;
			position = objectb;
			objectb = undefined;
		}

		this.type = 'hinge';
		this.appliedImpulse = 0;
		this.id = getObjectId();
		this.scene = objecta.parent;
		this.objecta = objecta._physijs.id;
		this.positiona = convertWorldPositionToObject( position, objecta ).clone();
		this.position = position.clone();
		this.axis = axis;

		if ( objectb ) {
			this.objectb = objectb._physijs.id;
			this.positionb = convertWorldPositionToObject( position, objectb ).clone();
		}
	};
	Physijs.HingeConstraint.prototype.getDefinition = function() {
		return {
			type: this.type,
			id: this.id,
			objecta: this.objecta,
			objectb: this.objectb,
			positiona: this.positiona,
			positionb: this.positionb,
			axis: this.axis
		};
	};
	/*
	 * low = minimum angle in radians
	 * high = maximum angle in radians
	 * bias_factor = applied as a factor to constraint error
	 * relaxation_factor = controls bounce (0.0 == no bounce)
	 */
	Physijs.HingeConstraint.prototype.setLimits = function( low, high, bias_factor, relaxation_factor ) {
		this.scene.execute( 'hinge_setLimits', { constraint: this.id, low: low, high: high, bias_factor: bias_factor, relaxation_factor: relaxation_factor } );
	};
	Physijs.HingeConstraint.prototype.enableAngularMotor = function( velocity, acceleration ) {
		this.scene.execute( 'hinge_enableAngularMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );
	};
	Physijs.HingeConstraint.prototype.disableMotor = function( velocity, acceleration ) {
		this.scene.execute( 'hinge_disableMotor', { constraint: this.id } );
	};

	Physijs.SliderConstraint = function( objecta, objectb, position, axis ) {
		if ( axis === undefined ) {
			axis = position;
			position = objectb;
			objectb = undefined;
		}

		this.type = 'slider';
		this.appliedImpulse = 0;
		this.id = getObjectId();
		this.scene = objecta.parent;
		this.objecta = objecta._physijs.id;
		this.positiona = convertWorldPositionToObject( position, objecta ).clone();
		this.axis = axis;

		if ( objectb ) {
			this.objectb = objectb._physijs.id;
			this.positionb = convertWorldPositionToObject( position, objectb ).clone();
		}
	};
	Physijs.SliderConstraint.prototype.getDefinition = function() {
		return {
			type: this.type,
			id: this.id,
			objecta: this.objecta,
			objectb: this.objectb,
			positiona: this.positiona,
			positionb: this.positionb,
			axis: this.axis
		};
	};
	Physijs.SliderConstraint.prototype.setLimits = function( lin_lower, lin_upper, ang_lower, ang_upper ) {
		this.scene.execute( 'slider_setLimits', { constraint: this.id, lin_lower: lin_lower, lin_upper: lin_upper, ang_lower: ang_lower, ang_upper: ang_upper } );
	};
	Physijs.SliderConstraint.prototype.setRestitution = function( linear, angular ) {
		this.scene.execute(
			'slider_setRestitution',
			{
				constraint: this.id,
				linear: linear,
				angular: angular
			}
		);
	};
	Physijs.SliderConstraint.prototype.enableLinearMotor = function( velocity, acceleration) {
		this.scene.execute( 'slider_enableLinearMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );
	};
	Physijs.SliderConstraint.prototype.disableLinearMotor = function() {
		this.scene.execute( 'slider_disableLinearMotor', { constraint: this.id } );
	};
	Physijs.SliderConstraint.prototype.enableAngularMotor = function( velocity, acceleration ) {
		this.scene.execute( 'slider_enableAngularMotor', { constraint: this.id, velocity: velocity, acceleration: acceleration } );
	};
	Physijs.SliderConstraint.prototype.disableAngularMotor = function() {
		this.scene.execute( 'slider_disableAngularMotor', { constraint: this.id } );
	};

	Physijs.ConeTwistConstraint = function( objecta, objectb, position ) {
		if ( position === undefined ) {
			throw 'Both objects must be defined in a ConeTwistConstraint.';
		}
		this.type = 'conetwist';
		this.appliedImpulse = 0;
		this.id = getObjectId();
		this.scene = objecta.parent;
		this.objecta = objecta._physijs.id;
		this.positiona = convertWorldPositionToObject( position, objecta ).clone();
		this.objectb = objectb._physijs.id;
		this.positionb = convertWorldPositionToObject( position, objectb ).clone();
		this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };
		this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };
	};
	Physijs.ConeTwistConstraint.prototype.getDefinition = function() {
		return {
			type: this.type,
			id: this.id,
			objecta: this.objecta,
			objectb: this.objectb,
			positiona: this.positiona,
			positionb: this.positionb,
			axisa: this.axisa,
			axisb: this.axisb
		};
	};
	Physijs.ConeTwistConstraint.prototype.setLimit = function( x, y, z ) {
		this.scene.execute( 'conetwist_setLimit', { constraint: this.id, x: x, y: y, z: z } );
	};
	Physijs.ConeTwistConstraint.prototype.enableMotor = function() {
		this.scene.execute( 'conetwist_enableMotor', { constraint: this.id } );
	};
	Physijs.ConeTwistConstraint.prototype.setMaxMotorImpulse = function( max_impulse ) {
		this.scene.execute( 'conetwist_setMaxMotorImpulse', { constraint: this.id, max_impulse: max_impulse } );
	};
	Physijs.ConeTwistConstraint.prototype.setMotorTarget = function( target ) {
		if ( target instanceof THREE.Vector3 ) {
			throw 'Wait for Three.js r50 to setMotorTarget from Vector3 - use Matrix4 or Quaternion instead';
			target = new THREE.Quaternion().setFromEuler( target );
		} else if ( target instanceof THREE.Matrix4 ) {
			target = new THREE.Quaternion().setFromRotationMatrix( target );
		}
		this.scene.execute( 'conetwist_setMotorTarget', { constraint: this.id, x: target.x, y: target.y, z: target.z, w: target.w } );
	};
	Physijs.ConeTwistConstraint.prototype.disableMotor = function() {
		this.scene.execute( 'conetwist_disableMotor', { constraint: this.id } );
	};

	Physijs.DOFConstraint = function( objecta, objectb, position ) {
		if ( position === undefined ) {
			position = objectb;
			objectb = undefined;
		}
		this.type = 'dof';
		this.appliedImpulse = 0;
		this.id = getObjectId();
		this.scene = objecta.parent;
		this.objecta = objecta._physijs.id;
		this.positiona = convertWorldPositionToObject( position, objecta ).clone();
		this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };

		if ( objectb ) {
			this.objectb = objectb._physijs.id;
			this.positionb = convertWorldPositionToObject( position, objectb ).clone();
			this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };
		}
	};
	Physijs.DOFConstraint.prototype.getDefinition = function() {
		return {
			type: this.type,
			id: this.id,
			objecta: this.objecta,
			objectb: this.objectb,
			positiona: this.positiona,
			positionb: this.positionb,
			axisa: this.axisa,
			axisb: this.axisb
		};
	};
	Physijs.DOFConstraint.prototype.setLinearLowerLimit = function( limit ) {
		this.scene.execute( 'dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );
	};
	Physijs.DOFConstraint.prototype.setLinearUpperLimit = function( limit ) {
		this.scene.execute( 'dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );
	};
	Physijs.DOFConstraint.prototype.setAngularLowerLimit = function( limit ) {
		this.scene.execute( 'dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );
	};
	Physijs.DOFConstraint.prototype.setAngularUpperLimit = function( limit ) {
		this.scene.execute( 'dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );
	};
	Physijs.DOFConstraint.prototype.enableAngularMotor = function( which ) {
		this.scene.execute( 'dof_enableAngularMotor', { constraint: this.id, which: which } );
	};
	Physijs.DOFConstraint.prototype.configureAngularMotor = function( which, low_angle, high_angle, velocity, max_force ) {
		this.scene.execute( 'dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force } );
	};
	Physijs.DOFConstraint.prototype.disableAngularMotor = function( which ) {
		this.scene.execute( 'dof_disableAngularMotor', { constraint: this.id, which: which } );
	};

	// Physijs.Scene
	Physijs.Scene = function( params ) {
		var self = this;

		Eventable.call( this );
		THREE.Scene.call( this );

		var workerToSceneMessageHandler = function ( event ) {
			var _temp,
				data = event.data;

			if ( data instanceof ArrayBuffer && data.byteLength !== 1 ) { // byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test
				data = new Float32Array( data );
			}

			if ( data instanceof Float32Array ) {

				// transferable object
				switch ( data[0] ) {
					case MESSAGE_TYPES.WORLDREPORT:
						self._updateScene( data );
						break;

					case MESSAGE_TYPES.COLLISIONREPORT:
						self._updateCollisions( data );
						break;

					case MESSAGE_TYPES.VEHICLEREPORT:
						self._updateVehicles( data );
						break;

					case MESSAGE_TYPES.CONSTRAINTREPORT:
						self._updateConstraints( data );
						break;
				}

			} else {

				if ( data.cmd ) {

					// non-transferable object
					switch ( data.cmd ) {
						case 'objectReady':
							_temp = data.params;
							if ( self._objects[ _temp ] ) {
								self._objects[ _temp ].dispatchEvent( 'ready' );
							}
							break;

						case 'worldReady':
							self.dispatchEvent( 'ready' );
							break;

						case 'vehicle':
							window.test = data;
							break;

						default:
							// Do nothing, just show the message
							console.debug('Received: ' + data.cmd);
							console.dir(data.params);
							break;
					}

				} else {

					switch ( data[0] ) {
						case MESSAGE_TYPES.WORLDREPORT:
							self._updateScene( data );
							break;

						case MESSAGE_TYPES.COLLISIONREPORT:
							self._updateCollisions( data );
							break;

						case MESSAGE_TYPES.VEHICLEREPORT:
							self._updateVehicles( data );
							break;

						case MESSAGE_TYPES.CONSTRAINTREPORT:
							self._updateConstraints( data );
							break;
					}

				}

			}
		};

		//this._worker = new Worker( Physijs.scripts.worker || 'physijs_worker.js' );
		//this._worker.transferableMessage = this._worker.webkitPostMessage || this._worker.postMessage;
		
		this._worker = require('./physijs_worker.js')(workerToSceneMessageHandler, Ammo);
		var _worker = this._worker;
		this._worker.postMessage = function(x) {
			_worker.sceneToWorkerMessageHandler({data:x});
		};
		this._worker.transferableMessage = this._worker.postMessage;
		
		this._materials = {};
		this._objects = {};
		this._vehicles = {};
		this._constraints = {};

		var ab = new ArrayBuffer( 1 );
		this._worker.transferableMessage( ab, [ab] );
		SUPPORT_TRANSFERABLE = ( ab.byteLength === 0 );

		params = params || {};
		params.ammo = Physijs.scripts.ammo || 'ammo.js';
		params.fixedTimeStep = params.fixedTimeStep || 1 / 60;
		params.rateLimit = params.rateLimit || true;
		this.execute( 'init', params );
	};
	Physijs.Scene.prototype = new THREE.Scene;
	Physijs.Scene.prototype.constructor = Physijs.Scene;
	Eventable.make( Physijs.Scene );

	Physijs.Scene.prototype._updateScene = function( data ) {
		var num_objects = data[1],
			object,
			i, offset;

		for ( i = 0; i < num_objects; i++ ) {
			offset = 2 + i * REPORT_ITEMSIZE;
			object = this._objects[ data[ offset ] ];

			if ( object === undefined ) {
				continue;
			}
			
			console.log(data[offset+2])

			if ( object.__dirtyPosition === false ) {
				object.position.set(
					data[ offset + 1 ],
					data[ offset + 2 ],
					data[ offset + 3 ]
				);
			}

			if ( object.__dirtyRotation === false ) {
				if ( object.useQuaternion ) {
					object.quaternion.set(
						data[ offset + 4 ],
						data[ offset + 5 ],
						data[ offset + 6 ],
						data[ offset + 7 ]
					);
				} else {
					object.rotation = getEulerXYZFromQuaternion(
						data[ offset + 4 ],
						data[ offset + 5 ],
						data[ offset + 6 ],
						data[ offset + 7 ]
					);
				}
			}

			object._physijs.linearVelocity.set(
				data[ offset + 8 ],
				data[ offset + 9 ],
				data[ offset + 10 ]
			);

			object._physijs.angularVelocity.set(
				data[ offset + 11 ],
				data[ offset + 12 ],
				data[ offset + 13 ]
			);

		}

		if ( SUPPORT_TRANSFERABLE ) {
			// Give the typed array back to the worker
			this._worker.transferableMessage( data.buffer, [data.buffer] );
		}

		_is_simulating = false;
		this.dispatchEvent( 'update' );
	};

	Physijs.Scene.prototype._updateVehicles = function( data ) {
		var vehicle, wheel,
			i, offset;

		for ( i = 0; i < ( data.length - 1 ) / VEHICLEREPORT_ITEMSIZE; i++ ) {
			offset = 1 + i * VEHICLEREPORT_ITEMSIZE;
			vehicle = this._vehicles[ data[ offset ] ];

			if ( vehicle === undefined ) {
				continue;
			}

			wheel = vehicle.wheels[ data[ offset + 1 ] ];

			wheel.position.set(
				data[ offset + 2 ],
				data[ offset + 3 ],
				data[ offset + 4 ]
			);

			if ( wheel.useQuaternion ) {
				wheel.quaternion.set(
					data[ offset + 5 ],
					data[ offset + 6 ],
					data[ offset + 7 ],
					data[ offset + 8 ]
				);
			} else {
				wheel.rotation = getEulerXYZFromQuaternion(
					data[ offset + 5 ],
					data[ offset + 6 ],
					data[ offset + 7 ],
					data[ offset + 8 ]
				);
			}

		}

		if ( SUPPORT_TRANSFERABLE ) {
			// Give the typed array back to the worker
			this._worker.transferableMessage( data.buffer, [data.buffer] );
		}
	};

	Physijs.Scene.prototype._updateConstraints = function( data ) {
		var constraint, object,
			i, offset;

		for ( i = 0; i < ( data.length - 1 ) / CONSTRAINTREPORT_ITEMSIZE; i++ ) {
			offset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;
			constraint = this._constraints[ data[ offset ] ];
			object = this._objects[ data[ offset + 1 ] ];

			if ( constraint === undefined || object === undefined ) {
				continue;
			}

			_temp_vector3_1.set(
				data[ offset + 2 ],
				data[ offset + 3 ],
				data[ offset + 4 ]
			);
			_temp_matrix4_1.extractRotation( object.matrix );
			_temp_vector3_1.applyMatrix4( _temp_matrix4_1 );

			constraint.positiona.addVectors( object.position, _temp_vector3_1 );
			constraint.appliedImpulse = data[ offset + 5 ] ;
		}

		if ( SUPPORT_TRANSFERABLE ) {
			// Give the typed array back to the worker
			this._worker.transferableMessage( data.buffer, [data.buffer] );
		}
	};

	Physijs.Scene.prototype._updateCollisions = function( data ) {
		/**
		 * #TODO
		 * This is probably the worst way ever to handle collisions. The inherent evilness is a residual
		 * effect from the previous version's evilness which mutated when switching to transferable objects.
		 *
		 * If you feel inclined to make this better, please do so.
		 */

		var i, j, offset, object, object2,
			collisions = {}, collided_with = [];

		// Build collision manifest
		for ( i = 0; i < data[1]; i++ ) {
			offset = 2 + i * 2;
			object = data[ offset ];
			object2 = data[ offset + 1 ];

			if ( !collisions[ object ] ) collisions[ object ] = [];
			collisions[ object ].push( object2 );
		}

		// Deal with collisions
		for ( object in this._objects ) {
			if ( !this._objects.hasOwnProperty( object ) ) return;
			object = this._objects[ object ];

			if ( collisions[ object._physijs.id ] ) {

				// this object is touching others
				collided_with.length = 0;

				for ( j = 0; j < collisions[ object._physijs.id ].length; j++ ) {
					object2 = this._objects[ collisions[ object._physijs.id ][j] ];

					if ( object2 ) {
						if ( object._physijs.touches.indexOf( object2._physijs.id ) === -1 ) {
							object._physijs.touches.push( object2._physijs.id );

							_temp_vector3_1.subVectors( object.getLinearVelocity(), object2.getLinearVelocity() );
							_temp1 = _temp_vector3_1.clone();

							_temp_vector3_1.subVectors( object.getAngularVelocity(), object2.getAngularVelocity() );
							_temp2 = _temp_vector3_1;

							object.dispatchEvent( 'collision', object2, _temp1, _temp2 );
							object2.dispatchEvent( 'collision', object, _temp1, _temp2 );
						}

						collided_with.push( object2._physijs.id );
					}
				}
				for ( j = 0; j < object._physijs.touches.length; j++ ) {
					if ( collided_with.indexOf( object._physijs.touches[j] ) === -1 ) {
						object._physijs.touches.splice( j--, 1 );
					}
				}

			} else {

				// not touching other objects
				object._physijs.touches.length = 0;

			}

		}

    // if A is in B's collision list, then B should be in A's collision list
    for (var id in collisions) {
		if ( collisions.hasOwnProperty( id ) && collisions[id] ) {
			for (var j=0; j < collisions[id].length; j++) {
				if (collisions[id][j]) {
					collisions[ collisions[id][j] ] = collisions[ collisions[id][j] ] || [];
					collisions[ collisions[id][j] ].push(id);
				}
			}
		}
    }

    this.collisions = collisions;

		if ( SUPPORT_TRANSFERABLE ) {
			// Give the typed array back to the worker
			this._worker.transferableMessage( data.buffer, [data.buffer] );
		}
	};

	Physijs.Scene.prototype.addConstraint = function ( constraint, show_marker ) {
		this._constraints[ constraint.id ] = constraint;
		this.execute( 'addConstraint', constraint.getDefinition() );

		if ( show_marker ) {
			var marker;

			switch ( constraint.type ) {
				case 'point':
					marker = new THREE.Mesh(
						new THREE.SphereGeometry( 1.5 ),
						new THREE.MeshNormalMaterial
					);
					marker.position.copy( constraint.positiona );
					this._objects[ constraint.objecta ].add( marker );
					break;

				case 'hinge':
					marker = new THREE.Mesh(
						new THREE.SphereGeometry( 1.5 ),
						new THREE.MeshNormalMaterial
					);
					marker.position.copy( constraint.positiona );
					this._objects[ constraint.objecta ].add( marker );
					break;

				case 'slider':
					marker = new THREE.Mesh(
						new THREE.CubeGeometry( 10, 1, 1 ),
						new THREE.MeshNormalMaterial
					);
					marker.position.copy( constraint.positiona );
					// This rotation isn't right if all three axis are non-0 values
					// TODO: change marker's rotation order to ZYX
					marker.rotation.set(
						constraint.axis.y, // yes, y and
						constraint.axis.x, // x axis are swapped
						constraint.axis.z
					);
					this._objects[ constraint.objecta ].add( marker );
					break;

				case 'conetwist':
					marker = new THREE.Mesh(
						new THREE.SphereGeometry( 1.5 ),
						new THREE.MeshNormalMaterial
					);
					marker.position.copy( constraint.positiona );
					this._objects[ constraint.objecta ].add( marker );
					break;

				case 'dof':
					marker = new THREE.Mesh(
						new THREE.SphereGeometry( 1.5 ),
						new THREE.MeshNormalMaterial
					);
					marker.position.copy( constraint.positiona );
					this._objects[ constraint.objecta ].add( marker );
					break;
			}
		}

		return constraint;
	};

	Physijs.Scene.prototype.removeConstraint = function( constraint ) {
		if ( this._constraints[constraint.id ] !== undefined ) {
			this.execute( 'removeConstraint', { id: constraint.id } );
			delete this._constraints[ constraint.id ];
		}
	};

	Physijs.Scene.prototype.execute = function( cmd, params ) {
		this._worker.postMessage({ cmd: cmd, params: params });
	};

	addObjectChildren = function( parent, object ) {
		var i;

		for ( i = 0; i < object.children.length; i++ ) {
			if ( object.children[i]._physijs ) {
				object.children[i].updateMatrix();
				object.children[i].updateMatrixWorld();

				_temp_vector3_1.getPositionFromMatrix( object.children[i].matrixWorld );
				_quaternion_1.setFromRotationMatrix( object.children[i].matrixWorld );

				object.children[i]._physijs.position_offset = {
					x: _temp_vector3_1.x,
					y: _temp_vector3_1.y,
					z: _temp_vector3_1.z
				};

				object.children[i]._physijs.rotation = {
					x: _quaternion_1.x,
					y: _quaternion_1.y,
					z: _quaternion_1.z,
					w: _quaternion_1.w
				};

				parent._physijs.children.push( object.children[i]._physijs );
			}

			addObjectChildren( parent, object.children[i] );
		}
	};

	Physijs.Scene.prototype.add = function( object ) {
		THREE.Mesh.prototype.add.call( this, object );

		if ( object._physijs ) {

			object.world = this;

			if ( object instanceof Physijs.Vehicle ) {

				this.add( object.mesh );
				this._vehicles[ object._physijs.id ] = object;
				this.execute( 'addVehicle', object._physijs );

			} else {

				object.__dirtyPosition = false;
				object.__dirtyRotation = false;
				this._objects[object._physijs.id] = object;

				if ( object.children.length ) {
					object._physijs.children = [];
					addObjectChildren( object, object );
				}

				if ( object.material._physijs ) {
					if ( !this._materials.hasOwnProperty( object.material._physijs.id ) ) {
						this.execute( 'registerMaterial', object.material._physijs );
						object._physijs.materialId = object.material._physijs.id;
					}
				}

				// Object starting position + rotation
				object._physijs.position = { x: object.position.x, y: object.position.y, z: object.position.z };
				if (!object.useQuaternion) {
					_matrix.identity().setRotationFromEuler( object.rotation );
					object.quaternion.setFromRotationMatrix( _matrix );
				}
				object._physijs.rotation = { x: object.quaternion.x, y: object.quaternion.y, z: object.quaternion.z, w: object.quaternion.w };

				// Check for scaling
				var mass_scaling = new THREE.Vector3( 1, 1, 1 );
				if ( object._physijs.width ) {
					object._physijs.width *= object.scale.x;
				}
				if ( object._physijs.height ) {
					object._physijs.height *= object.scale.y;
				}
				if ( object._physijs.depth ) {
					object._physijs.depth *= object.scale.z;
				}

				this.execute( 'addObject', object._physijs );

			}
		}
	};

	Physijs.Scene.prototype.remove = function( object ) {
		if ( object instanceof Physijs.Vehicle ) {
			this.execute( 'removeVehicle', { id: object._physijs.id } );
			while( object.wheels.length ) {
				this.remove( object.wheels.pop() );
			}
			this.remove( object.mesh );
			delete this._vehicles[ object._physijs.id ];
		} else {
			THREE.Mesh.prototype.remove.call( this, object );
			if ( object._physijs ) {
				delete this._objects[object._physijs.id];
				this.execute( 'removeObject', { id: object._physijs.id } );
			}
		}
	};

	Physijs.Scene.prototype.setFixedTimeStep = function( fixedTimeStep ) {
		if ( fixedTimeStep ) {
			this.execute( 'setFixedTimeStep', fixedTimeStep );
		}
	};

	Physijs.Scene.prototype.setGravity = function( gravity ) {
		if ( gravity ) {
			this.execute( 'setGravity', gravity );
		}
	};

	Physijs.Scene.prototype.simulate = function( timeStep, maxSubSteps ) {
		var object_id, object, update;

		if ( _is_simulating ) {
			return false;
		}

		_is_simulating = true;

		for ( object_id in this._objects ) {
			if ( !this._objects.hasOwnProperty( object_id ) ) continue;

			object = this._objects[object_id];

			if ( object.__dirtyPosition || object.__dirtyRotation ) {
				update = { id: object._physijs.id };

				if ( object.__dirtyPosition ) {
					update.pos = { x: object.position.x, y: object.position.y, z: object.position.z };
					object.__dirtyPosition = false;
				}

				if ( object.__dirtyRotation ) {
					if (!object.useQuaternion) {
						_matrix.identity().setRotationFromEuler( object.rotation );
						object.quaternion.setFromRotationMatrix( _matrix );
					};
					update.quat = { x: object.quaternion.x, y: object.quaternion.y, z: object.quaternion.z, w: object.quaternion.w };
					object.__dirtyRotation = false;
				}

				this.execute( 'updateTransform', update );
			};
		}

		this.execute( 'simulate', { timeStep: timeStep, maxSubSteps: maxSubSteps } );

		return true;
	};


	// Phsijs.Mesh
	Physijs.Mesh = function ( geometry, material, mass ) {
		var index;

		if ( !geometry ) {
			return;
		}

		Eventable.call( this );
		THREE.Mesh.call( this, geometry, material );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		this._physijs = {
			type: null,
			id: getObjectId(),
			mass: mass || 0,
			touches: [],
			linearVelocity: new THREE.Vector3,
			angularVelocity: new THREE.Vector3
		};
	};
	Physijs.Mesh.prototype = new THREE.Mesh;
	Physijs.Mesh.prototype.constructor = Physijs.Mesh;
	Eventable.make( Physijs.Mesh );

	// Physijs.Mesh.mass
	Physijs.Mesh.prototype.__defineGetter__('mass', function() {
		return this._physijs.mass;
	});
	Physijs.Mesh.prototype.__defineSetter__('mass', function( mass ) {
		this._physijs.mass = mass;
		if ( this.world ) {
			this.world.execute( 'updateMass', { id: this._physijs.id, mass: mass } );
		}
	});

	// Physijs.Mesh.applyCentralImpulse
	Physijs.Mesh.prototype.applyCentralImpulse = function ( force ) {
		if ( this.world ) {
			this.world.execute( 'applyCentralImpulse', { id: this._physijs.id, x: force.x, y: force.y, z: force.z } );
		}
	};

	// Physijs.Mesh.applyImpulse
	Physijs.Mesh.prototype.applyImpulse = function ( force, offset ) {
		if ( this.world ) {
			this.world.execute( 'applyImpulse', { id: this._physijs.id, impulse_x: force.x, impulse_y: force.y, impulse_z: force.z, x: offset.x, y: offset.y, z: offset.z } );
		}
	};

	// Physijs.Mesh.applyCentralForce
	Physijs.Mesh.prototype.applyCentralForce = function ( force ) {
		if ( this.world ) {
			this.world.execute( 'applyCentralForce', { id: this._physijs.id, x: force.x, y: force.y, z: force.z } );
		}
	};

	// Physijs.Mesh.applyForce
	Physijs.Mesh.prototype.applyForce = function ( force, offset ) {
		if ( this.world ) {
			this.world.execute( 'applyForce', { id: this._physijs.id, force_x: force.x, force_y : force.y, force_z : force.z, x: offset.x, y: offset.y, z: offset.z } );
		}
	};

	// Physijs.Mesh.getAngularVelocity
	Physijs.Mesh.prototype.getAngularVelocity = function () {
		return this._physijs.angularVelocity;
	};

	// Physijs.Mesh.setAngularVelocity
	Physijs.Mesh.prototype.setAngularVelocity = function ( velocity ) {
		if ( this.world ) {
			this.world.execute( 'setAngularVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z } );
		}
	};

	// Physijs.Mesh.getLinearVelocity
	Physijs.Mesh.prototype.getLinearVelocity = function () {
		return this._physijs.linearVelocity;
	};

	// Physijs.Mesh.setLinearVelocity
	Physijs.Mesh.prototype.setLinearVelocity = function ( velocity ) {
		if ( this.world ) {
			this.world.execute( 'setLinearVelocity', { id: this._physijs.id, x: velocity.x, y: velocity.y, z: velocity.z } );
		}
	};

	// Physijs.Mesh.setAngularFactor
	Physijs.Mesh.prototype.setAngularFactor = function ( factor ) {
		if ( this.world ) {
			this.world.execute( 'setAngularFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z } );
		}
	};

	// Physijs.Mesh.setLinearFactor
	Physijs.Mesh.prototype.setLinearFactor = function ( factor ) {
		if ( this.world ) {
			this.world.execute( 'setLinearFactor', { id: this._physijs.id, x: factor.x, y: factor.y, z: factor.z } );
		}
	};

	// Physijs.Mesh.setDamping
	Physijs.Mesh.prototype.setDamping = function ( linear, angular ) {
		if ( this.world ) {
			this.world.execute( 'setDamping', { id: this._physijs.id, linear: linear, angular: angular } );
		}
	};

	// Physijs.Mesh.setCcdMotionThreshold
	Physijs.Mesh.prototype.setCcdMotionThreshold = function ( threshold ) {
		if ( this.world ) {
			this.world.execute( 'setCcdMotionThreshold', { id: this._physijs.id, threshold: threshold } );
		}
	};

	// Physijs.Mesh.setCcdSweptSphereRadius
	Physijs.Mesh.prototype.setCcdSweptSphereRadius = function ( radius ) {
		if ( this.world ) {
			this.world.execute( 'setCcdSweptSphereRadius', { id: this._physijs.id, radius: radius } );
		}
	};


	// Physijs.PlaneMesh
	Physijs.PlaneMesh = function ( geometry, material, mass ) {
		var width, height;

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;

		this._physijs.type = 'plane';
		this._physijs.normal = geometry.faces[0].normal.clone();
		this._physijs.mass = (typeof mass === 'undefined') ? width * height : mass;
	};
	Physijs.PlaneMesh.prototype = new Physijs.Mesh;
	Physijs.PlaneMesh.prototype.constructor = Physijs.PlaneMesh;

	// Physijs.HeightfieldMesh
	Physijs.HeightfieldMesh = function ( geometry, material, mass, xdiv, ydiv) {
		Physijs.Mesh.call( this, geometry, material, mass );

		this._physijs.type   = 'heightfield';
		this._physijs.xsize  = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		this._physijs.ysize  = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
		this._physijs.xpts = (typeof xdiv === 'undefined') ? Math.sqrt(geometry.vertices.length) : xdiv + 1;
		this._physijs.ypts = (typeof ydiv === 'undefined') ? Math.sqrt(geometry.vertices.length) : ydiv + 1;
		// note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv
		this._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.z,Math.abs(geometry.boundingBox.min.z));

		var points = [];

		var a, b;
		for ( var i = 0; i < geometry.vertices.length; i++ ) {

			a = i % this._physijs.xpts;
			b = Math.round( ( i / this._physijs.xpts ) - ( (i % this._physijs.xpts) / this._physijs.xpts ) );
			points[i] = geometry.vertices[ a + ( ( this._physijs.ypts - b - 1 ) * this._physijs.ypts ) ].z;

			//points[i] = geometry.vertices[i];
		}

		this._physijs.points = points;
	};
	Physijs.HeightfieldMesh.prototype = new Physijs.Mesh;
	Physijs.HeightfieldMesh.prototype.constructor = Physijs.HeightfieldMesh;

	// Physijs.BoxMesh
	Physijs.BoxMesh = function( geometry, material, mass ) {
		var width, height, depth;

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
		depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;

		this._physijs.type = 'box';
		this._physijs.width = width;
		this._physijs.height = height;
		this._physijs.depth = depth;
		this._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;
	};
	Physijs.BoxMesh.prototype = new Physijs.Mesh;
	Physijs.BoxMesh.prototype.constructor = Physijs.BoxMesh;


	// Physijs.SphereMesh
	Physijs.SphereMesh = function( geometry, material, mass ) {
		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingSphere ) {
			geometry.computeBoundingSphere();
		}

		this._physijs.type = 'sphere';
		this._physijs.radius = geometry.boundingSphere.radius;
		this._physijs.mass = (typeof mass === 'undefined') ? (4/3) * Math.PI * Math.pow(this._physijs.radius, 3) : mass;
	};
	Physijs.SphereMesh.prototype = new Physijs.Mesh;
	Physijs.SphereMesh.prototype.constructor = Physijs.SphereMesh;


	// Physijs.CylinderMesh
	Physijs.CylinderMesh = function( geometry, material, mass ) {
		var width, height, depth;

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
		depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;

		this._physijs.type = 'cylinder';
		this._physijs.width = width;
		this._physijs.height = height;
		this._physijs.depth = depth;
		this._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;
	};
	Physijs.CylinderMesh.prototype = new Physijs.Mesh;
	Physijs.CylinderMesh.prototype.constructor = Physijs.CylinderMesh;


	// Physijs.CapsuleMesh
	Physijs.CapsuleMesh = function( geometry, material, mass ) {
		var width, height, depth;

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
		depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;

		this._physijs.type = 'capsule';
		this._physijs.radius = Math.max(width / 2, depth / 2);
		this._physijs.height = height;
		this._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;
	};
	Physijs.CapsuleMesh.prototype = new Physijs.Mesh;
	Physijs.CapsuleMesh.prototype.constructor = Physijs.CapsuleMesh;


	// Physijs.ConeMesh
	Physijs.ConeMesh = function( geometry, material, mass ) {
		var width, height, depth;

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;

		this._physijs.type = 'cone';
		this._physijs.radius = width / 2;
		this._physijs.height = height;
		this._physijs.mass = (typeof mass === 'undefined') ? width * height : mass;
	};
	Physijs.ConeMesh.prototype = new Physijs.Mesh;
	Physijs.ConeMesh.prototype.constructor = Physijs.ConeMesh;


	// Physijs.ConcaveMesh
	Physijs.ConcaveMesh = function( geometry, material, mass ) {
		var i,
			width, height, depth,
			vertices, face, triangles = [];

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		vertices = geometry.vertices;

		for ( i = 0; i < geometry.faces.length; i++ ) {
			face = geometry.faces[i];
			if ( face instanceof THREE.Face3) {

				triangles.push([
					{ x: vertices[face.a].x, y: vertices[face.a].y, z: vertices[face.a].z },
					{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },
					{ x: vertices[face.c].x, y: vertices[face.c].y, z: vertices[face.c].z }
				]);

			} else if ( face instanceof THREE.Face4 ) {

				triangles.push([
					{ x: vertices[face.a].x, y: vertices[face.a].y, z: vertices[face.a].z },
					{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },
					{ x: vertices[face.d].x, y: vertices[face.d].y, z: vertices[face.d].z }
				]);
				triangles.push([
					{ x: vertices[face.b].x, y: vertices[face.b].y, z: vertices[face.b].z },
					{ x: vertices[face.c].x, y: vertices[face.c].y, z: vertices[face.c].z },
					{ x: vertices[face.d].x, y: vertices[face.d].y, z: vertices[face.d].z }
				]);

			}
		}

		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
		depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;

		this._physijs.type = 'concave';
		this._physijs.triangles = triangles;
		this._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;
	};
	Physijs.ConcaveMesh.prototype = new Physijs.Mesh;
	Physijs.ConcaveMesh.prototype.constructor = Physijs.ConcaveMesh;


	// Physijs.ConvexMesh
	Physijs.ConvexMesh = function( geometry, material, mass ) {
		var i,
			width, height, depth,
			points = [];

		Physijs.Mesh.call( this, geometry, material, mass );

		if ( !geometry.boundingBox ) {
			geometry.computeBoundingBox();
		}

		for ( i = 0; i < geometry.vertices.length; i++ ) {
			points.push({
				x: geometry.vertices[i].x,
				y: geometry.vertices[i].y,
				z: geometry.vertices[i].z
			});
		}


		width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;
		height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;
		depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;

		this._physijs.type = 'convex';
		this._physijs.points = points;
		this._physijs.mass = (typeof mass === 'undefined') ? width * height * depth : mass;
	};
	Physijs.ConvexMesh.prototype = new Physijs.Mesh;
	Physijs.ConvexMesh.prototype.constructor = Physijs.ConvexMesh;


	// Physijs.Vehicle
	Physijs.Vehicle = function( mesh, tuning ) {
		tuning = tuning || new Physijs.VehicleTuning;
		this.mesh = mesh;
		this.wheels = [];
		this._physijs = {
			id: getObjectId(),
			rigidBody: mesh._physijs.id,
			suspension_stiffness: tuning.suspension_stiffness,
			suspension_compression: tuning.suspension_compression,
			suspension_damping: tuning.suspension_damping,
			max_suspension_travel: tuning.max_suspension_travel,
			friction_slip: tuning.friction_slip,
			max_suspension_force: tuning.max_suspension_force
		};
	};
	Physijs.Vehicle.prototype.addWheel = function( wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning ) {
		var wheel = new THREE.Mesh( wheel_geometry, wheel_material );
		wheel.castShadow = wheel.receiveShadow = true;
		wheel.position.copy( wheel_direction ).multiplyScalar( suspension_rest_length / 100 ).add( connection_point );
		this.world.add( wheel );
		this.wheels.push( wheel );

		this.world.execute( 'addWheel', {
			id: this._physijs.id,
			connection_point: { x: connection_point.x, y: connection_point.y, z: connection_point.z },
			wheel_direction: { x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z },
			wheel_axle: { x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z },
			suspension_rest_length: suspension_rest_length,
			wheel_radius: wheel_radius,
			is_front_wheel: is_front_wheel,
			tuning: tuning
		});
	};
	Physijs.Vehicle.prototype.setSteering = function( amount, wheel ) {
		if ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {
			this.world.execute( 'setSteering', { id: this._physijs.id, wheel: wheel, steering: amount } );
		} else if ( this.wheels.length > 0 ) {
			for ( var i = 0; i < this.wheels.length; i++ ) {
				this.world.execute( 'setSteering', { id: this._physijs.id, wheel: i, steering: amount } );
			}
		}
	};
	Physijs.Vehicle.prototype.setBrake = function( amount, wheel ) {
		if ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {
			this.world.execute( 'setBrake', { id: this._physijs.id, wheel: wheel, brake: amount } );
		} else if ( this.wheels.length > 0 ) {
			for ( var i = 0; i < this.wheels.length; i++ ) {
				this.world.execute( 'setBrake', { id: this._physijs.id, wheel: i, brake: amount } );
			}
		}
	};
	Physijs.Vehicle.prototype.applyEngineForce = function( amount, wheel ) {
		if ( wheel !== undefined && this.wheels[ wheel ] !== undefined ) {
			this.world.execute( 'applyEngineForce', { id: this._physijs.id, wheel: wheel, force: amount } );
		} else if ( this.wheels.length > 0 ) {
			for ( var i = 0; i < this.wheels.length; i++ ) {
				this.world.execute( 'applyEngineForce', { id: this._physijs.id, wheel: i, force: amount } );
			}
		}
	};

	// Physijs.VehicleTuning
	Physijs.VehicleTuning = function( suspension_stiffness, suspension_compression, suspension_damping, max_suspension_travel, friction_slip, max_suspension_force ) {
		this.suspension_stiffness = suspension_stiffness !== undefined ? suspension_stiffness : 5.88;
		this.suspension_compression = suspension_compression !== undefined ? suspension_compression : 0.83;
		this.suspension_damping = suspension_damping !== undefined ? suspension_damping : 0.88;
		this.max_suspension_travel = max_suspension_travel !== undefined ? max_suspension_travel : 500;
		this.friction_slip = friction_slip !== undefined ? friction_slip : 10.5;
		this.max_suspension_force = max_suspension_force !== undefined ? max_suspension_force : 6000;
	};

	return Physijs;
}


},{"./physijs_worker.js":73}],73:[function(require,module,exports){
'use strict';
module.exports = function(workerToSceneMessageHandler, Ammo) {
	var	
		//transferableMessage = self.webkitPostMessage || self.postMessage,
		transferableMessage = function(x) {workerToSceneMessageHandler({data:x})},
	
		// enum
		MESSAGE_TYPES = {
			WORLDREPORT: 0,
			COLLISIONREPORT: 1,
			VEHICLEREPORT: 2,
			CONSTRAINTREPORT: 3
		},
	
		// temp variables
		_object,
		_vector,
		_transform,
	
		// functions
		public_functions = {},
		getShapeFromCache,
		setShapeCache,
		createShape,
		reportWorld,
		reportVehicles,
		reportCollisions,
		reportConstraints,
	
		// world variables
		fixedTimeStep, // used when calling stepSimulation
		rateLimit, // sets whether or not to sync the simulation rate with fixedTimeStep
		last_simulation_time,
		last_simulation_duration = 0,
		world,
		transform,
		_vec3_1,
		_vec3_2,
		_vec3_3,
		_quat,
		// private cache
		_objects = {},
		_vehicles = {},
		_constraints = {},
		_materials = {},
		_objects_ammo = {},
		_num_objects = 0,
		_num_wheels = 0,
		_num_constraints = 0,
		_object_shapes = {},
	
		// object reporting
		REPORT_CHUNKSIZE, // report array is increased in increments of this chunk size
	
		WORLDREPORT_ITEMSIZE = 14, // how many float values each reported item needs
		worldreport,

		COLLISIONREPORT_ITEMSIZE = 2, // one float for each object id
		collisionreport,

		VEHICLEREPORT_ITEMSIZE = 9, // vehicle id, wheel index, 3 for position, 4 for rotation
		vehiclereport,

		CONSTRAINTREPORT_ITEMSIZE = 6, // constraint id, offset object, offset, applied impulse
		constraintreport;

	var ab = new ArrayBuffer( 1 );

	transferableMessage( ab, [ab] );
	var SUPPORT_TRANSFERABLE = ( ab.byteLength === 0 );

	getShapeFromCache = function ( cache_key ) {
		if ( _object_shapes[ cache_key ] !== undefined ) {
			return _object_shapes[ cache_key ];
		}
		return null;
	};

	setShapeCache = function ( cache_key, shape ) {
		_object_shapes[ cache_key ] = shape;
	}

	createShape = function( description ) {
		var cache_key, shape;
	
		_transform.setIdentity();
		switch ( description.type ) {
			case 'plane':
				cache_key = 'plane_' + description.normal.x + '_' + description.normal.y + '_' + description.normal.z;
				if ( ( shape = getShapeFromCache( cache_key ) ) === null ) {
					_vec3_1.setX(description.normal.x);
					_vec3_1.setY(description.normal.y);
					_vec3_1.setZ(description.normal.z);
					shape = new Ammo.btStaticPlaneShape(_vec3_1, 0 );
					setShapeCache( cache_key, shape );
				}
				break;
		
			case 'box':
				cache_key = 'box_' + description.width + '_' + description.height + '_' + description.depth;
				if ( ( shape = getShapeFromCache( cache_key ) ) === null ) {
					_vec3_1.setX(description.width / 2);
					_vec3_1.setY(description.height / 2);
					_vec3_1.setZ(description.depth / 2);
					shape = new Ammo.btBoxShape(_vec3_1);
					setShapeCache( cache_key, shape );
				}
				break;
		
			case 'sphere':
				cache_key = 'sphere_' + description.radius;
				if ( ( shape = getShapeFromCache( cache_key ) ) === null ) {
					shape = new Ammo.btSphereShape( description.radius );
					setShapeCache( cache_key, shape );
				}
				break;
		
			case 'cylinder':
				cache_key = 'cylinder_' + description.width + '_' + description.height + '_' + description.depth;
				if ( ( shape = getShapeFromCache( cache_key ) ) === null ) {
					_vec3_1.setX(description.width / 2);
					_vec3_1.setY(description.height / 2);
					_vec3_1.setZ(description.depth / 2);
					shape = new Ammo.btCylinderShape(_vec3_1);
					setShapeCache( cache_key, shape );
				}
				break;
		
			case 'capsule':
				cache_key = 'capsule_' + description.radius + '_' + description.height;
				if ( ( shape = getShapeFromCache( cache_key ) ) === null ) {
					// In Bullet, capsule height excludes the end spheres
					shape = new Ammo.btCapsuleShape( description.radius, description.height - 2 * description.radius );
					setShapeCache( cache_key, shape );
				}
				break;
		
			case 'cone':
				cache_key = 'cone_' + description.radius + '_' + description.height;
				if ( ( shape = getShapeFromCache( cache_key ) ) === null ) {
					shape = new Ammo.btConeShape( description.radius, description.height );
					setShapeCache( cache_key, shape );
				}
				break;
		
			case 'concave':
				var i, triangle, triangle_mesh = new Ammo.btTriangleMesh;
				if (!description.triangles.length) return false

				for ( i = 0; i < description.triangles.length; i++ ) {
					triangle = description.triangles[i];
				
					_vec3_1.setX(triangle[0].x);
					_vec3_1.setY(triangle[0].y);
					_vec3_1.setZ(triangle[0].z);

					_vec3_2.setX(triangle[1].x);
					_vec3_2.setY(triangle[1].y);
					_vec3_2.setZ(triangle[1].z);

					_vec3_3.setX(triangle[2].x);
					_vec3_3.setY(triangle[2].y);
					_vec3_3.setZ(triangle[2].z);
				
					triangle_mesh.addTriangle(
						_vec3_1,
						_vec3_2,
						_vec3_3,
						true
					);
				}

				shape = new Ammo.btBvhTriangleMeshShape(
					triangle_mesh,
					true,
					true
				);
				break;
		
			case 'convex':
				var i, point, shape = new Ammo.btConvexHullShape;
				for ( i = 0; i < description.points.length; i++ ) {
					point = description.points[i];
				
					_vec3_1.setX(point.x);
					_vec3_1.setY(point.y);
					_vec3_1.setZ(point.z);

					shape.addPoint(_vec3_1);
				
				}
				break;

			case 'heightfield':

				var ptr = Ammo.allocate(4 * description.xpts * description.ypts, "float", Ammo.ALLOC_NORMAL);

				for (var f = 0; f < description.points.length; f++) {
					Ammo.setValue(ptr + f,  description.points[f]  , 'float');
				}

				shape = new Ammo.btHeightfieldTerrainShape(
						description.xpts,
						description.ypts,
						ptr,
						1,
						-description.absMaxHeight,
						description.absMaxHeight,
						2,
						0,
						false
					);

				_vec3_1.setX(description.xsize/(description.xpts - 1));
				_vec3_1.setY(description.ysize/(description.ypts - 1));
				_vec3_1.setZ(1);
			
				shape.setLocalScaling(_vec3_1);
				break;
		
			default:
				// Not recognized
				return;
				break;
		}
	
		return shape;
	};

	public_functions.init = function( params ) {
		//importScripts( params.ammo );
	
		_transform = new Ammo.btTransform;
		_vec3_1 = new Ammo.btVector3(0,0,0);
		_vec3_2 = new Ammo.btVector3(0,0,0);
		_vec3_3 = new Ammo.btVector3(0,0,0);
		_quat = new Ammo.btQuaternion(0,0,0,0);
	
		REPORT_CHUNKSIZE = params.reportsize || 50;
		if ( SUPPORT_TRANSFERABLE ) {
			// Transferable messages are supported, take advantage of them with TypedArrays
			worldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object
			collisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object
			vehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object
			constraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object
		} else {
			// Transferable messages are not supported, send data as normal arrays
			worldreport = [];
			collisionreport = [];
			vehiclereport = [];
			constraintreport = [];
		}
		worldreport[0] = MESSAGE_TYPES.WORLDREPORT;
		collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;
		vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;
		constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;
	
		var collisionConfiguration = new Ammo.btDefaultCollisionConfiguration,
			dispatcher = new Ammo.btCollisionDispatcher( collisionConfiguration ),
			solver = new Ammo.btSequentialImpulseConstraintSolver,
			broadphase;
	
		if ( !params.broadphase ) params.broadphase = { type: 'dynamic' };
		switch ( params.broadphase.type ) {
			case 'sweepprune':
			
				_vec3_1.setX(params.broadphase.aabbmin.x);
				_vec3_1.setY(params.broadphase.aabbmin.y);
				_vec3_1.setZ(params.broadphase.aabbmin.z);
			
				_vec3_2.setX(params.broadphase.aabbmax.x);
				_vec3_2.setY(params.broadphase.aabbmax.y);
				_vec3_2.setZ(params.broadphase.aabbmax.z);
			
				broadphase = new Ammo.btAxisSweep3(
					_vec3_1,
					_vec3_2
				);
			
				break;
		
			case 'dynamic':
			default:
				broadphase = new Ammo.btDbvtBroadphase;
				break;
		}
	
		world = new Ammo.btDiscreteDynamicsWorld( dispatcher, broadphase, solver, collisionConfiguration );
	
		fixedTimeStep = params.fixedTimeStep;
		rateLimit = params.rateLimit;

		transferableMessage({ cmd: 'worldReady' });
	};

	public_functions.registerMaterial = function( description ) {
		_materials[ description.id ] = description;
	};

	public_functions.setFixedTimeStep = function( description ) {
		fixedTimeStep = description;
	};

	public_functions.setGravity = function( description ) {
		_vec3_1.setX(description.x);
		_vec3_1.setY(description.y);
		_vec3_1.setZ(description.z);
		world.setGravity(_vec3_1);
	};

	public_functions.addObject = function( description ) {
	
		var i,
		localInertia, shape, motionState, rbInfo, body;

	shape = createShape( description );
	if (!shape) return
	// If there are children then this is a compound shape
	if ( description.children ) {
		var compound_shape = new Ammo.btCompoundShape, _child;
		compound_shape.addChildShape( _transform, shape );
	
		for ( i = 0; i < description.children.length; i++ ) {
			_child = description.children[i];
		
			var trans = new Ammo.btTransform;
			trans.setIdentity();
		
			_vec3_1.setX(_child.position_offset.x);
			_vec3_1.setY(_child.position_offset.y);
			_vec3_1.setZ(_child.position_offset.z);
			trans.setOrigin(_vec3_1); 
		
			_quat.setX(_child.rotation.x);
			_quat.setY(_child.rotation.y);
			_quat.setZ(_child.rotation.z);
			_quat.setW(_child.rotation.w);
			trans.setRotation(_quat); 
		
			shape = createShape( description.children[i] );
			compound_shape.addChildShape( trans, shape );
			Ammo.destroy(trans);
		}
	
		shape = compound_shape;
		}
		_vec3_1.setX(0);
		_vec3_1.setY(0);
		_vec3_1.setZ(0);
		shape.calculateLocalInertia( description.mass, _vec3_1 );
	
		_transform.setIdentity();
	
		_vec3_2.setX(description.position.x);
		_vec3_2.setY(description.position.y);
		_vec3_2.setZ(description.position.z);
		_transform.setOrigin(_vec3_2);
	
		_quat.setX(description.rotation.x);
		_quat.setY(description.rotation.y);
		_quat.setZ(description.rotation.z);
		_quat.setW(description.rotation.w);
		_transform.setRotation(_quat);
	
		motionState = new Ammo.btDefaultMotionState( _transform ); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement
		rbInfo = new Ammo.btRigidBodyConstructionInfo( description.mass, motionState, shape, _vec3_1 );
	
		if ( description.materialId !== undefined ) {
			rbInfo.set_m_friction( _materials[ description.materialId ].friction );
			rbInfo.set_m_restitution( _materials[ description.materialId ].restitution );
		}
	
		body = new Ammo.btRigidBody( rbInfo );
	
		if ( typeof description.collision_flags !== 'undefined' ) {
			body.setCollisionFlags( description.collision_flags );
		}
	
		world.addRigidBody( body );
	
		body.id = description.id;
		_objects[ body.id ] = body;
	
		var ptr = body.a != undefined ? body.a : body.ptr;
		_objects_ammo[ptr] = body.id;
		_num_objects++;
	
		transferableMessage({ cmd: 'objectReady', params: body.id });
	};

	public_functions.addVehicle = function( description ) {
		var vehicle_tuning = new Ammo.btVehicleTuning(),
			vehicle;

		vehicle_tuning.set_m_suspensionStiffness( description.suspension_stiffness );
		vehicle_tuning.set_m_suspensionCompression( description.suspension_compression );
		vehicle_tuning.set_m_suspensionDamping( description.suspension_damping );
		vehicle_tuning.set_m_maxSuspensionTravelCm( description.max_suspension_travel );
		vehicle_tuning.set_m_maxSuspensionForce( description.max_suspension_force );

		vehicle = new Ammo.btRaycastVehicle( vehicle_tuning, _objects[ description.rigidBody ], new Ammo.btDefaultVehicleRaycaster( world ) );
		vehicle.tuning = vehicle_tuning;

		_objects[ description.rigidBody ].setActivationState( 4 );
		vehicle.setCoordinateSystem( 0, 1, 2 );

		world.addVehicle( vehicle );
		_vehicles[ description.id ] = vehicle;
	};
	public_functions.removeVehicle = function( description ) {
		delete _vehicles[ description.id ];
	};

	public_functions.addWheel = function( description ) {
		if ( _vehicles[description.id] !== undefined ) {
			var tuning = _vehicles[description.id].tuning;
			if ( description.tuning !== undefined ) {
				tuning = new Ammo.btVehicleTuning();
				tuning.set_m_suspensionStiffness( description.tuning.suspension_stiffness );
				tuning.set_m_suspensionCompression( description.tuning.suspension_compression );
				tuning.set_m_suspensionDamping( description.tuning.suspension_damping );
				tuning.set_m_maxSuspensionTravelCm( description.tuning.max_suspension_travel );
				tuning.set_m_maxSuspensionForce( description.tuning.max_suspension_force );
			}
		
			_vec3_1.setX(description.connection_point.x);
			_vec3_1.setY(description.connection_point.y);
			_vec3_1.setZ(description.connection_point.z);
		
			_vec3_2.setX(description.wheel_direction.x);
			_vec3_2.setY(description.wheel_direction.y);
			_vec3_2.setZ(description.wheel_direction.z);
		
			_vec3_3.setX(description.wheel_axle.x);
			_vec3_3.setY(description.wheel_axle.y);
			_vec3_3.setZ(description.wheel_axle.z);
		
			_vehicles[description.id].addWheel(
				_vec3_1,
				_vec3_2,
				_vec3_3,
				description.suspension_rest_length,
				description.wheel_radius,
				tuning,
				description.is_front_wheel
			);
		}

		_num_wheels++;

		if ( SUPPORT_TRANSFERABLE ) {
			vehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )
			vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;
		} else {
			vehiclereport = [ MESSAGE_TYPES.VEHICLEREPORT ];
		}
	};

	public_functions.setSteering = function( details ) {
		if ( _vehicles[details.id] !== undefined ) {
			_vehicles[details.id].setSteeringValue( details.steering, details.wheel );
		}
	};
	public_functions.setBrake = function( details ) {
		if ( _vehicles[details.id] !== undefined ) {
			_vehicles[details.id].setBrake( details.brake, details.wheel );
		}
	};
	public_functions.applyEngineForce = function( details ) {
		if ( _vehicles[details.id] !== undefined ) {
			_vehicles[details.id].applyEngineForce( details.force, details.wheel );
		}
	};

	public_functions.removeObject = function( details ) {
		world.removeRigidBody( _objects[details.id] );
		delete _objects[details.id];
		_num_objects--;
	};

	public_functions.updateTransform = function( details ) {
		_object = _objects[details.id];
		_object.getMotionState().getWorldTransform( _transform );
	
		if ( details.pos ) {
			_vec3_1.setX(details.pos.x);
			_vec3_1.setY(details.pos.y);
			_vec3_1.setZ(details.pos.z);
			_transform.setOrigin(_vec3_1);
		}
	
		if ( details.quat ) {
			_quat.setX(details.quat.x);
			_quat.setY(details.quat.y);
			_quat.setZ(details.quat.z);
			_quat.setW(details.quat.w);
			_transform.setRotation(_quat);
		}
	
		_object.setWorldTransform( _transform );
		_object.activate();
	};

	public_functions.updateMass = function( details ) {
		// #TODO: changing a static object into dynamic is buggy
		_object = _objects[details.id];
	
		// Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816
		world.removeRigidBody( _object );
	
		_vec3_1.setX(0);
		_vec3_1.setY(0);
		_vec3_1.setZ(0);
	
		_object.setMassProps( details.mass, _vec3_1 );
		world.addRigidBody( _object );
		_object.activate();
	};

	public_functions.applyCentralImpulse = function ( details ) {
	
		_vec3_1.setX(details.x);
		_vec3_1.setY(details.y);
		_vec3_1.setZ(details.z);
	
		_objects[details.id].applyCentralImpulse(_vec3_1);
		_objects[details.id].activate();
	};

	public_functions.applyImpulse = function ( details ) {

		_vec3_1.setX(details.impulse_x);
		_vec3_1.setY(details.impulse_y);
		_vec3_1.setZ(details.impulse_z);
	
		_vec3_2.setX(details.x);
		_vec3_2.setY(details.y);
		_vec3_2.setZ(details.z);

		_objects[details.id].applyImpulse(
			_vec3_1,
			_vec3_2
		);
		_objects[details.id].activate();
	};

	public_functions.applyCentralForce = function ( details ) {
	
		_vec3_1.setX(details.x);
		_vec3_1.setY(details.y);
		_vec3_1.setZ(details.z);
	
		_objects[details.id].applyCentralForce(_vec3_1);
		_objects[details.id].activate();
	};

	public_functions.applyForce = function ( details ) {
	
		_vec3_1.setX(details.impulse_x);
		_vec3_1.setY(details.impulse_y);
		_vec3_1.setZ(details.impulse_z);
	
		_vec3_2.setX(details.x);
		_vec3_2.setY(details.y);
		_vec3_2.setZ(details.z);
	
		_objects[details.id].applyForce(
			_vec3_1,
			_vec3_2
		);	
		_objects[details.id].activate();
	};

	public_functions.setAngularVelocity = function ( details ) {

		_vec3_1.setX(details.x);
		_vec3_1.setY(details.y);
		_vec3_1.setZ(details.z);
	
		_objects[details.id].setAngularVelocity(
			_vec3_1
		);
		_objects[details.id].activate();
	};

	public_functions.setLinearVelocity = function ( details ) {

		_vec3_1.setX(details.x);
		_vec3_1.setY(details.y);
		_vec3_1.setZ(details.z);
	
		_objects[details.id].setLinearVelocity(
			_vec3_1
		);
		_objects[details.id].activate();
	};

	public_functions.setAngularFactor = function ( details ) {

		_vec3_1.setX(details.x);
		_vec3_1.setY(details.y);
		_vec3_1.setZ(details.z);
	
		_objects[details.id].setAngularFactor(
				_vec3_1
		);
	};

	public_functions.setLinearFactor = function ( details ) {

		_vec3_1.setX(details.x);
		_vec3_1.setY(details.y);
		_vec3_1.setZ(details.z);
	
		_objects[details.id].setLinearFactor(
			_vec3_1
		);
	};

	public_functions.setDamping = function ( details ) {
		_objects[details.id].setDamping( details.linear, details.angular );
	};

	public_functions.setCcdMotionThreshold = function ( details ) {
		_objects[details.id].setCcdMotionThreshold( details.threshold );
	};

	public_functions.setCcdSweptSphereRadius = function ( details ) {
		_objects[details.id].setCcdSweptSphereRadius( details.radius );
	};

	public_functions.addConstraint = function ( details ) {
		var constraint;

		switch ( details.type ) {
		
			case 'point':
				if ( details.objectb === undefined ) {
				
					_vec3_1.setX(details.positiona.x);
					_vec3_1.setY(details.positiona.y);
					_vec3_1.setZ(details.positiona.z);
				
					constraint = new Ammo.btPoint2PointConstraint(
						_objects[ details.objecta ],
						_vec3_1
					);
				} else {
				
					_vec3_1.setX(details.positiona.x);
					_vec3_1.setY(details.positiona.y);
					_vec3_1.setZ(details.positiona.z);
				
					_vec3_2.setX(details.positionb.x);
					_vec3_2.setY(details.positionb.y);
					_vec3_2.setZ(details.positionb.z);
				
					constraint = new Ammo.btPoint2PointConstraint(
						_objects[ details.objecta ],
						_objects[ details.objectb ],
						_vec3_1,
						_vec3_2
					);
				}
				break;
		
			case 'hinge':
				if ( details.objectb === undefined ) {
				
					_vec3_1.setX(details.positiona.x);
					_vec3_1.setY(details.positiona.y);
					_vec3_1.setZ(details.positiona.z);
				
					_vec3_2.setX(details.axis.x);
					_vec3_2.setY(details.axis.y);
					_vec3_2.setZ(details.axis.z);
				
					constraint = new Ammo.btHingeConstraint(
						_objects[ details.objecta ],
						_vec3_1,
						_vec3_2
					);
				} else {
				
					_vec3_1.setX(details.positiona.x);
					_vec3_1.setY(details.positiona.y);
					_vec3_1.setZ(details.positiona.z);
				
					_vec3_2.setX(details.positionb.x);
					_vec3_2.setY(details.positionb.y);
					_vec3_2.setZ(details.positionb.z);

					_vec3_3.setX(details.axis.x);
					_vec3_3.setY(details.axis.y);
					_vec3_3.setZ(details.axis.z);
				
					constraint = new Ammo.btHingeConstraint(
						_objects[ details.objecta ],
						_objects[ details.objectb ],
						_vec3_1,
						_vec3_2,
						_vec3_3,
						_vec3_3
					);
				}
				break;
		
			case 'slider':
				var transforma, transformb, rotation;
		
				transforma = new Ammo.btTransform();
			
				_vec3_1.setX(details.positiona.x);
				_vec3_1.setY(details.positiona.y);
				_vec3_1.setZ(details.positiona.z);
			
				transforma.setOrigin(_vec3_1);
			
				var rotation = transforma.getRotation();
				rotation.setEuler( details.axis.x, details.axis.y, details.axis.z );
				transforma.setRotation( rotation );
			
				if ( details.objectb ) {
					transformb = new Ammo.btTransform();

					_vec3_2.setX(details.positionb.x);
					_vec3_2.setY(details.positionb.y);
					_vec3_2.setZ(details.positionb.z);

					transformb.setOrigin(_vec3_2);
				
					rotation = transformb.getRotation();
					rotation.setEuler( details.axis.x, details.axis.y, details.axis.z );
					transformb.setRotation( rotation );
				
					constraint = new Ammo.btSliderConstraint(
						_objects[ details.objecta ],
						_objects[ details.objectb ],
						transforma,
						transformb,
						true
					);
				} else {
					constraint = new Ammo.btSliderConstraint(
						_objects[ details.objecta ],
						transforma,
						true
					);
				}
			
				Ammo.destroy(transforma);
				if (transformb != undefined) {
					Ammo.destroy(transformb);	
				}
				break;
		
			case 'conetwist':
				var transforma, transformb;
			
				transforma = new Ammo.btTransform();
				transforma.setIdentity();
			
				transformb = new Ammo.btTransform();
				transformb.setIdentity();
			
				_vec3_1.setX(details.positiona.x);
				_vec3_1.setY(details.positiona.y);
				_vec3_1.setZ(details.positiona.z);
			
				_vec3_2.setX(details.positionb.x);
				_vec3_2.setY(details.positionb.y);
				_vec3_2.setZ(details.positionb.z);
			
				transforma.setOrigin(_vec3_1);
				transformb.setOrigin(_vec3_2);
			
				var rotation = transforma.getRotation();
				rotation.setEulerZYX( -details.axisa.z, -details.axisa.y, -details.axisa.x );
				transforma.setRotation( rotation );
			
				rotation = transformb.getRotation();
				rotation.setEulerZYX( -details.axisb.z, -details.axisb.y, -details.axisb.x );
				transformb.setRotation( rotation );
			
				constraint = new Ammo.btConeTwistConstraint(
					_objects[ details.objecta ],
					_objects[ details.objectb ],
					transforma,
					transformb
				);
			
				constraint.setLimit( Math.PI, 0, Math.PI );
			
				Ammo.destroy(transforma);
				Ammo.destroy(transformb);	
			
				break;
		
			case 'dof':
				var transforma, transformb, rotation;
		
				transforma = new Ammo.btTransform();
				transforma.setIdentity();
			
				_vec3_1.setX(details.positiona.x);
				_vec3_1.setY(details.positiona.y);
				_vec3_1.setZ(details.positiona.z);
			
				transforma.setOrigin(_vec3_1 );
			
				rotation = transforma.getRotation();
				rotation.setEulerZYX( -details.axisa.z, -details.axisa.y, -details.axisa.x );
				transforma.setRotation( rotation );
			
				if ( details.objectb ) {
					transformb = new Ammo.btTransform();
					transformb.setIdentity();
				
					_vec3_2.setX(details.positionb.x);
					_vec3_2.setY(details.positionb.y);
					_vec3_2.setZ(details.positionb.z);
				
					transformb.setOrigin(_vec3_2);
				
					rotation = transformb.getRotation();
					rotation.setEulerZYX( -details.axisb.z, -details.axisb.y, -details.axisb.x );
					transformb.setRotation( rotation );
				
					constraint = new Ammo.btGeneric6DofConstraint(
						_objects[ details.objecta ],
						_objects[ details.objectb ],
						transforma,
						transformb
					);
				} else {
					constraint = new Ammo.btGeneric6DofConstraint(
						_objects[ details.objecta ],
						transforma
					);
				}
				Ammo.destroy(transforma);
				if (transformb != undefined) {
					Ammo.destroy(transformb);	
				}
				break;
		
			default:
				return;
		
		};
	
		world.addConstraint( constraint );

		constraint.enableFeedback();
		_constraints[ details.id ] = constraint;
		_num_constraints++;

		if ( SUPPORT_TRANSFERABLE ) {
			constraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )
			constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;
		} else {
			constraintreport = [ MESSAGE_TYPES.CONSTRAINTREPORT ];
		}
	};

	public_functions.removeConstraint = function( details ) {
		var constraint = _constraints[ details.id ];
		if ( constraint !== undefined ) {
			world.removeConstraint( constraint );
			delete _constraints[ details.id ];
			_num_constraints--;
		}
	};

	public_functions.constraint_setBreakingImpulseThreshold = function( details ) {
		var constraint = _constraints[ details.id ];
		if ( constraint !== undefind ) {
			constraint.setBreakingImpulseThreshold( details.threshold );
		}
	};

	public_functions.simulate = function simulate( params ) {
		if ( world ) {
			params = params || {};
		
			if ( !params.timeStep ) {
				if ( last_simulation_time ) {
					params.timeStep = 0;
					while ( params.timeStep + last_simulation_duration <= fixedTimeStep ) {
						params.timeStep = ( Date.now() - last_simulation_time ) / 1000; // time since last simulation
					}
				} else {
					params.timeStep = fixedTimeStep; // handle first frame
				}
			} else {
				if ( params.timeStep < fixedTimeStep ) {
					params.timeStep = fixedTimeStep;
				}
			}

			params.maxSubSteps = params.maxSubSteps || Math.ceil( params.timeStep / fixedTimeStep ); // If maxSubSteps is not defined, keep the simulation fully up to date

			last_simulation_duration = Date.now();
			world.stepSimulation( params.timeStep, params.maxSubSteps, fixedTimeStep );
		
			reportVehicles();
			reportCollisions();
			reportConstraints();
			reportWorld();
		
			last_simulation_duration = ( Date.now() - last_simulation_duration ) / 1000;
			last_simulation_time = Date.now();
		}
	};


	// Constraint functions
	public_functions.hinge_setLimits = function( params ) {
		_constraints[ params.constraint ].setLimit( params.low, params.high, 0, params.bias_factor, params.relaxation_factor );
	};
	public_functions.hinge_enableAngularMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.enableAngularMotor( true, params.velocity, params.acceleration );
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.hinge_disableMotor = function( params ) {
		_constraints[ params.constraint ].enableMotor( false );
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};

	public_functions.slider_setLimits = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setLowerLinLimit( params.lin_lower || 0 );
		constraint.setUpperLinLimit( params.lin_upper || 0 );
	
		constraint.setLowerAngLimit( params.ang_lower || 0 );
		constraint.setUpperAngLimit( params.ang_upper || 0 );
	};
	public_functions.slider_setRestitution = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setSoftnessLimLin( params.linear || 0 );
		constraint.setSoftnessLimAng( params.angular || 0 );
	};
	public_functions.slider_enableLinearMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setTargetLinMotorVelocity( params.velocity );
		constraint.setMaxLinMotorForce( params.acceleration );
		constraint.setPoweredLinMotor( true );
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.slider_disableLinearMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setPoweredLinMotor( false );
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.slider_enableAngularMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setTargetAngMotorVelocity( params.velocity );
		constraint.setMaxAngMotorForce( params.acceleration );
		constraint.setPoweredAngMotor( true );
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.slider_disableAngularMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setPoweredAngMotor( false );
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};

	public_functions.conetwist_setLimit = function( params ) {
		_constraints[ params.constraint ].setLimit( params.z, params.y, params.x ); // ZYX order
	};
	public_functions.conetwist_enableMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.enableMotor( true );
		constraint.getRigidBodyA().activate();
		constraint.getRigidBodyB().activate();
	};
	public_functions.conetwist_setMaxMotorImpulse = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.setMaxMotorImpulse( params.max_impulse );
		constraint.getRigidBodyA().activate();
		constraint.getRigidBodyB().activate();
	};
	public_functions.conetwist_setMotorTarget = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		_quat.setX(params.x);
		_quat.setY(params.y);
		_quat.setZ(params.z);
		_quat.setW(params.w);
	
		constraint.setMotorTarget(_quat);
	
		constraint.getRigidBodyA().activate();
		constraint.getRigidBodyB().activate();
	};
	public_functions.conetwist_disableMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
		constraint.enableMotor( false );
		constraint.getRigidBodyA().activate();
		constraint.getRigidBodyB().activate();
	};

	public_functions.dof_setLinearLowerLimit = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		_vec3_1.setX(params.x);
		_vec3_1.setY(params.y);
		_vec3_1.setZ(params.z);
	
		constraint.setLinearLowerLimit(_vec3_1);
	
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.dof_setLinearUpperLimit = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		_vec3_1.setX(params.x);
		_vec3_1.setY(params.y);
		_vec3_1.setZ(params.z);
	
		constraint.setLinearUpperLimit(_vec3_1);

		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.dof_setAngularLowerLimit = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		_vec3_1.setX(params.x);
		_vec3_1.setY(params.y);
		_vec3_1.setZ(params.z);
	
		constraint.setAngularLowerLimit(_vec3_1);
	
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {											
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.dof_setAngularUpperLimit = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		_vec3_1.setX(params.x);
		_vec3_1.setY(params.y);
		_vec3_1.setZ(params.z);
	
		constraint.setAngularUpperLimit(_vec3_1);
	
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.dof_enableAngularMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		var motor = constraint.getRotationalLimitMotor( params.which );
		motor.set_m_enableMotor( true );
	
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.dof_configureAngularMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		var motor = constraint.getRotationalLimitMotor( params.which );
	
		motor.set_m_loLimit( params.low_angle );
		motor.set_m_hiLimit( params.high_angle );
		motor.set_m_targetVelocity( params.velocity );
		motor.set_m_maxMotorForce( params.max_force );
	
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};
	public_functions.dof_disableAngularMotor = function( params ) {
		var constraint = _constraints[ params.constraint ];
	
		var motor = constraint.getRotationalLimitMotor( params.which );
		motor.set_m_enableMotor( false );
	
		constraint.getRigidBodyA().activate();
		if ( constraint.getRigidBodyB() ) {
			constraint.getRigidBodyB().activate();
		}
	};

	reportWorld = function() {
		var index, object,
			transform, origin, rotation, 
			offset = 0,
			i = 0;
	
		if ( SUPPORT_TRANSFERABLE ) {
			if ( worldreport.length < 2 + _num_objects * WORLDREPORT_ITEMSIZE ) {
				worldreport = new Float32Array(
					2 + // message id & # objects in report
					( Math.ceil( _num_objects / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * WORLDREPORT_ITEMSIZE // # of values needed * item size
				);
				worldreport[0] = MESSAGE_TYPES.WORLDREPORT;
			}
		}
	
		worldreport[1] = _num_objects; // record how many objects we're reporting on

		//for ( i = 0; i < worldreport[1]; i++ ) {
		for ( index in _objects ) {
			if ( _objects.hasOwnProperty( index ) ) {
				object = _objects[index];
			
				// #TODO: we can't use center of mass transform when center of mass can change,
				//        but getMotionState().getWorldTransform() screws up on objects that have been moved
				//object.getMotionState().getWorldTransform( transform );
				transform = object.getCenterOfMassTransform(); 
			
				origin = transform.getOrigin(); 
				rotation = transform.getRotation();
			
				// add values to report
				offset = 2 + (i++) * WORLDREPORT_ITEMSIZE;
			
				worldreport[ offset ] = object.id;
			
				worldreport[ offset + 1 ] = origin.x();
				worldreport[ offset + 2 ] = origin.y();
				worldreport[ offset + 3 ] = origin.z();
			
				worldreport[ offset + 4 ] = rotation.x();
				worldreport[ offset + 5 ] = rotation.y();
				worldreport[ offset + 6 ] = rotation.z();
				worldreport[ offset + 7 ] = rotation.w();
			
				_vector = object.getLinearVelocity();
				worldreport[ offset + 8 ] = _vector.x();
				worldreport[ offset + 9 ] = _vector.y();
				worldreport[ offset + 10 ] = _vector.z();
			
				_vector = object.getAngularVelocity();
				worldreport[ offset + 11 ] = _vector.x();
				worldreport[ offset + 12 ] = _vector.y();
				worldreport[ offset + 13 ] = _vector.z();
			}
		}
	
	
		if ( SUPPORT_TRANSFERABLE ) {
			transferableMessage( worldreport.buffer, [worldreport.buffer] );
		} else {
			transferableMessage( worldreport );
		}
	
	};

	reportCollisions = function() {
		var i, offset,
			dp = world.getDispatcher(),
			num = dp.getNumManifolds(),
			manifold, num_contacts, j, pt,
			_collided = false;
	
		if ( SUPPORT_TRANSFERABLE ) {
			if ( collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE ) {
				collisionreport = new Float32Array(
					2 + // message id & # objects in report
					( Math.ceil( _num_objects / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * COLLISIONREPORT_ITEMSIZE // # of values needed * item size
				);
				collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;
			}
		}
	
		collisionreport[1] = 0; // how many collisions we're reporting on
	
		for ( i = 0; i < num; i++ ) {
			manifold = dp.getManifoldByIndexInternal( i );
		
			num_contacts = manifold.getNumContacts();
			if ( num_contacts === 0 ) {
				continue;
			}
		
			for ( j = 0; j < num_contacts; j++ ) {
				pt = manifold.getContactPoint( j );
				//if ( pt.getDistance() < 0 ) {
					offset = 2 + (collisionreport[1]++) * COLLISIONREPORT_ITEMSIZE;
					collisionreport[ offset ] = _objects_ammo[ manifold.getBody0() ];
					collisionreport[ offset + 1 ] = _objects_ammo[ manifold.getBody1() ];
					break;
				//}
				
					transferableMessage( _objects_ammo );	
		
			}	
		}
	
	
		if ( SUPPORT_TRANSFERABLE ) {
			transferableMessage( collisionreport.buffer, [collisionreport.buffer] );
		} else {
			transferableMessage( collisionreport );
		}
	};

	reportVehicles = function() {
		var index, vehicle,
			transform, origin, rotation, 
			offset = 0,
			i = 0, j = 0;

		if ( SUPPORT_TRANSFERABLE ) {
			if ( vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE ) {
				vehiclereport = new Float32Array(
					2 + // message id & # objects in report
					( Math.ceil( _num_wheels / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * VEHICLEREPORT_ITEMSIZE // # of values needed * item size
				);
				vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;
			}
		}

		for ( index in _vehicles ) {
			if ( _vehicles.hasOwnProperty( index ) ) {
				vehicle = _vehicles[index];

				for ( j = 0; j < vehicle.getNumWheels(); j++ ) {

					//vehicle.updateWheelTransform( j, true );

					//transform = vehicle.getWheelTransformWS( j );
					transform = vehicle.getWheelInfo( j ).get_m_worldTransform(); 

					origin = transform.getOrigin(); 
					rotation = transform.getRotation(); 

					// add values to report
					offset = 1 + (i++) * VEHICLEREPORT_ITEMSIZE;

					vehiclereport[ offset ] = index;
					vehiclereport[ offset + 1 ] = j;

					vehiclereport[ offset + 2 ] = origin.x();
					vehiclereport[ offset + 3 ] = origin.y();
					vehiclereport[ offset + 4 ] = origin.z();

					vehiclereport[ offset + 5 ] = rotation.x();
					vehiclereport[ offset + 6 ] = rotation.y();
					vehiclereport[ offset + 7 ] = rotation.z();
					vehiclereport[ offset + 8 ] = rotation.w();

				}

			}
		}
	
		if ( j !== 0 ) {
			if ( SUPPORT_TRANSFERABLE ) {
				transferableMessage( vehiclereport.buffer, [vehiclereport.buffer] );
			} else {
				transferableMessage( vehiclereport );
			}
		}
	};

	reportConstraints = function() {
		var index, constraint,
			offset_body,
			transform, origin, 
			offset = 0,
			i = 0;

		if ( SUPPORT_TRANSFERABLE ) {
			if ( constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE ) {
				constraintreport = new Float32Array(
					2 + // message id & # objects in report
					( Math.ceil( _num_constraints / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size
				);
				constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;
			}
		}

		for ( index in _constraints ) {
			if ( _constraints.hasOwnProperty( index ) ) {
				constraint = _constraints[index];
				offset_body = constraint.getRigidBodyA();
				transform = constraint.getFrameOffsetA(); 
				origin = transform.getOrigin();

				// add values to report
				offset = 1 + (i++) * CONSTRAINTREPORT_ITEMSIZE;

				constraintreport[ offset ] = index;
				constraintreport[ offset + 1 ] = offset_body.id;
				constraintreport[ offset + 2 ] = origin.getX();
				constraintreport[ offset + 3 ] = origin.getY();
				constraintreport[ offset + 4 ] = origin.getZ();
				constraintreport[ offset + 5 ] = constraint.getAppliedImpulse();
			}
		}

	
		if ( i !== 0 ) {
			if ( SUPPORT_TRANSFERABLE ) {
				transferableMessage( constraintreport.buffer, [constraintreport.buffer] );
			} else {
				transferableMessage( constraintreport );
			}
		}
	
	};

	var onmessage = function( event ) {
	
		if ( event.data instanceof Float32Array ) {
			// transferable object
		
			switch ( event.data[0] ) {
				case MESSAGE_TYPES.WORLDREPORT:
					worldreport = new Float32Array( event.data );
					break;

				case MESSAGE_TYPES.COLLISIONREPORT:
					collisionreport = new Float32Array( event.data );
					break;

				case MESSAGE_TYPES.VEHICLEREPORT:
					vehiclereport = new Float32Array( event.data );
					break;

				case MESSAGE_TYPES.CONSTRAINTREPORT:
					constraintreport = new Float32Array( event.data );
					break;
			}
		
			return;
		}
	
		if ( event.data.cmd && public_functions[event.data.cmd] ) {
			//if ( event.data.params.id !== undefined && _objects[event.data.params.id] === undefined && event.data.cmd !== 'addObject' && event.data.cmd !== 'registerMaterial' ) return;
			public_functions[event.data.cmd]( event.data.params );
		}
	
	};
	
	return {
		sceneToWorkerMessageHandler: onmessage
	};
};


},{}],74:[function(require,module,exports){
(function (process){

var window = window || {};
var self = self || {};

// High-resulution counter: emulate window.performance.now() for THREE.CLOCK
if( window.performance === undefined ) {

	window.performance = { };

}

if( window.performance.now === undefined ) {

	window.performance.now = function () {

		var time = process.hrtime();
		return ( time[0] + time[1] / 1e9 ) * 1000;

	};

}
/**
 * @author mrdoob / http://mrdoob.com/
 * @author Larry Battle / http://bateru.com/news
 */

var THREE = THREE || { REVISION: '57' };

self.console = self.console || {

	info: function () {},
	log: function () {},
	debug: function () {},
	warn: function () {},
	error: function () {}

};

self.Int32Array = self.Int32Array || Array;
self.Float32Array = self.Float32Array || Array;

String.prototype.trim = String.prototype.trim || function () {

	return this.replace( /^\s+|\s+$/g, '' );

};

// based on https://github.com/documentcloud/underscore/blob/bf657be243a075b5e72acc8a83e6f12a564d8f55/underscore.js#L767
THREE.extend = function ( obj, source ) {

	// ECMAScript5 compatibility based on: http://www.nczonline.net/blog/2012/12/11/are-your-mixins-ecmascript-5-compatible/
	if ( Object.keys ) {

		var keys = Object.keys( source );

		for (var i = 0, il = keys.length; i < il; i++) {

			var prop = keys[i];
			Object.defineProperty( obj, prop, Object.getOwnPropertyDescriptor( source, prop ) );

		}

	} else {

		var safeHasOwnProperty = {}.hasOwnProperty;

		for ( var prop in source ) {

			if ( safeHasOwnProperty.call( source, prop ) ) {

				obj[prop] = source[prop];

			}

		}

	}

	return obj;

};

// http://paulirish.com/2011/requestanimationframe-for-smart-animating/
// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating

// requestAnimationFrame polyfill by Erik Möller
// fixes from Paul Irish and Tino Zijdel

( function () {

	var lastTime = 0;
	var vendors = [ 'ms', 'moz', 'webkit', 'o' ];

	for ( var x = 0; x < vendors.length && !window.requestAnimationFrame; ++ x ) {

		window.requestAnimationFrame = window[ vendors[ x ] + 'RequestAnimationFrame' ];
		window.cancelAnimationFrame = window[ vendors[ x ] + 'CancelAnimationFrame' ] || window[ vendors[ x ] + 'CancelRequestAnimationFrame' ];

	}

	if ( window.requestAnimationFrame === undefined ) {

		window.requestAnimationFrame = function ( callback ) {

			var currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );
			var id = window.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall );
			lastTime = currTime + timeToCall;
			return id;

		};

	}

	window.cancelAnimationFrame = window.cancelAnimationFrame || function ( id ) { window.clearTimeout( id ) };

}() );

// GL STATE CONSTANTS

THREE.CullFaceNone = 0;
THREE.CullFaceBack = 1;
THREE.CullFaceFront = 2;
THREE.CullFaceFrontBack = 3;

THREE.FrontFaceDirectionCW = 0;
THREE.FrontFaceDirectionCCW = 1;

// SHADOWING TYPES

THREE.BasicShadowMap = 0;
THREE.PCFShadowMap = 1;
THREE.PCFSoftShadowMap = 2;

// MATERIAL CONSTANTS

// side

THREE.FrontSide = 0;
THREE.BackSide = 1;
THREE.DoubleSide = 2;

// shading

THREE.NoShading = 0;
THREE.FlatShading = 1;
THREE.SmoothShading = 2;

// colors

THREE.NoColors = 0;
THREE.FaceColors = 1;
THREE.VertexColors = 2;

// blending modes

THREE.NoBlending = 0;
THREE.NormalBlending = 1;
THREE.AdditiveBlending = 2;
THREE.SubtractiveBlending = 3;
THREE.MultiplyBlending = 4;
THREE.CustomBlending = 5;

// custom blending equations
// (numbers start from 100 not to clash with other
//  mappings to OpenGL constants defined in Texture.js)

THREE.AddEquation = 100;
THREE.SubtractEquation = 101;
THREE.ReverseSubtractEquation = 102;

// custom blending destination factors

THREE.ZeroFactor = 200;
THREE.OneFactor = 201;
THREE.SrcColorFactor = 202;
THREE.OneMinusSrcColorFactor = 203;
THREE.SrcAlphaFactor = 204;
THREE.OneMinusSrcAlphaFactor = 205;
THREE.DstAlphaFactor = 206;
THREE.OneMinusDstAlphaFactor = 207;

// custom blending source factors

//THREE.ZeroFactor = 200;
//THREE.OneFactor = 201;
//THREE.SrcAlphaFactor = 204;
//THREE.OneMinusSrcAlphaFactor = 205;
//THREE.DstAlphaFactor = 206;
//THREE.OneMinusDstAlphaFactor = 207;
THREE.DstColorFactor = 208;
THREE.OneMinusDstColorFactor = 209;
THREE.SrcAlphaSaturateFactor = 210;


// TEXTURE CONSTANTS

THREE.MultiplyOperation = 0;
THREE.MixOperation = 1;
THREE.AddOperation = 2;

// Mapping modes

THREE.UVMapping = function () {};

THREE.CubeReflectionMapping = function () {};
THREE.CubeRefractionMapping = function () {};

THREE.SphericalReflectionMapping = function () {};
THREE.SphericalRefractionMapping = function () {};

// Wrapping modes

THREE.RepeatWrapping = 1000;
THREE.ClampToEdgeWrapping = 1001;
THREE.MirroredRepeatWrapping = 1002;

// Filters

THREE.NearestFilter = 1003;
THREE.NearestMipMapNearestFilter = 1004;
THREE.NearestMipMapLinearFilter = 1005;
THREE.LinearFilter = 1006;
THREE.LinearMipMapNearestFilter = 1007;
THREE.LinearMipMapLinearFilter = 1008;

// Data types

THREE.UnsignedByteType = 1009;
THREE.ByteType = 1010;
THREE.ShortType = 1011;
THREE.UnsignedShortType = 1012;
THREE.IntType = 1013;
THREE.UnsignedIntType = 1014;
THREE.FloatType = 1015;

// Pixel types

//THREE.UnsignedByteType = 1009;
THREE.UnsignedShort4444Type = 1016;
THREE.UnsignedShort5551Type = 1017;
THREE.UnsignedShort565Type = 1018;

// Pixel formats

THREE.AlphaFormat = 1019;
THREE.RGBFormat = 1020;
THREE.RGBAFormat = 1021;
THREE.LuminanceFormat = 1022;
THREE.LuminanceAlphaFormat = 1023;

// Compressed texture formats

THREE.RGB_S3TC_DXT1_Format = 2001;
THREE.RGBA_S3TC_DXT1_Format = 2002;
THREE.RGBA_S3TC_DXT3_Format = 2003;
THREE.RGBA_S3TC_DXT5_Format = 2004;

/*
// Potential future PVRTC compressed texture formats
THREE.RGB_PVRTC_4BPPV1_Format = 2100;
THREE.RGB_PVRTC_2BPPV1_Format = 2101;
THREE.RGBA_PVRTC_4BPPV1_Format = 2102;
THREE.RGBA_PVRTC_2BPPV1_Format = 2103;
*/
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Color = function ( value ) {

	if ( value !== undefined ) this.set( value );

	return this;

};

THREE.Color.prototype = {

	constructor: THREE.Color,

	r: 1, g: 1, b: 1,

	set: function ( value ) {

		switch ( typeof value ) {

			case "number":
				this.setHex( value );
				break;

			case "string":
				this.setStyle( value );
				break;

		}

	},

	setHex: function ( hex ) {

		hex = Math.floor( hex );

		this.r = ( hex >> 16 & 255 ) / 255;
		this.g = ( hex >> 8 & 255 ) / 255;
		this.b = ( hex & 255 ) / 255;

		return this;

	},

	setRGB: function ( r, g, b ) {

		this.r = r;
		this.g = g;
		this.b = b;

		return this;

	},

	setHSL: function ( h, s, l ) {

		// h,s,l ranges are in 0.0 - 1.0

		if ( s === 0 ) {

			this.r = this.g = this.b = l;

		} else {

			var hue2rgb = function ( p, q, t ) {

				if ( t < 0 ) t += 1;
				if ( t > 1 ) t -= 1;
				if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;
				if ( t < 1 / 2 ) return q;
				if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );
				return p;

			};

			var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );
			var q = ( 2 * l ) - p;

			this.r = hue2rgb( q, p, h + 1 / 3 );
			this.g = hue2rgb( q, p, h );
			this.b = hue2rgb( q, p, h - 1 / 3 );

		}

		return this;

	},

	setStyle: function ( style ) {

		// rgb(255,0,0)

		if ( /^rgb\((\d+),(\d+),(\d+)\)$/i.test( style ) ) {

			var color = /^rgb\((\d+),(\d+),(\d+)\)$/i.exec( style );

			this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;
			this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;
			this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;

			return this;

		}

		// rgb(100%,0%,0%)

		if ( /^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test( style ) ) {

			var color = /^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec( style );

			this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;
			this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;
			this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;

			return this;

		}

		// #ff0000

		if ( /^\#([0-9a-f]{6})$/i.test( style ) ) {

			var color = /^\#([0-9a-f]{6})$/i.exec( style );

			this.setHex( parseInt( color[ 1 ], 16 ) );

			return this;

		}

		// #f00

		if ( /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {

			var color = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );

			this.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );

			return this;

		}

		// red

		if ( /^(\w+)$/i.test( style ) ) {

			this.setHex( THREE.ColorKeywords[ style ] );

			return this;

		}


	},

	copy: function ( color ) {

		this.r = color.r;
		this.g = color.g;
		this.b = color.b;

		return this;

	},

	copyGammaToLinear: function ( color ) {

		this.r = color.r * color.r;
		this.g = color.g * color.g;
		this.b = color.b * color.b;

		return this;

	},

	copyLinearToGamma: function ( color ) {

		this.r = Math.sqrt( color.r );
		this.g = Math.sqrt( color.g );
		this.b = Math.sqrt( color.b );

		return this;

	},

	convertGammaToLinear: function () {

		var r = this.r, g = this.g, b = this.b;

		this.r = r * r;
		this.g = g * g;
		this.b = b * b;

		return this;

	},

	convertLinearToGamma: function () {

		this.r = Math.sqrt( this.r );
		this.g = Math.sqrt( this.g );
		this.b = Math.sqrt( this.b );

		return this;

	},

	getHex: function () {

		return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;

	},

	getHexString: function () {

		return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );

	},

	getHSL: function () {

		var hsl = { h: 0, s: 0, l: 0 };

		return function () {

			// h,s,l ranges are in 0.0 - 1.0

			var r = this.r, g = this.g, b = this.b;

			var max = Math.max( r, g, b );
			var min = Math.min( r, g, b );

			var hue, saturation;
			var lightness = ( min + max ) / 2.0;

			if ( min === max ) {

				hue = 0;
				saturation = 0;

			} else {

				var delta = max - min;

				saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );

				switch ( max ) {

					case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;
					case g: hue = ( b - r ) / delta + 2; break;
					case b: hue = ( r - g ) / delta + 4; break;

				}

				hue /= 6;

			}

			hsl.h = hue;
			hsl.s = saturation;
			hsl.l = lightness;

			return hsl;

		};

	}(),

	getStyle: function () {

		return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';

	},

	offsetHSL: function ( h, s, l ) {

		var hsl = this.getHSL();

		hsl.h += h; hsl.s += s; hsl.l += l;

		this.setHSL( hsl.h, hsl.s, hsl.l );

		return this;

	},

	add: function ( color ) {

		this.r += color.r;
		this.g += color.g;
		this.b += color.b;

		return this;

	},

	addColors: function ( color1, color2 ) {

		this.r = color1.r + color2.r;
		this.g = color1.g + color2.g;
		this.b = color1.b + color2.b;

		return this;

	},

	addScalar: function ( s ) {

		this.r += s;
		this.g += s;
		this.b += s;

		return this;

	},

	multiply: function ( color ) {

		this.r *= color.r;
		this.g *= color.g;
		this.b *= color.b;

		return this;

	},

	multiplyScalar: function ( s ) {

		this.r *= s;
		this.g *= s;
		this.b *= s;

		return this;

	},

	lerp: function ( color, alpha ) {

		this.r += ( color.r - this.r ) * alpha;
		this.g += ( color.g - this.g ) * alpha;
		this.b += ( color.b - this.b ) * alpha;

		return this;

	},

	equals: function ( c ) {

		return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );

	},

	clone: function () {

		return new THREE.Color().setRGB( this.r, this.g, this.b );

	}

};

THREE.ColorKeywords = { "aliceblue": 0xF0F8FF, "antiquewhite": 0xFAEBD7, "aqua": 0x00FFFF, "aquamarine": 0x7FFFD4, "azure": 0xF0FFFF,
"beige": 0xF5F5DC, "bisque": 0xFFE4C4, "black": 0x000000, "blanchedalmond": 0xFFEBCD, "blue": 0x0000FF, "blueviolet": 0x8A2BE2,
"brown": 0xA52A2A, "burlywood": 0xDEB887, "cadetblue": 0x5F9EA0, "chartreuse": 0x7FFF00, "chocolate": 0xD2691E, "coral": 0xFF7F50,
"cornflowerblue": 0x6495ED, "cornsilk": 0xFFF8DC, "crimson": 0xDC143C, "cyan": 0x00FFFF, "darkblue": 0x00008B, "darkcyan": 0x008B8B,
"darkgoldenrod": 0xB8860B, "darkgray": 0xA9A9A9, "darkgreen": 0x006400, "darkgrey": 0xA9A9A9, "darkkhaki": 0xBDB76B, "darkmagenta": 0x8B008B,
"darkolivegreen": 0x556B2F, "darkorange": 0xFF8C00, "darkorchid": 0x9932CC, "darkred": 0x8B0000, "darksalmon": 0xE9967A, "darkseagreen": 0x8FBC8F,
"darkslateblue": 0x483D8B, "darkslategray": 0x2F4F4F, "darkslategrey": 0x2F4F4F, "darkturquoise": 0x00CED1, "darkviolet": 0x9400D3,
"deeppink": 0xFF1493, "deepskyblue": 0x00BFFF, "dimgray": 0x696969, "dimgrey": 0x696969, "dodgerblue": 0x1E90FF, "firebrick": 0xB22222,
"floralwhite": 0xFFFAF0, "forestgreen": 0x228B22, "fuchsia": 0xFF00FF, "gainsboro": 0xDCDCDC, "ghostwhite": 0xF8F8FF, "gold": 0xFFD700,
"goldenrod": 0xDAA520, "gray": 0x808080, "green": 0x008000, "greenyellow": 0xADFF2F, "grey": 0x808080, "honeydew": 0xF0FFF0, "hotpink": 0xFF69B4,
"indianred": 0xCD5C5C, "indigo": 0x4B0082, "ivory": 0xFFFFF0, "khaki": 0xF0E68C, "lavender": 0xE6E6FA, "lavenderblush": 0xFFF0F5, "lawngreen": 0x7CFC00,
"lemonchiffon": 0xFFFACD, "lightblue": 0xADD8E6, "lightcoral": 0xF08080, "lightcyan": 0xE0FFFF, "lightgoldenrodyellow": 0xFAFAD2, "lightgray": 0xD3D3D3,
"lightgreen": 0x90EE90, "lightgrey": 0xD3D3D3, "lightpink": 0xFFB6C1, "lightsalmon": 0xFFA07A, "lightseagreen": 0x20B2AA, "lightskyblue": 0x87CEFA,
"lightslategray": 0x778899, "lightslategrey": 0x778899, "lightsteelblue": 0xB0C4DE, "lightyellow": 0xFFFFE0, "lime": 0x00FF00, "limegreen": 0x32CD32,
"linen": 0xFAF0E6, "magenta": 0xFF00FF, "maroon": 0x800000, "mediumaquamarine": 0x66CDAA, "mediumblue": 0x0000CD, "mediumorchid": 0xBA55D3,
"mediumpurple": 0x9370DB, "mediumseagreen": 0x3CB371, "mediumslateblue": 0x7B68EE, "mediumspringgreen": 0x00FA9A, "mediumturquoise": 0x48D1CC,
"mediumvioletred": 0xC71585, "midnightblue": 0x191970, "mintcream": 0xF5FFFA, "mistyrose": 0xFFE4E1, "moccasin": 0xFFE4B5, "navajowhite": 0xFFDEAD,
"navy": 0x000080, "oldlace": 0xFDF5E6, "olive": 0x808000, "olivedrab": 0x6B8E23, "orange": 0xFFA500, "orangered": 0xFF4500, "orchid": 0xDA70D6,
"palegoldenrod": 0xEEE8AA, "palegreen": 0x98FB98, "paleturquoise": 0xAFEEEE, "palevioletred": 0xDB7093, "papayawhip": 0xFFEFD5, "peachpuff": 0xFFDAB9,
"peru": 0xCD853F, "pink": 0xFFC0CB, "plum": 0xDDA0DD, "powderblue": 0xB0E0E6, "purple": 0x800080, "red": 0xFF0000, "rosybrown": 0xBC8F8F,
"royalblue": 0x4169E1, "saddlebrown": 0x8B4513, "salmon": 0xFA8072, "sandybrown": 0xF4A460, "seagreen": 0x2E8B57, "seashell": 0xFFF5EE,
"sienna": 0xA0522D, "silver": 0xC0C0C0, "skyblue": 0x87CEEB, "slateblue": 0x6A5ACD, "slategray": 0x708090, "slategrey": 0x708090, "snow": 0xFFFAFA,
"springgreen": 0x00FF7F, "steelblue": 0x4682B4, "tan": 0xD2B48C, "teal": 0x008080, "thistle": 0xD8BFD8, "tomato": 0xFF6347, "turquoise": 0x40E0D0,
"violet": 0xEE82EE, "wheat": 0xF5DEB3, "white": 0xFFFFFF, "whitesmoke": 0xF5F5F5, "yellow": 0xFFFF00, "yellowgreen": 0x9ACD32 };
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://exocortex.com
 */

THREE.Quaternion = function( x, y, z, w ) {

	this.x = x || 0;
	this.y = y || 0;
	this.z = z || 0;
	this.w = ( w !== undefined ) ? w : 1;

};

THREE.Quaternion.prototype = {

	constructor: THREE.Quaternion,

	set: function ( x, y, z, w ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

		return this;

	},

	copy: function ( q ) {

		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
		this.w = q.w;

		return this;

	},

	setFromEuler: function ( v, order ) {

		// http://www.mathworks.com/matlabcentral/fileexchange/
		// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
		//	content/SpinCalc.m

		var c1 = Math.cos( v.x / 2 );
		var c2 = Math.cos( v.y / 2 );
		var c3 = Math.cos( v.z / 2 );
		var s1 = Math.sin( v.x / 2 );
		var s2 = Math.sin( v.y / 2 );
		var s3 = Math.sin( v.z / 2 );

		if ( order === undefined || order === 'XYZ' ) {

			this.x = s1 * c2 * c3 + c1 * s2 * s3;
			this.y = c1 * s2 * c3 - s1 * c2 * s3;
			this.z = c1 * c2 * s3 + s1 * s2 * c3;
			this.w = c1 * c2 * c3 - s1 * s2 * s3;

		} else if ( order === 'YXZ' ) {

			this.x = s1 * c2 * c3 + c1 * s2 * s3;
			this.y = c1 * s2 * c3 - s1 * c2 * s3;
			this.z = c1 * c2 * s3 - s1 * s2 * c3;
			this.w = c1 * c2 * c3 + s1 * s2 * s3;

		} else if ( order === 'ZXY' ) {

			this.x = s1 * c2 * c3 - c1 * s2 * s3;
			this.y = c1 * s2 * c3 + s1 * c2 * s3;
			this.z = c1 * c2 * s3 + s1 * s2 * c3;
			this.w = c1 * c2 * c3 - s1 * s2 * s3;

		} else if ( order === 'ZYX' ) {

			this.x = s1 * c2 * c3 - c1 * s2 * s3;
			this.y = c1 * s2 * c3 + s1 * c2 * s3;
			this.z = c1 * c2 * s3 - s1 * s2 * c3;
			this.w = c1 * c2 * c3 + s1 * s2 * s3;

		} else if ( order === 'YZX' ) {

			this.x = s1 * c2 * c3 + c1 * s2 * s3;
			this.y = c1 * s2 * c3 + s1 * c2 * s3;
			this.z = c1 * c2 * s3 - s1 * s2 * c3;
			this.w = c1 * c2 * c3 - s1 * s2 * s3;

		} else if ( order === 'XZY' ) {

			this.x = s1 * c2 * c3 - c1 * s2 * s3;
			this.y = c1 * s2 * c3 - s1 * c2 * s3;
			this.z = c1 * c2 * s3 + s1 * s2 * c3;
			this.w = c1 * c2 * c3 + s1 * s2 * s3;

		}

		return this;

	},

	setFromAxisAngle: function ( axis, angle ) {

		// from http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
		// axis have to be normalized

		var halfAngle = angle / 2,
			s = Math.sin( halfAngle );

		this.x = axis.x * s;
		this.y = axis.y * s;
		this.z = axis.z * s;
		this.w = Math.cos( halfAngle );

		return this;

	},

	setFromRotationMatrix: function ( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		var te = m.elements,

			m11 = te[0], m12 = te[4], m13 = te[8],
			m21 = te[1], m22 = te[5], m23 = te[9],
			m31 = te[2], m32 = te[6], m33 = te[10],

			trace = m11 + m22 + m33,
			s;

		if ( trace > 0 ) {

			s = 0.5 / Math.sqrt( trace + 1.0 );

			this.w = 0.25 / s;
			this.x = ( m32 - m23 ) * s;
			this.y = ( m13 - m31 ) * s;
			this.z = ( m21 - m12 ) * s;

		} else if ( m11 > m22 && m11 > m33 ) {

			s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );

			this.w = (m32 - m23 ) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21 ) / s;
			this.z = (m13 + m31 ) / s;

		} else if ( m22 > m33 ) {

			s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );

			this.w = (m13 - m31 ) / s;
			this.x = (m12 + m21 ) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32 ) / s;

		} else {

			s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );

			this.w = ( m21 - m12 ) / s;
			this.x = ( m13 + m31 ) / s;
			this.y = ( m23 + m32 ) / s;
			this.z = 0.25 * s;

		}

		return this;

	},

	inverse: function () {

		this.conjugate().normalize();

		return this;

	},

	conjugate: function () {

		this.x *= -1;
		this.y *= -1;
		this.z *= -1;

		return this;

	},

	lengthSq: function () {

		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );

	},

	normalize: function () {

		var l = this.length();

		if ( l === 0 ) {

			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 1;

		} else {

			l = 1 / l;

			this.x = this.x * l;
			this.y = this.y * l;
			this.z = this.z * l;
			this.w = this.w * l;

		}

		return this;

	},

	multiply: function ( q, p ) {

		if ( p !== undefined ) {

			console.warn( 'DEPRECATED: Quaternion\'s .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );
			return this.multiplyQuaternions( q, p );

		}

		return this.multiplyQuaternions( this, q );

	},

	multiplyQuaternions: function ( a, b ) {

		// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm

		var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w;
		var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w;

		this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
		this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
		this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
		this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;

		return this;

	},

	multiplyVector3: function ( vector ) {

		console.warn( 'DEPRECATED: Quaternion\'s .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );
		return vector.applyQuaternion( this );

	},

	slerp: function ( qb, t ) {

		var x = this.x, y = this.y, z = this.z, w = this.w;

		// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/

		var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;

		if ( cosHalfTheta < 0 ) {

			this.w = -qb.w;
			this.x = -qb.x;
			this.y = -qb.y;
			this.z = -qb.z;

			cosHalfTheta = -cosHalfTheta;

		} else {

			this.copy( qb );

		}

		if ( cosHalfTheta >= 1.0 ) {

			this.w = w;
			this.x = x;
			this.y = y;
			this.z = z;

			return this;

		}

		var halfTheta = Math.acos( cosHalfTheta );
		var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );

		if ( Math.abs( sinHalfTheta ) < 0.001 ) {

			this.w = 0.5 * ( w + this.w );
			this.x = 0.5 * ( x + this.x );
			this.y = 0.5 * ( y + this.y );
			this.z = 0.5 * ( z + this.z );

			return this;

		}

		var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,
		ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;

		this.w = ( w * ratioA + this.w * ratioB );
		this.x = ( x * ratioA + this.x * ratioB );
		this.y = ( y * ratioA + this.y * ratioB );
		this.z = ( z * ratioA + this.z * ratioB );

		return this;

	},

	equals: function ( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );

	},

	clone: function () {

		return new THREE.Quaternion( this.x, this.y, this.z, this.w );

	}

};

THREE.Quaternion.slerp = function ( qa, qb, qm, t ) {

	return qm.copy( qa ).slerp( qb, t );

}
/**
 * @author mrdoob / http://mrdoob.com/
 * @author philogb / http://blog.thejit.org/
 * @author egraether / http://egraether.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */

THREE.Vector2 = function ( x, y ) {

	this.x = x || 0;
	this.y = y || 0;

};

THREE.Vector2.prototype = {

	constructor: THREE.Vector2,

	set: function ( x, y ) {

		this.x = x;
		this.y = y;

		return this;

	},

	setX: function ( x ) {

		this.x = x;

		return this;

	},

	setY: function ( y ) {

		this.y = y;

		return this;

	},


	setComponent: function ( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			default: throw new Error( "index is out of range: " + index );

		}

	},

	getComponent: function ( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			default: throw new Error( "index is out of range: " + index );

		}

	},

	copy: function ( v ) {

		this.x = v.x;
		this.y = v.y;

		return this;

	},

	add: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector2\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;

		return this;

	},

	addVectors: function ( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;

		return this;

	},

	addScalar: function ( s ) {

		this.x += s;
		this.y += s;

		return this;

	},

	sub: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector2\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;

		return this;

	},

	subVectors: function ( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;

		return this;

	},

	multiplyScalar: function ( s ) {

		this.x *= s;
		this.y *= s;

		return this;

	},

	divideScalar: function ( s ) {

		if ( s !== 0 ) {

			this.x /= s;
			this.y /= s;

		} else {

			this.set( 0, 0 );

		}

		return this;

	},

	min: function ( v ) {

		if ( this.x > v.x ) {

			this.x = v.x;

		}

		if ( this.y > v.y ) {

			this.y = v.y;

		}

		return this;

	},

	max: function ( v ) {

		if ( this.x < v.x ) {

			this.x = v.x;

		}

		if ( this.y < v.y ) {

			this.y = v.y;

		}

		return this;

	},

	clamp: function ( min, max ) {

		// This function assumes min < max, if this assumption isn't true it will not operate correctly

		if ( this.x < min.x ) {

			this.x = min.x;

		} else if ( this.x > max.x ) {

			this.x = max.x;

		}

		if ( this.y < min.y ) {

			this.y = min.y;

		} else if ( this.y > max.y ) {

			this.y = max.y;

		}

		return this;

	},

	negate: function() {

		return this.multiplyScalar( - 1 );

	},

	dot: function ( v ) {

		return this.x * v.x + this.y * v.y;

	},

	lengthSq: function () {

		return this.x * this.x + this.y * this.y;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y );

	},

	normalize: function () {

		return this.divideScalar( this.length() );

	},

	distanceTo: function ( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	},

	distanceToSquared: function ( v ) {

		var dx = this.x - v.x, dy = this.y - v.y;
		return dx * dx + dy * dy;

	},

	setLength: function ( l ) {

		var oldLength = this.length();

		if ( oldLength !== 0 && l !== oldLength ) {

			this.multiplyScalar( l / oldLength );
		}

		return this;

	},

	lerp: function ( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;

		return this;

	},

	equals: function( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) );

	},

	toArray: function () {

		return [ this.x, this.y ];

	},

	clone: function () {

		return new THREE.Vector2( this.x, this.y );

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author *kile / http://kile.stravaganza.org/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */

THREE.Vector3 = function ( x, y, z ) {

	this.x = x || 0;
	this.y = y || 0;
	this.z = z || 0;

};

THREE.Vector3.prototype = {

	constructor: THREE.Vector3,

	set: function ( x, y, z ) {

		this.x = x;
		this.y = y;
		this.z = z;

		return this;

	},

	setX: function ( x ) {

		this.x = x;

		return this;

	},

	setY: function ( y ) {

		this.y = y;

		return this;

	},

	setZ: function ( z ) {

		this.z = z;

		return this;

	},

	setComponent: function ( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			default: throw new Error( "index is out of range: " + index );

		}

	},

	getComponent: function ( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			default: throw new Error( "index is out of range: " + index );

		}

	},

	copy: function ( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;

		return this;

	},

	add: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector3\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;

		return this;

	},

	addScalar: function ( s ) {

		this.x += s;
		this.y += s;
		this.z += s;

		return this;

	},

	addVectors: function ( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;

		return this;

	},

	sub: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector3\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;

		return this;

	},

	subVectors: function ( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;

		return this;

	},

	multiply: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector3\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
			return this.multiplyVectors( v, w );

		}

		this.x *= v.x;
		this.y *= v.y;
		this.z *= v.z;

		return this;

	},

	multiplyScalar: function ( s ) {

		this.x *= s;
		this.y *= s;
		this.z *= s;

		return this;

	},

	multiplyVectors: function ( a, b ) {

		this.x = a.x * b.x;
		this.y = a.y * b.y;
		this.z = a.z * b.z;

		return this;

	},

	applyMatrix3: function ( m ) {

		var x = this.x;
		var y = this.y;
		var z = this.z;

		var e = m.elements;

		this.x = e[0] * x + e[3] * y + e[6] * z;
		this.y = e[1] * x + e[4] * y + e[7] * z;
		this.z = e[2] * x + e[5] * y + e[8] * z;

		return this;

	},

	applyMatrix4: function ( m ) {

		// input: THREE.Matrix4 affine matrix

		var x = this.x, y = this.y, z = this.z;

		var e = m.elements;

		this.x = e[0] * x + e[4] * y + e[8]  * z + e[12];
		this.y = e[1] * x + e[5] * y + e[9]  * z + e[13];
		this.z = e[2] * x + e[6] * y + e[10] * z + e[14];

		return this;

	},

	applyProjection: function ( m ) {

		// input: THREE.Matrix4 projection matrix

		var x = this.x, y = this.y, z = this.z;

		var e = m.elements;
		var d = 1 / ( e[3] * x + e[7] * y + e[11] * z + e[15] ); // perspective divide

		this.x = ( e[0] * x + e[4] * y + e[8]  * z + e[12] ) * d;
		this.y = ( e[1] * x + e[5] * y + e[9]  * z + e[13] ) * d;
		this.z = ( e[2] * x + e[6] * y + e[10] * z + e[14] ) * d;

		return this;

	},

	applyQuaternion: function ( q ) {

		var x = this.x;
		var y = this.y;
		var z = this.z;

		var qx = q.x;
		var qy = q.y;
		var qz = q.z;
		var qw = q.w;

		// calculate quat * vector

		var ix =  qw * x + qy * z - qz * y;
		var iy =  qw * y + qz * x - qx * z;
		var iz =  qw * z + qx * y - qy * x;
		var iw = -qx * x - qy * y - qz * z;

		// calculate result * inverse quat

		this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;
		this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;
		this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;

		return this;

	},

	transformDirection: function ( m ) {

		// input: THREE.Matrix4 affine matrix
		// vector interpreted as a direction

		var x = this.x, y = this.y, z = this.z;

		var e = m.elements;

		this.x = e[0] * x + e[4] * y + e[8]  * z;
		this.y = e[1] * x + e[5] * y + e[9]  * z;
		this.z = e[2] * x + e[6] * y + e[10] * z;

		this.normalize();

		return this;

	},

	divide: function ( v ) {

		this.x /= v.x;
		this.y /= v.y;
		this.z /= v.z;

		return this;

	},

	divideScalar: function ( s ) {

		if ( s !== 0 ) {

			this.x /= s;
			this.y /= s;
			this.z /= s;

		} else {

			this.x = 0;
			this.y = 0;
			this.z = 0;

		}

		return this;

	},

	min: function ( v ) {

		if ( this.x > v.x ) {

			this.x = v.x;

		}

		if ( this.y > v.y ) {

			this.y = v.y;

		}

		if ( this.z > v.z ) {

			this.z = v.z;

		}

		return this;

	},

	max: function ( v ) {

		if ( this.x < v.x ) {

			this.x = v.x;

		}

		if ( this.y < v.y ) {

			this.y = v.y;

		}

		if ( this.z < v.z ) {

			this.z = v.z;

		}

		return this;

	},

	clamp: function ( min, max ) {

		// This function assumes min < max, if this assumption isn't true it will not operate correctly

		if ( this.x < min.x ) {

			this.x = min.x;

		} else if ( this.x > max.x ) {

			this.x = max.x;

		}

		if ( this.y < min.y ) {

			this.y = min.y;

		} else if ( this.y > max.y ) {

			this.y = max.y;

		}

		if ( this.z < min.z ) {

			this.z = min.z;

		} else if ( this.z > max.z ) {

			this.z = max.z;

		}

		return this;

	},

	negate: function () {

		return this.multiplyScalar( - 1 );

	},

	dot: function ( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z;

	},

	lengthSq: function () {

		return this.x * this.x + this.y * this.y + this.z * this.z;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );

	},

	lengthManhattan: function () {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );

	},

	normalize: function () {

		return this.divideScalar( this.length() );

	},

	setLength: function ( l ) {

		var oldLength = this.length();

		if ( oldLength !== 0 && l !== oldLength  ) {

			this.multiplyScalar( l / oldLength );
		}

		return this;

	},

	lerp: function ( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;

		return this;

	},

	cross: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector3\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );
			return this.crossVectors( v, w );

		}

		var x = this.x, y = this.y, z = this.z;

		this.x = y * v.z - z * v.y;
		this.y = z * v.x - x * v.z;
		this.z = x * v.y - y * v.x;

		return this;

	},

	crossVectors: function ( a, b ) {

		this.x = a.y * b.z - a.z * b.y;
		this.y = a.z * b.x - a.x * b.z;
		this.z = a.x * b.y - a.y * b.x;

		return this;

	},

	angleTo: function ( v ) {

		var theta = this.dot( v ) / ( this.length() * v.length() );

		// clamp, to handle numerical problems

		return Math.acos( THREE.Math.clamp( theta, -1, 1 ) );

	},

	distanceTo: function ( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	},

	distanceToSquared: function ( v ) {

		var dx = this.x - v.x;
		var dy = this.y - v.y;
		var dz = this.z - v.z;

		return dx * dx + dy * dy + dz * dz;

	},

	setEulerFromRotationMatrix: function ( m, order ) {

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		// clamp, to handle numerical problems

		function clamp( x ) {

			return Math.min( Math.max( x, -1 ), 1 );

		}

		var te = m.elements;
		var m11 = te[0], m12 = te[4], m13 = te[8];
		var m21 = te[1], m22 = te[5], m23 = te[9];
		var m31 = te[2], m32 = te[6], m33 = te[10];

		if ( order === undefined || order === 'XYZ' ) {

			this.y = Math.asin( clamp( m13 ) );

			if ( Math.abs( m13 ) < 0.99999 ) {

				this.x = Math.atan2( - m23, m33 );
				this.z = Math.atan2( - m12, m11 );

			} else {

				this.x = Math.atan2( m32, m22 );
				this.z = 0;

			}

		} else if ( order === 'YXZ' ) {

			this.x = Math.asin( - clamp( m23 ) );

			if ( Math.abs( m23 ) < 0.99999 ) {

				this.y = Math.atan2( m13, m33 );
				this.z = Math.atan2( m21, m22 );

			} else {

				this.y = Math.atan2( - m31, m11 );
				this.z = 0;

			}

		} else if ( order === 'ZXY' ) {

			this.x = Math.asin( clamp( m32 ) );

			if ( Math.abs( m32 ) < 0.99999 ) {

				this.y = Math.atan2( - m31, m33 );
				this.z = Math.atan2( - m12, m22 );

			} else {

				this.y = 0;
				this.z = Math.atan2( m21, m11 );

			}

		} else if ( order === 'ZYX' ) {

			this.y = Math.asin( - clamp( m31 ) );

			if ( Math.abs( m31 ) < 0.99999 ) {

				this.x = Math.atan2( m32, m33 );
				this.z = Math.atan2( m21, m11 );

			} else {

				this.x = 0;
				this.z = Math.atan2( - m12, m22 );

			}

		} else if ( order === 'YZX' ) {

			this.z = Math.asin( clamp( m21 ) );

			if ( Math.abs( m21 ) < 0.99999 ) {

				this.x = Math.atan2( - m23, m22 );
				this.y = Math.atan2( - m31, m11 );

			} else {

				this.x = 0;
				this.y = Math.atan2( m13, m33 );

			}

		} else if ( order === 'XZY' ) {

			this.z = Math.asin( - clamp( m12 ) );

			if ( Math.abs( m12 ) < 0.99999 ) {

				this.x = Math.atan2( m32, m22 );
				this.y = Math.atan2( m13, m11 );

			} else {

				this.x = Math.atan2( - m23, m33 );
				this.y = 0;

			}

		}

		return this;

	},

	setEulerFromQuaternion: function ( q, order ) {

		// q is assumed to be normalized

		// clamp, to handle numerical problems

		function clamp( x ) {

			return Math.min( Math.max( x, -1 ), 1 );

		}

		// http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m

		var sqx = q.x * q.x;
		var sqy = q.y * q.y;
		var sqz = q.z * q.z;
		var sqw = q.w * q.w;

		if ( order === undefined || order === 'XYZ' ) {

			this.x = Math.atan2( 2 * ( q.x * q.w - q.y * q.z ), ( sqw - sqx - sqy + sqz ) );
			this.y = Math.asin(  clamp( 2 * ( q.x * q.z + q.y * q.w ) ) );
			this.z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw + sqx - sqy - sqz ) );

		} else if ( order ===  'YXZ' ) {

			this.x = Math.asin(  clamp( 2 * ( q.x * q.w - q.y * q.z ) ) );
			this.y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw - sqx - sqy + sqz ) );
			this.z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw - sqx + sqy - sqz ) );

		} else if ( order === 'ZXY' ) {

			this.x = Math.asin(  clamp( 2 * ( q.x * q.w + q.y * q.z ) ) );
			this.y = Math.atan2( 2 * ( q.y * q.w - q.z * q.x ), ( sqw - sqx - sqy + sqz ) );
			this.z = Math.atan2( 2 * ( q.z * q.w - q.x * q.y ), ( sqw - sqx + sqy - sqz ) );

		} else if ( order === 'ZYX' ) {

			this.x = Math.atan2( 2 * ( q.x * q.w + q.z * q.y ), ( sqw - sqx - sqy + sqz ) );
			this.y = Math.asin(  clamp( 2 * ( q.y * q.w - q.x * q.z ) ) );
			this.z = Math.atan2( 2 * ( q.x * q.y + q.z * q.w ), ( sqw + sqx - sqy - sqz ) );

		} else if ( order === 'YZX' ) {

			this.x = Math.atan2( 2 * ( q.x * q.w - q.z * q.y ), ( sqw - sqx + sqy - sqz ) );
			this.y = Math.atan2( 2 * ( q.y * q.w - q.x * q.z ), ( sqw + sqx - sqy - sqz ) );
			this.z = Math.asin(  clamp( 2 * ( q.x * q.y + q.z * q.w ) ) );

		} else if ( order === 'XZY' ) {

			this.x = Math.atan2( 2 * ( q.x * q.w + q.y * q.z ), ( sqw - sqx + sqy - sqz ) );
			this.y = Math.atan2( 2 * ( q.x * q.z + q.y * q.w ), ( sqw + sqx - sqy - sqz ) );
			this.z = Math.asin(  clamp( 2 * ( q.z * q.w - q.x * q.y ) ) );

		}

		return this;

	},

	getPositionFromMatrix: function ( m ) {

		this.x = m.elements[12];
		this.y = m.elements[13];
		this.z = m.elements[14];

		return this;

	},

	getScaleFromMatrix: function ( m ) {

		var sx = this.set( m.elements[0], m.elements[1], m.elements[2] ).length();
		var sy = this.set( m.elements[4], m.elements[5], m.elements[6] ).length();
		var sz = this.set( m.elements[8], m.elements[9], m.elements[10] ).length();

		this.x = sx;
		this.y = sy;
		this.z = sz;

		return this;
	},

	getColumnFromMatrix: function ( index, matrix ) {

		var offset = index * 4;

		var me = matrix.elements;

		this.x = me[ offset ];
		this.y = me[ offset + 1 ];
		this.z = me[ offset + 2 ];

		return this;

	},

	equals: function ( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );

	},

	toArray: function () {

		return [ this.x, this.y, this.z ];

	},

	clone: function () {

		return new THREE.Vector3( this.x, this.y, this.z );

	}

};

THREE.extend( THREE.Vector3.prototype, {

	applyEuler: function () {

		var q1 = new THREE.Quaternion();

		return function ( v, eulerOrder ) {

			var quaternion = q1.setFromEuler( v, eulerOrder );

			this.applyQuaternion( quaternion );

			return this;

		};

	}(),

	applyAxisAngle: function () {

		var q1 = new THREE.Quaternion();

		return function ( axis, angle ) {

			var quaternion = q1.setFromAxisAngle( axis, angle );

			this.applyQuaternion( quaternion );

			return this;

		};

	}(),

	projectOnVector: function () {

		var v1 = new THREE.Vector3();

		return function ( vector ) {

			v1.copy( vector ).normalize();
			var d = this.dot( v1 );
			return this.copy( v1 ).multiplyScalar( d );

		};

	}(),

	projectOnPlane: function () {

		var v1 = new THREE.Vector3();

		return function ( planeNormal ) {

			v1.copy( this ).projectOnVector( planeNormal );

			return this.sub( v1 );

		}

	}(),

	reflect: function () {

		var v1 = new THREE.Vector3();

		return function ( vector ) {

		    v1.copy( this ).projectOnVector( vector ).multiplyScalar( 2 );

		    return this.subVectors( v1, this );

		}

	}()

} );
/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */

THREE.Vector4 = function ( x, y, z, w ) {

	this.x = x || 0;
	this.y = y || 0;
	this.z = z || 0;
	this.w = ( w !== undefined ) ? w : 1;

};

THREE.Vector4.prototype = {

	constructor: THREE.Vector4,

	set: function ( x, y, z, w ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

		return this;

	},

	setX: function ( x ) {

		this.x = x;

		return this;

	},

	setY: function ( y ) {

		this.y = y;

		return this;

	},

	setZ: function ( z ) {

		this.z = z;

		return this;

	},

	setW: function ( w ) {

		this.w = w;

		return this;

	},

	setComponent: function ( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			case 3: this.w = value; break;
			default: throw new Error( "index is out of range: " + index );

		}

	},

	getComponent: function ( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			case 3: return this.w;
			default: throw new Error( "index is out of range: " + index );

		}

	},

	copy: function ( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = ( v.w !== undefined ) ? v.w : 1;

		return this;

	},

	add: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector4\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		this.w += v.w;

		return this;

	},

	addScalar: function ( s ) {

		this.x += s;
		this.y += s;
		this.z += s;
		this.w += s;

		return this;

	},

	addVectors: function ( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		this.w = a.w + b.w;

		return this;

	},

	sub: function ( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'DEPRECATED: Vector4\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		this.w -= v.w;

		return this;

	},

	subVectors: function ( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		this.w = a.w - b.w;

		return this;

	},

	multiplyScalar: function ( s ) {

		this.x *= s;
		this.y *= s;
		this.z *= s;
		this.w *= s;

		return this;

	},

	applyMatrix4: function ( m ) {

		var x = this.x;
		var y = this.y;
		var z = this.z;
		var w = this.w;

		var e = m.elements;

		this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;
		this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;
		this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;
		this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;

		return this;

	},

	divideScalar: function ( s ) {

		if ( s !== 0 ) {

			this.x /= s;
			this.y /= s;
			this.z /= s;
			this.w /= s;

		} else {

			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 1;

		}

		return this;

	},

	setAxisAngleFromQuaternion: function ( q ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm

		// q is assumed to be normalized

		this.w = 2 * Math.acos( q.w );

		var s = Math.sqrt( 1 - q.w * q.w );

		if ( s < 0.0001 ) {

			 this.x = 1;
			 this.y = 0;
			 this.z = 0;

		} else {

			 this.x = q.x / s;
			 this.y = q.y / s;
			 this.z = q.z / s;

		}

		return this;

	},

	setAxisAngleFromRotationMatrix: function ( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		var angle, x, y, z,		// variables for result
			epsilon = 0.01,		// margin to allow for rounding errors
			epsilon2 = 0.1,		// margin to distinguish between 0 and 180 degrees

			te = m.elements,

			m11 = te[0], m12 = te[4], m13 = te[8],
			m21 = te[1], m22 = te[5], m23 = te[9],
			m31 = te[2], m32 = te[6], m33 = te[10];

		if ( ( Math.abs( m12 - m21 ) < epsilon )
		  && ( Math.abs( m13 - m31 ) < epsilon )
		  && ( Math.abs( m23 - m32 ) < epsilon ) ) {

			// singularity found
			// first check for identity matrix which must have +1 for all terms
			// in leading diagonal and zero in other terms

			if ( ( Math.abs( m12 + m21 ) < epsilon2 )
			  && ( Math.abs( m13 + m31 ) < epsilon2 )
			  && ( Math.abs( m23 + m32 ) < epsilon2 )
			  && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {

				// this singularity is identity matrix so angle = 0

				this.set( 1, 0, 0, 0 );

				return this; // zero angle, arbitrary axis

			}

			// otherwise this singularity is angle = 180

			angle = Math.PI;

			var xx = ( m11 + 1 ) / 2;
			var yy = ( m22 + 1 ) / 2;
			var zz = ( m33 + 1 ) / 2;
			var xy = ( m12 + m21 ) / 4;
			var xz = ( m13 + m31 ) / 4;
			var yz = ( m23 + m32 ) / 4;

			if ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term

				if ( xx < epsilon ) {

					x = 0;
					y = 0.707106781;
					z = 0.707106781;

				} else {

					x = Math.sqrt( xx );
					y = xy / x;
					z = xz / x;

				}

			} else if ( yy > zz ) { // m22 is the largest diagonal term

				if ( yy < epsilon ) {

					x = 0.707106781;
					y = 0;
					z = 0.707106781;

				} else {

					y = Math.sqrt( yy );
					x = xy / y;
					z = yz / y;

				}

			} else { // m33 is the largest diagonal term so base result on this

				if ( zz < epsilon ) {

					x = 0.707106781;
					y = 0.707106781;
					z = 0;

				} else {

					z = Math.sqrt( zz );
					x = xz / z;
					y = yz / z;

				}

			}

			this.set( x, y, z, angle );

			return this; // return 180 deg rotation

		}

		// as we have reached here there are no singularities so we can handle normally

		var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )
						 + ( m13 - m31 ) * ( m13 - m31 )
						 + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize

		if ( Math.abs( s ) < 0.001 ) s = 1;

		// prevent divide by zero, should not happen if matrix is orthogonal and should be
		// caught by singularity test above, but I've left it in just in case

		this.x = ( m32 - m23 ) / s;
		this.y = ( m13 - m31 ) / s;
		this.z = ( m21 - m12 ) / s;
		this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );

		return this;

	},

	min: function ( v ) {

		if ( this.x > v.x ) {

			this.x = v.x;

		}

		if ( this.y > v.y ) {

			this.y = v.y;

		}

		if ( this.z > v.z ) {

			this.z = v.z;

		}

		if ( this.w > v.w ) {

			this.w = v.w;

		}

		return this;

	},

	max: function ( v ) {

		if ( this.x < v.x ) {

			this.x = v.x;

		}

		if ( this.y < v.y ) {

			this.y = v.y;

		}

		if ( this.z < v.z ) {

			this.z = v.z;

		}

		if ( this.w < v.w ) {

			this.w = v.w;

		}

		return this;

	},

	clamp: function ( min, max ) {

		// This function assumes min < max, if this assumption isn't true it will not operate correctly

		if ( this.x < min.x ) {

			this.x = min.x;

		} else if ( this.x > max.x ) {

			this.x = max.x;

		}

		if ( this.y < min.y ) {

			this.y = min.y;

		} else if ( this.y > max.y ) {

			this.y = max.y;

		}

		if ( this.z < min.z ) {

			this.z = min.z;

		} else if ( this.z > max.z ) {

			this.z = max.z;

		}

		if ( this.w < min.w ) {

			this.w = min.w;

		} else if ( this.w > max.w ) {

			this.w = max.w;

		}

		return this;

	},

	negate: function() {

		return this.multiplyScalar( -1 );

	},

	dot: function ( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;

	},

	lengthSq: function () {

		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;

	},

	length: function () {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );

	},

	lengthManhattan: function () {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );

	},

	normalize: function () {

		return this.divideScalar( this.length() );

	},

	setLength: function ( l ) {

		var oldLength = this.length();

		if ( oldLength !== 0 && l !== oldLength ) {

			this.multiplyScalar( l / oldLength );
		}

		return this;

	},

	lerp: function ( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;
		this.w += ( v.w - this.w ) * alpha;

		return this;

	},

	equals: function ( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );

	},

	toArray: function () {

		return [ this.x, this.y, this.z, this.w ];

	},

	clone: function () {

		return new THREE.Vector4( this.x, this.y, this.z, this.w );

	}

};
/**
 * @author bhouston / http://exocortex.com
 */

THREE.Line3 = function ( start, end ) {

	this.start = ( start !== undefined ) ? start : new THREE.Vector3();
	this.end = ( end !== undefined ) ? end : new THREE.Vector3();

};

THREE.Line3.prototype = {

	constructor: THREE.Line3,

	set: function ( start, end ) {

		this.start.copy( start );
		this.end.copy( end );

		return this;

	},

	copy: function ( line ) {

		this.start.copy( line.start );
		this.end.copy( line.end );

		return this;

	},

	center: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );

	},

	delta: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.subVectors( this.end, this.start );

	},

	distanceSq: function () {

		return this.start.distanceToSquared( this.end );

	},

	distance: function () {

		return this.start.distanceTo( this.end );

	},

	at: function ( t, optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();

		return this.delta( result ).multiplyScalar( t ).add( this.start );

	},

	closestPointToPointParameter: function() {

		var startP = new THREE.Vector3();
		var startEnd = new THREE.Vector3();

		return function ( point, clampToLine ) {

			startP.subVectors( point, this.start );
			startEnd.subVectors( this.end, this.start );

			var startEnd2 = startEnd.dot( startEnd );
			var startEnd_startP = startEnd.dot( startP );

			var t = startEnd_startP / startEnd2;

			if ( clampToLine ) {

				t = THREE.Math.clamp( t, 0, 1 );

			}

			return t;

		};

	}(),

	closestPointToPoint: function ( point, clampToLine, optionalTarget ) {

		var t = this.closestPointToPointParameter( point, clampToLine );

		var result = optionalTarget || new THREE.Vector3();

		return this.delta( result ).multiplyScalar( t ).add( this.start );

	},

	applyMatrix4: function ( matrix ) {

		this.start.applyMatrix4( matrix );
		this.end.applyMatrix4( matrix );

		return this;

	},

	equals: function ( line ) {

		return line.start.equals( this.start ) && line.end.equals( this.end );

	},

	clone: function () {

		return new THREE.Line3().copy( this );

	}

};
/**
 * @author bhouston / http://exocortex.com
 */

THREE.Box2 = function ( min, max ) {

	this.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );
	this.max = ( max !== undefined ) ? max : new THREE.Vector2( -Infinity, -Infinity );

};

THREE.Box2.prototype = {

	constructor: THREE.Box2,

	set: function ( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	},

	setFromPoints: function ( points ) {

		if ( points.length > 0 ) {

			var point = points[ 0 ];

			this.min.copy( point );
			this.max.copy( point );

			for ( var i = 1, il = points.length; i < il; i ++ ) {

				point = points[ i ];

				if ( point.x < this.min.x ) {

					this.min.x = point.x;

				} else if ( point.x > this.max.x ) {

					this.max.x = point.x;

				}

				if ( point.y < this.min.y ) {

					this.min.y = point.y;

				} else if ( point.y > this.max.y ) {

					this.max.y = point.y;

				}

			}

		} else {

			this.makeEmpty();

		}

		return this;

	},

	setFromCenterAndSize: function () {

		var v1 = new THREE.Vector2();

		return function ( center, size ) {

			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );
			this.min.copy( center ).sub( halfSize );
			this.max.copy( center ).add( halfSize );

			return this;

		};

	}(),

	copy: function ( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	},

	makeEmpty: function () {

		this.min.x = this.min.y = Infinity;
		this.max.x = this.max.y = -Infinity;

		return this;

	},

	empty: function () {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );

	},

	center: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector2();
		return result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	},

	size: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector2();
		return result.subVectors( this.max, this.min );

	},

	expandByPoint: function ( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;
	},

	expandByVector: function ( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;
	},

	expandByScalar: function ( scalar ) {

		this.min.addScalar( -scalar );
		this.max.addScalar( scalar );

		return this;
	},

	containsPoint: function ( point ) {

		if ( point.x < this.min.x || point.x > this.max.x ||
		     point.y < this.min.y || point.y > this.max.y ) {

			return false;

		}

		return true;

	},

	containsBox: function ( box ) {

		if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&
		     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {

			return true;

		}

		return false;

	},

	getParameter: function ( point ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		return new THREE.Vector2(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y )
		);

	},

	isIntersectionBox: function ( box ) {

		// using 6 splitting planes to rule out intersections.

		if ( box.max.x < this.min.x || box.min.x > this.max.x ||
		     box.max.y < this.min.y || box.min.y > this.max.y ) {

			return false;

		}

		return true;

	},

	clampPoint: function ( point, optionalTarget ) {

		var result = optionalTarget || new THREE.Vector2();
		return result.copy( point ).clamp( this.min, this.max );

	},

	distanceToPoint: function () {

		var v1 = new THREE.Vector2();

		return function ( point ) {

			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );
			return clampedPoint.sub( point ).length();

		};

	}(),

	intersect: function ( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		return this;

	},

	union: function ( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	},

	translate: function ( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	},

	equals: function ( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	},

	clone: function () {

		return new THREE.Box2().copy( this );

	}

};
/**
 * @author bhouston / http://exocortex.com
 */

THREE.Box3 = function ( min, max ) {

	this.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );
	this.max = ( max !== undefined ) ? max : new THREE.Vector3( -Infinity, -Infinity, -Infinity );

};

THREE.Box3.prototype = {

	constructor: THREE.Box3,

	set: function ( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	},

	setFromPoints: function ( points ) {

		if ( points.length > 0 ) {

			var point = points[ 0 ];

			this.min.copy( point );
			this.max.copy( point );

			for ( var i = 1, il = points.length; i < il; i ++ ) {

				point = points[ i ];

				if ( point.x < this.min.x ) {

					this.min.x = point.x;

				} else if ( point.x > this.max.x ) {

					this.max.x = point.x;

				}

				if ( point.y < this.min.y ) {

					this.min.y = point.y;

				} else if ( point.y > this.max.y ) {

					this.max.y = point.y;

				}

				if ( point.z < this.min.z ) {

					this.min.z = point.z;

				} else if ( point.z > this.max.z ) {

					this.max.z = point.z;

				}

			}

		} else {

			this.makeEmpty();

		}

		return this;

	},

	setFromCenterAndSize: function() {

		var v1 = new THREE.Vector3();

		return function ( center, size ) {

			var halfSize = v1.copy( size ).multiplyScalar( 0.5 );

			this.min.copy( center ).sub( halfSize );
			this.max.copy( center ).add( halfSize );

			return this;

		};

	}(),

	copy: function ( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	},

	makeEmpty: function () {

		this.min.x = this.min.y = this.min.z = Infinity;
		this.max.x = this.max.y = this.max.z = -Infinity;

		return this;

	},

	empty: function () {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );

	},

	center: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	},

	size: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.subVectors( this.max, this.min );

	},

	expandByPoint: function ( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	},

	expandByVector: function ( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	},

	expandByScalar: function ( scalar ) {

		this.min.addScalar( -scalar );
		this.max.addScalar( scalar );

		return this;

	},

	containsPoint: function ( point ) {

		if ( point.x < this.min.x || point.x > this.max.x ||
		     point.y < this.min.y || point.y > this.max.y ||
		     point.z < this.min.z || point.z > this.max.z ) {

			return false;

		}

		return true;

	},

	containsBox: function ( box ) {

		if ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&
			 ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&
			 ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {

			return true;

		}

		return false;

	},

	getParameter: function ( point ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		return new THREE.Vector3(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y ),
			( point.z - this.min.z ) / ( this.max.z - this.min.z )
		);

	},

	isIntersectionBox: function ( box ) {

		// using 6 splitting planes to rule out intersections.

		if ( box.max.x < this.min.x || box.min.x > this.max.x ||
		     box.max.y < this.min.y || box.min.y > this.max.y ||
		     box.max.z < this.min.z || box.min.z > this.max.z ) {

			return false;

		}

		return true;

	},

	clampPoint: function ( point, optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.copy( point ).clamp( this.min, this.max );

	},

	distanceToPoint: function() {

		var v1 = new THREE.Vector3();

		return function ( point ) {

			var clampedPoint = v1.copy( point ).clamp( this.min, this.max );
			return clampedPoint.sub( point ).length();

		};

	}(),

	getBoundingSphere: function() {

		var v1 = new THREE.Vector3();

		return function ( optionalTarget ) {

			var result = optionalTarget || new THREE.Sphere();

			result.center = this.center();
			result.radius = this.size( v1 ).length() * 0.5;

			return result;

		};

	}(),

	intersect: function ( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		return this;

	},

	union: function ( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	},

	applyMatrix4: function() {

		var points = [
			new THREE.Vector3(),
			new THREE.Vector3(),
			new THREE.Vector3(),
			new THREE.Vector3(),
			new THREE.Vector3(),
			new THREE.Vector3(),
			new THREE.Vector3(),
			new THREE.Vector3()
		];

		return function ( matrix ) {

			// NOTE: I am using a binary pattern to specify all 2^3 combinations below
			points[0].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000
			points[1].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001
			points[2].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010
			points[3].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011
			points[4].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100
			points[5].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101
			points[6].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110
			points[7].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111

			this.makeEmpty();
			this.setFromPoints( points );

			return this;

		};

	}(),

	translate: function ( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	},

	equals: function ( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	},

	clone: function () {

		return new THREE.Box3().copy( this );

	}

};
/**
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://exocortex.com
 */

THREE.Matrix3 = function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {

	this.elements = new Float32Array(9);

	this.set(

		( n11 !== undefined ) ? n11 : 1, n12 || 0, n13 || 0,
		n21 || 0, ( n22 !== undefined ) ? n22 : 1, n23 || 0,
		n31 || 0, n32 || 0, ( n33 !== undefined ) ? n33 : 1

	);
};

THREE.Matrix3.prototype = {

	constructor: THREE.Matrix3,

	set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {

		var te = this.elements;

		te[0] = n11; te[3] = n12; te[6] = n13;
		te[1] = n21; te[4] = n22; te[7] = n23;
		te[2] = n31; te[5] = n32; te[8] = n33;

		return this;

	},

	identity: function () {

		this.set(

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		);

		return this;

	},

	copy: function ( m ) {

		var me = m.elements;

		this.set(

			me[0], me[3], me[6],
			me[1], me[4], me[7],
			me[2], me[5], me[8]

		);

		return this;

	},

	multiplyVector3: function ( vector ) {

		console.warn( 'DEPRECATED: Matrix3\'s .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );
		return vector.applyMatrix3( this );

	},

	multiplyVector3Array: function() {

		var v1 = new THREE.Vector3();

		return function ( a ) {

			for ( var i = 0, il = a.length; i < il; i += 3 ) {

				v1.x = a[ i ];
				v1.y = a[ i + 1 ];
				v1.z = a[ i + 2 ];

				v1.applyMatrix3(this);

				a[ i ]     = v1.x;
				a[ i + 1 ] = v1.y;
				a[ i + 2 ] = v1.z;

			}

			return a;

		};

	}(),

	multiplyScalar: function ( s ) {

		var te = this.elements;

		te[0] *= s; te[3] *= s; te[6] *= s;
		te[1] *= s; te[4] *= s; te[7] *= s;
		te[2] *= s; te[5] *= s; te[8] *= s;

		return this;

	},

	determinant: function () {

		var te = this.elements;

		var a = te[0], b = te[1], c = te[2],
			d = te[3], e = te[4], f = te[5],
			g = te[6], h = te[7], i = te[8];

		return a*e*i - a*f*h - b*d*i + b*f*g + c*d*h - c*e*g;

	},

	getInverse: function ( matrix, throwOnInvertible ) {

		// input: THREE.Matrix4
		// ( based on http://code.google.com/p/webgl-mjs/ )

		var me = matrix.elements;
		var te = this.elements;

		te[ 0 ] =   me[10] * me[5] - me[6] * me[9];
		te[ 1 ] = - me[10] * me[1] + me[2] * me[9];
		te[ 2 ] =   me[6] * me[1] - me[2] * me[5];
		te[ 3 ] = - me[10] * me[4] + me[6] * me[8];
		te[ 4 ] =   me[10] * me[0] - me[2] * me[8];
		te[ 5 ] = - me[6] * me[0] + me[2] * me[4];
		te[ 6 ] =   me[9] * me[4] - me[5] * me[8];
		te[ 7 ] = - me[9] * me[0] + me[1] * me[8];
		te[ 8 ] =   me[5] * me[0] - me[1] * me[4];

		var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];

		// no inverse

		if ( det === 0 ) {

			var msg = "Matrix3.getInverse(): can't invert matrix, determinant is 0";

			if ( throwOnInvertible || false ) {

				throw new Error( msg ); 

			} else {

				console.warn( msg );

			}

			this.identity();

			return this;

		}

		this.multiplyScalar( 1.0 / det );

		return this;

	},

	transpose: function () {

		var tmp, m = this.elements;

		tmp = m[1]; m[1] = m[3]; m[3] = tmp;
		tmp = m[2]; m[2] = m[6]; m[6] = tmp;
		tmp = m[5]; m[5] = m[7]; m[7] = tmp;

		return this;

	},

	getNormalMatrix: function ( m ) {

		// input: THREE.Matrix4

		this.getInverse( m ).transpose();

		return this;

	},

	transposeIntoArray: function ( r ) {

		var m = this.elements;

		r[ 0 ] = m[ 0 ];
		r[ 1 ] = m[ 3 ];
		r[ 2 ] = m[ 6 ];
		r[ 3 ] = m[ 1 ];
		r[ 4 ] = m[ 4 ];
		r[ 5 ] = m[ 7 ];
		r[ 6 ] = m[ 2 ];
		r[ 7 ] = m[ 5 ];
		r[ 8 ] = m[ 8 ];

		return this;

	},

	clone: function () {

		var te = this.elements;

		return new THREE.Matrix3(

			te[0], te[3], te[6],
			te[1], te[4], te[7],
			te[2], te[5], te[8]

		);

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author jordi_ros / http://plattsoft.com
 * @author D1plo1d / http://github.com/D1plo1d
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author timknip / http://www.floorplanner.com/
 * @author bhouston / http://exocortex.com
 * @author WestLangley / http://github.com/WestLangley
 */


THREE.Matrix4 = function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {

	var te = this.elements = new Float32Array( 16 );

	// TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix
	//   we should not support semi specification of Matrix4, it is just weird.

	te[0] = ( n11 !== undefined ) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;
	te[1] = n21 || 0; te[5] = ( n22 !== undefined ) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;
	te[2] = n31 || 0; te[6] = n32 || 0; te[10] = ( n33 !== undefined ) ? n33 : 1; te[14] = n34 || 0;
	te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = ( n44 !== undefined ) ? n44 : 1;

};

THREE.Matrix4.prototype = {

	constructor: THREE.Matrix4,

	set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {

		var te = this.elements;

		te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;
		te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;
		te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;
		te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;

		return this;

	},

	identity: function () {

		this.set(

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		);

		return this;

	},

	copy: function ( m ) {

		var me = m.elements;

		this.set(

			me[0], me[4], me[8], me[12],
			me[1], me[5], me[9], me[13],
			me[2], me[6], me[10], me[14],
			me[3], me[7], me[11], me[15]

		);

		return this;

	},

	setRotationFromEuler: function ( v, order ) {

		var te = this.elements;

		var x = v.x, y = v.y, z = v.z;
		var a = Math.cos( x ), b = Math.sin( x );
		var c = Math.cos( y ), d = Math.sin( y );
		var e = Math.cos( z ), f = Math.sin( z );

		if ( order === undefined || order === 'XYZ' ) {

			var ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[0] = c * e;
			te[4] = - c * f;
			te[8] = d;

			te[1] = af + be * d;
			te[5] = ae - bf * d;
			te[9] = - b * c;

			te[2] = bf - ae * d;
			te[6] = be + af * d;
			te[10] = a * c;

		} else if ( order === 'YXZ' ) {

			var ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[0] = ce + df * b;
			te[4] = de * b - cf;
			te[8] = a * d;

			te[1] = a * f;
			te[5] = a * e;
			te[9] = - b;

			te[2] = cf * b - de;
			te[6] = df + ce * b;
			te[10] = a * c;

		} else if ( order === 'ZXY' ) {

			var ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[0] = ce - df * b;
			te[4] = - a * f;
			te[8] = de + cf * b;

			te[1] = cf + de * b;
			te[5] = a * e;
			te[9] = df - ce * b;

			te[2] = - a * d;
			te[6] = b;
			te[10] = a * c;

		} else if ( order === 'ZYX' ) {

			var ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[0] = c * e;
			te[4] = be * d - af;
			te[8] = ae * d + bf;

			te[1] = c * f;
			te[5] = bf * d + ae;
			te[9] = af * d - be;

			te[2] = - d;
			te[6] = b * c;
			te[10] = a * c;

		} else if ( order === 'YZX' ) {

			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[0] = c * e;
			te[4] = bd - ac * f;
			te[8] = bc * f + ad;

			te[1] = f;
			te[5] = a * e;
			te[9] = - b * e;

			te[2] = - d * e;
			te[6] = ad * f + bc;
			te[10] = ac - bd * f;

		} else if ( order === 'XZY' ) {

			var ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[0] = c * e;
			te[4] = - f;
			te[8] = d * e;

			te[1] = ac * f + bd;
			te[5] = a * e;
			te[9] = ad * f - bc;

			te[2] = bc * f - ad;
			te[6] = b * e;
			te[10] = bd * f + ac;

		}

		return this;

	},

	setRotationFromQuaternion: function ( q ) {

		var te = this.elements;

		var x = q.x, y = q.y, z = q.z, w = q.w;
		var x2 = x + x, y2 = y + y, z2 = z + z;
		var xx = x * x2, xy = x * y2, xz = x * z2;
		var yy = y * y2, yz = y * z2, zz = z * z2;
		var wx = w * x2, wy = w * y2, wz = w * z2;

		te[0] = 1 - ( yy + zz );
		te[4] = xy - wz;
		te[8] = xz + wy;

		te[1] = xy + wz;
		te[5] = 1 - ( xx + zz );
		te[9] = yz - wx;

		te[2] = xz - wy;
		te[6] = yz + wx;
		te[10] = 1 - ( xx + yy );

		return this;

	},

	lookAt: function() {

		var x = new THREE.Vector3();
		var y = new THREE.Vector3();
		var z = new THREE.Vector3();

		return function ( eye, target, up ) {

			var te = this.elements;

			z.subVectors( eye, target ).normalize();

			if ( z.length() === 0 ) {

				z.z = 1;

			}

			x.crossVectors( up, z ).normalize();

			if ( x.length() === 0 ) {

				z.x += 0.0001;
				x.crossVectors( up, z ).normalize();

			}

			y.crossVectors( z, x );


			te[0] = x.x; te[4] = y.x; te[8] = z.x;
			te[1] = x.y; te[5] = y.y; te[9] = z.y;
			te[2] = x.z; te[6] = y.z; te[10] = z.z;

			return this;

		};

	}(),

	multiply: function ( m, n ) {

		if ( n !== undefined ) {

			console.warn( 'DEPRECATED: Matrix4\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );
			return this.multiplyMatrices( m, n );

		}

		return this.multiplyMatrices( this, m );

	},

	multiplyMatrices: function ( a, b ) {

		var ae = a.elements;
		var be = b.elements;
		var te = this.elements;

		var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];
		var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];
		var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];
		var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];

		var b11 = be[0], b12 = be[4], b13 = be[8], b14 = be[12];
		var b21 = be[1], b22 = be[5], b23 = be[9], b24 = be[13];
		var b31 = be[2], b32 = be[6], b33 = be[10], b34 = be[14];
		var b41 = be[3], b42 = be[7], b43 = be[11], b44 = be[15];

		te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;

		te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;

		te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;

		te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

		return this;

	},

	multiplyToArray: function ( a, b, r ) {

		var te = this.elements;

		this.multiplyMatrices( a, b );

		r[ 0 ] = te[0]; r[ 1 ] = te[1]; r[ 2 ] = te[2]; r[ 3 ] = te[3];
		r[ 4 ] = te[4]; r[ 5 ] = te[5]; r[ 6 ] = te[6]; r[ 7 ] = te[7];
		r[ 8 ]  = te[8]; r[ 9 ]  = te[9]; r[ 10 ] = te[10]; r[ 11 ] = te[11];
		r[ 12 ] = te[12]; r[ 13 ] = te[13]; r[ 14 ] = te[14]; r[ 15 ] = te[15];

		return this;

	},

	multiplyScalar: function ( s ) {

		var te = this.elements;

		te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;
		te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;
		te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;
		te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;

		return this;

	},

	multiplyVector3: function ( vector ) {

		console.warn( 'DEPRECATED: Matrix4\'s .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );
		return vector.applyProjection( this );

	},

	multiplyVector4: function ( vector ) {

		console.warn( 'DEPRECATED: Matrix4\'s .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
		return vector.applyMatrix4( this );

	},

	multiplyVector3Array: function() {

		var v1 = new THREE.Vector3();

		return function ( a ) {

			for ( var i = 0, il = a.length; i < il; i += 3 ) {

				v1.x = a[ i ];
				v1.y = a[ i + 1 ];
				v1.z = a[ i + 2 ];

				v1.applyProjection( this );

				a[ i ]     = v1.x;
				a[ i + 1 ] = v1.y;
				a[ i + 2 ] = v1.z;

			}

			return a;

		};

	}(),

	rotateAxis: function ( v ) {

		console.warn( 'DEPRECATED: Matrix4\'s .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );

		v.transformDirection( this );

	},

	crossVector: function ( a ) {

		var te = this.elements;
		var v = new THREE.Vector4();

		v.x = te[0] * a.x + te[4] * a.y + te[8] * a.z + te[12] * a.w;
		v.y = te[1] * a.x + te[5] * a.y + te[9] * a.z + te[13] * a.w;
		v.z = te[2] * a.x + te[6] * a.y + te[10] * a.z + te[14] * a.w;

		v.w = ( a.w ) ? te[3] * a.x + te[7] * a.y + te[11] * a.z + te[15] * a.w : 1;

		return v;

	},

	determinant: function () {

		var te = this.elements;

		var n11 = te[0], n12 = te[4], n13 = te[8], n14 = te[12];
		var n21 = te[1], n22 = te[5], n23 = te[9], n24 = te[13];
		var n31 = te[2], n32 = te[6], n33 = te[10], n34 = te[14];
		var n41 = te[3], n42 = te[7], n43 = te[11], n44 = te[15];

		//TODO: make this more efficient
		//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )

		return (
			n41 * (
				+n14 * n23 * n32
				-n13 * n24 * n32
				-n14 * n22 * n33
				+n12 * n24 * n33
				+n13 * n22 * n34
				-n12 * n23 * n34
			) +
			n42 * (
				+n11 * n23 * n34
				-n11 * n24 * n33
				+n14 * n21 * n33
				-n13 * n21 * n34
				+n13 * n24 * n31
				-n14 * n23 * n31
			) +
			n43 * (
				+n11 * n24 * n32
				-n11 * n22 * n34
				-n14 * n21 * n32
				+n12 * n21 * n34
				+n14 * n22 * n31
				-n12 * n24 * n31
			) +
			n44 * (
				-n13 * n22 * n31
				-n11 * n23 * n32
				+n11 * n22 * n33
				+n13 * n21 * n32
				-n12 * n21 * n33
				+n12 * n23 * n31
			)

		);

	},

	transpose: function () {

		var te = this.elements;
		var tmp;

		tmp = te[1]; te[1] = te[4]; te[4] = tmp;
		tmp = te[2]; te[2] = te[8]; te[8] = tmp;
		tmp = te[6]; te[6] = te[9]; te[9] = tmp;

		tmp = te[3]; te[3] = te[12]; te[12] = tmp;
		tmp = te[7]; te[7] = te[13]; te[13] = tmp;
		tmp = te[11]; te[11] = te[14]; te[14] = tmp;

		return this;

	},

	flattenToArray: function ( flat ) {

		var te = this.elements;
		flat[ 0 ] = te[0]; flat[ 1 ] = te[1]; flat[ 2 ] = te[2]; flat[ 3 ] = te[3];
		flat[ 4 ] = te[4]; flat[ 5 ] = te[5]; flat[ 6 ] = te[6]; flat[ 7 ] = te[7];
		flat[ 8 ] = te[8]; flat[ 9 ] = te[9]; flat[ 10 ] = te[10]; flat[ 11 ] = te[11];
		flat[ 12 ] = te[12]; flat[ 13 ] = te[13]; flat[ 14 ] = te[14]; flat[ 15 ] = te[15];

		return flat;

	},

	flattenToArrayOffset: function( flat, offset ) {

		var te = this.elements;
		flat[ offset ] = te[0];
		flat[ offset + 1 ] = te[1];
		flat[ offset + 2 ] = te[2];
		flat[ offset + 3 ] = te[3];

		flat[ offset + 4 ] = te[4];
		flat[ offset + 5 ] = te[5];
		flat[ offset + 6 ] = te[6];
		flat[ offset + 7 ] = te[7];

		flat[ offset + 8 ]  = te[8];
		flat[ offset + 9 ]  = te[9];
		flat[ offset + 10 ] = te[10];
		flat[ offset + 11 ] = te[11];

		flat[ offset + 12 ] = te[12];
		flat[ offset + 13 ] = te[13];
		flat[ offset + 14 ] = te[14];
		flat[ offset + 15 ] = te[15];

		return flat;

	},

	getPosition: function() {

		var v1 = new THREE.Vector3();

		return function () {

			console.warn( 'DEPRECATED: Matrix4\'s .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.' );

			var te = this.elements;
			return v1.set( te[12], te[13], te[14] );

		};

	}(),

	setPosition: function ( v ) {

		var te = this.elements;

		te[12] = v.x;
		te[13] = v.y;
		te[14] = v.z;

		return this;

	},

	getInverse: function ( m, throwOnInvertible ) {

		// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
		var te = this.elements;
		var me = m.elements;

		var n11 = me[0], n12 = me[4], n13 = me[8], n14 = me[12];
		var n21 = me[1], n22 = me[5], n23 = me[9], n24 = me[13];
		var n31 = me[2], n32 = me[6], n33 = me[10], n34 = me[14];
		var n41 = me[3], n42 = me[7], n43 = me[11], n44 = me[15];

		te[0] = n23*n34*n42 - n24*n33*n42 + n24*n32*n43 - n22*n34*n43 - n23*n32*n44 + n22*n33*n44;
		te[4] = n14*n33*n42 - n13*n34*n42 - n14*n32*n43 + n12*n34*n43 + n13*n32*n44 - n12*n33*n44;
		te[8] = n13*n24*n42 - n14*n23*n42 + n14*n22*n43 - n12*n24*n43 - n13*n22*n44 + n12*n23*n44;
		te[12] = n14*n23*n32 - n13*n24*n32 - n14*n22*n33 + n12*n24*n33 + n13*n22*n34 - n12*n23*n34;
		te[1] = n24*n33*n41 - n23*n34*n41 - n24*n31*n43 + n21*n34*n43 + n23*n31*n44 - n21*n33*n44;
		te[5] = n13*n34*n41 - n14*n33*n41 + n14*n31*n43 - n11*n34*n43 - n13*n31*n44 + n11*n33*n44;
		te[9] = n14*n23*n41 - n13*n24*n41 - n14*n21*n43 + n11*n24*n43 + n13*n21*n44 - n11*n23*n44;
		te[13] = n13*n24*n31 - n14*n23*n31 + n14*n21*n33 - n11*n24*n33 - n13*n21*n34 + n11*n23*n34;
		te[2] = n22*n34*n41 - n24*n32*n41 + n24*n31*n42 - n21*n34*n42 - n22*n31*n44 + n21*n32*n44;
		te[6] = n14*n32*n41 - n12*n34*n41 - n14*n31*n42 + n11*n34*n42 + n12*n31*n44 - n11*n32*n44;
		te[10] = n12*n24*n41 - n14*n22*n41 + n14*n21*n42 - n11*n24*n42 - n12*n21*n44 + n11*n22*n44;
		te[14] = n14*n22*n31 - n12*n24*n31 - n14*n21*n32 + n11*n24*n32 + n12*n21*n34 - n11*n22*n34;
		te[3] = n23*n32*n41 - n22*n33*n41 - n23*n31*n42 + n21*n33*n42 + n22*n31*n43 - n21*n32*n43;
		te[7] = n12*n33*n41 - n13*n32*n41 + n13*n31*n42 - n11*n33*n42 - n12*n31*n43 + n11*n32*n43;
		te[11] = n13*n22*n41 - n12*n23*n41 - n13*n21*n42 + n11*n23*n42 + n12*n21*n43 - n11*n22*n43;
		te[15] = n12*n23*n31 - n13*n22*n31 + n13*n21*n32 - n11*n23*n32 - n12*n21*n33 + n11*n22*n33;

		var det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 4 ] + me[ 2 ] * te[ 8 ] + me[ 3 ] * te[ 12 ];

		if ( det == 0 ) {

			var msg = "Matrix4.getInverse(): can't invert matrix, determinant is 0";

			if ( throwOnInvertible || false ) {

				throw new Error( msg ); 

			} else {

				console.warn( msg );

			}

			this.identity();

			return this;
		}

		this.multiplyScalar( 1 / det );

		return this;

	},

	extractPosition: function ( m ) {

		var te = this.elements;
		var me = m.elements;

		te[12] = me[12];
		te[13] = me[13];
		te[14] = me[14];

		return this;

	},

	extractRotation: function() {

		var v1 = new THREE.Vector3();

		return function ( m ) {

			var te = this.elements;
			var me = m.elements;

			var scaleX = 1 / v1.set( me[0], me[1], me[2] ).length();
			var scaleY = 1 / v1.set( me[4], me[5], me[6] ).length();
			var scaleZ = 1 / v1.set( me[8], me[9], me[10] ).length();

			te[0] = me[0] * scaleX;
			te[1] = me[1] * scaleX;
			te[2] = me[2] * scaleX;

			te[4] = me[4] * scaleY;
			te[5] = me[5] * scaleY;
			te[6] = me[6] * scaleY;

			te[8] = me[8] * scaleZ;
			te[9] = me[9] * scaleZ;
			te[10] = me[10] * scaleZ;

			return this;

		};

	}(),

	translate: function ( v ) {

		var te = this.elements;
		var x = v.x, y = v.y, z = v.z;

		te[12] = te[0] * x + te[4] * y + te[8] * z + te[12];
		te[13] = te[1] * x + te[5] * y + te[9] * z + te[13];
		te[14] = te[2] * x + te[6] * y + te[10] * z + te[14];
		te[15] = te[3] * x + te[7] * y + te[11] * z + te[15];

		return this;

	},

	rotateX: function ( angle ) {

		var te = this.elements;
		var m12 = te[4];
		var m22 = te[5];
		var m32 = te[6];
		var m42 = te[7];
		var m13 = te[8];
		var m23 = te[9];
		var m33 = te[10];
		var m43 = te[11];
		var c = Math.cos( angle );
		var s = Math.sin( angle );

		te[4] = c * m12 + s * m13;
		te[5] = c * m22 + s * m23;
		te[6] = c * m32 + s * m33;
		te[7] = c * m42 + s * m43;

		te[8] = c * m13 - s * m12;
		te[9] = c * m23 - s * m22;
		te[10] = c * m33 - s * m32;
		te[11] = c * m43 - s * m42;

		return this;

	},

	rotateY: function ( angle ) {

		var te = this.elements;
		var m11 = te[0];
		var m21 = te[1];
		var m31 = te[2];
		var m41 = te[3];
		var m13 = te[8];
		var m23 = te[9];
		var m33 = te[10];
		var m43 = te[11];
		var c = Math.cos( angle );
		var s = Math.sin( angle );

		te[0] = c * m11 - s * m13;
		te[1] = c * m21 - s * m23;
		te[2] = c * m31 - s * m33;
		te[3] = c * m41 - s * m43;

		te[8] = c * m13 + s * m11;
		te[9] = c * m23 + s * m21;
		te[10] = c * m33 + s * m31;
		te[11] = c * m43 + s * m41;

		return this;

	},

	rotateZ: function ( angle ) {

		var te = this.elements;
		var m11 = te[0];
		var m21 = te[1];
		var m31 = te[2];
		var m41 = te[3];
		var m12 = te[4];
		var m22 = te[5];
		var m32 = te[6];
		var m42 = te[7];
		var c = Math.cos( angle );
		var s = Math.sin( angle );

		te[0] = c * m11 + s * m12;
		te[1] = c * m21 + s * m22;
		te[2] = c * m31 + s * m32;
		te[3] = c * m41 + s * m42;

		te[4] = c * m12 - s * m11;
		te[5] = c * m22 - s * m21;
		te[6] = c * m32 - s * m31;
		te[7] = c * m42 - s * m41;

		return this;

	},

	rotateByAxis: function ( axis, angle ) {

		var te = this.elements;

		// optimize by checking axis

		if ( axis.x === 1 && axis.y === 0 && axis.z === 0 ) {

			return this.rotateX( angle );

		} else if ( axis.x === 0 && axis.y === 1 && axis.z === 0 ) {

			return this.rotateY( angle );

		} else if ( axis.x === 0 && axis.y === 0 && axis.z === 1 ) {

			return this.rotateZ( angle );

		}

		var x = axis.x, y = axis.y, z = axis.z;
		var n = Math.sqrt(x * x + y * y + z * z);

		x /= n;
		y /= n;
		z /= n;

		var xx = x * x, yy = y * y, zz = z * z;
		var c = Math.cos( angle );
		var s = Math.sin( angle );
		var oneMinusCosine = 1 - c;
		var xy = x * y * oneMinusCosine;
		var xz = x * z * oneMinusCosine;
		var yz = y * z * oneMinusCosine;
		var xs = x * s;
		var ys = y * s;
		var zs = z * s;

		var r11 = xx + (1 - xx) * c;
		var r21 = xy + zs;
		var r31 = xz - ys;
		var r12 = xy - zs;
		var r22 = yy + (1 - yy) * c;
		var r32 = yz + xs;
		var r13 = xz + ys;
		var r23 = yz - xs;
		var r33 = zz + (1 - zz) * c;

		var m11 = te[0], m21 = te[1], m31 = te[2], m41 = te[3];
		var m12 = te[4], m22 = te[5], m32 = te[6], m42 = te[7];
		var m13 = te[8], m23 = te[9], m33 = te[10], m43 = te[11];

		te[0] = r11 * m11 + r21 * m12 + r31 * m13;
		te[1] = r11 * m21 + r21 * m22 + r31 * m23;
		te[2] = r11 * m31 + r21 * m32 + r31 * m33;
		te[3] = r11 * m41 + r21 * m42 + r31 * m43;

		te[4] = r12 * m11 + r22 * m12 + r32 * m13;
		te[5] = r12 * m21 + r22 * m22 + r32 * m23;
		te[6] = r12 * m31 + r22 * m32 + r32 * m33;
		te[7] = r12 * m41 + r22 * m42 + r32 * m43;

		te[8] = r13 * m11 + r23 * m12 + r33 * m13;
		te[9] = r13 * m21 + r23 * m22 + r33 * m23;
		te[10] = r13 * m31 + r23 * m32 + r33 * m33;
		te[11] = r13 * m41 + r23 * m42 + r33 * m43;

		return this;

	},

	scale: function ( v ) {

		var te = this.elements;
		var x = v.x, y = v.y, z = v.z;

		te[0] *= x; te[4] *= y; te[8] *= z;
		te[1] *= x; te[5] *= y; te[9] *= z;
		te[2] *= x; te[6] *= y; te[10] *= z;
		te[3] *= x; te[7] *= y; te[11] *= z;

		return this;

	},

	getMaxScaleOnAxis: function () {

		var te = this.elements;

		var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];
		var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];
		var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];

		return Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );

	},

	makeTranslation: function ( x, y, z ) {

		this.set(

			1, 0, 0, x,
			0, 1, 0, y,
			0, 0, 1, z,
			0, 0, 0, 1

		);

		return this;

	},

	makeRotationX: function ( theta ) {

		var c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			1, 0,  0, 0,
			0, c, -s, 0,
			0, s,  c, 0,
			0, 0,  0, 1

		);

		return this;

	},

	makeRotationY: function ( theta ) {

		var c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			 c, 0, s, 0,
			 0, 1, 0, 0,
			-s, 0, c, 0,
			 0, 0, 0, 1

		);

		return this;

	},

	makeRotationZ: function ( theta ) {

		var c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			c, -s, 0, 0,
			s,  c, 0, 0,
			0,  0, 1, 0,
			0,  0, 0, 1

		);

		return this;

	},

	makeRotationAxis: function ( axis, angle ) {

		// Based on http://www.gamedev.net/reference/articles/article1199.asp

		var c = Math.cos( angle );
		var s = Math.sin( angle );
		var t = 1 - c;
		var x = axis.x, y = axis.y, z = axis.z;
		var tx = t * x, ty = t * y;

		this.set(

			tx * x + c, tx * y - s * z, tx * z + s * y, 0,
			tx * y + s * z, ty * y + c, ty * z - s * x, 0,
			tx * z - s * y, ty * z + s * x, t * z * z + c, 0,
			0, 0, 0, 1

		);

		 return this;

	},

	makeScale: function ( x, y, z ) {

		this.set(

			x, 0, 0, 0,
			0, y, 0, 0,
			0, 0, z, 0,
			0, 0, 0, 1

		);

		return this;

	},

	makeFrustum: function ( left, right, bottom, top, near, far ) {

		var te = this.elements;
		var x = 2 * near / ( right - left );
		var y = 2 * near / ( top - bottom );

		var a = ( right + left ) / ( right - left );
		var b = ( top + bottom ) / ( top - bottom );
		var c = - ( far + near ) / ( far - near );
		var d = - 2 * far * near / ( far - near );

		te[0] = x;	te[4] = 0;	te[8] = a;	te[12] = 0;
		te[1] = 0;	te[5] = y;	te[9] = b;	te[13] = 0;
		te[2] = 0;	te[6] = 0;	te[10] = c;	te[14] = d;
		te[3] = 0;	te[7] = 0;	te[11] = - 1;	te[15] = 0;

		return this;

	},

	makePerspective: function ( fov, aspect, near, far ) {

		var ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );
		var ymin = - ymax;
		var xmin = ymin * aspect;
		var xmax = ymax * aspect;

		return this.makeFrustum( xmin, xmax, ymin, ymax, near, far );

	},

	makeOrthographic: function ( left, right, top, bottom, near, far ) {

		var te = this.elements;
		var w = right - left;
		var h = top - bottom;
		var p = far - near;

		var x = ( right + left ) / w;
		var y = ( top + bottom ) / h;
		var z = ( far + near ) / p;

		te[0] = 2 / w;	te[4] = 0;	te[8] = 0;	te[12] = -x;
		te[1] = 0;	te[5] = 2 / h;	te[9] = 0;	te[13] = -y;
		te[2] = 0;	te[6] = 0;	te[10] = -2/p;	te[14] = -z;
		te[3] = 0;	te[7] = 0;	te[11] = 0;	te[15] = 1;

		return this;

	},

	clone: function () {

		var te = this.elements;

		return new THREE.Matrix4(

			te[0], te[4], te[8], te[12],
			te[1], te[5], te[9], te[13],
			te[2], te[6], te[10], te[14],
			te[3], te[7], te[11], te[15]

		);

	}

};

THREE.extend( THREE.Matrix4.prototype, {

	compose: function() {

		var mRotation = new THREE.Matrix4();
		var mScale = new THREE.Matrix4();

		return function ( position, quaternion, scale ) {

			var te = this.elements;

			mRotation.identity();
			mRotation.setRotationFromQuaternion( quaternion );

			mScale.makeScale( scale.x, scale.y, scale.z );

			this.multiplyMatrices( mRotation, mScale );

			te[12] = position.x;
			te[13] = position.y;
			te[14] = position.z;

			return this;

		};

	}(),

	decompose: function() {

		var x = new THREE.Vector3();
		var y = new THREE.Vector3();
		var z = new THREE.Vector3();
		var matrix = new THREE.Matrix4();

		return function ( position, quaternion, scale ) {

			var te = this.elements;

			// grab the axis vectors
			x.set( te[0], te[1], te[2] );
			y.set( te[4], te[5], te[6] );
			z.set( te[8], te[9], te[10] );

			position = ( position instanceof THREE.Vector3 ) ? position : new THREE.Vector3();
			quaternion = ( quaternion instanceof THREE.Quaternion ) ? quaternion : new THREE.Quaternion();
			scale = ( scale instanceof THREE.Vector3 ) ? scale : new THREE.Vector3();

			scale.x = x.length();
			scale.y = y.length();
			scale.z = z.length();

			position.x = te[12];
			position.y = te[13];
			position.z = te[14];

			// scale the rotation part

			matrix.copy( this );

			matrix.elements[0] /= scale.x;
			matrix.elements[1] /= scale.x;
			matrix.elements[2] /= scale.x;

			matrix.elements[4] /= scale.y;
			matrix.elements[5] /= scale.y;
			matrix.elements[6] /= scale.y;

			matrix.elements[8] /= scale.z;
			matrix.elements[9] /= scale.z;
			matrix.elements[10] /= scale.z;

			quaternion.setFromRotationMatrix( matrix );

			return [ position, quaternion, scale ];

		};

	}()

} );
/**
 * @author bhouston / http://exocortex.com
 */

THREE.Ray = function ( origin, direction ) {

	this.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();
	this.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();

};

THREE.Ray.prototype = {

	constructor: THREE.Ray,

	set: function ( origin, direction ) {

		this.origin.copy( origin );
		this.direction.copy( direction );

		return this;

	},

	copy: function ( ray ) {

		this.origin.copy( ray.origin );
		this.direction.copy( ray.direction );

		return this;

	},

	at: function( t, optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();

		return result.copy( this.direction ).multiplyScalar( t ).add( this.origin );

	},

	recast: function() {

		var v1 = new THREE.Vector3();

		return function ( t ) {

			this.origin.copy( this.at( t, v1 ) );

			return this;

		};

	}(),

	closestPointToPoint: function ( point, optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		result.subVectors( point, this.origin );
		var directionDistance = result.dot( this.direction );

		return result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

	},

	distanceToPoint: function() {

		var v1 = new THREE.Vector3();

		return function ( point ) {

			var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );
			v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

			return v1.distanceTo( point );

		};

	}(),

	isIntersectionSphere: function( sphere ) {

		return ( this.distanceToPoint( sphere.center ) <= sphere.radius );

	},

	isIntersectionPlane: function ( plane ) {

		// check if the line and plane are non-perpendicular, if they
		// eventually they will intersect.
		var denominator = plane.normal.dot( this.direction );
		if ( denominator != 0 ) {

			return true;

		}

		// line is coplanar, return origin
		if( plane.distanceToPoint( this.origin ) == 0 ) {

			return true;

		}

		return false;

	},

	distanceToPlane: function ( plane ) {

		var denominator = plane.normal.dot( this.direction );
		if ( denominator == 0 ) {

			// line is coplanar, return origin
			if( plane.distanceToPoint( this.origin ) == 0 ) {

				return 0;

			}

			// Unsure if this is the correct method to handle this case.
			return undefined;

		}

		var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;

		return t;

	},

	intersectPlane: function ( plane, optionalTarget ) {

		var t = this.distanceToPlane( plane );

		if ( t === undefined ) {

			return undefined;
		}

		return this.at( t, optionalTarget );

	},

	applyMatrix4: function ( matrix4 ) {

		this.direction.add( this.origin ).applyMatrix4( matrix4 );
		this.origin.applyMatrix4( matrix4 );
		this.direction.sub( this.origin );

		return this;
	},

	equals: function ( ray ) {

		return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );

	},

	clone: function () {

		return new THREE.Ray().copy( this );

	}

};
/**
 * @author bhouston / http://exocortex.com
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Sphere = function ( center, radius ) {

	this.center = ( center !== undefined ) ? center : new THREE.Vector3();
	this.radius = ( radius !== undefined ) ? radius : 0;

};

THREE.Sphere.prototype = {

	constructor: THREE.Sphere,

	set: function ( center, radius ) {

		this.center.copy( center );
		this.radius = radius;

		return this;
	},

	setFromCenterAndPoints: function ( center, points ) {

		var maxRadiusSq = 0;

		for ( var i = 0, il = points.length; i < il; i ++ ) {

			var radiusSq = center.distanceToSquared( points[ i ] );
			maxRadiusSq = Math.max( maxRadiusSq, radiusSq );

		}

		this.center = center;
		this.radius = Math.sqrt( maxRadiusSq );

		return this;

	},

	copy: function ( sphere ) {

		this.center.copy( sphere.center );
		this.radius = sphere.radius;

		return this;

	},

	empty: function () {

		return ( this.radius <= 0 );

	},

	containsPoint: function ( point ) {

		return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );

	},

	distanceToPoint: function ( point ) {

		return ( point.distanceTo( this.center ) - this.radius );

	},

	intersectsSphere: function ( sphere ) {

		var radiusSum = this.radius + sphere.radius;

		return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );

	},

	clampPoint: function ( point, optionalTarget ) {

		var deltaLengthSq = this.center.distanceToSquared( point );

		var result = optionalTarget || new THREE.Vector3();
		result.copy( point );

		if ( deltaLengthSq > ( this.radius * this.radius ) ) {

			result.sub( this.center ).normalize();
			result.multiplyScalar( this.radius ).add( this.center );

		}

		return result;

	},

	getBoundingBox: function ( optionalTarget ) {

		var box = optionalTarget || new THREE.Box3();

		box.set( this.center, this.center );
		box.expandByScalar( this.radius );

		return box;

	},

	applyMatrix4: function ( matrix ) {

		this.center.applyMatrix4( matrix );
		this.radius = this.radius * matrix.getMaxScaleOnAxis();

		return this;

	},

	translate: function ( offset ) {

		this.center.add( offset );

		return this;

	},

	equals: function ( sphere ) {

		return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );

	},

	clone: function () {

		return new THREE.Sphere().copy( this );

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / http://exocortex.com
 */

THREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {

	this.planes = [

		( p0 !== undefined ) ? p0 : new THREE.Plane(),
		( p1 !== undefined ) ? p1 : new THREE.Plane(),
		( p2 !== undefined ) ? p2 : new THREE.Plane(),
		( p3 !== undefined ) ? p3 : new THREE.Plane(),
		( p4 !== undefined ) ? p4 : new THREE.Plane(),
		( p5 !== undefined ) ? p5 : new THREE.Plane()

	];

};

THREE.Frustum.prototype = {

	constructor: THREE.Frustum,

	set: function ( p0, p1, p2, p3, p4, p5 ) {

		var planes = this.planes;

		planes[0].copy( p0 );
		planes[1].copy( p1 );
		planes[2].copy( p2 );
		planes[3].copy( p3 );
		planes[4].copy( p4 );
		planes[5].copy( p5 );

		return this;

	},

	copy: function ( frustum ) {

		var planes = this.planes;

		for( var i = 0; i < 6; i ++ ) {

			planes[i].copy( frustum.planes[i] );

		}

		return this;

	},

	setFromMatrix: function ( m ) {

		var planes = this.planes;
		var me = m.elements;
		var me0 = me[0], me1 = me[1], me2 = me[2], me3 = me[3];
		var me4 = me[4], me5 = me[5], me6 = me[6], me7 = me[7];
		var me8 = me[8], me9 = me[9], me10 = me[10], me11 = me[11];
		var me12 = me[12], me13 = me[13], me14 = me[14], me15 = me[15];

		planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();
		planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();
		planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();
		planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();
		planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();
		planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();

		return this;

	},

	intersectsObject: function () {

		var center = new THREE.Vector3();

		return function ( object ) {

			// this method is expanded inlined for performance reasons.

			var matrix = object.matrixWorld;
			var planes = this.planes;
			var negRadius = - object.geometry.boundingSphere.radius * matrix.getMaxScaleOnAxis();

			center.getPositionFromMatrix( matrix );

			for ( var i = 0; i < 6; i ++ ) {

				var distance = planes[ i ].distanceToPoint( center );

				if ( distance < negRadius ) {

					return false;

				}

			}

			return true;

		};

	}(),

	intersectsSphere: function ( sphere ) {

		var planes = this.planes;
		var center = sphere.center;
		var negRadius = -sphere.radius;

		for ( var i = 0; i < 6; i ++ ) {

			var distance = planes[ i ].distanceToPoint( center );

			if ( distance < negRadius ) {

				return false;

			}

		}

		return true;

	},

	containsPoint: function ( point ) {

		var planes = this.planes;

		for ( var i = 0; i < 6; i ++ ) {

			if ( planes[ i ].distanceToPoint( point ) < 0 ) {

				return false;

			}

		}

		return true;

	},

	clone: function () {

		return new THREE.Frustum().copy( this );

	}

};
/**
 * @author bhouston / http://exocortex.com
 */

THREE.Plane = function ( normal, constant ) {

	this.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );
	this.constant = ( constant !== undefined ) ? constant : 0;

};

THREE.Plane.prototype = {

	constructor: THREE.Plane,

	set: function ( normal, constant ) {

		this.normal.copy( normal );
		this.constant = constant;

		return this;

	},

	setComponents: function ( x, y, z, w ) {

		this.normal.set( x, y, z );
		this.constant = w;

		return this;

	},

	setFromNormalAndCoplanarPoint: function ( normal, point ) {

		this.normal.copy( normal );
		this.constant = - point.dot( this.normal );	// must be this.normal, not normal, as this.normal is normalized

		return this;

	},

	setFromCoplanarPoints: function() {

		var v1 = new THREE.Vector3();
		var v2 = new THREE.Vector3();

		return function ( a, b, c ) {

			var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();

			// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?

			this.setFromNormalAndCoplanarPoint( normal, a );

			return this;

		};

	}(),


	copy: function ( plane ) {

		this.normal.copy( plane.normal );
		this.constant = plane.constant;

		return this;

	},

	normalize: function () {

		// Note: will lead to a divide by zero if the plane is invalid.

		var inverseNormalLength = 1.0 / this.normal.length();
		this.normal.multiplyScalar( inverseNormalLength );
		this.constant *= inverseNormalLength;

		return this;

	},

	negate: function () {

		this.constant *= -1;
		this.normal.negate();

		return this;

	},

	distanceToPoint: function ( point ) {

		return this.normal.dot( point ) + this.constant;

	},

	distanceToSphere: function ( sphere ) {

		return this.distanceToPoint( sphere.center ) - sphere.radius;

	},

	projectPoint: function ( point, optionalTarget ) {

		return this.orthoPoint( point, optionalTarget ).sub( point ).negate();

	},

	orthoPoint: function ( point, optionalTarget ) {

		var perpendicularMagnitude = this.distanceToPoint( point );

		var result = optionalTarget || new THREE.Vector3();
		return result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );

	},

	isIntersectionLine: function ( line ) {

		// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.

		var startSign = this.distanceToPoint( line.start );
		var endSign = this.distanceToPoint( line.end );

		return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );

	},

	intersectLine: function() {

		var v1 = new THREE.Vector3();

		return function ( line, optionalTarget ) {

			var result = optionalTarget || new THREE.Vector3();

			var direction = line.delta( v1 );

			var denominator = this.normal.dot( direction );

			if ( denominator == 0 ) {

				// line is coplanar, return origin
				if( this.distanceToPoint( line.start ) == 0 ) {

					return result.copy( line.start );

				}

				// Unsure if this is the correct method to handle this case.
				return undefined;

			}

			var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;

			if( t < 0 || t > 1 ) {

				return undefined;

			}

			return result.copy( direction ).multiplyScalar( t ).add( line.start );

		};

	}(),


	coplanarPoint: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.copy( this.normal ).multiplyScalar( - this.constant );

	},

	applyMatrix4: function() {

		var v1 = new THREE.Vector3();
		var v2 = new THREE.Vector3();

		return function ( matrix, optionalNormalMatrix ) {

			// compute new normal based on theory here:
			// http://www.songho.ca/opengl/gl_normaltransform.html
			optionalNormalMatrix = optionalNormalMatrix || new THREE.Matrix3().getInverse( matrix ).transpose();
			var newNormal = v1.copy( this.normal ).applyMatrix3( optionalNormalMatrix );

			var newCoplanarPoint = this.coplanarPoint( v2 );
			newCoplanarPoint.applyMatrix4( matrix );

			this.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );

			return this;

		};

	}(),

	translate: function ( offset ) {

		this.constant = this.constant - offset.dot( this.normal );

		return this;

	},

	equals: function ( plane ) {

		return plane.normal.equals( this.normal ) && ( plane.constant == this.constant );

	},

	clone: function () {

		return new THREE.Plane().copy( this );

	}

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Math = {

	// Clamp value to range <a, b>

	clamp: function ( x, a, b ) {

		return ( x < a ) ? a : ( ( x > b ) ? b : x );

	},

	// Clamp value to range <a, inf)

	clampBottom: function ( x, a ) {

		return x < a ? a : x;

	},

	// Linear mapping from range <a1, a2> to range <b1, b2>

	mapLinear: function ( x, a1, a2, b1, b2 ) {

		return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );

	},

	// http://en.wikipedia.org/wiki/Smoothstep

	smoothstep: function ( x, min, max ) {

		if ( x <= min ) return 0;
		if ( x >= max ) return 1;

		x = ( x - min )/( max - min );

		return x*x*(3 - 2*x);

	},

	smootherstep: function ( x, min, max ) {

		if ( x <= min ) return 0;
		if ( x >= max ) return 1;

		x = ( x - min )/( max - min );

		return x*x*x*(x*(x*6 - 15) + 10);

	},

	// Random float from <0, 1> with 16 bits of randomness
	// (standard Math.random() creates repetitive patterns when applied over larger space)

	random16: function () {

		return ( 65280 * Math.random() + 255 * Math.random() ) / 65535;

	},

	// Random integer from <low, high> interval

	randInt: function ( low, high ) {

		return low + Math.floor( Math.random() * ( high - low + 1 ) );

	},

	// Random float from <low, high> interval

	randFloat: function ( low, high ) {

		return low + Math.random() * ( high - low );

	},

	// Random float from <-range/2, range/2> interval

	randFloatSpread: function ( range ) {

		return range * ( 0.5 - Math.random() );

	},

	sign: function ( x ) {

		return ( x < 0 ) ? -1 : ( ( x > 0 ) ? 1 : 0 );

	},

	degToRad: function() {

		var degreeToRadiansFactor = Math.PI / 180;

		return function ( degrees ) {

			return degrees * degreeToRadiansFactor;

		};

	}(),

	radToDeg: function() {

		var radianToDegreesFactor = 180 / Math.PI;

		return function ( radians ) {

			return radians * radianToDegreesFactor;

		};

	}()

};
/**
 * Spline from Tween.js, slightly optimized (and trashed)
 * http://sole.github.com/tween.js/examples/05_spline.html
 *
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Spline = function ( points ) {

	this.points = points;

	var c = [], v3 = { x: 0, y: 0, z: 0 },
	point, intPoint, weight, w2, w3,
	pa, pb, pc, pd;

	this.initFromArray = function( a ) {

		this.points = [];

		for ( var i = 0; i < a.length; i++ ) {

			this.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };

		}

	};

	this.getPoint = function ( k ) {

		point = ( this.points.length - 1 ) * k;
		intPoint = Math.floor( point );
		weight = point - intPoint;

		c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;
		c[ 1 ] = intPoint;
		c[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;
		c[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;

		pa = this.points[ c[ 0 ] ];
		pb = this.points[ c[ 1 ] ];
		pc = this.points[ c[ 2 ] ];
		pd = this.points[ c[ 3 ] ];

		w2 = weight * weight;
		w3 = weight * w2;

		v3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );
		v3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );
		v3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );

		return v3;

	};

	this.getControlPointsArray = function () {

		var i, p, l = this.points.length,
			coords = [];

		for ( i = 0; i < l; i ++ ) {

			p = this.points[ i ];
			coords[ i ] = [ p.x, p.y, p.z ];

		}

		return coords;

	};

	// approximate length by summing linear segments

	this.getLength = function ( nSubDivisions ) {

		var i, index, nSamples, position,
			point = 0, intPoint = 0, oldIntPoint = 0,
			oldPosition = new THREE.Vector3(),
			tmpVec = new THREE.Vector3(),
			chunkLengths = [],
			totalLength = 0;

		// first point has 0 length

		chunkLengths[ 0 ] = 0;

		if ( !nSubDivisions ) nSubDivisions = 100;

		nSamples = this.points.length * nSubDivisions;

		oldPosition.copy( this.points[ 0 ] );

		for ( i = 1; i < nSamples; i ++ ) {

			index = i / nSamples;

			position = this.getPoint( index );
			tmpVec.copy( position );

			totalLength += tmpVec.distanceTo( oldPosition );

			oldPosition.copy( position );

			point = ( this.points.length - 1 ) * index;
			intPoint = Math.floor( point );

			if ( intPoint != oldIntPoint ) {

				chunkLengths[ intPoint ] = totalLength;
				oldIntPoint = intPoint;

			}

		}

		// last point ends with total length

		chunkLengths[ chunkLengths.length ] = totalLength;

		return { chunks: chunkLengths, total: totalLength };

	};

	this.reparametrizeByArcLength = function ( samplingCoef ) {

		var i, j,
			index, indexCurrent, indexNext,
			linearDistance, realDistance,
			sampling, position,
			newpoints = [],
			tmpVec = new THREE.Vector3(),
			sl = this.getLength();

		newpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );

		for ( i = 1; i < this.points.length; i++ ) {

			//tmpVec.copy( this.points[ i - 1 ] );
			//linearDistance = tmpVec.distanceTo( this.points[ i ] );

			realDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];

			sampling = Math.ceil( samplingCoef * realDistance / sl.total );

			indexCurrent = ( i - 1 ) / ( this.points.length - 1 );
			indexNext = i / ( this.points.length - 1 );

			for ( j = 1; j < sampling - 1; j++ ) {

				index = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );

				position = this.getPoint( index );
				newpoints.push( tmpVec.copy( position ).clone() );

			}

			newpoints.push( tmpVec.copy( this.points[ i ] ).clone() );

		}

		this.points = newpoints;

	};

	// Catmull-Rom

	function interpolate( p0, p1, p2, p3, t, t2, t3 ) {

		var v0 = ( p2 - p0 ) * 0.5,
			v1 = ( p3 - p1 ) * 0.5;

		return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;

	};

};
/**
 * @author bhouston / http://exocortex.com
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Triangle = function ( a, b, c ) {

	this.a = ( a !== undefined ) ? a : new THREE.Vector3();
	this.b = ( b !== undefined ) ? b : new THREE.Vector3();
	this.c = ( c !== undefined ) ? c : new THREE.Vector3();

};

THREE.Triangle.normal = function() {

	var v0 = new THREE.Vector3();

	return function ( a, b, c, optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();

		result.subVectors( c, b );
		v0.subVectors( a, b );
		result.cross( v0 );

		var resultLengthSq = result.lengthSq();
		if( resultLengthSq > 0 ) {

			return result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );

		}

		return result.set( 0, 0, 0 );

	};

}();

// static/instance method to calculate barycoordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
THREE.Triangle.barycoordFromPoint = function() {

	var v0 = new THREE.Vector3();
	var v1 = new THREE.Vector3();
	var v2 = new THREE.Vector3();

	return function ( point, a, b, c, optionalTarget ) {

		v0.subVectors( c, a );
		v1.subVectors( b, a );
		v2.subVectors( point, a );

		var dot00 = v0.dot( v0 );
		var dot01 = v0.dot( v1 );
		var dot02 = v0.dot( v2 );
		var dot11 = v1.dot( v1 );
		var dot12 = v1.dot( v2 );

		var denom = ( dot00 * dot11 - dot01 * dot01 );

		var result = optionalTarget || new THREE.Vector3();

		// colinear or singular triangle
		if( denom == 0 ) {
			// arbitrary location outside of triangle?
			// not sure if this is the best idea, maybe should be returning undefined
			return result.set( -2, -1, -1 );
		}

		var invDenom = 1 / denom;
		var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;
		var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;

		// barycoordinates must always sum to 1
		return result.set( 1 - u - v, v, u );

	};

}();

THREE.Triangle.containsPoint = function() {

	var v1 = new THREE.Vector3();

	return function ( point, a, b, c ) {

		var result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );

		return ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );

	};

}();

THREE.Triangle.prototype = {

	constructor: THREE.Triangle,

	set: function ( a, b, c ) {

		this.a.copy( a );
		this.b.copy( b );
		this.c.copy( c );

		return this;

	},

	setFromPointsAndIndices: function ( points, i0, i1, i2 ) {

		this.a.copy( points[i0] );
		this.b.copy( points[i1] );
		this.c.copy( points[i2] );

		return this;

	},

	copy: function ( triangle ) {

		this.a.copy( triangle.a );
		this.b.copy( triangle.b );
		this.c.copy( triangle.c );

		return this;

	},

	area: function() {

		var v0 = new THREE.Vector3();
		var v1 = new THREE.Vector3();

		return function () {

			v0.subVectors( this.c, this.b );
			v1.subVectors( this.a, this.b );

			return v0.cross( v1 ).length() * 0.5;

		};

	}(),

	midpoint: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Vector3();
		return result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );

	},

	normal: function ( optionalTarget ) {

		return THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );

	},

	plane: function ( optionalTarget ) {

		var result = optionalTarget || new THREE.Plane();

		return result.setFromCoplanarPoints( this.a, this.b, this.c );

	},

	barycoordFromPoint: function ( point, optionalTarget ) {

		return THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );

	},

	containsPoint: function ( point ) {

		return THREE.Triangle.containsPoint( point, this.a, this.b, this.c );

	},

	equals: function ( triangle ) {

		return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );

	},

	clone: function () {

		return new THREE.Triangle().copy( this );

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Vertex = function ( v ) {

	console.warn( 'THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.')
	return v;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.UV = function ( u, v ) {

	console.warn( 'THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.')
	return new THREE.Vector2( u, v );

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Clock = function ( autoStart ) {

	this.autoStart = ( autoStart !== undefined ) ? autoStart : true;

	this.startTime = 0;
	this.oldTime = 0;
	this.elapsedTime = 0;

	this.running = false;

};

THREE.extend( THREE.Clock.prototype, {

	start: function () {

		this.startTime = window.performance !== undefined && window.performance.now !== undefined
					? window.performance.now()
					: Date.now();

		this.oldTime = this.startTime;
		this.running = true;
	},

	stop: function () {

		this.getElapsedTime();
		this.running = false;

	},

	getElapsedTime: function () {

		this.getDelta();
		return this.elapsedTime;

	},

	getDelta: function () {

		var diff = 0;

		if ( this.autoStart && ! this.running ) {

			this.start();

		}

		if ( this.running ) {

			var newTime = window.performance !== undefined && window.performance.now !== undefined
					? window.performance.now()
					: Date.now();

			diff = 0.001 * ( newTime - this.oldTime );
			this.oldTime = newTime;

			this.elapsedTime += diff;

		}

		return diff;

	}

} );
/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */

THREE.EventDispatcher = function () {

	var listeners = {};

	this.addEventListener = function ( type, listener ) {

		if ( listeners[ type ] === undefined ) {

			listeners[ type ] = [];

		}

		if ( listeners[ type ].indexOf( listener ) === - 1 ) {

			listeners[ type ].push( listener );

		}

	};

	this.removeEventListener = function ( type, listener ) {

		var index = listeners[ type ].indexOf( listener );

		if ( index !== - 1 ) {

			listeners[ type ].splice( index, 1 );

		}

	};

	this.dispatchEvent = function ( event ) {

		var listenerArray = listeners[ event.type ];

		if ( listenerArray !== undefined ) {

			event.target = this;

			for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {

				listenerArray[ i ].call( this, event );

			}

		}

	};

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author bhouston / http://exocortex.com/
 */

( function ( THREE ) {

	THREE.Raycaster = function ( origin, direction, near, far ) {

		this.ray = new THREE.Ray( origin, direction );

		// normalized ray.direction required for accurate distance calculations
		if( this.ray.direction.lengthSq() > 0 ) {

			this.ray.direction.normalize();

		}

		this.near = near || 0;
		this.far = far || Infinity;

	};

	var sphere = new THREE.Sphere();
	var localRay = new THREE.Ray();
	var facePlane = new THREE.Plane();
	var intersectPoint = new THREE.Vector3();
	var matrixPosition = new THREE.Vector3();

	var inverseMatrix = new THREE.Matrix4();

	var descSort = function ( a, b ) {

		return a.distance - b.distance;

	};

	var intersectObject = function ( object, raycaster, intersects ) {

		if ( object instanceof THREE.Particle ) {

			matrixPosition.getPositionFromMatrix( object.matrixWorld );
			var distance = raycaster.ray.distanceToPoint( matrixPosition );

			if ( distance > object.scale.x ) {

				return intersects;

			}

			intersects.push( {

				distance: distance,
				point: object.position,
				face: null,
				object: object

			} );

		} else if ( object instanceof THREE.Mesh ) {

			// Checking boundingSphere distance to ray
			matrixPosition.getPositionFromMatrix( object.matrixWorld );
			sphere.set(
				matrixPosition,
				object.geometry.boundingSphere.radius * object.matrixWorld.getMaxScaleOnAxis() );

			if ( ! raycaster.ray.isIntersectionSphere( sphere ) ) {

				return intersects;

			}

			// Checking faces

			var geometry = object.geometry;
			var vertices = geometry.vertices;

			var isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;
			var objectMaterials = isFaceMaterial === true ? object.material.materials : null;

			var side = object.material.side;

			var a, b, c, d;
			var precision = raycaster.precision;

			object.matrixRotationWorld.extractRotation( object.matrixWorld );

			inverseMatrix.getInverse( object.matrixWorld );

			localRay.copy( raycaster.ray ).applyMatrix4( inverseMatrix );

			for ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {

				var face = geometry.faces[ f ];

				var material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : object.material;

				if ( material === undefined ) continue;

				facePlane.setFromNormalAndCoplanarPoint( face.normal, vertices[face.a] );

				var planeDistance = localRay.distanceToPlane( facePlane );

				// bail if raycaster and plane are parallel
				if ( Math.abs( planeDistance ) < precision ) continue;

				// if negative distance, then plane is behind raycaster
				if ( planeDistance < 0 ) continue;

				// check if we hit the wrong side of a single sided face
				side = material.side;
				if( side !== THREE.DoubleSide ) {

					var planeSign = localRay.direction.dot( facePlane.normal );

					if( ! ( side === THREE.FrontSide ? planeSign < 0 : planeSign > 0 ) ) continue;

				}

				// this can be done using the planeDistance from localRay because localRay wasn't normalized, but ray was
				if ( planeDistance < raycaster.near || planeDistance > raycaster.far ) continue;

				intersectPoint = localRay.at( planeDistance, intersectPoint ); // passing in intersectPoint avoids a copy

				if ( face instanceof THREE.Face3 ) {

					a = vertices[ face.a ];
					b = vertices[ face.b ];
					c = vertices[ face.c ];

					if ( ! THREE.Triangle.containsPoint( intersectPoint, a, b, c ) ) continue;

				} else if ( face instanceof THREE.Face4 ) {

					a = vertices[ face.a ];
					b = vertices[ face.b ];
					c = vertices[ face.c ];
					d = vertices[ face.d ];

					if ( ( ! THREE.Triangle.containsPoint( intersectPoint, a, b, d ) ) &&
						 ( ! THREE.Triangle.containsPoint( intersectPoint, b, c, d ) ) ) continue;

				} else {

					// This is added because if we call out of this if/else group when none of the cases
					//    match it will add a point to the intersection list erroneously.
					throw Error( "face type not supported" );

				}

				intersects.push( {

					distance: planeDistance,	// this works because the original ray was normalized, and the transformed localRay wasn't
					point: raycaster.ray.at( planeDistance ),
					face: face,
					faceIndex: f,
					object: object

				} );

			}

		}

	};

	var intersectDescendants = function ( object, raycaster, intersects ) {

		var descendants = object.getDescendants();

		for ( var i = 0, l = descendants.length; i < l; i ++ ) {

			intersectObject( descendants[ i ], raycaster, intersects );

		}
	};

	//

	THREE.Raycaster.prototype.precision = 0.0001;

	THREE.Raycaster.prototype.set = function ( origin, direction ) {

		this.ray.set( origin, direction );

		// normalized ray.direction required for accurate distance calculations
		if( this.ray.direction.length() > 0 ) {

			this.ray.direction.normalize();

		}

	};

	THREE.Raycaster.prototype.intersectObject = function ( object, recursive ) {

		var intersects = [];

		if ( recursive === true ) {

			intersectDescendants( object, this, intersects );

		}

		intersectObject( object, this, intersects );

		intersects.sort( descSort );

		return intersects;

	};

	THREE.Raycaster.prototype.intersectObjects = function ( objects, recursive ) {

		var intersects = [];

		for ( var i = 0, l = objects.length; i < l; i ++ ) {

			intersectObject( objects[ i ], this, intersects );

			if ( recursive === true ) {

				intersectDescendants( objects[ i ], this, intersects );

			}
		}

		intersects.sort( descSort );

		return intersects;

	};

}( THREE ) );
/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 */

THREE.Object3D = function () {

	this.id = THREE.Object3DIdCount ++;

	this.name = '';

	this.parent = undefined;
	this.children = [];

	this.up = new THREE.Vector3( 0, 1, 0 );

	this.position = new THREE.Vector3();
	this.rotation = new THREE.Vector3();
	this.eulerOrder = THREE.Object3D.defaultEulerOrder;
	this.scale = new THREE.Vector3( 1, 1, 1 );

	this.renderDepth = null;

	this.rotationAutoUpdate = true;

	this.matrix = new THREE.Matrix4();
	this.matrixWorld = new THREE.Matrix4();
	this.matrixRotationWorld = new THREE.Matrix4();

	this.matrixAutoUpdate = true;
	this.matrixWorldNeedsUpdate = true;

	this.quaternion = new THREE.Quaternion();
	this.useQuaternion = false;

	this.visible = true;

	this.castShadow = false;
	this.receiveShadow = false;

	this.frustumCulled = true;

	this.userData = {};

};


THREE.Object3D.prototype = {

	constructor: THREE.Object3D,

	applyMatrix: function () {

		var m1 = new THREE.Matrix4();

		return function ( matrix ) {

			this.matrix.multiplyMatrices( matrix, this.matrix );

			this.position.getPositionFromMatrix( this.matrix );

			this.scale.getScaleFromMatrix( this.matrix );

			m1.extractRotation( this.matrix );

			if ( this.useQuaternion === true )  {

				this.quaternion.setFromRotationMatrix( m1 );

			} else {

				this.rotation.setEulerFromRotationMatrix( m1, this.eulerOrder );

			}

		}

	}(),

	translate: function () {

		var v1 = new THREE.Vector3();

		return function ( distance, axis ) {

			// axis is assumed to be normalized

			v1.copy( axis );

			if ( this.useQuaternion === true ) {

				v1.applyQuaternion( this.quaternion );

			} else {

				v1.applyEuler( this.rotation, this.eulerOrder );

			}

			v1.multiplyScalar( distance );

			this.position.add( v1 );

			return this;

		};

	}(),

	translateX: function () {

		var v1 = new THREE.Vector3( 1, 0, 0 );

		return function ( distance ) {

			return this.translate( distance, v1 );

		};

	}(),

	translateY: function () {

		var v1 = new THREE.Vector3( 0, 1, 0 );

		return function ( distance ) {

			return this.translate( distance, v1 );

		};

	}(),

	translateZ: function () {

		var v1 = new THREE.Vector3( 0, 0, 1 );

		return function ( distance ) {

			return this.translate( distance, v1 );

		};

	}(),

	localToWorld: function ( vector ) {

		return vector.applyMatrix4( this.matrixWorld );

	},

	worldToLocal: function () {

		var m1 = new THREE.Matrix4();

		return function ( vector ) {

			return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );

		};

	}(),

	lookAt: function () {

		// This routine does not support objects with rotated and/or translated parent(s)

		var m1 = new THREE.Matrix4();

		return function ( vector ) {

			m1.lookAt( vector, this.position, this.up );

			if ( this.useQuaternion === true )  {

				this.quaternion.setFromRotationMatrix( m1 );

			} else {

				this.rotation.setEulerFromRotationMatrix( m1, this.eulerOrder );

			}

		};

	}(),

	add: function ( object ) {

		if ( object === this ) {

			console.warn( 'THREE.Object3D.add: An object can\'t be added as a child of itself.' );
			return;

		}

		if ( object instanceof THREE.Object3D ) {

			if ( object.parent !== undefined ) {

				object.parent.remove( object );

			}

			object.parent = this;
			this.children.push( object );

			// add to scene

			var scene = this;

			while ( scene.parent !== undefined ) {

				scene = scene.parent;

			}

			if ( scene !== undefined && scene instanceof THREE.Scene )  {

				scene.__addObject( object );

			}

		}

	},

	remove: function ( object ) {

		var index = this.children.indexOf( object );

		if ( index !== - 1 ) {

			object.parent = undefined;
			this.children.splice( index, 1 );

			// remove from scene

			var scene = this;

			while ( scene.parent !== undefined ) {

				scene = scene.parent;

			}

			if ( scene !== undefined && scene instanceof THREE.Scene ) {

				scene.__removeObject( object );

			}

		}

	},

	traverse: function ( callback ) {

		callback( this );

		for ( var i = 0, l = this.children.length; i < l; i ++ ) {

			this.children[ i ].traverse( callback );

		}

	},

	getChildByName: function ( name, recursive ) {

		for ( var i = 0, l = this.children.length; i < l; i ++ ) {

			var child = this.children[ i ];

			if ( child.name === name ) {

				return child;

			}

			if ( recursive === true ) {

				child = child.getChildByName( name, recursive );

				if ( child !== undefined ) {

					return child;

				}

			}

		}

		return undefined;

	},

	getDescendants: function ( array ) {

		if ( array === undefined ) array = [];

		Array.prototype.push.apply( array, this.children );

		for ( var i = 0, l = this.children.length; i < l; i ++ ) {

			this.children[ i ].getDescendants( array );

		}

		return array;

	},

	updateMatrix: function () {

		this.matrix.setPosition( this.position );

		if ( this.useQuaternion === false )  {

			this.matrix.setRotationFromEuler( this.rotation, this.eulerOrder );

		} else {

			this.matrix.setRotationFromQuaternion( this.quaternion );

		}

		if ( this.scale.x !== 1 || this.scale.y !== 1 || this.scale.z !== 1 ) {

			this.matrix.scale( this.scale );

		}

		this.matrixWorldNeedsUpdate = true;

	},

	updateMatrixWorld: function ( force ) {

		if ( this.matrixAutoUpdate === true ) this.updateMatrix();

		if ( this.matrixWorldNeedsUpdate === true || force === true ) {

			if ( this.parent === undefined ) {

				this.matrixWorld.copy( this.matrix );

			} else {

				this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

			}

			this.matrixWorldNeedsUpdate = false;

			force = true;

		}

		// update children

		for ( var i = 0, l = this.children.length; i < l; i ++ ) {

			this.children[ i ].updateMatrixWorld( force );

		}

	},

	clone: function ( object ) {

		if ( object === undefined ) object = new THREE.Object3D();

		object.name = this.name;

		object.up.copy( this.up );

		object.position.copy( this.position );
		if ( object.rotation instanceof THREE.Vector3 ) object.rotation.copy( this.rotation ); // because of Sprite madness
		object.eulerOrder = this.eulerOrder;
		object.scale.copy( this.scale );

		object.renderDepth = this.renderDepth;

		object.rotationAutoUpdate = this.rotationAutoUpdate;

		object.matrix.copy( this.matrix );
		object.matrixWorld.copy( this.matrixWorld );
		object.matrixRotationWorld.copy( this.matrixRotationWorld );

		object.matrixAutoUpdate = this.matrixAutoUpdate;
		object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;

		object.quaternion.copy( this.quaternion );
		object.useQuaternion = this.useQuaternion;

		object.visible = this.visible;

		object.castShadow = this.castShadow;
		object.receiveShadow = this.receiveShadow;

		object.frustumCulled = this.frustumCulled;

		for ( var i = 0; i < this.children.length; i ++ ) {

			var child = this.children[ i ];
			object.add( child.clone() );

		}

		return object;

	}

};

THREE.Object3D.defaultEulerOrder = 'XYZ',

THREE.Object3DIdCount = 0;
/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author julianwa / https://github.com/julianwa
 */

THREE.Projector = function () {

	var _object, _objectCount, _objectPool = [], _objectPoolLength = 0,
	_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,
	_face, _face3Count, _face3Pool = [], _face3PoolLength = 0,
	_face4Count, _face4Pool = [], _face4PoolLength = 0,
	_line, _lineCount, _linePool = [], _linePoolLength = 0,
	_particle, _particleCount, _particlePool = [], _particlePoolLength = 0,

	_renderData = { objects: [], sprites: [], lights: [], elements: [] },

	_vector3 = new THREE.Vector3(),
	_vector4 = new THREE.Vector4(),

	_clipBox = new THREE.Box3( new THREE.Vector3( -1, -1, -1 ), new THREE.Vector3( 1, 1, 1 ) ),
	_boundingBox = new THREE.Box3(),
	_points3 = new Array( 3 ),
	_points4 = new Array( 4 ),

	_viewMatrix = new THREE.Matrix4(),
	_viewProjectionMatrix = new THREE.Matrix4(),

	_modelMatrix,
	_modelViewProjectionMatrix = new THREE.Matrix4(),

	_normalMatrix = new THREE.Matrix3(),
	_normalViewMatrix = new THREE.Matrix3(),

	_centroid = new THREE.Vector3(),

	_frustum = new THREE.Frustum(),

	_clippedVertex1PositionScreen = new THREE.Vector4(),
	_clippedVertex2PositionScreen = new THREE.Vector4();

	this.projectVector = function ( vector, camera ) {

		camera.matrixWorldInverse.getInverse( camera.matrixWorld );

		_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );

		return vector.applyProjection( _viewProjectionMatrix );

	};

	this.unprojectVector = function ( vector, camera ) {

		camera.projectionMatrixInverse.getInverse( camera.projectionMatrix );

		_viewProjectionMatrix.multiplyMatrices( camera.matrixWorld, camera.projectionMatrixInverse );

		return vector.applyProjection( _viewProjectionMatrix );

	};

	this.pickingRay = function ( vector, camera ) {

		// set two vectors with opposing z values
		vector.z = -1.0;
		var end = new THREE.Vector3( vector.x, vector.y, 1.0 );

		this.unprojectVector( vector, camera );
		this.unprojectVector( end, camera );

		// find direction from vector to end
		end.sub( vector ).normalize();

		return new THREE.Raycaster( vector, end );

	};

	var projectGraph = function ( root, sortObjects ) {

		_objectCount = 0;

		_renderData.objects.length = 0;
		_renderData.sprites.length = 0;
		_renderData.lights.length = 0;

		var projectObject = function ( parent ) {

			for ( var c = 0, cl = parent.children.length; c < cl; c ++ ) {

				var object = parent.children[ c ];

				if ( object.visible === false ) continue;

				if ( object instanceof THREE.Light ) {

					_renderData.lights.push( object );

				} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {

					if ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {

						_object = getNextObjectInPool();
						_object.object = object;

						if ( object.renderDepth !== null ) {

							_object.z = object.renderDepth;

						} else {

							_vector3.getPositionFromMatrix( object.matrixWorld );
							_vector3.applyProjection( _viewProjectionMatrix );
							_object.z = _vector3.z;

						}

						_renderData.objects.push( _object );

					}

				} else if ( object instanceof THREE.Sprite || object instanceof THREE.Particle ) {

					_object = getNextObjectInPool();
					_object.object = object;

					// TODO: Find an elegant and performant solution and remove this dupe code.

					if ( object.renderDepth !== null ) {

						_object.z = object.renderDepth;

					} else {

						_vector3.getPositionFromMatrix( object.matrixWorld );
						_vector3.applyProjection( _viewProjectionMatrix );
						_object.z = _vector3.z;

					}

					_renderData.sprites.push( _object );

				} else {

					_object = getNextObjectInPool();
					_object.object = object;

					if ( object.renderDepth !== null ) {

						_object.z = object.renderDepth;

					} else {

						_vector3.getPositionFromMatrix( object.matrixWorld );
						_vector3.applyProjection( _viewProjectionMatrix );
						_object.z = _vector3.z;

					}

					_renderData.objects.push( _object );

				}

				projectObject( object );

			}

		};

		projectObject( root );

		if ( sortObjects === true ) _renderData.objects.sort( painterSort );

		return _renderData;

	};

	this.projectScene = function ( scene, camera, sortObjects, sortElements ) {

		var visible = false,
		o, ol, v, vl, f, fl, n, nl, c, cl, u, ul, object,
		geometry, vertices, faces, face, faceVertexNormals, faceVertexUvs, uvs,
		v1, v2, v3, v4, isFaceMaterial, objectMaterials;

		_face3Count = 0;
		_face4Count = 0;
		_lineCount = 0;
		_particleCount = 0;

		_renderData.elements.length = 0;

		scene.updateMatrixWorld();

		if ( camera.parent === undefined ) camera.updateMatrixWorld();

		_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );
		_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );

		_normalViewMatrix.getInverse( _viewMatrix );
		_normalViewMatrix.transpose();

		_frustum.setFromMatrix( _viewProjectionMatrix );

		_renderData = projectGraph( scene, sortObjects );

		for ( o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {

			object = _renderData.objects[ o ].object;

			_modelMatrix = object.matrixWorld;

			_vertexCount = 0;

			if ( object instanceof THREE.Mesh ) {

				geometry = object.geometry;

				vertices = geometry.vertices;
				faces = geometry.faces;
				faceVertexUvs = geometry.faceVertexUvs;

				_normalMatrix.getInverse( _modelMatrix );
				_normalMatrix.transpose();

				isFaceMaterial = object.material instanceof THREE.MeshFaceMaterial;
				objectMaterials = isFaceMaterial === true ? object.material : null;

				for ( v = 0, vl = vertices.length; v < vl; v ++ ) {

					_vertex = getNextVertexInPool();

					_vertex.positionWorld.copy( vertices[ v ] ).applyMatrix4( _modelMatrix );
					_vertex.positionScreen.copy( _vertex.positionWorld ).applyMatrix4( _viewProjectionMatrix );

					_vertex.positionScreen.x /= _vertex.positionScreen.w;
					_vertex.positionScreen.y /= _vertex.positionScreen.w;
					_vertex.positionScreen.z /= _vertex.positionScreen.w;

					_vertex.visible = ! ( _vertex.positionScreen.x < -1 || _vertex.positionScreen.x > 1 ||
							      _vertex.positionScreen.y < -1 || _vertex.positionScreen.y > 1 ||
							      _vertex.positionScreen.z < -1 || _vertex.positionScreen.z > 1 );

				}

				for ( f = 0, fl = faces.length; f < fl; f ++ ) {

					face = faces[ f ];

					var material = isFaceMaterial === true
						? objectMaterials.materials[ face.materialIndex ]
						: object.material;

					if ( material === undefined ) continue;

					var side = material.side;

					if ( face instanceof THREE.Face3 ) {

						v1 = _vertexPool[ face.a ];
						v2 = _vertexPool[ face.b ];
						v3 = _vertexPool[ face.c ];

						_points3[ 0 ] = v1.positionScreen;
						_points3[ 1 ] = v2.positionScreen;
						_points3[ 2 ] = v3.positionScreen;

						if ( v1.visible === true || v2.visible === true || v3.visible === true ||
							_clipBox.isIntersectionBox( _boundingBox.setFromPoints( _points3 ) ) ) {

							visible = ( ( v3.positionScreen.x - v1.positionScreen.x ) * ( v2.positionScreen.y - v1.positionScreen.y ) -
								( v3.positionScreen.y - v1.positionScreen.y ) * ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;

							if ( side === THREE.DoubleSide || visible === ( side === THREE.FrontSide ) ) {

								_face = getNextFace3InPool();

								_face.v1.copy( v1 );
								_face.v2.copy( v2 );
								_face.v3.copy( v3 );

							} else {

								continue;

							}

						} else {

							continue;

						}

					} else if ( face instanceof THREE.Face4 ) {

						v1 = _vertexPool[ face.a ];
						v2 = _vertexPool[ face.b ];
						v3 = _vertexPool[ face.c ];
						v4 = _vertexPool[ face.d ];

						_points4[ 0 ] = v1.positionScreen;
						_points4[ 1 ] = v2.positionScreen;
						_points4[ 2 ] = v3.positionScreen;
						_points4[ 3 ] = v4.positionScreen;

						if ( v1.visible === true || v2.visible === true || v3.visible === true || v4.visible === true ||
							_clipBox.isIntersectionBox( _boundingBox.setFromPoints( _points4 ) ) ) {

							visible = ( v4.positionScreen.x - v1.positionScreen.x ) * ( v2.positionScreen.y - v1.positionScreen.y ) -
								( v4.positionScreen.y - v1.positionScreen.y ) * ( v2.positionScreen.x - v1.positionScreen.x ) < 0 ||
								( v2.positionScreen.x - v3.positionScreen.x ) * ( v4.positionScreen.y - v3.positionScreen.y ) -
								( v2.positionScreen.y - v3.positionScreen.y ) * ( v4.positionScreen.x - v3.positionScreen.x ) < 0;


							if ( side === THREE.DoubleSide || visible === ( side === THREE.FrontSide ) ) {

								_face = getNextFace4InPool();

								_face.v1.copy( v1 );
								_face.v2.copy( v2 );
								_face.v3.copy( v3 );
								_face.v4.copy( v4 );

							} else {

								continue;

							}

						} else {

							continue;

						}

					}

					_face.normalModel.copy( face.normal );

					if ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {

						_face.normalModel.negate();

					}

					_face.normalModel.applyMatrix3( _normalMatrix ).normalize();

					_face.normalModelView.copy( _face.normalModel ).applyMatrix3( _normalViewMatrix );

					_face.centroidModel.copy( face.centroid ).applyMatrix4( _modelMatrix );

					faceVertexNormals = face.vertexNormals;

					for ( n = 0, nl = faceVertexNormals.length; n < nl; n ++ ) {

						var normalModel = _face.vertexNormalsModel[ n ];
						normalModel.copy( faceVertexNormals[ n ] );

						if ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {

							normalModel.negate();

						}

						normalModel.applyMatrix3( _normalMatrix ).normalize();

						var normalModelView = _face.vertexNormalsModelView[ n ];
						normalModelView.copy( normalModel ).applyMatrix3( _normalViewMatrix );

					}

					_face.vertexNormalsLength = faceVertexNormals.length;

					for ( c = 0, cl = faceVertexUvs.length; c < cl; c ++ ) {

						uvs = faceVertexUvs[ c ][ f ];

						if ( uvs === undefined ) continue;

						for ( u = 0, ul = uvs.length; u < ul; u ++ ) {

							_face.uvs[ c ][ u ] = uvs[ u ];

						}

					}

					_face.color = face.color;
					_face.material = material;

					_centroid.copy( _face.centroidModel ).applyProjection( _viewProjectionMatrix );

					_face.z = _centroid.z;

					_renderData.elements.push( _face );

				}

			} else if ( object instanceof THREE.Line ) {

				_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );

				vertices = object.geometry.vertices;

				v1 = getNextVertexInPool();
				v1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );

				// Handle LineStrip and LinePieces
				var step = object.type === THREE.LinePieces ? 2 : 1;

				for ( v = 1, vl = vertices.length; v < vl; v ++ ) {

					v1 = getNextVertexInPool();
					v1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );

					if ( ( v + 1 ) % step > 0 ) continue;

					v2 = _vertexPool[ _vertexCount - 2 ];

					_clippedVertex1PositionScreen.copy( v1.positionScreen );
					_clippedVertex2PositionScreen.copy( v2.positionScreen );

					if ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {

						// Perform the perspective divide
						_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );
						_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );

						_line = getNextLineInPool();
						_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );
						_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );

						_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );

						_line.material = object.material;

						_renderData.elements.push( _line );

					}

				}

			}

		}

		for ( o = 0, ol = _renderData.sprites.length; o < ol; o++ ) {

			object = _renderData.sprites[ o ].object;

			_modelMatrix = object.matrixWorld;

			if ( object instanceof THREE.Particle ) {

				_vector4.set( _modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1 );
				_vector4.applyMatrix4( _viewProjectionMatrix );

				_vector4.z /= _vector4.w;

				if ( _vector4.z > 0 && _vector4.z < 1 ) {

					_particle = getNextParticleInPool();
					_particle.object = object;
					_particle.x = _vector4.x / _vector4.w;
					_particle.y = _vector4.y / _vector4.w;
					_particle.z = _vector4.z;

					_particle.rotation = object.rotation.z;

					_particle.scale.x = object.scale.x * Math.abs( _particle.x - ( _vector4.x + camera.projectionMatrix.elements[0] ) / ( _vector4.w + camera.projectionMatrix.elements[12] ) );
					_particle.scale.y = object.scale.y * Math.abs( _particle.y - ( _vector4.y + camera.projectionMatrix.elements[5] ) / ( _vector4.w + camera.projectionMatrix.elements[13] ) );

					_particle.material = object.material;

					_renderData.elements.push( _particle );

				}

			}

		}

		if ( sortElements === true ) _renderData.elements.sort( painterSort );

		return _renderData;

	};

	// Pools

	function getNextObjectInPool() {

		if ( _objectCount === _objectPoolLength ) {

			var object = new THREE.RenderableObject();
			_objectPool.push( object );
			_objectPoolLength ++;
			_objectCount ++;
			return object;

		}

		return _objectPool[ _objectCount ++ ];

	}

	function getNextVertexInPool() {

		if ( _vertexCount === _vertexPoolLength ) {

			var vertex = new THREE.RenderableVertex();
			_vertexPool.push( vertex );
			_vertexPoolLength ++;
			_vertexCount ++;
			return vertex;

		}

		return _vertexPool[ _vertexCount ++ ];

	}

	function getNextFace3InPool() {

		if ( _face3Count === _face3PoolLength ) {

			var face = new THREE.RenderableFace3();
			_face3Pool.push( face );
			_face3PoolLength ++;
			_face3Count ++;
			return face;

		}

		return _face3Pool[ _face3Count ++ ];


	}

	function getNextFace4InPool() {

		if ( _face4Count === _face4PoolLength ) {

			var face = new THREE.RenderableFace4();
			_face4Pool.push( face );
			_face4PoolLength ++;
			_face4Count ++;
			return face;

		}

		return _face4Pool[ _face4Count ++ ];

	}

	function getNextLineInPool() {

		if ( _lineCount === _linePoolLength ) {

			var line = new THREE.RenderableLine();
			_linePool.push( line );
			_linePoolLength ++;
			_lineCount ++
			return line;

		}

		return _linePool[ _lineCount ++ ];

	}

	function getNextParticleInPool() {

		if ( _particleCount === _particlePoolLength ) {

			var particle = new THREE.RenderableParticle();
			_particlePool.push( particle );
			_particlePoolLength ++;
			_particleCount ++
			return particle;

		}

		return _particlePool[ _particleCount ++ ];

	}

	//

	function painterSort( a, b ) {

		return b.z - a.z;

	}

	function clipLine( s1, s2 ) {

		var alpha1 = 0, alpha2 = 1,

		// Calculate the boundary coordinate of each vertex for the near and far clip planes,
		// Z = -1 and Z = +1, respectively.
		bc1near =  s1.z + s1.w,
		bc2near =  s2.z + s2.w,
		bc1far =  - s1.z + s1.w,
		bc2far =  - s2.z + s2.w;

		if ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {

			// Both vertices lie entirely within all clip planes.
			return true;

		} else if ( ( bc1near < 0 && bc2near < 0) || (bc1far < 0 && bc2far < 0 ) ) {

			// Both vertices lie entirely outside one of the clip planes.
			return false;

		} else {

			// The line segment spans at least one clip plane.

			if ( bc1near < 0 ) {

				// v1 lies outside the near plane, v2 inside
				alpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );

			} else if ( bc2near < 0 ) {

				// v2 lies outside the near plane, v1 inside
				alpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );

			}

			if ( bc1far < 0 ) {

				// v1 lies outside the far plane, v2 inside
				alpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );

			} else if ( bc2far < 0 ) {

				// v2 lies outside the far plane, v2 inside
				alpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );

			}

			if ( alpha2 < alpha1 ) {

				// The line segment spans two boundaries, but is outside both of them.
				// (This can't happen when we're only clipping against just near/far but good
				//  to leave the check here for future usage if other clip planes are added.)
				return false;

			} else {

				// Update the s1 and s2 vertices to match the clipped line segment.
				s1.lerp( s2, alpha1 );
				s2.lerp( s1, 1 - alpha2 );

				return true;

			}

		}

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {

	this.a = a;
	this.b = b;
	this.c = c;

	this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();
	this.vertexNormals = normal instanceof Array ? normal : [ ];

	this.color = color instanceof THREE.Color ? color : new THREE.Color();
	this.vertexColors = color instanceof Array ? color : [];

	this.vertexTangents = [];

	this.materialIndex = materialIndex !== undefined ? materialIndex : 0;

	this.centroid = new THREE.Vector3();

};

THREE.Face3.prototype = {

	constructor: THREE.Face3,

	clone: function () {

		var face = new THREE.Face3( this.a, this.b, this.c );

		face.normal.copy( this.normal );
		face.color.copy( this.color );
		face.centroid.copy( this.centroid );

		face.materialIndex = this.materialIndex;

		var i, il;
		for ( i = 0, il = this.vertexNormals.length; i < il; i ++ ) face.vertexNormals[ i ] = this.vertexNormals[ i ].clone();
		for ( i = 0, il = this.vertexColors.length; i < il; i ++ ) face.vertexColors[ i ] = this.vertexColors[ i ].clone();
		for ( i = 0, il = this.vertexTangents.length; i < il; i ++ ) face.vertexTangents[ i ] = this.vertexTangents[ i ].clone();

		return face;

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {

	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;

	this.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();
	this.vertexNormals = normal instanceof Array ? normal : [ ];

	this.color = color instanceof THREE.Color ? color : new THREE.Color();
	this.vertexColors = color instanceof Array ? color : [];

	this.vertexTangents = [];

	this.materialIndex = materialIndex !== undefined ? materialIndex : 0;

	this.centroid = new THREE.Vector3();

};

THREE.Face4.prototype = {

	constructor: THREE.Face4,

	clone: function () {

		var face = new THREE.Face4( this.a, this.b, this.c, this.d );

		face.normal.copy( this.normal );
		face.color.copy( this.color );
		face.centroid.copy( this.centroid );

		face.materialIndex = this.materialIndex;

		var i, il;
		for ( i = 0, il = this.vertexNormals.length; i < il; i ++ ) face.vertexNormals[ i ] = this.vertexNormals[ i ].clone();
		for ( i = 0, il = this.vertexColors.length; i < il; i ++ ) face.vertexColors[ i ] = this.vertexColors[ i ].clone();
		for ( i = 0, il = this.vertexTangents.length; i < il; i ++ ) face.vertexTangents[ i ] = this.vertexTangents[ i ].clone();

		return face;

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author bhouston / http://exocortex.com
 */

THREE.Geometry = function () {

	THREE.EventDispatcher.call( this );

	this.id = THREE.GeometryIdCount ++;

	this.name = '';

	this.vertices = [];
	this.colors = [];  // one-to-one vertex colors, used in ParticleSystem, Line and Ribbon
	this.normals = []; // one-to-one vertex normals, used in Ribbon

	this.faces = [];

	this.faceUvs = [[]];
	this.faceVertexUvs = [[]];

	this.morphTargets = [];
	this.morphColors = [];
	this.morphNormals = [];

	this.skinWeights = [];
	this.skinIndices = [];

	this.lineDistances = [];

	this.boundingBox = null;
	this.boundingSphere = null;

	this.hasTangents = false;

	this.dynamic = true; // the intermediate typed arrays will be deleted when set to false

	// update flags

	this.verticesNeedUpdate = false;
	this.elementsNeedUpdate = false;
	this.uvsNeedUpdate = false;
	this.normalsNeedUpdate = false;
	this.tangentsNeedUpdate = false;
	this.colorsNeedUpdate = false;
	this.lineDistancesNeedUpdate = false;

	this.buffersNeedUpdate = false;

};

THREE.Geometry.prototype = {

	constructor: THREE.Geometry,

	applyMatrix: function ( matrix ) {

		var normalMatrix = new THREE.Matrix3().getInverse( matrix ).transpose();

		for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {

			var vertex = this.vertices[ i ];
			vertex.applyMatrix4( matrix );

		}

		for ( var i = 0, il = this.faces.length; i < il; i ++ ) {

			var face = this.faces[ i ];
			face.normal.applyMatrix3( normalMatrix ).normalize();

			for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {

				face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();

			}

			face.centroid.applyMatrix4( matrix );

		}

	},

	computeCentroids: function () {

		var f, fl, face;

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];
			face.centroid.set( 0, 0, 0 );

			if ( face instanceof THREE.Face3 ) {

				face.centroid.add( this.vertices[ face.a ] );
				face.centroid.add( this.vertices[ face.b ] );
				face.centroid.add( this.vertices[ face.c ] );
				face.centroid.divideScalar( 3 );

			} else if ( face instanceof THREE.Face4 ) {

				face.centroid.add( this.vertices[ face.a ] );
				face.centroid.add( this.vertices[ face.b ] );
				face.centroid.add( this.vertices[ face.c ] );
				face.centroid.add( this.vertices[ face.d ] );
				face.centroid.divideScalar( 4 );

			}

		}

	},

	computeFaceNormals: function () {

		var cb = new THREE.Vector3(), ab = new THREE.Vector3();

		for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {

			var face = this.faces[ f ];

			var vA = this.vertices[ face.a ];
			var vB = this.vertices[ face.b ];
			var vC = this.vertices[ face.c ];

			cb.subVectors( vC, vB );
			ab.subVectors( vA, vB );
			cb.cross( ab );

			cb.normalize();

			face.normal.copy( cb );

		}

	},

	computeVertexNormals: function ( areaWeighted ) {

		var v, vl, f, fl, face, vertices;

		// create internal buffers for reuse when calling this method repeatedly
		// (otherwise memory allocation / deallocation every frame is big resource hog)

		if ( this.__tmpVertices === undefined ) {

			this.__tmpVertices = new Array( this.vertices.length );
			vertices = this.__tmpVertices;

			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

				vertices[ v ] = new THREE.Vector3();

			}

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				if ( face instanceof THREE.Face3 ) {

					face.vertexNormals = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];

				} else if ( face instanceof THREE.Face4 ) {

					face.vertexNormals = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];

				}

			}

		} else {

			vertices = this.__tmpVertices;

			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

				vertices[ v ].set( 0, 0, 0 );

			}

		}

		if ( areaWeighted ) {

			// vertex normals weighted by triangle areas
			// http://www.iquilezles.org/www/articles/normals/normals.htm

			var vA, vB, vC, vD;
			var cb = new THREE.Vector3(), ab = new THREE.Vector3(),
				db = new THREE.Vector3(), dc = new THREE.Vector3(), bc = new THREE.Vector3();

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				if ( face instanceof THREE.Face3 ) {

					vA = this.vertices[ face.a ];
					vB = this.vertices[ face.b ];
					vC = this.vertices[ face.c ];

					cb.subVectors( vC, vB );
					ab.subVectors( vA, vB );
					cb.cross( ab );

					vertices[ face.a ].add( cb );
					vertices[ face.b ].add( cb );
					vertices[ face.c ].add( cb );

				} else if ( face instanceof THREE.Face4 ) {

					vA = this.vertices[ face.a ];
					vB = this.vertices[ face.b ];
					vC = this.vertices[ face.c ];
					vD = this.vertices[ face.d ];

					// abd

					db.subVectors( vD, vB );
					ab.subVectors( vA, vB );
					db.cross( ab );

					vertices[ face.a ].add( db );
					vertices[ face.b ].add( db );
					vertices[ face.d ].add( db );

					// bcd

					dc.subVectors( vD, vC );
					bc.subVectors( vB, vC );
					dc.cross( bc );

					vertices[ face.b ].add( dc );
					vertices[ face.c ].add( dc );
					vertices[ face.d ].add( dc );

				}

			}

		} else {

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				if ( face instanceof THREE.Face3 ) {

					vertices[ face.a ].add( face.normal );
					vertices[ face.b ].add( face.normal );
					vertices[ face.c ].add( face.normal );

				} else if ( face instanceof THREE.Face4 ) {

					vertices[ face.a ].add( face.normal );
					vertices[ face.b ].add( face.normal );
					vertices[ face.c ].add( face.normal );
					vertices[ face.d ].add( face.normal );

				}

			}

		}

		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

			vertices[ v ].normalize();

		}

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			if ( face instanceof THREE.Face3 ) {

				face.vertexNormals[ 0 ].copy( vertices[ face.a ] );
				face.vertexNormals[ 1 ].copy( vertices[ face.b ] );
				face.vertexNormals[ 2 ].copy( vertices[ face.c ] );

			} else if ( face instanceof THREE.Face4 ) {

				face.vertexNormals[ 0 ].copy( vertices[ face.a ] );
				face.vertexNormals[ 1 ].copy( vertices[ face.b ] );
				face.vertexNormals[ 2 ].copy( vertices[ face.c ] );
				face.vertexNormals[ 3 ].copy( vertices[ face.d ] );

			}

		}

	},

	computeMorphNormals: function () {

		var i, il, f, fl, face;

		// save original normals
		// - create temp variables on first access
		//   otherwise just copy (for faster repeated calls)

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			if ( ! face.__originalFaceNormal ) {

				face.__originalFaceNormal = face.normal.clone();

			} else {

				face.__originalFaceNormal.copy( face.normal );

			}

			if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];

			for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {

				if ( ! face.__originalVertexNormals[ i ] ) {

					face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();

				} else {

					face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );

				}

			}

		}

		// use temp geometry to compute face and vertex normals for each morph

		var tmpGeo = new THREE.Geometry();
		tmpGeo.faces = this.faces;

		for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {

			// create on first access

			if ( ! this.morphNormals[ i ] ) {

				this.morphNormals[ i ] = {};
				this.morphNormals[ i ].faceNormals = [];
				this.morphNormals[ i ].vertexNormals = [];

				var dstNormalsFace = this.morphNormals[ i ].faceNormals;
				var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;

				var faceNormal, vertexNormals;

				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

					face = this.faces[ f ];

					faceNormal = new THREE.Vector3();

					if ( face instanceof THREE.Face3 ) {

						vertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };

					} else {

						vertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3(), d: new THREE.Vector3() };

					}

					dstNormalsFace.push( faceNormal );
					dstNormalsVertex.push( vertexNormals );

				}

			}

			var morphNormals = this.morphNormals[ i ];

			// set vertices to morph target

			tmpGeo.vertices = this.morphTargets[ i ].vertices;

			// compute morph normals

			tmpGeo.computeFaceNormals();
			tmpGeo.computeVertexNormals();

			// store morph normals

			var faceNormal, vertexNormals;

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				faceNormal = morphNormals.faceNormals[ f ];
				vertexNormals = morphNormals.vertexNormals[ f ];

				faceNormal.copy( face.normal );

				if ( face instanceof THREE.Face3 ) {

					vertexNormals.a.copy( face.vertexNormals[ 0 ] );
					vertexNormals.b.copy( face.vertexNormals[ 1 ] );
					vertexNormals.c.copy( face.vertexNormals[ 2 ] );

				} else {

					vertexNormals.a.copy( face.vertexNormals[ 0 ] );
					vertexNormals.b.copy( face.vertexNormals[ 1 ] );
					vertexNormals.c.copy( face.vertexNormals[ 2 ] );
					vertexNormals.d.copy( face.vertexNormals[ 3 ] );

				}

			}

		}

		// restore original normals

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			face.normal = face.__originalFaceNormal;
			face.vertexNormals = face.__originalVertexNormals;

		}

	},

	computeTangents: function () {

		// based on http://www.terathon.com/code/tangent.html
		// tangents go to vertices

		var f, fl, v, vl, i, il, vertexIndex,
			face, uv, vA, vB, vC, uvA, uvB, uvC,
			x1, x2, y1, y2, z1, z2,
			s1, s2, t1, t2, r, t, test,
			tan1 = [], tan2 = [],
			sdir = new THREE.Vector3(), tdir = new THREE.Vector3(),
			tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),
			n = new THREE.Vector3(), w;

		for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

			tan1[ v ] = new THREE.Vector3();
			tan2[ v ] = new THREE.Vector3();

		}

		function handleTriangle( context, a, b, c, ua, ub, uc ) {

			vA = context.vertices[ a ];
			vB = context.vertices[ b ];
			vC = context.vertices[ c ];

			uvA = uv[ ua ];
			uvB = uv[ ub ];
			uvC = uv[ uc ];

			x1 = vB.x - vA.x;
			x2 = vC.x - vA.x;
			y1 = vB.y - vA.y;
			y2 = vC.y - vA.y;
			z1 = vB.z - vA.z;
			z2 = vC.z - vA.z;

			s1 = uvB.x - uvA.x;
			s2 = uvC.x - uvA.x;
			t1 = uvB.y - uvA.y;
			t2 = uvC.y - uvA.y;

			r = 1.0 / ( s1 * t2 - s2 * t1 );
			sdir.set( ( t2 * x1 - t1 * x2 ) * r,
					  ( t2 * y1 - t1 * y2 ) * r,
					  ( t2 * z1 - t1 * z2 ) * r );
			tdir.set( ( s1 * x2 - s2 * x1 ) * r,
					  ( s1 * y2 - s2 * y1 ) * r,
					  ( s1 * z2 - s2 * z1 ) * r );

			tan1[ a ].add( sdir );
			tan1[ b ].add( sdir );
			tan1[ c ].add( sdir );

			tan2[ a ].add( tdir );
			tan2[ b ].add( tdir );
			tan2[ c ].add( tdir );

		}

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];
			uv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents

			if ( face instanceof THREE.Face3 ) {

				handleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );

			} else if ( face instanceof THREE.Face4 ) {

				handleTriangle( this, face.a, face.b, face.d, 0, 1, 3 );
				handleTriangle( this, face.b, face.c, face.d, 1, 2, 3 );

			}

		}

		var faceIndex = [ 'a', 'b', 'c', 'd' ];

		for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

			face = this.faces[ f ];

			for ( i = 0; i < face.vertexNormals.length; i++ ) {

				n.copy( face.vertexNormals[ i ] );

				vertexIndex = face[ faceIndex[ i ] ];

				t = tan1[ vertexIndex ];

				// Gram-Schmidt orthogonalize

				tmp.copy( t );
				tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();

				// Calculate handedness

				tmp2.crossVectors( face.vertexNormals[ i ], t );
				test = tmp2.dot( tan2[ vertexIndex ] );
				w = (test < 0.0) ? -1.0 : 1.0;

				face.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );

			}

		}

		this.hasTangents = true;

	},

	computeLineDistances: function ( ) {

		var d = 0;
		var vertices = this.vertices;

		for ( var i = 0, il = vertices.length; i < il; i ++ ) {

			if ( i > 0 ) {

				d += vertices[ i ].distanceTo( vertices[ i - 1 ] );

			}

			this.lineDistances[ i ] = d;

		}

	},

	computeBoundingBox: function () {

		if ( this.boundingBox === null ) {

			this.boundingBox = new THREE.Box3();

		}

		this.boundingBox.setFromPoints( this.vertices );

	},

	computeBoundingSphere: function () {

		if ( this.boundingSphere === null ) {

			this.boundingSphere = new THREE.Sphere();

		}

		this.boundingSphere.setFromCenterAndPoints( this.boundingSphere.center, this.vertices );

	},

	/*
	 * Checks for duplicate vertices with hashmap.
	 * Duplicated vertices are removed
	 * and faces' vertices are updated.
	 */

	mergeVertices: function () {

		var verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)
		var unique = [], changes = [];

		var v, key;
		var precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001
		var precision = Math.pow( 10, precisionPoints );
		var i,il, face;
		var indices, k, j, jl, u;

		// reset cache of vertices as it now will be changing.
		this.__tmpVertices = undefined;

		for ( i = 0, il = this.vertices.length; i < il; i ++ ) {

			v = this.vertices[ i ];
			key = [ Math.round( v.x * precision ), Math.round( v.y * precision ), Math.round( v.z * precision ) ].join( '_' );

			if ( verticesMap[ key ] === undefined ) {

				verticesMap[ key ] = i;
				unique.push( this.vertices[ i ] );
				changes[ i ] = unique.length - 1;

			} else {

				//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
				changes[ i ] = changes[ verticesMap[ key ] ];

			}

		};


		// if faces are completely degenerate after merging vertices, we
		// have to remove them from the geometry.
		var faceIndicesToRemove = [];

		for( i = 0, il = this.faces.length; i < il; i ++ ) {

			face = this.faces[ i ];

			if ( face instanceof THREE.Face3 ) {

				face.a = changes[ face.a ];
				face.b = changes[ face.b ];
				face.c = changes[ face.c ];

				indices = [ face.a, face.b, face.c ];

				var dupIndex = -1;

				// if any duplicate vertices are found in a Face3
				// we have to remove the face as nothing can be saved
				for ( var n = 0; n < 3; n ++ ) {
					if ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {

						dupIndex = n;
						faceIndicesToRemove.push( i );
						break;

					}
				}

			} else if ( face instanceof THREE.Face4 ) {

				face.a = changes[ face.a ];
				face.b = changes[ face.b ];
				face.c = changes[ face.c ];
				face.d = changes[ face.d ];

				// check dups in (a, b, c, d) and convert to -> face3

				indices = [ face.a, face.b, face.c, face.d ];

				var dupIndex = -1;

				for ( var n = 0; n < 4; n ++ ) {

					if ( indices[ n ] == indices[ ( n + 1 ) % 4 ] ) {

						// if more than one duplicated vertex is found
						// we can't generate any valid Face3's, thus
						// we need to remove this face complete.
						if ( dupIndex >= 0 ) {

							faceIndicesToRemove.push( i );

						}

						dupIndex = n;

					}
				}

				if ( dupIndex >= 0 ) {

					indices.splice( dupIndex, 1 );

					var newFace = new THREE.Face3( indices[0], indices[1], indices[2], face.normal, face.color, face.materialIndex );

					for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {

						u = this.faceVertexUvs[ j ][ i ];

						if ( u ) {
							u.splice( dupIndex, 1 );
						}

					}

					if( face.vertexNormals && face.vertexNormals.length > 0) {

						newFace.vertexNormals = face.vertexNormals;
						newFace.vertexNormals.splice( dupIndex, 1 );

					}

					if( face.vertexColors && face.vertexColors.length > 0 ) {

						newFace.vertexColors = face.vertexColors;
						newFace.vertexColors.splice( dupIndex, 1 );
					}

					this.faces[ i ] = newFace;
				}

			}

		}

		for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {

			this.faces.splice( i, 1 );

			for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {

				this.faceVertexUvs[ j ].splice( i, 1 );

			}

		}

		// Use unique set of vertices

		var diff = this.vertices.length - unique.length;
		this.vertices = unique;
		return diff;

	},

	clone: function () {

		var geometry = new THREE.Geometry();

		var vertices = this.vertices;

		for ( var i = 0, il = vertices.length; i < il; i ++ ) {

			geometry.vertices.push( vertices[ i ].clone() );

		}

		var faces = this.faces;

		for ( var i = 0, il = faces.length; i < il; i ++ ) {

			geometry.faces.push( faces[ i ].clone() );

		}

		var uvs = this.faceVertexUvs[ 0 ];

		for ( var i = 0, il = uvs.length; i < il; i ++ ) {

			var uv = uvs[ i ], uvCopy = [];

			for ( var j = 0, jl = uv.length; j < jl; j ++ ) {

				uvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );

			}

			geometry.faceVertexUvs[ 0 ].push( uvCopy );

		}

		return geometry;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

};

THREE.GeometryIdCount = 0;
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.BufferGeometry = function () {

	THREE.EventDispatcher.call( this );

	this.id = THREE.GeometryIdCount ++;

	// attributes

	this.attributes = {};

	// attributes typed arrays are kept only if dynamic flag is set

	this.dynamic = false;

	// offsets for chunks when using indexed elements

	this.offsets = [];

	// boundings

	this.boundingBox = null;
	this.boundingSphere = null;

	this.hasTangents = false;

	// for compatibility

	this.morphTargets = [];

};

THREE.BufferGeometry.prototype = {

	constructor : THREE.BufferGeometry,

	applyMatrix: function ( matrix ) {

		var positionArray;
		var normalArray;

		if ( this.attributes[ "position" ] ) positionArray = this.attributes[ "position" ].array;
		if ( this.attributes[ "normal" ] ) normalArray = this.attributes[ "normal" ].array;

		if ( positionArray !== undefined ) {

			matrix.multiplyVector3Array( positionArray );
			this.verticesNeedUpdate = true;

		}

		if ( normalArray !== undefined ) {

			var normalMatrix = new THREE.Matrix3();
			normalMatrix.getInverse( matrix ).transpose();

			normalMatrix.multiplyVector3Array( normalArray );

			this.normalizeNormals();

			this.normalsNeedUpdate = true;

		}

	},

	computeBoundingBox: function () {

		if ( this.boundingBox === null ) {

			this.boundingBox = new THREE.Box3();

		}

		var positions = this.attributes[ "position" ].array;

		if ( positions ) {

			var bb = this.boundingBox;
			var x, y, z;

			if( positions.length >= 3 ) {
				bb.min.x = bb.max.x = positions[ 0 ];
				bb.min.y = bb.max.y = positions[ 1 ];
				bb.min.z = bb.max.z = positions[ 2 ];
			}

			for ( var i = 3, il = positions.length; i < il; i += 3 ) {

				x = positions[ i ];
				y = positions[ i + 1 ];
				z = positions[ i + 2 ];

				// bounding box

				if ( x < bb.min.x ) {

					bb.min.x = x;

				} else if ( x > bb.max.x ) {

					bb.max.x = x;

				}

				if ( y < bb.min.y ) {

					bb.min.y = y;

				} else if ( y > bb.max.y ) {

					bb.max.y = y;

				}

				if ( z < bb.min.z ) {

					bb.min.z = z;

				} else if ( z > bb.max.z ) {

					bb.max.z = z;

				}

			}

		}

		if ( positions === undefined || positions.length === 0 ) {

			this.boundingBox.min.set( 0, 0, 0 );
			this.boundingBox.max.set( 0, 0, 0 );

		}

	},

	computeBoundingSphere: function () {

		if ( this.boundingSphere === null ) {

			this.boundingSphere = new THREE.Sphere();

		}

		var positions = this.attributes[ "position" ].array;

		if ( positions ) {

			var radiusSq, maxRadiusSq = 0;
			var x, y, z;

			for ( var i = 0, il = positions.length; i < il; i += 3 ) {

				x = positions[ i ];
				y = positions[ i + 1 ];
				z = positions[ i + 2 ];

				radiusSq =  x * x + y * y + z * z;
				if ( radiusSq > maxRadiusSq ) maxRadiusSq = radiusSq;

			}

			this.boundingSphere.radius = Math.sqrt( maxRadiusSq );

		}

	},

	computeVertexNormals: function () {

		if ( this.attributes[ "position" ] ) {

			var i, il;
			var j, jl;

			var nVertexElements = this.attributes[ "position" ].array.length;

			if ( this.attributes[ "normal" ] === undefined ) {

				this.attributes[ "normal" ] = {

					itemSize: 3,
					array: new Float32Array( nVertexElements ),
					numItems: nVertexElements

				};

			} else {

				// reset existing normals to zero

				for ( i = 0, il = this.attributes[ "normal" ].array.length; i < il; i ++ ) {

					this.attributes[ "normal" ].array[ i ] = 0;

				}

			}

			var positions = this.attributes[ "position" ].array;
			var normals = this.attributes[ "normal" ].array;

			var vA, vB, vC, x, y, z,

			pA = new THREE.Vector3(),
			pB = new THREE.Vector3(),
			pC = new THREE.Vector3(),

			cb = new THREE.Vector3(),
			ab = new THREE.Vector3();

			// indexed elements

			if ( this.attributes[ "index" ] ) {

				var indices = this.attributes[ "index" ].array;

				var offsets = this.offsets;

				for ( j = 0, jl = offsets.length; j < jl; ++ j ) {

					var start = offsets[ j ].start;
					var count = offsets[ j ].count;
					var index = offsets[ j ].index;

					for ( i = start, il = start + count; i < il; i += 3 ) {

						vA = index + indices[ i ];
						vB = index + indices[ i + 1 ];
						vC = index + indices[ i + 2 ];

						x = positions[ vA * 3 ];
						y = positions[ vA * 3 + 1 ];
						z = positions[ vA * 3 + 2 ];
						pA.set( x, y, z );

						x = positions[ vB * 3 ];
						y = positions[ vB * 3 + 1 ];
						z = positions[ vB * 3 + 2 ];
						pB.set( x, y, z );

						x = positions[ vC * 3 ];
						y = positions[ vC * 3 + 1 ];
						z = positions[ vC * 3 + 2 ];
						pC.set( x, y, z );

						cb.subVectors( pC, pB );
						ab.subVectors( pA, pB );
						cb.cross( ab );

						normals[ vA * 3 ]     += cb.x;
						normals[ vA * 3 + 1 ] += cb.y;
						normals[ vA * 3 + 2 ] += cb.z;

						normals[ vB * 3 ]     += cb.x;
						normals[ vB * 3 + 1 ] += cb.y;
						normals[ vB * 3 + 2 ] += cb.z;

						normals[ vC * 3 ]     += cb.x;
						normals[ vC * 3 + 1 ] += cb.y;
						normals[ vC * 3 + 2 ] += cb.z;

					}

				}

			// non-indexed elements (unconnected triangle soup)

			} else {

				for ( i = 0, il = positions.length; i < il; i += 9 ) {

					x = positions[ i ];
					y = positions[ i + 1 ];
					z = positions[ i + 2 ];
					pA.set( x, y, z );

					x = positions[ i + 3 ];
					y = positions[ i + 4 ];
					z = positions[ i + 5 ];
					pB.set( x, y, z );

					x = positions[ i + 6 ];
					y = positions[ i + 7 ];
					z = positions[ i + 8 ];
					pC.set( x, y, z );

					cb.subVectors( pC, pB );
					ab.subVectors( pA, pB );
					cb.cross( ab );

					normals[ i ] 	 = cb.x;
					normals[ i + 1 ] = cb.y;
					normals[ i + 2 ] = cb.z;

					normals[ i + 3 ] = cb.x;
					normals[ i + 4 ] = cb.y;
					normals[ i + 5 ] = cb.z;

					normals[ i + 6 ] = cb.x;
					normals[ i + 7 ] = cb.y;
					normals[ i + 8 ] = cb.z;

				}

			}

			this.normalizeNormals();

			this.normalsNeedUpdate = true;

		}

	},

	normalizeNormals: function () {

		var normals = this.attributes[ "normal" ].array;

		var x, y, z, n;

		for ( var i = 0, il = normals.length; i < il; i += 3 ) {

			x = normals[ i ];
			y = normals[ i + 1 ];
			z = normals[ i + 2 ];

			n = 1.0 / Math.sqrt( x * x + y * y + z * z );

			normals[ i ] 	 *= n;
			normals[ i + 1 ] *= n;
			normals[ i + 2 ] *= n;

		}

	},

	computeTangents: function () {

		// based on http://www.terathon.com/code/tangent.html
		// (per vertex tangents)

		if ( this.attributes[ "index" ] === undefined ||
			 this.attributes[ "position" ] === undefined ||
			 this.attributes[ "normal" ] === undefined ||
			 this.attributes[ "uv" ] === undefined ) {

			console.warn( "Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()" );
			return;

		}

		var indices = this.attributes[ "index" ].array;
		var positions = this.attributes[ "position" ].array;
		var normals = this.attributes[ "normal" ].array;
		var uvs = this.attributes[ "uv" ].array;

		var nVertices = positions.length / 3;

		if ( this.attributes[ "tangent" ] === undefined ) {

			var nTangentElements = 4 * nVertices;

			this.attributes[ "tangent" ] = {

				itemSize: 4,
				array: new Float32Array( nTangentElements ),
				numItems: nTangentElements

			};

		}

		var tangents = this.attributes[ "tangent" ].array;

		var tan1 = [], tan2 = [];

		for ( var k = 0; k < nVertices; k ++ ) {

			tan1[ k ] = new THREE.Vector3();
			tan2[ k ] = new THREE.Vector3();

		}

		var xA, yA, zA,
			xB, yB, zB,
			xC, yC, zC,

			uA, vA,
			uB, vB,
			uC, vC,

			x1, x2, y1, y2, z1, z2,
			s1, s2, t1, t2, r;

		var sdir = new THREE.Vector3(), tdir = new THREE.Vector3();

		function handleTriangle( a, b, c ) {

			xA = positions[ a * 3 ];
			yA = positions[ a * 3 + 1 ];
			zA = positions[ a * 3 + 2 ];

			xB = positions[ b * 3 ];
			yB = positions[ b * 3 + 1 ];
			zB = positions[ b * 3 + 2 ];

			xC = positions[ c * 3 ];
			yC = positions[ c * 3 + 1 ];
			zC = positions[ c * 3 + 2 ];

			uA = uvs[ a * 2 ];
			vA = uvs[ a * 2 + 1 ];

			uB = uvs[ b * 2 ];
			vB = uvs[ b * 2 + 1 ];

			uC = uvs[ c * 2 ];
			vC = uvs[ c * 2 + 1 ];

			x1 = xB - xA;
			x2 = xC - xA;

			y1 = yB - yA;
			y2 = yC - yA;

			z1 = zB - zA;
			z2 = zC - zA;

			s1 = uB - uA;
			s2 = uC - uA;

			t1 = vB - vA;
			t2 = vC - vA;

			r = 1.0 / ( s1 * t2 - s2 * t1 );

			sdir.set(
				( t2 * x1 - t1 * x2 ) * r,
				( t2 * y1 - t1 * y2 ) * r,
				( t2 * z1 - t1 * z2 ) * r
			);

			tdir.set(
				( s1 * x2 - s2 * x1 ) * r,
				( s1 * y2 - s2 * y1 ) * r,
				( s1 * z2 - s2 * z1 ) * r
			);

			tan1[ a ].add( sdir );
			tan1[ b ].add( sdir );
			tan1[ c ].add( sdir );

			tan2[ a ].add( tdir );
			tan2[ b ].add( tdir );
			tan2[ c ].add( tdir );

		}

		var i, il;
		var j, jl;
		var iA, iB, iC;

		var offsets = this.offsets;

		for ( j = 0, jl = offsets.length; j < jl; ++ j ) {

			var start = offsets[ j ].start;
			var count = offsets[ j ].count;
			var index = offsets[ j ].index;

			for ( i = start, il = start + count; i < il; i += 3 ) {

				iA = index + indices[ i ];
				iB = index + indices[ i + 1 ];
				iC = index + indices[ i + 2 ];

				handleTriangle( iA, iB, iC );

			}

		}

		var tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();
		var n = new THREE.Vector3(), n2 = new THREE.Vector3();
		var w, t, test;

		function handleVertex( v ) {

			n.x = normals[ v * 3 ];
			n.y = normals[ v * 3 + 1 ];
			n.z = normals[ v * 3 + 2 ];

			n2.copy( n );

			t = tan1[ v ];

			// Gram-Schmidt orthogonalize

			tmp.copy( t );
			tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();

			// Calculate handedness

			tmp2.crossVectors( n2, t );
			test = tmp2.dot( tan2[ v ] );
			w = ( test < 0.0 ) ? -1.0 : 1.0;

			tangents[ v * 4 ] 	  = tmp.x;
			tangents[ v * 4 + 1 ] = tmp.y;
			tangents[ v * 4 + 2 ] = tmp.z;
			tangents[ v * 4 + 3 ] = w;

		}

		for ( j = 0, jl = offsets.length; j < jl; ++ j ) {

			var start = offsets[ j ].start;
			var count = offsets[ j ].count;
			var index = offsets[ j ].index;

			for ( i = start, il = start + count; i < il; i += 3 ) {

				iA = index + indices[ i ];
				iB = index + indices[ i + 1 ];
				iC = index + indices[ i + 2 ];

				handleVertex( iA );
				handleVertex( iB );
				handleVertex( iC );

			}

		}

		this.hasTangents = true;
		this.tangentsNeedUpdate = true;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

};

/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author WestLangley / http://github.com/WestLangley
*/

THREE.Camera = function () {

	THREE.Object3D.call( this );

	this.matrixWorldInverse = new THREE.Matrix4();

	this.projectionMatrix = new THREE.Matrix4();
	this.projectionMatrixInverse = new THREE.Matrix4();

};

THREE.Camera.prototype = Object.create( THREE.Object3D.prototype );

THREE.Camera.prototype.lookAt = function () {

	// This routine does not support cameras with rotated and/or translated parent(s)

	var m1 = new THREE.Matrix4();

	return function ( vector ) {

		m1.lookAt( this.position, vector, this.up );

		if ( this.useQuaternion === true )  {

			this.quaternion.setFromRotationMatrix( m1 );

		} else {

			this.rotation.setEulerFromRotationMatrix( m1, this.eulerOrder );

		}

	};

}();
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {

	THREE.Camera.call( this );

	this.left = left;
	this.right = right;
	this.top = top;
	this.bottom = bottom;

	this.near = ( near !== undefined ) ? near : 0.1;
	this.far = ( far !== undefined ) ? far : 2000;

	this.updateProjectionMatrix();

};

THREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );

THREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {

	this.projectionMatrix.makeOrthographic( this.left, this.right, this.top, this.bottom, this.near, this.far );

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author greggman / http://games.greggman.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */

THREE.PerspectiveCamera = function ( fov, aspect, near, far ) {

	THREE.Camera.call( this );

	this.fov = fov !== undefined ? fov : 50;
	this.aspect = aspect !== undefined ? aspect : 1;
	this.near = near !== undefined ? near : 0.1;
	this.far = far !== undefined ? far : 2000;

	this.updateProjectionMatrix();

};

THREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );


/**
 * Uses Focal Length (in mm) to estimate and set FOV
 * 35mm (fullframe) camera is used if frame size is not specified;
 * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html
 */

THREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {

	if ( frameHeight === undefined ) frameHeight = 24;

	this.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );
	this.updateProjectionMatrix();

}


/**
 * Sets an offset in a larger frustum. This is useful for multi-window or
 * multi-monitor/multi-machine setups.
 *
 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
 * the monitors are in grid like this
 *
 *   +---+---+---+
 *   | A | B | C |
 *   +---+---+---+
 *   | D | E | F |
 *   +---+---+---+
 *
 * then for each monitor you would call it like this
 *
 *   var w = 1920;
 *   var h = 1080;
 *   var fullWidth = w * 3;
 *   var fullHeight = h * 2;
 *
 *   --A--
 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
 *   --B--
 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
 *   --C--
 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
 *   --D--
 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
 *   --E--
 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
 *   --F--
 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
 *
 *   Note there is no reason monitors have to be the same size or in a grid.
 */

THREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {

	this.fullWidth = fullWidth;
	this.fullHeight = fullHeight;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;

	this.updateProjectionMatrix();

};


THREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {

	if ( this.fullWidth ) {

		var aspect = this.fullWidth / this.fullHeight;
		var top = Math.tan( THREE.Math.degToRad( this.fov * 0.5 ) ) * this.near;
		var bottom = -top;
		var left = aspect * bottom;
		var right = aspect * top;
		var width = Math.abs( right - left );
		var height = Math.abs( top - bottom );

		this.projectionMatrix.makeFrustum(
			left + this.x * width / this.fullWidth,
			left + ( this.x + this.width ) * width / this.fullWidth,
			top - ( this.y + this.height ) * height / this.fullHeight,
			top - this.y * height / this.fullHeight,
			this.near,
			this.far
		);

	} else {

		this.projectionMatrix.makePerspective( this.fov, this.aspect, this.near, this.far );

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
 
THREE.Light = function ( hex ) {

	THREE.Object3D.call( this );

	this.color = new THREE.Color( hex );

};

THREE.Light.prototype = Object.create( THREE.Object3D.prototype );

THREE.Light.prototype.clone = function ( light ) {

	if ( light === undefined ) light = new THREE.Light();

	THREE.Object3D.prototype.clone.call( this, light );

	light.color.copy( this.color );

	return light;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.AmbientLight = function ( hex ) {

	THREE.Light.call( this, hex );

};

THREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );

THREE.AmbientLight.prototype.clone = function () {

	var light = new THREE.AmbientLight();

	THREE.Light.prototype.clone.call( this, light );

	return light;

};
/**
 * @author MPanknin / http://www.redplant.de/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.AreaLight = function ( hex, intensity ) {

	THREE.Light.call( this, hex );

	this.normal = new THREE.Vector3( 0, -1, 0 );
	this.right = new THREE.Vector3( 1, 0, 0 );

	this.intensity = ( intensity !== undefined ) ? intensity : 1;

	this.width = 1.0;
	this.height = 1.0;

	this.constantAttenuation = 1.5;
	this.linearAttenuation = 0.5;
	this.quadraticAttenuation = 0.1;

};

THREE.AreaLight.prototype = Object.create( THREE.Light.prototype );

/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.DirectionalLight = function ( hex, intensity ) {

	THREE.Light.call( this, hex );

	this.position.set( 0, 1, 0 );
	this.target = new THREE.Object3D();

	this.intensity = ( intensity !== undefined ) ? intensity : 1;

	this.castShadow = false;
	this.onlyShadow = false;

	//

	this.shadowCameraNear = 50;
	this.shadowCameraFar = 5000;

	this.shadowCameraLeft = -500;
	this.shadowCameraRight = 500;
	this.shadowCameraTop = 500;
	this.shadowCameraBottom = -500;

	this.shadowCameraVisible = false;

	this.shadowBias = 0;
	this.shadowDarkness = 0.5;

	this.shadowMapWidth = 512;
	this.shadowMapHeight = 512;

	//

	this.shadowCascade = false;

	this.shadowCascadeOffset = new THREE.Vector3( 0, 0, -1000 );
	this.shadowCascadeCount = 2;

	this.shadowCascadeBias = [ 0, 0, 0 ];
	this.shadowCascadeWidth = [ 512, 512, 512 ];
	this.shadowCascadeHeight = [ 512, 512, 512 ];

	this.shadowCascadeNearZ = [ -1.000, 0.990, 0.998 ];
	this.shadowCascadeFarZ  = [  0.990, 0.998, 1.000 ];

	this.shadowCascadeArray = [];

	//

	this.shadowMap = null;
	this.shadowMapSize = null;
	this.shadowCamera = null;
	this.shadowMatrix = null;

};

THREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );

THREE.DirectionalLight.prototype.clone = function () {

	var light = new THREE.DirectionalLight();

	THREE.Light.prototype.clone.call( this, light );

	light.target = this.target.clone();

	light.intensity = this.intensity;

	light.castShadow = this.castShadow;
	light.onlyShadow = this.onlyShadow;

	return light;

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.HemisphereLight = function ( skyColorHex, groundColorHex, intensity ) {

	THREE.Light.call( this, skyColorHex );

	this.position.set( 0, 100, 0 );

	this.groundColor = new THREE.Color( groundColorHex );
	this.intensity = ( intensity !== undefined ) ? intensity : 1;

};

THREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );

THREE.HemisphereLight.prototype.clone = function () {

	var light = new THREE.PointLight();

	THREE.Light.prototype.clone.call( this, light );

	light.groundColor.copy( this.groundColor );
	light.intensity = this.intensity;

	return light;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.PointLight = function ( hex, intensity, distance ) {

	THREE.Light.call( this, hex );

	this.intensity = ( intensity !== undefined ) ? intensity : 1;
	this.distance = ( distance !== undefined ) ? distance : 0;

};

THREE.PointLight.prototype = Object.create( THREE.Light.prototype );

THREE.PointLight.prototype.clone = function () {

	var light = new THREE.PointLight();

	THREE.Light.prototype.clone.call( this, light );

	light.intensity = this.intensity;
	light.distance = this.distance;

	return light;

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.SpotLight = function ( hex, intensity, distance, angle, exponent ) {

	THREE.Light.call( this, hex );

	this.position.set( 0, 1, 0 );
	this.target = new THREE.Object3D();

	this.intensity = ( intensity !== undefined ) ? intensity : 1;
	this.distance = ( distance !== undefined ) ? distance : 0;
	this.angle = ( angle !== undefined ) ? angle : Math.PI / 2;
	this.exponent = ( exponent !== undefined ) ? exponent : 10;

	this.castShadow = false;
	this.onlyShadow = false;

	//

	this.shadowCameraNear = 50;
	this.shadowCameraFar = 5000;
	this.shadowCameraFov = 50;

	this.shadowCameraVisible = false;

	this.shadowBias = 0;
	this.shadowDarkness = 0.5;

	this.shadowMapWidth = 512;
	this.shadowMapHeight = 512;

	//

	this.shadowMap = null;
	this.shadowMapSize = null;
	this.shadowCamera = null;
	this.shadowMatrix = null;

};

THREE.SpotLight.prototype = Object.create( THREE.Light.prototype );

THREE.SpotLight.prototype.clone = function () {

	var light = new THREE.SpotLight();

	THREE.Light.prototype.clone.call( this, light );

	light.target = this.target.clone();

	light.intensity = this.intensity;
	light.distance = this.distance;
	light.angle = this.angle;
	light.exponent = this.exponent;

	light.castShadow = this.castShadow;
	light.onlyShadow = this.onlyShadow;

	return light;

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Loader = function ( showStatus ) {

	this.showStatus = showStatus;
	this.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;

	this.onLoadStart = function () {};
	this.onLoadProgress = function () {};
	this.onLoadComplete = function () {};

};

THREE.Loader.prototype = {

	constructor: THREE.Loader,

	crossOrigin: 'anonymous',

	addStatusElement: function () {

		var e = document.createElement( "div" );

		e.style.position = "absolute";
		e.style.right = "0px";
		e.style.top = "0px";
		e.style.fontSize = "0.8em";
		e.style.textAlign = "left";
		e.style.background = "rgba(0,0,0,0.25)";
		e.style.color = "#fff";
		e.style.width = "120px";
		e.style.padding = "0.5em 0.5em 0.5em 0.5em";
		e.style.zIndex = 1000;

		e.innerHTML = "Loading ...";

		return e;

	},

	updateProgress: function ( progress ) {

		var message = "Loaded ";

		if ( progress.total ) {

			message += ( 100 * progress.loaded / progress.total ).toFixed(0) + "%";


		} else {

			message += ( progress.loaded / 1000 ).toFixed(2) + " KB";

		}

		this.statusDomElement.innerHTML = message;

	},

	extractUrlBase: function ( url ) {

		var parts = url.split( '/' );
		parts.pop();
		return ( parts.length < 1 ? '.' : parts.join( '/' ) ) + '/';

	},

	initMaterials: function ( materials, texturePath ) {

		var array = [];

		for ( var i = 0; i < materials.length; ++ i ) {

			array[ i ] = THREE.Loader.prototype.createMaterial( materials[ i ], texturePath );

		}

		return array;

	},

	needsTangents: function ( materials ) {

		for( var i = 0, il = materials.length; i < il; i ++ ) {

			var m = materials[ i ];

			if ( m instanceof THREE.ShaderMaterial ) return true;

		}

		return false;

	},

	createMaterial: function ( m, texturePath ) {

		var _this = this;

		function is_pow2( n ) {

			var l = Math.log( n ) / Math.LN2;
			return Math.floor( l ) == l;

		}

		function nearest_pow2( n ) {

			var l = Math.log( n ) / Math.LN2;
			return Math.pow( 2, Math.round(  l ) );

		}

		function load_image( where, url ) {

			var image = new Image();

			image.onload = function () {

				if ( !is_pow2( this.width ) || !is_pow2( this.height ) ) {

					var width = nearest_pow2( this.width );
					var height = nearest_pow2( this.height );

					where.image.width = width;
					where.image.height = height;
					where.image.getContext( '2d' ).drawImage( this, 0, 0, width, height );

				} else {

					where.image = this;

				}

				where.needsUpdate = true;

			};

			image.crossOrigin = _this.crossOrigin;
			image.src = url;

		}

		function create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {

			var isCompressed = /\.dds$/i.test( sourceFile );
			var fullPath = texturePath + "/" + sourceFile;

			if ( isCompressed ) {

				var texture = THREE.ImageUtils.loadCompressedTexture( fullPath );

				where[ name ] = texture;

			} else {

				var texture = document.createElement( 'canvas' );

				where[ name ] = new THREE.Texture( texture );

			}

			where[ name ].sourceFile = sourceFile;

			if( repeat ) {

				where[ name ].repeat.set( repeat[ 0 ], repeat[ 1 ] );

				if ( repeat[ 0 ] !== 1 ) where[ name ].wrapS = THREE.RepeatWrapping;
				if ( repeat[ 1 ] !== 1 ) where[ name ].wrapT = THREE.RepeatWrapping;

			}

			if ( offset ) {

				where[ name ].offset.set( offset[ 0 ], offset[ 1 ] );

			}

			if ( wrap ) {

				var wrapMap = {
					"repeat": THREE.RepeatWrapping,
					"mirror": THREE.MirroredRepeatWrapping
				}

				if ( wrapMap[ wrap[ 0 ] ] !== undefined ) where[ name ].wrapS = wrapMap[ wrap[ 0 ] ];
				if ( wrapMap[ wrap[ 1 ] ] !== undefined ) where[ name ].wrapT = wrapMap[ wrap[ 1 ] ];

			}

			if ( anisotropy ) {

				where[ name ].anisotropy = anisotropy;

			}

			if ( ! isCompressed ) {

				load_image( where[ name ], fullPath );

			}

		}

		function rgb2hex( rgb ) {

			return ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;

		}

		// defaults

		var mtype = "MeshLambertMaterial";
		var mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };

		// parameters from model file

		if ( m.shading ) {

			var shading = m.shading.toLowerCase();

			if ( shading === "phong" ) mtype = "MeshPhongMaterial";
			else if ( shading === "basic" ) mtype = "MeshBasicMaterial";

		}

		if ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {

			mpars.blending = THREE[ m.blending ];

		}

		if ( m.transparent !== undefined || m.opacity < 1.0 ) {

			mpars.transparent = m.transparent;

		}

		if ( m.depthTest !== undefined ) {

			mpars.depthTest = m.depthTest;

		}

		if ( m.depthWrite !== undefined ) {

			mpars.depthWrite = m.depthWrite;

		}

		if ( m.visible !== undefined ) {

			mpars.visible = m.visible;

		}

		if ( m.flipSided !== undefined ) {

			mpars.side = THREE.BackSide;

		}

		if ( m.doubleSided !== undefined ) {

			mpars.side = THREE.DoubleSide;

		}

		if ( m.wireframe !== undefined ) {

			mpars.wireframe = m.wireframe;

		}

		if ( m.vertexColors !== undefined ) {

			if ( m.vertexColors === "face" ) {

				mpars.vertexColors = THREE.FaceColors;

			} else if ( m.vertexColors ) {

				mpars.vertexColors = THREE.VertexColors;

			}

		}

		// colors

		if ( m.colorDiffuse ) {

			mpars.color = rgb2hex( m.colorDiffuse );

		} else if ( m.DbgColor ) {

			mpars.color = m.DbgColor;

		}

		if ( m.colorSpecular ) {

			mpars.specular = rgb2hex( m.colorSpecular );

		}

		if ( m.colorAmbient ) {

			mpars.ambient = rgb2hex( m.colorAmbient );

		}

		// modifiers

		if ( m.transparency ) {

			mpars.opacity = m.transparency;

		}

		if ( m.specularCoef ) {

			mpars.shininess = m.specularCoef;

		}

		// textures

		if ( m.mapDiffuse && texturePath ) {

			create_texture( mpars, "map", m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );

		}

		if ( m.mapLight && texturePath ) {

			create_texture( mpars, "lightMap", m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );

		}

		if ( m.mapBump && texturePath ) {

			create_texture( mpars, "bumpMap", m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );

		}

		if ( m.mapNormal && texturePath ) {

			create_texture( mpars, "normalMap", m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );

		}

		if ( m.mapSpecular && texturePath ) {

			create_texture( mpars, "specularMap", m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );

		}

		//

		if ( m.mapBumpScale ) {

			mpars.bumpScale = m.mapBumpScale;

		}

		// special case for normal mapped material

		if ( m.mapNormal ) {

			var shader = THREE.ShaderLib[ "normalmap" ];
			var uniforms = THREE.UniformsUtils.clone( shader.uniforms );

			uniforms[ "tNormal" ].value = mpars.normalMap;

			if ( m.mapNormalFactor ) {

				uniforms[ "uNormalScale" ].value.set( m.mapNormalFactor, m.mapNormalFactor );

			}

			if ( mpars.map ) {

				uniforms[ "tDiffuse" ].value = mpars.map;
				uniforms[ "enableDiffuse" ].value = true;

			}

			if ( mpars.specularMap ) {

				uniforms[ "tSpecular" ].value = mpars.specularMap;
				uniforms[ "enableSpecular" ].value = true;

			}

			if ( mpars.lightMap ) {

				uniforms[ "tAO" ].value = mpars.lightMap;
				uniforms[ "enableAO" ].value = true;

			}

			// for the moment don't handle displacement texture

			uniforms[ "uDiffuseColor" ].value.setHex( mpars.color );
			uniforms[ "uSpecularColor" ].value.setHex( mpars.specular );
			uniforms[ "uAmbientColor" ].value.setHex( mpars.ambient );

			uniforms[ "uShininess" ].value = mpars.shininess;

			if ( mpars.opacity !== undefined ) {

				uniforms[ "uOpacity" ].value = mpars.opacity;

			}

			var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };
			var material = new THREE.ShaderMaterial( parameters );

			if ( mpars.transparent ) {

				material.transparent = true;

			}

		} else {

			var material = new THREE[ mtype ]( mpars );

		}

		if ( m.DbgName !== undefined ) material.name = m.DbgName;

		return material;

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.ImageLoader = function () {

	THREE.EventDispatcher.call( this );

	this.crossOrigin = null;

};

THREE.ImageLoader.prototype = {

	constructor: THREE.ImageLoader,

	load: function ( url, image ) {

		var scope = this;

		if ( image === undefined ) image = new Image();

		image.addEventListener( 'load', function () {

			scope.dispatchEvent( { type: 'load', content: image } );

		}, false );

		image.addEventListener( 'error', function () {

			scope.dispatchEvent( { type: 'error', message: 'Couldn\'t load URL [' + url + ']' } );

		}, false );

		if ( scope.crossOrigin ) image.crossOrigin = scope.crossOrigin;

		image.src = url;

	}

}
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.JSONLoader = function ( showStatus ) {

	THREE.Loader.call( this, showStatus );

	this.withCredentials = false;

};

THREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );

THREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {

	var scope = this;

	// todo: unify load API to for easier SceneLoader use

	texturePath = texturePath && ( typeof texturePath === "string" ) ? texturePath : this.extractUrlBase( url );

	this.onLoadStart();
	this.loadAjaxJSON( this, url, callback, texturePath );

};

THREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {

	var xhr = new XMLHttpRequest();

	var length = 0;

	xhr.onreadystatechange = function () {

		if ( xhr.readyState === xhr.DONE ) {

			if ( xhr.status === 200 || xhr.status === 0 ) {

				if ( xhr.responseText ) {

					var json = JSON.parse( xhr.responseText );
					var result = context.parse( json, texturePath );
					callback( result.geometry, result.materials );

				} else {

					console.warn( "THREE.JSONLoader: [" + url + "] seems to be unreachable or file there is empty" );

				}

				// in context of more complex asset initialization
				// do not block on single failed file
				// maybe should go even one more level up

				context.onLoadComplete();

			} else {

				console.error( "THREE.JSONLoader: Couldn't load [" + url + "] [" + xhr.status + "]" );

			}

		} else if ( xhr.readyState === xhr.LOADING ) {

			if ( callbackProgress ) {

				if ( length === 0 ) {

					length = xhr.getResponseHeader( "Content-Length" );

				}

				callbackProgress( { total: length, loaded: xhr.responseText.length } );

			}

		} else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {

			length = xhr.getResponseHeader( "Content-Length" );

		}

	};

	xhr.open( "GET", url, true );
	xhr.withCredentials = this.withCredentials;
	xhr.send( null );

};

THREE.JSONLoader.prototype.parse = function ( json, texturePath ) {

	var scope = this,
	geometry = new THREE.Geometry(),
	scale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;

	parseModel( scale );

	parseSkin();
	parseMorphing( scale );

	geometry.computeCentroids();
	geometry.computeFaceNormals();

	function parseModel( scale ) {

		function isBitSet( value, position ) {

			return value & ( 1 << position );

		}

		var i, j, fi,

		offset, zLength, nVertices,

		colorIndex, normalIndex, uvIndex, materialIndex,

		type,
		isQuad,
		hasMaterial,
		hasFaceUv, hasFaceVertexUv,
		hasFaceNormal, hasFaceVertexNormal,
		hasFaceColor, hasFaceVertexColor,

		vertex, face, color, normal,

		uvLayer, uvs, u, v,

		faces = json.faces,
		vertices = json.vertices,
		normals = json.normals,
		colors = json.colors,

		nUvLayers = 0;

		// disregard empty arrays

		for ( i = 0; i < json.uvs.length; i++ ) {

			if ( json.uvs[ i ].length ) nUvLayers ++;

		}

		for ( i = 0; i < nUvLayers; i++ ) {

			geometry.faceUvs[ i ] = [];
			geometry.faceVertexUvs[ i ] = [];

		}

		offset = 0;
		zLength = vertices.length;

		while ( offset < zLength ) {

			vertex = new THREE.Vector3();

			vertex.x = vertices[ offset ++ ] * scale;
			vertex.y = vertices[ offset ++ ] * scale;
			vertex.z = vertices[ offset ++ ] * scale;

			geometry.vertices.push( vertex );

		}

		offset = 0;
		zLength = faces.length;

		while ( offset < zLength ) {

			type = faces[ offset ++ ];


			isQuad          	= isBitSet( type, 0 );
			hasMaterial         = isBitSet( type, 1 );
			hasFaceUv           = isBitSet( type, 2 );
			hasFaceVertexUv     = isBitSet( type, 3 );
			hasFaceNormal       = isBitSet( type, 4 );
			hasFaceVertexNormal = isBitSet( type, 5 );
			hasFaceColor	    = isBitSet( type, 6 );
			hasFaceVertexColor  = isBitSet( type, 7 );

			//console.log("type", type, "bits", isQuad, hasMaterial, hasFaceUv, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);

			if ( isQuad ) {

				face = new THREE.Face4();

				face.a = faces[ offset ++ ];
				face.b = faces[ offset ++ ];
				face.c = faces[ offset ++ ];
				face.d = faces[ offset ++ ];

				nVertices = 4;

			} else {

				face = new THREE.Face3();

				face.a = faces[ offset ++ ];
				face.b = faces[ offset ++ ];
				face.c = faces[ offset ++ ];

				nVertices = 3;

			}

			if ( hasMaterial ) {

				materialIndex = faces[ offset ++ ];
				face.materialIndex = materialIndex;

			}

			// to get face <=> uv index correspondence

			fi = geometry.faces.length;

			if ( hasFaceUv ) {

				for ( i = 0; i < nUvLayers; i++ ) {

					uvLayer = json.uvs[ i ];

					uvIndex = faces[ offset ++ ];

					u = uvLayer[ uvIndex * 2 ];
					v = uvLayer[ uvIndex * 2 + 1 ];

					geometry.faceUvs[ i ][ fi ] = new THREE.Vector2( u, v );

				}

			}

			if ( hasFaceVertexUv ) {

				for ( i = 0; i < nUvLayers; i++ ) {

					uvLayer = json.uvs[ i ];

					uvs = [];

					for ( j = 0; j < nVertices; j ++ ) {

						uvIndex = faces[ offset ++ ];

						u = uvLayer[ uvIndex * 2 ];
						v = uvLayer[ uvIndex * 2 + 1 ];

						uvs[ j ] = new THREE.Vector2( u, v );

					}

					geometry.faceVertexUvs[ i ][ fi ] = uvs;

				}

			}

			if ( hasFaceNormal ) {

				normalIndex = faces[ offset ++ ] * 3;

				normal = new THREE.Vector3();

				normal.x = normals[ normalIndex ++ ];
				normal.y = normals[ normalIndex ++ ];
				normal.z = normals[ normalIndex ];

				face.normal = normal;

			}

			if ( hasFaceVertexNormal ) {

				for ( i = 0; i < nVertices; i++ ) {

					normalIndex = faces[ offset ++ ] * 3;

					normal = new THREE.Vector3();

					normal.x = normals[ normalIndex ++ ];
					normal.y = normals[ normalIndex ++ ];
					normal.z = normals[ normalIndex ];

					face.vertexNormals.push( normal );

				}

			}


			if ( hasFaceColor ) {

				colorIndex = faces[ offset ++ ];

				color = new THREE.Color( colors[ colorIndex ] );
				face.color = color;

			}


			if ( hasFaceVertexColor ) {

				for ( i = 0; i < nVertices; i++ ) {

					colorIndex = faces[ offset ++ ];

					color = new THREE.Color( colors[ colorIndex ] );
					face.vertexColors.push( color );

				}

			}

			geometry.faces.push( face );

		}

	};

	function parseSkin() {

		var i, l, x, y, z, w, a, b, c, d;

		if ( json.skinWeights ) {

			for ( i = 0, l = json.skinWeights.length; i < l; i += 2 ) {

				x = json.skinWeights[ i     ];
				y = json.skinWeights[ i + 1 ];
				z = 0;
				w = 0;

				geometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );

			}

		}

		if ( json.skinIndices ) {

			for ( i = 0, l = json.skinIndices.length; i < l; i += 2 ) {

				a = json.skinIndices[ i     ];
				b = json.skinIndices[ i + 1 ];
				c = 0;
				d = 0;

				geometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );

			}

		}

		geometry.bones = json.bones;
		geometry.animation = json.animation;

	};

	function parseMorphing( scale ) {

		if ( json.morphTargets !== undefined ) {

			var i, l, v, vl, dstVertices, srcVertices;

			for ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {

				geometry.morphTargets[ i ] = {};
				geometry.morphTargets[ i ].name = json.morphTargets[ i ].name;
				geometry.morphTargets[ i ].vertices = [];

				dstVertices = geometry.morphTargets[ i ].vertices;
				srcVertices = json.morphTargets [ i ].vertices;

				for( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {

					var vertex = new THREE.Vector3();
					vertex.x = srcVertices[ v ] * scale;
					vertex.y = srcVertices[ v + 1 ] * scale;
					vertex.z = srcVertices[ v + 2 ] * scale;

					dstVertices.push( vertex );

				}

			}

		}

		if ( json.morphColors !== undefined ) {

			var i, l, c, cl, dstColors, srcColors, color;

			for ( i = 0, l = json.morphColors.length; i < l; i++ ) {

				geometry.morphColors[ i ] = {};
				geometry.morphColors[ i ].name = json.morphColors[ i ].name;
				geometry.morphColors[ i ].colors = [];

				dstColors = geometry.morphColors[ i ].colors;
				srcColors = json.morphColors [ i ].colors;

				for ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {

					color = new THREE.Color( 0xffaa00 );
					color.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );
					dstColors.push( color );

				}

			}

		}

	};

	var materials = this.initMaterials( json.materials, texturePath );

	if ( this.needsTangents( materials ) ) {

		geometry.computeTangents();

	}

	return {
		geometry: geometry,
		materials: materials
	};

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.LoadingMonitor = function () {

	THREE.EventDispatcher.call( this );

	var scope = this;

	var loaded = 0;
	var total = 0;

	var onLoad = function ( event ) {

		loaded ++;

		scope.dispatchEvent( { type: 'progress', loaded: loaded, total: total } );

		if ( loaded === total ) {

			scope.dispatchEvent( { type: 'load' } );

		}

	};

	this.add = function ( loader ) {

		total ++;

		loader.addEventListener( 'load', onLoad, false );

	};

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.SceneLoader = function () {

	this.onLoadStart = function () {};
	this.onLoadProgress = function() {};
	this.onLoadComplete = function () {};

	this.callbackSync = function () {};
	this.callbackProgress = function () {};

	this.geometryHandlerMap = {};
	this.hierarchyHandlerMap = {};

	this.addGeometryHandler( "ascii", THREE.JSONLoader );

};

THREE.SceneLoader.prototype.constructor = THREE.SceneLoader;

THREE.SceneLoader.prototype.load = function ( url, callbackFinished ) {

	var scope = this;

	var xhr = new XMLHttpRequest();

	xhr.onreadystatechange = function () {

		if ( xhr.readyState === 4 ) {

			if ( xhr.status === 200 || xhr.status === 0 ) {

				var json = JSON.parse( xhr.responseText );
				scope.parse( json, callbackFinished, url );

			} else {

				console.error( "THREE.SceneLoader: Couldn't load [" + url + "] [" + xhr.status + "]" );

			}

		}

	};

	xhr.open( "GET", url, true );
	xhr.send( null );

};

THREE.SceneLoader.prototype.addGeometryHandler = function ( typeID, loaderClass ) {

	this.geometryHandlerMap[ typeID ] = { "loaderClass": loaderClass };

};

THREE.SceneLoader.prototype.addHierarchyHandler = function ( typeID, loaderClass ) {

	this.hierarchyHandlerMap[ typeID ] = { "loaderClass": loaderClass };

};

THREE.SceneLoader.prototype.parse = function ( json, callbackFinished, url ) {

	var scope = this;

	var urlBase = THREE.Loader.prototype.extractUrlBase( url );

	var geometry, material, camera, fog,
		texture, images, color,
		light, hex, intensity,
		counter_models, counter_textures,
		total_models, total_textures,
		result;

	var target_array = [];

	var data = json;

	// async geometry loaders

	for ( var typeID in this.geometryHandlerMap ) {

		var loaderClass = this.geometryHandlerMap[ typeID ][ "loaderClass" ];
		this.geometryHandlerMap[ typeID ][ "loaderObject" ] = new loaderClass();

	}

	// async hierachy loaders

	for ( var typeID in this.hierarchyHandlerMap ) {

		var loaderClass = this.hierarchyHandlerMap[ typeID ][ "loaderClass" ];
		this.hierarchyHandlerMap[ typeID ][ "loaderObject" ] = new loaderClass();

	}

	counter_models = 0;
	counter_textures = 0;

	result = {

		scene: new THREE.Scene(),
		geometries: {},
		face_materials: {},
		materials: {},
		textures: {},
		objects: {},
		cameras: {},
		lights: {},
		fogs: {},
		empties: {},
		groups: {}

	};

	if ( data.transform ) {

		var position = data.transform.position,
			rotation = data.transform.rotation,
			scale = data.transform.scale;

		if ( position )
			result.scene.position.set( position[ 0 ], position[ 1 ], position [ 2 ] );

		if ( rotation )
			result.scene.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation [ 2 ] );

		if ( scale )
			result.scene.scale.set( scale[ 0 ], scale[ 1 ], scale [ 2 ] );

		if ( position || rotation || scale ) {

			result.scene.updateMatrix();
			result.scene.updateMatrixWorld();

		}

	}

	function get_url( source_url, url_type ) {

		if ( url_type == "relativeToHTML" ) {

			return source_url;

		} else {

			return urlBase + "/" + source_url;

		}

	};

	// toplevel loader function, delegates to handle_children

	function handle_objects() {

		handle_children( result.scene, data.objects );

	}

	// handle all the children from the loaded json and attach them to given parent

	function handle_children( parent, children ) {

		var mat, dst, pos, rot, scl, quat;

		for ( var objID in children ) {

			// check by id if child has already been handled,
			// if not, create new object

			if ( result.objects[ objID ] === undefined ) {

				var objJSON = children[ objID ];

				var object = null;

				// meshes

				if ( objJSON.type && ( objJSON.type in scope.hierarchyHandlerMap ) ) {

					if ( objJSON.loading === undefined ) {

						var reservedTypes = { "type": 1, "url": 1, "material": 1,
											  "position": 1, "rotation": 1, "scale" : 1,
											  "visible": 1, "children": 1, "userData": 1,
											  "skin": 1, "morph": 1, "mirroredLoop": 1, "duration": 1 };

						var loaderParameters = {};

						for ( var parType in objJSON ) {

							if ( ! ( parType in reservedTypes ) ) {

								loaderParameters[ parType ] = objJSON[ parType ];

							}

						}

						material = result.materials[ objJSON.material ];

						objJSON.loading = true;

						var loader = scope.hierarchyHandlerMap[ objJSON.type ][ "loaderObject" ];

						// ColladaLoader

						if ( loader.options ) {

							loader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ) );

						// UTF8Loader
						// OBJLoader

						} else {

							loader.load( get_url( objJSON.url, data.urlBaseType ), create_callback_hierachy( objID, parent, material, objJSON ), loaderParameters );

						}

					}

				} else if ( objJSON.geometry !== undefined ) {

					geometry = result.geometries[ objJSON.geometry ];

					// geometry already loaded

					if ( geometry ) {

						var needsTangents = false;

						material = result.materials[ objJSON.material ];
						needsTangents = material instanceof THREE.ShaderMaterial;

						pos = objJSON.position;
						rot = objJSON.rotation;
						scl = objJSON.scale;
						mat = objJSON.matrix;
						quat = objJSON.quaternion;

						// use materials from the model file
						// if there is no material specified in the object

						if ( ! objJSON.material ) {

							material = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );

						}

						// use materials from the model file
						// if there is just empty face material
						// (must create new material as each model has its own face material)

						if ( ( material instanceof THREE.MeshFaceMaterial ) && material.materials.length === 0 ) {

							material = new THREE.MeshFaceMaterial( result.face_materials[ objJSON.geometry ] );

						}

						if ( material instanceof THREE.MeshFaceMaterial ) {

							for ( var i = 0; i < material.materials.length; i ++ ) {

								needsTangents = needsTangents || ( material.materials[ i ] instanceof THREE.ShaderMaterial );

							}

						}

						if ( needsTangents ) {

							geometry.computeTangents();

						}

						if ( objJSON.skin ) {

							object = new THREE.SkinnedMesh( geometry, material );

						} else if ( objJSON.morph ) {

							object = new THREE.MorphAnimMesh( geometry, material );

							if ( objJSON.duration !== undefined ) {

								object.duration = objJSON.duration;

							}

							if ( objJSON.time !== undefined ) {

								object.time = objJSON.time;

							}

							if ( objJSON.mirroredLoop !== undefined ) {

								object.mirroredLoop = objJSON.mirroredLoop;

							}

							if ( material.morphNormals ) {

								geometry.computeMorphNormals();

							}

						} else {

							object = new THREE.Mesh( geometry, material );

						}

						object.name = objID;

						if ( mat ) {

							object.matrixAutoUpdate = false;
							object.matrix.set(
								mat[0],  mat[1],  mat[2],  mat[3],
								mat[4],  mat[5],  mat[6],  mat[7],
								mat[8],  mat[9],  mat[10], mat[11],
								mat[12], mat[13], mat[14], mat[15]
							);

						} else {

							object.position.set( pos[0], pos[1], pos[2] );

							if ( quat ) {

								object.quaternion.set( quat[0], quat[1], quat[2], quat[3] );
								object.useQuaternion = true;

							} else {

								object.rotation.set( rot[0], rot[1], rot[2] );

							}

							object.scale.set( scl[0], scl[1], scl[2] );

						}

						object.visible = objJSON.visible;
						object.castShadow = objJSON.castShadow;
						object.receiveShadow = objJSON.receiveShadow;

						parent.add( object );

						result.objects[ objID ] = object;

					}

				// lights

				} else if ( objJSON.type === "DirectionalLight" || objJSON.type === "PointLight" || objJSON.type === "AmbientLight" ) {

					hex = ( objJSON.color !== undefined ) ? objJSON.color : 0xffffff;
					intensity = ( objJSON.intensity !== undefined ) ? objJSON.intensity : 1;

					if ( objJSON.type === "DirectionalLight" ) {

						pos = objJSON.direction;

						light = new THREE.DirectionalLight( hex, intensity );
						light.position.set( pos[0], pos[1], pos[2] );

						if ( objJSON.target ) {

							target_array.push( { "object": light, "targetName" : objJSON.target } );

							// kill existing default target
							// otherwise it gets added to scene when parent gets added

							light.target = null;

						}

					} else if ( objJSON.type === "PointLight" ) {

						pos = objJSON.position;
						dst = objJSON.distance;

						light = new THREE.PointLight( hex, intensity, dst );
						light.position.set( pos[0], pos[1], pos[2] );

					} else if ( objJSON.type === "AmbientLight" ) {

						light = new THREE.AmbientLight( hex );

					}

					parent.add( light );

					light.name = objID;
					result.lights[ objID ] = light;
					result.objects[ objID ] = light;

				// cameras

				} else if ( objJSON.type === "PerspectiveCamera" || objJSON.type === "OrthographicCamera" ) {

					if ( objJSON.type === "PerspectiveCamera" ) {

						camera = new THREE.PerspectiveCamera( objJSON.fov, objJSON.aspect, objJSON.near, objJSON.far );

					} else if ( objJSON.type === "OrthographicCamera" ) {

						camera = new THREE.OrthographicCamera( objJSON.left, objJSON.right, objJSON.top, objJSON.bottom, objJSON.near, objJSON.far );

					}

					pos = objJSON.position;
					camera.position.set( pos[0], pos[1], pos[2] );
					parent.add( camera );

					camera.name = objID;
					result.cameras[ objID ] = camera;
					result.objects[ objID ] = camera;

				// pure Object3D

				} else {

					pos = objJSON.position;
					rot = objJSON.rotation;
					scl = objJSON.scale;
					quat = objJSON.quaternion;

					object = new THREE.Object3D();
					object.name = objID;
					object.position.set( pos[0], pos[1], pos[2] );

					if ( quat ) {

						object.quaternion.set( quat[0], quat[1], quat[2], quat[3] );
						object.useQuaternion = true;

					} else {

						object.rotation.set( rot[0], rot[1], rot[2] );

					}

					object.scale.set( scl[0], scl[1], scl[2] );
					object.visible = ( objJSON.visible !== undefined ) ? objJSON.visible : false;

					parent.add( object );

					result.objects[ objID ] = object;
					result.empties[ objID ] = object;

				}

				if ( object ) {

					if ( objJSON.userData !== undefined )  {

						for ( var key in objJSON.userData ) {

							var value = objJSON.userData[ key ];
							object.userData[ key ] = value;

						}

					}

					if ( objJSON.groups !== undefined ) {

						for ( var i = 0; i < objJSON.groups.length; i ++ ) {

							var groupID = objJSON.groups[ i ];

							if ( result.groups[ groupID ] === undefined ) {

								result.groups[ groupID ] = [];

							}

							result.groups[ groupID ].push( objID );

						}

					}

					if ( objJSON.children !== undefined ) {

						handle_children( object, objJSON.children );

					}

				}

			}

		}

	};

	function handle_mesh( geo, mat, id ) {

		result.geometries[ id ] = geo;
		result.face_materials[ id ] = mat;
		handle_objects();

	};

	function handle_hierarchy( node, id, parent, material, obj ) {

		var p = obj.position;
		var r = obj.rotation;
		var q = obj.quaternion;
		var s = obj.scale;

		node.position.set( p[0], p[1], p[2] );

		if ( q ) {

			node.quaternion.set( q[0], q[1], q[2], q[3] );
			node.useQuaternion = true;

		} else {

			node.rotation.set( r[0], r[1], r[2] );

		}

		node.scale.set( s[0], s[1], s[2] );

		// override children materials
		// if object material was specified in JSON explicitly

		if ( material ) {

			node.traverse( function ( child )  {

				child.material = material;

			} );

		}

		// override children visibility
		// with root node visibility as specified in JSON

		var visible = ( obj.visible !== undefined ) ? obj.visible : true;

		node.traverse( function ( child )  {

			child.visible = visible;

		} );

		parent.add( node );

		node.name = id;

		result.objects[ id ] = node;
		handle_objects();

	};

	function create_callback_geometry( id ) {

		return function ( geo, mat ) {

			handle_mesh( geo, mat, id );

			counter_models -= 1;

			scope.onLoadComplete();

			async_callback_gate();

		}

	};

	function create_callback_hierachy( id, parent, material, obj ) {

		return function ( event ) {

			var result;

			// loaders which use EventDispatcher

			if ( event.content ) {

				result = event.content;

			// ColladaLoader

			} else if ( event.dae ) {

				result = event.scene;


			// UTF8Loader

			} else {

				result = event;

			}

			handle_hierarchy( result, id, parent, material, obj );

			counter_models -= 1;

			scope.onLoadComplete();

			async_callback_gate();

		}

	};

	function create_callback_embed( id ) {

		return function ( geo, mat ) {

			result.geometries[ id ] = geo;
			result.face_materials[ id ] = mat;

		}

	};

	function async_callback_gate() {

		var progress = {

			totalModels : total_models,
			totalTextures : total_textures,
			loadedModels : total_models - counter_models,
			loadedTextures : total_textures - counter_textures

		};

		scope.callbackProgress( progress, result );

		scope.onLoadProgress();

		if ( counter_models === 0 && counter_textures === 0 ) {

			finalize();
			callbackFinished( result );

		}

	};

	function finalize() {

		// take care of targets which could be asynchronously loaded objects

		for ( var i = 0; i < target_array.length; i ++ ) {

			var ta = target_array[ i ];

			var target = result.objects[ ta.targetName ];

			if ( target ) {

				ta.object.target = target;

			} else {

				// if there was error and target of specified name doesn't exist in the scene file
				// create instead dummy target
				// (target must be added to scene explicitly as parent is already added)

				ta.object.target = new THREE.Object3D();
				result.scene.add( ta.object.target );

			}

			ta.object.target.userData.targetInverse = ta.object;

		}

	};

	var callbackTexture = function ( count ) {

		counter_textures -= count;
		async_callback_gate();

		scope.onLoadComplete();

	};

	// must use this instead of just directly calling callbackTexture
	// because of closure in the calling context loop

	var generateTextureCallback = function ( count ) {

		return function () {

			callbackTexture( count );

		};

	};

	// first go synchronous elements

	// fogs

	var fogID, fogJSON;

	for ( fogID in data.fogs ) {

		fogJSON = data.fogs[ fogID ];

		if ( fogJSON.type === "linear" ) {

			fog = new THREE.Fog( 0x000000, fogJSON.near, fogJSON.far );

		} else if ( fogJSON.type === "exp2" ) {

			fog = new THREE.FogExp2( 0x000000, fogJSON.density );

		}

		color = fogJSON.color;
		fog.color.setRGB( color[0], color[1], color[2] );

		result.fogs[ fogID ] = fog;

	}

	// now come potentially asynchronous elements

	// geometries

	// count how many geometries will be loaded asynchronously

	var geoID, geoJSON;

	for ( geoID in data.geometries ) {

		geoJSON = data.geometries[ geoID ];

		if ( geoJSON.type in this.geometryHandlerMap ) {

			counter_models += 1;

			scope.onLoadStart();

		}

	}

	// count how many hierarchies will be loaded asynchronously

	var objID, objJSON;

	for ( objID in data.objects ) {

		objJSON = data.objects[ objID ];

		if ( objJSON.type && ( objJSON.type in this.hierarchyHandlerMap ) ) {

			counter_models += 1;

			scope.onLoadStart();

		}

	}

	total_models = counter_models;

	for ( geoID in data.geometries ) {

		geoJSON = data.geometries[ geoID ];

		if ( geoJSON.type === "cube" ) {

			geometry = new THREE.CubeGeometry( geoJSON.width, geoJSON.height, geoJSON.depth, geoJSON.widthSegments, geoJSON.heightSegments, geoJSON.depthSegments );
			result.geometries[ geoID ] = geometry;

		} else if ( geoJSON.type === "plane" ) {

			geometry = new THREE.PlaneGeometry( geoJSON.width, geoJSON.height, geoJSON.widthSegments, geoJSON.heightSegments );
			result.geometries[ geoID ] = geometry;

		} else if ( geoJSON.type === "sphere" ) {

			geometry = new THREE.SphereGeometry( geoJSON.radius, geoJSON.widthSegments, geoJSON.heightSegments );
			result.geometries[ geoID ] = geometry;

		} else if ( geoJSON.type === "cylinder" ) {

			geometry = new THREE.CylinderGeometry( geoJSON.topRad, geoJSON.botRad, geoJSON.height, geoJSON.radSegs, geoJSON.heightSegs );
			result.geometries[ geoID ] = geometry;

		} else if ( geoJSON.type === "torus" ) {

			geometry = new THREE.TorusGeometry( geoJSON.radius, geoJSON.tube, geoJSON.segmentsR, geoJSON.segmentsT );
			result.geometries[ geoID ] = geometry;

		} else if ( geoJSON.type === "icosahedron" ) {

			geometry = new THREE.IcosahedronGeometry( geoJSON.radius, geoJSON.subdivisions );
			result.geometries[ geoID ] = geometry;

		} else if ( geoJSON.type in this.geometryHandlerMap ) {

			var loaderParameters = {};

			for ( var parType in geoJSON ) {

				if ( parType !== "type" && parType !== "url" ) {

					loaderParameters[ parType ] = geoJSON[ parType ];

				}

			}

			var loader = this.geometryHandlerMap[ geoJSON.type ][ "loaderObject" ];
			loader.load( get_url( geoJSON.url, data.urlBaseType ), create_callback_geometry( geoID ), loaderParameters );

		} else if ( geoJSON.type === "embedded" ) {

			var modelJson = data.embeds[ geoJSON.id ],
				texture_path = "";

			// pass metadata along to jsonLoader so it knows the format version

			modelJson.metadata = data.metadata;

			if ( modelJson ) {

				var jsonLoader = this.geometryHandlerMap[ "ascii" ][ "loaderObject" ];
				var model = jsonLoader.parse( modelJson, texture_path );
				create_callback_embed( geoID )( model.geometry, model.materials );

			}

		}

	}

	// textures

	// count how many textures will be loaded asynchronously

	var textureID, textureJSON;

	for ( textureID in data.textures ) {

		textureJSON = data.textures[ textureID ];

		if ( textureJSON.url instanceof Array ) {

			counter_textures += textureJSON.url.length;

			for( var n = 0; n < textureJSON.url.length; n ++ ) {

				scope.onLoadStart();

			}

		} else {

			counter_textures += 1;

			scope.onLoadStart();

		}

	}

	total_textures = counter_textures;

	for ( textureID in data.textures ) {

		textureJSON = data.textures[ textureID ];

		if ( textureJSON.mapping !== undefined && THREE[ textureJSON.mapping ] !== undefined  ) {

			textureJSON.mapping = new THREE[ textureJSON.mapping ]();

		}

		if ( textureJSON.url instanceof Array ) {

			var count = textureJSON.url.length;
			var url_array = [];

			for( var i = 0; i < count; i ++ ) {

				url_array[ i ] = get_url( textureJSON.url[ i ], data.urlBaseType );

			}

			var isCompressed = /\.dds$/i.test( url_array[ 0 ] );

			if ( isCompressed ) {

				texture = THREE.ImageUtils.loadCompressedTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );

			} else {

				texture = THREE.ImageUtils.loadTextureCube( url_array, textureJSON.mapping, generateTextureCallback( count ) );

			}

		} else {

			var isCompressed = /\.dds$/i.test( textureJSON.url );
			var fullUrl = get_url( textureJSON.url, data.urlBaseType );
			var textureCallback = generateTextureCallback( 1 );

			if ( isCompressed ) {

				texture = THREE.ImageUtils.loadCompressedTexture( fullUrl, textureJSON.mapping, textureCallback );

			} else {

				texture = THREE.ImageUtils.loadTexture( fullUrl, textureJSON.mapping, textureCallback );

			}

			if ( THREE[ textureJSON.minFilter ] !== undefined )
				texture.minFilter = THREE[ textureJSON.minFilter ];

			if ( THREE[ textureJSON.magFilter ] !== undefined )
				texture.magFilter = THREE[ textureJSON.magFilter ];

			if ( textureJSON.anisotropy ) texture.anisotropy = textureJSON.anisotropy;

			if ( textureJSON.repeat ) {

				texture.repeat.set( textureJSON.repeat[ 0 ], textureJSON.repeat[ 1 ] );

				if ( textureJSON.repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;
				if ( textureJSON.repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;

			}

			if ( textureJSON.offset ) {

				texture.offset.set( textureJSON.offset[ 0 ], textureJSON.offset[ 1 ] );

			}

			// handle wrap after repeat so that default repeat can be overriden

			if ( textureJSON.wrap ) {

				var wrapMap = {
				"repeat" 	: THREE.RepeatWrapping,
				"mirror"	: THREE.MirroredRepeatWrapping
				}

				if ( wrapMap[ textureJSON.wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ textureJSON.wrap[ 0 ] ];
				if ( wrapMap[ textureJSON.wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ textureJSON.wrap[ 1 ] ];

			}

		}

		result.textures[ textureID ] = texture;

	}

	// materials

	var matID, matJSON;
	var parID;

	for ( matID in data.materials ) {

		matJSON = data.materials[ matID ];

		for ( parID in matJSON.parameters ) {

			if ( parID === "envMap" || parID === "map" || parID === "lightMap" || parID === "bumpMap" ) {

				matJSON.parameters[ parID ] = result.textures[ matJSON.parameters[ parID ] ];

			} else if ( parID === "shading" ) {

				matJSON.parameters[ parID ] = ( matJSON.parameters[ parID ] === "flat" ) ? THREE.FlatShading : THREE.SmoothShading;

			} else if ( parID === "side" ) {

				if ( matJSON.parameters[ parID ] == "double" ) {

					matJSON.parameters[ parID ] = THREE.DoubleSide;

				} else if ( matJSON.parameters[ parID ] == "back" ) {

					matJSON.parameters[ parID ] = THREE.BackSide;

				} else {

					matJSON.parameters[ parID ] = THREE.FrontSide;

				}

			} else if ( parID === "blending" ) {

				matJSON.parameters[ parID ] = matJSON.parameters[ parID ] in THREE ? THREE[ matJSON.parameters[ parID ] ] : THREE.NormalBlending;

			} else if ( parID === "combine" ) {

				matJSON.parameters[ parID ] = matJSON.parameters[ parID ] in THREE ? THREE[ matJSON.parameters[ parID ] ] : THREE.MultiplyOperation;

			} else if ( parID === "vertexColors" ) {

				if ( matJSON.parameters[ parID ] == "face" ) {

					matJSON.parameters[ parID ] = THREE.FaceColors;

				// default to vertex colors if "vertexColors" is anything else face colors or 0 / null / false

				} else if ( matJSON.parameters[ parID ] )   {

					matJSON.parameters[ parID ] = THREE.VertexColors;

				}

			} else if ( parID === "wrapRGB" ) {

				var v3 = matJSON.parameters[ parID ];
				matJSON.parameters[ parID ] = new THREE.Vector3( v3[ 0 ], v3[ 1 ], v3[ 2 ] );

			}

		}

		if ( matJSON.parameters.opacity !== undefined && matJSON.parameters.opacity < 1.0 ) {

			matJSON.parameters.transparent = true;

		}

		if ( matJSON.parameters.normalMap ) {

			var shader = THREE.ShaderLib[ "normalmap" ];
			var uniforms = THREE.UniformsUtils.clone( shader.uniforms );

			var diffuse = matJSON.parameters.color;
			var specular = matJSON.parameters.specular;
			var ambient = matJSON.parameters.ambient;
			var shininess = matJSON.parameters.shininess;

			uniforms[ "tNormal" ].value = result.textures[ matJSON.parameters.normalMap ];

			if ( matJSON.parameters.normalScale ) {

				uniforms[ "uNormalScale" ].value.set( matJSON.parameters.normalScale[ 0 ], matJSON.parameters.normalScale[ 1 ] );

			}

			if ( matJSON.parameters.map ) {

				uniforms[ "tDiffuse" ].value = matJSON.parameters.map;
				uniforms[ "enableDiffuse" ].value = true;

			}

			if ( matJSON.parameters.envMap ) {

				uniforms[ "tCube" ].value = matJSON.parameters.envMap;
				uniforms[ "enableReflection" ].value = true;
				uniforms[ "uReflectivity" ].value = matJSON.parameters.reflectivity;

			}

			if ( matJSON.parameters.lightMap ) {

				uniforms[ "tAO" ].value = matJSON.parameters.lightMap;
				uniforms[ "enableAO" ].value = true;

			}

			if ( matJSON.parameters.specularMap ) {

				uniforms[ "tSpecular" ].value = result.textures[ matJSON.parameters.specularMap ];
				uniforms[ "enableSpecular" ].value = true;

			}

			if ( matJSON.parameters.displacementMap ) {

				uniforms[ "tDisplacement" ].value = result.textures[ matJSON.parameters.displacementMap ];
				uniforms[ "enableDisplacement" ].value = true;

				uniforms[ "uDisplacementBias" ].value = matJSON.parameters.displacementBias;
				uniforms[ "uDisplacementScale" ].value = matJSON.parameters.displacementScale;

			}

			uniforms[ "uDiffuseColor" ].value.setHex( diffuse );
			uniforms[ "uSpecularColor" ].value.setHex( specular );
			uniforms[ "uAmbientColor" ].value.setHex( ambient );

			uniforms[ "uShininess" ].value = shininess;

			if ( matJSON.parameters.opacity ) {

				uniforms[ "uOpacity" ].value = matJSON.parameters.opacity;

			}

			var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms, lights: true, fog: true };

			material = new THREE.ShaderMaterial( parameters );

		} else {

			material = new THREE[ matJSON.type ]( matJSON.parameters );

		}

		result.materials[ matID ] = material;

	}

	// second pass through all materials to initialize MeshFaceMaterials
	// that could be referring to other materials out of order

	for ( matID in data.materials ) {

		matJSON = data.materials[ matID ];

		if ( matJSON.parameters.materials ) {

			var materialArray = [];

			for ( var i = 0; i < matJSON.parameters.materials.length; i ++ ) {

				var label = matJSON.parameters.materials[ i ];
				materialArray.push( result.materials[ label ] );

			}

			result.materials[ matID ].materials = materialArray;

		}

	}

	// objects ( synchronous init of procedural primitives )

	handle_objects();

	// defaults

	if ( result.cameras && data.defaults.camera ) {

		result.currentCamera = result.cameras[ data.defaults.camera ];

	}

	if ( result.fogs && data.defaults.fog ) {

		result.scene.fog = result.fogs[ data.defaults.fog ];

	}

	// synchronous callback

	scope.callbackSync( result );

	// just in case there are no async elements

	async_callback_gate();

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.TextureLoader = function () {

	THREE.EventDispatcher.call( this );

	this.crossOrigin = null;

};

THREE.TextureLoader.prototype = {

	constructor: THREE.TextureLoader,

	load: function ( url ) {

		var scope = this;

		var image = new Image();

		image.addEventListener( 'load', function () {

			var texture = new THREE.Texture( image );
			texture.needsUpdate = true;

			scope.dispatchEvent( { type: 'load', content: texture } );

		}, false );

		image.addEventListener( 'error', function () {

			scope.dispatchEvent( { type: 'error', message: 'Couldn\'t load URL [' + url + ']' } );

		}, false );

		if ( scope.crossOrigin ) image.crossOrigin = scope.crossOrigin;

		image.src = url;

	}

}
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Material = function () {

	THREE.EventDispatcher.call( this );

	this.id = THREE.MaterialIdCount ++;

	this.name = '';

	this.side = THREE.FrontSide;

	this.opacity = 1;
	this.transparent = false;

	this.blending = THREE.NormalBlending;

	this.blendSrc = THREE.SrcAlphaFactor;
	this.blendDst = THREE.OneMinusSrcAlphaFactor;
	this.blendEquation = THREE.AddEquation;

	this.depthTest = true;
	this.depthWrite = true;

	this.polygonOffset = false;
	this.polygonOffsetFactor = 0;
	this.polygonOffsetUnits = 0;

	this.alphaTest = 0;

	this.overdraw = false; // Boolean for fixing antialiasing gaps in CanvasRenderer

	this.visible = true;

	this.needsUpdate = true;

};

THREE.Material.prototype.setValues = function ( values ) {

	if ( values === undefined ) return;

	for ( var key in values ) {

		var newValue = values[ key ];

		if ( newValue === undefined ) {

			console.warn( 'THREE.Material: \'' + key + '\' parameter is undefined.' );
			continue;

		}

		if ( key in this ) {

			var currentValue = this[ key ];

			if ( currentValue instanceof THREE.Color && newValue instanceof THREE.Color ) {

				currentValue.copy( newValue );

			} else if ( currentValue instanceof THREE.Color ) {

				currentValue.set( newValue );

			} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {

				currentValue.copy( newValue );

			} else {

				this[ key ] = newValue;

			}

		}

	}

};

THREE.Material.prototype.clone = function ( material ) {

	if ( material === undefined ) material = new THREE.Material();

	material.name = this.name;

	material.side = this.side;

	material.opacity = this.opacity;
	material.transparent = this.transparent;

	material.blending = this.blending;

	material.blendSrc = this.blendSrc;
	material.blendDst = this.blendDst;
	material.blendEquation = this.blendEquation;

	material.depthTest = this.depthTest;
	material.depthWrite = this.depthWrite;

	material.polygonOffset = this.polygonOffset;
	material.polygonOffsetFactor = this.polygonOffsetFactor;
	material.polygonOffsetUnits = this.polygonOffsetUnits;

	material.alphaTest = this.alphaTest;

	material.overdraw = this.overdraw;

	material.visible = this.visible;

	return material;

};

THREE.Material.prototype.dispose = function () {

	this.dispatchEvent( { type: 'dispose' } );

};

THREE.MaterialIdCount = 0;
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round",
 *
 *  vertexColors: <bool>
 *
 *  fog: <bool>
 * }
 */

THREE.LineBasicMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff );

	this.linewidth = 1;
	this.linecap = 'round';
	this.linejoin = 'round';

	this.vertexColors = false;

	this.fog = true;

	this.setValues( parameters );

};

THREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.LineBasicMaterial.prototype.clone = function () {

	var material = new THREE.LineBasicMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );

	material.linewidth = this.linewidth;
	material.linecap = this.linecap;
	material.linejoin = this.linejoin;

	material.vertexColors = this.vertexColors;

	material.fog = this.fog;

	return material;

};
/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>,
 *
 *  vertexColors: <bool>
 *
 *  fog: <bool>
 * }
 */

THREE.LineDashedMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff );

	this.linewidth = 1;

	this.scale = 1;
	this.dashSize = 3;
	this.gapSize = 1;

	this.vertexColors = false;

	this.fog = true;

	this.setValues( parameters );

};

THREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.LineDashedMaterial.prototype.clone = function () {

	var material = new THREE.LineDashedMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );

	material.linewidth = this.linewidth;

	material.scale = this.scale;
	material.dashSize = this.dashSize;
	material.gapSize = this.gapSize;

	material.vertexColors = this.vertexColors;

	material.fog = this.fog;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  shading: THREE.SmoothShading,
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *
 *  fog: <bool>
 * }
 */

THREE.MeshBasicMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff ); // emissive

	this.map = null;

	this.lightMap = null;

	this.specularMap = null;

	this.envMap = null;
	this.combine = THREE.MultiplyOperation;
	this.reflectivity = 1;
	this.refractionRatio = 0.98;

	this.fog = true;

	this.shading = THREE.SmoothShading;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.vertexColors = THREE.NoColors;

	this.skinning = false;
	this.morphTargets = false;

	this.setValues( parameters );

};

THREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.MeshBasicMaterial.prototype.clone = function () {

	var material = new THREE.MeshBasicMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );

	material.map = this.map;

	material.lightMap = this.lightMap;

	material.specularMap = this.specularMap;

	material.envMap = this.envMap;
	material.combine = this.combine;
	material.reflectivity = this.reflectivity;
	material.refractionRatio = this.refractionRatio;

	material.fog = this.fog;

	material.shading = this.shading;

	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;
	material.wireframeLinecap = this.wireframeLinecap;
	material.wireframeLinejoin = this.wireframeLinejoin;

	material.vertexColors = this.vertexColors;

	material.skinning = this.skinning;
	material.morphTargets = this.morphTargets;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  ambient: <hex>,
 *  emissive: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  shading: THREE.SmoothShading,
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>,
 *
 *	fog: <bool>
 * }
 */

THREE.MeshLambertMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff ); // diffuse
	this.ambient = new THREE.Color( 0xffffff );
	this.emissive = new THREE.Color( 0x000000 );

	this.wrapAround = false;
	this.wrapRGB = new THREE.Vector3( 1, 1, 1 );

	this.map = null;

	this.lightMap = null;

	this.specularMap = null;

	this.envMap = null;
	this.combine = THREE.MultiplyOperation;
	this.reflectivity = 1;
	this.refractionRatio = 0.98;

	this.fog = true;

	this.shading = THREE.SmoothShading;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.vertexColors = THREE.NoColors;

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.setValues( parameters );

};

THREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.MeshLambertMaterial.prototype.clone = function () {

	var material = new THREE.MeshLambertMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );
	material.ambient.copy( this.ambient );
	material.emissive.copy( this.emissive );

	material.wrapAround = this.wrapAround;
	material.wrapRGB.copy( this.wrapRGB );

	material.map = this.map;

	material.lightMap = this.lightMap;

	material.specularMap = this.specularMap;

	material.envMap = this.envMap;
	material.combine = this.combine;
	material.reflectivity = this.reflectivity;
	material.refractionRatio = this.refractionRatio;

	material.fog = this.fog;

	material.shading = this.shading;

	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;
	material.wireframeLinecap = this.wireframeLinecap;
	material.wireframeLinejoin = this.wireframeLinejoin;

	material.vertexColors = this.vertexColors;

	material.skinning = this.skinning;
	material.morphTargets = this.morphTargets;
	material.morphNormals = this.morphNormals;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  ambient: <hex>,
 *  emissive: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  shading: THREE.SmoothShading,
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>,
 *
 *	fog: <bool>
 * }
 */

THREE.MeshPhongMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff ); // diffuse
	this.ambient = new THREE.Color( 0xffffff );
	this.emissive = new THREE.Color( 0x000000 );
	this.specular = new THREE.Color( 0x111111 );
	this.shininess = 30;

	this.metal = false;
	this.perPixel = true;

	this.wrapAround = false;
	this.wrapRGB = new THREE.Vector3( 1, 1, 1 );

	this.map = null;

	this.lightMap = null;

	this.bumpMap = null;
	this.bumpScale = 1;

	this.normalMap = null;
	this.normalScale = new THREE.Vector2( 1, 1 );

	this.specularMap = null;

	this.envMap = null;
	this.combine = THREE.MultiplyOperation;
	this.reflectivity = 1;
	this.refractionRatio = 0.98;

	this.fog = true;

	this.shading = THREE.SmoothShading;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.vertexColors = THREE.NoColors;

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.setValues( parameters );

};

THREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.MeshPhongMaterial.prototype.clone = function () {

	var material = new THREE.MeshPhongMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );
	material.ambient.copy( this.ambient );
	material.emissive.copy( this.emissive );
	material.specular.copy( this.specular );
	material.shininess = this.shininess;

	material.metal = this.metal;
	material.perPixel = this.perPixel;

	material.wrapAround = this.wrapAround;
	material.wrapRGB.copy( this.wrapRGB );

	material.map = this.map;

	material.lightMap = this.lightMap;

	material.bumpMap = this.bumpMap;
	material.bumpScale = this.bumpScale;

	material.normalMap = this.normalMap;
	material.normalScale.copy( this.normalScale );

	material.specularMap = this.specularMap;

	material.envMap = this.envMap;
	material.combine = this.combine;
	material.reflectivity = this.reflectivity;
	material.refractionRatio = this.refractionRatio;

	material.fog = this.fog;

	material.shading = this.shading;

	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;
	material.wireframeLinecap = this.wireframeLinecap;
	material.wireframeLinejoin = this.wireframeLinejoin;

	material.vertexColors = this.vertexColors;

	material.skinning = this.skinning;
	material.morphTargets = this.morphTargets;
	material.morphNormals = this.morphNormals;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */

THREE.MeshDepthMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.setValues( parameters );

};

THREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.MeshDepthMaterial.prototype.clone = function () {

	var material = new THREE.MeshDepthMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  shading: THREE.FlatShading,
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */

THREE.MeshNormalMaterial = function ( parameters ) {

	THREE.Material.call( this, parameters );

	this.shading = THREE.FlatShading;

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.setValues( parameters );

};

THREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.MeshNormalMaterial.prototype.clone = function () {

	var material = new THREE.MeshNormalMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.shading = this.shading;

	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.MeshFaceMaterial = function ( materials ) {

	this.materials = materials instanceof Array ? materials : [];

};

THREE.MeshFaceMaterial.prototype.clone = function () {

	return new THREE.MeshFaceMaterial( this.materials.slice( 0 ) );

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  vertexColors: <bool>,
 *
 *  fog: <bool>
 * }
 */

THREE.ParticleBasicMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff );

	this.map = null;

	this.size = 1;
	this.sizeAttenuation = true;

	this.vertexColors = false;

	this.fog = true;

	this.setValues( parameters );

};

THREE.ParticleBasicMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.ParticleBasicMaterial.prototype.clone = function () {

	var material = new THREE.ParticleBasicMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );

	material.map = this.map;

	material.size = this.size;
	material.sizeAttenuation = this.sizeAttenuation;

	material.vertexColors = this.vertexColors;

	material.fog = this.fog;

	return material;

};
/**
 * @author mrdoob / http://mrdoob.com/
 *
 * parameters = {
 *  color: <hex>,
 *  program: <function>,
 *  opacity: <float>,
 *  blending: THREE.NormalBlending
 * }
 */

THREE.ParticleCanvasMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.color = new THREE.Color( 0xffffff );
	this.program = function ( context, color ) {};

	this.setValues( parameters );

};

THREE.ParticleCanvasMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.ParticleCanvasMaterial.prototype.clone = function () {

	var material = new THREE.ParticleCanvasMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );
	material.program = this.program;

	return material;

};
/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  uniforms: { "parameter1": { type: "f", value: 1.0 }, "parameter2": { type: "i" value2: 2 } },
 *
 *  defines: { "label" : "value" },
 *
 *  shading: THREE.SmoothShading,
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>,
 *
 *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>,
 *
 *	fog: <bool>
 * }
 */

THREE.ShaderMaterial = function ( parameters ) {

	THREE.Material.call( this );

	this.fragmentShader = "void main() {}";
	this.vertexShader = "void main() {}";
	this.uniforms = {};
	this.defines = {};
	this.attributes = null;

	this.shading = THREE.SmoothShading;

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.fog = false; // set to use scene fog

	this.lights = false; // set to use scene lights

	this.vertexColors = THREE.NoColors; // set to use "color" attribute stream

	this.skinning = false; // set to use skinning attribute streams

	this.morphTargets = false; // set to use morph targets
	this.morphNormals = false; // set to use morph normals

	this.setValues( parameters );

};

THREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.ShaderMaterial.prototype.clone = function () {

	var material = new THREE.ShaderMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.fragmentShader = this.fragmentShader;
	material.vertexShader = this.vertexShader;

	material.uniforms = THREE.UniformsUtils.clone( this.uniforms );

	material.attributes = this.attributes;
	material.defines = this.defines;

	material.shading = this.shading;

	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;

	material.fog = this.fog;

	material.lights = this.lights;

	material.vertexColors = this.vertexColors;

	material.skinning = this.skinning;

	material.morphTargets = this.morphTargets;
	material.morphNormals = this.morphNormals;

	return material;

};
/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  useScreenCoordinates: <bool>,
 *  sizeAttenuation: <bool>,
 *  scaleByViewport: <bool>,
 *  alignment: THREE.SpriteAlignment.center,
 *
 *	uvOffset: new THREE.Vector2(),
 *	uvScale: new THREE.Vector2(),
 *
 *  fog: <bool>
 * }
 */

THREE.SpriteMaterial = function ( parameters ) {

	THREE.Material.call( this );

	// defaults

	this.color = new THREE.Color( 0xffffff );
	this.map = new THREE.Texture();

	this.useScreenCoordinates = true;
	this.depthTest = !this.useScreenCoordinates;
	this.sizeAttenuation = !this.useScreenCoordinates;
	this.scaleByViewport = !this.sizeAttenuation;
	this.alignment = THREE.SpriteAlignment.center.clone();

	this.fog = false;

	this.uvOffset = new THREE.Vector2( 0, 0 );
	this.uvScale  = new THREE.Vector2( 1, 1 );

	// set parameters

	this.setValues( parameters );

	// override coupled defaults if not specified explicitly by parameters

	parameters = parameters || {};

	if ( parameters.depthTest === undefined ) this.depthTest = !this.useScreenCoordinates;
	if ( parameters.sizeAttenuation === undefined ) this.sizeAttenuation = !this.useScreenCoordinates;
	if ( parameters.scaleByViewport === undefined ) this.scaleByViewport = !this.sizeAttenuation;

};

THREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );

THREE.SpriteMaterial.prototype.clone = function () {

	var material = new THREE.SpriteMaterial();

	THREE.Material.prototype.clone.call( this, material );

	material.color.copy( this.color );
	material.map = this.map;

	material.useScreenCoordinates = this.useScreenCoordinates;
	material.sizeAttenuation = this.sizeAttenuation;
	material.scaleByViewport = this.scaleByViewport;
	material.alignment.copy( this.alignment );

	material.uvOffset.copy( this.uvOffset );
	material.uvScale.copy( this.uvScale );

	material.fog = this.fog;

	return material;

};

// Alignment enums

THREE.SpriteAlignment = {};
THREE.SpriteAlignment.topLeft = new THREE.Vector2( 1, -1 );
THREE.SpriteAlignment.topCenter = new THREE.Vector2( 0, -1 );
THREE.SpriteAlignment.topRight = new THREE.Vector2( -1, -1 );
THREE.SpriteAlignment.centerLeft = new THREE.Vector2( 1, 0 );
THREE.SpriteAlignment.center = new THREE.Vector2( 0, 0 );
THREE.SpriteAlignment.centerRight = new THREE.Vector2( -1, 0 );
THREE.SpriteAlignment.bottomLeft = new THREE.Vector2( 1, 1 );
THREE.SpriteAlignment.bottomCenter = new THREE.Vector2( 0, 1 );
THREE.SpriteAlignment.bottomRight = new THREE.Vector2( -1, 1 );
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */

THREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

	THREE.EventDispatcher.call( this );

	this.id = THREE.TextureIdCount ++;

	this.name = '';

	this.image = image;
	this.mipmaps = [];

	this.mapping = mapping !== undefined ? mapping : new THREE.UVMapping();

	this.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;
	this.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;

	this.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;
	this.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;

	this.anisotropy = anisotropy !== undefined ? anisotropy : 1;

	this.format = format !== undefined ? format : THREE.RGBAFormat;
	this.type = type !== undefined ? type : THREE.UnsignedByteType;

	this.offset = new THREE.Vector2( 0, 0 );
	this.repeat = new THREE.Vector2( 1, 1 );

	this.generateMipmaps = true;
	this.premultiplyAlpha = false;
	this.flipY = true;
	this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)

	this.needsUpdate = false;
	this.onUpdate = null;

};

THREE.Texture.prototype = {

	constructor: THREE.Texture,

	clone: function ( texture ) {

		if ( texture === undefined ) texture = new THREE.Texture();

		texture.image = this.image;
		texture.mipmaps = this.mipmaps.slice(0);

		texture.mapping = this.mapping;

		texture.wrapS = this.wrapS;
		texture.wrapT = this.wrapT;

		texture.magFilter = this.magFilter;
		texture.minFilter = this.minFilter;

		texture.anisotropy = this.anisotropy;

		texture.format = this.format;
		texture.type = this.type;

		texture.offset.copy( this.offset );
		texture.repeat.copy( this.repeat );

		texture.generateMipmaps = this.generateMipmaps;
		texture.premultiplyAlpha = this.premultiplyAlpha;
		texture.flipY = this.flipY;
		texture.unpackAlignment = this.unpackAlignment;

		return texture;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

};

THREE.TextureIdCount = 0;
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {

	THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

	this.image = { width: width, height: height };
	this.mipmaps = mipmaps;

	this.generateMipmaps = false; // WebGL currently can't generate mipmaps for compressed textures, they must be embedded in DDS file

};

THREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );

THREE.CompressedTexture.prototype.clone = function () {

	var texture = new THREE.CompressedTexture();

	THREE.Texture.prototype.clone.call( this, texture );

	return texture;

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {

	THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

	this.image = { data: data, width: width, height: height };

};

THREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );

THREE.DataTexture.prototype.clone = function () {

	var texture = new THREE.DataTexture();

	THREE.Texture.prototype.clone.call( this, texture );

	return texture;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Particle = function ( material ) {

	THREE.Object3D.call( this );

	this.material = material;

};

THREE.Particle.prototype = Object.create( THREE.Object3D.prototype );

THREE.Particle.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.Particle( this.material );

	THREE.Object3D.prototype.clone.call( this, object );

	return object;

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.ParticleSystem = function ( geometry, material ) {

	THREE.Object3D.call( this );

	this.geometry = geometry;
	this.material = ( material !== undefined ) ? material : new THREE.ParticleBasicMaterial( { color: Math.random() * 0xffffff } );

	this.sortParticles = false;

	if ( this.geometry ) {

		// calc bound radius

		if( this.geometry.boundingSphere === null ) {

			this.geometry.computeBoundingSphere();

		}

	}

	this.frustumCulled = false;

};

THREE.ParticleSystem.prototype = Object.create( THREE.Object3D.prototype );

THREE.ParticleSystem.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.ParticleSystem( this.geometry, this.material );
	object.sortParticles = this.sortParticles;

	THREE.Object3D.prototype.clone.call( this, object );

	return object;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Line = function ( geometry, material, type ) {

	THREE.Object3D.call( this );

	this.geometry = geometry;
	this.material = ( material !== undefined ) ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );
	this.type = ( type !== undefined ) ? type : THREE.LineStrip;

	if ( this.geometry ) {

		if ( ! this.geometry.boundingSphere ) {

			this.geometry.computeBoundingSphere();

		}

	}

};

THREE.LineStrip = 0;
THREE.LinePieces = 1;

THREE.Line.prototype = Object.create( THREE.Object3D.prototype );

THREE.Line.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.type );

	THREE.Object3D.prototype.clone.call( this, object );

	return object;

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author jonobr1 / http://jonobr1.com/
 */

THREE.Mesh = function ( geometry, material ) {

	THREE.Object3D.call( this );

	this.geometry = geometry;
	this.material = ( material !== undefined ) ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff, wireframe: true } );

	if ( this.geometry !== undefined ) {

		if ( this.geometry.boundingSphere === null ) {

			this.geometry.computeBoundingSphere();

		}

		this.updateMorphTargets();

	}

};

THREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );

THREE.Mesh.prototype.updateMorphTargets = function () {

	if ( this.geometry.morphTargets.length > 0 ) {

		this.morphTargetBase = -1;
		this.morphTargetForcedOrder = [];
		this.morphTargetInfluences = [];
		this.morphTargetDictionary = {};

		for ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {

			this.morphTargetInfluences.push( 0 );
			this.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;

		}

	}

};

THREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {

	if ( this.morphTargetDictionary[ name ] !== undefined ) {

		return this.morphTargetDictionary[ name ];

	}

	console.log( "THREE.Mesh.getMorphTargetIndexByName: morph target " + name + " does not exist. Returning 0." );

	return 0;

};

THREE.Mesh.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );

	THREE.Object3D.prototype.clone.call( this, object );

	return object;

};
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Bone = function( belongsToSkin ) {

	THREE.Object3D.call( this );

	this.skin = belongsToSkin;
	this.skinMatrix = new THREE.Matrix4();

};

THREE.Bone.prototype = Object.create( THREE.Object3D.prototype );

THREE.Bone.prototype.update = function ( parentSkinMatrix, forceUpdate ) {

	// update local

	if ( this.matrixAutoUpdate ) {

		forceUpdate |= this.updateMatrix();

	}

	// update skin matrix

	if ( forceUpdate || this.matrixWorldNeedsUpdate ) {

		if( parentSkinMatrix ) {

			this.skinMatrix.multiplyMatrices( parentSkinMatrix, this.matrix );

		} else {

			this.skinMatrix.copy( this.matrix );

		}

		this.matrixWorldNeedsUpdate = false;
		forceUpdate = true;

	}

	// update children

	var child, i, l = this.children.length;

	for ( i = 0; i < l; i ++ ) {

		this.children[ i ].update( this.skinMatrix, forceUpdate );

	}

};

/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {

	THREE.Mesh.call( this, geometry, material );

	//

	this.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;

	// init bones

	this.identityMatrix = new THREE.Matrix4();

	this.bones = [];
	this.boneMatrices = [];

	var b, bone, gbone, p, q, s;

	if ( this.geometry && this.geometry.bones !== undefined ) {

		for ( b = 0; b < this.geometry.bones.length; b ++ ) {

			gbone = this.geometry.bones[ b ];

			p = gbone.pos;
			q = gbone.rotq;
			s = gbone.scl;

			bone = this.addBone();

			bone.name = gbone.name;
			bone.position.set( p[0], p[1], p[2] );
			bone.quaternion.set( q[0], q[1], q[2], q[3] );
			bone.useQuaternion = true;

			if ( s !== undefined ) {

				bone.scale.set( s[0], s[1], s[2] );

			} else {

				bone.scale.set( 1, 1, 1 );

			}

		}

		for ( b = 0; b < this.bones.length; b ++ ) {

			gbone = this.geometry.bones[ b ];
			bone = this.bones[ b ];

			if ( gbone.parent === -1 ) {

				this.add( bone );

			} else {

				this.bones[ gbone.parent ].add( bone );

			}

		}

		//

		var nBones = this.bones.length;

		if ( this.useVertexTexture ) {

			// layout (1 matrix = 4 pixels)
			//	RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
			//  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)
			//  	 16x16 pixel texture max   64 bones (16 * 16 / 4)
			//  	 32x32 pixel texture max  256 bones (32 * 32 / 4)
			//  	 64x64 pixel texture max 1024 bones (64 * 64 / 4)

			var size;

			if ( nBones > 256 )
				size = 64;
			else if ( nBones > 64 )
				size = 32;
			else if ( nBones > 16 )
				size = 16;
			else
				size = 8;

			this.boneTextureWidth = size;
			this.boneTextureHeight = size;

			this.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel
			this.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );
			this.boneTexture.minFilter = THREE.NearestFilter;
			this.boneTexture.magFilter = THREE.NearestFilter;
			this.boneTexture.generateMipmaps = false;
			this.boneTexture.flipY = false;

		} else {

			this.boneMatrices = new Float32Array( 16 * nBones );

		}

		this.pose();

	}

};

THREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );

THREE.SkinnedMesh.prototype.addBone = function( bone ) {

	if ( bone === undefined ) {

		bone = new THREE.Bone( this );

	}

	this.bones.push( bone );

	return bone;

};

THREE.SkinnedMesh.prototype.updateMatrixWorld = function ( force ) {

	this.matrixAutoUpdate && this.updateMatrix();

	// update matrixWorld

	if ( this.matrixWorldNeedsUpdate || force ) {

		if ( this.parent ) {

			this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

		} else {

			this.matrixWorld.copy( this.matrix );

		}

		this.matrixWorldNeedsUpdate = false;

		force = true;

	}

	// update children

	for ( var i = 0, l = this.children.length; i < l; i ++ ) {

		var child = this.children[ i ];

		if ( child instanceof THREE.Bone ) {

			child.update( this.identityMatrix, false );

		} else {

			child.updateMatrixWorld( true );

		}

	}

	// make a snapshot of the bones' rest position

	if ( this.boneInverses == undefined ) {

		this.boneInverses = [];

		for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {

			var inverse = new THREE.Matrix4();

			inverse.getInverse( this.bones[ b ].skinMatrix );

			this.boneInverses.push( inverse );

		}

	}

	// flatten bone matrices to array

	for ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {

		// compute the offset between the current and the original transform;

		//TODO: we could get rid of this multiplication step if the skinMatrix
		// was already representing the offset; however, this requires some
		// major changes to the animation system

		THREE.SkinnedMesh.offsetMatrix.multiplyMatrices( this.bones[ b ].skinMatrix, this.boneInverses[ b ] );

		THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );

	}

	if ( this.useVertexTexture ) {

		this.boneTexture.needsUpdate = true;

	}

};

THREE.SkinnedMesh.prototype.pose = function () {

	this.updateMatrixWorld( true );

	for ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {

		// normalize weights

		var sw = this.geometry.skinWeights[ i ];

		var scale = 1.0 / sw.lengthManhattan();

		if ( scale !== Infinity ) {

			sw.multiplyScalar( scale );

		} else {

			sw.set( 1 ); // this will be normalized by the shader anyway

		}

	}

};

THREE.SkinnedMesh.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );

	THREE.Mesh.prototype.clone.call( this, object );

	return object;

};

THREE.SkinnedMesh.offsetMatrix = new THREE.Matrix4();
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.MorphAnimMesh = function ( geometry, material ) {

	THREE.Mesh.call( this, geometry, material );

	// API

	this.duration = 1000; // milliseconds
	this.mirroredLoop = false;
	this.time = 0;

	// internals

	this.lastKeyframe = 0;
	this.currentKeyframe = 0;

	this.direction = 1;
	this.directionBackwards = false;

	this.setFrameRange( 0, this.geometry.morphTargets.length - 1 );

};

THREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );

THREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {

	this.startKeyframe = start;
	this.endKeyframe = end;

	this.length = this.endKeyframe - this.startKeyframe + 1;

};

THREE.MorphAnimMesh.prototype.setDirectionForward = function () {

	this.direction = 1;
	this.directionBackwards = false;

};

THREE.MorphAnimMesh.prototype.setDirectionBackward = function () {

	this.direction = -1;
	this.directionBackwards = true;

};

THREE.MorphAnimMesh.prototype.parseAnimations = function () {

	var geometry = this.geometry;

	if ( ! geometry.animations ) geometry.animations = {};

	var firstAnimation, animations = geometry.animations;

	var pattern = /([a-z]+)(\d+)/;

	for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {

		var morph = geometry.morphTargets[ i ];
		var parts = morph.name.match( pattern );

		if ( parts && parts.length > 1 ) {

			var label = parts[ 1 ];
			var num = parts[ 2 ];

			if ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: -Infinity };

			var animation = animations[ label ];

			if ( i < animation.start ) animation.start = i;
			if ( i > animation.end ) animation.end = i;

			if ( ! firstAnimation ) firstAnimation = label;

		}

	}

	geometry.firstAnimation = firstAnimation;

};

THREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {

	if ( ! this.geometry.animations ) this.geometry.animations = {};

	this.geometry.animations[ label ] = { start: start, end: end };

};

THREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {

	var animation = this.geometry.animations[ label ];

	if ( animation ) {

		this.setFrameRange( animation.start, animation.end );
		this.duration = 1000 * ( ( animation.end - animation.start ) / fps );
		this.time = 0;

	} else {

		console.warn( "animation[" + label + "] undefined" );

	}

};

THREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {

	var frameTime = this.duration / this.length;

	this.time += this.direction * delta;

	if ( this.mirroredLoop ) {

		if ( this.time > this.duration || this.time < 0 ) {

			this.direction *= -1;

			if ( this.time > this.duration ) {

				this.time = this.duration;
				this.directionBackwards = true;

			}

			if ( this.time < 0 ) {

				this.time = 0;
				this.directionBackwards = false;

			}

		}

	} else {

		this.time = this.time % this.duration;

		if ( this.time < 0 ) this.time += this.duration;

	}

	var keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );

	if ( keyframe !== this.currentKeyframe ) {

		this.morphTargetInfluences[ this.lastKeyframe ] = 0;
		this.morphTargetInfluences[ this.currentKeyframe ] = 1;

		this.morphTargetInfluences[ keyframe ] = 0;

		this.lastKeyframe = this.currentKeyframe;
		this.currentKeyframe = keyframe;

	}

	var mix = ( this.time % frameTime ) / frameTime;

	if ( this.directionBackwards ) {

		mix = 1 - mix;

	}

	this.morphTargetInfluences[ this.currentKeyframe ] = mix;
	this.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;

};

THREE.MorphAnimMesh.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );

	object.duration = this.duration;
	object.mirroredLoop = this.mirroredLoop;
	object.time = this.time;

	object.lastKeyframe = this.lastKeyframe;
	object.currentKeyframe = this.currentKeyframe;

	object.direction = this.direction;
	object.directionBackwards = this.directionBackwards;

	THREE.Mesh.prototype.clone.call( this, object );

	return object;

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Ribbon = function ( geometry, material ) {

	THREE.Object3D.call( this );

	this.geometry = geometry;
	this.material = material;

};

THREE.Ribbon.prototype = Object.create( THREE.Object3D.prototype );

THREE.Ribbon.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.Ribbon( this.geometry, this.material );

	THREE.Object3D.prototype.clone.call( this, object );

	return object;

};
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.LOD = function () {

	THREE.Object3D.call( this );

	this.LODs = [];

};


THREE.LOD.prototype = Object.create( THREE.Object3D.prototype );

THREE.LOD.prototype.addLevel = function ( object3D, visibleAtDistance ) {

	if ( visibleAtDistance === undefined ) {

		visibleAtDistance = 0;

	}

	visibleAtDistance = Math.abs( visibleAtDistance );

	for ( var l = 0; l < this.LODs.length; l ++ ) {

		if ( visibleAtDistance < this.LODs[ l ].visibleAtDistance ) {

			break;

		}

	}

	this.LODs.splice( l, 0, { visibleAtDistance: visibleAtDistance, object3D: object3D } );
	this.add( object3D );

};

THREE.LOD.prototype.update = function ( camera ) {

	if ( this.LODs.length > 1 ) {

		camera.matrixWorldInverse.getInverse( camera.matrixWorld );

		var inverse  = camera.matrixWorldInverse;
		var distance = -( inverse.elements[2] * this.matrixWorld.elements[12] + inverse.elements[6] * this.matrixWorld.elements[13] + inverse.elements[10] * this.matrixWorld.elements[14] + inverse.elements[14] );

		this.LODs[ 0 ].object3D.visible = true;

		for ( var l = 1; l < this.LODs.length; l ++ ) {

			if( distance >= this.LODs[ l ].visibleAtDistance ) {

				this.LODs[ l - 1 ].object3D.visible = false;
				this.LODs[ l     ].object3D.visible = true;

			} else {

				break;

			}

		}

		for( ; l < this.LODs.length; l ++ ) {

			this.LODs[ l ].object3D.visible = false;

		}

	}

};

THREE.LOD.prototype.clone = function () {

	// TODO

};
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Sprite = function ( material ) {

	THREE.Object3D.call( this );

	this.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();

	this.rotation3d = this.rotation;
	this.rotation = 0;

};

THREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );

/*
 * Custom update matrix
 */

THREE.Sprite.prototype.updateMatrix = function () {

	this.matrix.setPosition( this.position );

	this.rotation3d.set( 0, 0, this.rotation );
	this.matrix.setRotationFromEuler( this.rotation3d );

	if ( this.scale.x !== 1 || this.scale.y !== 1 ) {

		this.matrix.scale( this.scale );

	}

	this.matrixWorldNeedsUpdate = true;

};

THREE.Sprite.prototype.clone = function ( object ) {

	if ( object === undefined ) object = new THREE.Sprite( this.material );

	THREE.Object3D.prototype.clone.call( this, object );

	return object;

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.Scene = function () {

	THREE.Object3D.call( this );

	this.fog = null;
	this.overrideMaterial = null;

	this.matrixAutoUpdate = false;

	this.__objects = [];
	this.__lights = [];

	this.__objectsAdded = [];
	this.__objectsRemoved = [];

};

THREE.Scene.prototype = Object.create( THREE.Object3D.prototype );

THREE.Scene.prototype.__addObject = function ( object ) {

	if ( object instanceof THREE.Light ) {

		if ( this.__lights.indexOf( object ) === - 1 ) {

			this.__lights.push( object );

		}

		if ( object.target && object.target.parent === undefined ) {

			this.add( object.target );

		}

	} else if ( !( object instanceof THREE.Camera || object instanceof THREE.Bone ) ) {

		if ( this.__objects.indexOf( object ) === - 1 ) {

			this.__objects.push( object );
			this.__objectsAdded.push( object );

			// check if previously removed

			var i = this.__objectsRemoved.indexOf( object );

			if ( i !== -1 ) {

				this.__objectsRemoved.splice( i, 1 );

			}

		}

	}

	for ( var c = 0; c < object.children.length; c ++ ) {

		this.__addObject( object.children[ c ] );

	}

};

THREE.Scene.prototype.__removeObject = function ( object ) {

	if ( object instanceof THREE.Light ) {

		var i = this.__lights.indexOf( object );

		if ( i !== -1 ) {

			this.__lights.splice( i, 1 );

		}

	} else if ( !( object instanceof THREE.Camera ) ) {

		var i = this.__objects.indexOf( object );

		if( i !== -1 ) {

			this.__objects.splice( i, 1 );
			this.__objectsRemoved.push( object );

			// check if previously added

			var ai = this.__objectsAdded.indexOf( object );

			if ( ai !== -1 ) {

				this.__objectsAdded.splice( ai, 1 );

			}

		}

	}

	for ( var c = 0; c < object.children.length; c ++ ) {

		this.__removeObject( object.children[ c ] );

	}

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Fog = function ( hex, near, far ) {

	this.name = '';

	this.color = new THREE.Color( hex );

	this.near = ( near !== undefined ) ? near : 1;
	this.far = ( far !== undefined ) ? far : 1000;

};

THREE.Fog.prototype.clone = function () {

	return new THREE.Fog( this.color.getHex(), this.near, this.far );

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.FogExp2 = function ( hex, density ) {

	this.name = '';
	this.color = new THREE.Color( hex );
	this.density = ( density !== undefined ) ? density : 0.00025;

};

THREE.FogExp2.prototype.clone = function () {

	return new THREE.FogExp2( this.color.getHex(), this.density );

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.CanvasRenderer = function ( parameters ) {

	console.log( 'THREE.CanvasRenderer', THREE.REVISION );

	var smoothstep = THREE.Math.smoothstep;

	parameters = parameters || {};

	var _this = this,
	_renderData, _elements, _lights,
	_projector = new THREE.Projector(),

	_canvas = parameters.canvas !== undefined
			? parameters.canvas
			: document.createElement( 'canvas' ),

	_canvasWidth, _canvasHeight, _canvasWidthHalf, _canvasHeightHalf,
	_context = _canvas.getContext( '2d' ),

	_clearColor = new THREE.Color( 0x000000 ),
	_clearOpacity = 0,

	_contextGlobalAlpha = 1,
	_contextGlobalCompositeOperation = 0,
	_contextStrokeStyle = null,
	_contextFillStyle = null,
	_contextLineWidth = null,
	_contextLineCap = null,
	_contextLineJoin = null,
	_contextDashSize = null,
	_contextGapSize = 0,

	_v1, _v2, _v3, _v4,
	_v5 = new THREE.RenderableVertex(),
	_v6 = new THREE.RenderableVertex(),

	_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,
	_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,

	_color = new THREE.Color(),
	_color1 = new THREE.Color(),
	_color2 = new THREE.Color(),
	_color3 = new THREE.Color(),
	_color4 = new THREE.Color(),

	_diffuseColor = new THREE.Color(),
	_emissiveColor = new THREE.Color(),

	_lightColor = new THREE.Color(),

	_patterns = {}, _imagedatas = {},

	_near, _far,

	_image, _uvs,
	_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,

	_clipBox = new THREE.Box2(),
	_clearBox = new THREE.Box2(),
	_elemBox = new THREE.Box2(),

	_ambientLight = new THREE.Color(),
	_directionalLights = new THREE.Color(),
	_pointLights = new THREE.Color(),

	_vector3 = new THREE.Vector3(), // Needed for PointLight

	_pixelMap, _pixelMapContext, _pixelMapImage, _pixelMapData,
	_gradientMap, _gradientMapContext, _gradientMapQuality = 16;

	_pixelMap = document.createElement( 'canvas' );
	_pixelMap.width = _pixelMap.height = 2;

	_pixelMapContext = _pixelMap.getContext( '2d' );
	_pixelMapContext.fillStyle = 'rgba(0,0,0,1)';
	_pixelMapContext.fillRect( 0, 0, 2, 2 );

	_pixelMapImage = _pixelMapContext.getImageData( 0, 0, 2, 2 );
	_pixelMapData = _pixelMapImage.data;

	_gradientMap = document.createElement( 'canvas' );
	_gradientMap.width = _gradientMap.height = _gradientMapQuality;

	_gradientMapContext = _gradientMap.getContext( '2d' );
	_gradientMapContext.translate( - _gradientMapQuality / 2, - _gradientMapQuality / 2 );
	_gradientMapContext.scale( _gradientMapQuality, _gradientMapQuality );

	_gradientMapQuality --; // Fix UVs

	// dash+gap fallbacks for Firefox and everything else

	if ( _context.setLineDash === undefined ) {

		if ( _context.mozDash !== undefined ) {

			_context.setLineDash = function ( values ) {

				_context.mozDash = values[ 0 ] !== null ? values : null;

			}

		} else {

			_context.setLineDash = function () {}

		}

	}

	this.domElement = _canvas;

	this.devicePixelRatio = parameters.devicePixelRatio !== undefined
				? parameters.devicePixelRatio
				: window.devicePixelRatio !== undefined
					? window.devicePixelRatio
					: 1;

	this.autoClear = true;
	this.sortObjects = true;
	this.sortElements = true;

	this.info = {

		render: {

			vertices: 0,
			faces: 0

		}

	}

	// WebGLRenderer compatibility

	this.supportsVertexTextures = function () {};
	this.setFaceCulling = function () {};

	this.setSize = function ( width, height ) {

		_canvasWidth = width * this.devicePixelRatio;
		_canvasHeight = height * this.devicePixelRatio;

		_canvasWidthHalf = Math.floor( _canvasWidth / 2 );
		_canvasHeightHalf = Math.floor( _canvasHeight / 2 );

		_canvas.width = _canvasWidth;
		_canvas.height = _canvasHeight;

		_canvas.style.width = width + 'px';
		_canvas.style.height = height + 'px';

		_clipBox.set(
			new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),
			new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )
		);

		_clearBox.set(
			new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),
			new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )
		);

		_contextGlobalAlpha = 1;
		_contextGlobalCompositeOperation = 0;
		_contextStrokeStyle = null;
		_contextFillStyle = null;
		_contextLineWidth = null;
		_contextLineCap = null;
		_contextLineJoin = null;

	};

	this.setClearColor = function ( color, opacity ) {

		_clearColor.copy( color );
		_clearOpacity = opacity !== undefined ? opacity : 1;

		_clearBox.set(
			new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),
			new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )
		);

	};

	this.setClearColorHex = function ( hex, opacity ) {

		_clearColor.setHex( hex );
		_clearOpacity = opacity !== undefined ? opacity : 1;

		_clearBox.set(
			new THREE.Vector2( - _canvasWidthHalf, - _canvasHeightHalf ),
			new THREE.Vector2( _canvasWidthHalf, _canvasHeightHalf )
		);

	};

	this.getMaxAnisotropy  = function () {

		return 0;

	};

	this.clear = function () {

		_context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );

		if ( _clearBox.empty() === false ) {

			_clearBox.intersect( _clipBox );
			_clearBox.expandByScalar( 2 );

			if ( _clearOpacity < 1 ) {

				_context.clearRect(
					_clearBox.min.x | 0,
					_clearBox.min.y | 0,
					( _clearBox.max.x - _clearBox.min.x ) | 0,
					( _clearBox.max.y - _clearBox.min.y ) | 0
				);

			}

			if ( _clearOpacity > 0 ) {

				setBlending( THREE.NormalBlending );
				setOpacity( 1 );

				setFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearOpacity + ')' );

				_context.fillRect(
					_clearBox.min.x | 0,
					_clearBox.min.y | 0,
					( _clearBox.max.x - _clearBox.min.x ) | 0,
					( _clearBox.max.y - _clearBox.min.y ) | 0
				);

			}

			_clearBox.makeEmpty();

		}


	};

	this.render = function ( scene, camera ) {

		if ( camera instanceof THREE.Camera === false ) {

			console.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );
			return;

		}

		if ( this.autoClear === true ) {

			this.clear();

		}

		_context.setTransform( 1, 0, 0, - 1, _canvasWidthHalf, _canvasHeightHalf );

		_this.info.render.vertices = 0;
		_this.info.render.faces = 0;

		_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );
		_elements = _renderData.elements;
		_lights = _renderData.lights;

		/* DEBUG
		setFillStyle( 'rgba( 0, 255, 255, 0.5 )' );
		_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );
		*/

		calculateLights();

		for ( var e = 0, el = _elements.length; e < el; e++ ) {

			var element = _elements[ e ];

			var material = element.material;

			if ( material === undefined || material.visible === false ) continue;

			_elemBox.makeEmpty();

			if ( element instanceof THREE.RenderableParticle ) {

				_v1 = element;
				_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;

				renderParticle( _v1, element, material );

			} else if ( element instanceof THREE.RenderableLine ) {

				_v1 = element.v1; _v2 = element.v2;

				_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;
				_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;

				_elemBox.setFromPoints( [ _v1.positionScreen, _v2.positionScreen ] );

				if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {

					renderLine( _v1, _v2, element, material );

				}

			} else if ( element instanceof THREE.RenderableFace3 ) {

				_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;

				if ( _v1.positionScreen.z < -1 || _v1.positionScreen.z > 1 ) continue;
				if ( _v2.positionScreen.z < -1 || _v2.positionScreen.z > 1 ) continue;
				if ( _v3.positionScreen.z < -1 || _v3.positionScreen.z > 1 ) continue;

				_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;
				_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;
				_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;

				if ( material.overdraw === true ) {

					expand( _v1.positionScreen, _v2.positionScreen );
					expand( _v2.positionScreen, _v3.positionScreen );
					expand( _v3.positionScreen, _v1.positionScreen );

				}

				_elemBox.setFromPoints( [ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ] );

				renderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );

			} else if ( element instanceof THREE.RenderableFace4 ) {

				_v1 = element.v1; _v2 = element.v2; _v3 = element.v3; _v4 = element.v4;

				if ( _v1.positionScreen.z < -1 || _v1.positionScreen.z > 1 ) continue;
				if ( _v2.positionScreen.z < -1 || _v2.positionScreen.z > 1 ) continue;
				if ( _v3.positionScreen.z < -1 || _v3.positionScreen.z > 1 ) continue;
				if ( _v4.positionScreen.z < -1 || _v4.positionScreen.z > 1 ) continue;

				_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;
				_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;
				_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;
				_v4.positionScreen.x *= _canvasWidthHalf; _v4.positionScreen.y *= _canvasHeightHalf;

				_v5.positionScreen.copy( _v2.positionScreen );
				_v6.positionScreen.copy( _v4.positionScreen );

				if ( material.overdraw === true ) {

					expand( _v1.positionScreen, _v2.positionScreen );
					expand( _v2.positionScreen, _v4.positionScreen );
					expand( _v4.positionScreen, _v1.positionScreen );

					expand( _v3.positionScreen, _v5.positionScreen );
					expand( _v3.positionScreen, _v6.positionScreen );

				}

				_elemBox.setFromPoints( [ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen, _v4.positionScreen ] );

				renderFace4( _v1, _v2, _v3, _v4, _v5, _v6, element, material, scene );

			}

			/* DEBUG
			setLineWidth( 1 );
			setStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );
			_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );
			*/

			_clearBox.union( _elemBox );

		}

		/* DEBUG
		setLineWidth( 1 );
		setStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );
		_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );
		*/

		_context.setTransform( 1, 0, 0, 1, 0, 0 );

		//

		function calculateLights() {

			_ambientLight.setRGB( 0, 0, 0 );
			_directionalLights.setRGB( 0, 0, 0 );
			_pointLights.setRGB( 0, 0, 0 );

			for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {

				var light = _lights[ l ];
				var lightColor = light.color;

				if ( light instanceof THREE.AmbientLight ) {

					_ambientLight.add( lightColor );

				} else if ( light instanceof THREE.DirectionalLight ) {

					// for particles

					_directionalLights.add( lightColor );

				} else if ( light instanceof THREE.PointLight ) {

					// for particles

					_pointLights.add( lightColor );

				}

			}

		}

		function calculateLight( position, normal, color ) {

			for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {

				var light = _lights[ l ];

				_lightColor.copy( light.color );

				if ( light instanceof THREE.DirectionalLight ) {

					var lightPosition = _vector3.getPositionFromMatrix( light.matrixWorld ).normalize();

					var amount = normal.dot( lightPosition );

					if ( amount <= 0 ) continue;

					amount *= light.intensity;

					color.add( _lightColor.multiplyScalar( amount ) );

				} else if ( light instanceof THREE.PointLight ) {

					var lightPosition = _vector3.getPositionFromMatrix( light.matrixWorld );

					var amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );

					if ( amount <= 0 ) continue;

					amount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );

					if ( amount == 0 ) continue;

					amount *= light.intensity;

					color.add( _lightColor.multiplyScalar( amount ) );

				}

			}

		}

		function renderParticle( v1, element, material ) {

			setOpacity( material.opacity );
			setBlending( material.blending );

			var width, height, scaleX, scaleY,
			bitmap, bitmapWidth, bitmapHeight;

			if ( material instanceof THREE.ParticleBasicMaterial ) {

				if ( material.map === null ) {

					scaleX = element.object.scale.x;
					scaleY = element.object.scale.y;

					// TODO: Be able to disable this

					scaleX *= element.scale.x * _canvasWidthHalf;
					scaleY *= element.scale.y * _canvasHeightHalf;

					_elemBox.min.set( v1.x - scaleX, v1.y - scaleY );
					_elemBox.max.set( v1.x + scaleX, v1.y + scaleY );

					if ( _clipBox.isIntersectionBox( _elemBox ) === false ) {

						return;

					}

					setFillStyle( material.color.getStyle() );

					_context.save();
					_context.translate( v1.x, v1.y );
					_context.rotate( - element.rotation );
					_context.scale( scaleX, scaleY );
					_context.fillRect( -1, -1, 2, 2 );
					_context.restore();

				} else {

					bitmap = material.map.image;
					bitmapWidth = bitmap.width >> 1;
					bitmapHeight = bitmap.height >> 1;

					scaleX = element.scale.x * _canvasWidthHalf;
					scaleY = element.scale.y * _canvasHeightHalf;

					width = scaleX * bitmapWidth;
					height = scaleY * bitmapHeight;

					// TODO: Rotations break this...

					_elemBox.min.set( v1.x - width, v1.y - height );
					_elemBox.max.set( v1.x + width, v1.y + height );

					if ( _clipBox.isIntersectionBox( _elemBox ) === false ) {

						return;

					}

					_context.save();
					_context.translate( v1.x, v1.y );
					_context.rotate( - element.rotation );
					_context.scale( scaleX, - scaleY );

					_context.translate( - bitmapWidth, - bitmapHeight );
					_context.drawImage( bitmap, 0, 0 );
					_context.restore();

				}

				/* DEBUG
				setStrokeStyle( 'rgb(255,255,0)' );
				_context.beginPath();
				_context.moveTo( v1.x - 10, v1.y );
				_context.lineTo( v1.x + 10, v1.y );
				_context.moveTo( v1.x, v1.y - 10 );
				_context.lineTo( v1.x, v1.y + 10 );
				_context.stroke();
				*/

			} else if ( material instanceof THREE.ParticleCanvasMaterial ) {

				width = element.scale.x * _canvasWidthHalf;
				height = element.scale.y * _canvasHeightHalf;

				_elemBox.min.set( v1.x - width, v1.y - height );
				_elemBox.max.set( v1.x + width, v1.y + height );

				if ( _clipBox.isIntersectionBox( _elemBox ) === false ) {

					return;

				}

				setStrokeStyle( material.color.getStyle() );
				setFillStyle( material.color.getStyle() );

				_context.save();
				_context.translate( v1.x, v1.y );
				_context.rotate( - element.rotation );
				_context.scale( width, height );

				material.program( _context );

				_context.restore();

			}

		}

		function renderLine( v1, v2, element, material ) {

			setOpacity( material.opacity );
			setBlending( material.blending );

			_context.beginPath();
			_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );
			_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );

			if ( material instanceof THREE.LineBasicMaterial ) {

				setLineWidth( material.linewidth );
				setLineCap( material.linecap );
				setLineJoin( material.linejoin );
				setStrokeStyle( material.color.getStyle() );

				_context.stroke();
				_elemBox.expandByScalar( material.linewidth * 2 );

			} else if ( material instanceof THREE.LineDashedMaterial ) {

				setLineWidth( material.linewidth );
				setLineCap( material.linecap );
				setLineJoin( material.linejoin );
				setStrokeStyle( material.color.getStyle() );
				setDashAndGap( material.dashSize, material.gapSize );

				_context.stroke();

				_elemBox.expandByScalar( material.linewidth * 2 );

				setDashAndGap( null, null );

			}

		}

		function renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {

			_this.info.render.vertices += 3;
			_this.info.render.faces ++;

			setOpacity( material.opacity );
			setBlending( material.blending );

			_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;
			_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;
			_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;

			drawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );

			if ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {

				_diffuseColor.copy( material.color );
				_emissiveColor.copy( material.emissive );

				if ( material.vertexColors === THREE.FaceColors ) {

					_diffuseColor.multiply( element.color );

				}

				if ( material.wireframe === false && material.shading == THREE.SmoothShading && element.vertexNormalsLength == 3 ) {

					_color1.copy( _ambientLight );
					_color2.copy( _ambientLight );
					_color3.copy( _ambientLight );

					calculateLight( element.v1.positionWorld, element.vertexNormalsModel[ 0 ], _color1 );
					calculateLight( element.v2.positionWorld, element.vertexNormalsModel[ 1 ], _color2 );
					calculateLight( element.v3.positionWorld, element.vertexNormalsModel[ 2 ], _color3 );

					_color1.multiply( _diffuseColor ).add( _emissiveColor );
					_color2.multiply( _diffuseColor ).add( _emissiveColor );
					_color3.multiply( _diffuseColor ).add( _emissiveColor );
					_color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );

					_image = getGradientTexture( _color1, _color2, _color3, _color4 );

					clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );

				} else {

					_color.copy( _ambientLight );

					calculateLight( element.centroidModel, element.normalModel, _color );

					_color.multiply( _diffuseColor ).add( _emissiveColor );

					material.wireframe === true
						? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )
						: fillPath( _color );

				}

			} else if ( material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) {

				if ( material.map !== null ) {

					if ( material.map.mapping instanceof THREE.UVMapping ) {

						_uvs = element.uvs[ 0 ];
						patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );

					}


				} else if ( material.envMap !== null ) {

					if ( material.envMap.mapping instanceof THREE.SphericalReflectionMapping ) {

						_vector3.copy( element.vertexNormalsModelView[ uv1 ] );
						_uv1x = 0.5 * _vector3.x + 0.5;
						_uv1y = 0.5 * _vector3.y + 0.5;

						_vector3.copy( element.vertexNormalsModelView[ uv2 ] );
						_uv2x = 0.5 * _vector3.x + 0.5;
						_uv2y = 0.5 * _vector3.y + 0.5;

						_vector3.copy( element.vertexNormalsModelView[ uv3 ] );
						_uv3x = 0.5 * _vector3.x + 0.5;
						_uv3y = 0.5 * _vector3.y + 0.5;

						patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );

					}/* else if ( material.envMap.mapping == THREE.SphericalRefractionMapping ) {



					}*/


				} else {

					_color.copy( material.color );

					if ( material.vertexColors === THREE.FaceColors ) {

						_color.multiply( element.color );

					}

					material.wireframe === true
						? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )
						: fillPath( _color );

				}

			} else if ( material instanceof THREE.MeshDepthMaterial ) {

				_near = camera.near;
				_far = camera.far;

				_color1.r = _color1.g = _color1.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _near, _far );
				_color2.r = _color2.g = _color2.b = 1 - smoothstep( v2.positionScreen.z * v2.positionScreen.w, _near, _far );
				_color3.r = _color3.g = _color3.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );
				_color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );

				_image = getGradientTexture( _color1, _color2, _color3, _color4 );

				clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );

			} else if ( material instanceof THREE.MeshNormalMaterial ) {

				var normal;

				if ( material.shading == THREE.FlatShading ) {

					normal = element.normalModelView;

					_color.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					material.wireframe === true
						? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )
						: fillPath( _color );

				} else if ( material.shading == THREE.SmoothShading ) {

					normal = element.vertexNormalsModelView[ uv1 ];
					_color1.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					normal = element.vertexNormalsModelView[ uv2 ];
					_color2.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					normal = element.vertexNormalsModelView[ uv3 ];
					_color3.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					_color4.addColors( _color2, _color3 ).multiplyScalar( 0.5 );

					_image = getGradientTexture( _color1, _color2, _color3, _color4 );

					clipImage( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, 0, 0, 1, 0, 0, 1, _image );

				}

			}

		}

		function renderFace4( v1, v2, v3, v4, v5, v6, element, material ) {

			_this.info.render.vertices += 4;
			_this.info.render.faces ++;

			setOpacity( material.opacity );
			setBlending( material.blending );

			if ( ( material.map !== undefined && material.map !== null ) || ( material.envMap !== undefined && material.envMap !== null ) ) {

				// Let renderFace3() handle this

				renderFace3( v1, v2, v4, 0, 1, 3, element, material );
				renderFace3( v5, v3, v6, 1, 2, 3, element, material );

				return;

			}

			_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;
			_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;
			_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;
			_v4x = v4.positionScreen.x; _v4y = v4.positionScreen.y;
			_v5x = v5.positionScreen.x; _v5y = v5.positionScreen.y;
			_v6x = v6.positionScreen.x; _v6y = v6.positionScreen.y;

			if ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) {

				_diffuseColor.copy( material.color );
				_emissiveColor.copy( material.emissive );

				if ( material.vertexColors === THREE.FaceColors ) {

					_diffuseColor.multiply( element.color );

				}

				if ( material.wireframe === false && material.shading == THREE.SmoothShading && element.vertexNormalsLength == 4 ) {

					_color1.copy( _ambientLight );
					_color2.copy( _ambientLight );
					_color3.copy( _ambientLight );
					_color4.copy( _ambientLight );

					calculateLight( element.v1.positionWorld, element.vertexNormalsModel[ 0 ], _color1 );
					calculateLight( element.v2.positionWorld, element.vertexNormalsModel[ 1 ], _color2 );
					calculateLight( element.v4.positionWorld, element.vertexNormalsModel[ 3 ], _color3 );
					calculateLight( element.v3.positionWorld, element.vertexNormalsModel[ 2 ], _color4 );

					_color1.multiply( _diffuseColor ).add( _emissiveColor );
					_color2.multiply( _diffuseColor ).add( _emissiveColor );
					_color3.multiply( _diffuseColor ).add( _emissiveColor );
					_color4.multiply( _diffuseColor ).add( _emissiveColor );

					_image = getGradientTexture( _color1, _color2, _color3, _color4 );

					// TODO: UVs are incorrect, v4->v3?

					drawTriangle( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y );
					clipImage( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y, 0, 0, 1, 0, 0, 1, _image );

					drawTriangle( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y );
					clipImage( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y, 1, 0, 1, 1, 0, 1, _image );

				} else {

					_color.copy( _ambientLight );

					calculateLight( element.centroidModel, element.normalModel, _color );

					_color.multiply( _diffuseColor ).add( _emissiveColor );

					drawQuad( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y );

					material.wireframe === true
						? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )
						: fillPath( _color );

				}

			} else if ( material instanceof THREE.MeshBasicMaterial ) {

				_color.copy( material.color );

				if ( material.vertexColors === THREE.FaceColors ) {

					_color.multiply( element.color );

				}

				drawQuad( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y );

				material.wireframe === true
					? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )
					: fillPath( _color );

			} else if ( material instanceof THREE.MeshNormalMaterial ) {

				var normal;

				if ( material.shading == THREE.FlatShading ) {

					normal = element.normalModelView;
					_color.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					drawQuad( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y );

					material.wireframe === true
						? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )
						: fillPath( _color );

				} else if ( material.shading == THREE.SmoothShading ) {

					normal = element.vertexNormalsModelView[ 0 ];
					_color1.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					normal = element.vertexNormalsModelView[ 1 ];
					_color2.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					normal = element.vertexNormalsModelView[ 3 ];
					_color3.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					normal = element.vertexNormalsModelView[ 2 ];
					_color4.setRGB( normal.x, normal.y, normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );

					_image = getGradientTexture( _color1, _color2, _color3, _color4 );

					drawTriangle( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y );
					clipImage( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y, 0, 0, 1, 0, 0, 1, _image );

					drawTriangle( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y );
					clipImage( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y, 1, 0, 1, 1, 0, 1, _image );

				}

			} else if ( material instanceof THREE.MeshDepthMaterial ) {

				_near = camera.near;
				_far = camera.far;

				_color1.r = _color1.g = _color1.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _near, _far );
				_color2.r = _color2.g = _color2.b = 1 - smoothstep( v2.positionScreen.z * v2.positionScreen.w, _near, _far );
				_color3.r = _color3.g = _color3.b = 1 - smoothstep( v4.positionScreen.z * v4.positionScreen.w, _near, _far );
				_color4.r = _color4.g = _color4.b = 1 - smoothstep( v3.positionScreen.z * v3.positionScreen.w, _near, _far );

				_image = getGradientTexture( _color1, _color2, _color3, _color4 );

				// TODO: UVs are incorrect, v4->v3?

				drawTriangle( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y );
				clipImage( _v1x, _v1y, _v2x, _v2y, _v4x, _v4y, 0, 0, 1, 0, 0, 1, _image );

				drawTriangle( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y );
				clipImage( _v5x, _v5y, _v3x, _v3y, _v6x, _v6y, 1, 0, 1, 1, 0, 1, _image );

			}

		}

		//

		function drawTriangle( x0, y0, x1, y1, x2, y2 ) {

			_context.beginPath();
			_context.moveTo( x0, y0 );
			_context.lineTo( x1, y1 );
			_context.lineTo( x2, y2 );
			_context.closePath();

		}

		function drawQuad( x0, y0, x1, y1, x2, y2, x3, y3 ) {

			_context.beginPath();
			_context.moveTo( x0, y0 );
			_context.lineTo( x1, y1 );
			_context.lineTo( x2, y2 );
			_context.lineTo( x3, y3 );
			_context.closePath();

		}

		function strokePath( color, linewidth, linecap, linejoin ) {

			setLineWidth( linewidth );
			setLineCap( linecap );
			setLineJoin( linejoin );
			setStrokeStyle( color.getStyle() );

			_context.stroke();

			_elemBox.expandByScalar( linewidth * 2 );

		}

		function fillPath( color ) {

			setFillStyle( color.getStyle() );
			_context.fill();

		}

		function patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {

			if ( texture instanceof THREE.DataTexture || texture.image === undefined || texture.image.width == 0 ) return;

			if ( texture.needsUpdate === true ) {

				var repeatX = texture.wrapS == THREE.RepeatWrapping;
				var repeatY = texture.wrapT == THREE.RepeatWrapping;

				_patterns[ texture.id ] = _context.createPattern(
					texture.image, repeatX === true && repeatY === true
						? 'repeat'
						: repeatX === true && repeatY === false
							? 'repeat-x'
							: repeatX === false && repeatY === true
								? 'repeat-y'
								: 'no-repeat'
				);

				texture.needsUpdate = false;

			}

			_patterns[ texture.id ] === undefined
				? setFillStyle( 'rgba(0,0,0,1)' )
				: setFillStyle( _patterns[ texture.id ] );

			// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120

			var a, b, c, d, e, f, det, idet,
			offsetX = texture.offset.x / texture.repeat.x,
			offsetY = texture.offset.y / texture.repeat.y,
			width = texture.image.width * texture.repeat.x,
			height = texture.image.height * texture.repeat.y;

			u0 = ( u0 + offsetX ) * width;
			v0 = ( 1.0 - v0 + offsetY ) * height;

			u1 = ( u1 + offsetX ) * width;
			v1 = ( 1.0 - v1 + offsetY ) * height;

			u2 = ( u2 + offsetX ) * width;
			v2 = ( 1.0 - v2 + offsetY ) * height;

			x1 -= x0; y1 -= y0;
			x2 -= x0; y2 -= y0;

			u1 -= u0; v1 -= v0;
			u2 -= u0; v2 -= v0;

			det = u1 * v2 - u2 * v1;

			if ( det === 0 ) {

				if ( _imagedatas[ texture.id ] === undefined ) {

					var canvas = document.createElement( 'canvas' )
					canvas.width = texture.image.width;
					canvas.height = texture.image.height;

					var context = canvas.getContext( '2d' );
					context.drawImage( texture.image, 0, 0 );

					_imagedatas[ texture.id ] = context.getImageData( 0, 0, texture.image.width, texture.image.height ).data;

				}

				var data = _imagedatas[ texture.id ];
				var index = ( Math.floor( u0 ) + Math.floor( v0 ) * texture.image.width ) * 4;

				_color.setRGB( data[ index ] / 255, data[ index + 1 ] / 255, data[ index + 2 ] / 255 );
				fillPath( _color );

				return;

			}

			idet = 1 / det;

			a = ( v2 * x1 - v1 * x2 ) * idet;
			b = ( v2 * y1 - v1 * y2 ) * idet;
			c = ( u1 * x2 - u2 * x1 ) * idet;
			d = ( u1 * y2 - u2 * y1 ) * idet;

			e = x0 - a * u0 - c * v0;
			f = y0 - b * u0 - d * v0;

			_context.save();
			_context.transform( a, b, c, d, e, f );
			_context.fill();
			_context.restore();

		}

		function clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {

			// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120

			var a, b, c, d, e, f, det, idet,
			width = image.width - 1,
			height = image.height - 1;

			u0 *= width; v0 *= height;
			u1 *= width; v1 *= height;
			u2 *= width; v2 *= height;

			x1 -= x0; y1 -= y0;
			x2 -= x0; y2 -= y0;

			u1 -= u0; v1 -= v0;
			u2 -= u0; v2 -= v0;

			det = u1 * v2 - u2 * v1;

			idet = 1 / det;

			a = ( v2 * x1 - v1 * x2 ) * idet;
			b = ( v2 * y1 - v1 * y2 ) * idet;
			c = ( u1 * x2 - u2 * x1 ) * idet;
			d = ( u1 * y2 - u2 * y1 ) * idet;

			e = x0 - a * u0 - c * v0;
			f = y0 - b * u0 - d * v0;

			_context.save();
			_context.transform( a, b, c, d, e, f );
			_context.clip();
			_context.drawImage( image, 0, 0 );
			_context.restore();

		}

		function getGradientTexture( color1, color2, color3, color4 ) {

			// http://mrdoob.com/blog/post/710

			_pixelMapData[ 0 ] = ( color1.r * 255 ) | 0;
			_pixelMapData[ 1 ] = ( color1.g * 255 ) | 0;
			_pixelMapData[ 2 ] = ( color1.b * 255 ) | 0;

			_pixelMapData[ 4 ] = ( color2.r * 255 ) | 0;
			_pixelMapData[ 5 ] = ( color2.g * 255 ) | 0;
			_pixelMapData[ 6 ] = ( color2.b * 255 ) | 0;

			_pixelMapData[ 8 ] = ( color3.r * 255 ) | 0;
			_pixelMapData[ 9 ] = ( color3.g * 255 ) | 0;
			_pixelMapData[ 10 ] = ( color3.b * 255 ) | 0;

			_pixelMapData[ 12 ] = ( color4.r * 255 ) | 0;
			_pixelMapData[ 13 ] = ( color4.g * 255 ) | 0;
			_pixelMapData[ 14 ] = ( color4.b * 255 ) | 0;

			_pixelMapContext.putImageData( _pixelMapImage, 0, 0 );
			_gradientMapContext.drawImage( _pixelMap, 0, 0 );

			return _gradientMap;

		}

		// Hide anti-alias gaps

		function expand( v1, v2 ) {

			var x = v2.x - v1.x, y =  v2.y - v1.y,
			det = x * x + y * y, idet;

			if ( det === 0 ) return;

			idet = 1 / Math.sqrt( det );

			x *= idet; y *= idet;

			v2.x += x; v2.y += y;
			v1.x -= x; v1.y -= y;

		}
	};

	// Context cached methods.

	function setOpacity( value ) {

		if ( _contextGlobalAlpha !== value ) {

			_context.globalAlpha = value;
			_contextGlobalAlpha = value;

		}

	}

	function setBlending( value ) {

		if ( _contextGlobalCompositeOperation !== value ) {

			if ( value === THREE.NormalBlending ) {

				_context.globalCompositeOperation = 'source-over';

			} else if ( value === THREE.AdditiveBlending ) {

				_context.globalCompositeOperation = 'lighter';

			} else if ( value === THREE.SubtractiveBlending ) {

				_context.globalCompositeOperation = 'darker';

			}

			_contextGlobalCompositeOperation = value;

		}

	}

	function setLineWidth( value ) {

		if ( _contextLineWidth !== value ) {

			_context.lineWidth = value;
			_contextLineWidth = value;

		}

	}

	function setLineCap( value ) {

		// "butt", "round", "square"

		if ( _contextLineCap !== value ) {

			_context.lineCap = value;
			_contextLineCap = value;

		}

	}

	function setLineJoin( value ) {

		// "round", "bevel", "miter"

		if ( _contextLineJoin !== value ) {

			_context.lineJoin = value;
			_contextLineJoin = value;

		}

	}

	function setStrokeStyle( value ) {

		if ( _contextStrokeStyle !== value ) {

			_context.strokeStyle = value;
			_contextStrokeStyle = value;

		}

	}

	function setFillStyle( value ) {

		if ( _contextFillStyle !== value ) {

			_context.fillStyle = value;
			_contextFillStyle = value;

		}

	}

	function setDashAndGap( dashSizeValue, gapSizeValue ) {

		if ( _contextDashSize !== dashSizeValue || _contextGapSize !== gapSizeValue ) {

			_context.setLineDash( [ dashSizeValue, gapSizeValue ] );
			_contextDashSize = dashSizeValue;
			_contextGapSize = gapSizeValue;

		}

	}

};
/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 */

THREE.ShaderChunk = {

	// FOG

	fog_pars_fragment: [

		"#ifdef USE_FOG",

			"uniform vec3 fogColor;",

			"#ifdef FOG_EXP2",

				"uniform float fogDensity;",

			"#else",

				"uniform float fogNear;",
				"uniform float fogFar;",

			"#endif",

		"#endif"

	].join("\n"),

	fog_fragment: [

		"#ifdef USE_FOG",

			"float depth = gl_FragCoord.z / gl_FragCoord.w;",

			"#ifdef FOG_EXP2",

				"const float LOG2 = 1.442695;",
				"float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );",
				"fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );",

			"#else",

				"float fogFactor = smoothstep( fogNear, fogFar, depth );",

			"#endif",

			"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );",

		"#endif"

	].join("\n"),

	// ENVIRONMENT MAP

	envmap_pars_fragment: [

		"#ifdef USE_ENVMAP",

			"uniform float reflectivity;",
			"uniform samplerCube envMap;",
			"uniform float flipEnvMap;",
			"uniform int combine;",

			"#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )",

				"uniform bool useRefract;",
				"uniform float refractionRatio;",

			"#else",

				"varying vec3 vReflect;",

			"#endif",

		"#endif"

	].join("\n"),

	envmap_fragment: [

		"#ifdef USE_ENVMAP",

			"vec3 reflectVec;",

			"#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )",

				"vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );",

				"if ( useRefract ) {",

					"reflectVec = refract( cameraToVertex, normal, refractionRatio );",

				"} else { ",

					"reflectVec = reflect( cameraToVertex, normal );",

				"}",

			"#else",

				"reflectVec = vReflect;",

			"#endif",

			"#ifdef DOUBLE_SIDED",

				"float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );",
				"vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );",

			"#else",

				"vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );",

			"#endif",

			"#ifdef GAMMA_INPUT",

				"cubeColor.xyz *= cubeColor.xyz;",

			"#endif",

			"if ( combine == 1 ) {",

				"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );",

			"} else if ( combine == 2 ) {",

				"gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;",

			"} else {",

				"gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );",

			"}",

		"#endif"

	].join("\n"),

	envmap_pars_vertex: [

		"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )",

			"varying vec3 vReflect;",

			"uniform float refractionRatio;",
			"uniform bool useRefract;",

		"#endif"

	].join("\n"),

	worldpos_vertex : [

		"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )",

			"#ifdef USE_SKINNING",

				"vec4 worldPosition = modelMatrix * skinned;",

			"#endif",

			"#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )",

				"vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );",

			"#endif",

			"#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )",

				"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );",

			"#endif",

		"#endif"

	].join("\n"),

	envmap_vertex : [

		"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )",

			"vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;",
			"worldNormal = normalize( worldNormal );",

			"vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );",

			"if ( useRefract ) {",

				"vReflect = refract( cameraToVertex, worldNormal, refractionRatio );",

			"} else {",

				"vReflect = reflect( cameraToVertex, worldNormal );",

			"}",

		"#endif"

	].join("\n"),

	// COLOR MAP (particles)

	map_particle_pars_fragment: [

		"#ifdef USE_MAP",

			"uniform sampler2D map;",

		"#endif"

	].join("\n"),


	map_particle_fragment: [

		"#ifdef USE_MAP",

			"gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );",

		"#endif"

	].join("\n"),

	// COLOR MAP (triangles)

	map_pars_vertex: [

		"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )",

			"varying vec2 vUv;",
			"uniform vec4 offsetRepeat;",

		"#endif"

	].join("\n"),

	map_pars_fragment: [

		"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )",

			"varying vec2 vUv;",

		"#endif",

		"#ifdef USE_MAP",

			"uniform sampler2D map;",

		"#endif"

	].join("\n"),

	map_vertex: [

		"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )",

			"vUv = uv * offsetRepeat.zw + offsetRepeat.xy;",

		"#endif"

	].join("\n"),

	map_fragment: [

		"#ifdef USE_MAP",

			"vec4 texelColor = texture2D( map, vUv );",

			"#ifdef GAMMA_INPUT",

				"texelColor.xyz *= texelColor.xyz;",

			"#endif",

			"gl_FragColor = gl_FragColor * texelColor;",

		"#endif"

	].join("\n"),

	// LIGHT MAP

	lightmap_pars_fragment: [

		"#ifdef USE_LIGHTMAP",

			"varying vec2 vUv2;",
			"uniform sampler2D lightMap;",

		"#endif"

	].join("\n"),

	lightmap_pars_vertex: [

		"#ifdef USE_LIGHTMAP",

			"varying vec2 vUv2;",

		"#endif"

	].join("\n"),

	lightmap_fragment: [

		"#ifdef USE_LIGHTMAP",

			"gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );",

		"#endif"

	].join("\n"),

	lightmap_vertex: [

		"#ifdef USE_LIGHTMAP",

			"vUv2 = uv2;",

		"#endif"

	].join("\n"),

	// BUMP MAP

	bumpmap_pars_fragment: [

		"#ifdef USE_BUMPMAP",

			"uniform sampler2D bumpMap;",
			"uniform float bumpScale;",

			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen
			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html

			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)

			"vec2 dHdxy_fwd() {",

				"vec2 dSTdx = dFdx( vUv );",
				"vec2 dSTdy = dFdy( vUv );",

				"float Hll = bumpScale * texture2D( bumpMap, vUv ).x;",
				"float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;",
				"float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;",

				"return vec2( dBx, dBy );",

			"}",

			"vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {",

				"vec3 vSigmaX = dFdx( surf_pos );",
				"vec3 vSigmaY = dFdy( surf_pos );",
				"vec3 vN = surf_norm;",		// normalized

				"vec3 R1 = cross( vSigmaY, vN );",
				"vec3 R2 = cross( vN, vSigmaX );",

				"float fDet = dot( vSigmaX, R1 );",

				"vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );",
				"return normalize( abs( fDet ) * surf_norm - vGrad );",

			"}",

		"#endif"

	].join("\n"),

	// NORMAL MAP

	normalmap_pars_fragment: [

		"#ifdef USE_NORMALMAP",

			"uniform sampler2D normalMap;",
			"uniform vec2 normalScale;",

			// Per-Pixel Tangent Space Normal Mapping
			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html

			"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {",

				"vec3 q0 = dFdx( eye_pos.xyz );",
				"vec3 q1 = dFdy( eye_pos.xyz );",
				"vec2 st0 = dFdx( vUv.st );",
				"vec2 st1 = dFdy( vUv.st );",

				"vec3 S = normalize(  q0 * st1.t - q1 * st0.t );",
				"vec3 T = normalize( -q0 * st1.s + q1 * st0.s );",
				"vec3 N = normalize( surf_norm );",

				"vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;",
				"mapN.xy = normalScale * mapN.xy;",
				"mat3 tsn = mat3( S, T, N );",
				"return normalize( tsn * mapN );",

			"}",

		"#endif"

	].join("\n"),

	// SPECULAR MAP

	specularmap_pars_fragment: [

		"#ifdef USE_SPECULARMAP",

			"uniform sampler2D specularMap;",

		"#endif"

	].join("\n"),

	specularmap_fragment: [

		"float specularStrength;",

		"#ifdef USE_SPECULARMAP",

			"vec4 texelSpecular = texture2D( specularMap, vUv );",
			"specularStrength = texelSpecular.r;",

		"#else",

			"specularStrength = 1.0;",

		"#endif"

	].join("\n"),

	// LIGHTS LAMBERT

	lights_lambert_pars_vertex: [

		"uniform vec3 ambient;",
		"uniform vec3 diffuse;",
		"uniform vec3 emissive;",

		"uniform vec3 ambientLightColor;",

		"#if MAX_DIR_LIGHTS > 0",

			"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];",
			"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];",

		"#endif",

		"#if MAX_HEMI_LIGHTS > 0",

			"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];",
			"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];",
			"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];",

		"#endif",

		"#if MAX_POINT_LIGHTS > 0",

			"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];",
			"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];",
			"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];",
			"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];",
			"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];",
			"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];",
			"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];",
			"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];",

		"#endif",

		"#ifdef WRAP_AROUND",

			"uniform vec3 wrapRGB;",

		"#endif"

	].join("\n"),

	lights_lambert_vertex: [

		"vLightFront = vec3( 0.0 );",

		"#ifdef DOUBLE_SIDED",

			"vLightBack = vec3( 0.0 );",

		"#endif",

		"transformedNormal = normalize( transformedNormal );",

		"#if MAX_DIR_LIGHTS > 0",

		"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {",

			"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );",
			"vec3 dirVector = normalize( lDirection.xyz );",

			"float dotProduct = dot( transformedNormal, dirVector );",
			"vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );",

			"#ifdef DOUBLE_SIDED",

				"vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );",

				"#ifdef WRAP_AROUND",

					"vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );",

				"#endif",

			"#endif",

			"#ifdef WRAP_AROUND",

				"vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );",
				"directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );",

				"#ifdef DOUBLE_SIDED",

					"directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );",

				"#endif",

			"#endif",

			"vLightFront += directionalLightColor[ i ] * directionalLightWeighting;",

			"#ifdef DOUBLE_SIDED",

				"vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;",

			"#endif",

		"}",

		"#endif",

		"#if MAX_POINT_LIGHTS > 0",

			"for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {",

				"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );",
				"vec3 lVector = lPosition.xyz - mvPosition.xyz;",

				"float lDistance = 1.0;",
				"if ( pointLightDistance[ i ] > 0.0 )",
					"lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );",

				"lVector = normalize( lVector );",
				"float dotProduct = dot( transformedNormal, lVector );",

				"vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );",

				"#ifdef DOUBLE_SIDED",

					"vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );",

					"#ifdef WRAP_AROUND",

						"vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );",

					"#endif",

				"#endif",

				"#ifdef WRAP_AROUND",

					"vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );",
					"pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );",

					"#ifdef DOUBLE_SIDED",

						"pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );",

					"#endif",

				"#endif",

				"vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;",

				"#ifdef DOUBLE_SIDED",

					"vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;",

				"#endif",

			"}",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {",

				"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );",
				"vec3 lVector = lPosition.xyz - mvPosition.xyz;",

				"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );",

				"if ( spotEffect > spotLightAngleCos[ i ] ) {",

					"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );",

					"float lDistance = 1.0;",
					"if ( spotLightDistance[ i ] > 0.0 )",
						"lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );",

					"lVector = normalize( lVector );",

					"float dotProduct = dot( transformedNormal, lVector );",
					"vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );",

					"#ifdef DOUBLE_SIDED",

						"vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );",

						"#ifdef WRAP_AROUND",

							"vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );",

						"#endif",

					"#endif",

					"#ifdef WRAP_AROUND",

						"vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );",
						"spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );",

						"#ifdef DOUBLE_SIDED",

							"spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );",

						"#endif",

					"#endif",

					"vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;",

					"#ifdef DOUBLE_SIDED",

						"vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;",

					"#endif",

				"}",

			"}",

		"#endif",

		"#if MAX_HEMI_LIGHTS > 0",

			"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {",

				"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );",
				"vec3 lVector = normalize( lDirection.xyz );",

				"float dotProduct = dot( transformedNormal, lVector );",

				"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;",
				"float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;",

				"vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );",

				"#ifdef DOUBLE_SIDED",

					"vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );",

				"#endif",

			"}",

		"#endif",

		"vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;",

		"#ifdef DOUBLE_SIDED",

			"vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;",

		"#endif"

	].join("\n"),

	// LIGHTS PHONG

	lights_phong_pars_vertex: [

		"#ifndef PHONG_PER_PIXEL",

		"#if MAX_POINT_LIGHTS > 0",

			"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];",
			"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];",

			"varying vec4 vPointLight[ MAX_POINT_LIGHTS ];",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];",
			"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];",

			"varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];",

		"#endif",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )",

			"varying vec3 vWorldPosition;",

		"#endif"

	].join("\n"),


	lights_phong_vertex: [

		"#ifndef PHONG_PER_PIXEL",

		"#if MAX_POINT_LIGHTS > 0",

			"for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {",

				"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );",
				"vec3 lVector = lPosition.xyz - mvPosition.xyz;",

				"float lDistance = 1.0;",
				"if ( pointLightDistance[ i ] > 0.0 )",
					"lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );",

				"vPointLight[ i ] = vec4( lVector, lDistance );",

			"}",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {",

				"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );",
				"vec3 lVector = lPosition.xyz - mvPosition.xyz;",

				"float lDistance = 1.0;",
				"if ( spotLightDistance[ i ] > 0.0 )",
					"lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );",

				"vSpotLight[ i ] = vec4( lVector, lDistance );",

			"}",

		"#endif",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )",

			"vWorldPosition = worldPosition.xyz;",

		"#endif"

	].join("\n"),

	lights_phong_pars_fragment: [

		"uniform vec3 ambientLightColor;",

		"#if MAX_DIR_LIGHTS > 0",

			"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];",
			"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];",

		"#endif",

		"#if MAX_HEMI_LIGHTS > 0",

			"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];",
			"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];",
			"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];",

		"#endif",

		"#if MAX_POINT_LIGHTS > 0",

			"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];",

			"#ifdef PHONG_PER_PIXEL",

				"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];",
				"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];",

			"#else",

				"varying vec4 vPointLight[ MAX_POINT_LIGHTS ];",

			"#endif",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];",
			"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];",
			"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];",
			"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];",
			"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];",

			"#ifdef PHONG_PER_PIXEL",

				"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];",

			"#else",

				"varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];",

			"#endif",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )",

			"varying vec3 vWorldPosition;",

		"#endif",

		"#ifdef WRAP_AROUND",

			"uniform vec3 wrapRGB;",

		"#endif",

		"varying vec3 vViewPosition;",
		"varying vec3 vNormal;"

	].join("\n"),

	lights_phong_fragment: [

		"vec3 normal = normalize( vNormal );",
		"vec3 viewPosition = normalize( vViewPosition );",

		"#ifdef DOUBLE_SIDED",

			"normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );",

		"#endif",

		"#ifdef USE_NORMALMAP",

			"normal = perturbNormal2Arb( -viewPosition, normal );",

		"#elif defined( USE_BUMPMAP )",

			"normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );",

		"#endif",

		"#if MAX_POINT_LIGHTS > 0",

			"vec3 pointDiffuse  = vec3( 0.0 );",
			"vec3 pointSpecular = vec3( 0.0 );",

			"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {",

				"#ifdef PHONG_PER_PIXEL",

					"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );",
					"vec3 lVector = lPosition.xyz + vViewPosition.xyz;",

					"float lDistance = 1.0;",
					"if ( pointLightDistance[ i ] > 0.0 )",
						"lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );",

					"lVector = normalize( lVector );",

				"#else",

					"vec3 lVector = normalize( vPointLight[ i ].xyz );",
					"float lDistance = vPointLight[ i ].w;",

				"#endif",

				// diffuse

				"float dotProduct = dot( normal, lVector );",

				"#ifdef WRAP_AROUND",

					"float pointDiffuseWeightFull = max( dotProduct, 0.0 );",
					"float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );",

					"vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );",

				"#else",

					"float pointDiffuseWeight = max( dotProduct, 0.0 );",

				"#endif",

				"pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;",

				// specular

				"vec3 pointHalfVector = normalize( lVector + viewPosition );",
				"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );",
				"float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );",

				"#ifdef PHYSICALLY_BASED_SHADING",

					// 2.0 => 2.0001 is hack to work around ANGLE bug

					"float specularNormalization = ( shininess + 2.0001 ) / 8.0;",

					"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );",
					"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;",

				"#else",

					"pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;",

				"#endif",

			"}",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"vec3 spotDiffuse  = vec3( 0.0 );",
			"vec3 spotSpecular = vec3( 0.0 );",

			"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {",

				"#ifdef PHONG_PER_PIXEL",

					"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );",
					"vec3 lVector = lPosition.xyz + vViewPosition.xyz;",

					"float lDistance = 1.0;",
					"if ( spotLightDistance[ i ] > 0.0 )",
						"lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );",

					"lVector = normalize( lVector );",

				"#else",

					"vec3 lVector = normalize( vSpotLight[ i ].xyz );",
					"float lDistance = vSpotLight[ i ].w;",

				"#endif",

				"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );",

				"if ( spotEffect > spotLightAngleCos[ i ] ) {",

					"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );",

					// diffuse

					"float dotProduct = dot( normal, lVector );",

					"#ifdef WRAP_AROUND",

						"float spotDiffuseWeightFull = max( dotProduct, 0.0 );",
						"float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );",

						"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );",

					"#else",

						"float spotDiffuseWeight = max( dotProduct, 0.0 );",

					"#endif",

					"spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;",

					// specular

					"vec3 spotHalfVector = normalize( lVector + viewPosition );",
					"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );",
					"float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );",

					"#ifdef PHYSICALLY_BASED_SHADING",

						// 2.0 => 2.0001 is hack to work around ANGLE bug

						"float specularNormalization = ( shininess + 2.0001 ) / 8.0;",

						"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );",
						"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;",

					"#else",

						"spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;",

					"#endif",

				"}",

			"}",

		"#endif",

		"#if MAX_DIR_LIGHTS > 0",

			"vec3 dirDiffuse  = vec3( 0.0 );",
			"vec3 dirSpecular = vec3( 0.0 );" ,

			"for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {",

				"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );",
				"vec3 dirVector = normalize( lDirection.xyz );",

				// diffuse

				"float dotProduct = dot( normal, dirVector );",

				"#ifdef WRAP_AROUND",

					"float dirDiffuseWeightFull = max( dotProduct, 0.0 );",
					"float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );",

					"vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );",

				"#else",

					"float dirDiffuseWeight = max( dotProduct, 0.0 );",

				"#endif",

				"dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;",

				// specular

				"vec3 dirHalfVector = normalize( dirVector + viewPosition );",
				"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );",
				"float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );",

				"#ifdef PHYSICALLY_BASED_SHADING",

					/*
					// fresnel term from skin shader
					"const float F0 = 0.128;",

					"float base = 1.0 - dot( viewPosition, dirHalfVector );",
					"float exponential = pow( base, 5.0 );",

					"float fresnel = exponential + F0 * ( 1.0 - exponential );",
					*/

					/*
					// fresnel term from fresnel shader
					"const float mFresnelBias = 0.08;",
					"const float mFresnelScale = 0.3;",
					"const float mFresnelPower = 5.0;",

					"float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );",
					*/

					// 2.0 => 2.0001 is hack to work around ANGLE bug

					"float specularNormalization = ( shininess + 2.0001 ) / 8.0;",

					//"dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;",

					"vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );",
					"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;",

				"#else",

					"dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;",

				"#endif",

			"}",

		"#endif",

		"#if MAX_HEMI_LIGHTS > 0",

			"vec3 hemiDiffuse  = vec3( 0.0 );",
			"vec3 hemiSpecular = vec3( 0.0 );" ,

			"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {",

				"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );",
				"vec3 lVector = normalize( lDirection.xyz );",

				// diffuse

				"float dotProduct = dot( normal, lVector );",
				"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;",

				"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );",

				"hemiDiffuse += diffuse * hemiColor;",

				// specular (sky light)

				"vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );",
				"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;",
				"float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );",

				// specular (ground light)

				"vec3 lVectorGround = -lVector;",

				"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );",
				"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;",
				"float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );",

				"#ifdef PHYSICALLY_BASED_SHADING",

					"float dotProductGround = dot( normal, lVectorGround );",

					// 2.0 => 2.0001 is hack to work around ANGLE bug

					"float specularNormalization = ( shininess + 2.0001 ) / 8.0;",

					"vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );",
					"vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );",
					"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );",

				"#else",

					"hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;",

				"#endif",

			"}",

		"#endif",

		"vec3 totalDiffuse = vec3( 0.0 );",
		"vec3 totalSpecular = vec3( 0.0 );",

		"#if MAX_DIR_LIGHTS > 0",

			"totalDiffuse += dirDiffuse;",
			"totalSpecular += dirSpecular;",

		"#endif",

		"#if MAX_HEMI_LIGHTS > 0",

			"totalDiffuse += hemiDiffuse;",
			"totalSpecular += hemiSpecular;",

		"#endif",

		"#if MAX_POINT_LIGHTS > 0",

			"totalDiffuse += pointDiffuse;",
			"totalSpecular += pointSpecular;",

		"#endif",

		"#if MAX_SPOT_LIGHTS > 0",

			"totalDiffuse += spotDiffuse;",
			"totalSpecular += spotSpecular;",

		"#endif",

		"#ifdef METAL",

			"gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );",

		"#else",

			"gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;",

		"#endif"

	].join("\n"),

	// VERTEX COLORS

	color_pars_fragment: [

		"#ifdef USE_COLOR",

			"varying vec3 vColor;",

		"#endif"

	].join("\n"),


	color_fragment: [

		"#ifdef USE_COLOR",

			"gl_FragColor = gl_FragColor * vec4( vColor, opacity );",

		"#endif"

	].join("\n"),

	color_pars_vertex: [

		"#ifdef USE_COLOR",

			"varying vec3 vColor;",

		"#endif"

	].join("\n"),


	color_vertex: [

		"#ifdef USE_COLOR",

			"#ifdef GAMMA_INPUT",

				"vColor = color * color;",

			"#else",

				"vColor = color;",

			"#endif",

		"#endif"

	].join("\n"),

	// SKINNING

	skinning_pars_vertex: [

		"#ifdef USE_SKINNING",

			"#ifdef BONE_TEXTURE",

				"uniform sampler2D boneTexture;",

				"mat4 getBoneMatrix( const in float i ) {",

					"float j = i * 4.0;",
					"float x = mod( j, N_BONE_PIXEL_X );",
					"float y = floor( j / N_BONE_PIXEL_X );",

					"const float dx = 1.0 / N_BONE_PIXEL_X;",
					"const float dy = 1.0 / N_BONE_PIXEL_Y;",

					"y = dy * ( y + 0.5 );",

					"vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );",
					"vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );",
					"vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );",
					"vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );",

					"mat4 bone = mat4( v1, v2, v3, v4 );",

					"return bone;",

				"}",

			"#else",

				"uniform mat4 boneGlobalMatrices[ MAX_BONES ];",

				"mat4 getBoneMatrix( const in float i ) {",

					"mat4 bone = boneGlobalMatrices[ int(i) ];",
					"return bone;",

				"}",

			"#endif",

		"#endif"

	].join("\n"),

	skinbase_vertex: [

		"#ifdef USE_SKINNING",

			"mat4 boneMatX = getBoneMatrix( skinIndex.x );",
			"mat4 boneMatY = getBoneMatrix( skinIndex.y );",

		"#endif"

	].join("\n"),

	skinning_vertex: [

		"#ifdef USE_SKINNING",

			"#ifdef USE_MORPHTARGETS",

			"vec4 skinVertex = vec4( morphed, 1.0 );",

			"#else",

			"vec4 skinVertex = vec4( position, 1.0 );",

			"#endif",

			"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;",
			"skinned 	  += boneMatY * skinVertex * skinWeight.y;",

		"#endif"

	].join("\n"),

	// MORPHING

	morphtarget_pars_vertex: [

		"#ifdef USE_MORPHTARGETS",

			"#ifndef USE_MORPHNORMALS",

			"uniform float morphTargetInfluences[ 8 ];",

			"#else",

			"uniform float morphTargetInfluences[ 4 ];",

			"#endif",

		"#endif"

	].join("\n"),

	morphtarget_vertex: [

		"#ifdef USE_MORPHTARGETS",

			"vec3 morphed = vec3( 0.0 );",
			"morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];",
			"morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];",
			"morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];",
			"morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];",

			"#ifndef USE_MORPHNORMALS",

			"morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];",
			"morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];",
			"morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];",
			"morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];",

			"#endif",

			"morphed += position;",

		"#endif"

	].join("\n"),

	default_vertex : [

		"vec4 mvPosition;",

		"#ifdef USE_SKINNING",

			"mvPosition = modelViewMatrix * skinned;",

		"#endif",

		"#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )",

			"mvPosition = modelViewMatrix * vec4( morphed, 1.0 );",

		"#endif",

		"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )",

			"mvPosition = modelViewMatrix * vec4( position, 1.0 );",

		"#endif",

		"gl_Position = projectionMatrix * mvPosition;"

	].join("\n"),

	morphnormal_vertex: [

		"#ifdef USE_MORPHNORMALS",

			"vec3 morphedNormal = vec3( 0.0 );",

			"morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];",
			"morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];",
			"morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];",
			"morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];",

			"morphedNormal += normal;",

		"#endif"

	].join("\n"),

	skinnormal_vertex: [

		"#ifdef USE_SKINNING",

			"mat4 skinMatrix = skinWeight.x * boneMatX;",
			"skinMatrix 	+= skinWeight.y * boneMatY;",

			"#ifdef USE_MORPHNORMALS",

			"vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );",

			"#else",

			"vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );",

			"#endif",

		"#endif"

	].join("\n"),

	defaultnormal_vertex: [

		"vec3 objectNormal;",

		"#ifdef USE_SKINNING",

			"objectNormal = skinnedNormal.xyz;",

		"#endif",

		"#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )",

			"objectNormal = morphedNormal;",

		"#endif",

		"#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )",

			"objectNormal = normal;",

		"#endif",

		"#ifdef FLIP_SIDED",

			"objectNormal = -objectNormal;",

		"#endif",

		"vec3 transformedNormal = normalMatrix * objectNormal;"

	].join("\n"),

	// SHADOW MAP

	// based on SpiderGL shadow map and Fabien Sanglard's GLSL shadow mapping examples
	//  http://spidergl.org/example.php?id=6
	// 	http://fabiensanglard.net/shadowmapping

	shadowmap_pars_fragment: [

		"#ifdef USE_SHADOWMAP",

			"uniform sampler2D shadowMap[ MAX_SHADOWS ];",
			"uniform vec2 shadowMapSize[ MAX_SHADOWS ];",

			"uniform float shadowDarkness[ MAX_SHADOWS ];",
			"uniform float shadowBias[ MAX_SHADOWS ];",

			"varying vec4 vShadowCoord[ MAX_SHADOWS ];",

			"float unpackDepth( const in vec4 rgba_depth ) {",

				"const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );",
				"float depth = dot( rgba_depth, bit_shift );",
				"return depth;",

			"}",

		"#endif"

	].join("\n"),

	shadowmap_fragment: [

		"#ifdef USE_SHADOWMAP",

			"#ifdef SHADOWMAP_DEBUG",

				"vec3 frustumColors[3];",
				"frustumColors[0] = vec3( 1.0, 0.5, 0.0 );",
				"frustumColors[1] = vec3( 0.0, 1.0, 0.8 );",
				"frustumColors[2] = vec3( 0.0, 0.5, 1.0 );",

			"#endif",

			"#ifdef SHADOWMAP_CASCADE",

				"int inFrustumCount = 0;",

			"#endif",

			"float fDepth;",
			"vec3 shadowColor = vec3( 1.0 );",

			"for( int i = 0; i < MAX_SHADOWS; i ++ ) {",

				"vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;",

				// "if ( something && something )" 		 breaks ATI OpenGL shader compiler
				// "if ( all( something, something ) )"  using this instead

				"bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );",
				"bool inFrustum = all( inFrustumVec );",

				// don't shadow pixels outside of light frustum
				// use just first frustum (for cascades)
				// don't shadow pixels behind far plane of light frustum

				"#ifdef SHADOWMAP_CASCADE",

					"inFrustumCount += int( inFrustum );",
					"bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );",

				"#else",

					"bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );",

				"#endif",

				"bool frustumTest = all( frustumTestVec );",

				"if ( frustumTest ) {",

					"shadowCoord.z += shadowBias[ i ];",

					"#if defined( SHADOWMAP_TYPE_PCF )",

						// Percentage-close filtering
						// (9 pixel kernel)
						// http://fabiensanglard.net/shadowmappingPCF/

						"float shadow = 0.0;",

						/*
						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL
						// must enroll loop manually

						"for ( float y = -1.25; y <= 1.25; y += 1.25 )",
							"for ( float x = -1.25; x <= 1.25; x += 1.25 ) {",

								"vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );",

								// doesn't seem to produce any noticeable visual difference compared to simple "texture2D" lookup
								//"vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );",

								"float fDepth = unpackDepth( rgbaDepth );",

								"if ( fDepth < shadowCoord.z )",
									"shadow += 1.0;",

						"}",

						"shadow /= 9.0;",

						*/

						"const float shadowDelta = 1.0 / 9.0;",

						"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;",
						"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;",

						"float dx0 = -1.25 * xPixelOffset;",
						"float dy0 = -1.25 * yPixelOffset;",
						"float dx1 = 1.25 * xPixelOffset;",
						"float dy1 = 1.25 * yPixelOffset;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );",
						"if ( fDepth < shadowCoord.z ) shadow += shadowDelta;",

						"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );",

					"#elif defined( SHADOWMAP_TYPE_PCF_SOFT )",

						// Percentage-close filtering
						// (9 pixel kernel)
						// http://fabiensanglard.net/shadowmappingPCF/

						"float shadow = 0.0;",

						"float xPixelOffset = 1.0 / shadowMapSize[ i ].x;",
						"float yPixelOffset = 1.0 / shadowMapSize[ i ].y;",

						"float dx0 = -1.0 * xPixelOffset;",
						"float dy0 = -1.0 * yPixelOffset;",
						"float dx1 = 1.0 * xPixelOffset;",
						"float dy1 = 1.0 * yPixelOffset;",

						"mat3 shadowKernel;",
						"mat3 depthKernel;",

						"depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );",
						"if ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;",
						"else shadowKernel[0][0] = 0.0;",

						"depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );",
						"if ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;",
						"else shadowKernel[0][1] = 0.0;",

						"depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );",
						"if ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;",
						"else shadowKernel[0][2] = 0.0;",

						"depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );",
						"if ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;",
						"else shadowKernel[1][0] = 0.0;",

						"depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );",
						"if ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;",
						"else shadowKernel[1][1] = 0.0;",

						"depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );",
						"if ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;",
						"else shadowKernel[1][2] = 0.0;",

						"depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );",
						"if ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;",
						"else shadowKernel[2][0] = 0.0;",

						"depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );",
						"if ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;",
						"else shadowKernel[2][1] = 0.0;",

						"depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );",
						"if ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;",
						"else shadowKernel[2][2] = 0.0;",

						"vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );",

						"shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );",
						"shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );",

						"vec4 shadowValues;",
						"shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );",
						"shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );",
						"shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );",
						"shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );",

						"shadow = dot( shadowValues, vec4( 1.0 ) );",

						"shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );",

					"#else",

						"vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );",
						"float fDepth = unpackDepth( rgbaDepth );",

						"if ( fDepth < shadowCoord.z )",

							// spot with multiple shadows is darker

							"shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );",

							// spot with multiple shadows has the same color as single shadow spot

							//"shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );",

					"#endif",

				"}",


				"#ifdef SHADOWMAP_DEBUG",

					"#ifdef SHADOWMAP_CASCADE",

						"if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];",

					"#else",

						"if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];",

					"#endif",

				"#endif",

			"}",

			"#ifdef GAMMA_OUTPUT",

				"shadowColor *= shadowColor;",

			"#endif",

			"gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;",

		"#endif"

	].join("\n"),

	shadowmap_pars_vertex: [

		"#ifdef USE_SHADOWMAP",

			"varying vec4 vShadowCoord[ MAX_SHADOWS ];",
			"uniform mat4 shadowMatrix[ MAX_SHADOWS ];",

		"#endif"

	].join("\n"),

	shadowmap_vertex: [

		"#ifdef USE_SHADOWMAP",

			"for( int i = 0; i < MAX_SHADOWS; i ++ ) {",

				"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;",

			"}",

		"#endif"

	].join("\n"),

	// ALPHATEST

	alphatest_fragment: [

		"#ifdef ALPHATEST",

			"if ( gl_FragColor.a < ALPHATEST ) discard;",

		"#endif"

	].join("\n"),

	// LINEAR SPACE

	linear_to_gamma_fragment: [

		"#ifdef GAMMA_OUTPUT",

			"gl_FragColor.xyz = sqrt( gl_FragColor.xyz );",

		"#endif"

	].join("\n")


};

THREE.UniformsUtils = {

	merge: function ( uniforms ) {

		var u, p, tmp, merged = {};

		for ( u = 0; u < uniforms.length; u ++ ) {

			tmp = this.clone( uniforms[ u ] );

			for ( p in tmp ) {

				merged[ p ] = tmp[ p ];

			}

		}

		return merged;

	},

	clone: function ( uniforms_src ) {

		var u, p, parameter, parameter_src, uniforms_dst = {};

		for ( u in uniforms_src ) {

			uniforms_dst[ u ] = {};

			for ( p in uniforms_src[ u ] ) {

				parameter_src = uniforms_src[ u ][ p ];

				if ( parameter_src instanceof THREE.Color ||
					 parameter_src instanceof THREE.Vector2 ||
					 parameter_src instanceof THREE.Vector3 ||
					 parameter_src instanceof THREE.Vector4 ||
					 parameter_src instanceof THREE.Matrix4 ||
					 parameter_src instanceof THREE.Texture ) {

					uniforms_dst[ u ][ p ] = parameter_src.clone();

				} else if ( parameter_src instanceof Array ) {

					uniforms_dst[ u ][ p ] = parameter_src.slice();

				} else {

					uniforms_dst[ u ][ p ] = parameter_src;

				}

			}

		}

		return uniforms_dst;

	}

};

THREE.UniformsLib = {

	common: {

		"diffuse" : { type: "c", value: new THREE.Color( 0xeeeeee ) },
		"opacity" : { type: "f", value: 1.0 },

		"map" : { type: "t", value: null },
		"offsetRepeat" : { type: "v4", value: new THREE.Vector4( 0, 0, 1, 1 ) },

		"lightMap" : { type: "t", value: null },
		"specularMap" : { type: "t", value: null },

		"envMap" : { type: "t", value: null },
		"flipEnvMap" : { type: "f", value: -1 },
		"useRefract" : { type: "i", value: 0 },
		"reflectivity" : { type: "f", value: 1.0 },
		"refractionRatio" : { type: "f", value: 0.98 },
		"combine" : { type: "i", value: 0 },

		"morphTargetInfluences" : { type: "f", value: 0 }

	},

	bump: {

		"bumpMap" : { type: "t", value: null },
		"bumpScale" : { type: "f", value: 1 }

	},

	normalmap: {

		"normalMap" : { type: "t", value: null },
		"normalScale" : { type: "v2", value: new THREE.Vector2( 1, 1 ) }
	},

	fog : {

		"fogDensity" : { type: "f", value: 0.00025 },
		"fogNear" : { type: "f", value: 1 },
		"fogFar" : { type: "f", value: 2000 },
		"fogColor" : { type: "c", value: new THREE.Color( 0xffffff ) }

	},

	lights: {

		"ambientLightColor" : { type: "fv", value: [] },

		"directionalLightDirection" : { type: "fv", value: [] },
		"directionalLightColor" : { type: "fv", value: [] },

		"hemisphereLightDirection" : { type: "fv", value: [] },
		"hemisphereLightSkyColor" : { type: "fv", value: [] },
		"hemisphereLightGroundColor" : { type: "fv", value: [] },

		"pointLightColor" : { type: "fv", value: [] },
		"pointLightPosition" : { type: "fv", value: [] },
		"pointLightDistance" : { type: "fv1", value: [] },

		"spotLightColor" : { type: "fv", value: [] },
		"spotLightPosition" : { type: "fv", value: [] },
		"spotLightDirection" : { type: "fv", value: [] },
		"spotLightDistance" : { type: "fv1", value: [] },
		"spotLightAngleCos" : { type: "fv1", value: [] },
		"spotLightExponent" : { type: "fv1", value: [] }

	},

	particle: {

		"psColor" : { type: "c", value: new THREE.Color( 0xeeeeee ) },
		"opacity" : { type: "f", value: 1.0 },
		"size" : { type: "f", value: 1.0 },
		"scale" : { type: "f", value: 1.0 },
		"map" : { type: "t", value: null },

		"fogDensity" : { type: "f", value: 0.00025 },
		"fogNear" : { type: "f", value: 1 },
		"fogFar" : { type: "f", value: 2000 },
		"fogColor" : { type: "c", value: new THREE.Color( 0xffffff ) }

	},

	shadowmap: {

		"shadowMap": { type: "tv", value: [] },
		"shadowMapSize": { type: "v2v", value: [] },

		"shadowBias" : { type: "fv1", value: [] },
		"shadowDarkness": { type: "fv1", value: [] },

		"shadowMatrix" : { type: "m4v", value: [] }

	}

};

THREE.ShaderLib = {

	'basic': {

		uniforms: THREE.UniformsUtils.merge( [

			THREE.UniformsLib[ "common" ],
			THREE.UniformsLib[ "fog" ],
			THREE.UniformsLib[ "shadowmap" ]

		] ),

		vertexShader: [

			THREE.ShaderChunk[ "map_pars_vertex" ],
			THREE.ShaderChunk[ "lightmap_pars_vertex" ],
			THREE.ShaderChunk[ "envmap_pars_vertex" ],
			THREE.ShaderChunk[ "color_pars_vertex" ],
			THREE.ShaderChunk[ "morphtarget_pars_vertex" ],
			THREE.ShaderChunk[ "skinning_pars_vertex" ],
			THREE.ShaderChunk[ "shadowmap_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "map_vertex" ],
				THREE.ShaderChunk[ "lightmap_vertex" ],
				THREE.ShaderChunk[ "color_vertex" ],
				THREE.ShaderChunk[ "skinbase_vertex" ],

				"#ifdef USE_ENVMAP",

				THREE.ShaderChunk[ "morphnormal_vertex" ],
				THREE.ShaderChunk[ "skinnormal_vertex" ],
				THREE.ShaderChunk[ "defaultnormal_vertex" ],

				"#endif",

				THREE.ShaderChunk[ "morphtarget_vertex" ],
				THREE.ShaderChunk[ "skinning_vertex" ],
				THREE.ShaderChunk[ "default_vertex" ],

				THREE.ShaderChunk[ "worldpos_vertex" ],
				THREE.ShaderChunk[ "envmap_vertex" ],
				THREE.ShaderChunk[ "shadowmap_vertex" ],

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform vec3 diffuse;",
			"uniform float opacity;",

			THREE.ShaderChunk[ "color_pars_fragment" ],
			THREE.ShaderChunk[ "map_pars_fragment" ],
			THREE.ShaderChunk[ "lightmap_pars_fragment" ],
			THREE.ShaderChunk[ "envmap_pars_fragment" ],
			THREE.ShaderChunk[ "fog_pars_fragment" ],
			THREE.ShaderChunk[ "shadowmap_pars_fragment" ],
			THREE.ShaderChunk[ "specularmap_pars_fragment" ],

			"void main() {",

				"gl_FragColor = vec4( diffuse, opacity );",

				THREE.ShaderChunk[ "map_fragment" ],
				THREE.ShaderChunk[ "alphatest_fragment" ],
				THREE.ShaderChunk[ "specularmap_fragment" ],
				THREE.ShaderChunk[ "lightmap_fragment" ],
				THREE.ShaderChunk[ "color_fragment" ],
				THREE.ShaderChunk[ "envmap_fragment" ],
				THREE.ShaderChunk[ "shadowmap_fragment" ],

				THREE.ShaderChunk[ "linear_to_gamma_fragment" ],

				THREE.ShaderChunk[ "fog_fragment" ],

			"}"

		].join("\n")

	},

	'lambert': {

		uniforms: THREE.UniformsUtils.merge( [

			THREE.UniformsLib[ "common" ],
			THREE.UniformsLib[ "fog" ],
			THREE.UniformsLib[ "lights" ],
			THREE.UniformsLib[ "shadowmap" ],

			{
				"ambient"  : { type: "c", value: new THREE.Color( 0xffffff ) },
				"emissive" : { type: "c", value: new THREE.Color( 0x000000 ) },
				"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }
			}

		] ),

		vertexShader: [

			"#define LAMBERT",

			"varying vec3 vLightFront;",

			"#ifdef DOUBLE_SIDED",

				"varying vec3 vLightBack;",

			"#endif",

			THREE.ShaderChunk[ "map_pars_vertex" ],
			THREE.ShaderChunk[ "lightmap_pars_vertex" ],
			THREE.ShaderChunk[ "envmap_pars_vertex" ],
			THREE.ShaderChunk[ "lights_lambert_pars_vertex" ],
			THREE.ShaderChunk[ "color_pars_vertex" ],
			THREE.ShaderChunk[ "morphtarget_pars_vertex" ],
			THREE.ShaderChunk[ "skinning_pars_vertex" ],
			THREE.ShaderChunk[ "shadowmap_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "map_vertex" ],
				THREE.ShaderChunk[ "lightmap_vertex" ],
				THREE.ShaderChunk[ "color_vertex" ],

				THREE.ShaderChunk[ "morphnormal_vertex" ],
				THREE.ShaderChunk[ "skinbase_vertex" ],
				THREE.ShaderChunk[ "skinnormal_vertex" ],
				THREE.ShaderChunk[ "defaultnormal_vertex" ],

				THREE.ShaderChunk[ "morphtarget_vertex" ],
				THREE.ShaderChunk[ "skinning_vertex" ],
				THREE.ShaderChunk[ "default_vertex" ],

				THREE.ShaderChunk[ "worldpos_vertex" ],
				THREE.ShaderChunk[ "envmap_vertex" ],
				THREE.ShaderChunk[ "lights_lambert_vertex" ],
				THREE.ShaderChunk[ "shadowmap_vertex" ],

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform float opacity;",

			"varying vec3 vLightFront;",

			"#ifdef DOUBLE_SIDED",

				"varying vec3 vLightBack;",

			"#endif",

			THREE.ShaderChunk[ "color_pars_fragment" ],
			THREE.ShaderChunk[ "map_pars_fragment" ],
			THREE.ShaderChunk[ "lightmap_pars_fragment" ],
			THREE.ShaderChunk[ "envmap_pars_fragment" ],
			THREE.ShaderChunk[ "fog_pars_fragment" ],
			THREE.ShaderChunk[ "shadowmap_pars_fragment" ],
			THREE.ShaderChunk[ "specularmap_pars_fragment" ],

			"void main() {",

				"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",

				THREE.ShaderChunk[ "map_fragment" ],
				THREE.ShaderChunk[ "alphatest_fragment" ],
				THREE.ShaderChunk[ "specularmap_fragment" ],

				"#ifdef DOUBLE_SIDED",

					//"float isFront = float( gl_FrontFacing );",
					//"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;",

					"if ( gl_FrontFacing )",
						"gl_FragColor.xyz *= vLightFront;",
					"else",
						"gl_FragColor.xyz *= vLightBack;",

				"#else",

					"gl_FragColor.xyz *= vLightFront;",

				"#endif",

				THREE.ShaderChunk[ "lightmap_fragment" ],
				THREE.ShaderChunk[ "color_fragment" ],
				THREE.ShaderChunk[ "envmap_fragment" ],
				THREE.ShaderChunk[ "shadowmap_fragment" ],

				THREE.ShaderChunk[ "linear_to_gamma_fragment" ],

				THREE.ShaderChunk[ "fog_fragment" ],

			"}"

		].join("\n")

	},

	'phong': {

		uniforms: THREE.UniformsUtils.merge( [

			THREE.UniformsLib[ "common" ],
			THREE.UniformsLib[ "bump" ],
			THREE.UniformsLib[ "normalmap" ],
			THREE.UniformsLib[ "fog" ],
			THREE.UniformsLib[ "lights" ],
			THREE.UniformsLib[ "shadowmap" ],

			{
				"ambient"  : { type: "c", value: new THREE.Color( 0xffffff ) },
				"emissive" : { type: "c", value: new THREE.Color( 0x000000 ) },
				"specular" : { type: "c", value: new THREE.Color( 0x111111 ) },
				"shininess": { type: "f", value: 30 },
				"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }
			}

		] ),

		vertexShader: [

			"#define PHONG",

			"varying vec3 vViewPosition;",
			"varying vec3 vNormal;",

			THREE.ShaderChunk[ "map_pars_vertex" ],
			THREE.ShaderChunk[ "lightmap_pars_vertex" ],
			THREE.ShaderChunk[ "envmap_pars_vertex" ],
			THREE.ShaderChunk[ "lights_phong_pars_vertex" ],
			THREE.ShaderChunk[ "color_pars_vertex" ],
			THREE.ShaderChunk[ "morphtarget_pars_vertex" ],
			THREE.ShaderChunk[ "skinning_pars_vertex" ],
			THREE.ShaderChunk[ "shadowmap_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "map_vertex" ],
				THREE.ShaderChunk[ "lightmap_vertex" ],
				THREE.ShaderChunk[ "color_vertex" ],

				THREE.ShaderChunk[ "morphnormal_vertex" ],
				THREE.ShaderChunk[ "skinbase_vertex" ],
				THREE.ShaderChunk[ "skinnormal_vertex" ],
				THREE.ShaderChunk[ "defaultnormal_vertex" ],

				"vNormal = normalize( transformedNormal );",

				THREE.ShaderChunk[ "morphtarget_vertex" ],
				THREE.ShaderChunk[ "skinning_vertex" ],
				THREE.ShaderChunk[ "default_vertex" ],

				"vViewPosition = -mvPosition.xyz;",

				THREE.ShaderChunk[ "worldpos_vertex" ],
				THREE.ShaderChunk[ "envmap_vertex" ],
				THREE.ShaderChunk[ "lights_phong_vertex" ],
				THREE.ShaderChunk[ "shadowmap_vertex" ],

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform vec3 diffuse;",
			"uniform float opacity;",

			"uniform vec3 ambient;",
			"uniform vec3 emissive;",
			"uniform vec3 specular;",
			"uniform float shininess;",

			THREE.ShaderChunk[ "color_pars_fragment" ],
			THREE.ShaderChunk[ "map_pars_fragment" ],
			THREE.ShaderChunk[ "lightmap_pars_fragment" ],
			THREE.ShaderChunk[ "envmap_pars_fragment" ],
			THREE.ShaderChunk[ "fog_pars_fragment" ],
			THREE.ShaderChunk[ "lights_phong_pars_fragment" ],
			THREE.ShaderChunk[ "shadowmap_pars_fragment" ],
			THREE.ShaderChunk[ "bumpmap_pars_fragment" ],
			THREE.ShaderChunk[ "normalmap_pars_fragment" ],
			THREE.ShaderChunk[ "specularmap_pars_fragment" ],

			"void main() {",

				"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",

				THREE.ShaderChunk[ "map_fragment" ],
				THREE.ShaderChunk[ "alphatest_fragment" ],
				THREE.ShaderChunk[ "specularmap_fragment" ],

				THREE.ShaderChunk[ "lights_phong_fragment" ],

				THREE.ShaderChunk[ "lightmap_fragment" ],
				THREE.ShaderChunk[ "color_fragment" ],
				THREE.ShaderChunk[ "envmap_fragment" ],
				THREE.ShaderChunk[ "shadowmap_fragment" ],

				THREE.ShaderChunk[ "linear_to_gamma_fragment" ],

				THREE.ShaderChunk[ "fog_fragment" ],

			"}"

		].join("\n")

	},

	'particle_basic': {

		uniforms:  THREE.UniformsUtils.merge( [

			THREE.UniformsLib[ "particle" ],
			THREE.UniformsLib[ "shadowmap" ]

		] ),

		vertexShader: [

			"uniform float size;",
			"uniform float scale;",

			THREE.ShaderChunk[ "color_pars_vertex" ],
			THREE.ShaderChunk[ "shadowmap_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "color_vertex" ],

				"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",

				"#ifdef USE_SIZEATTENUATION",
					"gl_PointSize = size * ( scale / length( mvPosition.xyz ) );",
				"#else",
					"gl_PointSize = size;",
				"#endif",

				"gl_Position = projectionMatrix * mvPosition;",

				THREE.ShaderChunk[ "worldpos_vertex" ],
				THREE.ShaderChunk[ "shadowmap_vertex" ],

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform vec3 psColor;",
			"uniform float opacity;",

			THREE.ShaderChunk[ "color_pars_fragment" ],
			THREE.ShaderChunk[ "map_particle_pars_fragment" ],
			THREE.ShaderChunk[ "fog_pars_fragment" ],
			THREE.ShaderChunk[ "shadowmap_pars_fragment" ],

			"void main() {",

				"gl_FragColor = vec4( psColor, opacity );",

				THREE.ShaderChunk[ "map_particle_fragment" ],
				THREE.ShaderChunk[ "alphatest_fragment" ],
				THREE.ShaderChunk[ "color_fragment" ],
				THREE.ShaderChunk[ "shadowmap_fragment" ],
				THREE.ShaderChunk[ "fog_fragment" ],

			"}"

		].join("\n")

	},

	'dashed': {

		uniforms: THREE.UniformsUtils.merge( [

			THREE.UniformsLib[ "common" ],
			THREE.UniformsLib[ "fog" ],

			{
				"scale":     { type: "f", value: 1 },
				"dashSize":  { type: "f", value: 1 },
				"totalSize": { type: "f", value: 2 }
			}

		] ),

		vertexShader: [

			"uniform float scale;",
			"attribute float lineDistance;",

			"varying float vLineDistance;",

			THREE.ShaderChunk[ "color_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "color_vertex" ],

				"vLineDistance = scale * lineDistance;",

				"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
				"gl_Position = projectionMatrix * mvPosition;",

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform vec3 diffuse;",
			"uniform float opacity;",

			"uniform float dashSize;",
			"uniform float totalSize;",

			"varying float vLineDistance;",

			THREE.ShaderChunk[ "color_pars_fragment" ],
			THREE.ShaderChunk[ "fog_pars_fragment" ],

			"void main() {",

				"if ( mod( vLineDistance, totalSize ) > dashSize ) {",

					"discard;",

				"}",

				"gl_FragColor = vec4( diffuse, opacity );",

				THREE.ShaderChunk[ "color_fragment" ],
				THREE.ShaderChunk[ "fog_fragment" ],

			"}"

		].join("\n")

	},

	'depth': {

		uniforms: {

			"mNear": { type: "f", value: 1.0 },
			"mFar" : { type: "f", value: 2000.0 },
			"opacity" : { type: "f", value: 1.0 }

		},

		vertexShader: [

			"void main() {",

				"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform float mNear;",
			"uniform float mFar;",
			"uniform float opacity;",

			"void main() {",

				"float depth = gl_FragCoord.z / gl_FragCoord.w;",
				"float color = 1.0 - smoothstep( mNear, mFar, depth );",
				"gl_FragColor = vec4( vec3( color ), opacity );",

			"}"

		].join("\n")

	},

	'normal': {

		uniforms: {

			"opacity" : { type: "f", value: 1.0 }

		},

		vertexShader: [

			"varying vec3 vNormal;",

			"void main() {",

				"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
				"vNormal = normalize( normalMatrix * normal );",

				"gl_Position = projectionMatrix * mvPosition;",

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform float opacity;",
			"varying vec3 vNormal;",

			"void main() {",

				"gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",

			"}"

		].join("\n")

	},

	/* -------------------------------------------------------------------------
	//	Normal map shader
	//		- Blinn-Phong
	//		- normal + diffuse + specular + AO + displacement + reflection + shadow maps
	//		- point and directional lights (use with "lights: true" material option)
	 ------------------------------------------------------------------------- */

	'normalmap' : {

		uniforms: THREE.UniformsUtils.merge( [

			THREE.UniformsLib[ "fog" ],
			THREE.UniformsLib[ "lights" ],
			THREE.UniformsLib[ "shadowmap" ],

			{

			"enableAO"		  : { type: "i", value: 0 },
			"enableDiffuse"	  : { type: "i", value: 0 },
			"enableSpecular"  : { type: "i", value: 0 },
			"enableReflection": { type: "i", value: 0 },
			"enableDisplacement": { type: "i", value: 0 },

			"tDisplacement": { type: "t", value: null }, // must go first as this is vertex texture
			"tDiffuse"	   : { type: "t", value: null },
			"tCube"		   : { type: "t", value: null },
			"tNormal"	   : { type: "t", value: null },
			"tSpecular"	   : { type: "t", value: null },
			"tAO"		   : { type: "t", value: null },

			"uNormalScale": { type: "v2", value: new THREE.Vector2( 1, 1 ) },

			"uDisplacementBias": { type: "f", value: 0.0 },
			"uDisplacementScale": { type: "f", value: 1.0 },

			"uDiffuseColor": { type: "c", value: new THREE.Color( 0xffffff ) },
			"uSpecularColor": { type: "c", value: new THREE.Color( 0x111111 ) },
			"uAmbientColor": { type: "c", value: new THREE.Color( 0xffffff ) },
			"uShininess": { type: "f", value: 30 },
			"uOpacity": { type: "f", value: 1 },

			"useRefract": { type: "i", value: 0 },
			"uRefractionRatio": { type: "f", value: 0.98 },
			"uReflectivity": { type: "f", value: 0.5 },

			"uOffset" : { type: "v2", value: new THREE.Vector2( 0, 0 ) },
			"uRepeat" : { type: "v2", value: new THREE.Vector2( 1, 1 ) },

			"wrapRGB"  : { type: "v3", value: new THREE.Vector3( 1, 1, 1 ) }

			}

		] ),

		fragmentShader: [

			"uniform vec3 uAmbientColor;",
			"uniform vec3 uDiffuseColor;",
			"uniform vec3 uSpecularColor;",
			"uniform float uShininess;",
			"uniform float uOpacity;",

			"uniform bool enableDiffuse;",
			"uniform bool enableSpecular;",
			"uniform bool enableAO;",
			"uniform bool enableReflection;",

			"uniform sampler2D tDiffuse;",
			"uniform sampler2D tNormal;",
			"uniform sampler2D tSpecular;",
			"uniform sampler2D tAO;",

			"uniform samplerCube tCube;",

			"uniform vec2 uNormalScale;",

			"uniform bool useRefract;",
			"uniform float uRefractionRatio;",
			"uniform float uReflectivity;",

			"varying vec3 vTangent;",
			"varying vec3 vBinormal;",
			"varying vec3 vNormal;",
			"varying vec2 vUv;",

			"uniform vec3 ambientLightColor;",

			"#if MAX_DIR_LIGHTS > 0",

				"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];",
				"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];",

			"#endif",

			"#if MAX_HEMI_LIGHTS > 0",

				"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];",
				"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];",
				"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];",

			"#endif",

			"#if MAX_POINT_LIGHTS > 0",

				"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];",
				"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];",
				"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];",

			"#endif",

			"#if MAX_SPOT_LIGHTS > 0",

				"uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];",
				"uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];",
				"uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];",
				"uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];",
				"uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];",
				"uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];",

			"#endif",

			"#ifdef WRAP_AROUND",

				"uniform vec3 wrapRGB;",

			"#endif",

			"varying vec3 vWorldPosition;",
			"varying vec3 vViewPosition;",

			THREE.ShaderChunk[ "shadowmap_pars_fragment" ],
			THREE.ShaderChunk[ "fog_pars_fragment" ],

			"void main() {",

				"gl_FragColor = vec4( vec3( 1.0 ), uOpacity );",

				"vec3 specularTex = vec3( 1.0 );",

				"vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;",
				"normalTex.xy *= uNormalScale;",
				"normalTex = normalize( normalTex );",

				"if( enableDiffuse ) {",

					"#ifdef GAMMA_INPUT",

						"vec4 texelColor = texture2D( tDiffuse, vUv );",
						"texelColor.xyz *= texelColor.xyz;",

						"gl_FragColor = gl_FragColor * texelColor;",

					"#else",

						"gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );",

					"#endif",

				"}",

				"if( enableAO ) {",

					"#ifdef GAMMA_INPUT",

						"vec4 aoColor = texture2D( tAO, vUv );",
						"aoColor.xyz *= aoColor.xyz;",

						"gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;",

					"#else",

						"gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;",

					"#endif",

				"}",

				"if( enableSpecular )",
					"specularTex = texture2D( tSpecular, vUv ).xyz;",

				"mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );",
				"vec3 finalNormal = tsb * normalTex;",

				"#ifdef FLIP_SIDED",

					"finalNormal = -finalNormal;",

				"#endif",

				"vec3 normal = normalize( finalNormal );",
				"vec3 viewPosition = normalize( vViewPosition );",

				// point lights

				"#if MAX_POINT_LIGHTS > 0",

					"vec3 pointDiffuse = vec3( 0.0 );",
					"vec3 pointSpecular = vec3( 0.0 );",

					"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {",

						"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );",
						"vec3 pointVector = lPosition.xyz + vViewPosition.xyz;",

						"float pointDistance = 1.0;",
						"if ( pointLightDistance[ i ] > 0.0 )",
							"pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );",

						"pointVector = normalize( pointVector );",

						// diffuse

						"#ifdef WRAP_AROUND",

							"float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );",
							"float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );",

							"vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );",

						"#else",

							"float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );",

						"#endif",

						"pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;",

						// specular

						"vec3 pointHalfVector = normalize( pointVector + viewPosition );",
						"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );",
						"float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );",

						"#ifdef PHYSICALLY_BASED_SHADING",

							// 2.0 => 2.0001 is hack to work around ANGLE bug

							"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;",

							"vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );",
							"pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;",

						"#else",

							"pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;",

						"#endif",

					"}",

				"#endif",

				// spot lights

				"#if MAX_SPOT_LIGHTS > 0",

					"vec3 spotDiffuse = vec3( 0.0 );",
					"vec3 spotSpecular = vec3( 0.0 );",

					"for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {",

						"vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );",
						"vec3 spotVector = lPosition.xyz + vViewPosition.xyz;",

						"float spotDistance = 1.0;",
						"if ( spotLightDistance[ i ] > 0.0 )",
							"spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );",

						"spotVector = normalize( spotVector );",

						"float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );",

						"if ( spotEffect > spotLightAngleCos[ i ] ) {",

							"spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );",

							// diffuse

							"#ifdef WRAP_AROUND",

								"float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );",
								"float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );",

								"vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );",

							"#else",

								"float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );",

							"#endif",

							"spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;",

							// specular

							"vec3 spotHalfVector = normalize( spotVector + viewPosition );",
							"float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );",
							"float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );",

							"#ifdef PHYSICALLY_BASED_SHADING",

								// 2.0 => 2.0001 is hack to work around ANGLE bug

								"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;",

								"vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );",
								"spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;",

							"#else",

								"spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;",

							"#endif",

						"}",

					"}",

				"#endif",

				// directional lights

				"#if MAX_DIR_LIGHTS > 0",

					"vec3 dirDiffuse = vec3( 0.0 );",
					"vec3 dirSpecular = vec3( 0.0 );",

					"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {",

						"vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );",
						"vec3 dirVector = normalize( lDirection.xyz );",

						// diffuse

						"#ifdef WRAP_AROUND",

							"float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );",
							"float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );",

							"vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );",

						"#else",

							"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );",

						"#endif",

						"dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;",

						// specular

						"vec3 dirHalfVector = normalize( dirVector + viewPosition );",
						"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );",
						"float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );",

						"#ifdef PHYSICALLY_BASED_SHADING",

							// 2.0 => 2.0001 is hack to work around ANGLE bug

							"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;",

							"vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );",
							"dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;",

						"#else",

							"dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;",

						"#endif",

					"}",

				"#endif",

				// hemisphere lights

				"#if MAX_HEMI_LIGHTS > 0",

					"vec3 hemiDiffuse  = vec3( 0.0 );",
					"vec3 hemiSpecular = vec3( 0.0 );" ,

					"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {",

						"vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );",
						"vec3 lVector = normalize( lDirection.xyz );",

						// diffuse

						"float dotProduct = dot( normal, lVector );",
						"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;",

						"vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );",

						"hemiDiffuse += uDiffuseColor * hemiColor;",

						// specular (sky light)


						"vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );",
						"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;",
						"float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );",

						// specular (ground light)

						"vec3 lVectorGround = -lVector;",

						"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );",
						"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;",
						"float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );",

						"#ifdef PHYSICALLY_BASED_SHADING",

							"float dotProductGround = dot( normal, lVectorGround );",

							// 2.0 => 2.0001 is hack to work around ANGLE bug

							"float specularNormalization = ( uShininess + 2.0001 ) / 8.0;",

							"vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );",
							"vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );",
							"hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );",

						"#else",

							"hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;",

						"#endif",

					"}",

				"#endif",

				// all lights contribution summation

				"vec3 totalDiffuse = vec3( 0.0 );",
				"vec3 totalSpecular = vec3( 0.0 );",

				"#if MAX_DIR_LIGHTS > 0",

					"totalDiffuse += dirDiffuse;",
					"totalSpecular += dirSpecular;",

				"#endif",

				"#if MAX_HEMI_LIGHTS > 0",

					"totalDiffuse += hemiDiffuse;",
					"totalSpecular += hemiSpecular;",

				"#endif",

				"#if MAX_POINT_LIGHTS > 0",

					"totalDiffuse += pointDiffuse;",
					"totalSpecular += pointSpecular;",

				"#endif",

				"#if MAX_SPOT_LIGHTS > 0",

					"totalDiffuse += spotDiffuse;",
					"totalSpecular += spotSpecular;",

				"#endif",

				"#ifdef METAL",

					"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );",

				"#else",

					"gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;",

				"#endif",

				"if ( enableReflection ) {",

					"vec3 vReflect;",
					"vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );",

					"if ( useRefract ) {",

						"vReflect = refract( cameraToVertex, normal, uRefractionRatio );",

					"} else {",

						"vReflect = reflect( cameraToVertex, normal );",

					"}",

					"vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );",

					"#ifdef GAMMA_INPUT",

						"cubeColor.xyz *= cubeColor.xyz;",

					"#endif",

					"gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );",

				"}",

				THREE.ShaderChunk[ "shadowmap_fragment" ],
				THREE.ShaderChunk[ "linear_to_gamma_fragment" ],
				THREE.ShaderChunk[ "fog_fragment" ],

			"}"

		].join("\n"),

		vertexShader: [

			"attribute vec4 tangent;",

			"uniform vec2 uOffset;",
			"uniform vec2 uRepeat;",

			"uniform bool enableDisplacement;",

			"#ifdef VERTEX_TEXTURES",

				"uniform sampler2D tDisplacement;",
				"uniform float uDisplacementScale;",
				"uniform float uDisplacementBias;",

			"#endif",

			"varying vec3 vTangent;",
			"varying vec3 vBinormal;",
			"varying vec3 vNormal;",
			"varying vec2 vUv;",

			"varying vec3 vWorldPosition;",
			"varying vec3 vViewPosition;",

			THREE.ShaderChunk[ "skinning_pars_vertex" ],
			THREE.ShaderChunk[ "shadowmap_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "skinbase_vertex" ],
				THREE.ShaderChunk[ "skinnormal_vertex" ],

				// normal, tangent and binormal vectors

				"#ifdef USE_SKINNING",

					"vNormal = normalize( normalMatrix * skinnedNormal.xyz );",

					"vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );",
					"vTangent = normalize( normalMatrix * skinnedTangent.xyz );",

				"#else",

					"vNormal = normalize( normalMatrix * normal );",
					"vTangent = normalize( normalMatrix * tangent.xyz );",

				"#endif",

				"vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );",

				"vUv = uv * uRepeat + uOffset;",

				// displacement mapping

				"vec3 displacedPosition;",

				"#ifdef VERTEX_TEXTURES",

					"if ( enableDisplacement ) {",

						"vec3 dv = texture2D( tDisplacement, uv ).xyz;",
						"float df = uDisplacementScale * dv.x + uDisplacementBias;",
						"displacedPosition = position + normalize( normal ) * df;",

					"} else {",

						"#ifdef USE_SKINNING",

							"vec4 skinVertex = vec4( position, 1.0 );",

							"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;",
							"skinned 	  += boneMatY * skinVertex * skinWeight.y;",

							"displacedPosition  = skinned.xyz;",

						"#else",

							"displacedPosition = position;",

						"#endif",

					"}",

				"#else",

					"#ifdef USE_SKINNING",

						"vec4 skinVertex = vec4( position, 1.0 );",

						"vec4 skinned  = boneMatX * skinVertex * skinWeight.x;",
						"skinned 	  += boneMatY * skinVertex * skinWeight.y;",

						"displacedPosition  = skinned.xyz;",

					"#else",

						"displacedPosition = position;",

					"#endif",

				"#endif",

				//

				"vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );",
				"vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );",

				"gl_Position = projectionMatrix * mvPosition;",

				//

				"vWorldPosition = worldPosition.xyz;",
				"vViewPosition = -mvPosition.xyz;",

				// shadows

				"#ifdef USE_SHADOWMAP",

					"for( int i = 0; i < MAX_SHADOWS; i ++ ) {",

						"vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;",

					"}",

				"#endif",

			"}"

		].join("\n")

	},

	/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */

	'cube': {

		uniforms: { "tCube": { type: "t", value: null },
					"tFlip": { type: "f", value: -1 } },

		vertexShader: [

			"varying vec3 vWorldPosition;",

			"void main() {",

				"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );",
				"vWorldPosition = worldPosition.xyz;",

				"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",

			"}"

		].join("\n"),

		fragmentShader: [

			"uniform samplerCube tCube;",
			"uniform float tFlip;",

			"varying vec3 vWorldPosition;",

			"void main() {",

				"gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",

			"}"

		].join("\n")

	},

	// Depth encoding into RGBA texture
	// 	based on SpiderGL shadow map example
	// 		http://spidergl.org/example.php?id=6
	// 	originally from
	//		http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD
	// 	see also here:
	//		http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/

	'depthRGBA': {

		uniforms: {},

		vertexShader: [

			THREE.ShaderChunk[ "morphtarget_pars_vertex" ],
			THREE.ShaderChunk[ "skinning_pars_vertex" ],

			"void main() {",

				THREE.ShaderChunk[ "skinbase_vertex" ],
				THREE.ShaderChunk[ "morphtarget_vertex" ],
				THREE.ShaderChunk[ "skinning_vertex" ],
				THREE.ShaderChunk[ "default_vertex" ],

			"}"

		].join("\n"),

		fragmentShader: [

			"vec4 pack_depth( const in float depth ) {",

				"const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );",
				"const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );",
				"vec4 res = fract( depth * bit_shift );",
				"res -= res.xxyz * bit_mask;",
				"return res;",

			"}",

			"void main() {",

				"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );",

				//"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );",
				//"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );",
				//"gl_FragData[ 0 ] = pack_depth( z );",
				//"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );",

			"}"

		].join("\n")

	}

};
/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */

THREE.WebGLRenderer = function ( parameters ) {

	console.log( 'THREE.WebGLRenderer', THREE.REVISION );

	parameters = parameters || {};

	var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),

	_precision = parameters.precision !== undefined ? parameters.precision : 'highp',

	_alpha = parameters.alpha !== undefined ? parameters.alpha : true,
	_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,
	_antialias = parameters.antialias !== undefined ? parameters.antialias : false,
	_stencil = parameters.stencil !== undefined ? parameters.stencil : true,
	_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,

	_clearColor = parameters.clearColor !== undefined ? new THREE.Color( parameters.clearColor ) : new THREE.Color( 0x000000 ),
	_clearAlpha = parameters.clearAlpha !== undefined ? parameters.clearAlpha : 0;

	// public properties

	this.domElement = _canvas;
	this.context = null;
	this.devicePixelRatio = parameters.devicePixelRatio !== undefined
				? parameters.devicePixelRatio
				: window.devicePixelRatio !== undefined
					? window.devicePixelRatio
					: 1;

	// clearing

	this.autoClear = true;
	this.autoClearColor = true;
	this.autoClearDepth = true;
	this.autoClearStencil = true;

	// scene graph

	this.sortObjects = true;

	this.autoUpdateObjects = true;
	this.autoUpdateScene = true;

	// physically based shading

	this.gammaInput = false;
	this.gammaOutput = false;
	this.physicallyBasedShading = false;

	// shadow map

	this.shadowMapEnabled = false;
	this.shadowMapAutoUpdate = true;
	this.shadowMapType = THREE.PCFShadowMap;
	this.shadowMapCullFace = THREE.CullFaceFront;
	this.shadowMapDebug = false;
	this.shadowMapCascade = false;

	// morphs

	this.maxMorphTargets = 8;
	this.maxMorphNormals = 4;

	// flags

	this.autoScaleCubemaps = true;

	// custom render plugins

	this.renderPluginsPre = [];
	this.renderPluginsPost = [];

	// info

	this.info = {

		memory: {

			programs: 0,
			geometries: 0,
			textures: 0

		},

		render: {

			calls: 0,
			vertices: 0,
			faces: 0,
			points: 0

		}

	};

	// internal properties

	var _this = this,

	_programs = [],
	_programs_counter = 0,

	// internal state cache

	_currentProgram = null,
	_currentFramebuffer = null,
	_currentMaterialId = -1,
	_currentGeometryGroupHash = null,
	_currentCamera = null,
	_geometryGroupCounter = 0,

	_usedTextureUnits = 0,

	// GL state cache

	_oldDoubleSided = -1,
	_oldFlipSided = -1,

	_oldBlending = -1,

	_oldBlendEquation = -1,
	_oldBlendSrc = -1,
	_oldBlendDst = -1,

	_oldDepthTest = -1,
	_oldDepthWrite = -1,

	_oldPolygonOffset = null,
	_oldPolygonOffsetFactor = null,
	_oldPolygonOffsetUnits = null,

	_oldLineWidth = null,

	_viewportX = 0,
	_viewportY = 0,
	_viewportWidth = 0,
	_viewportHeight = 0,
	_currentWidth = 0,
	_currentHeight = 0,

	_enabledAttributes = {},

	// frustum

	_frustum = new THREE.Frustum(),

	 // camera matrices cache

	_projScreenMatrix = new THREE.Matrix4(),
	_projScreenMatrixPS = new THREE.Matrix4(),

	_vector3 = new THREE.Vector3(),

	// light arrays cache

	_direction = new THREE.Vector3(),

	_lightsNeedUpdate = true,

	_lights = {

		ambient: [ 0, 0, 0 ],
		directional: { length: 0, colors: new Array(), positions: new Array() },
		point: { length: 0, colors: new Array(), positions: new Array(), distances: new Array() },
		spot: { length: 0, colors: new Array(), positions: new Array(), distances: new Array(), directions: new Array(), anglesCos: new Array(), exponents: new Array() },
		hemi: { length: 0, skyColors: new Array(), groundColors: new Array(), positions: new Array() }

	};

	// initialize

	var _gl;

	var _glExtensionTextureFloat;
	var _glExtensionStandardDerivatives;
	var _glExtensionTextureFilterAnisotropic;
	var _glExtensionCompressedTextureS3TC;

	initGL();

	setDefaultGLState();

	this.context = _gl;

	// GPU capabilities

	var _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );
	var _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );
	var _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );
	var _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );

	var _maxAnisotropy = _glExtensionTextureFilterAnisotropic ? _gl.getParameter( _glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;

	var _supportsVertexTextures = ( _maxVertexTextures > 0 );
	var _supportsBoneTextures = _supportsVertexTextures && _glExtensionTextureFloat;

	var _compressedTextureFormats = _glExtensionCompressedTextureS3TC ? _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS ) : [];

	//

	var _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );
	var _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );
	var _vertexShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_FLOAT );

	var _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );
	var _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );
	var _fragmentShaderPrecisionLowpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_FLOAT );

	var _vertexShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_INT );
	var _vertexShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_INT );
	var _vertexShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.LOW_INT );

	var _fragmentShaderPrecisionHighpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_INT );
	var _fragmentShaderPrecisionMediumpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_INT );
	var _fragmentShaderPrecisionLowpInt = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.LOW_INT );

	// clamp precision to maximum available

	var highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;
	var mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;

	if ( _precision === "highp" && ! highpAvailable ) {

		if ( mediumpAvailable ) {

			_precision = "mediump";
			console.warn( "WebGLRenderer: highp not supported, using mediump" );

		} else {

			_precision = "lowp";
			console.warn( "WebGLRenderer: highp and mediump not supported, using lowp" );

		}

	}

	if ( _precision === "mediump" && ! mediumpAvailable ) {

		_precision = "lowp";
		console.warn( "WebGLRenderer: mediump not supported, using lowp" );

	}

	// API

	this.getContext = function () {

		return _gl;

	};

	this.supportsVertexTextures = function () {

		return _supportsVertexTextures;

	};

	this.supportsFloatTextures = function () {

		return _glExtensionTextureFloat;

	};

	this.supportsStandardDerivatives = function () {

		return _glExtensionStandardDerivatives;

	};

	this.supportsCompressedTextureS3TC = function () {

		return _glExtensionCompressedTextureS3TC;

	};

	this.getMaxAnisotropy  = function () {

		return _maxAnisotropy;

	};

	this.getPrecision = function () {

		return _precision;

	};

	this.setSize = function ( width, height ) {

		_canvas.width = width * this.devicePixelRatio;
		_canvas.height = height * this.devicePixelRatio;

		_canvas.style.width = width + 'px';
		_canvas.style.height = height + 'px';

		this.setViewport( 0, 0, _canvas.width, _canvas.height );

	};

	this.setViewport = function ( x, y, width, height ) {

		_viewportX = x !== undefined ? x : 0;
		_viewportY = y !== undefined ? y : 0;

		_viewportWidth = width !== undefined ? width : _canvas.width;
		_viewportHeight = height !== undefined ? height : _canvas.height;

		_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );

	};

	this.setScissor = function ( x, y, width, height ) {

		_gl.scissor( x, y, width, height );

	};

	this.enableScissorTest = function ( enable ) {

		enable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );

	};

	// Clearing

	this.setClearColorHex = function ( hex, alpha ) {

		_clearColor.setHex( hex );
		_clearAlpha = alpha;

		_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );

	};

	this.setClearColor = function ( color, alpha ) {

		_clearColor.copy( color );
		_clearAlpha = alpha;

		_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );

	};

	this.getClearColor = function () {

		return _clearColor;

	};

	this.getClearAlpha = function () {

		return _clearAlpha;

	};

	this.clear = function ( color, depth, stencil ) {

		var bits = 0;

		if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;
		if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;
		if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;

		_gl.clear( bits );

	};

	this.clearTarget = function ( renderTarget, color, depth, stencil ) {

		this.setRenderTarget( renderTarget );
		this.clear( color, depth, stencil );

	};

	// Plugins

	this.addPostPlugin = function ( plugin ) {

		plugin.init( this );
		this.renderPluginsPost.push( plugin );

	};

	this.addPrePlugin = function ( plugin ) {

		plugin.init( this );
		this.renderPluginsPre.push( plugin );

	};

	// Rendering

	this.updateShadowMap = function ( scene, camera ) {

		_currentProgram = null;
		_oldBlending = -1;
		_oldDepthTest = -1;
		_oldDepthWrite = -1;
		_currentGeometryGroupHash = -1;
		_currentMaterialId = -1;
		_lightsNeedUpdate = true;
		_oldDoubleSided = -1;
		_oldFlipSided = -1;

		this.shadowMapPlugin.update( scene, camera );

	};

	// Internal functions

	// Buffer allocation

	function createParticleBuffers ( geometry ) {

		geometry.__webglVertexBuffer = _gl.createBuffer();
		geometry.__webglColorBuffer = _gl.createBuffer();

		_this.info.memory.geometries ++;

	};

	function createLineBuffers ( geometry ) {

		geometry.__webglVertexBuffer = _gl.createBuffer();
		geometry.__webglColorBuffer = _gl.createBuffer();
		geometry.__webglLineDistanceBuffer = _gl.createBuffer();

		_this.info.memory.geometries ++;

	};

	function createRibbonBuffers ( geometry ) {

		geometry.__webglVertexBuffer = _gl.createBuffer();
		geometry.__webglColorBuffer = _gl.createBuffer();
		geometry.__webglNormalBuffer = _gl.createBuffer();

		_this.info.memory.geometries ++;

	};

	function createMeshBuffers ( geometryGroup ) {

		geometryGroup.__webglVertexBuffer = _gl.createBuffer();
		geometryGroup.__webglNormalBuffer = _gl.createBuffer();
		geometryGroup.__webglTangentBuffer = _gl.createBuffer();
		geometryGroup.__webglColorBuffer = _gl.createBuffer();
		geometryGroup.__webglUVBuffer = _gl.createBuffer();
		geometryGroup.__webglUV2Buffer = _gl.createBuffer();

		geometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();
		geometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();

		geometryGroup.__webglFaceBuffer = _gl.createBuffer();
		geometryGroup.__webglLineBuffer = _gl.createBuffer();

		var m, ml;

		if ( geometryGroup.numMorphTargets ) {

			geometryGroup.__webglMorphTargetsBuffers = [];

			for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {

				geometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );

			}

		}

		if ( geometryGroup.numMorphNormals ) {

			geometryGroup.__webglMorphNormalsBuffers = [];

			for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {

				geometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );

			}

		}

		_this.info.memory.geometries ++;

	};

	// Events

	var onGeometryDispose = function ( event ) {

		var geometry = event.target;

		geometry.removeEventListener( 'dispose', onGeometryDispose );

		deallocateGeometry( geometry );

		_this.info.memory.geometries --;

	};

	var onTextureDispose = function ( event ) {

		var texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		deallocateTexture( texture );

		_this.info.memory.textures --;


	};

	var onRenderTargetDispose = function ( event ) {

		var renderTarget = event.target;

		renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );

		deallocateRenderTarget( renderTarget );

		_this.info.memory.textures --;

	};

	var onMaterialDispose = function ( event ) {

		var material = event.target;

		material.removeEventListener( 'dispose', onMaterialDispose );

		deallocateMaterial( material );

	};

	// Buffer deallocation

	var deallocateGeometry = function ( geometry ) {

		geometry.__webglInit = undefined;

		if ( geometry.__webglVertexBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglVertexBuffer );
		if ( geometry.__webglNormalBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglNormalBuffer );
		if ( geometry.__webglTangentBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglTangentBuffer );
		if ( geometry.__webglColorBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglColorBuffer );
		if ( geometry.__webglUVBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglUVBuffer );
		if ( geometry.__webglUV2Buffer !== undefined ) _gl.deleteBuffer( geometry.__webglUV2Buffer );

		if ( geometry.__webglSkinIndicesBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinIndicesBuffer );
		if ( geometry.__webglSkinWeightsBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglSkinWeightsBuffer );

		if ( geometry.__webglFaceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglFaceBuffer );
		if ( geometry.__webglLineBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineBuffer );

		if ( geometry.__webglLineDistanceBuffer !== undefined ) _gl.deleteBuffer( geometry.__webglLineDistanceBuffer );

		// geometry groups

		if ( geometry.geometryGroups !== undefined ) {

			for ( var g in geometry.geometryGroups ) {

				var geometryGroup = geometry.geometryGroups[ g ];

				if ( geometryGroup.numMorphTargets !== undefined ) {

					for ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {

						_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );

					}

				}

				if ( geometryGroup.numMorphNormals !== undefined ) {

					for ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {

						_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );

					}

				}

				deleteCustomAttributesBuffers( geometryGroup );

			}

		}

		deleteCustomAttributesBuffers( geometry );

	};

	var deallocateTexture = function ( texture ) {

		if ( texture.image && texture.image.__webglTextureCube ) {

			// cube texture

			_gl.deleteTexture( texture.image.__webglTextureCube );

		} else {

			// 2D texture

			if ( ! texture.__webglInit ) return;

			texture.__webglInit = false;
			_gl.deleteTexture( texture.__webglTexture );

		}

	};

	var deallocateRenderTarget = function ( renderTarget ) {

		if ( !renderTarget || ! renderTarget.__webglTexture ) return;

		_gl.deleteTexture( renderTarget.__webglTexture );

		if ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {

			for ( var i = 0; i < 6; i ++ ) {

				_gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );
				_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );

			}

		} else {

			_gl.deleteFramebuffer( renderTarget.__webglFramebuffer );
			_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );

		}

	};

	var deallocateMaterial = function ( material ) {

		var program = material.program;

		if ( program === undefined ) return;

		material.program = undefined;

		// only deallocate GL program if this was the last use of shared program
		// assumed there is only single copy of any program in the _programs list
		// (that's how it's constructed)

		var i, il, programInfo;
		var deleteProgram = false;

		for ( i = 0, il = _programs.length; i < il; i ++ ) {

			programInfo = _programs[ i ];

			if ( programInfo.program === program ) {

				programInfo.usedTimes --;

				if ( programInfo.usedTimes === 0 ) {

					deleteProgram = true;

				}

				break;

			}

		}

		if ( deleteProgram === true ) {

			// avoid using array.splice, this is costlier than creating new array from scratch

			var newPrograms = [];

			for ( i = 0, il = _programs.length; i < il; i ++ ) {

				programInfo = _programs[ i ];

				if ( programInfo.program !== program ) {

					newPrograms.push( programInfo );

				}

			}

			_programs = newPrograms;

			_gl.deleteProgram( program );

			_this.info.memory.programs --;

		}

	};

	//

	/*
	function deleteParticleBuffers ( geometry ) {

		_gl.deleteBuffer( geometry.__webglVertexBuffer );
		_gl.deleteBuffer( geometry.__webglColorBuffer );

		deleteCustomAttributesBuffers( geometry );

		_this.info.memory.geometries --;

	};

	function deleteLineBuffers ( geometry ) {

		_gl.deleteBuffer( geometry.__webglVertexBuffer );
		_gl.deleteBuffer( geometry.__webglColorBuffer );
		_gl.deleteBuffer( geometry.__webglLineDistanceBuffer );

		deleteCustomAttributesBuffers( geometry );

		_this.info.memory.geometries --;

	};

	function deleteRibbonBuffers ( geometry ) {

		_gl.deleteBuffer( geometry.__webglVertexBuffer );
		_gl.deleteBuffer( geometry.__webglColorBuffer );
		_gl.deleteBuffer( geometry.__webglNormalBuffer );

		deleteCustomAttributesBuffers( geometry );

		_this.info.memory.geometries --;

	};

	function deleteMeshBuffers ( geometryGroup ) {

		_gl.deleteBuffer( geometryGroup.__webglVertexBuffer );
		_gl.deleteBuffer( geometryGroup.__webglNormalBuffer );
		_gl.deleteBuffer( geometryGroup.__webglTangentBuffer );
		_gl.deleteBuffer( geometryGroup.__webglColorBuffer );
		_gl.deleteBuffer( geometryGroup.__webglUVBuffer );
		_gl.deleteBuffer( geometryGroup.__webglUV2Buffer );

		_gl.deleteBuffer( geometryGroup.__webglSkinIndicesBuffer );
		_gl.deleteBuffer( geometryGroup.__webglSkinWeightsBuffer );

		_gl.deleteBuffer( geometryGroup.__webglFaceBuffer );
		_gl.deleteBuffer( geometryGroup.__webglLineBuffer );

		var m, ml;

		if ( geometryGroup.numMorphTargets ) {

			for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {

				_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );

			}

		}

		if ( geometryGroup.numMorphNormals ) {

			for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {

				_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );

			}

		}

		deleteCustomAttributesBuffers( geometryGroup );

		_this.info.memory.geometries --;

	};
	*/

	function deleteCustomAttributesBuffers( geometry ) {

		if ( geometry.__webglCustomAttributesList ) {

			for ( var id in geometry.__webglCustomAttributesList ) {

				_gl.deleteBuffer( geometry.__webglCustomAttributesList[ id ].buffer );

			}

		}

	};

	// Buffer initialization

	function initCustomAttributes ( geometry, object ) {

		var nvertices = geometry.vertices.length;

		var material = object.material;

		if ( material.attributes ) {

			if ( geometry.__webglCustomAttributesList === undefined ) {

				geometry.__webglCustomAttributesList = [];

			}

			for ( var a in material.attributes ) {

				var attribute = material.attributes[ a ];

				if ( !attribute.__webglInitialized || attribute.createUniqueBuffers ) {

					attribute.__webglInitialized = true;

					var size = 1;		// "f" and "i"

					if ( attribute.type === "v2" ) size = 2;
					else if ( attribute.type === "v3" ) size = 3;
					else if ( attribute.type === "v4" ) size = 4;
					else if ( attribute.type === "c"  ) size = 3;

					attribute.size = size;

					attribute.array = new Float32Array( nvertices * size );

					attribute.buffer = _gl.createBuffer();
					attribute.buffer.belongsToAttribute = a;

					attribute.needsUpdate = true;

				}

				geometry.__webglCustomAttributesList.push( attribute );

			}

		}

	};

	function initParticleBuffers ( geometry, object ) {

		var nvertices = geometry.vertices.length;

		geometry.__vertexArray = new Float32Array( nvertices * 3 );
		geometry.__colorArray = new Float32Array( nvertices * 3 );

		geometry.__sortArray = [];

		geometry.__webglParticleCount = nvertices;

		initCustomAttributes ( geometry, object );

	};

	function initLineBuffers ( geometry, object ) {

		var nvertices = geometry.vertices.length;

		geometry.__vertexArray = new Float32Array( nvertices * 3 );
		geometry.__colorArray = new Float32Array( nvertices * 3 );
		geometry.__lineDistanceArray = new Float32Array( nvertices * 1 );

		geometry.__webglLineCount = nvertices;

		initCustomAttributes ( geometry, object );

	};

	function initRibbonBuffers ( geometry, object ) {

		var nvertices = geometry.vertices.length;

		geometry.__vertexArray = new Float32Array( nvertices * 3 );
		geometry.__colorArray = new Float32Array( nvertices * 3 );
		geometry.__normalArray = new Float32Array( nvertices * 3 );

		geometry.__webglVertexCount = nvertices;

		initCustomAttributes ( geometry, object );

	};

	function initMeshBuffers ( geometryGroup, object ) {

		var geometry = object.geometry,
			faces3 = geometryGroup.faces3,
			faces4 = geometryGroup.faces4,

			nvertices = faces3.length * 3 + faces4.length * 4,
			ntris     = faces3.length * 1 + faces4.length * 2,
			nlines    = faces3.length * 3 + faces4.length * 4,

			material = getBufferMaterial( object, geometryGroup ),

			uvType = bufferGuessUVType( material ),
			normalType = bufferGuessNormalType( material ),
			vertexColorType = bufferGuessVertexColorType( material );

		// console.log( "uvType", uvType, "normalType", normalType, "vertexColorType", vertexColorType, object, geometryGroup, material );

		geometryGroup.__vertexArray = new Float32Array( nvertices * 3 );

		if ( normalType ) {

			geometryGroup.__normalArray = new Float32Array( nvertices * 3 );

		}

		if ( geometry.hasTangents ) {

			geometryGroup.__tangentArray = new Float32Array( nvertices * 4 );

		}

		if ( vertexColorType ) {

			geometryGroup.__colorArray = new Float32Array( nvertices * 3 );

		}

		if ( uvType ) {

			if ( geometry.faceUvs.length > 0 || geometry.faceVertexUvs.length > 0 ) {

				geometryGroup.__uvArray = new Float32Array( nvertices * 2 );

			}

			if ( geometry.faceUvs.length > 1 || geometry.faceVertexUvs.length > 1 ) {

				geometryGroup.__uv2Array = new Float32Array( nvertices * 2 );

			}

		}

		if ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {

			geometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );
			geometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );

		}

		geometryGroup.__faceArray = new Uint16Array( ntris * 3 );
		geometryGroup.__lineArray = new Uint16Array( nlines * 2 );

		var m, ml;

		if ( geometryGroup.numMorphTargets ) {

			geometryGroup.__morphTargetsArrays = [];

			for ( m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {

				geometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );

			}

		}

		if ( geometryGroup.numMorphNormals ) {

			geometryGroup.__morphNormalsArrays = [];

			for ( m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {

				geometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );

			}

		}

		geometryGroup.__webglFaceCount = ntris * 3;
		geometryGroup.__webglLineCount = nlines * 2;


		// custom attributes

		if ( material.attributes ) {

			if ( geometryGroup.__webglCustomAttributesList === undefined ) {

				geometryGroup.__webglCustomAttributesList = [];

			}

			for ( var a in material.attributes ) {

				// Do a shallow copy of the attribute object so different geometryGroup chunks use different
				// attribute buffers which are correctly indexed in the setMeshBuffers function

				var originalAttribute = material.attributes[ a ];

				var attribute = {};

				for ( var property in originalAttribute ) {

					attribute[ property ] = originalAttribute[ property ];

				}

				if ( !attribute.__webglInitialized || attribute.createUniqueBuffers ) {

					attribute.__webglInitialized = true;

					var size = 1;		// "f" and "i"

					if( attribute.type === "v2" ) size = 2;
					else if( attribute.type === "v3" ) size = 3;
					else if( attribute.type === "v4" ) size = 4;
					else if( attribute.type === "c"  ) size = 3;

					attribute.size = size;

					attribute.array = new Float32Array( nvertices * size );

					attribute.buffer = _gl.createBuffer();
					attribute.buffer.belongsToAttribute = a;

					originalAttribute.needsUpdate = true;
					attribute.__original = originalAttribute;

				}

				geometryGroup.__webglCustomAttributesList.push( attribute );

			}

		}

		geometryGroup.__inittedArrays = true;

	};

	function getBufferMaterial( object, geometryGroup ) {

		return object.material instanceof THREE.MeshFaceMaterial
			? object.material.materials[ geometryGroup.materialIndex ]
			: object.material;

	};

	function materialNeedsSmoothNormals ( material ) {

		return material && material.shading !== undefined && material.shading === THREE.SmoothShading;

	};

	function bufferGuessNormalType ( material ) {

		// only MeshBasicMaterial and MeshDepthMaterial don't need normals

		if ( ( material instanceof THREE.MeshBasicMaterial && !material.envMap ) || material instanceof THREE.MeshDepthMaterial ) {

			return false;

		}

		if ( materialNeedsSmoothNormals( material ) ) {

			return THREE.SmoothShading;

		} else {

			return THREE.FlatShading;

		}

	};

	function bufferGuessVertexColorType( material ) {

		if ( material.vertexColors ) {

			return material.vertexColors;

		}

		return false;

	};

	function bufferGuessUVType( material ) {

		// material must use some texture to require uvs

		if ( material.map ||
		     material.lightMap ||
		     material.bumpMap ||
		     material.normalMap ||
		     material.specularMap ||
		     material instanceof THREE.ShaderMaterial ) {

			return true;

		}

		return false;

	};

	//

	function initDirectBuffers( geometry ) {

		var a, attribute, type;

		for ( a in geometry.attributes ) {

			if ( a === "index" ) {

				type = _gl.ELEMENT_ARRAY_BUFFER;

			} else {

				type = _gl.ARRAY_BUFFER;

			}

			attribute = geometry.attributes[ a ];

			attribute.buffer = _gl.createBuffer();

			_gl.bindBuffer( type, attribute.buffer );
			_gl.bufferData( type, attribute.array, _gl.STATIC_DRAW );

		}

	};

	// Buffer setting

	function setParticleBuffers ( geometry, hint, object ) {

		var v, c, vertex, offset, index, color,

		vertices = geometry.vertices,
		vl = vertices.length,

		colors = geometry.colors,
		cl = colors.length,

		vertexArray = geometry.__vertexArray,
		colorArray = geometry.__colorArray,

		sortArray = geometry.__sortArray,

		dirtyVertices = geometry.verticesNeedUpdate,
		dirtyElements = geometry.elementsNeedUpdate,
		dirtyColors = geometry.colorsNeedUpdate,

		customAttributes = geometry.__webglCustomAttributesList,
		i, il,
		a, ca, cal, value,
		customAttribute;

		if ( object.sortParticles ) {

			_projScreenMatrixPS.copy( _projScreenMatrix );
			_projScreenMatrixPS.multiply( object.matrixWorld );

			for ( v = 0; v < vl; v ++ ) {

				vertex = vertices[ v ];

				_vector3.copy( vertex );
				_vector3.applyProjection( _projScreenMatrixPS );

				sortArray[ v ] = [ _vector3.z, v ];

			}

			sortArray.sort( numericalSort );

			for ( v = 0; v < vl; v ++ ) {

				vertex = vertices[ sortArray[v][1] ];

				offset = v * 3;

				vertexArray[ offset ]     = vertex.x;
				vertexArray[ offset + 1 ] = vertex.y;
				vertexArray[ offset + 2 ] = vertex.z;

			}

			for ( c = 0; c < cl; c ++ ) {

				offset = c * 3;

				color = colors[ sortArray[c][1] ];

				colorArray[ offset ]     = color.r;
				colorArray[ offset + 1 ] = color.g;
				colorArray[ offset + 2 ] = color.b;

			}

			if ( customAttributes ) {

				for ( i = 0, il = customAttributes.length; i < il; i ++ ) {

					customAttribute = customAttributes[ i ];

					if ( ! ( customAttribute.boundTo === undefined || customAttribute.boundTo === "vertices" ) ) continue;

					offset = 0;

					cal = customAttribute.value.length;

					if ( customAttribute.size === 1 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							index = sortArray[ ca ][ 1 ];

							customAttribute.array[ ca ] = customAttribute.value[ index ];

						}

					} else if ( customAttribute.size === 2 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							index = sortArray[ ca ][ 1 ];

							value = customAttribute.value[ index ];

							customAttribute.array[ offset ] 	= value.x;
							customAttribute.array[ offset + 1 ] = value.y;

							offset += 2;

						}

					} else if ( customAttribute.size === 3 ) {

						if ( customAttribute.type === "c" ) {

							for ( ca = 0; ca < cal; ca ++ ) {

								index = sortArray[ ca ][ 1 ];

								value = customAttribute.value[ index ];

								customAttribute.array[ offset ]     = value.r;
								customAttribute.array[ offset + 1 ] = value.g;
								customAttribute.array[ offset + 2 ] = value.b;

								offset += 3;

							}

						} else {

							for ( ca = 0; ca < cal; ca ++ ) {

								index = sortArray[ ca ][ 1 ];

								value = customAttribute.value[ index ];

								customAttribute.array[ offset ] 	= value.x;
								customAttribute.array[ offset + 1 ] = value.y;
								customAttribute.array[ offset + 2 ] = value.z;

								offset += 3;

							}

						}

					} else if ( customAttribute.size === 4 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							index = sortArray[ ca ][ 1 ];

							value = customAttribute.value[ index ];

							customAttribute.array[ offset ]      = value.x;
							customAttribute.array[ offset + 1  ] = value.y;
							customAttribute.array[ offset + 2  ] = value.z;
							customAttribute.array[ offset + 3  ] = value.w;

							offset += 4;

						}

					}

				}

			}

		} else {

			if ( dirtyVertices ) {

				for ( v = 0; v < vl; v ++ ) {

					vertex = vertices[ v ];

					offset = v * 3;

					vertexArray[ offset ]     = vertex.x;
					vertexArray[ offset + 1 ] = vertex.y;
					vertexArray[ offset + 2 ] = vertex.z;

				}

			}

			if ( dirtyColors ) {

				for ( c = 0; c < cl; c ++ ) {

					color = colors[ c ];

					offset = c * 3;

					colorArray[ offset ]     = color.r;
					colorArray[ offset + 1 ] = color.g;
					colorArray[ offset + 2 ] = color.b;

				}

			}

			if ( customAttributes ) {

				for ( i = 0, il = customAttributes.length; i < il; i ++ ) {

					customAttribute = customAttributes[ i ];

					if ( customAttribute.needsUpdate &&
						 ( customAttribute.boundTo === undefined ||
						   customAttribute.boundTo === "vertices") ) {

						cal = customAttribute.value.length;

						offset = 0;

						if ( customAttribute.size === 1 ) {

							for ( ca = 0; ca < cal; ca ++ ) {

								customAttribute.array[ ca ] = customAttribute.value[ ca ];

							}

						} else if ( customAttribute.size === 2 ) {

							for ( ca = 0; ca < cal; ca ++ ) {

								value = customAttribute.value[ ca ];

								customAttribute.array[ offset ] 	= value.x;
								customAttribute.array[ offset + 1 ] = value.y;

								offset += 2;

							}

						} else if ( customAttribute.size === 3 ) {

							if ( customAttribute.type === "c" ) {

								for ( ca = 0; ca < cal; ca ++ ) {

									value = customAttribute.value[ ca ];

									customAttribute.array[ offset ] 	= value.r;
									customAttribute.array[ offset + 1 ] = value.g;
									customAttribute.array[ offset + 2 ] = value.b;

									offset += 3;

								}

							} else {

								for ( ca = 0; ca < cal; ca ++ ) {

									value = customAttribute.value[ ca ];

									customAttribute.array[ offset ] 	= value.x;
									customAttribute.array[ offset + 1 ] = value.y;
									customAttribute.array[ offset + 2 ] = value.z;

									offset += 3;

								}

							}

						} else if ( customAttribute.size === 4 ) {

							for ( ca = 0; ca < cal; ca ++ ) {

								value = customAttribute.value[ ca ];

								customAttribute.array[ offset ]      = value.x;
								customAttribute.array[ offset + 1  ] = value.y;
								customAttribute.array[ offset + 2  ] = value.z;
								customAttribute.array[ offset + 3  ] = value.w;

								offset += 4;

							}

						}

					}

				}

			}

		}

		if ( dirtyVertices || object.sortParticles ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );

		}

		if ( dirtyColors || object.sortParticles ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );

		}

		if ( customAttributes ) {

			for ( i = 0, il = customAttributes.length; i < il; i ++ ) {

				customAttribute = customAttributes[ i ];

				if ( customAttribute.needsUpdate || object.sortParticles ) {

					_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );
					_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );

				}

			}

		}


	};

	function setLineBuffers ( geometry, hint ) {

		var v, c, d, vertex, offset, color,

		vertices = geometry.vertices,
		colors = geometry.colors,
		lineDistances = geometry.lineDistances,

		vl = vertices.length,
		cl = colors.length,
		dl = lineDistances.length,

		vertexArray = geometry.__vertexArray,
		colorArray = geometry.__colorArray,
		lineDistanceArray = geometry.__lineDistanceArray,

		dirtyVertices = geometry.verticesNeedUpdate,
		dirtyColors = geometry.colorsNeedUpdate,
		dirtyLineDistances = geometry.lineDistancesNeedUpdate,

		customAttributes = geometry.__webglCustomAttributesList,

		i, il,
		a, ca, cal, value,
		customAttribute;

		if ( dirtyVertices ) {

			for ( v = 0; v < vl; v ++ ) {

				vertex = vertices[ v ];

				offset = v * 3;

				vertexArray[ offset ]     = vertex.x;
				vertexArray[ offset + 1 ] = vertex.y;
				vertexArray[ offset + 2 ] = vertex.z;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );

		}

		if ( dirtyColors ) {

			for ( c = 0; c < cl; c ++ ) {

				color = colors[ c ];

				offset = c * 3;

				colorArray[ offset ]     = color.r;
				colorArray[ offset + 1 ] = color.g;
				colorArray[ offset + 2 ] = color.b;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );

		}

		if ( dirtyLineDistances ) {

			for ( d = 0; d < dl; d ++ ) {

				lineDistanceArray[ d ] = lineDistances[ d ];

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );

		}

		if ( customAttributes ) {

			for ( i = 0, il = customAttributes.length; i < il; i ++ ) {

				customAttribute = customAttributes[ i ];

				if ( customAttribute.needsUpdate &&
					 ( customAttribute.boundTo === undefined ||
					   customAttribute.boundTo === "vertices" ) ) {

					offset = 0;

					cal = customAttribute.value.length;

					if ( customAttribute.size === 1 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							customAttribute.array[ ca ] = customAttribute.value[ ca ];

						}

					} else if ( customAttribute.size === 2 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							value = customAttribute.value[ ca ];

							customAttribute.array[ offset ] 	= value.x;
							customAttribute.array[ offset + 1 ] = value.y;

							offset += 2;

						}

					} else if ( customAttribute.size === 3 ) {

						if ( customAttribute.type === "c" ) {

							for ( ca = 0; ca < cal; ca ++ ) {

								value = customAttribute.value[ ca ];

								customAttribute.array[ offset ] 	= value.r;
								customAttribute.array[ offset + 1 ] = value.g;
								customAttribute.array[ offset + 2 ] = value.b;

								offset += 3;

							}

						} else {

							for ( ca = 0; ca < cal; ca ++ ) {

								value = customAttribute.value[ ca ];

								customAttribute.array[ offset ] 	= value.x;
								customAttribute.array[ offset + 1 ] = value.y;
								customAttribute.array[ offset + 2 ] = value.z;

								offset += 3;

							}

						}

					} else if ( customAttribute.size === 4 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							value = customAttribute.value[ ca ];

							customAttribute.array[ offset ] 	 = value.x;
							customAttribute.array[ offset + 1  ] = value.y;
							customAttribute.array[ offset + 2  ] = value.z;
							customAttribute.array[ offset + 3  ] = value.w;

							offset += 4;

						}

					}

					_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );
					_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );

				}

			}

		}

	};

	function setRibbonBuffers ( geometry, hint ) {

		var v, c, n, vertex, offset, color, normal,

		i, il, ca, cal, customAttribute, value,

		vertices = geometry.vertices,
		colors = geometry.colors,
		normals = geometry.normals,

		vl = vertices.length,
		cl = colors.length,
		nl = normals.length,

		vertexArray = geometry.__vertexArray,
		colorArray = geometry.__colorArray,
		normalArray = geometry.__normalArray,

		dirtyVertices = geometry.verticesNeedUpdate,
		dirtyColors = geometry.colorsNeedUpdate,
		dirtyNormals = geometry.normalsNeedUpdate,

		customAttributes = geometry.__webglCustomAttributesList;

		if ( dirtyVertices ) {

			for ( v = 0; v < vl; v ++ ) {

				vertex = vertices[ v ];

				offset = v * 3;

				vertexArray[ offset ]     = vertex.x;
				vertexArray[ offset + 1 ] = vertex.y;
				vertexArray[ offset + 2 ] = vertex.z;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );

		}

		if ( dirtyColors ) {

			for ( c = 0; c < cl; c ++ ) {

				color = colors[ c ];

				offset = c * 3;

				colorArray[ offset ]     = color.r;
				colorArray[ offset + 1 ] = color.g;
				colorArray[ offset + 2 ] = color.b;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );

		}

		if ( dirtyNormals ) {

			for ( n = 0; n < nl; n ++ ) {

				normal = normals[ n ];

				offset = n * 3;

				normalArray[ offset ]     = normal.x;
				normalArray[ offset + 1 ] = normal.y;
				normalArray[ offset + 2 ] = normal.z;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglNormalBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );

		}

		if ( customAttributes ) {

			for ( i = 0, il = customAttributes.length; i < il; i ++ ) {

				customAttribute = customAttributes[ i ];

				if ( customAttribute.needsUpdate &&
					 ( customAttribute.boundTo === undefined ||
					   customAttribute.boundTo === "vertices" ) ) {

					offset = 0;

					cal = customAttribute.value.length;

					if ( customAttribute.size === 1 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							customAttribute.array[ ca ] = customAttribute.value[ ca ];

						}

					} else if ( customAttribute.size === 2 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							value = customAttribute.value[ ca ];

							customAttribute.array[ offset ] 	= value.x;
							customAttribute.array[ offset + 1 ] = value.y;

							offset += 2;

						}

					} else if ( customAttribute.size === 3 ) {

						if ( customAttribute.type === "c" ) {

							for ( ca = 0; ca < cal; ca ++ ) {

								value = customAttribute.value[ ca ];

								customAttribute.array[ offset ] 	= value.r;
								customAttribute.array[ offset + 1 ] = value.g;
								customAttribute.array[ offset + 2 ] = value.b;

								offset += 3;

							}

						} else {

							for ( ca = 0; ca < cal; ca ++ ) {

								value = customAttribute.value[ ca ];

								customAttribute.array[ offset ] 	= value.x;
								customAttribute.array[ offset + 1 ] = value.y;
								customAttribute.array[ offset + 2 ] = value.z;

								offset += 3;

							}

						}

					} else if ( customAttribute.size === 4 ) {

						for ( ca = 0; ca < cal; ca ++ ) {

							value = customAttribute.value[ ca ];

							customAttribute.array[ offset ] 	 = value.x;
							customAttribute.array[ offset + 1  ] = value.y;
							customAttribute.array[ offset + 2  ] = value.z;
							customAttribute.array[ offset + 3  ] = value.w;

							offset += 4;

						}

					}

					_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );
					_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );

				}

			}

		}

	};

	function setMeshBuffers( geometryGroup, object, hint, dispose, material ) {

		if ( ! geometryGroup.__inittedArrays ) {

			return;

		}

		var normalType = bufferGuessNormalType( material ),
		vertexColorType = bufferGuessVertexColorType( material ),
		uvType = bufferGuessUVType( material ),

		needsSmoothNormals = ( normalType === THREE.SmoothShading );

		var f, fl, fi, face,
		vertexNormals, faceNormal, normal,
		vertexColors, faceColor,
		vertexTangents,
		uv, uv2, v1, v2, v3, v4, t1, t2, t3, t4, n1, n2, n3, n4,
		c1, c2, c3, c4,
		sw1, sw2, sw3, sw4,
		si1, si2, si3, si4,
		sa1, sa2, sa3, sa4,
		sb1, sb2, sb3, sb4,
		m, ml, i, il,
		vn, uvi, uv2i,
		vk, vkl, vka,
		nka, chf, faceVertexNormals,
		a,

		vertexIndex = 0,

		offset = 0,
		offset_uv = 0,
		offset_uv2 = 0,
		offset_face = 0,
		offset_normal = 0,
		offset_tangent = 0,
		offset_line = 0,
		offset_color = 0,
		offset_skin = 0,
		offset_morphTarget = 0,
		offset_custom = 0,
		offset_customSrc = 0,

		value,

		vertexArray = geometryGroup.__vertexArray,
		uvArray = geometryGroup.__uvArray,
		uv2Array = geometryGroup.__uv2Array,
		normalArray = geometryGroup.__normalArray,
		tangentArray = geometryGroup.__tangentArray,
		colorArray = geometryGroup.__colorArray,

		skinIndexArray = geometryGroup.__skinIndexArray,
		skinWeightArray = geometryGroup.__skinWeightArray,

		morphTargetsArrays = geometryGroup.__morphTargetsArrays,
		morphNormalsArrays = geometryGroup.__morphNormalsArrays,

		customAttributes = geometryGroup.__webglCustomAttributesList,
		customAttribute,

		faceArray = geometryGroup.__faceArray,
		lineArray = geometryGroup.__lineArray,

		geometry = object.geometry, // this is shared for all chunks

		dirtyVertices = geometry.verticesNeedUpdate,
		dirtyElements = geometry.elementsNeedUpdate,
		dirtyUvs = geometry.uvsNeedUpdate,
		dirtyNormals = geometry.normalsNeedUpdate,
		dirtyTangents = geometry.tangentsNeedUpdate,
		dirtyColors = geometry.colorsNeedUpdate,
		dirtyMorphTargets = geometry.morphTargetsNeedUpdate,

		vertices = geometry.vertices,
		chunk_faces3 = geometryGroup.faces3,
		chunk_faces4 = geometryGroup.faces4,
		obj_faces = geometry.faces,

		obj_uvs  = geometry.faceVertexUvs[ 0 ],
		obj_uvs2 = geometry.faceVertexUvs[ 1 ],

		obj_colors = geometry.colors,

		obj_skinIndices = geometry.skinIndices,
		obj_skinWeights = geometry.skinWeights,

		morphTargets = geometry.morphTargets,
		morphNormals = geometry.morphNormals;

		if ( dirtyVertices ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces3[ f ] ];

				v1 = vertices[ face.a ];
				v2 = vertices[ face.b ];
				v3 = vertices[ face.c ];

				vertexArray[ offset ]     = v1.x;
				vertexArray[ offset + 1 ] = v1.y;
				vertexArray[ offset + 2 ] = v1.z;

				vertexArray[ offset + 3 ] = v2.x;
				vertexArray[ offset + 4 ] = v2.y;
				vertexArray[ offset + 5 ] = v2.z;

				vertexArray[ offset + 6 ] = v3.x;
				vertexArray[ offset + 7 ] = v3.y;
				vertexArray[ offset + 8 ] = v3.z;

				offset += 9;

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces4[ f ] ];

				v1 = vertices[ face.a ];
				v2 = vertices[ face.b ];
				v3 = vertices[ face.c ];
				v4 = vertices[ face.d ];

				vertexArray[ offset ]     = v1.x;
				vertexArray[ offset + 1 ] = v1.y;
				vertexArray[ offset + 2 ] = v1.z;

				vertexArray[ offset + 3 ] = v2.x;
				vertexArray[ offset + 4 ] = v2.y;
				vertexArray[ offset + 5 ] = v2.z;

				vertexArray[ offset + 6 ] = v3.x;
				vertexArray[ offset + 7 ] = v3.y;
				vertexArray[ offset + 8 ] = v3.z;

				vertexArray[ offset + 9 ]  = v4.x;
				vertexArray[ offset + 10 ] = v4.y;
				vertexArray[ offset + 11 ] = v4.z;

				offset += 12;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );

		}

		if ( dirtyMorphTargets ) {

			for ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {

				offset_morphTarget = 0;

				for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

					chf = chunk_faces3[ f ];
					face = obj_faces[ chf ];

					// morph positions

					v1 = morphTargets[ vk ].vertices[ face.a ];
					v2 = morphTargets[ vk ].vertices[ face.b ];
					v3 = morphTargets[ vk ].vertices[ face.c ];

					vka = morphTargetsArrays[ vk ];

					vka[ offset_morphTarget ] 	  = v1.x;
					vka[ offset_morphTarget + 1 ] = v1.y;
					vka[ offset_morphTarget + 2 ] = v1.z;

					vka[ offset_morphTarget + 3 ] = v2.x;
					vka[ offset_morphTarget + 4 ] = v2.y;
					vka[ offset_morphTarget + 5 ] = v2.z;

					vka[ offset_morphTarget + 6 ] = v3.x;
					vka[ offset_morphTarget + 7 ] = v3.y;
					vka[ offset_morphTarget + 8 ] = v3.z;

					// morph normals

					if ( material.morphNormals ) {

						if ( needsSmoothNormals ) {

							faceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];

							n1 = faceVertexNormals.a;
							n2 = faceVertexNormals.b;
							n3 = faceVertexNormals.c;

						} else {

							n1 = morphNormals[ vk ].faceNormals[ chf ];
							n2 = n1;
							n3 = n1;

						}

						nka = morphNormalsArrays[ vk ];

						nka[ offset_morphTarget ] 	  = n1.x;
						nka[ offset_morphTarget + 1 ] = n1.y;
						nka[ offset_morphTarget + 2 ] = n1.z;

						nka[ offset_morphTarget + 3 ] = n2.x;
						nka[ offset_morphTarget + 4 ] = n2.y;
						nka[ offset_morphTarget + 5 ] = n2.z;

						nka[ offset_morphTarget + 6 ] = n3.x;
						nka[ offset_morphTarget + 7 ] = n3.y;
						nka[ offset_morphTarget + 8 ] = n3.z;

					}

					//

					offset_morphTarget += 9;

				}

				for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

					chf = chunk_faces4[ f ];
					face = obj_faces[ chf ];

					// morph positions

					v1 = morphTargets[ vk ].vertices[ face.a ];
					v2 = morphTargets[ vk ].vertices[ face.b ];
					v3 = morphTargets[ vk ].vertices[ face.c ];
					v4 = morphTargets[ vk ].vertices[ face.d ];

					vka = morphTargetsArrays[ vk ];

					vka[ offset_morphTarget ] 	  = v1.x;
					vka[ offset_morphTarget + 1 ] = v1.y;
					vka[ offset_morphTarget + 2 ] = v1.z;

					vka[ offset_morphTarget + 3 ] = v2.x;
					vka[ offset_morphTarget + 4 ] = v2.y;
					vka[ offset_morphTarget + 5 ] = v2.z;

					vka[ offset_morphTarget + 6 ] = v3.x;
					vka[ offset_morphTarget + 7 ] = v3.y;
					vka[ offset_morphTarget + 8 ] = v3.z;

					vka[ offset_morphTarget + 9 ]  = v4.x;
					vka[ offset_morphTarget + 10 ] = v4.y;
					vka[ offset_morphTarget + 11 ] = v4.z;

					// morph normals

					if ( material.morphNormals ) {

						if ( needsSmoothNormals ) {

							faceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];

							n1 = faceVertexNormals.a;
							n2 = faceVertexNormals.b;
							n3 = faceVertexNormals.c;
							n4 = faceVertexNormals.d;

						} else {

							n1 = morphNormals[ vk ].faceNormals[ chf ];
							n2 = n1;
							n3 = n1;
							n4 = n1;

						}

						nka = morphNormalsArrays[ vk ];

						nka[ offset_morphTarget ] 	  = n1.x;
						nka[ offset_morphTarget + 1 ] = n1.y;
						nka[ offset_morphTarget + 2 ] = n1.z;

						nka[ offset_morphTarget + 3 ] = n2.x;
						nka[ offset_morphTarget + 4 ] = n2.y;
						nka[ offset_morphTarget + 5 ] = n2.z;

						nka[ offset_morphTarget + 6 ] = n3.x;
						nka[ offset_morphTarget + 7 ] = n3.y;
						nka[ offset_morphTarget + 8 ] = n3.z;

						nka[ offset_morphTarget + 9 ]  = n4.x;
						nka[ offset_morphTarget + 10 ] = n4.y;
						nka[ offset_morphTarget + 11 ] = n4.z;

					}

					//

					offset_morphTarget += 12;

				}

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );
				_gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );

				if ( material.morphNormals ) {

					_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );
					_gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );

				}

			}

		}

		if ( obj_skinWeights.length ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces3[ f ]	];

				// weights

				sw1 = obj_skinWeights[ face.a ];
				sw2 = obj_skinWeights[ face.b ];
				sw3 = obj_skinWeights[ face.c ];

				skinWeightArray[ offset_skin ]     = sw1.x;
				skinWeightArray[ offset_skin + 1 ] = sw1.y;
				skinWeightArray[ offset_skin + 2 ] = sw1.z;
				skinWeightArray[ offset_skin + 3 ] = sw1.w;

				skinWeightArray[ offset_skin + 4 ] = sw2.x;
				skinWeightArray[ offset_skin + 5 ] = sw2.y;
				skinWeightArray[ offset_skin + 6 ] = sw2.z;
				skinWeightArray[ offset_skin + 7 ] = sw2.w;

				skinWeightArray[ offset_skin + 8 ]  = sw3.x;
				skinWeightArray[ offset_skin + 9 ]  = sw3.y;
				skinWeightArray[ offset_skin + 10 ] = sw3.z;
				skinWeightArray[ offset_skin + 11 ] = sw3.w;

				// indices

				si1 = obj_skinIndices[ face.a ];
				si2 = obj_skinIndices[ face.b ];
				si3 = obj_skinIndices[ face.c ];

				skinIndexArray[ offset_skin ]     = si1.x;
				skinIndexArray[ offset_skin + 1 ] = si1.y;
				skinIndexArray[ offset_skin + 2 ] = si1.z;
				skinIndexArray[ offset_skin + 3 ] = si1.w;

				skinIndexArray[ offset_skin + 4 ] = si2.x;
				skinIndexArray[ offset_skin + 5 ] = si2.y;
				skinIndexArray[ offset_skin + 6 ] = si2.z;
				skinIndexArray[ offset_skin + 7 ] = si2.w;

				skinIndexArray[ offset_skin + 8 ]  = si3.x;
				skinIndexArray[ offset_skin + 9 ]  = si3.y;
				skinIndexArray[ offset_skin + 10 ] = si3.z;
				skinIndexArray[ offset_skin + 11 ] = si3.w;

				offset_skin += 12;

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces4[ f ] ];

				// weights

				sw1 = obj_skinWeights[ face.a ];
				sw2 = obj_skinWeights[ face.b ];
				sw3 = obj_skinWeights[ face.c ];
				sw4 = obj_skinWeights[ face.d ];

				skinWeightArray[ offset_skin ]     = sw1.x;
				skinWeightArray[ offset_skin + 1 ] = sw1.y;
				skinWeightArray[ offset_skin + 2 ] = sw1.z;
				skinWeightArray[ offset_skin + 3 ] = sw1.w;

				skinWeightArray[ offset_skin + 4 ] = sw2.x;
				skinWeightArray[ offset_skin + 5 ] = sw2.y;
				skinWeightArray[ offset_skin + 6 ] = sw2.z;
				skinWeightArray[ offset_skin + 7 ] = sw2.w;

				skinWeightArray[ offset_skin + 8 ]  = sw3.x;
				skinWeightArray[ offset_skin + 9 ]  = sw3.y;
				skinWeightArray[ offset_skin + 10 ] = sw3.z;
				skinWeightArray[ offset_skin + 11 ] = sw3.w;

				skinWeightArray[ offset_skin + 12 ] = sw4.x;
				skinWeightArray[ offset_skin + 13 ] = sw4.y;
				skinWeightArray[ offset_skin + 14 ] = sw4.z;
				skinWeightArray[ offset_skin + 15 ] = sw4.w;

				// indices

				si1 = obj_skinIndices[ face.a ];
				si2 = obj_skinIndices[ face.b ];
				si3 = obj_skinIndices[ face.c ];
				si4 = obj_skinIndices[ face.d ];

				skinIndexArray[ offset_skin ]     = si1.x;
				skinIndexArray[ offset_skin + 1 ] = si1.y;
				skinIndexArray[ offset_skin + 2 ] = si1.z;
				skinIndexArray[ offset_skin + 3 ] = si1.w;

				skinIndexArray[ offset_skin + 4 ] = si2.x;
				skinIndexArray[ offset_skin + 5 ] = si2.y;
				skinIndexArray[ offset_skin + 6 ] = si2.z;
				skinIndexArray[ offset_skin + 7 ] = si2.w;

				skinIndexArray[ offset_skin + 8 ]  = si3.x;
				skinIndexArray[ offset_skin + 9 ]  = si3.y;
				skinIndexArray[ offset_skin + 10 ] = si3.z;
				skinIndexArray[ offset_skin + 11 ] = si3.w;

				skinIndexArray[ offset_skin + 12 ] = si4.x;
				skinIndexArray[ offset_skin + 13 ] = si4.y;
				skinIndexArray[ offset_skin + 14 ] = si4.z;
				skinIndexArray[ offset_skin + 15 ] = si4.w;

				offset_skin += 16;

			}

			if ( offset_skin > 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );
				_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );
				_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );

			}

		}

		if ( dirtyColors && vertexColorType ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces3[ f ]	];

				vertexColors = face.vertexColors;
				faceColor = face.color;

				if ( vertexColors.length === 3 && vertexColorType === THREE.VertexColors ) {

					c1 = vertexColors[ 0 ];
					c2 = vertexColors[ 1 ];
					c3 = vertexColors[ 2 ];

				} else {

					c1 = faceColor;
					c2 = faceColor;
					c3 = faceColor;

				}

				colorArray[ offset_color ]     = c1.r;
				colorArray[ offset_color + 1 ] = c1.g;
				colorArray[ offset_color + 2 ] = c1.b;

				colorArray[ offset_color + 3 ] = c2.r;
				colorArray[ offset_color + 4 ] = c2.g;
				colorArray[ offset_color + 5 ] = c2.b;

				colorArray[ offset_color + 6 ] = c3.r;
				colorArray[ offset_color + 7 ] = c3.g;
				colorArray[ offset_color + 8 ] = c3.b;

				offset_color += 9;

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces4[ f ] ];

				vertexColors = face.vertexColors;
				faceColor = face.color;

				if ( vertexColors.length === 4 && vertexColorType === THREE.VertexColors ) {

					c1 = vertexColors[ 0 ];
					c2 = vertexColors[ 1 ];
					c3 = vertexColors[ 2 ];
					c4 = vertexColors[ 3 ];

				} else {

					c1 = faceColor;
					c2 = faceColor;
					c3 = faceColor;
					c4 = faceColor;

				}

				colorArray[ offset_color ]     = c1.r;
				colorArray[ offset_color + 1 ] = c1.g;
				colorArray[ offset_color + 2 ] = c1.b;

				colorArray[ offset_color + 3 ] = c2.r;
				colorArray[ offset_color + 4 ] = c2.g;
				colorArray[ offset_color + 5 ] = c2.b;

				colorArray[ offset_color + 6 ] = c3.r;
				colorArray[ offset_color + 7 ] = c3.g;
				colorArray[ offset_color + 8 ] = c3.b;

				colorArray[ offset_color + 9 ]  = c4.r;
				colorArray[ offset_color + 10 ] = c4.g;
				colorArray[ offset_color + 11 ] = c4.b;

				offset_color += 12;

			}

			if ( offset_color > 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );
				_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );

			}

		}

		if ( dirtyTangents && geometry.hasTangents ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces3[ f ]	];

				vertexTangents = face.vertexTangents;

				t1 = vertexTangents[ 0 ];
				t2 = vertexTangents[ 1 ];
				t3 = vertexTangents[ 2 ];

				tangentArray[ offset_tangent ]     = t1.x;
				tangentArray[ offset_tangent + 1 ] = t1.y;
				tangentArray[ offset_tangent + 2 ] = t1.z;
				tangentArray[ offset_tangent + 3 ] = t1.w;

				tangentArray[ offset_tangent + 4 ] = t2.x;
				tangentArray[ offset_tangent + 5 ] = t2.y;
				tangentArray[ offset_tangent + 6 ] = t2.z;
				tangentArray[ offset_tangent + 7 ] = t2.w;

				tangentArray[ offset_tangent + 8 ]  = t3.x;
				tangentArray[ offset_tangent + 9 ]  = t3.y;
				tangentArray[ offset_tangent + 10 ] = t3.z;
				tangentArray[ offset_tangent + 11 ] = t3.w;

				offset_tangent += 12;

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces4[ f ] ];

				vertexTangents = face.vertexTangents;

				t1 = vertexTangents[ 0 ];
				t2 = vertexTangents[ 1 ];
				t3 = vertexTangents[ 2 ];
				t4 = vertexTangents[ 3 ];

				tangentArray[ offset_tangent ]     = t1.x;
				tangentArray[ offset_tangent + 1 ] = t1.y;
				tangentArray[ offset_tangent + 2 ] = t1.z;
				tangentArray[ offset_tangent + 3 ] = t1.w;

				tangentArray[ offset_tangent + 4 ] = t2.x;
				tangentArray[ offset_tangent + 5 ] = t2.y;
				tangentArray[ offset_tangent + 6 ] = t2.z;
				tangentArray[ offset_tangent + 7 ] = t2.w;

				tangentArray[ offset_tangent + 8 ]  = t3.x;
				tangentArray[ offset_tangent + 9 ]  = t3.y;
				tangentArray[ offset_tangent + 10 ] = t3.z;
				tangentArray[ offset_tangent + 11 ] = t3.w;

				tangentArray[ offset_tangent + 12 ] = t4.x;
				tangentArray[ offset_tangent + 13 ] = t4.y;
				tangentArray[ offset_tangent + 14 ] = t4.z;
				tangentArray[ offset_tangent + 15 ] = t4.w;

				offset_tangent += 16;

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );

		}

		if ( dirtyNormals && normalType ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces3[ f ]	];

				vertexNormals = face.vertexNormals;
				faceNormal = face.normal;

				if ( vertexNormals.length === 3 && needsSmoothNormals ) {

					for ( i = 0; i < 3; i ++ ) {

						vn = vertexNormals[ i ];

						normalArray[ offset_normal ]     = vn.x;
						normalArray[ offset_normal + 1 ] = vn.y;
						normalArray[ offset_normal + 2 ] = vn.z;

						offset_normal += 3;

					}

				} else {

					for ( i = 0; i < 3; i ++ ) {

						normalArray[ offset_normal ]     = faceNormal.x;
						normalArray[ offset_normal + 1 ] = faceNormal.y;
						normalArray[ offset_normal + 2 ] = faceNormal.z;

						offset_normal += 3;

					}

				}

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				face = obj_faces[ chunk_faces4[ f ] ];

				vertexNormals = face.vertexNormals;
				faceNormal = face.normal;

				if ( vertexNormals.length === 4 && needsSmoothNormals ) {

					for ( i = 0; i < 4; i ++ ) {

						vn = vertexNormals[ i ];

						normalArray[ offset_normal ]     = vn.x;
						normalArray[ offset_normal + 1 ] = vn.y;
						normalArray[ offset_normal + 2 ] = vn.z;

						offset_normal += 3;

					}

				} else {

					for ( i = 0; i < 4; i ++ ) {

						normalArray[ offset_normal ]     = faceNormal.x;
						normalArray[ offset_normal + 1 ] = faceNormal.y;
						normalArray[ offset_normal + 2 ] = faceNormal.z;

						offset_normal += 3;

					}

				}

			}

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );

		}

		if ( dirtyUvs && obj_uvs && uvType ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				fi = chunk_faces3[ f ];

				uv = obj_uvs[ fi ];

				if ( uv === undefined ) continue;

				for ( i = 0; i < 3; i ++ ) {

					uvi = uv[ i ];

					uvArray[ offset_uv ]     = uvi.x;
					uvArray[ offset_uv + 1 ] = uvi.y;

					offset_uv += 2;

				}

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				fi = chunk_faces4[ f ];

				uv = obj_uvs[ fi ];

				if ( uv === undefined ) continue;

				for ( i = 0; i < 4; i ++ ) {

					uvi = uv[ i ];

					uvArray[ offset_uv ]     = uvi.x;
					uvArray[ offset_uv + 1 ] = uvi.y;

					offset_uv += 2;

				}

			}

			if ( offset_uv > 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );
				_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );

			}

		}

		if ( dirtyUvs && obj_uvs2 && uvType ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				fi = chunk_faces3[ f ];

				uv2 = obj_uvs2[ fi ];

				if ( uv2 === undefined ) continue;

				for ( i = 0; i < 3; i ++ ) {

					uv2i = uv2[ i ];

					uv2Array[ offset_uv2 ]     = uv2i.x;
					uv2Array[ offset_uv2 + 1 ] = uv2i.y;

					offset_uv2 += 2;

				}

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				fi = chunk_faces4[ f ];

				uv2 = obj_uvs2[ fi ];

				if ( uv2 === undefined ) continue;

				for ( i = 0; i < 4; i ++ ) {

					uv2i = uv2[ i ];

					uv2Array[ offset_uv2 ]     = uv2i.x;
					uv2Array[ offset_uv2 + 1 ] = uv2i.y;

					offset_uv2 += 2;

				}

			}

			if ( offset_uv2 > 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );
				_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );

			}

		}

		if ( dirtyElements ) {

			for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

				faceArray[ offset_face ] 	 = vertexIndex;
				faceArray[ offset_face + 1 ] = vertexIndex + 1;
				faceArray[ offset_face + 2 ] = vertexIndex + 2;

				offset_face += 3;

				lineArray[ offset_line ]     = vertexIndex;
				lineArray[ offset_line + 1 ] = vertexIndex + 1;

				lineArray[ offset_line + 2 ] = vertexIndex;
				lineArray[ offset_line + 3 ] = vertexIndex + 2;

				lineArray[ offset_line + 4 ] = vertexIndex + 1;
				lineArray[ offset_line + 5 ] = vertexIndex + 2;

				offset_line += 6;

				vertexIndex += 3;

			}

			for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

				faceArray[ offset_face ]     = vertexIndex;
				faceArray[ offset_face + 1 ] = vertexIndex + 1;
				faceArray[ offset_face + 2 ] = vertexIndex + 3;

				faceArray[ offset_face + 3 ] = vertexIndex + 1;
				faceArray[ offset_face + 4 ] = vertexIndex + 2;
				faceArray[ offset_face + 5 ] = vertexIndex + 3;

				offset_face += 6;

				lineArray[ offset_line ]     = vertexIndex;
				lineArray[ offset_line + 1 ] = vertexIndex + 1;

				lineArray[ offset_line + 2 ] = vertexIndex;
				lineArray[ offset_line + 3 ] = vertexIndex + 3;

				lineArray[ offset_line + 4 ] = vertexIndex + 1;
				lineArray[ offset_line + 5 ] = vertexIndex + 2;

				lineArray[ offset_line + 6 ] = vertexIndex + 2;
				lineArray[ offset_line + 7 ] = vertexIndex + 3;

				offset_line += 8;

				vertexIndex += 4;

			}

			_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );
			_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );

			_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );
			_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );

		}

		if ( customAttributes ) {

			for ( i = 0, il = customAttributes.length; i < il; i ++ ) {

				customAttribute = customAttributes[ i ];

				if ( ! customAttribute.__original.needsUpdate ) continue;

				offset_custom = 0;
				offset_customSrc = 0;

				if ( customAttribute.size === 1 ) {

					if ( customAttribute.boundTo === undefined || customAttribute.boundTo === "vertices" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces3[ f ]	];

							customAttribute.array[ offset_custom ] 	   = customAttribute.value[ face.a ];
							customAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];
							customAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];

							offset_custom += 3;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces4[ f ] ];

							customAttribute.array[ offset_custom ] 	   = customAttribute.value[ face.a ];
							customAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];
							customAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];
							customAttribute.array[ offset_custom + 3 ] = customAttribute.value[ face.d ];

							offset_custom += 4;

						}

					} else if ( customAttribute.boundTo === "faces" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces3[ f ] ];

							customAttribute.array[ offset_custom ] 	   = value;
							customAttribute.array[ offset_custom + 1 ] = value;
							customAttribute.array[ offset_custom + 2 ] = value;

							offset_custom += 3;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces4[ f ] ];

							customAttribute.array[ offset_custom ] 	   = value;
							customAttribute.array[ offset_custom + 1 ] = value;
							customAttribute.array[ offset_custom + 2 ] = value;
							customAttribute.array[ offset_custom + 3 ] = value;

							offset_custom += 4;

						}

					}

				} else if ( customAttribute.size === 2 ) {

					if ( customAttribute.boundTo === undefined || customAttribute.boundTo === "vertices" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces3[ f ]	];

							v1 = customAttribute.value[ face.a ];
							v2 = customAttribute.value[ face.b ];
							v3 = customAttribute.value[ face.c ];

							customAttribute.array[ offset_custom ] 	   = v1.x;
							customAttribute.array[ offset_custom + 1 ] = v1.y;

							customAttribute.array[ offset_custom + 2 ] = v2.x;
							customAttribute.array[ offset_custom + 3 ] = v2.y;

							customAttribute.array[ offset_custom + 4 ] = v3.x;
							customAttribute.array[ offset_custom + 5 ] = v3.y;

							offset_custom += 6;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces4[ f ] ];

							v1 = customAttribute.value[ face.a ];
							v2 = customAttribute.value[ face.b ];
							v3 = customAttribute.value[ face.c ];
							v4 = customAttribute.value[ face.d ];

							customAttribute.array[ offset_custom ] 	   = v1.x;
							customAttribute.array[ offset_custom + 1 ] = v1.y;

							customAttribute.array[ offset_custom + 2 ] = v2.x;
							customAttribute.array[ offset_custom + 3 ] = v2.y;

							customAttribute.array[ offset_custom + 4 ] = v3.x;
							customAttribute.array[ offset_custom + 5 ] = v3.y;

							customAttribute.array[ offset_custom + 6 ] = v4.x;
							customAttribute.array[ offset_custom + 7 ] = v4.y;

							offset_custom += 8;

						}

					} else if ( customAttribute.boundTo === "faces" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces3[ f ] ];

							v1 = value;
							v2 = value;
							v3 = value;

							customAttribute.array[ offset_custom ] 	   = v1.x;
							customAttribute.array[ offset_custom + 1 ] = v1.y;

							customAttribute.array[ offset_custom + 2 ] = v2.x;
							customAttribute.array[ offset_custom + 3 ] = v2.y;

							customAttribute.array[ offset_custom + 4 ] = v3.x;
							customAttribute.array[ offset_custom + 5 ] = v3.y;

							offset_custom += 6;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces4[ f ] ];

							v1 = value;
							v2 = value;
							v3 = value;
							v4 = value;

							customAttribute.array[ offset_custom ] 	   = v1.x;
							customAttribute.array[ offset_custom + 1 ] = v1.y;

							customAttribute.array[ offset_custom + 2 ] = v2.x;
							customAttribute.array[ offset_custom + 3 ] = v2.y;

							customAttribute.array[ offset_custom + 4 ] = v3.x;
							customAttribute.array[ offset_custom + 5 ] = v3.y;

							customAttribute.array[ offset_custom + 6 ] = v4.x;
							customAttribute.array[ offset_custom + 7 ] = v4.y;

							offset_custom += 8;

						}

					}

				} else if ( customAttribute.size === 3 ) {

					var pp;

					if ( customAttribute.type === "c" ) {

						pp = [ "r", "g", "b" ];

					} else {

						pp = [ "x", "y", "z" ];

					}

					if ( customAttribute.boundTo === undefined || customAttribute.boundTo === "vertices" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces3[ f ]	];

							v1 = customAttribute.value[ face.a ];
							v2 = customAttribute.value[ face.b ];
							v3 = customAttribute.value[ face.c ];

							customAttribute.array[ offset_custom ] 	   = v1[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];

							offset_custom += 9;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces4[ f ] ];

							v1 = customAttribute.value[ face.a ];
							v2 = customAttribute.value[ face.b ];
							v3 = customAttribute.value[ face.c ];
							v4 = customAttribute.value[ face.d ];

							customAttribute.array[ offset_custom  ] 	= v1[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 1  ] = v1[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 2  ] = v1[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 3  ] = v2[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 4  ] = v2[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 5  ] = v2[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 6  ] = v3[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 7  ] = v3[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 8  ] = v3[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 9  ] = v4[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 10 ] = v4[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 11 ] = v4[ pp[ 2 ] ];

							offset_custom += 12;

						}

					} else if ( customAttribute.boundTo === "faces" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces3[ f ] ];

							v1 = value;
							v2 = value;
							v3 = value;

							customAttribute.array[ offset_custom ] 	   = v1[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];

							offset_custom += 9;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces4[ f ] ];

							v1 = value;
							v2 = value;
							v3 = value;
							v4 = value;

							customAttribute.array[ offset_custom  ] 	= v1[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 1  ] = v1[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 2  ] = v1[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 3  ] = v2[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 4  ] = v2[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 5  ] = v2[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 6  ] = v3[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 7  ] = v3[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 8  ] = v3[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 9  ] = v4[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 10 ] = v4[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 11 ] = v4[ pp[ 2 ] ];

							offset_custom += 12;

						}

					} else if ( customAttribute.boundTo === "faceVertices" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces3[ f ] ];

							v1 = value[ 0 ];
							v2 = value[ 1 ];
							v3 = value[ 2 ];

							customAttribute.array[ offset_custom ] 	   = v1[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];

							offset_custom += 9;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces4[ f ] ];

							v1 = value[ 0 ];
							v2 = value[ 1 ];
							v3 = value[ 2 ];
							v4 = value[ 3 ];

							customAttribute.array[ offset_custom  ] 	= v1[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 1  ] = v1[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 2  ] = v1[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 3  ] = v2[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 4  ] = v2[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 5  ] = v2[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 6  ] = v3[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 7  ] = v3[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 8  ] = v3[ pp[ 2 ] ];

							customAttribute.array[ offset_custom + 9  ] = v4[ pp[ 0 ] ];
							customAttribute.array[ offset_custom + 10 ] = v4[ pp[ 1 ] ];
							customAttribute.array[ offset_custom + 11 ] = v4[ pp[ 2 ] ];

							offset_custom += 12;

						}

					}

				} else if ( customAttribute.size === 4 ) {

					if ( customAttribute.boundTo === undefined || customAttribute.boundTo === "vertices" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces3[ f ]	];

							v1 = customAttribute.value[ face.a ];
							v2 = customAttribute.value[ face.b ];
							v3 = customAttribute.value[ face.c ];

							customAttribute.array[ offset_custom  ] 	= v1.x;
							customAttribute.array[ offset_custom + 1  ] = v1.y;
							customAttribute.array[ offset_custom + 2  ] = v1.z;
							customAttribute.array[ offset_custom + 3  ] = v1.w;

							customAttribute.array[ offset_custom + 4  ] = v2.x;
							customAttribute.array[ offset_custom + 5  ] = v2.y;
							customAttribute.array[ offset_custom + 6  ] = v2.z;
							customAttribute.array[ offset_custom + 7  ] = v2.w;

							customAttribute.array[ offset_custom + 8  ] = v3.x;
							customAttribute.array[ offset_custom + 9  ] = v3.y;
							customAttribute.array[ offset_custom + 10 ] = v3.z;
							customAttribute.array[ offset_custom + 11 ] = v3.w;

							offset_custom += 12;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							face = obj_faces[ chunk_faces4[ f ] ];

							v1 = customAttribute.value[ face.a ];
							v2 = customAttribute.value[ face.b ];
							v3 = customAttribute.value[ face.c ];
							v4 = customAttribute.value[ face.d ];

							customAttribute.array[ offset_custom  ] 	= v1.x;
							customAttribute.array[ offset_custom + 1  ] = v1.y;
							customAttribute.array[ offset_custom + 2  ] = v1.z;
							customAttribute.array[ offset_custom + 3  ] = v1.w;

							customAttribute.array[ offset_custom + 4  ] = v2.x;
							customAttribute.array[ offset_custom + 5  ] = v2.y;
							customAttribute.array[ offset_custom + 6  ] = v2.z;
							customAttribute.array[ offset_custom + 7  ] = v2.w;

							customAttribute.array[ offset_custom + 8  ] = v3.x;
							customAttribute.array[ offset_custom + 9  ] = v3.y;
							customAttribute.array[ offset_custom + 10 ] = v3.z;
							customAttribute.array[ offset_custom + 11 ] = v3.w;

							customAttribute.array[ offset_custom + 12 ] = v4.x;
							customAttribute.array[ offset_custom + 13 ] = v4.y;
							customAttribute.array[ offset_custom + 14 ] = v4.z;
							customAttribute.array[ offset_custom + 15 ] = v4.w;

							offset_custom += 16;

						}

					} else if ( customAttribute.boundTo === "faces" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces3[ f ] ];

							v1 = value;
							v2 = value;
							v3 = value;

							customAttribute.array[ offset_custom  ] 	= v1.x;
							customAttribute.array[ offset_custom + 1  ] = v1.y;
							customAttribute.array[ offset_custom + 2  ] = v1.z;
							customAttribute.array[ offset_custom + 3  ] = v1.w;

							customAttribute.array[ offset_custom + 4  ] = v2.x;
							customAttribute.array[ offset_custom + 5  ] = v2.y;
							customAttribute.array[ offset_custom + 6  ] = v2.z;
							customAttribute.array[ offset_custom + 7  ] = v2.w;

							customAttribute.array[ offset_custom + 8  ] = v3.x;
							customAttribute.array[ offset_custom + 9  ] = v3.y;
							customAttribute.array[ offset_custom + 10 ] = v3.z;
							customAttribute.array[ offset_custom + 11 ] = v3.w;

							offset_custom += 12;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces4[ f ] ];

							v1 = value;
							v2 = value;
							v3 = value;
							v4 = value;

							customAttribute.array[ offset_custom  ] 	= v1.x;
							customAttribute.array[ offset_custom + 1  ] = v1.y;
							customAttribute.array[ offset_custom + 2  ] = v1.z;
							customAttribute.array[ offset_custom + 3  ] = v1.w;

							customAttribute.array[ offset_custom + 4  ] = v2.x;
							customAttribute.array[ offset_custom + 5  ] = v2.y;
							customAttribute.array[ offset_custom + 6  ] = v2.z;
							customAttribute.array[ offset_custom + 7  ] = v2.w;

							customAttribute.array[ offset_custom + 8  ] = v3.x;
							customAttribute.array[ offset_custom + 9  ] = v3.y;
							customAttribute.array[ offset_custom + 10 ] = v3.z;
							customAttribute.array[ offset_custom + 11 ] = v3.w;

							customAttribute.array[ offset_custom + 12 ] = v4.x;
							customAttribute.array[ offset_custom + 13 ] = v4.y;
							customAttribute.array[ offset_custom + 14 ] = v4.z;
							customAttribute.array[ offset_custom + 15 ] = v4.w;

							offset_custom += 16;

						}

					} else if ( customAttribute.boundTo === "faceVertices" ) {

						for ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces3[ f ] ];

							v1 = value[ 0 ];
							v2 = value[ 1 ];
							v3 = value[ 2 ];

							customAttribute.array[ offset_custom  ] 	= v1.x;
							customAttribute.array[ offset_custom + 1  ] = v1.y;
							customAttribute.array[ offset_custom + 2  ] = v1.z;
							customAttribute.array[ offset_custom + 3  ] = v1.w;

							customAttribute.array[ offset_custom + 4  ] = v2.x;
							customAttribute.array[ offset_custom + 5  ] = v2.y;
							customAttribute.array[ offset_custom + 6  ] = v2.z;
							customAttribute.array[ offset_custom + 7  ] = v2.w;

							customAttribute.array[ offset_custom + 8  ] = v3.x;
							customAttribute.array[ offset_custom + 9  ] = v3.y;
							customAttribute.array[ offset_custom + 10 ] = v3.z;
							customAttribute.array[ offset_custom + 11 ] = v3.w;

							offset_custom += 12;

						}

						for ( f = 0, fl = chunk_faces4.length; f < fl; f ++ ) {

							value = customAttribute.value[ chunk_faces4[ f ] ];

							v1 = value[ 0 ];
							v2 = value[ 1 ];
							v3 = value[ 2 ];
							v4 = value[ 3 ];

							customAttribute.array[ offset_custom  ] 	= v1.x;
							customAttribute.array[ offset_custom + 1  ] = v1.y;
							customAttribute.array[ offset_custom + 2  ] = v1.z;
							customAttribute.array[ offset_custom + 3  ] = v1.w;

							customAttribute.array[ offset_custom + 4  ] = v2.x;
							customAttribute.array[ offset_custom + 5  ] = v2.y;
							customAttribute.array[ offset_custom + 6  ] = v2.z;
							customAttribute.array[ offset_custom + 7  ] = v2.w;

							customAttribute.array[ offset_custom + 8  ] = v3.x;
							customAttribute.array[ offset_custom + 9  ] = v3.y;
							customAttribute.array[ offset_custom + 10 ] = v3.z;
							customAttribute.array[ offset_custom + 11 ] = v3.w;

							customAttribute.array[ offset_custom + 12 ] = v4.x;
							customAttribute.array[ offset_custom + 13 ] = v4.y;
							customAttribute.array[ offset_custom + 14 ] = v4.z;
							customAttribute.array[ offset_custom + 15 ] = v4.w;

							offset_custom += 16;

						}

					}

				}

				_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );
				_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );

			}

		}

		if ( dispose ) {

			delete geometryGroup.__inittedArrays;
			delete geometryGroup.__colorArray;
			delete geometryGroup.__normalArray;
			delete geometryGroup.__tangentArray;
			delete geometryGroup.__uvArray;
			delete geometryGroup.__uv2Array;
			delete geometryGroup.__faceArray;
			delete geometryGroup.__vertexArray;
			delete geometryGroup.__lineArray;
			delete geometryGroup.__skinIndexArray;
			delete geometryGroup.__skinWeightArray;

		}

	};

	function setDirectBuffers ( geometry, hint, dispose ) {

		var attributes = geometry.attributes;

		var attributeName, attributeItem;

		for ( attributeName in attributes ) {

			attributeItem = attributes[ attributeName ];

			if ( attributeItem.needsUpdate ) {

				if ( attributeName === 'index' ) {

					_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.buffer );
					_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, attributeItem.array, hint );

				} else {

					_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );
					_gl.bufferData( _gl.ARRAY_BUFFER, attributeItem.array, hint );

				}

				attributeItem.needsUpdate = false;

			}

			if ( dispose && ! attributeItem.dynamic ) {

				delete attributeItem.array;

			}

		}

	};

	// Buffer rendering

	this.renderBufferImmediate = function ( object, program, material ) {

		if ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();
		if ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();
		if ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();
		if ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();

		if ( object.hasPositions ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );
			_gl.enableVertexAttribArray( program.attributes.position );
			_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.hasNormals ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );

			if ( material.shading === THREE.FlatShading ) {

				var nx, ny, nz,
					nax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,
					normalArray,
					i, il = object.count * 3;

				for( i = 0; i < il; i += 9 ) {

					normalArray = object.normalArray;

					nax  = normalArray[ i ];
					nay  = normalArray[ i + 1 ];
					naz  = normalArray[ i + 2 ];

					nbx  = normalArray[ i + 3 ];
					nby  = normalArray[ i + 4 ];
					nbz  = normalArray[ i + 5 ];

					ncx  = normalArray[ i + 6 ];
					ncy  = normalArray[ i + 7 ];
					ncz  = normalArray[ i + 8 ];

					nx = ( nax + nbx + ncx ) / 3;
					ny = ( nay + nby + ncy ) / 3;
					nz = ( naz + nbz + ncz ) / 3;

					normalArray[ i ] 	 = nx;
					normalArray[ i + 1 ] = ny;
					normalArray[ i + 2 ] = nz;

					normalArray[ i + 3 ] = nx;
					normalArray[ i + 4 ] = ny;
					normalArray[ i + 5 ] = nz;

					normalArray[ i + 6 ] = nx;
					normalArray[ i + 7 ] = ny;
					normalArray[ i + 8 ] = nz;

				}

			}

			_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );
			_gl.enableVertexAttribArray( program.attributes.normal );
			_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.hasUvs && material.map ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );
			_gl.enableVertexAttribArray( program.attributes.uv );
			_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.hasColors && material.vertexColors !== THREE.NoColors ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );
			_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );
			_gl.enableVertexAttribArray( program.attributes.color );
			_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );

		}

		_gl.drawArrays( _gl.TRIANGLES, 0, object.count );

		object.count = 0;

	};

	this.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {

		if ( material.visible === false ) return;

		var program, programAttributes, linewidth, primitives, a, attribute, geometryAttributes;
		var attributeItem, attributeName, attributePointer, attributeSize;

		program = setProgram( camera, lights, fog, material, object );

		programAttributes = program.attributes;
		geometryAttributes = geometry.attributes;

		var updateBuffers = false,
			wireframeBit = material.wireframe ? 1 : 0,
			geometryHash = ( geometry.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;

		if ( geometryHash !== _currentGeometryGroupHash ) {

			_currentGeometryGroupHash = geometryHash;
			updateBuffers = true;

		}

		if ( updateBuffers ) {

			disableAttributes();

		}

		// render mesh

		if ( object instanceof THREE.Mesh ) {

			var index = geometryAttributes[ "index" ];

			// indexed triangles

			if ( index ) {

				var offsets = geometry.offsets;

				// if there is more than 1 chunk
				// must set attribute pointers to use new offsets for each chunk
				// even if geometry and materials didn't change

				if ( offsets.length > 1 ) updateBuffers = true;

				for ( var i = 0, il = offsets.length; i < il; i ++ ) {

					var startIndex = offsets[ i ].index;

					if ( updateBuffers ) {

						for ( attributeName in geometryAttributes ) {

							if ( attributeName === 'index' ) continue;

							attributePointer = programAttributes[ attributeName ];
							attributeItem = geometryAttributes[ attributeName ];
							attributeSize = attributeItem.itemSize;

							if ( attributePointer >= 0 ) {

								_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );
								enableAttribute( attributePointer );
								_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, startIndex * attributeSize * 4 ); // 4 bytes per Float32

							}

						}

						// indices

						_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );

					}

					// render indexed triangles

					_gl.drawElements( _gl.TRIANGLES, offsets[ i ].count, _gl.UNSIGNED_SHORT, offsets[ i ].start * 2 ); // 2 bytes per Uint16

					_this.info.render.calls ++;
					_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared
					_this.info.render.faces += offsets[ i ].count / 3;

				}

			// non-indexed triangles

			} else {

				if ( updateBuffers ) {

					for ( attributeName in geometryAttributes ) {

						if ( attributeName === 'index') continue;

						attributePointer = programAttributes[ attributeName ];
						attributeItem = geometryAttributes[ attributeName ];
						attributeSize = attributeItem.itemSize;

						if ( attributePointer >= 0 ) {

							_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );
							enableAttribute( attributePointer );
							_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );

						}

					}

				}

				var position = geometry.attributes[ "position" ];

				// render non-indexed triangles

				_gl.drawArrays( _gl.TRIANGLES, 0, position.numItems / 3 );

				_this.info.render.calls ++;
				_this.info.render.vertices += position.numItems / 3;
				_this.info.render.faces += position.numItems / 3 / 3;

			}

		// render particles

		} else if ( object instanceof THREE.ParticleSystem ) {

			if ( updateBuffers ) {

				for ( attributeName in geometryAttributes ) {

					attributePointer = programAttributes[ attributeName ];
					attributeItem = geometryAttributes[ attributeName ];
					attributeSize = attributeItem.itemSize;

					if ( attributePointer >= 0 ) {

						_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );
						enableAttribute( attributePointer );
						_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );

					}

				}

				var position = geometryAttributes[ "position" ];

				// render particles

				_gl.drawArrays( _gl.POINTS, 0, position.numItems / 3 );

				_this.info.render.calls ++;
				_this.info.render.points += position.numItems / 3;

			}

		} else if ( object instanceof THREE.Line ) {

			if ( updateBuffers ) {

				for ( attributeName in geometryAttributes ) {

					attributePointer = programAttributes[ attributeName ];
					attributeItem = geometryAttributes[ attributeName ];
					attributeSize = attributeItem.itemSize;

					if ( attributePointer >= 0 ) {

						_gl.bindBuffer( _gl.ARRAY_BUFFER, attributeItem.buffer );
						enableAttribute( attributePointer );
						_gl.vertexAttribPointer( attributePointer, attributeSize, _gl.FLOAT, false, 0, 0 );

					}

				}

				// render lines

				setLineWidth( material.linewidth );

				var position = geometryAttributes[ "position" ];

				_gl.drawArrays( _gl.LINE_STRIP, 0, position.numItems / 3 );

				_this.info.render.calls ++;
				_this.info.render.points += position.numItems;

			}

    	}

	};

	this.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {

		if ( material.visible === false ) return;

		var program, attributes, linewidth, primitives, a, attribute, i, il;

		program = setProgram( camera, lights, fog, material, object );

		attributes = program.attributes;

		var updateBuffers = false,
			wireframeBit = material.wireframe ? 1 : 0,
			geometryGroupHash = ( geometryGroup.id * 0xffffff ) + ( program.id * 2 ) + wireframeBit;

		if ( geometryGroupHash !== _currentGeometryGroupHash ) {

			_currentGeometryGroupHash = geometryGroupHash;
			updateBuffers = true;

		}

		if ( updateBuffers ) {

			disableAttributes();

		}

		// vertices

		if ( !material.morphTargets && attributes.position >= 0 ) {

			if ( updateBuffers ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );
				enableAttribute( attributes.position );
				_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );

			}

		} else {

			if ( object.morphTargetBase ) {

				setupMorphTargets( material, geometryGroup, object );

			}

		}


		if ( updateBuffers ) {

			// custom attributes

			// Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers

			if ( geometryGroup.__webglCustomAttributesList ) {

				for ( i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {

					attribute = geometryGroup.__webglCustomAttributesList[ i ];

					if ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {

						_gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );
						enableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );
						_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );

					}

				}

			}


			// colors

			if ( attributes.color >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );
				enableAttribute( attributes.color );
				_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );

			}

			// normals

			if ( attributes.normal >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );
				enableAttribute( attributes.normal );
				_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );

			}

			// tangents

			if ( attributes.tangent >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );
				enableAttribute( attributes.tangent );
				_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );

			}

			// uvs

			if ( attributes.uv >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );
				enableAttribute( attributes.uv );
				_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );

			}

			if ( attributes.uv2 >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );
				enableAttribute( attributes.uv2 );
				_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );

			}

			if ( material.skinning &&
				 attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );
				enableAttribute( attributes.skinIndex );
				_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );
				enableAttribute( attributes.skinWeight );
				_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );

			}

			// line distances

			if ( attributes.lineDistance >= 0 ) {

				_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );
				enableAttribute( attributes.lineDistance );
				_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );

			}

		}

		// render mesh

		if ( object instanceof THREE.Mesh ) {

			// wireframe

			if ( material.wireframe ) {

				setLineWidth( material.wireframeLinewidth );

				if ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );
				_gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, _gl.UNSIGNED_SHORT, 0 );

			// triangles

			} else {

				if ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );
				_gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, _gl.UNSIGNED_SHORT, 0 );

			}

			_this.info.render.calls ++;
			_this.info.render.vertices += geometryGroup.__webglFaceCount;
			_this.info.render.faces += geometryGroup.__webglFaceCount / 3;

		// render lines

		} else if ( object instanceof THREE.Line ) {

			primitives = ( object.type === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;

			setLineWidth( material.linewidth );

			_gl.drawArrays( primitives, 0, geometryGroup.__webglLineCount );

			_this.info.render.calls ++;

		// render particles

		} else if ( object instanceof THREE.ParticleSystem ) {

			_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );

			_this.info.render.calls ++;
			_this.info.render.points += geometryGroup.__webglParticleCount;

		// render ribbon

		} else if ( object instanceof THREE.Ribbon ) {

			_gl.drawArrays( _gl.TRIANGLE_STRIP, 0, geometryGroup.__webglVertexCount );

			_this.info.render.calls ++;

		}

	};

	function enableAttribute( attribute ) {

		if ( ! _enabledAttributes[ attribute ] ) {

			_gl.enableVertexAttribArray( attribute );
			_enabledAttributes[ attribute ] = true;

		}

	};

	function disableAttributes() {

		for ( var attribute in _enabledAttributes ) {

			if ( _enabledAttributes[ attribute ] ) {

				_gl.disableVertexAttribArray( attribute );
				_enabledAttributes[ attribute ] = false;

			}

		}

	};

	function setupMorphTargets ( material, geometryGroup, object ) {

		// set base

		var attributes = material.program.attributes;

		if ( object.morphTargetBase !== -1 && attributes.position >= 0 ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );
			enableAttribute( attributes.position );
			_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );

		} else if ( attributes.position >= 0 ) {

			_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );
			enableAttribute( attributes.position );
			_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );

		}

		if ( object.morphTargetForcedOrder.length ) {

			// set forced order

			var m = 0;
			var order = object.morphTargetForcedOrder;
			var influences = object.morphTargetInfluences;

			while ( m < material.numSupportedMorphTargets && m < order.length ) {

				if ( attributes[ "morphTarget" + m ] >= 0 ) {

					_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );
					enableAttribute( attributes[ "morphTarget" + m ] );
					_gl.vertexAttribPointer( attributes[ "morphTarget" + m ], 3, _gl.FLOAT, false, 0, 0 );

				}

				if ( attributes[ "morphNormal" + m ] >= 0 && material.morphNormals ) {

					_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );
					enableAttribute( attributes[ "morphNormal" + m ] );
					_gl.vertexAttribPointer( attributes[ "morphNormal" + m ], 3, _gl.FLOAT, false, 0, 0 );

				}

				object.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];

				m ++;
			}

		} else {

			// find the most influencing

			var influence, activeInfluenceIndices = [];
			var influences = object.morphTargetInfluences;
			var i, il = influences.length;

			for ( i = 0; i < il; i ++ ) {

				influence = influences[ i ];

				if ( influence > 0 ) {

					activeInfluenceIndices.push( [ influence, i ] );

				}

			}

			if ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {

				activeInfluenceIndices.sort( numericalSort );
				activeInfluenceIndices.length = material.numSupportedMorphTargets;

			} else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {

				activeInfluenceIndices.sort( numericalSort );

			} else if ( activeInfluenceIndices.length === 0 ) {

				activeInfluenceIndices.push( [ 0, 0 ] );

			};

			var influenceIndex, m = 0;

			while ( m < material.numSupportedMorphTargets ) {

				if ( activeInfluenceIndices[ m ] ) {

					influenceIndex = activeInfluenceIndices[ m ][ 1 ];

					if ( attributes[ "morphTarget" + m ] >= 0 ) {

						_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );
						enableAttribute( attributes[ "morphTarget" + m ] );
						_gl.vertexAttribPointer( attributes[ "morphTarget" + m ], 3, _gl.FLOAT, false, 0, 0 );

					}

					if ( attributes[ "morphNormal" + m ] >= 0 && material.morphNormals ) {

						_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );
						enableAttribute( attributes[ "morphNormal" + m ] );
						_gl.vertexAttribPointer( attributes[ "morphNormal" + m ], 3, _gl.FLOAT, false, 0, 0 );


					}

					object.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];

				} else {

					/*
					_gl.vertexAttribPointer( attributes[ "morphTarget" + m ], 3, _gl.FLOAT, false, 0, 0 );

					if ( material.morphNormals ) {

						_gl.vertexAttribPointer( attributes[ "morphNormal" + m ], 3, _gl.FLOAT, false, 0, 0 );

					}
					*/

					object.__webglMorphTargetInfluences[ m ] = 0;

				}

				m ++;

			}

		}

		// load updated influences uniform

		if ( material.program.uniforms.morphTargetInfluences !== null ) {

			_gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );

		}

	};

	// Sorting

	function painterSortStable ( a, b ) {

		if ( a.z !== b.z ) {

			return b.z - a.z;

		} else {

			return b.id - a.id;

		}

	};

	function numericalSort ( a, b ) {

		return b[ 0 ] - a[ 0 ];

	};


	// Rendering

	this.render = function ( scene, camera, renderTarget, forceClear ) {

		if ( camera instanceof THREE.Camera === false ) {

			console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );
			return;

		}

		var i, il,

		webglObject, object,
		renderList,

		lights = scene.__lights,
		fog = scene.fog;

		// reset caching for this frame

		_currentMaterialId = -1;
		_lightsNeedUpdate = true;

		// update scene graph

		if ( this.autoUpdateScene ) scene.updateMatrixWorld();

		// update camera matrices and frustum

		if ( camera.parent === undefined ) camera.updateMatrixWorld();

		camera.matrixWorldInverse.getInverse( camera.matrixWorld );

		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		_frustum.setFromMatrix( _projScreenMatrix );

		// update WebGL objects

		if ( this.autoUpdateObjects ) this.initWebGLObjects( scene );

		// custom render plugins (pre pass)

		renderPlugins( this.renderPluginsPre, scene, camera );

		//

		_this.info.render.calls = 0;
		_this.info.render.vertices = 0;
		_this.info.render.faces = 0;
		_this.info.render.points = 0;

		this.setRenderTarget( renderTarget );

		if ( this.autoClear || forceClear ) {

			this.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );

		}

		// set matrices for regular objects (frustum culled)

		renderList = scene.__webglObjects;

		for ( i = 0, il = renderList.length; i < il; i ++ ) {

			webglObject = renderList[ i ];
			object = webglObject.object;

			webglObject.render = false;

			if ( object.visible ) {

				if ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {

					setupMatrices( object, camera );

					unrollBufferMaterial( webglObject );

					webglObject.render = true;

					if ( this.sortObjects === true ) {

						if ( object.renderDepth !== null ) {

							webglObject.z = object.renderDepth;

						} else {

							_vector3.getPositionFromMatrix( object.matrixWorld );
							_vector3.applyProjection( _projScreenMatrix );

							webglObject.z = _vector3.z;

						}

						webglObject.id = object.id;

					}

				}

			}

		}

		if ( this.sortObjects ) {

			renderList.sort( painterSortStable );

		}

		// set matrices for immediate objects

		renderList = scene.__webglObjectsImmediate;

		for ( i = 0, il = renderList.length; i < il; i ++ ) {

			webglObject = renderList[ i ];
			object = webglObject.object;

			if ( object.visible ) {

				setupMatrices( object, camera );

				unrollImmediateBufferMaterial( webglObject );

			}

		}

		if ( scene.overrideMaterial ) {

			var material = scene.overrideMaterial;

			this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );
			this.setDepthTest( material.depthTest );
			this.setDepthWrite( material.depthWrite );
			setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

			renderObjects( scene.__webglObjects, false, "", camera, lights, fog, true, material );
			renderObjectsImmediate( scene.__webglObjectsImmediate, "", camera, lights, fog, false, material );

		} else {

			var material = null;

			// opaque pass (front-to-back order)

			this.setBlending( THREE.NoBlending );

			renderObjects( scene.__webglObjects, true, "opaque", camera, lights, fog, false, material );
			renderObjectsImmediate( scene.__webglObjectsImmediate, "opaque", camera, lights, fog, false, material );

			// transparent pass (back-to-front order)

			renderObjects( scene.__webglObjects, false, "transparent", camera, lights, fog, true, material );
			renderObjectsImmediate( scene.__webglObjectsImmediate, "transparent", camera, lights, fog, true, material );

		}

		// custom render plugins (post pass)

		renderPlugins( this.renderPluginsPost, scene, camera );


		// Generate mipmap if we're using any kind of mipmap filtering

		if ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {

			updateRenderTargetMipmap( renderTarget );

		}

		// Ensure depth buffer writing is enabled so it can be cleared on next render

		this.setDepthTest( true );
		this.setDepthWrite( true );

		// _gl.finish();

	};

	function renderPlugins( plugins, scene, camera ) {

		if ( ! plugins.length ) return;

		for ( var i = 0, il = plugins.length; i < il; i ++ ) {

			// reset state for plugin (to start from clean slate)

			_currentProgram = null;
			_currentCamera = null;

			_oldBlending = -1;
			_oldDepthTest = -1;
			_oldDepthWrite = -1;
			_oldDoubleSided = -1;
			_oldFlipSided = -1;
			_currentGeometryGroupHash = -1;
			_currentMaterialId = -1;

			_lightsNeedUpdate = true;

			plugins[ i ].render( scene, camera, _currentWidth, _currentHeight );

			// reset state after plugin (anything could have changed)

			_currentProgram = null;
			_currentCamera = null;

			_oldBlending = -1;
			_oldDepthTest = -1;
			_oldDepthWrite = -1;
			_oldDoubleSided = -1;
			_oldFlipSided = -1;
			_currentGeometryGroupHash = -1;
			_currentMaterialId = -1;

			_lightsNeedUpdate = true;

		}

	};

	function renderObjects ( renderList, reverse, materialType, camera, lights, fog, useBlending, overrideMaterial ) {

		var webglObject, object, buffer, material, start, end, delta;

		if ( reverse ) {

			start = renderList.length - 1;
			end = -1;
			delta = -1;

		} else {

			start = 0;
			end = renderList.length;
			delta = 1;
		}

		for ( var i = start; i !== end; i += delta ) {

			webglObject = renderList[ i ];

			if ( webglObject.render ) {

				object = webglObject.object;
				buffer = webglObject.buffer;

				if ( overrideMaterial ) {

					material = overrideMaterial;

				} else {

					material = webglObject[ materialType ];

					if ( ! material ) continue;

					if ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );

					_this.setDepthTest( material.depthTest );
					_this.setDepthWrite( material.depthWrite );
					setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

				}

				_this.setMaterialFaces( material );

				if ( buffer instanceof THREE.BufferGeometry ) {

					_this.renderBufferDirect( camera, lights, fog, material, buffer, object );

				} else {

					_this.renderBuffer( camera, lights, fog, material, buffer, object );

				}

			}

		}

	};

	function renderObjectsImmediate ( renderList, materialType, camera, lights, fog, useBlending, overrideMaterial ) {

		var webglObject, object, material, program;

		for ( var i = 0, il = renderList.length; i < il; i ++ ) {

			webglObject = renderList[ i ];
			object = webglObject.object;

			if ( object.visible ) {

				if ( overrideMaterial ) {

					material = overrideMaterial;

				} else {

					material = webglObject[ materialType ];

					if ( ! material ) continue;

					if ( useBlending ) _this.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );

					_this.setDepthTest( material.depthTest );
					_this.setDepthWrite( material.depthWrite );
					setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

				}

				_this.renderImmediateObject( camera, lights, fog, material, object );

			}

		}

	};

	this.renderImmediateObject = function ( camera, lights, fog, material, object ) {

		var program = setProgram( camera, lights, fog, material, object );

		_currentGeometryGroupHash = -1;

		_this.setMaterialFaces( material );

		if ( object.immediateRenderCallback ) {

			object.immediateRenderCallback( program, _gl, _frustum );

		} else {

			object.render( function( object ) { _this.renderBufferImmediate( object, program, material ); } );

		}

	};

	function unrollImmediateBufferMaterial ( globject ) {

		var object = globject.object,
			material = object.material;

		if ( material.transparent ) {

			globject.transparent = material;
			globject.opaque = null;

		} else {

			globject.opaque = material;
			globject.transparent = null;

		}

	};

	function unrollBufferMaterial ( globject ) {

		var object = globject.object,
			buffer = globject.buffer,
			material, materialIndex, meshMaterial;

		meshMaterial = object.material;

		if ( meshMaterial instanceof THREE.MeshFaceMaterial ) {

			materialIndex = buffer.materialIndex;

			material = meshMaterial.materials[ materialIndex ];

			if ( material.transparent ) {

				globject.transparent = material;
				globject.opaque = null;

			} else {

				globject.opaque = material;
				globject.transparent = null;

			}

		} else {

			material = meshMaterial;

			if ( material ) {

				if ( material.transparent ) {

					globject.transparent = material;
					globject.opaque = null;

				} else {

					globject.opaque = material;
					globject.transparent = null;

				}

			}

		}

	};

	// Geometry splitting

	function sortFacesByMaterial ( geometry, material ) {

		var f, fl, face, materialIndex, vertices,
			groupHash, hash_map = {};

		var numMorphTargets = geometry.morphTargets.length;
		var numMorphNormals = geometry.morphNormals.length;

		var usesFaceMaterial = material instanceof THREE.MeshFaceMaterial;

		geometry.geometryGroups = {};

		for ( f = 0, fl = geometry.faces.length; f < fl; f ++ ) {

			face = geometry.faces[ f ];
			materialIndex = usesFaceMaterial ? face.materialIndex : 0;

			if ( hash_map[ materialIndex ] === undefined ) {

				hash_map[ materialIndex ] = { 'hash': materialIndex, 'counter': 0 };

			}

			groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;

			if ( geometry.geometryGroups[ groupHash ] === undefined ) {

				geometry.geometryGroups[ groupHash ] = { 'faces3': [], 'faces4': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };

			}

			vertices = face instanceof THREE.Face3 ? 3 : 4;

			if ( geometry.geometryGroups[ groupHash ].vertices + vertices > 65535 ) {

				hash_map[ materialIndex ].counter += 1;
				groupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;

				if ( geometry.geometryGroups[ groupHash ] === undefined ) {

					geometry.geometryGroups[ groupHash ] = { 'faces3': [], 'faces4': [], 'materialIndex': materialIndex, 'vertices': 0, 'numMorphTargets': numMorphTargets, 'numMorphNormals': numMorphNormals };

				}

			}

			if ( face instanceof THREE.Face3 ) {

				geometry.geometryGroups[ groupHash ].faces3.push( f );

			} else {

				geometry.geometryGroups[ groupHash ].faces4.push( f );

			}

			geometry.geometryGroups[ groupHash ].vertices += vertices;

		}

		geometry.geometryGroupsList = [];

		for ( var g in geometry.geometryGroups ) {

			geometry.geometryGroups[ g ].id = _geometryGroupCounter ++;

			geometry.geometryGroupsList.push( geometry.geometryGroups[ g ] );

		}

	};

	// Objects refresh

	this.initWebGLObjects = function ( scene ) {

		if ( !scene.__webglObjects ) {

			scene.__webglObjects = [];
			scene.__webglObjectsImmediate = [];
			scene.__webglSprites = [];
			scene.__webglFlares = [];

		}

		while ( scene.__objectsAdded.length ) {

			addObject( scene.__objectsAdded[ 0 ], scene );
			scene.__objectsAdded.splice( 0, 1 );

		}

		while ( scene.__objectsRemoved.length ) {

			removeObject( scene.__objectsRemoved[ 0 ], scene );
			scene.__objectsRemoved.splice( 0, 1 );

		}

		// update must be called after objects adding / removal

		for ( var o = 0, ol = scene.__webglObjects.length; o < ol; o ++ ) {

			updateObject( scene.__webglObjects[ o ].object );

		}

	};

	// Objects adding

	function addObject ( object, scene ) {

		var g, geometry, material, geometryGroup;

		if ( ! object.__webglInit ) {

			object.__webglInit = true;

			object._modelViewMatrix = new THREE.Matrix4();
			object._normalMatrix = new THREE.Matrix3();

			if ( object.geometry !== undefined && object.geometry.__webglInit === undefined ) {

				object.geometry.__webglInit = true;
				object.geometry.addEventListener( 'dispose', onGeometryDispose );

			}

			geometry = object.geometry;

			if ( geometry === undefined ) {

				// fail silently for now

			} else if ( geometry instanceof THREE.BufferGeometry ) {

				initDirectBuffers( geometry );

			} else if ( object instanceof THREE.Mesh ) {

				material = object.material;

				if ( geometry.geometryGroups === undefined ) {

					sortFacesByMaterial( geometry, material );

				}

				// create separate VBOs per geometry chunk

				for ( g in geometry.geometryGroups ) {

					geometryGroup = geometry.geometryGroups[ g ];

					// initialise VBO on the first access

					if ( ! geometryGroup.__webglVertexBuffer ) {

						createMeshBuffers( geometryGroup );
						initMeshBuffers( geometryGroup, object );

						geometry.verticesNeedUpdate = true;
						geometry.morphTargetsNeedUpdate = true;
						geometry.elementsNeedUpdate = true;
						geometry.uvsNeedUpdate = true;
						geometry.normalsNeedUpdate = true;
						geometry.tangentsNeedUpdate = true;
						geometry.colorsNeedUpdate = true;

					}

				}

			} else if ( object instanceof THREE.Ribbon ) {

				if ( ! geometry.__webglVertexBuffer ) {

					createRibbonBuffers( geometry );
					initRibbonBuffers( geometry, object );

					geometry.verticesNeedUpdate = true;
					geometry.colorsNeedUpdate = true;
					geometry.normalsNeedUpdate = true;

				}

			} else if ( object instanceof THREE.Line ) {

				if ( ! geometry.__webglVertexBuffer ) {

					createLineBuffers( geometry );
					initLineBuffers( geometry, object );

					geometry.verticesNeedUpdate = true;
					geometry.colorsNeedUpdate = true;
					geometry.lineDistancesNeedUpdate = true;

				}

			} else if ( object instanceof THREE.ParticleSystem ) {

				if ( ! geometry.__webglVertexBuffer ) {

					createParticleBuffers( geometry );
					initParticleBuffers( geometry, object );

					geometry.verticesNeedUpdate = true;
					geometry.colorsNeedUpdate = true;

				}

			}

		}

		if ( ! object.__webglActive ) {

			if ( object instanceof THREE.Mesh ) {

				geometry = object.geometry;

				if ( geometry instanceof THREE.BufferGeometry ) {

					addBuffer( scene.__webglObjects, geometry, object );

				} else if ( geometry instanceof THREE.Geometry ) {

					for ( g in geometry.geometryGroups ) {

						geometryGroup = geometry.geometryGroups[ g ];

						addBuffer( scene.__webglObjects, geometryGroup, object );

					}

				}

			} else if ( object instanceof THREE.Ribbon ||
						object instanceof THREE.Line ||
						object instanceof THREE.ParticleSystem ) {

				geometry = object.geometry;
				addBuffer( scene.__webglObjects, geometry, object );

			} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {

				addBufferImmediate( scene.__webglObjectsImmediate, object );

			} else if ( object instanceof THREE.Sprite ) {

				scene.__webglSprites.push( object );

			} else if ( object instanceof THREE.LensFlare ) {

				scene.__webglFlares.push( object );

			}

			object.__webglActive = true;

		}

	};

	function addBuffer ( objlist, buffer, object ) {

		objlist.push(
			{
				buffer: buffer,
				object: object,
				opaque: null,
				transparent: null
			}
		);

	};

	function addBufferImmediate ( objlist, object ) {

		objlist.push(
			{
				object: object,
				opaque: null,
				transparent: null
			}
		);

	};

	// Objects updates

	function updateObject ( object ) {

		var geometry = object.geometry,
			geometryGroup, customAttributesDirty, material;

		if ( geometry instanceof THREE.BufferGeometry ) {

			setDirectBuffers( geometry, _gl.DYNAMIC_DRAW, !geometry.dynamic );

		} else if ( object instanceof THREE.Mesh ) {

			// check all geometry groups

			for( var i = 0, il = geometry.geometryGroupsList.length; i < il; i ++ ) {

				geometryGroup = geometry.geometryGroupsList[ i ];

				material = getBufferMaterial( object, geometryGroup );

				if ( geometry.buffersNeedUpdate ) {

					initMeshBuffers( geometryGroup, object );

				}

				customAttributesDirty = material.attributes && areCustomAttributesDirty( material );

				if ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||
					 geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||
					 geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {

					setMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, !geometry.dynamic, material );

				}

			}

			geometry.verticesNeedUpdate = false;
			geometry.morphTargetsNeedUpdate = false;
			geometry.elementsNeedUpdate = false;
			geometry.uvsNeedUpdate = false;
			geometry.normalsNeedUpdate = false;
			geometry.colorsNeedUpdate = false;
			geometry.tangentsNeedUpdate = false;

			geometry.buffersNeedUpdate = false;

			material.attributes && clearCustomAttributes( material );

		} else if ( object instanceof THREE.Ribbon ) {

			material = getBufferMaterial( object, geometry );

			customAttributesDirty = material.attributes && areCustomAttributesDirty( material );

			if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.normalsNeedUpdate || customAttributesDirty ) {

				setRibbonBuffers( geometry, _gl.DYNAMIC_DRAW );

			}

			geometry.verticesNeedUpdate = false;
			geometry.colorsNeedUpdate = false;
			geometry.normalsNeedUpdate = false;

			material.attributes && clearCustomAttributes( material );

		} else if ( object instanceof THREE.Line ) {

			material = getBufferMaterial( object, geometry );

			customAttributesDirty = material.attributes && areCustomAttributesDirty( material );

			if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {

				setLineBuffers( geometry, _gl.DYNAMIC_DRAW );

			}

			geometry.verticesNeedUpdate = false;
			geometry.colorsNeedUpdate = false;
			geometry.lineDistancesNeedUpdate = false;

			material.attributes && clearCustomAttributes( material );


		} else if ( object instanceof THREE.ParticleSystem ) {

			material = getBufferMaterial( object, geometry );

			customAttributesDirty = material.attributes && areCustomAttributesDirty( material );

			if ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || object.sortParticles || customAttributesDirty ) {

				setParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );

			}

			geometry.verticesNeedUpdate = false;
			geometry.colorsNeedUpdate = false;

			material.attributes && clearCustomAttributes( material );

		}

	};

	// Objects updates - custom attributes check

	function areCustomAttributesDirty ( material ) {

		for ( var a in material.attributes ) {

			if ( material.attributes[ a ].needsUpdate ) return true;

		}

		return false;

	};

	function clearCustomAttributes ( material ) {

		for ( var a in material.attributes ) {

			material.attributes[ a ].needsUpdate = false;

		}

	};

	// Objects removal

	function removeObject ( object, scene ) {

		if ( object instanceof THREE.Mesh  ||
			 object instanceof THREE.ParticleSystem ||
			 object instanceof THREE.Ribbon ||
			 object instanceof THREE.Line ) {

			removeInstances( scene.__webglObjects, object );

		} else if ( object instanceof THREE.Sprite ) {

			removeInstancesDirect( scene.__webglSprites, object );

		} else if ( object instanceof THREE.LensFlare ) {

			removeInstancesDirect( scene.__webglFlares, object );

		} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {

			removeInstances( scene.__webglObjectsImmediate, object );

		}

		object.__webglActive = false;

	};

	function removeInstances ( objlist, object ) {

		for ( var o = objlist.length - 1; o >= 0; o -- ) {

			if ( objlist[ o ].object === object ) {

				objlist.splice( o, 1 );

			}

		}

	};

	function removeInstancesDirect ( objlist, object ) {

		for ( var o = objlist.length - 1; o >= 0; o -- ) {

			if ( objlist[ o ] === object ) {

				objlist.splice( o, 1 );

			}

		}

	};

	// Materials

	this.initMaterial = function ( material, lights, fog, object ) {

		material.addEventListener( 'dispose', onMaterialDispose );

		var u, a, identifiers, i, parameters, maxLightCount, maxBones, maxShadows, shaderID;

		if ( material instanceof THREE.MeshDepthMaterial ) {

			shaderID = 'depth';

		} else if ( material instanceof THREE.MeshNormalMaterial ) {

			shaderID = 'normal';

		} else if ( material instanceof THREE.MeshBasicMaterial ) {

			shaderID = 'basic';

		} else if ( material instanceof THREE.MeshLambertMaterial ) {

			shaderID = 'lambert';

		} else if ( material instanceof THREE.MeshPhongMaterial ) {

			shaderID = 'phong';

		} else if ( material instanceof THREE.LineBasicMaterial ) {

			shaderID = 'basic';

		} else if ( material instanceof THREE.LineDashedMaterial ) {

			shaderID = 'dashed';

		} else if ( material instanceof THREE.ParticleBasicMaterial ) {

			shaderID = 'particle_basic';

		}

		if ( shaderID ) {

			setMaterialShaders( material, THREE.ShaderLib[ shaderID ] );

		}

		// heuristics to create shader parameters according to lights in the scene
		// (not to blow over maxLights budget)

		maxLightCount = allocateLights( lights );

		maxShadows = allocateShadows( lights );

		maxBones = allocateBones( object );

		parameters = {

			map: !!material.map,
			envMap: !!material.envMap,
			lightMap: !!material.lightMap,
			bumpMap: !!material.bumpMap,
			normalMap: !!material.normalMap,
			specularMap: !!material.specularMap,

			vertexColors: material.vertexColors,

			fog: fog,
			useFog: material.fog,
			fogExp: fog instanceof THREE.FogExp2,

			sizeAttenuation: material.sizeAttenuation,

			skinning: material.skinning,
			maxBones: maxBones,
			useVertexTexture: _supportsBoneTextures && object && object.useVertexTexture,
			boneTextureWidth: object && object.boneTextureWidth,
			boneTextureHeight: object && object.boneTextureHeight,

			morphTargets: material.morphTargets,
			morphNormals: material.morphNormals,
			maxMorphTargets: this.maxMorphTargets,
			maxMorphNormals: this.maxMorphNormals,

			maxDirLights: maxLightCount.directional,
			maxPointLights: maxLightCount.point,
			maxSpotLights: maxLightCount.spot,
			maxHemiLights: maxLightCount.hemi,

			maxShadows: maxShadows,
			shadowMapEnabled: this.shadowMapEnabled && object.receiveShadow,
			shadowMapType: this.shadowMapType,
			shadowMapDebug: this.shadowMapDebug,
			shadowMapCascade: this.shadowMapCascade,

			alphaTest: material.alphaTest,
			metal: material.metal,
			perPixel: material.perPixel,
			wrapAround: material.wrapAround,
			doubleSided: material.side === THREE.DoubleSide,
			flipSided: material.side === THREE.BackSide

		};

		material.program = buildProgram( shaderID, material.fragmentShader, material.vertexShader, material.uniforms, material.attributes, material.defines, parameters );

		var attributes = material.program.attributes;

		if ( material.morphTargets ) {

			material.numSupportedMorphTargets = 0;

			var id, base = "morphTarget";

			for ( i = 0; i < this.maxMorphTargets; i ++ ) {

				id = base + i;

				if ( attributes[ id ] >= 0 ) {

					material.numSupportedMorphTargets ++;

				}

			}

		}

		if ( material.morphNormals ) {

			material.numSupportedMorphNormals = 0;

			var id, base = "morphNormal";

			for ( i = 0; i < this.maxMorphNormals; i ++ ) {

				id = base + i;

				if ( attributes[ id ] >= 0 ) {

					material.numSupportedMorphNormals ++;

				}

			}

		}

		material.uniformsList = [];

		for ( u in material.uniforms ) {

			material.uniformsList.push( [ material.uniforms[ u ], u ] );

		}

	};

	function setMaterialShaders( material, shaders ) {

		material.uniforms = THREE.UniformsUtils.clone( shaders.uniforms );
		material.vertexShader = shaders.vertexShader;
		material.fragmentShader = shaders.fragmentShader;

	};

	function setProgram( camera, lights, fog, material, object ) {

		_usedTextureUnits = 0;

		if ( material.needsUpdate ) {

			if ( material.program ) deallocateMaterial( material );

			_this.initMaterial( material, lights, fog, object );
			material.needsUpdate = false;

		}

		if ( material.morphTargets ) {

			if ( ! object.__webglMorphTargetInfluences ) {

				object.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );

			}

		}

		var refreshMaterial = false;

		var program = material.program,
			p_uniforms = program.uniforms,
			m_uniforms = material.uniforms;

		if ( program !== _currentProgram ) {

			_gl.useProgram( program );
			_currentProgram = program;

			refreshMaterial = true;

		}

		if ( material.id !== _currentMaterialId ) {

			_currentMaterialId = material.id;
			refreshMaterial = true;

		}

		if ( refreshMaterial || camera !== _currentCamera ) {

			_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );

			if ( camera !== _currentCamera ) _currentCamera = camera;

		}

		// skinning uniforms must be set even if material didn't change
		// auto-setting of texture unit for bone texture must go before other textures
		// not sure why, but otherwise weird things happen

		if ( material.skinning ) {

			if ( _supportsBoneTextures && object.useVertexTexture ) {

				if ( p_uniforms.boneTexture !== null ) {

					var textureUnit = getTextureUnit();

					_gl.uniform1i( p_uniforms.boneTexture, textureUnit );
					_this.setTexture( object.boneTexture, textureUnit );

				}

			} else {

				if ( p_uniforms.boneGlobalMatrices !== null ) {

					_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.boneMatrices );

				}

			}

		}

		if ( refreshMaterial ) {

			// refresh uniforms common to several materials

			if ( fog && material.fog ) {

				refreshUniformsFog( m_uniforms, fog );

			}

			if ( material instanceof THREE.MeshPhongMaterial ||
				 material instanceof THREE.MeshLambertMaterial ||
				 material.lights ) {

				if ( _lightsNeedUpdate ) {

					setupLights( program, lights );
					_lightsNeedUpdate = false;

				}

				refreshUniformsLights( m_uniforms, _lights );

			}

			if ( material instanceof THREE.MeshBasicMaterial ||
				 material instanceof THREE.MeshLambertMaterial ||
				 material instanceof THREE.MeshPhongMaterial ) {

				refreshUniformsCommon( m_uniforms, material );

			}

			// refresh single material specific uniforms

			if ( material instanceof THREE.LineBasicMaterial ) {

				refreshUniformsLine( m_uniforms, material );

			} else if ( material instanceof THREE.LineDashedMaterial ) {

				refreshUniformsLine( m_uniforms, material );
				refreshUniformsDash( m_uniforms, material );

			} else if ( material instanceof THREE.ParticleBasicMaterial ) {

				refreshUniformsParticle( m_uniforms, material );

			} else if ( material instanceof THREE.MeshPhongMaterial ) {

				refreshUniformsPhong( m_uniforms, material );

			} else if ( material instanceof THREE.MeshLambertMaterial ) {

				refreshUniformsLambert( m_uniforms, material );

			} else if ( material instanceof THREE.MeshDepthMaterial ) {

				m_uniforms.mNear.value = camera.near;
				m_uniforms.mFar.value = camera.far;
				m_uniforms.opacity.value = material.opacity;

			} else if ( material instanceof THREE.MeshNormalMaterial ) {

				m_uniforms.opacity.value = material.opacity;

			}

			if ( object.receiveShadow && ! material._shadowPass ) {

				refreshUniformsShadow( m_uniforms, lights );

			}

			// load common uniforms

			loadUniformsGeneric( program, material.uniformsList );

			// load material specific uniforms
			// (shader material also gets them for the sake of genericity)

			if ( material instanceof THREE.ShaderMaterial ||
				 material instanceof THREE.MeshPhongMaterial ||
				 material.envMap ) {

				if ( p_uniforms.cameraPosition !== null ) {

					_vector3.getPositionFromMatrix( camera.matrixWorld );
					_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );

				}

			}

			if ( material instanceof THREE.MeshPhongMaterial ||
				 material instanceof THREE.MeshLambertMaterial ||
				 material instanceof THREE.ShaderMaterial ||
				 material.skinning ) {

				if ( p_uniforms.viewMatrix !== null ) {

					_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );

				}

			}

		}

		loadUniformsMatrices( p_uniforms, object );

		if ( p_uniforms.modelMatrix !== null ) {

			_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );

		}

		return program;

	};

	// Uniforms (refresh uniforms objects)

	function refreshUniformsCommon ( uniforms, material ) {

		uniforms.opacity.value = material.opacity;

		if ( _this.gammaInput ) {

			uniforms.diffuse.value.copyGammaToLinear( material.color );

		} else {

			uniforms.diffuse.value = material.color;

		}

		uniforms.map.value = material.map;
		uniforms.lightMap.value = material.lightMap;
		uniforms.specularMap.value = material.specularMap;

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );

		}

		// uv repeat and offset setting priorities
		//	1. color map
		//	2. specular map
		//	3. normal map
		//	4. bump map

		var uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.specularMap ) {

			uvScaleMap = material.specularMap;

		} else if ( material.normalMap ) {

			uvScaleMap = material.normalMap;

		} else if ( material.bumpMap ) {

			uvScaleMap = material.bumpMap;

		}

		if ( uvScaleMap !== undefined ) {

			var offset = uvScaleMap.offset;
			var repeat = uvScaleMap.repeat;

			uniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );

		}

		uniforms.envMap.value = material.envMap;
		uniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : -1;

		if ( _this.gammaInput ) {

			//uniforms.reflectivity.value = material.reflectivity * material.reflectivity;
			uniforms.reflectivity.value = material.reflectivity;

		} else {

			uniforms.reflectivity.value = material.reflectivity;

		}

		uniforms.refractionRatio.value = material.refractionRatio;
		uniforms.combine.value = material.combine;
		uniforms.useRefract.value = material.envMap && material.envMap.mapping instanceof THREE.CubeRefractionMapping;

	};

	function refreshUniformsLine ( uniforms, material ) {

		uniforms.diffuse.value = material.color;
		uniforms.opacity.value = material.opacity;

	};

	function refreshUniformsDash ( uniforms, material ) {

		uniforms.dashSize.value = material.dashSize;
		uniforms.totalSize.value = material.dashSize + material.gapSize;
		uniforms.scale.value = material.scale;

	};

	function refreshUniformsParticle ( uniforms, material ) {

		uniforms.psColor.value = material.color;
		uniforms.opacity.value = material.opacity;
		uniforms.size.value = material.size;
		uniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.

		uniforms.map.value = material.map;

	};

	function refreshUniformsFog ( uniforms, fog ) {

		uniforms.fogColor.value = fog.color;

		if ( fog instanceof THREE.Fog ) {

			uniforms.fogNear.value = fog.near;
			uniforms.fogFar.value = fog.far;

		} else if ( fog instanceof THREE.FogExp2 ) {

			uniforms.fogDensity.value = fog.density;

		}

	};

	function refreshUniformsPhong ( uniforms, material ) {

		uniforms.shininess.value = material.shininess;

		if ( _this.gammaInput ) {

			uniforms.ambient.value.copyGammaToLinear( material.ambient );
			uniforms.emissive.value.copyGammaToLinear( material.emissive );
			uniforms.specular.value.copyGammaToLinear( material.specular );

		} else {

			uniforms.ambient.value = material.ambient;
			uniforms.emissive.value = material.emissive;
			uniforms.specular.value = material.specular;

		}

		if ( material.wrapAround ) {

			uniforms.wrapRGB.value.copy( material.wrapRGB );

		}

	};

	function refreshUniformsLambert ( uniforms, material ) {

		if ( _this.gammaInput ) {

			uniforms.ambient.value.copyGammaToLinear( material.ambient );
			uniforms.emissive.value.copyGammaToLinear( material.emissive );

		} else {

			uniforms.ambient.value = material.ambient;
			uniforms.emissive.value = material.emissive;

		}

		if ( material.wrapAround ) {

			uniforms.wrapRGB.value.copy( material.wrapRGB );

		}

	};

	function refreshUniformsLights ( uniforms, lights ) {

		uniforms.ambientLightColor.value = lights.ambient;

		uniforms.directionalLightColor.value = lights.directional.colors;
		uniforms.directionalLightDirection.value = lights.directional.positions;

		uniforms.pointLightColor.value = lights.point.colors;
		uniforms.pointLightPosition.value = lights.point.positions;
		uniforms.pointLightDistance.value = lights.point.distances;

		uniforms.spotLightColor.value = lights.spot.colors;
		uniforms.spotLightPosition.value = lights.spot.positions;
		uniforms.spotLightDistance.value = lights.spot.distances;
		uniforms.spotLightDirection.value = lights.spot.directions;
		uniforms.spotLightAngleCos.value = lights.spot.anglesCos;
		uniforms.spotLightExponent.value = lights.spot.exponents;

		uniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;
		uniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;
		uniforms.hemisphereLightDirection.value = lights.hemi.positions;

	};

	function refreshUniformsShadow ( uniforms, lights ) {

		if ( uniforms.shadowMatrix ) {

			var j = 0;

			for ( var i = 0, il = lights.length; i < il; i ++ ) {

				var light = lights[ i ];

				if ( ! light.castShadow ) continue;

				if ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {

					uniforms.shadowMap.value[ j ] = light.shadowMap;
					uniforms.shadowMapSize.value[ j ] = light.shadowMapSize;

					uniforms.shadowMatrix.value[ j ] = light.shadowMatrix;

					uniforms.shadowDarkness.value[ j ] = light.shadowDarkness;
					uniforms.shadowBias.value[ j ] = light.shadowBias;

					j ++;

				}

			}

		}

	};

	// Uniforms (load to GPU)

	function loadUniformsMatrices ( uniforms, object ) {

		_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );

		if ( uniforms.normalMatrix ) {

			_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );

		}

	};

	function getTextureUnit() {

		var textureUnit = _usedTextureUnits;

		if ( textureUnit >= _maxTextures ) {

			console.warn( "WebGLRenderer: trying to use " + textureUnit + " texture units while this GPU supports only " + _maxTextures );

		}

		_usedTextureUnits += 1;

		return textureUnit;

	};

	function loadUniformsGeneric ( program, uniforms ) {

		var uniform, value, type, location, texture, textureUnit, i, il, j, jl, offset;

		for ( j = 0, jl = uniforms.length; j < jl; j ++ ) {

			location = program.uniforms[ uniforms[ j ][ 1 ] ];
			if ( !location ) continue;

			uniform = uniforms[ j ][ 0 ];

			type = uniform.type;
			value = uniform.value;

			if ( type === "i" ) { // single integer

				_gl.uniform1i( location, value );

			} else if ( type === "f" ) { // single float

				_gl.uniform1f( location, value );

			} else if ( type === "v2" ) { // single THREE.Vector2

				_gl.uniform2f( location, value.x, value.y );

			} else if ( type === "v3" ) { // single THREE.Vector3

				_gl.uniform3f( location, value.x, value.y, value.z );

			} else if ( type === "v4" ) { // single THREE.Vector4

				_gl.uniform4f( location, value.x, value.y, value.z, value.w );

			} else if ( type === "c" ) { // single THREE.Color

				_gl.uniform3f( location, value.r, value.g, value.b );

			} else if ( type === "iv1" ) { // flat array of integers (JS or typed array)

				_gl.uniform1iv( location, value );

			} else if ( type === "iv" ) { // flat array of integers with 3 x N size (JS or typed array)

				_gl.uniform3iv( location, value );

			} else if ( type === "fv1" ) { // flat array of floats (JS or typed array)

				_gl.uniform1fv( location, value );

			} else if ( type === "fv" ) { // flat array of floats with 3 x N size (JS or typed array)

				_gl.uniform3fv( location, value );

			} else if ( type === "v2v" ) { // array of THREE.Vector2

				if ( uniform._array === undefined ) {

					uniform._array = new Float32Array( 2 * value.length );

				}

				for ( i = 0, il = value.length; i < il; i ++ ) {

					offset = i * 2;

					uniform._array[ offset ] 	 = value[ i ].x;
					uniform._array[ offset + 1 ] = value[ i ].y;

				}

				_gl.uniform2fv( location, uniform._array );

			} else if ( type === "v3v" ) { // array of THREE.Vector3

				if ( uniform._array === undefined ) {

					uniform._array = new Float32Array( 3 * value.length );

				}

				for ( i = 0, il = value.length; i < il; i ++ ) {

					offset = i * 3;

					uniform._array[ offset ] 	 = value[ i ].x;
					uniform._array[ offset + 1 ] = value[ i ].y;
					uniform._array[ offset + 2 ] = value[ i ].z;

				}

				_gl.uniform3fv( location, uniform._array );

			} else if ( type === "v4v" ) { // array of THREE.Vector4

				if ( uniform._array === undefined ) {

					uniform._array = new Float32Array( 4 * value.length );

				}

				for ( i = 0, il = value.length; i < il; i ++ ) {

					offset = i * 4;

					uniform._array[ offset ] 	 = value[ i ].x;
					uniform._array[ offset + 1 ] = value[ i ].y;
					uniform._array[ offset + 2 ] = value[ i ].z;
					uniform._array[ offset + 3 ] = value[ i ].w;

				}

				_gl.uniform4fv( location, uniform._array );

			} else if ( type === "m4") { // single THREE.Matrix4

				if ( uniform._array === undefined ) {

					uniform._array = new Float32Array( 16 );

				}

				value.flattenToArray( uniform._array );
				_gl.uniformMatrix4fv( location, false, uniform._array );

			} else if ( type === "m4v" ) { // array of THREE.Matrix4

				if ( uniform._array === undefined ) {

					uniform._array = new Float32Array( 16 * value.length );

				}

				for ( i = 0, il = value.length; i < il; i ++ ) {

					value[ i ].flattenToArrayOffset( uniform._array, i * 16 );

				}

				_gl.uniformMatrix4fv( location, false, uniform._array );

			} else if ( type === "t" ) { // single THREE.Texture (2d or cube)

				texture = value;
				textureUnit = getTextureUnit();

				_gl.uniform1i( location, textureUnit );

				if ( !texture ) continue;

				if ( texture.image instanceof Array && texture.image.length === 6 ) {

					setCubeTexture( texture, textureUnit );

				} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {

					setCubeTextureDynamic( texture, textureUnit );

				} else {

					_this.setTexture( texture, textureUnit );

				}

			} else if ( type === "tv" ) { // array of THREE.Texture (2d)

				if ( uniform._array === undefined ) {

					uniform._array = [];

				}

				for( i = 0, il = uniform.value.length; i < il; i ++ ) {

					uniform._array[ i ] = getTextureUnit();

				}

				_gl.uniform1iv( location, uniform._array );

				for( i = 0, il = uniform.value.length; i < il; i ++ ) {

					texture = uniform.value[ i ];
					textureUnit = uniform._array[ i ];

					if ( !texture ) continue;

					_this.setTexture( texture, textureUnit );

				}

			}

		}

	};

	function setupMatrices ( object, camera ) {

		object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );

		object._normalMatrix.getInverse( object._modelViewMatrix );
		object._normalMatrix.transpose();

	};

	//

	function setColorGamma( array, offset, color, intensitySq ) {

		array[ offset ]     = color.r * color.r * intensitySq;
		array[ offset + 1 ] = color.g * color.g * intensitySq;
		array[ offset + 2 ] = color.b * color.b * intensitySq;

	};

	function setColorLinear( array, offset, color, intensity ) {

		array[ offset ]     = color.r * intensity;
		array[ offset + 1 ] = color.g * intensity;
		array[ offset + 2 ] = color.b * intensity;

	};

	function setupLights ( program, lights ) {

		var l, ll, light, n,
		r = 0, g = 0, b = 0,
		color, skyColor, groundColor,
		intensity,  intensitySq,
		position,
		distance,

		zlights = _lights,

		dirColors = zlights.directional.colors,
		dirPositions = zlights.directional.positions,

		pointColors = zlights.point.colors,
		pointPositions = zlights.point.positions,
		pointDistances = zlights.point.distances,

		spotColors = zlights.spot.colors,
		spotPositions = zlights.spot.positions,
		spotDistances = zlights.spot.distances,
		spotDirections = zlights.spot.directions,
		spotAnglesCos = zlights.spot.anglesCos,
		spotExponents = zlights.spot.exponents,

		hemiSkyColors = zlights.hemi.skyColors,
		hemiGroundColors = zlights.hemi.groundColors,
		hemiPositions = zlights.hemi.positions,

		dirLength = 0,
		pointLength = 0,
		spotLength = 0,
		hemiLength = 0,

		dirCount = 0,
		pointCount = 0,
		spotCount = 0,
		hemiCount = 0,

		dirOffset = 0,
		pointOffset = 0,
		spotOffset = 0,
		hemiOffset = 0;

		for ( l = 0, ll = lights.length; l < ll; l ++ ) {

			light = lights[ l ];

			if ( light.onlyShadow ) continue;

			color = light.color;
			intensity = light.intensity;
			distance = light.distance;

			if ( light instanceof THREE.AmbientLight ) {

				if ( ! light.visible ) continue;

				if ( _this.gammaInput ) {

					r += color.r * color.r;
					g += color.g * color.g;
					b += color.b * color.b;

				} else {

					r += color.r;
					g += color.g;
					b += color.b;

				}

			} else if ( light instanceof THREE.DirectionalLight ) {

				dirCount += 1;

				if ( ! light.visible ) continue;

				_direction.getPositionFromMatrix( light.matrixWorld );
				_vector3.getPositionFromMatrix( light.target.matrixWorld );
				_direction.sub( _vector3 );
				_direction.normalize();

				// skip lights with undefined direction
				// these create troubles in OpenGL (making pixel black)

				if ( _direction.x === 0 && _direction.y === 0 && _direction.z === 0 ) continue;

				dirOffset = dirLength * 3;

				dirPositions[ dirOffset ]     = _direction.x;
				dirPositions[ dirOffset + 1 ] = _direction.y;
				dirPositions[ dirOffset + 2 ] = _direction.z;

				if ( _this.gammaInput ) {

					setColorGamma( dirColors, dirOffset, color, intensity * intensity );

				} else {

					setColorLinear( dirColors, dirOffset, color, intensity );

				}

				dirLength += 1;

			} else if ( light instanceof THREE.PointLight ) {

				pointCount += 1;

				if ( ! light.visible ) continue;

				pointOffset = pointLength * 3;

				if ( _this.gammaInput ) {

					setColorGamma( pointColors, pointOffset, color, intensity * intensity );

				} else {

					setColorLinear( pointColors, pointOffset, color, intensity );

				}

				_vector3.getPositionFromMatrix( light.matrixWorld );

				pointPositions[ pointOffset ]     = _vector3.x;
				pointPositions[ pointOffset + 1 ] = _vector3.y;
				pointPositions[ pointOffset + 2 ] = _vector3.z;

				pointDistances[ pointLength ] = distance;

				pointLength += 1;

			} else if ( light instanceof THREE.SpotLight ) {

				spotCount += 1;

				if ( ! light.visible ) continue;

				spotOffset = spotLength * 3;

				if ( _this.gammaInput ) {

					setColorGamma( spotColors, spotOffset, color, intensity * intensity );

				} else {

					setColorLinear( spotColors, spotOffset, color, intensity );

				}

				_vector3.getPositionFromMatrix( light.matrixWorld );

				spotPositions[ spotOffset ]     = _vector3.x;
				spotPositions[ spotOffset + 1 ] = _vector3.y;
				spotPositions[ spotOffset + 2 ] = _vector3.z;

				spotDistances[ spotLength ] = distance;

				_direction.copy( _vector3 );
				_vector3.getPositionFromMatrix( light.target.matrixWorld );
				_direction.sub( _vector3 );
				_direction.normalize();

				spotDirections[ spotOffset ]     = _direction.x;
				spotDirections[ spotOffset + 1 ] = _direction.y;
				spotDirections[ spotOffset + 2 ] = _direction.z;

				spotAnglesCos[ spotLength ] = Math.cos( light.angle );
				spotExponents[ spotLength ] = light.exponent;

				spotLength += 1;

			} else if ( light instanceof THREE.HemisphereLight ) {

				hemiCount += 1;

				if ( ! light.visible ) continue;

				_direction.getPositionFromMatrix( light.matrixWorld );
				_direction.normalize();

				// skip lights with undefined direction
				// these create troubles in OpenGL (making pixel black)

				if ( _direction.x === 0 && _direction.y === 0 && _direction.z === 0 ) continue;

				hemiOffset = hemiLength * 3;

				hemiPositions[ hemiOffset ]     = _direction.x;
				hemiPositions[ hemiOffset + 1 ] = _direction.y;
				hemiPositions[ hemiOffset + 2 ] = _direction.z;

				skyColor = light.color;
				groundColor = light.groundColor;

				if ( _this.gammaInput ) {

					intensitySq = intensity * intensity;

					setColorGamma( hemiSkyColors, hemiOffset, skyColor, intensitySq );
					setColorGamma( hemiGroundColors, hemiOffset, groundColor, intensitySq );

				} else {

					setColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );
					setColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );

				}

				hemiLength += 1;

			}

		}

		// null eventual remains from removed lights
		// (this is to avoid if in shader)

		for ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;
		for ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;
		for ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;
		for ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;
		for ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;

		zlights.directional.length = dirLength;
		zlights.point.length = pointLength;
		zlights.spot.length = spotLength;
		zlights.hemi.length = hemiLength;

		zlights.ambient[ 0 ] = r;
		zlights.ambient[ 1 ] = g;
		zlights.ambient[ 2 ] = b;

	};

	// GL state setting

	this.setFaceCulling = function ( cullFace, frontFaceDirection ) {

		if ( cullFace === THREE.CullFaceNone ) {

			_gl.disable( _gl.CULL_FACE );

		} else {

			if ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {

				_gl.frontFace( _gl.CW );

			} else {

				_gl.frontFace( _gl.CCW );

			}

			if ( cullFace === THREE.CullFaceBack ) {

				_gl.cullFace( _gl.BACK );

			} else if ( cullFace === THREE.CullFaceFront ) {

				_gl.cullFace( _gl.FRONT );

			} else {

				_gl.cullFace( _gl.FRONT_AND_BACK );

			}

			_gl.enable( _gl.CULL_FACE );

		}

	};

	this.setMaterialFaces = function ( material ) {

		var doubleSided = material.side === THREE.DoubleSide;
		var flipSided = material.side === THREE.BackSide;

		if ( _oldDoubleSided !== doubleSided ) {

			if ( doubleSided ) {

				_gl.disable( _gl.CULL_FACE );

			} else {

				_gl.enable( _gl.CULL_FACE );

			}

			_oldDoubleSided = doubleSided;

		}

		if ( _oldFlipSided !== flipSided ) {

			if ( flipSided ) {

				_gl.frontFace( _gl.CW );

			} else {

				_gl.frontFace( _gl.CCW );

			}

			_oldFlipSided = flipSided;

		}

	};

	this.setDepthTest = function ( depthTest ) {

		if ( _oldDepthTest !== depthTest ) {

			if ( depthTest ) {

				_gl.enable( _gl.DEPTH_TEST );

			} else {

				_gl.disable( _gl.DEPTH_TEST );

			}

			_oldDepthTest = depthTest;

		}

	};

	this.setDepthWrite = function ( depthWrite ) {

		if ( _oldDepthWrite !== depthWrite ) {

			_gl.depthMask( depthWrite );
			_oldDepthWrite = depthWrite;

		}

	};

	function setLineWidth ( width ) {

		if ( width !== _oldLineWidth ) {

			_gl.lineWidth( width );

			_oldLineWidth = width;

		}

	};

	function setPolygonOffset ( polygonoffset, factor, units ) {

		if ( _oldPolygonOffset !== polygonoffset ) {

			if ( polygonoffset ) {

				_gl.enable( _gl.POLYGON_OFFSET_FILL );

			} else {

				_gl.disable( _gl.POLYGON_OFFSET_FILL );

			}

			_oldPolygonOffset = polygonoffset;

		}

		if ( polygonoffset && ( _oldPolygonOffsetFactor !== factor || _oldPolygonOffsetUnits !== units ) ) {

			_gl.polygonOffset( factor, units );

			_oldPolygonOffsetFactor = factor;
			_oldPolygonOffsetUnits = units;

		}

	};

	this.setBlending = function ( blending, blendEquation, blendSrc, blendDst ) {

		if ( blending !== _oldBlending ) {

			if ( blending === THREE.NoBlending ) {

				_gl.disable( _gl.BLEND );

			} else if ( blending === THREE.AdditiveBlending ) {

				_gl.enable( _gl.BLEND );
				_gl.blendEquation( _gl.FUNC_ADD );
				_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE );

			} else if ( blending === THREE.SubtractiveBlending ) {

				// TODO: Find blendFuncSeparate() combination
				_gl.enable( _gl.BLEND );
				_gl.blendEquation( _gl.FUNC_ADD );
				_gl.blendFunc( _gl.ZERO, _gl.ONE_MINUS_SRC_COLOR );

			} else if ( blending === THREE.MultiplyBlending ) {

				// TODO: Find blendFuncSeparate() combination
				_gl.enable( _gl.BLEND );
				_gl.blendEquation( _gl.FUNC_ADD );
				_gl.blendFunc( _gl.ZERO, _gl.SRC_COLOR );

			} else if ( blending === THREE.CustomBlending ) {

				_gl.enable( _gl.BLEND );

			} else {

				_gl.enable( _gl.BLEND );
				_gl.blendEquationSeparate( _gl.FUNC_ADD, _gl.FUNC_ADD );
				_gl.blendFuncSeparate( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA );

			}

			_oldBlending = blending;

		}

		if ( blending === THREE.CustomBlending ) {

			if ( blendEquation !== _oldBlendEquation ) {

				_gl.blendEquation( paramThreeToGL( blendEquation ) );

				_oldBlendEquation = blendEquation;

			}

			if ( blendSrc !== _oldBlendSrc || blendDst !== _oldBlendDst ) {

				_gl.blendFunc( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ) );

				_oldBlendSrc = blendSrc;
				_oldBlendDst = blendDst;

			}

		} else {

			_oldBlendEquation = null;
			_oldBlendSrc = null;
			_oldBlendDst = null;

		}

	};

	// Defines

	function generateDefines ( defines ) {

		var value, chunk, chunks = [];

		for ( var d in defines ) {

			value = defines[ d ];
			if ( value === false ) continue;

			chunk = "#define " + d + " " + value;
			chunks.push( chunk );

		}

		return chunks.join( "\n" );

	};

	// Shaders

	function buildProgram ( shaderID, fragmentShader, vertexShader, uniforms, attributes, defines, parameters ) {

		var p, pl, d, program, code;
		var chunks = [];

		// Generate code

		if ( shaderID ) {

			chunks.push( shaderID );

		} else {

			chunks.push( fragmentShader );
			chunks.push( vertexShader );

		}

		for ( d in defines ) {

			chunks.push( d );
			chunks.push( defines[ d ] );

		}

		for ( p in parameters ) {

			chunks.push( p );
			chunks.push( parameters[ p ] );

		}

		code = chunks.join();

		// Check if code has been already compiled

		for ( p = 0, pl = _programs.length; p < pl; p ++ ) {

			var programInfo = _programs[ p ];

			if ( programInfo.code === code ) {

				// console.log( "Code already compiled." /*: \n\n" + code*/ );

				programInfo.usedTimes ++;

				return programInfo.program;

			}

		}

		var shadowMapTypeDefine = "SHADOWMAP_TYPE_BASIC";

		if ( parameters.shadowMapType === THREE.PCFShadowMap ) {

			shadowMapTypeDefine = "SHADOWMAP_TYPE_PCF";

		} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {

			shadowMapTypeDefine = "SHADOWMAP_TYPE_PCF_SOFT";

		}

		// console.log( "building new program " );

		//

		var customDefines = generateDefines( defines );

		//

		program = _gl.createProgram();

		var prefix_vertex = [

			"precision " + _precision + " float;",

			customDefines,

			_supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",

			_this.gammaInput ? "#define GAMMA_INPUT" : "",
			_this.gammaOutput ? "#define GAMMA_OUTPUT" : "",
			_this.physicallyBasedShading ? "#define PHYSICALLY_BASED_SHADING" : "",

			"#define MAX_DIR_LIGHTS " + parameters.maxDirLights,
			"#define MAX_POINT_LIGHTS " + parameters.maxPointLights,
			"#define MAX_SPOT_LIGHTS " + parameters.maxSpotLights,
			"#define MAX_HEMI_LIGHTS " + parameters.maxHemiLights,

			"#define MAX_SHADOWS " + parameters.maxShadows,

			"#define MAX_BONES " + parameters.maxBones,

			parameters.map ? "#define USE_MAP" : "",
			parameters.envMap ? "#define USE_ENVMAP" : "",
			parameters.lightMap ? "#define USE_LIGHTMAP" : "",
			parameters.bumpMap ? "#define USE_BUMPMAP" : "",
			parameters.normalMap ? "#define USE_NORMALMAP" : "",
			parameters.specularMap ? "#define USE_SPECULARMAP" : "",
			parameters.vertexColors ? "#define USE_COLOR" : "",

			parameters.skinning ? "#define USE_SKINNING" : "",
			parameters.useVertexTexture ? "#define BONE_TEXTURE" : "",
			parameters.boneTextureWidth ? "#define N_BONE_PIXEL_X " + parameters.boneTextureWidth.toFixed( 1 ) : "",
			parameters.boneTextureHeight ? "#define N_BONE_PIXEL_Y " + parameters.boneTextureHeight.toFixed( 1 ) : "",

			parameters.morphTargets ? "#define USE_MORPHTARGETS" : "",
			parameters.morphNormals ? "#define USE_MORPHNORMALS" : "",
			parameters.perPixel ? "#define PHONG_PER_PIXEL" : "",
			parameters.wrapAround ? "#define WRAP_AROUND" : "",
			parameters.doubleSided ? "#define DOUBLE_SIDED" : "",
			parameters.flipSided ? "#define FLIP_SIDED" : "",

			parameters.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
			parameters.shadowMapEnabled ? "#define " + shadowMapTypeDefine : "",
			parameters.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "",
			parameters.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "",

			parameters.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",

			"uniform mat4 modelMatrix;",
			"uniform mat4 modelViewMatrix;",
			"uniform mat4 projectionMatrix;",
			"uniform mat4 viewMatrix;",
			"uniform mat3 normalMatrix;",
			"uniform vec3 cameraPosition;",

			"attribute vec3 position;",
			"attribute vec3 normal;",
			"attribute vec2 uv;",
			"attribute vec2 uv2;",

			"#ifdef USE_COLOR",

				"attribute vec3 color;",

			"#endif",

			"#ifdef USE_MORPHTARGETS",

				"attribute vec3 morphTarget0;",
				"attribute vec3 morphTarget1;",
				"attribute vec3 morphTarget2;",
				"attribute vec3 morphTarget3;",

				"#ifdef USE_MORPHNORMALS",

					"attribute vec3 morphNormal0;",
					"attribute vec3 morphNormal1;",
					"attribute vec3 morphNormal2;",
					"attribute vec3 morphNormal3;",

				"#else",

					"attribute vec3 morphTarget4;",
					"attribute vec3 morphTarget5;",
					"attribute vec3 morphTarget6;",
					"attribute vec3 morphTarget7;",

				"#endif",

			"#endif",

			"#ifdef USE_SKINNING",

				"attribute vec4 skinIndex;",
				"attribute vec4 skinWeight;",

			"#endif",

			""

		].join("\n");

		var prefix_fragment = [

			"precision " + _precision + " float;",

			( parameters.bumpMap || parameters.normalMap ) ? "#extension GL_OES_standard_derivatives : enable" : "",

			customDefines,

			"#define MAX_DIR_LIGHTS " + parameters.maxDirLights,
			"#define MAX_POINT_LIGHTS " + parameters.maxPointLights,
			"#define MAX_SPOT_LIGHTS " + parameters.maxSpotLights,
			"#define MAX_HEMI_LIGHTS " + parameters.maxHemiLights,

			"#define MAX_SHADOWS " + parameters.maxShadows,

			parameters.alphaTest ? "#define ALPHATEST " + parameters.alphaTest: "",

			_this.gammaInput ? "#define GAMMA_INPUT" : "",
			_this.gammaOutput ? "#define GAMMA_OUTPUT" : "",
			_this.physicallyBasedShading ? "#define PHYSICALLY_BASED_SHADING" : "",

			( parameters.useFog && parameters.fog ) ? "#define USE_FOG" : "",
			( parameters.useFog && parameters.fogExp ) ? "#define FOG_EXP2" : "",

			parameters.map ? "#define USE_MAP" : "",
			parameters.envMap ? "#define USE_ENVMAP" : "",
			parameters.lightMap ? "#define USE_LIGHTMAP" : "",
			parameters.bumpMap ? "#define USE_BUMPMAP" : "",
			parameters.normalMap ? "#define USE_NORMALMAP" : "",
			parameters.specularMap ? "#define USE_SPECULARMAP" : "",
			parameters.vertexColors ? "#define USE_COLOR" : "",

			parameters.metal ? "#define METAL" : "",
			parameters.perPixel ? "#define PHONG_PER_PIXEL" : "",
			parameters.wrapAround ? "#define WRAP_AROUND" : "",
			parameters.doubleSided ? "#define DOUBLE_SIDED" : "",
			parameters.flipSided ? "#define FLIP_SIDED" : "",

			parameters.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
			parameters.shadowMapEnabled ? "#define " + shadowMapTypeDefine : "",
			parameters.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "",
			parameters.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "",

			"uniform mat4 viewMatrix;",
			"uniform vec3 cameraPosition;",
			""

		].join("\n");

		var glFragmentShader = getShader( "fragment", prefix_fragment + fragmentShader );
		var glVertexShader = getShader( "vertex", prefix_vertex + vertexShader );

		_gl.attachShader( program, glVertexShader );
		_gl.attachShader( program, glFragmentShader );

		_gl.linkProgram( program );

		if ( !_gl.getProgramParameter( program, _gl.LINK_STATUS ) ) {

			console.error( "Could not initialise shader\n" + "VALIDATE_STATUS: " + _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ) + ", gl error [" + _gl.getError() + "]" );

		}

		// clean up

		_gl.deleteShader( glFragmentShader );
		_gl.deleteShader( glVertexShader );

		// console.log( prefix_fragment + fragmentShader );
		// console.log( prefix_vertex + vertexShader );

		program.uniforms = {};
		program.attributes = {};

		var identifiers, u, a, i;

		// cache uniform locations

		identifiers = [

			'viewMatrix', 'modelViewMatrix', 'projectionMatrix', 'normalMatrix', 'modelMatrix', 'cameraPosition',
			'morphTargetInfluences'

		];

		if ( parameters.useVertexTexture ) {

			identifiers.push( 'boneTexture' );

		} else {

			identifiers.push( 'boneGlobalMatrices' );

		}

		for ( u in uniforms ) {

			identifiers.push( u );

		}

		cacheUniformLocations( program, identifiers );

		// cache attributes locations

		identifiers = [

			"position", "normal", "uv", "uv2", "tangent", "color",
			"skinIndex", "skinWeight", "lineDistance"

		];

		for ( i = 0; i < parameters.maxMorphTargets; i ++ ) {

			identifiers.push( "morphTarget" + i );

		}

		for ( i = 0; i < parameters.maxMorphNormals; i ++ ) {

			identifiers.push( "morphNormal" + i );

		}

		for ( a in attributes ) {

			identifiers.push( a );

		}

		cacheAttributeLocations( program, identifiers );

		program.id = _programs_counter ++;

		_programs.push( { program: program, code: code, usedTimes: 1 } );

		_this.info.memory.programs = _programs.length;

		return program;

	};

	// Shader parameters cache

	function cacheUniformLocations ( program, identifiers ) {

		var i, l, id;

		for( i = 0, l = identifiers.length; i < l; i ++ ) {

			id = identifiers[ i ];
			program.uniforms[ id ] = _gl.getUniformLocation( program, id );

		}

	};

	function cacheAttributeLocations ( program, identifiers ) {

		var i, l, id;

		for( i = 0, l = identifiers.length; i < l; i ++ ) {

			id = identifiers[ i ];
			program.attributes[ id ] = _gl.getAttribLocation( program, id );

		}

	};

	function addLineNumbers ( string ) {

		var chunks = string.split( "\n" );

		for ( var i = 0, il = chunks.length; i < il; i ++ ) {

			// Chrome reports shader errors on lines
			// starting counting from 1

			chunks[ i ] = ( i + 1 ) + ": " + chunks[ i ];

		}

		return chunks.join( "\n" );

	};

	function getShader ( type, string ) {

		var shader;

		if ( type === "fragment" ) {

			shader = _gl.createShader( _gl.FRAGMENT_SHADER );

		} else if ( type === "vertex" ) {

			shader = _gl.createShader( _gl.VERTEX_SHADER );

		}

		_gl.shaderSource( shader, string );
		_gl.compileShader( shader );

		if ( !_gl.getShaderParameter( shader, _gl.COMPILE_STATUS ) ) {

			console.error( _gl.getShaderInfoLog( shader ) );
			console.error( addLineNumbers( string ) );
			return null;

		}

		return shader;

	};

	// Textures


	function isPowerOfTwo ( value ) {

		return ( value & ( value - 1 ) ) === 0;

	};

	function setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {

		if ( isImagePowerOfTwo ) {

			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );
			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );

			_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );
			_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );

		} else {

			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );
			_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );

			_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );
			_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );

		}

		if ( _glExtensionTextureFilterAnisotropic && texture.type !== THREE.FloatType ) {

			if ( texture.anisotropy > 1 || texture.__oldAnisotropy ) {

				_gl.texParameterf( textureType, _glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _maxAnisotropy ) );
				texture.__oldAnisotropy = texture.anisotropy;

			}

		}

	};

	this.setTexture = function ( texture, slot ) {

		if ( texture.needsUpdate ) {

			if ( ! texture.__webglInit ) {

				texture.__webglInit = true;

				texture.addEventListener( 'dispose', onTextureDispose );

				texture.__webglTexture = _gl.createTexture();

				_this.info.memory.textures ++;

			}

			_gl.activeTexture( _gl.TEXTURE0 + slot );
			_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );

			_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );
			_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );
			_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );

			var image = texture.image,
			isImagePowerOfTwo = isPowerOfTwo( image.width ) && isPowerOfTwo( image.height ),
			glFormat = paramThreeToGL( texture.format ),
			glType = paramThreeToGL( texture.type );

			setTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );

			var mipmap, mipmaps = texture.mipmaps;

			if ( texture instanceof THREE.DataTexture ) {

				// use manually created mipmaps if available
				// if there are no manual mipmaps
				// set 0 level mipmap and then use GL to generate other mipmap levels

				if ( mipmaps.length > 0 && isImagePowerOfTwo ) {

					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

						mipmap = mipmaps[ i ];
						_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

					}

					texture.generateMipmaps = false;

				} else {

					_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );

				}

			} else if ( texture instanceof THREE.CompressedTexture ) {

				// compressed textures can only use manually created mipmaps
				// WebGL can't generate mipmaps for DDS textures

				for( var i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];
					_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );

				}

			} else { // regular Texture (image, video, canvas)

				// use manually created mipmaps if available
				// if there are no manual mipmaps
				// set 0 level mipmap and then use GL to generate other mipmap levels

				if ( mipmaps.length > 0 && isImagePowerOfTwo ) {

					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

						mipmap = mipmaps[ i ];
						_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );

					}

					texture.generateMipmaps = false;

				} else {

					_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );

				}

			}

			if ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );

			texture.needsUpdate = false;

			if ( texture.onUpdate ) texture.onUpdate();

		} else {

			_gl.activeTexture( _gl.TEXTURE0 + slot );
			_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );

		}

	};

	function clampToMaxSize ( image, maxSize ) {

		if ( image.width <= maxSize && image.height <= maxSize ) {

			return image;

		}

		// Warning: Scaling through the canvas will only work with images that use
		// premultiplied alpha.

		var maxDimension = Math.max( image.width, image.height );
		var newWidth = Math.floor( image.width * maxSize / maxDimension );
		var newHeight = Math.floor( image.height * maxSize / maxDimension );

		var canvas = document.createElement( 'canvas' );
		canvas.width = newWidth;
		canvas.height = newHeight;

		var ctx = canvas.getContext( "2d" );
		ctx.drawImage( image, 0, 0, image.width, image.height, 0, 0, newWidth, newHeight );

		return canvas;

	}

	function setCubeTexture ( texture, slot ) {

		if ( texture.image.length === 6 ) {

			if ( texture.needsUpdate ) {

				if ( ! texture.image.__webglTextureCube ) {

					texture.image.__webglTextureCube = _gl.createTexture();

					_this.info.memory.textures ++;

				}

				_gl.activeTexture( _gl.TEXTURE0 + slot );
				_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );

				_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );

				var isCompressed = texture instanceof THREE.CompressedTexture;

				var cubeImage = [];

				for ( var i = 0; i < 6; i ++ ) {

					if ( _this.autoScaleCubemaps && ! isCompressed ) {

						cubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );

					} else {

						cubeImage[ i ] = texture.image[ i ];

					}

				}

				var image = cubeImage[ 0 ],
				isImagePowerOfTwo = isPowerOfTwo( image.width ) && isPowerOfTwo( image.height ),
				glFormat = paramThreeToGL( texture.format ),
				glType = paramThreeToGL( texture.type );

				setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );

				for ( var i = 0; i < 6; i ++ ) {

					if ( isCompressed ) {

						var mipmap, mipmaps = cubeImage[ i ].mipmaps;

						for( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {

							mipmap = mipmaps[ j ];
							_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );

						}

					} else {

						_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );

					}

				}

				if ( texture.generateMipmaps && isImagePowerOfTwo ) {

					_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );

				}

				texture.needsUpdate = false;

				if ( texture.onUpdate ) texture.onUpdate();

			} else {

				_gl.activeTexture( _gl.TEXTURE0 + slot );
				_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );

			}

		}

	};

	function setCubeTextureDynamic ( texture, slot ) {

		_gl.activeTexture( _gl.TEXTURE0 + slot );
		_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );

	};

	// Render targets

	function setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {

		_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
		_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );

	};

	function setupRenderBuffer ( renderbuffer, renderTarget  ) {

		_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );

		if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {

			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );
			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );

		/* For some reason this is not working. Defaulting to RGBA4.
		} else if( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );
			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );
		*/
		} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );
			_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );

		} else {

			_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );

		}

	};

	this.setRenderTarget = function ( renderTarget ) {

		var isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );

		if ( renderTarget && ! renderTarget.__webglFramebuffer ) {

			if ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;
			if ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;

			renderTarget.addEventListener( 'dispose', onRenderTargetDispose );

			renderTarget.__webglTexture = _gl.createTexture();

			_this.info.memory.textures ++;

			// Setup texture, create render and frame buffers

			var isTargetPowerOfTwo = isPowerOfTwo( renderTarget.width ) && isPowerOfTwo( renderTarget.height ),
				glFormat = paramThreeToGL( renderTarget.format ),
				glType = paramThreeToGL( renderTarget.type );

			if ( isCube ) {

				renderTarget.__webglFramebuffer = [];
				renderTarget.__webglRenderbuffer = [];

				_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );
				setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );

				for ( var i = 0; i < 6; i ++ ) {

					renderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();
					renderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();

					_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );

					setupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );
					setupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );

				}

				if ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );

			} else {

				renderTarget.__webglFramebuffer = _gl.createFramebuffer();

				if ( renderTarget.shareDepthFrom ) {

					renderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;

				} else {

					renderTarget.__webglRenderbuffer = _gl.createRenderbuffer();

				}

				_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );
				setTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );

				_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );

				setupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );

				if ( renderTarget.shareDepthFrom ) {

					if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {

						_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );

					} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

						_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );

					}

				} else {

					setupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );

				}

				if ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );

			}

			// Release everything

			if ( isCube ) {

				_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );

			} else {

				_gl.bindTexture( _gl.TEXTURE_2D, null );

			}

			_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );
			_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );

		}

		var framebuffer, width, height, vx, vy;

		if ( renderTarget ) {

			if ( isCube ) {

				framebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];

			} else {

				framebuffer = renderTarget.__webglFramebuffer;

			}

			width = renderTarget.width;
			height = renderTarget.height;

			vx = 0;
			vy = 0;

		} else {

			framebuffer = null;

			width = _viewportWidth;
			height = _viewportHeight;

			vx = _viewportX;
			vy = _viewportY;

		}

		if ( framebuffer !== _currentFramebuffer ) {

			_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );
			_gl.viewport( vx, vy, width, height );

			_currentFramebuffer = framebuffer;

		}

		_currentWidth = width;
		_currentHeight = height;

	};

	function updateRenderTargetMipmap ( renderTarget ) {

		if ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {

			_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );
			_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );
			_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );

		} else {

			_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );
			_gl.generateMipmap( _gl.TEXTURE_2D );
			_gl.bindTexture( _gl.TEXTURE_2D, null );

		}

	};

	// Fallback filters for non-power-of-2 textures

	function filterFallback ( f ) {

		if ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {

			return _gl.NEAREST;

		}

		return _gl.LINEAR;

	};

	// Map three.js constants to WebGL constants

	function paramThreeToGL ( p ) {

		if ( p === THREE.RepeatWrapping ) return _gl.REPEAT;
		if ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;
		if ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;

		if ( p === THREE.NearestFilter ) return _gl.NEAREST;
		if ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;
		if ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;

		if ( p === THREE.LinearFilter ) return _gl.LINEAR;
		if ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;
		if ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;

		if ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;
		if ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;
		if ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;
		if ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;

		if ( p === THREE.ByteType ) return _gl.BYTE;
		if ( p === THREE.ShortType ) return _gl.SHORT;
		if ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;
		if ( p === THREE.IntType ) return _gl.INT;
		if ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;
		if ( p === THREE.FloatType ) return _gl.FLOAT;

		if ( p === THREE.AlphaFormat ) return _gl.ALPHA;
		if ( p === THREE.RGBFormat ) return _gl.RGB;
		if ( p === THREE.RGBAFormat ) return _gl.RGBA;
		if ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;
		if ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;

		if ( p === THREE.AddEquation ) return _gl.FUNC_ADD;
		if ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;
		if ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;

		if ( p === THREE.ZeroFactor ) return _gl.ZERO;
		if ( p === THREE.OneFactor ) return _gl.ONE;
		if ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;
		if ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;
		if ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;
		if ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;
		if ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;
		if ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;

		if ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;
		if ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;
		if ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;

		if ( _glExtensionCompressedTextureS3TC !== undefined ) {

			if ( p === THREE.RGB_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;
			if ( p === THREE.RGBA_S3TC_DXT1_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;
			if ( p === THREE.RGBA_S3TC_DXT3_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;
			if ( p === THREE.RGBA_S3TC_DXT5_Format ) return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;

		}

		return 0;

	};

	// Allocations

	function allocateBones ( object ) {

		if ( _supportsBoneTextures && object && object.useVertexTexture ) {

			return 1024;

		} else {

			// default for when object is not specified
			// ( for example when prebuilding shader
			//   to be used with multiple objects )
			//
			// 	- leave some extra space for other uniforms
			//  - limit here is ANGLE's 254 max uniform vectors
			//    (up to 54 should be safe)

			var nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );
			var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );

			var maxBones = nVertexMatrices;

			if ( object !== undefined && object instanceof THREE.SkinnedMesh ) {

				maxBones = Math.min( object.bones.length, maxBones );

				if ( maxBones < object.bones.length ) {

					console.warn( "WebGLRenderer: too many bones - " + object.bones.length + ", this GPU supports just " + maxBones + " (try OpenGL instead of ANGLE)" );

				}

			}

			return maxBones;

		}

	};

	function allocateLights ( lights ) {

		var l, ll, light, dirLights, pointLights, spotLights, hemiLights;

		dirLights = pointLights = spotLights = hemiLights = 0;

		for ( l = 0, ll = lights.length; l < ll; l ++ ) {

			light = lights[ l ];

			if ( light.onlyShadow ) continue;

			if ( light instanceof THREE.DirectionalLight ) dirLights ++;
			if ( light instanceof THREE.PointLight ) pointLights ++;
			if ( light instanceof THREE.SpotLight ) spotLights ++;
			if ( light instanceof THREE.HemisphereLight ) hemiLights ++;

		}

		return { 'directional' : dirLights, 'point' : pointLights, 'spot': spotLights, 'hemi': hemiLights };

	};

	function allocateShadows ( lights ) {

		var l, ll, light, maxShadows = 0;

		for ( l = 0, ll = lights.length; l < ll; l++ ) {

			light = lights[ l ];

			if ( ! light.castShadow ) continue;

			if ( light instanceof THREE.SpotLight ) maxShadows ++;
			if ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;

		}

		return maxShadows;

	};

	// Initialization

	function initGL () {

		try {

			if ( ! ( _gl = _canvas.getContext( 'experimental-webgl', { alpha: _alpha, premultipliedAlpha: _premultipliedAlpha, antialias: _antialias, stencil: _stencil, preserveDrawingBuffer: _preserveDrawingBuffer } ) ) ) {

				throw 'Error creating WebGL context.';

			}

		} catch ( error ) {

			console.error( error );

		}

		_glExtensionTextureFloat = _gl.getExtension( 'OES_texture_float' );
		_glExtensionStandardDerivatives = _gl.getExtension( 'OES_standard_derivatives' );

		_glExtensionTextureFilterAnisotropic = _gl.getExtension( 'EXT_texture_filter_anisotropic' ) ||
											   _gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) ||
											   _gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );


		_glExtensionCompressedTextureS3TC = _gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) ||
											_gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) ||
											_gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );

		if ( ! _glExtensionTextureFloat ) {

			console.log( 'THREE.WebGLRenderer: Float textures not supported.' );

		}

		if ( ! _glExtensionStandardDerivatives ) {

			console.log( 'THREE.WebGLRenderer: Standard derivatives not supported.' );

		}

		if ( ! _glExtensionTextureFilterAnisotropic ) {

			console.log( 'THREE.WebGLRenderer: Anisotropic texture filtering not supported.' );

		}

		if ( ! _glExtensionCompressedTextureS3TC ) {

			console.log( 'THREE.WebGLRenderer: S3TC compressed textures not supported.' );

		}

		if ( _gl.getShaderPrecisionFormat === undefined ) {

			_gl.getShaderPrecisionFormat = function() {

				return {
					"rangeMin"  : 1,
					"rangeMax"  : 1,
					"precision" : 1
				};

			}
		}

	};

	function setDefaultGLState () {

		_gl.clearColor( 0, 0, 0, 1 );
		_gl.clearDepth( 1 );
		_gl.clearStencil( 0 );

		_gl.enable( _gl.DEPTH_TEST );
		_gl.depthFunc( _gl.LEQUAL );

		_gl.frontFace( _gl.CCW );
		_gl.cullFace( _gl.BACK );
		_gl.enable( _gl.CULL_FACE );

		_gl.enable( _gl.BLEND );
		_gl.blendEquation( _gl.FUNC_ADD );
		_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );

		_gl.clearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );

	};

	// default plugins (order is important)

	this.shadowMapPlugin = new THREE.ShadowMapPlugin();
	this.addPrePlugin( this.shadowMapPlugin );

	this.addPostPlugin( new THREE.SpritePlugin() );
	this.addPostPlugin( new THREE.LensFlarePlugin() );

};
/**
 * @author szimek / https://github.com/szimek/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.WebGLRenderTarget = function ( width, height, options ) {

	THREE.EventDispatcher.call( this );

	this.width = width;
	this.height = height;

	options = options || {};

	this.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;
	this.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;

	this.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;
	this.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;

	this.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;

	this.offset = new THREE.Vector2( 0, 0 );
	this.repeat = new THREE.Vector2( 1, 1 );

	this.format = options.format !== undefined ? options.format : THREE.RGBAFormat;
	this.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;

	this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;
	this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;

	this.generateMipmaps = true;

	this.shareDepthFrom = null;

};

THREE.WebGLRenderTarget.prototype.clone = function() {

	var tmp = new THREE.WebGLRenderTarget( this.width, this.height );

	tmp.wrapS = this.wrapS;
	tmp.wrapT = this.wrapT;

	tmp.magFilter = this.magFilter;
	tmp.minFilter = this.minFilter;

	tmp.anisotropy = this.anisotropy;

	tmp.offset.copy( this.offset );
	tmp.repeat.copy( this.repeat );

	tmp.format = this.format;
	tmp.type = this.type;

	tmp.depthBuffer = this.depthBuffer;
	tmp.stencilBuffer = this.stencilBuffer;

	tmp.generateMipmaps = this.generateMipmaps;

	tmp.shareDepthFrom = this.shareDepthFrom;

	return tmp;

};

THREE.WebGLRenderTarget.prototype.dispose = function () {

	this.dispatchEvent( { type: 'dispose' } );

};
/**
 * @author alteredq / http://alteredqualia.com
 */

THREE.WebGLRenderTargetCube = function ( width, height, options ) {

	THREE.WebGLRenderTarget.call( this, width, height, options );

	this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5

};

THREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.RenderableVertex = function () {

	this.positionWorld = new THREE.Vector3();
	this.positionScreen = new THREE.Vector4();

	this.visible = true;

};

THREE.RenderableVertex.prototype.copy = function ( vertex ) {

	this.positionWorld.copy( vertex.positionWorld );
	this.positionScreen.copy( vertex.positionScreen );

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.RenderableFace3 = function () {

	this.v1 = new THREE.RenderableVertex();
	this.v2 = new THREE.RenderableVertex();
	this.v3 = new THREE.RenderableVertex();

	this.centroidModel = new THREE.Vector3();

	this.normalModel = new THREE.Vector3();
	this.normalModelView = new THREE.Vector3();

	this.vertexNormalsLength = 0;
	this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];
	this.vertexNormalsModelView = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];

	this.color = null;
	this.material = null;
	this.uvs = [[]];

	this.z = null;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.RenderableFace4 = function () {

	this.v1 = new THREE.RenderableVertex();
	this.v2 = new THREE.RenderableVertex();
	this.v3 = new THREE.RenderableVertex();
	this.v4 = new THREE.RenderableVertex();

	this.centroidModel = new THREE.Vector3();

	this.normalModel = new THREE.Vector3();
	this.normalModelView = new THREE.Vector3();

	this.vertexNormalsLength = 0;
	this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];
	this.vertexNormalsModelView = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];

	this.color = null;
	this.material = null;
	this.uvs = [[]];

	this.z = null;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.RenderableObject = function () {

	this.object = null;
	this.z = null;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.RenderableParticle = function () {

	this.object = null;

	this.x = null;
	this.y = null;
	this.z = null;

	this.rotation = null;
	this.scale = new THREE.Vector2();

	this.material = null;

};
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.RenderableLine = function () {

	this.z = null;

	this.v1 = new THREE.RenderableVertex();
	this.v2 = new THREE.RenderableVertex();

	this.material = null;

};
/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.GeometryUtils = {

	// Merge two geometries or geometry and geometry from object (using object's transform)

	merge: function ( geometry1, object2 /* mesh | geometry */ ) {

		var matrix, normalMatrix,
		vertexOffset = geometry1.vertices.length,
		uvPosition = geometry1.faceVertexUvs[ 0 ].length,
		geometry2 = object2 instanceof THREE.Mesh ? object2.geometry : object2,
		vertices1 = geometry1.vertices,
		vertices2 = geometry2.vertices,
		faces1 = geometry1.faces,
		faces2 = geometry2.faces,
		uvs1 = geometry1.faceVertexUvs[ 0 ],
		uvs2 = geometry2.faceVertexUvs[ 0 ];

		if ( object2 instanceof THREE.Mesh ) {

			object2.matrixAutoUpdate && object2.updateMatrix();

			matrix = object2.matrix;

			normalMatrix = new THREE.Matrix3();
			normalMatrix.getInverse( matrix );
			normalMatrix.transpose();

		}

		// vertices

		for ( var i = 0, il = vertices2.length; i < il; i ++ ) {

			var vertex = vertices2[ i ];

			var vertexCopy = vertex.clone();

			if ( matrix ) vertexCopy.applyMatrix4( matrix );

			vertices1.push( vertexCopy );

		}

		// faces

		for ( i = 0, il = faces2.length; i < il; i ++ ) {

			var face = faces2[ i ], faceCopy, normal, color,
			faceVertexNormals = face.vertexNormals,
			faceVertexColors = face.vertexColors;

			if ( face instanceof THREE.Face3 ) {

				faceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );

			} else if ( face instanceof THREE.Face4 ) {

				faceCopy = new THREE.Face4( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset, face.d + vertexOffset );

			}

			faceCopy.normal.copy( face.normal );

			if ( normalMatrix ) {

				faceCopy.normal.applyMatrix3( normalMatrix ).normalize();

			}

			for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {

				normal = faceVertexNormals[ j ].clone();

				if ( normalMatrix ) {

					normal.applyMatrix3( normalMatrix ).normalize();

				}

				faceCopy.vertexNormals.push( normal );

			}

			faceCopy.color.copy( face.color );

			for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {

				color = faceVertexColors[ j ];
				faceCopy.vertexColors.push( color.clone() );

			}

			faceCopy.materialIndex = face.materialIndex;

			faceCopy.centroid.copy( face.centroid );

			if ( matrix ) {

				faceCopy.centroid.applyMatrix4( matrix );

			}

			faces1.push( faceCopy );

		}

		// uvs

		for ( i = 0, il = uvs2.length; i < il; i ++ ) {

			var uv = uvs2[ i ], uvCopy = [];

			for ( var j = 0, jl = uv.length; j < jl; j ++ ) {

				uvCopy.push( new THREE.Vector2( uv[ j ].x, uv[ j ].y ) );

			}

			uvs1.push( uvCopy );

		}

	},

	removeMaterials: function ( geometry, materialIndexArray ) {

		var materialIndexMap = {};

		for ( var i = 0, il = materialIndexArray.length; i < il; i ++ ) {

			materialIndexMap[ materialIndexArray[i] ] = true;

		}

		var face, newFaces = [];

		for ( var i = 0, il = geometry.faces.length; i < il; i ++ ) {

			face = geometry.faces[ i ];
			if ( ! ( face.materialIndex in materialIndexMap ) ) newFaces.push( face );

		}

		geometry.faces = newFaces;

	},

	// Get random point in triangle (via barycentric coordinates)
	// 	(uniform distribution)
	// 	http://www.cgafaq.info/wiki/Random_Point_In_Triangle

	randomPointInTriangle: function ( vectorA, vectorB, vectorC ) {

		var a, b, c,
			point = new THREE.Vector3(),
			tmp = THREE.GeometryUtils.__v1;

		a = THREE.GeometryUtils.random();
		b = THREE.GeometryUtils.random();

		if ( ( a + b ) > 1 ) {

			a = 1 - a;
			b = 1 - b;

		}

		c = 1 - a - b;

		point.copy( vectorA );
		point.multiplyScalar( a );

		tmp.copy( vectorB );
		tmp.multiplyScalar( b );

		point.add( tmp );

		tmp.copy( vectorC );
		tmp.multiplyScalar( c );

		point.add( tmp );

		return point;

	},

	// Get random point in face (triangle / quad)
	// (uniform distribution)

	randomPointInFace: function ( face, geometry, useCachedAreas ) {

		var vA, vB, vC, vD;

		if ( face instanceof THREE.Face3 ) {

			vA = geometry.vertices[ face.a ];
			vB = geometry.vertices[ face.b ];
			vC = geometry.vertices[ face.c ];

			return THREE.GeometryUtils.randomPointInTriangle( vA, vB, vC );

		} else if ( face instanceof THREE.Face4 ) {

			vA = geometry.vertices[ face.a ];
			vB = geometry.vertices[ face.b ];
			vC = geometry.vertices[ face.c ];
			vD = geometry.vertices[ face.d ];

			var area1, area2;

			if ( useCachedAreas ) {

				if ( face._area1 && face._area2 ) {

					area1 = face._area1;
					area2 = face._area2;

				} else {

					area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD );
					area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );

					face._area1 = area1;
					face._area2 = area2;

				}

			} else {

				area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD ),
				area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );

			}

			var r = THREE.GeometryUtils.random() * ( area1 + area2 );

			if ( r < area1 ) {

				return THREE.GeometryUtils.randomPointInTriangle( vA, vB, vD );

			} else {

				return THREE.GeometryUtils.randomPointInTriangle( vB, vC, vD );

			}

		}

	},

	// Get uniformly distributed random points in mesh
	// 	- create array with cumulative sums of face areas
	//  - pick random number from 0 to total area
	//  - find corresponding place in area array by binary search
	//	- get random point in face

	randomPointsInGeometry: function ( geometry, n ) {

		var face, i,
			faces = geometry.faces,
			vertices = geometry.vertices,
			il = faces.length,
			totalArea = 0,
			cumulativeAreas = [],
			vA, vB, vC, vD;

		// precompute face areas

		for ( i = 0; i < il; i ++ ) {

			face = faces[ i ];

			if ( face instanceof THREE.Face3 ) {

				vA = vertices[ face.a ];
				vB = vertices[ face.b ];
				vC = vertices[ face.c ];

				face._area = THREE.GeometryUtils.triangleArea( vA, vB, vC );

			} else if ( face instanceof THREE.Face4 ) {

				vA = vertices[ face.a ];
				vB = vertices[ face.b ];
				vC = vertices[ face.c ];
				vD = vertices[ face.d ];

				face._area1 = THREE.GeometryUtils.triangleArea( vA, vB, vD );
				face._area2 = THREE.GeometryUtils.triangleArea( vB, vC, vD );

				face._area = face._area1 + face._area2;

			}

			totalArea += face._area;

			cumulativeAreas[ i ] = totalArea;

		}

		// binary search cumulative areas array

		function binarySearchIndices( value ) {

			function binarySearch( start, end ) {

				// return closest larger index
				// if exact number is not found

				if ( end < start )
					return start;

				var mid = start + Math.floor( ( end - start ) / 2 );

				if ( cumulativeAreas[ mid ] > value ) {

					return binarySearch( start, mid - 1 );

				} else if ( cumulativeAreas[ mid ] < value ) {

					return binarySearch( mid + 1, end );

				} else {

					return mid;

				}

			}

			var result = binarySearch( 0, cumulativeAreas.length - 1 )
			return result;

		}

		// pick random face weighted by face area

		var r, index,
			result = [];

		var stats = {};

		for ( i = 0; i < n; i ++ ) {

			r = THREE.GeometryUtils.random() * totalArea;

			index = binarySearchIndices( r );

			result[ i ] = THREE.GeometryUtils.randomPointInFace( faces[ index ], geometry, true );

			if ( ! stats[ index ] ) {

				stats[ index ] = 1;

			} else {

				stats[ index ] += 1;

			}

		}

		return result;

	},

	// Get triangle area (half of parallelogram)
	//	http://mathworld.wolfram.com/TriangleArea.html

	triangleArea: function ( vectorA, vectorB, vectorC ) {

		var tmp1 = THREE.GeometryUtils.__v1,
			tmp2 = THREE.GeometryUtils.__v2;

		tmp1.subVectors( vectorB, vectorA );
		tmp2.subVectors( vectorC, vectorA );
		tmp1.cross( tmp2 );

		return 0.5 * tmp1.length();

	},

	// Center geometry so that 0,0,0 is in center of bounding box

	center: function ( geometry ) {

		geometry.computeBoundingBox();

		var bb = geometry.boundingBox;

		var offset = new THREE.Vector3();

		offset.addVectors( bb.min, bb.max );
		offset.multiplyScalar( -0.5 );

		geometry.applyMatrix( new THREE.Matrix4().makeTranslation( offset.x, offset.y, offset.z ) );
		geometry.computeBoundingBox();

		return offset;

	},

	// Normalize UVs to be from <0,1>
	// (for now just the first set of UVs)

	normalizeUVs: function ( geometry ) {

		var uvSet = geometry.faceVertexUvs[ 0 ];

		for ( var i = 0, il = uvSet.length; i < il; i ++ ) {

			var uvs = uvSet[ i ];

			for ( var j = 0, jl = uvs.length; j < jl; j ++ ) {

				// texture repeat

				if( uvs[ j ].x !== 1.0 ) uvs[ j ].x = uvs[ j ].x - Math.floor( uvs[ j ].x );
				if( uvs[ j ].y !== 1.0 ) uvs[ j ].y = uvs[ j ].y - Math.floor( uvs[ j ].y );

			}

		}

	},

	triangulateQuads: function ( geometry ) {

		var i, il, j, jl;

		var faces = [];
		var faceUvs = [];
		var faceVertexUvs = [];

		for ( i = 0, il = geometry.faceUvs.length; i < il; i ++ ) {

			faceUvs[ i ] = [];

		}

		for ( i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {

			faceVertexUvs[ i ] = [];

		}

		for ( i = 0, il = geometry.faces.length; i < il; i ++ ) {

			var face = geometry.faces[ i ];

			if ( face instanceof THREE.Face4 ) {

				var a = face.a;
				var b = face.b;
				var c = face.c;
				var d = face.d;

				var triA = new THREE.Face3();
				var triB = new THREE.Face3();

				triA.color.copy( face.color );
				triB.color.copy( face.color );

				triA.materialIndex = face.materialIndex;
				triB.materialIndex = face.materialIndex;

				triA.a = a;
				triA.b = b;
				triA.c = d;

				triB.a = b;
				triB.b = c;
				triB.c = d;

				if ( face.vertexColors.length === 4 ) {

					triA.vertexColors[ 0 ] = face.vertexColors[ 0 ].clone();
					triA.vertexColors[ 1 ] = face.vertexColors[ 1 ].clone();
					triA.vertexColors[ 2 ] = face.vertexColors[ 3 ].clone();

					triB.vertexColors[ 0 ] = face.vertexColors[ 1 ].clone();
					triB.vertexColors[ 1 ] = face.vertexColors[ 2 ].clone();
					triB.vertexColors[ 2 ] = face.vertexColors[ 3 ].clone();

				}

				faces.push( triA, triB );

				for ( j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {

					if ( geometry.faceVertexUvs[ j ].length ) {

						var uvs = geometry.faceVertexUvs[ j ][ i ];

						var uvA = uvs[ 0 ];
						var uvB = uvs[ 1 ];
						var uvC = uvs[ 2 ];
						var uvD = uvs[ 3 ];

						var uvsTriA = [ uvA.clone(), uvB.clone(), uvD.clone() ];
						var uvsTriB = [ uvB.clone(), uvC.clone(), uvD.clone() ];

						faceVertexUvs[ j ].push( uvsTriA, uvsTriB );

					}

				}

				for ( j = 0, jl = geometry.faceUvs.length; j < jl; j ++ ) {

					if ( geometry.faceUvs[ j ].length ) {

						var faceUv = geometry.faceUvs[ j ][ i ];

						faceUvs[ j ].push( faceUv, faceUv );

					}

				}

			} else {

				faces.push( face );

				for ( j = 0, jl = geometry.faceUvs.length; j < jl; j ++ ) {

					faceUvs[ j ].push( geometry.faceUvs[ j ][ i ] );

				}

				for ( j = 0, jl = geometry.faceVertexUvs.length; j < jl; j ++ ) {

					faceVertexUvs[ j ].push( geometry.faceVertexUvs[ j ][ i ] );

				}

			}

		}

		geometry.faces = faces;
		geometry.faceUvs = faceUvs;
		geometry.faceVertexUvs = faceVertexUvs;

		geometry.computeCentroids();
		geometry.computeFaceNormals();
		geometry.computeVertexNormals();

		if ( geometry.hasTangents ) geometry.computeTangents();

	},

	setMaterialIndex: function ( geometry, index, startFace, endFace ){

		var faces = geometry.faces;
		var start = startFace || 0;
		var end = endFace || faces.length - 1;

		for ( var i = start; i <= end; i ++ ) {

			faces[i].materialIndex = index;

		}

    }

};

THREE.GeometryUtils.random = THREE.Math.random16;

THREE.GeometryUtils.__v1 = new THREE.Vector3();
THREE.GeometryUtils.__v2 = new THREE.Vector3();
/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.ImageUtils = {

	crossOrigin: 'anonymous',

	loadTexture: function ( url, mapping, onLoad, onError ) {

		var image = new Image();
		var texture = new THREE.Texture( image, mapping );

		var loader = new THREE.ImageLoader();

		loader.addEventListener( 'load', function ( event ) {

			texture.image = event.content;
			texture.needsUpdate = true;

			if ( onLoad ) onLoad( texture );

		} );

		loader.addEventListener( 'error', function ( event ) {

			if ( onError ) onError( event.message );

		} );

		loader.crossOrigin = this.crossOrigin;
		loader.load( url, image );

		texture.sourceFile = url;

		return texture;

	},

	loadCompressedTexture: function ( url, mapping, onLoad, onError ) {

		var texture = new THREE.CompressedTexture();
		texture.mapping = mapping;

		var request = new XMLHttpRequest();

		request.onload = function () {

			var buffer = request.response;
			var dds = THREE.ImageUtils.parseDDS( buffer, true );

			texture.format = dds.format;

			texture.mipmaps = dds.mipmaps;
			texture.image.width = dds.width;
			texture.image.height = dds.height;

			// gl.generateMipmap fails for compressed textures
			// mipmaps must be embedded in the DDS file
			// or texture filters must not use mipmapping

			texture.generateMipmaps = false;

			texture.needsUpdate = true;

			if ( onLoad ) onLoad( texture );

		}

		request.onerror = onError;

		request.open( 'GET', url, true );
		request.responseType = "arraybuffer";
		request.send( null );

		return texture;

	},

	loadTextureCube: function ( array, mapping, onLoad, onError ) {

		var images = [];
		images.loadCount = 0;

		var texture = new THREE.Texture();
		texture.image = images;
		if ( mapping !== undefined ) texture.mapping = mapping;

		// no flipping needed for cube textures

		texture.flipY = false;

		for ( var i = 0, il = array.length; i < il; ++ i ) {

			var cubeImage = new Image();
			images[ i ] = cubeImage;

			cubeImage.onload = function () {

				images.loadCount += 1;

				if ( images.loadCount === 6 ) {

					texture.needsUpdate = true;
					if ( onLoad ) onLoad( texture );

				}

			};

			cubeImage.onerror = onError;

			cubeImage.crossOrigin = this.crossOrigin;
			cubeImage.src = array[ i ];

		}

		return texture;

	},

	loadCompressedTextureCube: function ( array, mapping, onLoad, onError ) {

		var images = [];
		images.loadCount = 0;

		var texture = new THREE.CompressedTexture();
		texture.image = images;
		if ( mapping !== undefined ) texture.mapping = mapping;

		// no flipping for cube textures
		// (also flipping doesn't work for compressed textures )

		texture.flipY = false;

		// can't generate mipmaps for compressed textures
		// mips must be embedded in DDS files

		texture.generateMipmaps = false;

		var generateCubeFaceCallback = function ( rq, img ) {

			return function () {

				var buffer = rq.response;
				var dds = THREE.ImageUtils.parseDDS( buffer, true );

				img.format = dds.format;

				img.mipmaps = dds.mipmaps;
				img.width = dds.width;
				img.height = dds.height;

				images.loadCount += 1;

				if ( images.loadCount === 6 ) {

					texture.format = dds.format;
					texture.needsUpdate = true;
					if ( onLoad ) onLoad( texture );

				}

			}

		}

		// compressed cubemap textures as 6 separate DDS files

		if ( array instanceof Array ) {

			for ( var i = 0, il = array.length; i < il; ++ i ) {

				var cubeImage = {};
				images[ i ] = cubeImage;

				var request = new XMLHttpRequest();

				request.onload = generateCubeFaceCallback( request, cubeImage );
				request.onerror = onError;

				var url = array[ i ];

				request.open( 'GET', url, true );
				request.responseType = "arraybuffer";
				request.send( null );

			}

		// compressed cubemap texture stored in a single DDS file

		} else {

			var url = array;
			var request = new XMLHttpRequest();

			request.onload = function( ) {

				var buffer = request.response;
				var dds = THREE.ImageUtils.parseDDS( buffer, true );

				if ( dds.isCubemap ) {

					var faces = dds.mipmaps.length / dds.mipmapCount;

					for ( var f = 0; f < faces; f ++ ) {

						images[ f ] = { mipmaps : [] };

						for ( var i = 0; i < dds.mipmapCount; i ++ ) {

							images[ f ].mipmaps.push( dds.mipmaps[ f * dds.mipmapCount + i ] );
							images[ f ].format = dds.format;
							images[ f ].width = dds.width;
							images[ f ].height = dds.height;

						}

					}

					texture.format = dds.format;
					texture.needsUpdate = true;
					if ( onLoad ) onLoad( texture );

				}

			}

			request.onerror = onError;

			request.open( 'GET', url, true );
			request.responseType = "arraybuffer";
			request.send( null );

		}

		return texture;

	},

	parseDDS: function ( buffer, loadMipmaps ) {

		var dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };

		// Adapted from @toji's DDS utils
		//	https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js

		// All values and structures referenced from:
		// http://msdn.microsoft.com/en-us/library/bb943991.aspx/

		var DDS_MAGIC = 0x20534444;

		var DDSD_CAPS = 0x1,
			DDSD_HEIGHT = 0x2,
			DDSD_WIDTH = 0x4,
			DDSD_PITCH = 0x8,
			DDSD_PIXELFORMAT = 0x1000,
			DDSD_MIPMAPCOUNT = 0x20000,
			DDSD_LINEARSIZE = 0x80000,
			DDSD_DEPTH = 0x800000;

		var DDSCAPS_COMPLEX = 0x8,
			DDSCAPS_MIPMAP = 0x400000,
			DDSCAPS_TEXTURE = 0x1000;

		var DDSCAPS2_CUBEMAP = 0x200,
			DDSCAPS2_CUBEMAP_POSITIVEX = 0x400,
			DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,
			DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,
			DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,
			DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,
			DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,
			DDSCAPS2_VOLUME = 0x200000;

		var DDPF_ALPHAPIXELS = 0x1,
			DDPF_ALPHA = 0x2,
			DDPF_FOURCC = 0x4,
			DDPF_RGB = 0x40,
			DDPF_YUV = 0x200,
			DDPF_LUMINANCE = 0x20000;

		function fourCCToInt32( value ) {

			return value.charCodeAt(0) +
				(value.charCodeAt(1) << 8) +
				(value.charCodeAt(2) << 16) +
				(value.charCodeAt(3) << 24);

		}

		function int32ToFourCC( value ) {

			return String.fromCharCode(
				value & 0xff,
				(value >> 8) & 0xff,
				(value >> 16) & 0xff,
				(value >> 24) & 0xff
			);
		}

		var FOURCC_DXT1 = fourCCToInt32("DXT1");
		var FOURCC_DXT3 = fourCCToInt32("DXT3");
		var FOURCC_DXT5 = fourCCToInt32("DXT5");

		var headerLengthInt = 31; // The header length in 32 bit ints

		// Offsets into the header array

		var off_magic = 0;

		var off_size = 1;
		var off_flags = 2;
		var off_height = 3;
		var off_width = 4;

		var off_mipmapCount = 7;

		var off_pfFlags = 20;
		var off_pfFourCC = 21;

		var off_caps = 27;
		var off_caps2 = 28;
		var off_caps3 = 29;
		var off_caps4 = 30;

		// Parse header

		var header = new Int32Array( buffer, 0, headerLengthInt );

		if ( header[ off_magic ] !== DDS_MAGIC ) {

			console.error( "ImageUtils.parseDDS(): Invalid magic number in DDS header" );
			return dds;

		}

		if ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {

			console.error( "ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code" );
			return dds;

		}

		var blockBytes;

		var fourCC = header[ off_pfFourCC ];

		switch ( fourCC ) {

			case FOURCC_DXT1:

				blockBytes = 8;
				dds.format = THREE.RGB_S3TC_DXT1_Format;
				break;

			case FOURCC_DXT3:

				blockBytes = 16;
				dds.format = THREE.RGBA_S3TC_DXT3_Format;
				break;

			case FOURCC_DXT5:

				blockBytes = 16;
				dds.format = THREE.RGBA_S3TC_DXT5_Format;
				break;

			default:

				console.error( "ImageUtils.parseDDS(): Unsupported FourCC code: ", int32ToFourCC( fourCC ) );
				return dds;

		}

		dds.mipmapCount = 1;

		if ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {

			dds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );

		}

		//TODO: Verify that all faces of the cubemap are present with DDSCAPS2_CUBEMAP_POSITIVEX, etc.

		dds.isCubemap = header[ off_caps2 ] & DDSCAPS2_CUBEMAP ? true : false;

		dds.width = header[ off_width ];
		dds.height = header[ off_height ];

		var dataOffset = header[ off_size ] + 4;

		// Extract mipmaps buffers

		var width = dds.width;
		var height = dds.height;

		var faces = dds.isCubemap ? 6 : 1;

		for ( var face = 0; face < faces; face ++ ) {

			for ( var i = 0; i < dds.mipmapCount; i ++ ) {

				var dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;
				var byteArray = new Uint8Array( buffer, dataOffset, dataLength );

				var mipmap = { "data": byteArray, "width": width, "height": height };
				dds.mipmaps.push( mipmap );

				dataOffset += dataLength;

				width = Math.max( width * 0.5, 1 );
				height = Math.max( height * 0.5, 1 );

			}

			width = dds.width;
			height = dds.height;

		}

		return dds;

	},

	getNormalMap: function ( image, depth ) {

		// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/

		var cross = function ( a, b ) {

			return [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];

		}

		var subtract = function ( a, b ) {

			return [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];

		}

		var normalize = function ( a ) {

			var l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );
			return [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];

		}

		depth = depth | 1;

		var width = image.width;
		var height = image.height;

		var canvas = document.createElement( 'canvas' );
		canvas.width = width;
		canvas.height = height;

		var context = canvas.getContext( '2d' );
		context.drawImage( image, 0, 0 );

		var data = context.getImageData( 0, 0, width, height ).data;
		var imageData = context.createImageData( width, height );
		var output = imageData.data;

		for ( var x = 0; x < width; x ++ ) {

			for ( var y = 0; y < height; y ++ ) {

				var ly = y - 1 < 0 ? 0 : y - 1;
				var uy = y + 1 > height - 1 ? height - 1 : y + 1;
				var lx = x - 1 < 0 ? 0 : x - 1;
				var ux = x + 1 > width - 1 ? width - 1 : x + 1;

				var points = [];
				var origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];
				points.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );
				points.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );
				points.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );
				points.push( [  1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );
				points.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );
				points.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );
				points.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );
				points.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );

				var normals = [];
				var num_points = points.length;

				for ( var i = 0; i < num_points; i ++ ) {

					var v1 = points[ i ];
					var v2 = points[ ( i + 1 ) % num_points ];
					v1 = subtract( v1, origin );
					v2 = subtract( v2, origin );
					normals.push( normalize( cross( v1, v2 ) ) );

				}

				var normal = [ 0, 0, 0 ];

				for ( var i = 0; i < normals.length; i ++ ) {

					normal[ 0 ] += normals[ i ][ 0 ];
					normal[ 1 ] += normals[ i ][ 1 ];
					normal[ 2 ] += normals[ i ][ 2 ];

				}

				normal[ 0 ] /= normals.length;
				normal[ 1 ] /= normals.length;
				normal[ 2 ] /= normals.length;

				var idx = ( y * width + x ) * 4;

				output[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;
				output[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;
				output[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;
				output[ idx + 3 ] = 255;

			}

		}

		context.putImageData( imageData, 0, 0 );

		return canvas;

	},

	generateDataTexture: function ( width, height, color ) {

		var size = width * height;
		var data = new Uint8Array( 3 * size );

		var r = Math.floor( color.r * 255 );
		var g = Math.floor( color.g * 255 );
		var b = Math.floor( color.b * 255 );

		for ( var i = 0; i < size; i ++ ) {

			data[ i * 3 ] 	  = r;
			data[ i * 3 + 1 ] = g;
			data[ i * 3 + 2 ] = b;

		}

		var texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );
		texture.needsUpdate = true;

		return texture;

	}

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.SceneUtils = {

	createMultiMaterialObject: function ( geometry, materials ) {

		var group = new THREE.Object3D();

		for ( var i = 0, l = materials.length; i < l; i ++ ) {

			group.add( new THREE.Mesh( geometry, materials[ i ] ) );

		}

		return group;

	},

	detach : function ( child, parent, scene ) {

		child.applyMatrix( parent.matrixWorld );
		parent.remove( child );
		scene.add( child );

	},

	attach: function ( child, scene, parent ) {

		var matrixWorldInverse = new THREE.Matrix4();
		matrixWorldInverse.getInverse( parent.matrixWorld );
		child.applyMatrix( matrixWorldInverse );

		scene.remove( child );
		parent.add( child );

	}

};
/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author alteredq / http://alteredqualia.com/
 *
 * For Text operations in three.js (See TextGeometry)
 *
 * It uses techniques used in:
 *
 * 	typeface.js and canvastext
 * 		For converting fonts and rendering with javascript
 *		http://typeface.neocracy.org
 *
 *	Triangulation ported from AS3
 *		Simple Polygon Triangulation
 *		http://actionsnippet.com/?p=1462
 *
 * 	A Method to triangulate shapes with holes
 *		http://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/
 *
 */

THREE.FontUtils = {

	faces : {},

	// Just for now. face[weight][style]

	face : "helvetiker",
	weight: "normal",
	style : "normal",
	size : 150,
	divisions : 10,

	getFace : function() {

		return this.faces[ this.face ][ this.weight ][ this.style ];

	},

	loadFace : function( data ) {

		var family = data.familyName.toLowerCase();

		var ThreeFont = this;

		ThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};

		ThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};
		ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;

		var face = ThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;

		return data;

	},

	drawText : function( text ) {

		var characterPts = [], allPts = [];

		// RenderText

		var i, p,
			face = this.getFace(),
			scale = this.size / face.resolution,
			offset = 0,
			chars = String( text ).split( '' ),
			length = chars.length;

		var fontPaths = [];

		for ( i = 0; i < length; i ++ ) {

			var path = new THREE.Path();

			var ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );
			offset += ret.offset;

			fontPaths.push( ret.path );

		}

		// get the width

		var width = offset / 2;
		//
		// for ( p = 0; p < allPts.length; p++ ) {
		//
		// 	allPts[ p ].x -= width;
		//
		// }

		//var extract = this.extractPoints( allPts, characterPts );
		//extract.contour = allPts;

		//extract.paths = fontPaths;
		//extract.offset = width;

		return { paths : fontPaths, offset : width };

	},




	extractGlyphPoints : function( c, face, scale, offset, path ) {

		var pts = [];

		var i, i2, divisions,
			outline, action, length,
			scaleX, scaleY,
			x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,
			laste,
			glyph = face.glyphs[ c ] || face.glyphs[ '?' ];

		if ( !glyph ) return;

		if ( glyph.o ) {

			outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );
			length = outline.length;

			scaleX = scale;
			scaleY = scale;

			for ( i = 0; i < length; ) {

				action = outline[ i ++ ];

				//console.log( action );

				switch( action ) {

				case 'm':

					// Move To

					x = outline[ i++ ] * scaleX + offset;
					y = outline[ i++ ] * scaleY;

					path.moveTo( x, y );
					break;

				case 'l':

					// Line To

					x = outline[ i++ ] * scaleX + offset;
					y = outline[ i++ ] * scaleY;
					path.lineTo(x,y);
					break;

				case 'q':

					// QuadraticCurveTo

					cpx  = outline[ i++ ] * scaleX + offset;
					cpy  = outline[ i++ ] * scaleY;
					cpx1 = outline[ i++ ] * scaleX + offset;
					cpy1 = outline[ i++ ] * scaleY;

					path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);

					laste = pts[ pts.length - 1 ];

					if ( laste ) {

						cpx0 = laste.x;
						cpy0 = laste.y;

						for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {

							var t = i2 / divisions;
							var tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );
							var ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );
					  }

				  }

				  break;

				case 'b':

					// Cubic Bezier Curve

					cpx  = outline[ i++ ] *  scaleX + offset;
					cpy  = outline[ i++ ] *  scaleY;
					cpx1 = outline[ i++ ] *  scaleX + offset;
					cpy1 = outline[ i++ ] * -scaleY;
					cpx2 = outline[ i++ ] *  scaleX + offset;
					cpy2 = outline[ i++ ] * -scaleY;

					path.bezierCurveTo( cpx, cpy, cpx1, cpy1, cpx2, cpy2 );

					laste = pts[ pts.length - 1 ];

					if ( laste ) {

						cpx0 = laste.x;
						cpy0 = laste.y;

						for ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {

							var t = i2 / divisions;
							var tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );
							var ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );

						}

					}

					break;

				}

			}
		}



		return { offset: glyph.ha*scale, path:path};
	}

};


THREE.FontUtils.generateShapes = function( text, parameters ) {

	// Parameters 

	parameters = parameters || {};

	var size = parameters.size !== undefined ? parameters.size : 100;
	var curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments: 4;

	var font = parameters.font !== undefined ? parameters.font : "helvetiker";
	var weight = parameters.weight !== undefined ? parameters.weight : "normal";
	var style = parameters.style !== undefined ? parameters.style : "normal";

	THREE.FontUtils.size = size;
	THREE.FontUtils.divisions = curveSegments;

	THREE.FontUtils.face = font;
	THREE.FontUtils.weight = weight;
	THREE.FontUtils.style = style;

	// Get a Font data json object

	var data = THREE.FontUtils.drawText( text );

	var paths = data.paths;
	var shapes = [];

	for ( var p = 0, pl = paths.length; p < pl; p ++ ) {

		Array.prototype.push.apply( shapes, paths[ p ].toShapes() );

	}

	return shapes;

};


/**
 * This code is a quick port of code written in C++ which was submitted to
 * flipcode.com by John W. Ratcliff  // July 22, 2000
 * See original code and more information here:
 * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
 *
 * ported to actionscript by Zevan Rosser
 * www.actionsnippet.com
 *
 * ported to javascript by Joshua Koo
 * http://www.lab4games.net/zz85/blog
 *
 */


( function( namespace ) {

	var EPSILON = 0.0000000001;

	// takes in an contour array and returns

	var process = function( contour, indices ) {

		var n = contour.length;

		if ( n < 3 ) return null;

		var result = [],
			verts = [],
			vertIndices = [];

		/* we want a counter-clockwise polygon in verts */

		var u, v, w;

		if ( area( contour ) > 0.0 ) {

			for ( v = 0; v < n; v++ ) verts[ v ] = v;

		} else {

			for ( v = 0; v < n; v++ ) verts[ v ] = ( n - 1 ) - v;

		}

		var nv = n;

		/*  remove nv - 2 vertices, creating 1 triangle every time */

		var count = 2 * nv;   /* error detection */

		for( v = nv - 1; nv > 2; ) {

			/* if we loop, it is probably a non-simple polygon */

			if ( ( count-- ) <= 0 ) {

				//** Triangulate: ERROR - probable bad polygon!

				//throw ( "Warning, unable to triangulate polygon!" );
				//return null;
				// Sometimes warning is fine, especially polygons are triangulated in reverse.
				console.log( "Warning, unable to triangulate polygon!" );

				if ( indices ) return vertIndices;
				return result;

			}

			/* three consecutive vertices in current polygon, <u,v,w> */

			u = v; 	 	if ( nv <= u ) u = 0;     /* previous */
			v = u + 1;  if ( nv <= v ) v = 0;     /* new v    */
			w = v + 1;  if ( nv <= w ) w = 0;     /* next     */

			if ( snip( contour, u, v, w, nv, verts ) ) {

				var a, b, c, s, t;

				/* true names of the vertices */

				a = verts[ u ];
				b = verts[ v ];
				c = verts[ w ];

				/* output Triangle */

				result.push( [ contour[ a ],
					contour[ b ],
					contour[ c ] ] );


				vertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );

				/* remove v from the remaining polygon */

				for( s = v, t = v + 1; t < nv; s++, t++ ) {

					verts[ s ] = verts[ t ];

				}

				nv--;

				/* reset error detection counter */

				count = 2 * nv;

			}

		}

		if ( indices ) return vertIndices;
		return result;

	};

	// calculate area of the contour polygon

	var area = function ( contour ) {

		var n = contour.length;
		var a = 0.0;

		for( var p = n - 1, q = 0; q < n; p = q++ ) {

			a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;

		}

		return a * 0.5;

	};

	var snip = function ( contour, u, v, w, n, verts ) {

		var p;
		var ax, ay, bx, by;
		var cx, cy, px, py;

		ax = contour[ verts[ u ] ].x;
		ay = contour[ verts[ u ] ].y;

		bx = contour[ verts[ v ] ].x;
		by = contour[ verts[ v ] ].y;

		cx = contour[ verts[ w ] ].x;
		cy = contour[ verts[ w ] ].y;

		if ( EPSILON > (((bx-ax)*(cy-ay)) - ((by-ay)*(cx-ax))) ) return false;

		var aX, aY, bX, bY, cX, cY;
		var apx, apy, bpx, bpy, cpx, cpy;
		var cCROSSap, bCROSScp, aCROSSbp;

		aX = cx - bx;  aY = cy - by;
		bX = ax - cx;  bY = ay - cy;
		cX = bx - ax;  cY = by - ay;

		for ( p = 0; p < n; p++ ) {

			if( (p === u) || (p === v) || (p === w) ) continue;

			px = contour[ verts[ p ] ].x
			py = contour[ verts[ p ] ].y

			apx = px - ax;  apy = py - ay;
			bpx = px - bx;  bpy = py - by;
			cpx = px - cx;  cpy = py - cy;

			// see if p is inside triangle abc

			aCROSSbp = aX*bpy - aY*bpx;
			cCROSSap = cX*apy - cY*apx;
			bCROSScp = bX*cpy - bY*cpx;

			if ( (aCROSSbp >= 0.0) && (bCROSScp >= 0.0) && (cCROSSap >= 0.0) ) return false;

		}

		return true;

	};


	namespace.Triangulate = process;
	namespace.Triangulate.area = area;

	return namespace;

})(THREE.FontUtils);

// To use the typeface.js face files, hook up the API
self._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Extensible curve object
 *
 * Some common of Curve methods
 * .getPoint(t), getTangent(t)
 * .getPointAt(u), getTagentAt(u)
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This file contains following classes:
 *
 * -- 2d classes --
 * THREE.Curve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.CubicBezierCurve
 * THREE.SplineCurve
 * THREE.ArcCurve
 * THREE.EllipseCurve
 *
 * -- 3d classes --
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 * THREE.CubicBezierCurve3
 * THREE.SplineCurve3
 * THREE.ClosedSplineCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath
 *
 **/

/**************************************************************
 *	Abstract Curve base class
 **************************************************************/

THREE.Curve = function () {

};

// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]

THREE.Curve.prototype.getPoint = function ( t ) {

	console.log( "Warning, getPoint() not implemented!" );
	return null;

};

// Get point at relative position in curve according to arc length
// - u [0 .. 1]

THREE.Curve.prototype.getPointAt = function ( u ) {

	var t = this.getUtoTmapping( u );
	return this.getPoint( t );

};

// Get sequence of points using getPoint( t )

THREE.Curve.prototype.getPoints = function ( divisions ) {

	if ( !divisions ) divisions = 5;

	var d, pts = [];

	for ( d = 0; d <= divisions; d ++ ) {

		pts.push( this.getPoint( d / divisions ) );

	}

	return pts;

};

// Get sequence of points using getPointAt( u )

THREE.Curve.prototype.getSpacedPoints = function ( divisions ) {

	if ( !divisions ) divisions = 5;

	var d, pts = [];

	for ( d = 0; d <= divisions; d ++ ) {

		pts.push( this.getPointAt( d / divisions ) );

	}

	return pts;

};

// Get total curve arc length

THREE.Curve.prototype.getLength = function () {

	var lengths = this.getLengths();
	return lengths[ lengths.length - 1 ];

};

// Get list of cumulative segment lengths

THREE.Curve.prototype.getLengths = function ( divisions ) {

	if ( !divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions): 200;

	if ( this.cacheArcLengths
		&& ( this.cacheArcLengths.length == divisions + 1 )
		&& !this.needsUpdate) {

		//console.log( "cached", this.cacheArcLengths );
		return this.cacheArcLengths;

	}

	this.needsUpdate = false;

	var cache = [];
	var current, last = this.getPoint( 0 );
	var p, sum = 0;

	cache.push( 0 );

	for ( p = 1; p <= divisions; p ++ ) {

		current = this.getPoint ( p / divisions );
		sum += current.distanceTo( last );
		cache.push( sum );
		last = current;

	}

	this.cacheArcLengths = cache;

	return cache; // { sums: cache, sum:sum }; Sum is in the last element.

};


THREE.Curve.prototype.updateArcLengths = function() {
	this.needsUpdate = true;
	this.getLengths();
};

// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance

THREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {

	var arcLengths = this.getLengths();

	var i = 0, il = arcLengths.length;

	var targetArcLength; // The targeted u distance value to get

	if ( distance ) {

		targetArcLength = distance;

	} else {

		targetArcLength = u * arcLengths[ il - 1 ];

	}

	//var time = Date.now();

	// binary search for the index with largest value smaller than target u distance

	var low = 0, high = il - 1, comparison;

	while ( low <= high ) {

		i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats

		comparison = arcLengths[ i ] - targetArcLength;

		if ( comparison < 0 ) {

			low = i + 1;
			continue;

		} else if ( comparison > 0 ) {

			high = i - 1;
			continue;

		} else {

			high = i;
			break;

			// DONE

		}

	}

	i = high;

	//console.log('b' , i, low, high, Date.now()- time);

	if ( arcLengths[ i ] == targetArcLength ) {

		var t = i / ( il - 1 );
		return t;

	}

	// we could get finer grain at lengths, or use simple interpolatation between two points

	var lengthBefore = arcLengths[ i ];
    var lengthAfter = arcLengths[ i + 1 ];

    var segmentLength = lengthAfter - lengthBefore;

    // determine where we are between the 'before' and 'after' points

    var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;

    // add that fractional amount to t

    var t = ( i + segmentFraction ) / ( il -1 );

	return t;

};

// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation

THREE.Curve.prototype.getTangent = function( t ) {

	var delta = 0.0001;
	var t1 = t - delta;
	var t2 = t + delta;

	// Capping in case of danger

	if ( t1 < 0 ) t1 = 0;
	if ( t2 > 1 ) t2 = 1;

	var pt1 = this.getPoint( t1 );
	var pt2 = this.getPoint( t2 );

	var vec = pt2.clone().sub(pt1);
	return vec.normalize();

};


THREE.Curve.prototype.getTangentAt = function ( u ) {

	var t = this.getUtoTmapping( u );
	return this.getTangent( t );

};

/**************************************************************
 *	Line
 **************************************************************/

THREE.LineCurve = function ( v1, v2 ) {

	this.v1 = v1;
	this.v2 = v2;

};

THREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );

THREE.LineCurve.prototype.getPoint = function ( t ) {

	var point = this.v2.clone().sub(this.v1);
	point.multiplyScalar( t ).add( this.v1 );

	return point;

};

// Line curve is linear, so we can overwrite default getPointAt

THREE.LineCurve.prototype.getPointAt = function ( u ) {

	return this.getPoint( u );

};

THREE.LineCurve.prototype.getTangent = function( t ) {

	var tangent = this.v2.clone().sub(this.v1);

	return tangent.normalize();

};

/**************************************************************
 *	Quadratic Bezier curve
 **************************************************************/


THREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {

	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;

};

THREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );


THREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {

	var tx, ty;

	tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );
	ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );

	return new THREE.Vector2( tx, ty );

};


THREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {

	var tx, ty;

	tx = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );
	ty = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );

	// returns unit vector

	var tangent = new THREE.Vector2( tx, ty );
	tangent.normalize();

	return tangent;

};


/**************************************************************
 *	Cubic Bezier curve
 **************************************************************/

THREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {

	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;
	this.v3 = v3;

};

THREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );

THREE.CubicBezierCurve.prototype.getPoint = function ( t ) {

	var tx, ty;

	tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );
	ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );

	return new THREE.Vector2( tx, ty );

};

THREE.CubicBezierCurve.prototype.getTangent = function( t ) {

	var tx, ty;

	tx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );
	ty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );

	var tangent = new THREE.Vector2( tx, ty );
	tangent.normalize();

	return tangent;

};


/**************************************************************
 *	Spline curve
 **************************************************************/

THREE.SplineCurve = function ( points /* array of Vector2 */ ) {

	this.points = (points == undefined) ? [] : points;

};

THREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );

THREE.SplineCurve.prototype.getPoint = function ( t ) {

	var v = new THREE.Vector2();
	var c = [];
	var points = this.points, point, intPoint, weight;
	point = ( points.length - 1 ) * t;

	intPoint = Math.floor( point );
	weight = point - intPoint;

	c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;
	c[ 1 ] = intPoint;
	c[ 2 ] = intPoint  > points.length - 2 ? points.length -1 : intPoint + 1;
	c[ 3 ] = intPoint  > points.length - 3 ? points.length -1 : intPoint + 2;

	v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );
	v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );

	return v;

};

/**************************************************************
 *	Ellipse curve
 **************************************************************/

THREE.EllipseCurve = function ( aX, aY, xRadius, yRadius,
							aStartAngle, aEndAngle,
							aClockwise ) {

	this.aX = aX;
	this.aY = aY;

	this.xRadius = xRadius;
	this.yRadius = yRadius;

	this.aStartAngle = aStartAngle;
	this.aEndAngle = aEndAngle;

	this.aClockwise = aClockwise;

};

THREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );

THREE.EllipseCurve.prototype.getPoint = function ( t ) {

	var deltaAngle = this.aEndAngle - this.aStartAngle;

	if ( !this.aClockwise ) {

		t = 1 - t;

	}

	var angle = this.aStartAngle + t * deltaAngle;

	var tx = this.aX + this.xRadius * Math.cos( angle );
	var ty = this.aY + this.yRadius * Math.sin( angle );

	return new THREE.Vector2( tx, ty );

};

/**************************************************************
 *	Arc curve
 **************************************************************/

THREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

	THREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );
};

THREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );


/**************************************************************
 *	Utils
 **************************************************************/

THREE.Curve.Utils = {

	tangentQuadraticBezier: function ( t, p0, p1, p2 ) {

		return 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );

	},

	// Puay Bing, thanks for helping with this derivative!

	tangentCubicBezier: function (t, p0, p1, p2, p3 ) {

		return -3 * p0 * (1 - t) * (1 - t)  +
			3 * p1 * (1 - t) * (1-t) - 6 *t *p1 * (1-t) +
			6 * t *  p2 * (1-t) - 3 * t * t * p2 +
			3 * t * t * p3;
	},


	tangentSpline: function ( t, p0, p1, p2, p3 ) {

		// To check if my formulas are correct

		var h00 = 6 * t * t - 6 * t; 	// derived from 2t^3 − 3t^2 + 1
		var h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t
		var h01 = -6 * t * t + 6 * t; 	// − 2t3 + 3t2
		var h11 = 3 * t * t - 2 * t;	// t3 − t2

		return h00 + h10 + h01 + h11;

	},

	// Catmull-Rom

	interpolate: function( p0, p1, p2, p3, t ) {

		var v0 = ( p2 - p0 ) * 0.5;
		var v1 = ( p3 - p1 ) * 0.5;
		var t2 = t * t;
		var t3 = t * t2;
		return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;

	}

};


// TODO: Transformation for Curves?

/**************************************************************
 *	3D Curves
 **************************************************************/

// A Factory method for creating new curve subclasses

THREE.Curve.create = function ( constructor, getPointFunc ) {

	constructor.prototype = Object.create( THREE.Curve.prototype );
	constructor.prototype.getPoint = getPointFunc;

	return constructor;

};


/**************************************************************
 *	Line3D
 **************************************************************/

THREE.LineCurve3 = THREE.Curve.create(

	function ( v1, v2 ) {

		this.v1 = v1;
		this.v2 = v2;

	},

	function ( t ) {

		var r = new THREE.Vector3();


		r.subVectors( this.v2, this.v1 ); // diff
		r.multiplyScalar( t );
		r.add( this.v1 );

		return r;

	}

);


/**************************************************************
 *	Quadratic Bezier 3D curve
 **************************************************************/

THREE.QuadraticBezierCurve3 = THREE.Curve.create(

	function ( v0, v1, v2 ) {

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;

	},

	function ( t ) {

		var tx, ty, tz;

		tx = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );
		ty = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );
		tz = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );

		return new THREE.Vector3( tx, ty, tz );

	}

);



/**************************************************************
 *	Cubic Bezier 3D curve
 **************************************************************/

THREE.CubicBezierCurve3 = THREE.Curve.create(

	function ( v0, v1, v2, v3 ) {

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;
		this.v3 = v3;

	},

	function ( t ) {

		var tx, ty, tz;

		tx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );
		ty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );
		tz = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );

		return new THREE.Vector3( tx, ty, tz );

	}

);



/**************************************************************
 *	Spline 3D curve
 **************************************************************/


THREE.SplineCurve3 = THREE.Curve.create(

	function ( points /* array of Vector3 */) {

		this.points = (points == undefined) ? [] : points;

	},

	function ( t ) {

		var v = new THREE.Vector3();
		var c = [];
		var points = this.points, point, intPoint, weight;
		point = ( points.length - 1 ) * t;

		intPoint = Math.floor( point );
		weight = point - intPoint;

		c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;
		c[ 1 ] = intPoint;
		c[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;
		c[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;

		var pt0 = points[ c[0] ],
			pt1 = points[ c[1] ],
			pt2 = points[ c[2] ],
			pt3 = points[ c[3] ];

		v.x = THREE.Curve.Utils.interpolate(pt0.x, pt1.x, pt2.x, pt3.x, weight);
		v.y = THREE.Curve.Utils.interpolate(pt0.y, pt1.y, pt2.y, pt3.y, weight);
		v.z = THREE.Curve.Utils.interpolate(pt0.z, pt1.z, pt2.z, pt3.z, weight);

		return v;

	}

);


// THREE.SplineCurve3.prototype.getTangent = function(t) {
// 		var v = new THREE.Vector3();
// 		var c = [];
// 		var points = this.points, point, intPoint, weight;
// 		point = ( points.length - 1 ) * t;

// 		intPoint = Math.floor( point );
// 		weight = point - intPoint;

// 		c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;
// 		c[ 1 ] = intPoint;
// 		c[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;
// 		c[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;

// 		var pt0 = points[ c[0] ],
// 			pt1 = points[ c[1] ],
// 			pt2 = points[ c[2] ],
// 			pt3 = points[ c[3] ];

// 	// t = weight;
// 	v.x = THREE.Curve.Utils.tangentSpline( t, pt0.x, pt1.x, pt2.x, pt3.x );
// 	v.y = THREE.Curve.Utils.tangentSpline( t, pt0.y, pt1.y, pt2.y, pt3.y );
// 	v.z = THREE.Curve.Utils.tangentSpline( t, pt0.z, pt1.z, pt2.z, pt3.z );

// 	return v;

// }

/**************************************************************
 *	Closed Spline 3D curve
 **************************************************************/


THREE.ClosedSplineCurve3 = THREE.Curve.create(

	function ( points /* array of Vector3 */) {

		this.points = (points == undefined) ? [] : points;

	},

    function ( t ) {

        var v = new THREE.Vector3();
        var c = [];
        var points = this.points, point, intPoint, weight;
        point = ( points.length - 0 ) * t;
            // This needs to be from 0-length +1

        intPoint = Math.floor( point );
        weight = point - intPoint;

        intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;
        c[ 0 ] = ( intPoint - 1 ) % points.length;
        c[ 1 ] = ( intPoint ) % points.length;
        c[ 2 ] = ( intPoint + 1 ) % points.length;
        c[ 3 ] = ( intPoint + 2 ) % points.length;

        v.x = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].x, points[ c[ 1 ] ].x, points[ c[ 2 ] ].x, points[ c[ 3 ] ].x, weight );
        v.y = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].y, points[ c[ 1 ] ].y, points[ c[ 2 ] ].y, points[ c[ 3 ] ].y, weight );
        v.z = THREE.Curve.Utils.interpolate( points[ c[ 0 ] ].z, points[ c[ 1 ] ].z, points[ c[ 2 ] ].z, points[ c[ 3 ] ].z, weight );

        return v;

    }

);
/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 **/

/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/

THREE.CurvePath = function () {

	this.curves = [];
	this.bends = [];
	
	this.autoClose = false; // Automatically closes the path
};

THREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );

THREE.CurvePath.prototype.add = function ( curve ) {

	this.curves.push( curve );

};

THREE.CurvePath.prototype.checkConnection = function() {
	// TODO
	// If the ending of curve is not connected to the starting
	// or the next curve, then, this is not a real path
};

THREE.CurvePath.prototype.closePath = function() {
	// TODO Test
	// and verify for vector3 (needs to implement equals)
	// Add a line curve if start and end of lines are not connected
	var startPoint = this.curves[0].getPoint(0);
	var endPoint = this.curves[this.curves.length-1].getPoint(1);
	
	if (!startPoint.equals(endPoint)) {
		this.curves.push( new THREE.LineCurve(endPoint, startPoint) );
	}
	
};

// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:

// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')

THREE.CurvePath.prototype.getPoint = function( t ) {

	var d = t * this.getLength();
	var curveLengths = this.getCurveLengths();
	var i = 0, diff, curve;

	// To think about boundaries points.

	while ( i < curveLengths.length ) {

		if ( curveLengths[ i ] >= d ) {

			diff = curveLengths[ i ] - d;
			curve = this.curves[ i ];

			var u = 1 - diff / curve.getLength();

			return curve.getPointAt( u );

			break;
		}

		i ++;

	}

	return null;

	// loop where sum != 0, sum > d , sum+1 <d

};

/*
THREE.CurvePath.prototype.getTangent = function( t ) {
};*/


// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength

THREE.CurvePath.prototype.getLength = function() {

	var lens = this.getCurveLengths();
	return lens[ lens.length - 1 ];

};

// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.

THREE.CurvePath.prototype.getCurveLengths = function() {

	// We use cache values if curves and cache array are same length

	if ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {

		return this.cacheLengths;

	};

	// Get length of subsurve
	// Push sums into cached array

	var lengths = [], sums = 0;
	var i, il = this.curves.length;

	for ( i = 0; i < il; i ++ ) {

		sums += this.curves[ i ].getLength();
		lengths.push( sums );

	}

	this.cacheLengths = lengths;

	return lengths;

};



// Returns min and max coordinates, as well as centroid

THREE.CurvePath.prototype.getBoundingBox = function () {

	var points = this.getPoints();

	var maxX, maxY, maxZ;
	var minX, minY, minZ;

	maxX = maxY = Number.NEGATIVE_INFINITY;
	minX = minY = Number.POSITIVE_INFINITY;

	var p, i, il, sum;

	var v3 = points[0] instanceof THREE.Vector3;

	sum = v3 ? new THREE.Vector3() : new THREE.Vector2();

	for ( i = 0, il = points.length; i < il; i ++ ) {

		p = points[ i ];

		if ( p.x > maxX ) maxX = p.x;
		else if ( p.x < minX ) minX = p.x;

		if ( p.y > maxY ) maxY = p.y;
		else if ( p.y < minY ) minY = p.y;

		if ( v3 ) {

			if ( p.z > maxZ ) maxZ = p.z;
			else if ( p.z < minZ ) minZ = p.z;

		}

		sum.add( p );

	}

	var ret = {

		minX: minX,
		minY: minY,
		maxX: maxX,
		maxY: maxY,
		centroid: sum.divideScalar( il )

	};

	if ( v3 ) {

		ret.maxZ = maxZ;
		ret.minZ = minZ;

	}

	return ret;

};

/**************************************************************
 *	Create Geometries Helpers
 **************************************************************/

/// Generate geometry from path points (for Line or ParticleSystem objects)

THREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {

	var pts = this.getPoints( divisions, true );
	return this.createGeometry( pts );

};

// Generate geometry from equidistance sampling along the path

THREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {

	var pts = this.getSpacedPoints( divisions, true );
	return this.createGeometry( pts );

};

THREE.CurvePath.prototype.createGeometry = function( points ) {

	var geometry = new THREE.Geometry();

	for ( var i = 0; i < points.length; i ++ ) {

		geometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );

	}

	return geometry;

};


/**************************************************************
 *	Bend / Wrap Helper Methods
 **************************************************************/

// Wrap path / Bend modifiers?

THREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {

	this.bends.push( bendpath );

};

THREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {

	var oldPts = this.getPoints( segments ); // getPoints getSpacedPoints
	var i, il;

	if ( !bends ) {

		bends = this.bends;

	}

	for ( i = 0, il = bends.length; i < il; i ++ ) {

		oldPts = this.getWrapPoints( oldPts, bends[ i ] );

	}

	return oldPts;

};

THREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {

	var oldPts = this.getSpacedPoints( segments );

	var i, il;

	if ( !bends ) {

		bends = this.bends;

	}

	for ( i = 0, il = bends.length; i < il; i ++ ) {

		oldPts = this.getWrapPoints( oldPts, bends[ i ] );

	}

	return oldPts;

};

// This returns getPoints() bend/wrapped around the contour of a path.
// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html

THREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {

	var bounds = this.getBoundingBox();

	var i, il, p, oldX, oldY, xNorm;

	for ( i = 0, il = oldPts.length; i < il; i ++ ) {

		p = oldPts[ i ];

		oldX = p.x;
		oldY = p.y;

		xNorm = oldX / bounds.maxX;

		// If using actual distance, for length > path, requires line extrusions
		//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance

		xNorm = path.getUtoTmapping( xNorm, oldX );

		// check for out of bounds?

		var pathPt = path.getPoint( xNorm );
		var normal = path.getNormalVector( xNorm ).multiplyScalar( oldY );

		p.x = pathPt.x + normal.x;
		p.y = pathPt.y + normal.y;

	}

	return oldPts;

};

/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Gyroscope = function () {

	THREE.Object3D.call( this );

};

THREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );

THREE.Gyroscope.prototype.updateMatrixWorld = function ( force ) {

	this.matrixAutoUpdate && this.updateMatrix();

	// update matrixWorld

	if ( this.matrixWorldNeedsUpdate || force ) {

		if ( this.parent ) {

			this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

			this.matrixWorld.decompose( this.translationWorld, this.rotationWorld, this.scaleWorld );
			this.matrix.decompose( this.translationObject, this.rotationObject, this.scaleObject );

			this.matrixWorld.compose( this.translationWorld, this.rotationObject, this.scaleWorld );


		} else {

			this.matrixWorld.copy( this.matrix );

		}


		this.matrixWorldNeedsUpdate = false;

		force = true;

	}

	// update children

	for ( var i = 0, l = this.children.length; i < l; i ++ ) {

		this.children[ i ].updateMatrixWorld( force );

	}

};

THREE.Gyroscope.prototype.translationWorld = new THREE.Vector3();
THREE.Gyroscope.prototype.translationObject = new THREE.Vector3();
THREE.Gyroscope.prototype.rotationWorld = new THREE.Quaternion();
THREE.Gyroscope.prototype.rotationObject = new THREE.Quaternion();
THREE.Gyroscope.prototype.scaleWorld = new THREE.Vector3();
THREE.Gyroscope.prototype.scaleObject = new THREE.Vector3();

/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Creates free form 2d path using series of points, lines or curves.
 *
 **/

THREE.Path = function ( points ) {

	THREE.CurvePath.call(this);

	this.actions = [];

	if ( points ) {

		this.fromPoints( points );

	}

};

THREE.Path.prototype = Object.create( THREE.CurvePath.prototype );

THREE.PathActions = {

	MOVE_TO: 'moveTo',
	LINE_TO: 'lineTo',
	QUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve
	BEZIER_CURVE_TO: 'bezierCurveTo', 		// Bezier cubic curve
	CSPLINE_THRU: 'splineThru',				// Catmull-rom spline
	ARC: 'arc',								// Circle
	ELLIPSE: 'ellipse'
};

// TODO Clean up PATH API

// Create path using straight lines to connect all points
// - vectors: array of Vector2

THREE.Path.prototype.fromPoints = function ( vectors ) {

	this.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );

	for ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {

		this.lineTo( vectors[ v ].x, vectors[ v ].y );

	};

};

// startPath() endPath()?

THREE.Path.prototype.moveTo = function ( x, y ) {

	var args = Array.prototype.slice.call( arguments );
	this.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );

};

THREE.Path.prototype.lineTo = function ( x, y ) {

	var args = Array.prototype.slice.call( arguments );

	var lastargs = this.actions[ this.actions.length - 1 ].args;

	var x0 = lastargs[ lastargs.length - 2 ];
	var y0 = lastargs[ lastargs.length - 1 ];

	var curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );
	this.curves.push( curve );

	this.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );

};

THREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {

	var args = Array.prototype.slice.call( arguments );

	var lastargs = this.actions[ this.actions.length - 1 ].args;

	var x0 = lastargs[ lastargs.length - 2 ];
	var y0 = lastargs[ lastargs.length - 1 ];

	var curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),
												new THREE.Vector2( aCPx, aCPy ),
												new THREE.Vector2( aX, aY ) );
	this.curves.push( curve );

	this.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );

};

THREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,
                                               aCP2x, aCP2y,
                                               aX, aY ) {

	var args = Array.prototype.slice.call( arguments );

	var lastargs = this.actions[ this.actions.length - 1 ].args;

	var x0 = lastargs[ lastargs.length - 2 ];
	var y0 = lastargs[ lastargs.length - 1 ];

	var curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),
											new THREE.Vector2( aCP1x, aCP1y ),
											new THREE.Vector2( aCP2x, aCP2y ),
											new THREE.Vector2( aX, aY ) );
	this.curves.push( curve );

	this.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );

};

THREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {

	var args = Array.prototype.slice.call( arguments );
	var lastargs = this.actions[ this.actions.length - 1 ].args;

	var x0 = lastargs[ lastargs.length - 2 ];
	var y0 = lastargs[ lastargs.length - 1 ];
//---
	var npts = [ new THREE.Vector2( x0, y0 ) ];
	Array.prototype.push.apply( npts, pts );

	var curve = new THREE.SplineCurve( npts );
	this.curves.push( curve );

	this.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );

};

// FUTURE: Change the API or follow canvas API?

THREE.Path.prototype.arc = function ( aX, aY, aRadius,
									  aStartAngle, aEndAngle, aClockwise ) {

	var lastargs = this.actions[ this.actions.length - 1].args;
	var x0 = lastargs[ lastargs.length - 2 ];
	var y0 = lastargs[ lastargs.length - 1 ];

	this.absarc(aX + x0, aY + y0, aRadius,
		aStartAngle, aEndAngle, aClockwise );
	
 };

 THREE.Path.prototype.absarc = function ( aX, aY, aRadius,
									  aStartAngle, aEndAngle, aClockwise ) {
	this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);
 };
 
THREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,
									  aStartAngle, aEndAngle, aClockwise ) {

	var lastargs = this.actions[ this.actions.length - 1].args;
	var x0 = lastargs[ lastargs.length - 2 ];
	var y0 = lastargs[ lastargs.length - 1 ];

	this.absellipse(aX + x0, aY + y0, xRadius, yRadius,
		aStartAngle, aEndAngle, aClockwise );

 };
 

THREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,
									  aStartAngle, aEndAngle, aClockwise ) {

	var args = Array.prototype.slice.call( arguments );
	var curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,
									aStartAngle, aEndAngle, aClockwise );
	this.curves.push( curve );

	var lastPoint = curve.getPoint(aClockwise ? 1 : 0);
	args.push(lastPoint.x);
	args.push(lastPoint.y);

	this.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );

 };

THREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {

	if ( ! divisions ) divisions = 40;

	var points = [];

	for ( var i = 0; i < divisions; i ++ ) {

		points.push( this.getPoint( i / divisions ) );

		//if( !this.getPoint( i / divisions ) ) throw "DIE";

	}

	// if ( closedPath ) {
	//
	// 	points.push( points[ 0 ] );
	//
	// }

	return points;

};

/* Return an array of vectors based on contour of the path */

THREE.Path.prototype.getPoints = function( divisions, closedPath ) {

	if (this.useSpacedPoints) {
		console.log('tata');
		return this.getSpacedPoints( divisions, closedPath );
	}

	divisions = divisions || 12;

	var points = [];

	var i, il, item, action, args;
	var cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,
		laste, j,
		t, tx, ty;

	for ( i = 0, il = this.actions.length; i < il; i ++ ) {

		item = this.actions[ i ];

		action = item.action;
		args = item.args;

		switch( action ) {

		case THREE.PathActions.MOVE_TO:

			points.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );

			break;

		case THREE.PathActions.LINE_TO:

			points.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );

			break;

		case THREE.PathActions.QUADRATIC_CURVE_TO:

			cpx  = args[ 2 ];
			cpy  = args[ 3 ];

			cpx1 = args[ 0 ];
			cpy1 = args[ 1 ];

			if ( points.length > 0 ) {

				laste = points[ points.length - 1 ];

				cpx0 = laste.x;
				cpy0 = laste.y;

			} else {

				laste = this.actions[ i - 1 ].args;

				cpx0 = laste[ laste.length - 2 ];
				cpy0 = laste[ laste.length - 1 ];

			}

			for ( j = 1; j <= divisions; j ++ ) {

				t = j / divisions;

				tx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );
				ty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );

				points.push( new THREE.Vector2( tx, ty ) );

		  	}

			break;

		case THREE.PathActions.BEZIER_CURVE_TO:

			cpx  = args[ 4 ];
			cpy  = args[ 5 ];

			cpx1 = args[ 0 ];
			cpy1 = args[ 1 ];

			cpx2 = args[ 2 ];
			cpy2 = args[ 3 ];

			if ( points.length > 0 ) {

				laste = points[ points.length - 1 ];

				cpx0 = laste.x;
				cpy0 = laste.y;

			} else {

				laste = this.actions[ i - 1 ].args;

				cpx0 = laste[ laste.length - 2 ];
				cpy0 = laste[ laste.length - 1 ];

			}


			for ( j = 1; j <= divisions; j ++ ) {

				t = j / divisions;

				tx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );
				ty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );

				points.push( new THREE.Vector2( tx, ty ) );

			}

			break;

		case THREE.PathActions.CSPLINE_THRU:

			laste = this.actions[ i - 1 ].args;

			var last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );
			var spts = [ last ];

			var n = divisions * args[ 0 ].length;

			spts = spts.concat( args[ 0 ] );

			var spline = new THREE.SplineCurve( spts );

			for ( j = 1; j <= n; j ++ ) {

				points.push( spline.getPointAt( j / n ) ) ;

			}

			break;

		case THREE.PathActions.ARC:

			var aX = args[ 0 ], aY = args[ 1 ],
				aRadius = args[ 2 ],
				aStartAngle = args[ 3 ], aEndAngle = args[ 4 ],
				aClockwise = !!args[ 5 ];

			var deltaAngle = aEndAngle - aStartAngle;
			var angle;
			var tdivisions = divisions * 2;

			for ( j = 1; j <= tdivisions; j ++ ) {

				t = j / tdivisions;

				if ( ! aClockwise ) {

					t = 1 - t;

				}

				angle = aStartAngle + t * deltaAngle;

				tx = aX + aRadius * Math.cos( angle );
				ty = aY + aRadius * Math.sin( angle );

				//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);

				points.push( new THREE.Vector2( tx, ty ) );

			}

			//console.log(points);

		  break;
		  
		case THREE.PathActions.ELLIPSE:

			var aX = args[ 0 ], aY = args[ 1 ],
				xRadius = args[ 2 ],
				yRadius = args[ 3 ],
				aStartAngle = args[ 4 ], aEndAngle = args[ 5 ],
				aClockwise = !!args[ 6 ];


			var deltaAngle = aEndAngle - aStartAngle;
			var angle;
			var tdivisions = divisions * 2;

			for ( j = 1; j <= tdivisions; j ++ ) {

				t = j / tdivisions;

				if ( ! aClockwise ) {

					t = 1 - t;

				}

				angle = aStartAngle + t * deltaAngle;

				tx = aX + xRadius * Math.cos( angle );
				ty = aY + yRadius * Math.sin( angle );

				//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);

				points.push( new THREE.Vector2( tx, ty ) );

			}

			//console.log(points);

		  break;

		} // end switch

	}



	// Normalize to remove the closing point by default.
	var lastPoint = points[ points.length - 1];
	var EPSILON = 0.0000000001;
	if ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&
             Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)
		points.splice( points.length - 1, 1);
	if ( closedPath ) {

		points.push( points[ 0 ] );

	}

	return points;

};

// Breaks path into shapes

THREE.Path.prototype.toShapes = function() {

	var i, il, item, action, args;

	var subPaths = [], lastPath = new THREE.Path();

	for ( i = 0, il = this.actions.length; i < il; i ++ ) {

		item = this.actions[ i ];

		args = item.args;
		action = item.action;

		if ( action == THREE.PathActions.MOVE_TO ) {

			if ( lastPath.actions.length != 0 ) {

				subPaths.push( lastPath );
				lastPath = new THREE.Path();

			}

		}

		lastPath[ action ].apply( lastPath, args );

	}

	if ( lastPath.actions.length != 0 ) {

		subPaths.push( lastPath );

	}

	// console.log(subPaths);

	if ( subPaths.length == 0 ) return [];

	var tmpPath, tmpShape, shapes = [];

	var holesFirst = !THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );
	// console.log("Holes first", holesFirst);

	if ( subPaths.length == 1) {
		tmpPath = subPaths[0];
		tmpShape = new THREE.Shape();
		tmpShape.actions = tmpPath.actions;
		tmpShape.curves = tmpPath.curves;
		shapes.push( tmpShape );
		return shapes;
	};

	if ( holesFirst ) {

		tmpShape = new THREE.Shape();

		for ( i = 0, il = subPaths.length; i < il; i ++ ) {

			tmpPath = subPaths[ i ];

			if ( THREE.Shape.Utils.isClockWise( tmpPath.getPoints() ) ) {

				tmpShape.actions = tmpPath.actions;
				tmpShape.curves = tmpPath.curves;

				shapes.push( tmpShape );
				tmpShape = new THREE.Shape();

				//console.log('cw', i);

			} else {

				tmpShape.holes.push( tmpPath );

				//console.log('ccw', i);

			}

		}

	} else {

		// Shapes first

		for ( i = 0, il = subPaths.length; i < il; i ++ ) {

			tmpPath = subPaths[ i ];

			if ( THREE.Shape.Utils.isClockWise( tmpPath.getPoints() ) ) {


				if ( tmpShape ) shapes.push( tmpShape );

				tmpShape = new THREE.Shape();
				tmpShape.actions = tmpPath.actions;
				tmpShape.curves = tmpPath.curves;

			} else {

				tmpShape.holes.push( tmpPath );

			}

		}

		shapes.push( tmpShape );

	}

	//console.log("shape", shapes);

	return shapes;

};
/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Defines a 2d shape plane using paths.
 **/

// STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.

THREE.Shape = function () {

	THREE.Path.apply( this, arguments );
	this.holes = [];

};

THREE.Shape.prototype = Object.create( THREE.Path.prototype );

// Convenience method to return ExtrudeGeometry

THREE.Shape.prototype.extrude = function ( options ) {

	var extruded = new THREE.ExtrudeGeometry( this, options );
	return extruded;

};

// Convenience method to return ShapeGeometry

THREE.Shape.prototype.makeGeometry = function ( options ) {

	var geometry = new THREE.ShapeGeometry( this, options );
	return geometry;

};

// Get points of holes

THREE.Shape.prototype.getPointsHoles = function ( divisions ) {

	var i, il = this.holes.length, holesPts = [];

	for ( i = 0; i < il; i ++ ) {

		holesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );

	}

	return holesPts;

};

// Get points of holes (spaced by regular distance)

THREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {

	var i, il = this.holes.length, holesPts = [];

	for ( i = 0; i < il; i ++ ) {

		holesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );

	}

	return holesPts;

};


// Get points of shape and holes (keypoints based on segments parameter)

THREE.Shape.prototype.extractAllPoints = function ( divisions ) {

	return {

		shape: this.getTransformedPoints( divisions ),
		holes: this.getPointsHoles( divisions )

	};

};

THREE.Shape.prototype.extractPoints = function ( divisions ) {

	if (this.useSpacedPoints) {
		return this.extractAllSpacedPoints(divisions);
	}

	return this.extractAllPoints(divisions);

};

//
// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {
//
// 	return {
//
// 		shape: this.transform( bend, divisions ),
// 		holes: this.getPointsHoles( divisions, bend )
//
// 	};
//
// };

// Get points of shape and holes (spaced by regular distance)

THREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {

	return {

		shape: this.getTransformedSpacedPoints( divisions ),
		holes: this.getSpacedPointsHoles( divisions )

	};

};

/**************************************************************
 *	Utils
 **************************************************************/

THREE.Shape.Utils = {

	/*
		contour - array of vector2 for contour
		holes   - array of array of vector2
	*/

	removeHoles: function ( contour, holes ) {

		var shape = contour.concat(); // work on this shape
		var allpoints = shape.concat();

		/* For each isolated shape, find the closest points and break to the hole to allow triangulation */


		var prevShapeVert, nextShapeVert,
			prevHoleVert, nextHoleVert,
			holeIndex, shapeIndex,
			shapeId, shapeGroup,
			h, h2,
			hole, shortest, d,
			p, pts1, pts2,
			tmpShape1, tmpShape2,
			tmpHole1, tmpHole2,
			verts = [];

		for ( h = 0; h < holes.length; h ++ ) {

			hole = holes[ h ];

			/*
			shapeholes[ h ].concat(); // preserves original
			holes.push( hole );
			*/

			Array.prototype.push.apply( allpoints, hole );

			shortest = Number.POSITIVE_INFINITY;


			// Find the shortest pair of pts between shape and hole

			// Note: Actually, I'm not sure now if we could optimize this to be faster than O(m*n)
			// Using distanceToSquared() intead of distanceTo() should speed a little
			// since running square roots operations are reduced.

			for ( h2 = 0; h2 < hole.length; h2 ++ ) {

				pts1 = hole[ h2 ];
				var dist = [];

				for ( p = 0; p < shape.length; p++ ) {

					pts2 = shape[ p ];
					d = pts1.distanceToSquared( pts2 );
					dist.push( d );

					if ( d < shortest ) {

						shortest = d;
						holeIndex = h2;
						shapeIndex = p;

					}

				}

			}

			//console.log("shortest", shortest, dist);

			prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;
			prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;

			var areaapts = [

				hole[ holeIndex ],
				shape[ shapeIndex ],
				shape[ prevShapeVert ]

			];

			var areaa = THREE.FontUtils.Triangulate.area( areaapts );

			var areabpts = [

				hole[ holeIndex ],
				hole[ prevHoleVert ],
				shape[ shapeIndex ]

			];

			var areab = THREE.FontUtils.Triangulate.area( areabpts );

			var shapeOffset = 1;
			var holeOffset = -1;

			var oldShapeIndex = shapeIndex, oldHoleIndex = holeIndex;
			shapeIndex += shapeOffset;
			holeIndex += holeOffset;

			if ( shapeIndex < 0 ) { shapeIndex += shape.length;  }
			shapeIndex %= shape.length;

			if ( holeIndex < 0 ) { holeIndex += hole.length;  }
			holeIndex %= hole.length;

			prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;
			prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;

			areaapts = [

				hole[ holeIndex ],
				shape[ shapeIndex ],
				shape[ prevShapeVert ]

			];

			var areaa2 = THREE.FontUtils.Triangulate.area( areaapts );

			areabpts = [

				hole[ holeIndex ],
				hole[ prevHoleVert ],
				shape[ shapeIndex ]

			];

			var areab2 = THREE.FontUtils.Triangulate.area( areabpts );
			//console.log(areaa,areab ,areaa2,areab2, ( areaa + areab ),  ( areaa2 + areab2 ));

			if ( ( areaa + areab ) > ( areaa2 + areab2 ) ) {

				// In case areas are not correct.
				//console.log("USE THIS");

				shapeIndex = oldShapeIndex;
				holeIndex = oldHoleIndex ;

				if ( shapeIndex < 0 ) { shapeIndex += shape.length;  }
				shapeIndex %= shape.length;

				if ( holeIndex < 0 ) { holeIndex += hole.length;  }
				holeIndex %= hole.length;

				prevShapeVert = ( shapeIndex - 1 ) >= 0 ? shapeIndex - 1 : shape.length - 1;
				prevHoleVert = ( holeIndex - 1 ) >= 0 ? holeIndex - 1 : hole.length - 1;

			} else {

				//console.log("USE THAT ")

			}

			tmpShape1 = shape.slice( 0, shapeIndex );
			tmpShape2 = shape.slice( shapeIndex );
			tmpHole1 = hole.slice( holeIndex );
			tmpHole2 = hole.slice( 0, holeIndex );

			// Should check orders here again?

			var trianglea = [

				hole[ holeIndex ],
				shape[ shapeIndex ],
				shape[ prevShapeVert ]

			];

			var triangleb = [

				hole[ holeIndex ] ,
				hole[ prevHoleVert ],
				shape[ shapeIndex ]

			];

			verts.push( trianglea );
			verts.push( triangleb );

			shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );

		}

		return {

			shape:shape, 		/* shape with no holes */
			isolatedPts: verts, /* isolated faces */
			allpoints: allpoints

		}


	},

	triangulateShape: function ( contour, holes ) {

		var shapeWithoutHoles = THREE.Shape.Utils.removeHoles( contour, holes );

		var shape = shapeWithoutHoles.shape,
			allpoints = shapeWithoutHoles.allpoints,
			isolatedPts = shapeWithoutHoles.isolatedPts;

		var triangles = THREE.FontUtils.Triangulate( shape, false ); // True returns indices for points of spooled shape

		// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.

		//console.log( "triangles",triangles, triangles.length );
		//console.log( "allpoints",allpoints, allpoints.length );

		var i, il, f, face,
			key, index,
			allPointsMap = {},
			isolatedPointsMap = {};

		// prepare all points map

		for ( i = 0, il = allpoints.length; i < il; i ++ ) {

			key = allpoints[ i ].x + ":" + allpoints[ i ].y;

			if ( allPointsMap[ key ] !== undefined ) {

				console.log( "Duplicate point", key );

			}

			allPointsMap[ key ] = i;

		}

		// check all face vertices against all points map

		for ( i = 0, il = triangles.length; i < il; i ++ ) {

			face = triangles[ i ];

			for ( f = 0; f < 3; f ++ ) {

				key = face[ f ].x + ":" + face[ f ].y;

				index = allPointsMap[ key ];

				if ( index !== undefined ) {

					face[ f ] = index;

				}

			}

		}

		// check isolated points vertices against all points map

		for ( i = 0, il = isolatedPts.length; i < il; i ++ ) {

			face = isolatedPts[ i ];

			for ( f = 0; f < 3; f ++ ) {

				key = face[ f ].x + ":" + face[ f ].y;

				index = allPointsMap[ key ];

				if ( index !== undefined ) {

					face[ f ] = index;

				}

			}

		}

		return triangles.concat( isolatedPts );

	}, // end triangulate shapes

	/*
	triangulate2 : function( pts, holes ) {

		// For use with Poly2Tri.js

		var allpts = pts.concat();
		var shape = [];
		for (var p in pts) {
			shape.push(new js.poly2tri.Point(pts[p].x, pts[p].y));
		}

		var swctx = new js.poly2tri.SweepContext(shape);

		for (var h in holes) {
			var aHole = holes[h];
			var newHole = []
			for (i in aHole) {
				newHole.push(new js.poly2tri.Point(aHole[i].x, aHole[i].y));
				allpts.push(aHole[i]);
			}
			swctx.AddHole(newHole);
		}

		var find;
		var findIndexForPt = function (pt) {
			find = new THREE.Vector2(pt.x, pt.y);
			var p;
			for (p=0, pl = allpts.length; p<pl; p++) {
				if (allpts[p].equals(find)) return p;
			}
			return -1;
		};

		// triangulate
		js.poly2tri.sweep.Triangulate(swctx);

		var triangles =  swctx.GetTriangles();
		var tr ;
		var facesPts = [];
		for (var t in triangles) {
			tr =  triangles[t];
			facesPts.push([
				findIndexForPt(tr.GetPoint(0)),
				findIndexForPt(tr.GetPoint(1)),
				findIndexForPt(tr.GetPoint(2))
					]);
		}


	//	console.log(facesPts);
	//	console.log("triangles", triangles.length, triangles);

		// Returns array of faces with 3 element each
	return facesPts;
	},
*/

	isClockWise: function ( pts ) {

		return THREE.FontUtils.Triangulate.area( pts ) < 0;

	},

	// Bezier Curves formulas obtained from
	// http://en.wikipedia.org/wiki/B%C3%A9zier_curve

	// Quad Bezier Functions

	b2p0: function ( t, p ) {

		var k = 1 - t;
		return k * k * p;

	},

	b2p1: function ( t, p ) {

		return 2 * ( 1 - t ) * t * p;

	},

	b2p2: function ( t, p ) {

		return t * t * p;

	},

	b2: function ( t, p0, p1, p2 ) {

		return this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );

	},

	// Cubic Bezier Functions

	b3p0: function ( t, p ) {

		var k = 1 - t;
		return k * k * k * p;

	},

	b3p1: function ( t, p ) {

		var k = 1 - t;
		return 3 * k * k * t * p;

	},

	b3p2: function ( t, p ) {

		var k = 1 - t;
		return 3 * k * t * t * p;

	},

	b3p3: function ( t, p ) {

		return t * t * t * p;

	},

	b3: function ( t, p0, p1, p2, p3 ) {

		return this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );

	}

};

/**
 * @author mikael emtinger / http://gomo.se/
 */

THREE.AnimationHandler = (function() {

	var playing = [];
	var library = {};
	var that    = {};


	//--- update ---

	that.update = function( deltaTimeMS ) {

		for( var i = 0; i < playing.length; i ++ )
			playing[ i ].update( deltaTimeMS );

	};


	//--- add ---

	that.addToUpdate = function( animation ) {

		if ( playing.indexOf( animation ) === -1 )
			playing.push( animation );

	};


	//--- remove ---

	that.removeFromUpdate = function( animation ) {

		var index = playing.indexOf( animation );

		if( index !== -1 )
			playing.splice( index, 1 );

	};


	//--- add ---

	that.add = function( data ) {

		if ( library[ data.name ] !== undefined )
			console.log( "THREE.AnimationHandler.add: Warning! " + data.name + " already exists in library. Overwriting." );

		library[ data.name ] = data;
		initData( data );

	};


	//--- get ---

	that.get = function( name ) {

		if ( typeof name === "string" ) {

			if ( library[ name ] ) {

				return library[ name ];

			} else {

				console.log( "THREE.AnimationHandler.get: Couldn't find animation " + name );
				return null;

			}

		} else {

			// todo: add simple tween library

		}

	};

	//--- parse ---

	that.parse = function( root ) {

		// setup hierarchy

		var hierarchy = [];

		if ( root instanceof THREE.SkinnedMesh ) {

			for( var b = 0; b < root.bones.length; b++ ) {

				hierarchy.push( root.bones[ b ] );

			}

		} else {

			parseRecurseHierarchy( root, hierarchy );

		}

		return hierarchy;

	};

	var parseRecurseHierarchy = function( root, hierarchy ) {

		hierarchy.push( root );

		for( var c = 0; c < root.children.length; c++ )
			parseRecurseHierarchy( root.children[ c ], hierarchy );

	}


	//--- init data ---

	var initData = function( data ) {

		if( data.initialized === true )
			return;


		// loop through all keys

		for( var h = 0; h < data.hierarchy.length; h ++ ) {

			for( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {

				// remove minus times

				if( data.hierarchy[ h ].keys[ k ].time < 0 )
					data.hierarchy[ h ].keys[ k ].time = 0;


				// create quaternions

				if( data.hierarchy[ h ].keys[ k ].rot !== undefined &&
				 !( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {

					var quat = data.hierarchy[ h ].keys[ k ].rot;
					data.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion( quat[0], quat[1], quat[2], quat[3] );

				}

			}


			// prepare morph target keys

			if( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {

				// get all used

				var usedMorphTargets = {};

				for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {

					for ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {

						var morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];
						usedMorphTargets[ morphTargetName ] = -1;

					}

				}

				data.hierarchy[ h ].usedMorphTargets = usedMorphTargets;


				// set all used on all frames

				for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {

					var influences = {};

					for ( var morphTargetName in usedMorphTargets ) {

						for ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {

							if ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {

								influences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];
								break;

							}

						}

						if ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {

							influences[ morphTargetName ] = 0;

						}

					}

					data.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;

				}

			}


			// remove all keys that are on the same time

			for ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {

				if ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {

					data.hierarchy[ h ].keys.splice( k, 1 );
					k --;

				}

			}


			// set index

			for ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {

				data.hierarchy[ h ].keys[ k ].index = k;

			}

		}


		// JIT

		var lengthInFrames = parseInt( data.length * data.fps, 10 );

		data.JIT = {};
		data.JIT.hierarchy = [];

		for( var h = 0; h < data.hierarchy.length; h ++ )
			data.JIT.hierarchy.push( new Array( lengthInFrames ) );


		// done

		data.initialized = true;

	};


	// interpolation types

	that.LINEAR = 0;
	that.CATMULLROM = 1;
	that.CATMULLROM_FORWARD = 2;

	return that;

}());
/**
 * @author mikael emtinger / http://gomo.se/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.Animation = function ( root, name, interpolationType ) {

	this.root = root;
	this.data = THREE.AnimationHandler.get( name );
	this.hierarchy = THREE.AnimationHandler.parse( root );

	this.currentTime = 0;
	this.timeScale = 1;

	this.isPlaying = false;
	this.isPaused = true;
	this.loop = true;

	this.interpolationType = interpolationType !== undefined ? interpolationType : THREE.AnimationHandler.LINEAR;

	this.points = [];
	this.target = new THREE.Vector3();

};

THREE.Animation.prototype.play = function ( loop, startTimeMS ) {

	if ( this.isPlaying === false ) {

		this.isPlaying = true;
		this.loop = loop !== undefined ? loop : true;
		this.currentTime = startTimeMS !== undefined ? startTimeMS : 0;

		// reset key cache

		var h, hl = this.hierarchy.length,
			object;

		for ( h = 0; h < hl; h ++ ) {

			object = this.hierarchy[ h ];

			if ( this.interpolationType !== THREE.AnimationHandler.CATMULLROM_FORWARD ) {

				object.useQuaternion = true;

			}

			object.matrixAutoUpdate = true;

			if ( object.animationCache === undefined ) {

				object.animationCache = {};
				object.animationCache.prevKey = { pos: 0, rot: 0, scl: 0 };
				object.animationCache.nextKey = { pos: 0, rot: 0, scl: 0 };
				object.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;

			}

			var prevKey = object.animationCache.prevKey;
			var nextKey = object.animationCache.nextKey;

			prevKey.pos = this.data.hierarchy[ h ].keys[ 0 ];
			prevKey.rot = this.data.hierarchy[ h ].keys[ 0 ];
			prevKey.scl = this.data.hierarchy[ h ].keys[ 0 ];

			nextKey.pos = this.getNextKeyWith( "pos", h, 1 );
			nextKey.rot = this.getNextKeyWith( "rot", h, 1 );
			nextKey.scl = this.getNextKeyWith( "scl", h, 1 );

		}

		this.update( 0 );

	}

	this.isPaused = false;

	THREE.AnimationHandler.addToUpdate( this );

};


THREE.Animation.prototype.pause = function() {

	if ( this.isPaused === true ) {

		THREE.AnimationHandler.addToUpdate( this );

	} else {

		THREE.AnimationHandler.removeFromUpdate( this );

	}

	this.isPaused = !this.isPaused;

};


THREE.Animation.prototype.stop = function() {

	this.isPlaying = false;
	this.isPaused  = false;
	THREE.AnimationHandler.removeFromUpdate( this );

};


THREE.Animation.prototype.update = function ( deltaTimeMS ) {

	// early out

	if ( this.isPlaying === false ) return;


	// vars

	var types = [ "pos", "rot", "scl" ];
	var type;
	var scale;
	var vector;
	var prevXYZ, nextXYZ;
	var prevKey, nextKey;
	var object;
	var animationCache;
	var frame;
	var JIThierarchy = this.data.JIT.hierarchy;
	var currentTime, unloopedCurrentTime;
	var currentPoint, forwardPoint, angle;


	this.currentTime += deltaTimeMS * this.timeScale;

	unloopedCurrentTime = this.currentTime;
	currentTime = this.currentTime = this.currentTime % this.data.length;
	frame = parseInt( Math.min( currentTime * this.data.fps, this.data.length * this.data.fps ), 10 );


	for ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {

		object = this.hierarchy[ h ];
		animationCache = object.animationCache;

		// loop through pos/rot/scl

		for ( var t = 0; t < 3; t ++ ) {

			// get keys

			type    = types[ t ];
			prevKey = animationCache.prevKey[ type ];
			nextKey = animationCache.nextKey[ type ];

			// switch keys?

			if ( nextKey.time <= unloopedCurrentTime ) {

				// did we loop?

				if ( currentTime < unloopedCurrentTime ) {

					if ( this.loop ) {

						prevKey = this.data.hierarchy[ h ].keys[ 0 ];
						nextKey = this.getNextKeyWith( type, h, 1 );

						while( nextKey.time < currentTime ) {

							prevKey = nextKey;
							nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );

						}

					} else {

						this.stop();
						return;

					}

				} else {

					do {

						prevKey = nextKey;
						nextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );

					} while( nextKey.time < currentTime )

				}

				animationCache.prevKey[ type ] = prevKey;
				animationCache.nextKey[ type ] = nextKey;

			}


			object.matrixAutoUpdate = true;
			object.matrixWorldNeedsUpdate = true;

			scale = ( currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );
			prevXYZ = prevKey[ type ];
			nextXYZ = nextKey[ type ];


			// check scale error

			if ( scale < 0 || scale > 1 ) {

				console.log( "THREE.Animation.update: Warning! Scale out of bounds:" + scale + " on bone " + h );
				scale = scale < 0 ? 0 : 1;

			}

			// interpolate

			if ( type === "pos" ) {

				vector = object.position;

				if ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {

					vector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;
					vector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;
					vector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;

				} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||
						    this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {

					this.points[ 0 ] = this.getPrevKeyWith( "pos", h, prevKey.index - 1 )[ "pos" ];
					this.points[ 1 ] = prevXYZ;
					this.points[ 2 ] = nextXYZ;
					this.points[ 3 ] = this.getNextKeyWith( "pos", h, nextKey.index + 1 )[ "pos" ];

					scale = scale * 0.33 + 0.33;

					currentPoint = this.interpolateCatmullRom( this.points, scale );

					vector.x = currentPoint[ 0 ];
					vector.y = currentPoint[ 1 ];
					vector.z = currentPoint[ 2 ];

					if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {

						forwardPoint = this.interpolateCatmullRom( this.points, scale * 1.01 );

						this.target.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );
						this.target.sub( vector );
						this.target.y = 0;
						this.target.normalize();

						angle = Math.atan2( this.target.x, this.target.z );
						object.rotation.set( 0, angle, 0 );

					}

				}

			} else if ( type === "rot" ) {

				THREE.Quaternion.slerp( prevXYZ, nextXYZ, object.quaternion, scale );

			} else if ( type === "scl" ) {

				vector = object.scale;

				vector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;
				vector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;
				vector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;

			}

		}

	}

};

// Catmull-Rom spline

THREE.Animation.prototype.interpolateCatmullRom = function ( points, scale ) {

	var c = [], v3 = [],
	point, intPoint, weight, w2, w3,
	pa, pb, pc, pd;

	point = ( points.length - 1 ) * scale;
	intPoint = Math.floor( point );
	weight = point - intPoint;

	c[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;
	c[ 1 ] = intPoint;
	c[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;
	c[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;

	pa = points[ c[ 0 ] ];
	pb = points[ c[ 1 ] ];
	pc = points[ c[ 2 ] ];
	pd = points[ c[ 3 ] ];

	w2 = weight * weight;
	w3 = weight * w2;

	v3[ 0 ] = this.interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );
	v3[ 1 ] = this.interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );
	v3[ 2 ] = this.interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );

	return v3;

};

THREE.Animation.prototype.interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {

	var v0 = ( p2 - p0 ) * 0.5,
		v1 = ( p3 - p1 ) * 0.5;

	return ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;

};



// Get next key with

THREE.Animation.prototype.getNextKeyWith = function ( type, h, key ) {

	var keys = this.data.hierarchy[ h ].keys;

	if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||
		 this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {

		key = key < keys.length - 1 ? key : keys.length - 1;

	} else {

		key = key % keys.length;

	}

	for ( ; key < keys.length; key++ ) {

		if ( keys[ key ][ type ] !== undefined ) {

			return keys[ key ];

		}

	}

	return this.data.hierarchy[ h ].keys[ 0 ];

};

// Get previous key with

THREE.Animation.prototype.getPrevKeyWith = function ( type, h, key ) {

	var keys = this.data.hierarchy[ h ].keys;

	if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||
		 this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {

		key = key > 0 ? key : 0;

	} else {

		key = key >= 0 ? key : key + keys.length;

	}


	for ( ; key >= 0; key -- ) {

		if ( keys[ key ][ type ] !== undefined ) {

			return keys[ key ];

		}

	}

	return this.data.hierarchy[ h ].keys[ keys.length - 1 ];

};
/**
 * @author mikael emtinger / http://gomo.se/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author khang duong
 * @author erik kitson
 */

THREE.KeyFrameAnimation = function( root, data, JITCompile ) {

	this.root = root;
	this.data = THREE.AnimationHandler.get( data );
	this.hierarchy = THREE.AnimationHandler.parse( root );
	this.currentTime = 0;
	this.timeScale = 0.001;
	this.isPlaying = false;
	this.isPaused = true;
	this.loop = true;
	this.JITCompile = JITCompile !== undefined ? JITCompile : true;

	// initialize to first keyframes

	for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {

		var keys = this.data.hierarchy[h].keys,
			sids = this.data.hierarchy[h].sids,
			obj = this.hierarchy[h];

		if ( keys.length && sids ) {

			for ( var s = 0; s < sids.length; s++ ) {

				var sid = sids[ s ],
					next = this.getNextKeyWith( sid, h, 0 );

				if ( next ) {

					next.apply( sid );

				}

			}

			obj.matrixAutoUpdate = false;
			this.data.hierarchy[h].node.updateMatrix();
			obj.matrixWorldNeedsUpdate = true;

		}

	}

};

// Play

THREE.KeyFrameAnimation.prototype.play = function( loop, startTimeMS ) {

	if( !this.isPlaying ) {

		this.isPlaying = true;
		this.loop = loop !== undefined ? loop : true;
		this.currentTime = startTimeMS !== undefined ? startTimeMS : 0;
		this.startTimeMs = startTimeMS;
		this.startTime = 10000000;
		this.endTime = -this.startTime;


		// reset key cache

		var h, hl = this.hierarchy.length,
			object,
			node;

		for ( h = 0; h < hl; h++ ) {

			object = this.hierarchy[ h ];
			node = this.data.hierarchy[ h ];
			object.useQuaternion = true;

			if ( node.animationCache === undefined ) {

				node.animationCache = {};
				node.animationCache.prevKey = null;
				node.animationCache.nextKey = null;
				node.animationCache.originalMatrix = object instanceof THREE.Bone ? object.skinMatrix : object.matrix;

			}

			var keys = this.data.hierarchy[h].keys;

			if (keys.length) {

				node.animationCache.prevKey = keys[ 0 ];
				node.animationCache.nextKey = keys[ 1 ];

				this.startTime = Math.min( keys[0].time, this.startTime );
				this.endTime = Math.max( keys[keys.length - 1].time, this.endTime );

			}

		}

		this.update( 0 );

	}

	this.isPaused = false;

	THREE.AnimationHandler.addToUpdate( this );

};



// Pause

THREE.KeyFrameAnimation.prototype.pause = function() {

	if( this.isPaused ) {

		THREE.AnimationHandler.addToUpdate( this );

	} else {

		THREE.AnimationHandler.removeFromUpdate( this );

	}

	this.isPaused = !this.isPaused;

};


// Stop

THREE.KeyFrameAnimation.prototype.stop = function() {

	this.isPlaying = false;
	this.isPaused  = false;
	THREE.AnimationHandler.removeFromUpdate( this );


	// reset JIT matrix and remove cache

	for ( var h = 0; h < this.data.hierarchy.length; h++ ) {
        
        var obj = this.hierarchy[ h ];
		var node = this.data.hierarchy[ h ];

		if ( node.animationCache !== undefined ) {

			var original = node.animationCache.originalMatrix;

			if( obj instanceof THREE.Bone ) {

				original.copy( obj.skinMatrix );
				obj.skinMatrix = original;

			} else {

				original.copy( obj.matrix );
				obj.matrix = original;

			}

			delete node.animationCache;

		}

	}

};


// Update

THREE.KeyFrameAnimation.prototype.update = function( deltaTimeMS ) {

	// early out

	if( !this.isPlaying ) return;


	// vars

	var prevKey, nextKey;
	var object;
	var node;
	var frame;
	var JIThierarchy = this.data.JIT.hierarchy;
	var currentTime, unloopedCurrentTime;
	var looped;


	// update

	this.currentTime += deltaTimeMS * this.timeScale;

	unloopedCurrentTime = this.currentTime;
	currentTime         = this.currentTime = this.currentTime % this.data.length;

	// if looped around, the current time should be based on the startTime
	if ( currentTime < this.startTimeMs ) {

		currentTime = this.currentTime = this.startTimeMs + currentTime;

	}

	frame               = parseInt( Math.min( currentTime * this.data.fps, this.data.length * this.data.fps ), 10 );
	looped 				= currentTime < unloopedCurrentTime;

	if ( looped && !this.loop ) {

		// Set the animation to the last keyframes and stop
		for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {

			var keys = this.data.hierarchy[h].keys,
				sids = this.data.hierarchy[h].sids,
				end = keys.length-1,
				obj = this.hierarchy[h];

			if ( keys.length ) {

				for ( var s = 0; s < sids.length; s++ ) {

					var sid = sids[ s ],
						prev = this.getPrevKeyWith( sid, h, end );

					if ( prev ) {
						prev.apply( sid );

					}

				}

				this.data.hierarchy[h].node.updateMatrix();
				obj.matrixWorldNeedsUpdate = true;

			}

		}

		this.stop();
		return;

	}

	// check pre-infinity
	if ( currentTime < this.startTime ) {

		return;

	}

	// update

	for ( var h = 0, hl = this.hierarchy.length; h < hl; h++ ) {

		object = this.hierarchy[ h ];
		node = this.data.hierarchy[ h ];

		var keys = node.keys,
			animationCache = node.animationCache;

		// use JIT?

		if ( this.JITCompile && JIThierarchy[ h ][ frame ] !== undefined ) {

			if( object instanceof THREE.Bone ) {

				object.skinMatrix = JIThierarchy[ h ][ frame ];
				object.matrixWorldNeedsUpdate = false;

			} else {

				object.matrix = JIThierarchy[ h ][ frame ];
				object.matrixWorldNeedsUpdate = true;

			}

		// use interpolation

		} else if ( keys.length ) {

			// make sure so original matrix and not JIT matrix is set

			if ( this.JITCompile && animationCache ) {

				if( object instanceof THREE.Bone ) {

					object.skinMatrix = animationCache.originalMatrix;

				} else {

					object.matrix = animationCache.originalMatrix;

				}

			}

			prevKey = animationCache.prevKey;
			nextKey = animationCache.nextKey;

			if ( prevKey && nextKey ) {

				// switch keys?

				if ( nextKey.time <= unloopedCurrentTime ) {

					// did we loop?

					if ( looped && this.loop ) {

						prevKey = keys[ 0 ];
						nextKey = keys[ 1 ];

						while ( nextKey.time < currentTime ) {

							prevKey = nextKey;
							nextKey = keys[ prevKey.index + 1 ];

						}

					} else if ( !looped ) {

						var lastIndex = keys.length - 1;

						while ( nextKey.time < currentTime && nextKey.index !== lastIndex ) {

							prevKey = nextKey;
							nextKey = keys[ prevKey.index + 1 ];

						}

					}

					animationCache.prevKey = prevKey;
					animationCache.nextKey = nextKey;

				}
                if(nextKey.time >= currentTime)
                    prevKey.interpolate( nextKey, currentTime );
                else
                    prevKey.interpolate( nextKey, nextKey.time);

			}

			this.data.hierarchy[h].node.updateMatrix();
			object.matrixWorldNeedsUpdate = true;

		}

	}

	// update JIT?

	if ( this.JITCompile ) {

		if ( JIThierarchy[ 0 ][ frame ] === undefined ) {

			this.hierarchy[ 0 ].updateMatrixWorld( true );

			for ( var h = 0; h < this.hierarchy.length; h++ ) {

				if( this.hierarchy[ h ] instanceof THREE.Bone ) {

					JIThierarchy[ h ][ frame ] = this.hierarchy[ h ].skinMatrix.clone();

				} else {

					JIThierarchy[ h ][ frame ] = this.hierarchy[ h ].matrix.clone();

				}

			}

		}

	}

};

// Get next key with

THREE.KeyFrameAnimation.prototype.getNextKeyWith = function( sid, h, key ) {

	var keys = this.data.hierarchy[ h ].keys;
	key = key % keys.length;

	for ( ; key < keys.length; key++ ) {

		if ( keys[ key ].hasTarget( sid ) ) {

			return keys[ key ];

		}

	}

	return keys[ 0 ];

};

// Get previous key with

THREE.KeyFrameAnimation.prototype.getPrevKeyWith = function( sid, h, key ) {

	var keys = this.data.hierarchy[ h ].keys;
	key = key >= 0 ? key : key + keys.length;

	for ( ; key >= 0; key-- ) {

		if ( keys[ key ].hasTarget( sid ) ) {

			return keys[ key ];

		}

	}

	return keys[ keys.length - 1 ];

};
/**
 * Camera for rendering cube maps
 *	- renders scene into axis-aligned cube
 *
 * @author alteredq / http://alteredqualia.com/
 */

THREE.CubeCamera = function ( near, far, cubeResolution ) {

	THREE.Object3D.call( this );

	var fov = 90, aspect = 1;

	var cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );
	cameraPX.up.set( 0, -1, 0 );
	cameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );
	this.add( cameraPX );

	var cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );
	cameraNX.up.set( 0, -1, 0 );
	cameraNX.lookAt( new THREE.Vector3( -1, 0, 0 ) );
	this.add( cameraNX );

	var cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );
	cameraPY.up.set( 0, 0, 1 );
	cameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );
	this.add( cameraPY );

	var cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );
	cameraNY.up.set( 0, 0, -1 );
	cameraNY.lookAt( new THREE.Vector3( 0, -1, 0 ) );
	this.add( cameraNY );

	var cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );
	cameraPZ.up.set( 0, -1, 0 );
	cameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );
	this.add( cameraPZ );

	var cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );
	cameraNZ.up.set( 0, -1, 0 );
	cameraNZ.lookAt( new THREE.Vector3( 0, 0, -1 ) );
	this.add( cameraNZ );

	this.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );

	this.updateCubeMap = function ( renderer, scene ) {

		var renderTarget = this.renderTarget;
		var generateMipmaps = renderTarget.generateMipmaps;

		renderTarget.generateMipmaps = false;

		renderTarget.activeCubeFace = 0;
		renderer.render( scene, cameraPX, renderTarget );

		renderTarget.activeCubeFace = 1;
		renderer.render( scene, cameraNX, renderTarget );

		renderTarget.activeCubeFace = 2;
		renderer.render( scene, cameraPY, renderTarget );

		renderTarget.activeCubeFace = 3;
		renderer.render( scene, cameraNY, renderTarget );

		renderTarget.activeCubeFace = 4;
		renderer.render( scene, cameraPZ, renderTarget );

		renderTarget.generateMipmaps = generateMipmaps;

		renderTarget.activeCubeFace = 5;
		renderer.render( scene, cameraNZ, renderTarget );

	};

};

THREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );
/*
 *	@author zz85 / http://twitter.com/blurspline / http://www.lab4games.net/zz85/blog
 *
 *	A general perpose camera, for setting FOV, Lens Focal Length,
 *		and switching between perspective and orthographic views easily.
 *		Use this only if you do not wish to manage
 *		both a Orthographic and Perspective Camera
 *
 */


THREE.CombinedCamera = function ( width, height, fov, near, far, orthoNear, orthoFar ) {

	THREE.Camera.call( this );

	this.fov = fov;

	this.left = -width / 2;
	this.right = width / 2
	this.top = height / 2;
	this.bottom = -height / 2;

	// We could also handle the projectionMatrix internally, but just wanted to test nested camera objects

	this.cameraO = new THREE.OrthographicCamera( width / - 2, width / 2, height / 2, height / - 2, 	orthoNear, orthoFar );
	this.cameraP = new THREE.PerspectiveCamera( fov, width / height, near, far );

	this.zoom = 1;

	this.toPerspective();

	var aspect = width/height;

};

THREE.CombinedCamera.prototype = Object.create( THREE.Camera.prototype );

THREE.CombinedCamera.prototype.toPerspective = function () {

	// Switches to the Perspective Camera

	this.near = this.cameraP.near;
	this.far = this.cameraP.far;

	this.cameraP.fov =  this.fov / this.zoom ;

	this.cameraP.updateProjectionMatrix();

	this.projectionMatrix = this.cameraP.projectionMatrix;

	this.inPerspectiveMode = true;
	this.inOrthographicMode = false;

};

THREE.CombinedCamera.prototype.toOrthographic = function () {

	// Switches to the Orthographic camera estimating viewport from Perspective

	var fov = this.fov;
	var aspect = this.cameraP.aspect;
	var near = this.cameraP.near;
	var far = this.cameraP.far;

	// The size that we set is the mid plane of the viewing frustum

	var hyperfocus = ( near + far ) / 2;

	var halfHeight = Math.tan( fov / 2 ) * hyperfocus;
	var planeHeight = 2 * halfHeight;
	var planeWidth = planeHeight * aspect;
	var halfWidth = planeWidth / 2;

	halfHeight /= this.zoom;
	halfWidth /= this.zoom;

	this.cameraO.left = -halfWidth;
	this.cameraO.right = halfWidth;
	this.cameraO.top = halfHeight;
	this.cameraO.bottom = -halfHeight;

	// this.cameraO.left = -farHalfWidth;
	// this.cameraO.right = farHalfWidth;
	// this.cameraO.top = farHalfHeight;
	// this.cameraO.bottom = -farHalfHeight;

	// this.cameraO.left = this.left / this.zoom;
	// this.cameraO.right = this.right / this.zoom;
	// this.cameraO.top = this.top / this.zoom;
	// this.cameraO.bottom = this.bottom / this.zoom;

	this.cameraO.updateProjectionMatrix();

	this.near = this.cameraO.near;
	this.far = this.cameraO.far;
	this.projectionMatrix = this.cameraO.projectionMatrix;

	this.inPerspectiveMode = false;
	this.inOrthographicMode = true;

};


THREE.CombinedCamera.prototype.setSize = function( width, height ) {

	this.cameraP.aspect = width / height;
	this.left = -width / 2;
	this.right = width / 2
	this.top = height / 2;
	this.bottom = -height / 2;

};


THREE.CombinedCamera.prototype.setFov = function( fov ) {

	this.fov = fov;

	if ( this.inPerspectiveMode ) {

		this.toPerspective();

	} else {

		this.toOrthographic();

	}

};

// For mantaining similar API with PerspectiveCamera

THREE.CombinedCamera.prototype.updateProjectionMatrix = function() {

	if ( this.inPerspectiveMode ) {

		this.toPerspective();

	} else {

		this.toPerspective();
		this.toOrthographic();

	}

};

/*
* Uses Focal Length (in mm) to estimate and set FOV
* 35mm (fullframe) camera is used if frame size is not specified;
* Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html
*/
THREE.CombinedCamera.prototype.setLens = function ( focalLength, frameHeight ) {

	if ( frameHeight === undefined ) frameHeight = 24;

	var fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );

	this.setFov( fov );

	return fov;
};


THREE.CombinedCamera.prototype.setZoom = function( zoom ) {

	this.zoom = zoom;

	if ( this.inPerspectiveMode ) {

		this.toPerspective();

	} else {

		this.toOrthographic();

	}

};

THREE.CombinedCamera.prototype.toFrontView = function() {

	this.rotation.x = 0;
	this.rotation.y = 0;
	this.rotation.z = 0;

	// should we be modifing the matrix instead?

	this.rotationAutoUpdate = false;

};

THREE.CombinedCamera.prototype.toBackView = function() {

	this.rotation.x = 0;
	this.rotation.y = Math.PI;
	this.rotation.z = 0;
	this.rotationAutoUpdate = false;

};

THREE.CombinedCamera.prototype.toLeftView = function() {

	this.rotation.x = 0;
	this.rotation.y = - Math.PI / 2;
	this.rotation.z = 0;
	this.rotationAutoUpdate = false;

};

THREE.CombinedCamera.prototype.toRightView = function() {

	this.rotation.x = 0;
	this.rotation.y = Math.PI / 2;
	this.rotation.z = 0;
	this.rotationAutoUpdate = false;

};

THREE.CombinedCamera.prototype.toTopView = function() {

	this.rotation.x = - Math.PI / 2;
	this.rotation.y = 0;
	this.rotation.z = 0;
	this.rotationAutoUpdate = false;

};

THREE.CombinedCamera.prototype.toBottomView = function() {

	this.rotation.x = Math.PI / 2;
	this.rotation.y = 0;
	this.rotation.z = 0;
	this.rotationAutoUpdate = false;

};

/**
 * @author hughes
 */

THREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {

	THREE.Geometry.call( this );

	radius = radius || 50;

	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;
	segments = segments !== undefined ? Math.max( 3, segments ) : 8;

	var i, uvs = [],
	center = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );

	this.vertices.push(center);
	uvs.push( centerUV );

	for ( i = 0; i <= segments; i ++ ) {

		var vertex = new THREE.Vector3();
		var segment = thetaStart + i / segments * thetaLength;

		vertex.x = radius * Math.cos( segment );
		vertex.y = radius * Math.sin( segment );

		this.vertices.push( vertex );
		uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, - ( vertex.y / radius + 1 ) / 2 + 1 ) );

	}

	var n = new THREE.Vector3( 0, 0, -1 );

	for ( i = 1; i <= segments; i ++ ) {

		var v1 = i;
		var v2 = i + 1 ;
		var v3 = 0;

		this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );
		this.faceVertexUvs[ 0 ].push( [ uvs[ i ], uvs[ i + 1 ], centerUV ] );

	}

	this.computeCentroids();
	this.computeFaceNormals();

	this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );

};

THREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author mrdoob / http://mrdoob.com/
 * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as
 */

THREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {

	THREE.Geometry.call( this );

	var scope = this;

	this.width = width;
	this.height = height;
	this.depth = depth;

	this.widthSegments = widthSegments || 1;
	this.heightSegments = heightSegments || 1;
	this.depthSegments = depthSegments || 1;

	var width_half = this.width / 2;
	var height_half = this.height / 2;
	var depth_half = this.depth / 2;

	buildPlane( 'z', 'y', - 1, - 1, this.depth, this.height, width_half, 0 ); // px
	buildPlane( 'z', 'y',   1, - 1, this.depth, this.height, - width_half, 1 ); // nx
	buildPlane( 'x', 'z',   1,   1, this.width, this.depth, height_half, 2 ); // py
	buildPlane( 'x', 'z',   1, - 1, this.width, this.depth, - height_half, 3 ); // ny
	buildPlane( 'x', 'y',   1, - 1, this.width, this.height, depth_half, 4 ); // pz
	buildPlane( 'x', 'y', - 1, - 1, this.width, this.height, - depth_half, 5 ); // nz

	function buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {

		var w, ix, iy,
		gridX = scope.widthSegments,
		gridY = scope.heightSegments,
		width_half = width / 2,
		height_half = height / 2,
		offset = scope.vertices.length;

		if ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {

			w = 'z';

		} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {

			w = 'y';
			gridY = scope.depthSegments;

		} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {

			w = 'x';
			gridX = scope.depthSegments;

		}

		var gridX1 = gridX + 1,
		gridY1 = gridY + 1,
		segment_width = width / gridX,
		segment_height = height / gridY,
		normal = new THREE.Vector3();

		normal[ w ] = depth > 0 ? 1 : - 1;

		for ( iy = 0; iy < gridY1; iy ++ ) {

			for ( ix = 0; ix < gridX1; ix ++ ) {

				var vector = new THREE.Vector3();
				vector[ u ] = ( ix * segment_width - width_half ) * udir;
				vector[ v ] = ( iy * segment_height - height_half ) * vdir;
				vector[ w ] = depth;

				scope.vertices.push( vector );

			}

		}

		for ( iy = 0; iy < gridY; iy++ ) {

			for ( ix = 0; ix < gridX; ix++ ) {

				var a = ix + gridX1 * iy;
				var b = ix + gridX1 * ( iy + 1 );
				var c = ( ix + 1 ) + gridX1 * ( iy + 1 );
				var d = ( ix + 1 ) + gridX1 * iy;

				var face = new THREE.Face4( a + offset, b + offset, c + offset, d + offset );
				face.normal.copy( normal );
				face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone(), normal.clone() );
				face.materialIndex = materialIndex;

				scope.faces.push( face );
				scope.faceVertexUvs[ 0 ].push( [
							new THREE.Vector2( ix / gridX, 1 - iy / gridY ),
							new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY ),
							new THREE.Vector2( ( ix + 1 ) / gridX, 1- ( iy + 1 ) / gridY ),
							new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY )
						] );

			}

		}

	}

	this.computeCentroids();
	this.mergeVertices();

};

THREE.CubeGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radiusSegments, heightSegments, openEnded ) {

	THREE.Geometry.call( this );

	radiusTop = radiusTop !== undefined ? radiusTop : 20;
	radiusBottom = radiusBottom !== undefined ? radiusBottom : 20;
	height = height !== undefined ? height : 100;

	var heightHalf = height / 2;
	var segmentsX = radiusSegments || 8;
	var segmentsY = heightSegments || 1;

	var x, y, vertices = [], uvs = [];

	for ( y = 0; y <= segmentsY; y ++ ) {

		var verticesRow = [];
		var uvsRow = [];

		var v = y / segmentsY;
		var radius = v * ( radiusBottom - radiusTop ) + radiusTop;

		for ( x = 0; x <= segmentsX; x ++ ) {

			var u = x / segmentsX;

			var vertex = new THREE.Vector3();
			vertex.x = radius * Math.sin( u * Math.PI * 2 );
			vertex.y = - v * height + heightHalf;
			vertex.z = radius * Math.cos( u * Math.PI * 2 );

			this.vertices.push( vertex );

			verticesRow.push( this.vertices.length - 1 );
			uvsRow.push( new THREE.Vector2( u, 1 - v ) );

		}

		vertices.push( verticesRow );
		uvs.push( uvsRow );

	}

	var tanTheta = ( radiusBottom - radiusTop ) / height;
	var na, nb;

	for ( x = 0; x < segmentsX; x ++ ) {

		if ( radiusTop !== 0 ) {

			na = this.vertices[ vertices[ 0 ][ x ] ].clone();
			nb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();

		} else {

			na = this.vertices[ vertices[ 1 ][ x ] ].clone();
			nb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();

		}

		na.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();
		nb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();

		for ( y = 0; y < segmentsY; y ++ ) {

			var v1 = vertices[ y ][ x ];
			var v2 = vertices[ y + 1 ][ x ];
			var v3 = vertices[ y + 1 ][ x + 1 ];
			var v4 = vertices[ y ][ x + 1 ];

			var n1 = na.clone();
			var n2 = na.clone();
			var n3 = nb.clone();
			var n4 = nb.clone();

			var uv1 = uvs[ y ][ x ].clone();
			var uv2 = uvs[ y + 1 ][ x ].clone();
			var uv3 = uvs[ y + 1 ][ x + 1 ].clone();
			var uv4 = uvs[ y ][ x + 1 ].clone();

			this.faces.push( new THREE.Face4( v1, v2, v3, v4, [ n1, n2, n3, n4 ] ) );
			this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3, uv4 ] );

		}

	}

	// top cap

	if ( !openEnded && radiusTop > 0 ) {

		this.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );

		for ( x = 0; x < segmentsX; x ++ ) {

			var v1 = vertices[ 0 ][ x ];
			var v2 = vertices[ 0 ][ x + 1 ];
			var v3 = this.vertices.length - 1;

			var n1 = new THREE.Vector3( 0, 1, 0 );
			var n2 = new THREE.Vector3( 0, 1, 0 );
			var n3 = new THREE.Vector3( 0, 1, 0 );

			var uv1 = uvs[ 0 ][ x ].clone();
			var uv2 = uvs[ 0 ][ x + 1 ].clone();
			var uv3 = new THREE.Vector2( uv2.u, 0 );

			this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );
			this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );

		}

	}

	// bottom cap

	if ( !openEnded && radiusBottom > 0 ) {

		this.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );

		for ( x = 0; x < segmentsX; x ++ ) {

			var v1 = vertices[ y ][ x + 1 ];
			var v2 = vertices[ y ][ x ];
			var v3 = this.vertices.length - 1;

			var n1 = new THREE.Vector3( 0, - 1, 0 );
			var n2 = new THREE.Vector3( 0, - 1, 0 );
			var n3 = new THREE.Vector3( 0, - 1, 0 );

			var uv1 = uvs[ y ][ x + 1 ].clone();
			var uv2 = uvs[ y ][ x ].clone();
			var uv3 = new THREE.Vector2( uv2.u, 1 );

			this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );
			this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );

		}

	}

	this.computeCentroids();
	this.computeFaceNormals();

}

THREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too
 *  amount: <int>, // Amount
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float>, // how far from text outline is bevel
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)
 *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals
 *
 *  material: <int> // material index for front and back faces
 *  extrudeMaterial: <int> // material index for extrusion and beveled faces
 *  uvGenerator: <Object> // object that provides UV generator functions
 *
 * }
 **/

THREE.ExtrudeGeometry = function ( shapes, options ) {

	if ( typeof( shapes ) === "undefined" ) {
		shapes = [];
		return;
	}

	THREE.Geometry.call( this );

	shapes = shapes instanceof Array ? shapes : [ shapes ];

	this.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();

	this.addShapeList( shapes, options );

	this.computeCentroids();
	this.computeFaceNormals();

	// can't really use automatic vertex normals
	// as then front and back sides get smoothed too
	// should do separate smoothing just for sides

	//this.computeVertexNormals();

	//console.log( "took", ( Date.now() - startTime ) );

};

THREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );

THREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {
	var sl = shapes.length;

	for ( var s = 0; s < sl; s ++ ) {
		var shape = shapes[ s ];
		this.addShape( shape, options );
	}
};

THREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {

	var amount = options.amount !== undefined ? options.amount : 100;

	var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10
	var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8
	var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;

	var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false

	var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;

	var steps = options.steps !== undefined ? options.steps : 1;

	var extrudePath = options.extrudePath;
	var extrudePts, extrudeByPath = false;

	var material = options.material;
	var extrudeMaterial = options.extrudeMaterial;

	// Use default WorldUVGenerator if no UV generators are specified.
	var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;

	var shapebb = this.shapebb;
	//shapebb = shape.getBoundingBox();



	var splineTube, binormal, normal, position2;
	if ( extrudePath ) {

		extrudePts = extrudePath.getSpacedPoints( steps );

		extrudeByPath = true;
		bevelEnabled = false; // bevels not supported for path extrusion

		// SETUP TNB variables

		// Reuse TNB from TubeGeomtry for now.
		// TODO1 - have a .isClosed in spline?

		splineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);

		// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);

		binormal = new THREE.Vector3();
		normal = new THREE.Vector3();
		position2 = new THREE.Vector3();

	}

	// Safeguards if bevels are not enabled

	if ( ! bevelEnabled ) {

		bevelSegments = 0;
		bevelThickness = 0;
		bevelSize = 0;

	}

	// Variables initalization

	var ahole, h, hl; // looping of holes
	var scope = this;
	var bevelPoints = [];

	var shapesOffset = this.vertices.length;

	var shapePoints = shape.extractPoints( curveSegments );

	var vertices = shapePoints.shape;
	var holes = shapePoints.holes;

	var reverse = !THREE.Shape.Utils.isClockWise( vertices ) ;

	if ( reverse ) {

		vertices = vertices.reverse();

		// Maybe we should also check if holes are in the opposite direction, just to be safe ...

		for ( h = 0, hl = holes.length; h < hl; h ++ ) {

			ahole = holes[ h ];

			if ( THREE.Shape.Utils.isClockWise( ahole ) ) {

				holes[ h ] = ahole.reverse();

			}

		}

		reverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!

	}


	var faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );

	/* Vertices */

	var contour = vertices; // vertices has all points but contour has only points of circumference

	for ( h = 0, hl = holes.length;  h < hl; h ++ ) {

		ahole = holes[ h ];

		vertices = vertices.concat( ahole );

	}


	function scalePt2 ( pt, vec, size ) {

		if ( !vec ) console.log( "die" );

		return vec.clone().multiplyScalar( size ).add( pt );

	}

	var b, bs, t, z,
		vert, vlen = vertices.length,
		face, flen = faces.length,
		cont, clen = contour.length;


	// Find directions for point movement

	var RAD_TO_DEGREES = 180 / Math.PI;


	function getBevelVec( pt_i, pt_j, pt_k ) {

		// Algorithm 2

		return getBevelVec2( pt_i, pt_j, pt_k );

	}

	function getBevelVec1( pt_i, pt_j, pt_k ) {

		var anglea = Math.atan2( pt_j.y - pt_i.y, pt_j.x - pt_i.x );
		var angleb = Math.atan2( pt_k.y - pt_i.y, pt_k.x - pt_i.x );

		if ( anglea > angleb ) {

			angleb += Math.PI * 2;

		}

		var anglec = ( anglea + angleb ) / 2;


		//console.log('angle1', anglea * RAD_TO_DEGREES,'angle2', angleb * RAD_TO_DEGREES, 'anglec', anglec *RAD_TO_DEGREES);

		var x = - Math.cos( anglec );
		var y = - Math.sin( anglec );

		var vec = new THREE.Vector2( x, y ); //.normalize();

		return vec;

	}

	function getBevelVec2( pt_i, pt_j, pt_k ) {

		var a = THREE.ExtrudeGeometry.__v1,
			b = THREE.ExtrudeGeometry.__v2,
			v_hat = THREE.ExtrudeGeometry.__v3,
			w_hat = THREE.ExtrudeGeometry.__v4,
			p = THREE.ExtrudeGeometry.__v5,
			q = THREE.ExtrudeGeometry.__v6,
			v, w,
			v_dot_w_hat, q_sub_p_dot_w_hat,
			s, intersection;

		// good reading for line-line intersection
		// http://sputsoft.com/blog/2010/03/line-line-intersection.html

		// define a as vector j->i
		// define b as vectot k->i

		a.set( pt_i.x - pt_j.x, pt_i.y - pt_j.y );
		b.set( pt_i.x - pt_k.x, pt_i.y - pt_k.y );

		// get unit vectors

		v = a.normalize();
		w = b.normalize();

		// normals from pt i

		v_hat.set( -v.y, v.x );
		w_hat.set( w.y, -w.x );

		// pts from i

		p.copy( pt_i ).add( v_hat );
		q.copy( pt_i ).add( w_hat );

		if ( p.equals( q ) ) {

			//console.log("Warning: lines are straight");
			return w_hat.clone();

		}

		// Points from j, k. helps prevents points cross overover most of the time

		p.copy( pt_j ).add( v_hat );
		q.copy( pt_k ).add( w_hat );

		v_dot_w_hat = v.dot( w_hat );
		q_sub_p_dot_w_hat = q.sub( p ).dot( w_hat );

		// We should not reach these conditions

		if ( v_dot_w_hat === 0 ) {

			console.log( "Either infinite or no solutions!" );

			if ( q_sub_p_dot_w_hat === 0 ) {

				console.log( "Its finite solutions." );

			} else {

				console.log( "Too bad, no solutions." );

			}

		}

		s = q_sub_p_dot_w_hat / v_dot_w_hat;

		if ( s < 0 ) {

			// in case of emergecy, revert to algorithm 1.

			return getBevelVec1( pt_i, pt_j, pt_k );

		}

		intersection = v.multiplyScalar( s ).add( p );

		return intersection.sub( pt_i ).clone(); // Don't normalize!, otherwise sharp corners become ugly

	}

	var contourMovements = [];

	for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

		if ( j === il ) j = 0;
		if ( k === il ) k = 0;

		//  (j)---(i)---(k)
		// console.log('i,j,k', i, j , k)

		var pt_i = contour[ i ];
		var pt_j = contour[ j ];
		var pt_k = contour[ k ];

		contourMovements[ i ]= getBevelVec( contour[ i ], contour[ j ], contour[ k ] );

	}

	var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();

	for ( h = 0, hl = holes.length; h < hl; h ++ ) {

		ahole = holes[ h ];

		oneHoleMovements = [];

		for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

			if ( j === il ) j = 0;
			if ( k === il ) k = 0;

			//  (j)---(i)---(k)
			oneHoleMovements[ i ]= getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );

		}

		holesMovements.push( oneHoleMovements );
		verticesMovements = verticesMovements.concat( oneHoleMovements );

	}


	// Loop bevelSegments, 1 for the front, 1 for the back

	for ( b = 0; b < bevelSegments; b ++ ) {
	//for ( b = bevelSegments; b > 0; b -- ) {

		t = b / bevelSegments;
		z = bevelThickness * ( 1 - t );

		//z = bevelThickness * t;
		bs = bevelSize * ( Math.sin ( t * Math.PI/2 ) ) ; // curved
		//bs = bevelSize * t ; // linear

		// contract shape

		for ( i = 0, il = contour.length; i < il; i ++ ) {

			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
			//vert = scalePt( contour[ i ], contourCentroid, bs, false );
			v( vert.x, vert.y,  - z );

		}

		// expand holes

		for ( h = 0, hl = holes.length; h < hl; h++ ) {

			ahole = holes[ h ];
			oneHoleMovements = holesMovements[ h ];

			for ( i = 0, il = ahole.length; i < il; i++ ) {

				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );
				//vert = scalePt( ahole[ i ], holesCentroids[ h ], bs, true );

				v( vert.x, vert.y,  -z );

			}

		}

	}

	bs = bevelSize;

	// Back facing vertices

	for ( i = 0; i < vlen; i ++ ) {

		vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

		if ( !extrudeByPath ) {

			v( vert.x, vert.y, 0 );

		} else {

			// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );

			normal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);
			binormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);

			position2.copy( extrudePts[0] ).add(normal).add(binormal);

			v( position2.x, position2.y, position2.z );

		}

	}

	// Add stepped vertices...
	// Including front facing vertices

	var s;

	for ( s = 1; s <= steps; s ++ ) {

		for ( i = 0; i < vlen; i ++ ) {

			vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

			if ( !extrudeByPath ) {

				v( vert.x, vert.y, amount / steps * s );

			} else {

				// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );

				normal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );
				binormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );

				position2.copy( extrudePts[s] ).add( normal ).add( binormal );

				v( position2.x, position2.y, position2.z );

			}

		}

	}


	// Add bevel segments planes

	//for ( b = 1; b <= bevelSegments; b ++ ) {
	for ( b = bevelSegments - 1; b >= 0; b -- ) {

		t = b / bevelSegments;
		z = bevelThickness * ( 1 - t );
		//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );
		bs = bevelSize * Math.sin ( t * Math.PI/2 ) ;

		// contract shape

		for ( i = 0, il = contour.length; i < il; i ++ ) {

			vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
			v( vert.x, vert.y,  amount + z );

		}

		// expand holes

		for ( h = 0, hl = holes.length; h < hl; h ++ ) {

			ahole = holes[ h ];
			oneHoleMovements = holesMovements[ h ];

			for ( i = 0, il = ahole.length; i < il; i ++ ) {

				vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

				if ( !extrudeByPath ) {

					v( vert.x, vert.y,  amount + z );

				} else {

					v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );

				}

			}

		}

	}

	/* Faces */

	// Top and bottom faces

	buildLidFaces();

	// Sides faces

	buildSideFaces();


	/////  Internal functions

	function buildLidFaces() {

		if ( bevelEnabled ) {

			var layer = 0 ; // steps + 1
			var offset = vlen * layer;

			// Bottom faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 2 ]+ offset, face[ 1 ]+ offset, face[ 0 ] + offset, true );

			}

			layer = steps + bevelSegments * 2;
			offset = vlen * layer;

			// Top faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset, false );

			}

		} else {

			// Bottom faces

			for ( i = 0; i < flen; i++ ) {

				face = faces[ i ];
				f3( face[ 2 ], face[ 1 ], face[ 0 ], true );

			}

			// Top faces

			for ( i = 0; i < flen; i ++ ) {

				face = faces[ i ];
				f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps, false );

			}
		}

	}

	// Create faces for the z-sides of the shape

	function buildSideFaces() {

		var layeroffset = 0;
		sidewalls( contour, layeroffset );
		layeroffset += contour.length;

		for ( h = 0, hl = holes.length;  h < hl; h ++ ) {

			ahole = holes[ h ];
			sidewalls( ahole, layeroffset );

			//, true
			layeroffset += ahole.length;

		}

	}

	function sidewalls( contour, layeroffset ) {

		var j, k;
		i = contour.length;

		while ( --i >= 0 ) {

			j = i;
			k = i - 1;
			if ( k < 0 ) k = contour.length - 1;

			//console.log('b', i,j, i-1, k,vertices.length);

			var s = 0, sl = steps  + bevelSegments * 2;

			for ( s = 0; s < sl; s ++ ) {

				var slen1 = vlen * s;
				var slen2 = vlen * ( s + 1 );

				var a = layeroffset + j + slen1,
					b = layeroffset + k + slen1,
					c = layeroffset + k + slen2,
					d = layeroffset + j + slen2;

				f4( a, b, c, d, contour, s, sl, j, k );

			}
		}

	}


	function v( x, y, z ) {

		scope.vertices.push( new THREE.Vector3( x, y, z ) );

	}

	function f3( a, b, c, isBottom ) {

		a += shapesOffset;
		b += shapesOffset;
		c += shapesOffset;

		// normal, color, material
		scope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );

		var uvs = isBottom ? uvgen.generateBottomUV( scope, shape, options, a, b, c ) : uvgen.generateTopUV( scope, shape, options, a, b, c );

 		scope.faceVertexUvs[ 0 ].push( uvs );

	}

	function f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {

		a += shapesOffset;
		b += shapesOffset;
		c += shapesOffset;
		d += shapesOffset;

 		scope.faces.push( new THREE.Face4( a, b, c, d, null, null, extrudeMaterial ) );

 		var uvs = uvgen.generateSideWallUV( scope, shape, wallContour, options, a, b, c, d,
 		                                    stepIndex, stepsLength, contourIndex1, contourIndex2 );
 		scope.faceVertexUvs[ 0 ].push( uvs );

	}

};

THREE.ExtrudeGeometry.WorldUVGenerator = {

	generateTopUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {
		var ax = geometry.vertices[ indexA ].x,
			ay = geometry.vertices[ indexA ].y,

			bx = geometry.vertices[ indexB ].x,
			by = geometry.vertices[ indexB ].y,

			cx = geometry.vertices[ indexC ].x,
			cy = geometry.vertices[ indexC ].y;

		return [
			new THREE.Vector2( ax, ay ),
			new THREE.Vector2( bx, by ),
			new THREE.Vector2( cx, cy )
		];

	},

	generateBottomUV: function( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC ) {

		return this.generateTopUV( geometry, extrudedShape, extrudeOptions, indexA, indexB, indexC );

	},

	generateSideWallUV: function( geometry, extrudedShape, wallContour, extrudeOptions,
	                              indexA, indexB, indexC, indexD, stepIndex, stepsLength,
	                              contourIndex1, contourIndex2 ) {

		var ax = geometry.vertices[ indexA ].x,
			ay = geometry.vertices[ indexA ].y,
			az = geometry.vertices[ indexA ].z,

			bx = geometry.vertices[ indexB ].x,
			by = geometry.vertices[ indexB ].y,
			bz = geometry.vertices[ indexB ].z,

			cx = geometry.vertices[ indexC ].x,
			cy = geometry.vertices[ indexC ].y,
			cz = geometry.vertices[ indexC ].z,

			dx = geometry.vertices[ indexD ].x,
			dy = geometry.vertices[ indexD ].y,
			dz = geometry.vertices[ indexD ].z;

		if ( Math.abs( ay - by ) < 0.01 ) {
			return [
				new THREE.Vector2( ax, 1 - az ),
				new THREE.Vector2( bx, 1 - bz ),
				new THREE.Vector2( cx, 1 - cz ),
				new THREE.Vector2( dx, 1 - dz )
			];
		} else {
			return [
				new THREE.Vector2( ay, 1 - az ),
				new THREE.Vector2( by, 1 - bz ),
				new THREE.Vector2( cy, 1 - cz ),
				new THREE.Vector2( dy, 1 - dz )
			];
		}
	}
};

THREE.ExtrudeGeometry.__v1 = new THREE.Vector2();
THREE.ExtrudeGeometry.__v2 = new THREE.Vector2();
THREE.ExtrudeGeometry.__v3 = new THREE.Vector2();
THREE.ExtrudeGeometry.__v4 = new THREE.Vector2();
THREE.ExtrudeGeometry.__v5 = new THREE.Vector2();
THREE.ExtrudeGeometry.__v6 = new THREE.Vector2();
/**
 * @author jonobr1 / http://jonobr1.com
 *
 * Creates a one-sided polygonal geometry from a path shape. Similar to
 * ExtrudeGeometry.
 *
 * parameters = {
 *
 *	curveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.
 *
 *	material: <int> // material index for front and back faces
 *	uvGenerator: <Object> // object that provides UV generator functions
 *
 * }
 **/

THREE.ShapeGeometry = function ( shapes, options ) {

	THREE.Geometry.call( this );

	if ( shapes instanceof Array === false ) shapes = [ shapes ];

	this.shapebb = shapes[ shapes.length - 1 ].getBoundingBox();

	this.addShapeList( shapes, options );

	this.computeCentroids();
	this.computeFaceNormals();

};

THREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );

/**
 * Add an array of shapes to THREE.ShapeGeometry.
 */
THREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {

	for ( var i = 0, l = shapes.length; i < l; i++ ) {

		this.addShape( shapes[ i ], options );

	}

	return this;

};

/**
 * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.
 */
THREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {

	if ( options === undefined ) options = {};
	var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;

	var material = options.material;
	var uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;

	var shapebb = this.shapebb;

	//

	var i, l, hole, s;

	var shapesOffset = this.vertices.length;
	var shapePoints = shape.extractPoints( curveSegments );

	var vertices = shapePoints.shape;
	var holes = shapePoints.holes;

	var reverse = !THREE.Shape.Utils.isClockWise( vertices );

	if ( reverse ) {

		vertices = vertices.reverse();

		// Maybe we should also check if holes are in the opposite direction, just to be safe...

		for ( i = 0, l = holes.length; i < l; i++ ) {

			hole = holes[ i ];

			if ( THREE.Shape.Utils.isClockWise( hole ) ) {

				holes[ i ] = hole.reverse();

			}

		}

		reverse = false;

	}

	var faces = THREE.Shape.Utils.triangulateShape( vertices, holes );

	// Vertices

	var contour = vertices;

	for ( i = 0, l = holes.length; i < l; i++ ) {

		hole = holes[ i ];
		vertices = vertices.concat( hole );

	}

	//

	var vert, vlen = vertices.length;
	var face, flen = faces.length;
	var cont, clen = contour.length;

	for ( i = 0; i < vlen; i++ ) {

		vert = vertices[ i ];

		this.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );

	}

	for ( i = 0; i < flen; i++ ) {

		face = faces[ i ];

		var a = face[ 0 ] + shapesOffset;
		var b = face[ 1 ] + shapesOffset;
		var c = face[ 2 ] + shapesOffset;

		this.faces.push( new THREE.Face3( a, b, c, null, null, material ) );
		this.faceVertexUvs[ 0 ].push( uvgen.generateBottomUV( this, shape, options, a, b, c ) );

	}

};
/**
 * @author astrodud / http://astrodud.isgreat.org/
 * @author zz85 / https://github.com/zz85
 * @author bhouston / http://exocortex.com
 */

// points - to create a closed torus, one must use a set of points 
//    like so: [ a, b, c, d, a ], see first is the same as last.
// segments - the number of circumference segments to create
// phiStart - the starting radian
// phiLength - the radian (0 to 2*PI) range of the lathed section
//    2*pi is a closed lathe, less than 2PI is a portion.
THREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {

	THREE.Geometry.call( this );

	segments = segments || 12;
	phiStart = phiStart || 0;
	phiLength = phiLength || 2 * Math.PI;

	var inversePointLength = 1.0 / ( points.length - 1 );
	var inverseSegments = 1.0 / segments;

	for ( var i = 0, il = segments; i <= il; i ++ ) {

		var phi = phiStart + i * inverseSegments * phiLength;

		var c = Math.cos( phi ),
			s = Math.sin( phi );

		for ( var j = 0, jl = points.length; j < jl; j ++ ) {

			var pt = points[ j ];

			var vertex = new THREE.Vector3();

			vertex.x = c * pt.x - s * pt.y;
			vertex.y = s * pt.x + c * pt.y;
			vertex.z = pt.z;

			this.vertices.push( vertex );

		}

	}

	var np = points.length;

	for ( var i = 0, il = segments; i < il; i ++ ) {

		for ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {

			var base = j + np * i;
			var a = base;
			var b = base + np;
			var c = base + 1 + np;
			var d = base + 1;

			this.faces.push( new THREE.Face4( a, b, c, d ) );

			var u0 = i * inverseSegments;
			var v0 = j * inversePointLength;
			var u1 = u0 + inverseSegments;
			var v1 = v0 + inversePointLength;

			this.faceVertexUvs[ 0 ].push( [

				new THREE.Vector2( u0, v0 ), 
				new THREE.Vector2( u1, v0 ),
				new THREE.Vector2( u1, v1 ),
				new THREE.Vector2( u0, v1 )

			] );

		}

	}

	this.mergeVertices();
	this.computeCentroids();
	this.computeFaceNormals();
	this.computeVertexNormals();

};

THREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author mrdoob / http://mrdoob.com/
 * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as
 */

THREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {

	THREE.Geometry.call( this );

	this.width = width;
	this.height = height;

	this.widthSegments = widthSegments || 1;
	this.heightSegments = heightSegments || 1;

	var ix, iz;
	var width_half = width / 2;
	var height_half = height / 2;

	var gridX = this.widthSegments;
	var gridZ = this.heightSegments;

	var gridX1 = gridX + 1;
	var gridZ1 = gridZ + 1;

	var segment_width = this.width / gridX;
	var segment_height = this.height / gridZ;

	var normal = new THREE.Vector3( 0, 0, 1 );

	for ( iz = 0; iz < gridZ1; iz ++ ) {

		for ( ix = 0; ix < gridX1; ix ++ ) {

			var x = ix * segment_width - width_half;
			var y = iz * segment_height - height_half;

			this.vertices.push( new THREE.Vector3( x, - y, 0 ) );

		}

	}

	for ( iz = 0; iz < gridZ; iz ++ ) {

		for ( ix = 0; ix < gridX; ix ++ ) {

			var a = ix + gridX1 * iz;
			var b = ix + gridX1 * ( iz + 1 );
			var c = ( ix + 1 ) + gridX1 * ( iz + 1 );
			var d = ( ix + 1 ) + gridX1 * iz;

			var face = new THREE.Face4( a, b, c, d );
			face.normal.copy( normal );
			face.vertexNormals.push( normal.clone(), normal.clone(), normal.clone(), normal.clone() );

			this.faces.push( face );
			this.faceVertexUvs[ 0 ].push( [
				new THREE.Vector2( ix / gridX, 1 - iz / gridZ ),
				new THREE.Vector2( ix / gridX, 1 - ( iz + 1 ) / gridZ ),
				new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iz + 1 ) / gridZ ),
				new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iz / gridZ )
			] );

		}

	}

	this.computeCentroids();

};

THREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author Kaleb Murphy
 */

THREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {

	THREE.Geometry.call( this );

	innerRadius = innerRadius || 0;
	outerRadius = outerRadius || 50;

	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;

	thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;
	phiSegments = phiSegments !== undefined ? Math.max( 3, phiSegments ) : 8;

	var i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );

	for ( i = 0; i <= phiSegments; i ++ ) { // concentric circles inside ring

		for ( o = 0; o <= thetaSegments; o ++ ) { // number of segments per circle

			var vertex = new THREE.Vector3();
			var segment = thetaStart + o / thetaSegments * thetaLength;

			vertex.x = radius * Math.cos( segment );
			vertex.y = radius * Math.sin( segment );

			this.vertices.push( vertex );
			uvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, - ( vertex.y / radius + 1 ) / 2 + 1 ) );
		}

		radius += radiusStep;

	}

	var n = new THREE.Vector3( 0, 0, 1 );

	for ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring

		var thetaSegment = i * thetaSegments;

		for ( o = 0; o <= thetaSegments; o ++ ) { // number of segments per circle

			var segment = o + thetaSegment;

			var v1 = segment + i;
			var v2 = segment + thetaSegments + i;
			var v3 = segment + thetaSegments + 1 + i;

			this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );
			this.faceVertexUvs[ 0 ].push( [ uvs[ v1 ], uvs[ v2 ], uvs[ v3 ] ]);

			v1 = segment + i;
			v2 = segment + thetaSegments + 1 + i;
			v3 = segment + 1 + i;

			this.faces.push( new THREE.Face3( v1, v2, v3, [ n, n, n ] ) );
			this.faceVertexUvs[ 0 ].push( [ uvs[ v1 ], uvs[ v2 ], uvs[ v3 ] ]);

		}
	}

	this.computeCentroids();
	this.computeFaceNormals();

	this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );

};

THREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {

	THREE.Geometry.call( this );

	this.radius = radius || 50;

	this.widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );
	this.heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );

	phiStart = phiStart !== undefined ? phiStart : 0;
	phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;

	thetaStart = thetaStart !== undefined ? thetaStart : 0;
	thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;

	var x, y, vertices = [], uvs = [];

	for ( y = 0; y <= this.heightSegments; y ++ ) {

		var verticesRow = [];
		var uvsRow = [];

		for ( x = 0; x <= this.widthSegments; x ++ ) {

			var u = x / this.widthSegments;
			var v = y / this.heightSegments;

			var vertex = new THREE.Vector3();
			vertex.x = - this.radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
			vertex.y = this.radius * Math.cos( thetaStart + v * thetaLength );
			vertex.z = this.radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );

			this.vertices.push( vertex );

			verticesRow.push( this.vertices.length - 1 );
			uvsRow.push( new THREE.Vector2( u, 1 - v ) );

		}

		vertices.push( verticesRow );
		uvs.push( uvsRow );

	}

	for ( y = 0; y < this.heightSegments; y ++ ) {

		for ( x = 0; x < this.widthSegments; x ++ ) {

			var v1 = vertices[ y ][ x + 1 ];
			var v2 = vertices[ y ][ x ];
			var v3 = vertices[ y + 1 ][ x ];
			var v4 = vertices[ y + 1 ][ x + 1 ];

			var n1 = this.vertices[ v1 ].clone().normalize();
			var n2 = this.vertices[ v2 ].clone().normalize();
			var n3 = this.vertices[ v3 ].clone().normalize();
			var n4 = this.vertices[ v4 ].clone().normalize();

			var uv1 = uvs[ y ][ x + 1 ].clone();
			var uv2 = uvs[ y ][ x ].clone();
			var uv3 = uvs[ y + 1 ][ x ].clone();
			var uv4 = uvs[ y + 1 ][ x + 1 ].clone();

			if ( Math.abs( this.vertices[ v1 ].y ) === this.radius ) {

				this.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );
				this.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );

			} else if ( Math.abs( this.vertices[ v3 ].y ) === this.radius ) {

				this.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );
				this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );

			} else {

				this.faces.push( new THREE.Face4( v1, v2, v3, v4, [ n1, n2, n3, n4 ] ) );
				this.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3, uv4 ] );

			}

		}

	}

	this.computeCentroids();
	this.computeFaceNormals();

    this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );

};

THREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author alteredq / http://alteredqualia.com/
 *
 * For creating 3D text geometry in three.js
 *
 * Text = 3D Text
 *
 * parameters = {
 *  size: 			<float>, 	// size of the text
 *  height: 		<float>, 	// thickness to extrude text
 *  curveSegments: 	<int>,		// number of points on the curves
 *
 *  font: 			<string>,		// font name
 *  weight: 		<string>,		// font weight (normal, bold)
 *  style: 			<string>,		// font style  (normal, italics)
 *
 *  bevelEnabled:	<bool>,			// turn on bevel
 *  bevelThickness: <float>, 		// how deep into text bevel goes
 *  bevelSize:		<float>, 		// how far from text outline is bevel
 *  }
 *
 */

/*	Usage Examples

	// TextGeometry wrapper

	var text3d = new TextGeometry( text, options );

	// Complete manner

	var textShapes = THREE.FontUtils.generateShapes( text, options );
	var text3d = new ExtrudeGeometry( textShapes, options );

*/


THREE.TextGeometry = function ( text, parameters ) {

	var textShapes = THREE.FontUtils.generateShapes( text, parameters );

	// translate parameters to ExtrudeGeometry API

	parameters.amount = parameters.height !== undefined ? parameters.height : 50;

	// defaults

	if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;
	if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;
	if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;

	THREE.ExtrudeGeometry.call( this, textShapes, parameters );

};

THREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );
/**
 * @author oosmoxiecode
 * @author mrdoob / http://mrdoob.com/
 * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888
 */

THREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {

	THREE.Geometry.call( this );

	var scope = this;

	this.radius = radius || 100;
	this.tube = tube || 40;
	this.radialSegments = radialSegments || 8;
	this.tubularSegments = tubularSegments || 6;
	this.arc = arc || Math.PI * 2;

	var center = new THREE.Vector3(), uvs = [], normals = [];

	for ( var j = 0; j <= this.radialSegments; j ++ ) {

		for ( var i = 0; i <= this.tubularSegments; i ++ ) {

			var u = i / this.tubularSegments * this.arc;
			var v = j / this.radialSegments * Math.PI * 2;

			center.x = this.radius * Math.cos( u );
			center.y = this.radius * Math.sin( u );

			var vertex = new THREE.Vector3();
			vertex.x = ( this.radius + this.tube * Math.cos( v ) ) * Math.cos( u );
			vertex.y = ( this.radius + this.tube * Math.cos( v ) ) * Math.sin( u );
			vertex.z = this.tube * Math.sin( v );

			this.vertices.push( vertex );

			uvs.push( new THREE.Vector2( i / this.tubularSegments, j / this.radialSegments ) );
			normals.push( vertex.clone().sub( center ).normalize() );

		}
	}


	for ( var j = 1; j <= this.radialSegments; j ++ ) {

		for ( var i = 1; i <= this.tubularSegments; i ++ ) {

			var a = ( this.tubularSegments + 1 ) * j + i - 1;
			var b = ( this.tubularSegments + 1 ) * ( j - 1 ) + i - 1;
			var c = ( this.tubularSegments + 1 ) * ( j - 1 ) + i;
			var d = ( this.tubularSegments + 1 ) * j + i;

			var face = new THREE.Face4( a, b, c, d, [ normals[ a ], normals[ b ], normals[ c ], normals[ d ] ] );
			face.normal.add( normals[ a ] );
			face.normal.add( normals[ b ] );
			face.normal.add( normals[ c ] );
			face.normal.add( normals[ d ] );
			face.normal.normalize();

			this.faces.push( face );

			this.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );
		}

	}

	this.computeCentroids();

};

THREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author oosmoxiecode
 * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473
 */

THREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {

	THREE.Geometry.call( this );

	var scope = this;

	this.radius = radius || 100;
	this.tube = tube || 40;
	this.radialSegments = radialSegments || 64;
	this.tubularSegments = tubularSegments || 8;
	this.p = p || 2;
	this.q = q || 3;
	this.heightScale = heightScale || 1;
	this.grid = new Array( this.radialSegments );

	var tang = new THREE.Vector3();
	var n = new THREE.Vector3();
	var bitan = new THREE.Vector3();

	for ( var i = 0; i < this.radialSegments; ++ i ) {

		this.grid[ i ] = new Array( this.tubularSegments );

		for ( var j = 0; j < this.tubularSegments; ++ j ) {

			var u = i / this.radialSegments * 2 * this.p * Math.PI;
			var v = j / this.tubularSegments * 2 * Math.PI;
			var p1 = getPos( u, v, this.q, this.p, this.radius, this.heightScale );
			var p2 = getPos( u + 0.01, v, this.q, this.p, this.radius, this.heightScale );
			var cx, cy;

			tang.subVectors( p2, p1 );
			n.addVectors( p2, p1 );

			bitan.crossVectors( tang, n );
			n.crossVectors( bitan, tang );
			bitan.normalize();
			n.normalize();

			cx = - this.tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.
			cy = this.tube * Math.sin( v );

			p1.x += cx * n.x + cy * bitan.x;
			p1.y += cx * n.y + cy * bitan.y;
			p1.z += cx * n.z + cy * bitan.z;

			this.grid[ i ][ j ] = vert( p1.x, p1.y, p1.z );

		}

	}

	for ( var i = 0; i < this.radialSegments; ++ i ) {

		for ( var j = 0; j < this.tubularSegments; ++ j ) {

			var ip = ( i + 1 ) % this.radialSegments;
			var jp = ( j + 1 ) % this.tubularSegments;

			var a = this.grid[ i ][ j ];
			var b = this.grid[ ip ][ j ];
			var c = this.grid[ ip ][ jp ];
			var d = this.grid[ i ][ jp ];

			var uva = new THREE.Vector2( i / this.radialSegments, j / this.tubularSegments );
			var uvb = new THREE.Vector2( ( i + 1 ) / this.radialSegments, j / this.tubularSegments );
			var uvc = new THREE.Vector2( ( i + 1 ) / this.radialSegments, ( j + 1 ) / this.tubularSegments );
			var uvd = new THREE.Vector2( i / this.radialSegments, ( j + 1 ) / this.tubularSegments );

			this.faces.push( new THREE.Face4( a, b, c, d ) );
			this.faceVertexUvs[ 0 ].push( [ uva,uvb,uvc, uvd ] );

		}
	}

	this.computeCentroids();
	this.computeFaceNormals();
	this.computeVertexNormals();

	function vert( x, y, z ) {

		return scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;

	}

	function getPos( u, v, in_q, in_p, radius, heightScale ) {

		var cu = Math.cos( u );
		var cv = Math.cos( v );
		var su = Math.sin( u );
		var quOverP = in_q / in_p * u;
		var cs = Math.cos( quOverP );

		var tx = radius * ( 2 + cs ) * 0.5 * cu;
		var ty = radius * ( 2 + cs ) * su * 0.5;
		var tz = heightScale * radius * Math.sin( quOverP ) * 0.5;

		return new THREE.Vector3( tx, ty, tz );

	}

};

THREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author WestLangley / https://github.com/WestLangley
 * @author zz85 / https://github.com/zz85
 * @author miningold / https://github.com/miningold
 *
 * Modified from the TorusKnotGeometry by @oosmoxiecode
 *
 * Creates a tube which extrudes along a 3d spline
 *
 * Uses parallel transport frames as described in
 * http://www.cs.indiana.edu/pub/techreports/TR425.pdf
 */

THREE.TubeGeometry = function( path, segments, radius, radiusSegments, closed, debug ) {

	THREE.Geometry.call( this );

	this.path = path;
	this.segments = segments || 64;
	this.radius = radius || 1;
	this.radiusSegments = radiusSegments || 8;
	this.closed = closed || false;

	if ( debug ) this.debug = new THREE.Object3D();

	this.grid = [];

	var scope = this,

		tangent,
		normal,
		binormal,

		numpoints = this.segments + 1,

		x, y, z,
		tx, ty, tz,
		u, v,

		cx, cy,
		pos, pos2 = new THREE.Vector3(),
		i, j,
		ip, jp,
		a, b, c, d,
		uva, uvb, uvc, uvd;

	var frames = new THREE.TubeGeometry.FrenetFrames( this.path, this.segments, this.closed ),
		tangents = frames.tangents,
		normals = frames.normals,
		binormals = frames.binormals;

	// proxy internals
	this.tangents = tangents;
	this.normals = normals;
	this.binormals = binormals;

	function vert( x, y, z ) {

		return scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;

	}


	// consruct the grid

	for ( i = 0; i < numpoints; i++ ) {

		this.grid[ i ] = [];

		u = i / ( numpoints - 1 );

		pos = path.getPointAt( u );

		tangent = tangents[ i ];
		normal = normals[ i ];
		binormal = binormals[ i ];

		if ( this.debug ) {

			this.debug.add( new THREE.ArrowHelper(tangent, pos, radius, 0x0000ff ) );
			this.debug.add( new THREE.ArrowHelper(normal, pos, radius, 0xff0000 ) );
			this.debug.add( new THREE.ArrowHelper(binormal, pos, radius, 0x00ff00 ) );

		}

		for ( j = 0; j < this.radiusSegments; j++ ) {

			v = j / this.radiusSegments * 2 * Math.PI;

			cx = -this.radius * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.
			cy = this.radius * Math.sin( v );

			pos2.copy( pos );
			pos2.x += cx * normal.x + cy * binormal.x;
			pos2.y += cx * normal.y + cy * binormal.y;
			pos2.z += cx * normal.z + cy * binormal.z;

			this.grid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );

		}
	}


	// construct the mesh

	for ( i = 0; i < this.segments; i++ ) {

		for ( j = 0; j < this.radiusSegments; j++ ) {

			ip = ( this.closed ) ? (i + 1) % this.segments : i + 1;
			jp = (j + 1) % this.radiusSegments;

			a = this.grid[ i ][ j ];		// *** NOT NECESSARILY PLANAR ! ***
			b = this.grid[ ip ][ j ];
			c = this.grid[ ip ][ jp ];
			d = this.grid[ i ][ jp ];

			uva = new THREE.Vector2( i / this.segments, j / this.radiusSegments );
			uvb = new THREE.Vector2( ( i + 1 ) / this.segments, j / this.radiusSegments );
			uvc = new THREE.Vector2( ( i + 1 ) / this.segments, ( j + 1 ) / this.radiusSegments );
			uvd = new THREE.Vector2( i / this.segments, ( j + 1 ) / this.radiusSegments );

			this.faces.push( new THREE.Face4( a, b, c, d ) );
			this.faceVertexUvs[ 0 ].push( [ uva, uvb, uvc, uvd ] );

		}
	}

	this.computeCentroids();
	this.computeFaceNormals();
	this.computeVertexNormals();

};

THREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );


// For computing of Frenet frames, exposing the tangents, normals and binormals the spline
THREE.TubeGeometry.FrenetFrames = function(path, segments, closed) {

	var	tangent = new THREE.Vector3(),
		normal = new THREE.Vector3(),
		binormal = new THREE.Vector3(),

		tangents = [],
		normals = [],
		binormals = [],

		vec = new THREE.Vector3(),
		mat = new THREE.Matrix4(),

		numpoints = segments + 1,
		theta,
		epsilon = 0.0001,
		smallest,

		tx, ty, tz,
		i, u, v;


	// expose internals
	this.tangents = tangents;
	this.normals = normals;
	this.binormals = binormals;

	// compute the tangent vectors for each segment on the path

	for ( i = 0; i < numpoints; i++ ) {

		u = i / ( numpoints - 1 );

		tangents[ i ] = path.getTangentAt( u );
		tangents[ i ].normalize();

	}

	initialNormal3();

	function initialNormal1(lastBinormal) {
		// fixed start binormal. Has dangers of 0 vectors
		normals[ 0 ] = new THREE.Vector3();
		binormals[ 0 ] = new THREE.Vector3();
		if (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );
		normals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();
		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();
	}

	function initialNormal2() {

		// This uses the Frenet-Serret formula for deriving binormal
		var t2 = path.getTangentAt( epsilon );

		normals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();
		binormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );

		normals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent
		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();

	}

	function initialNormal3() {
		// select an initial normal vector perpenicular to the first tangent vector,
		// and in the direction of the smallest tangent xyz component

		normals[ 0 ] = new THREE.Vector3();
		binormals[ 0 ] = new THREE.Vector3();
		smallest = Number.MAX_VALUE;
		tx = Math.abs( tangents[ 0 ].x );
		ty = Math.abs( tangents[ 0 ].y );
		tz = Math.abs( tangents[ 0 ].z );

		if ( tx <= smallest ) {
			smallest = tx;
			normal.set( 1, 0, 0 );
		}

		if ( ty <= smallest ) {
			smallest = ty;
			normal.set( 0, 1, 0 );
		}

		if ( tz <= smallest ) {
			normal.set( 0, 0, 1 );
		}

		vec.crossVectors( tangents[ 0 ], normal ).normalize();

		normals[ 0 ].crossVectors( tangents[ 0 ], vec );
		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );
	}


	// compute the slowly-varying normal and binormal vectors for each segment on the path

	for ( i = 1; i < numpoints; i++ ) {

		normals[ i ] = normals[ i-1 ].clone();

		binormals[ i ] = binormals[ i-1 ].clone();

		vec.crossVectors( tangents[ i-1 ], tangents[ i ] );

		if ( vec.length() > epsilon ) {

			vec.normalize();

			theta = Math.acos( tangents[ i-1 ].dot( tangents[ i ] ) );

			normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );

		}

		binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

	}


	// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same

	if ( closed ) {

		theta = Math.acos( normals[ 0 ].dot( normals[ numpoints-1 ] ) );
		theta /= ( numpoints - 1 );

		if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints-1 ] ) ) > 0 ) {

			theta = -theta;

		}

		for ( i = 1; i < numpoints; i++ ) {

			// twist a little...
			normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );
			binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

		}

	}
};
/**
 * @author clockworkgeek / https://github.com/clockworkgeek
 * @author timothypratley / https://github.com/timothypratley
 */

THREE.PolyhedronGeometry = function ( vertices, faces, radius, detail ) {

	THREE.Geometry.call( this );

	radius = radius || 1;
	detail = detail || 0;

	var that = this;

	for ( var i = 0, l = vertices.length; i < l; i ++ ) {

		prepare( new THREE.Vector3( vertices[ i ][ 0 ], vertices[ i ][ 1 ], vertices[ i ][ 2 ] ) );

	}

	var midpoints = [], p = this.vertices;

	for ( var i = 0, l = faces.length; i < l; i ++ ) {

		make( p[ faces[ i ][ 0 ] ], p[ faces[ i ][ 1 ] ], p[ faces[ i ][ 2 ] ], detail );

	}

	this.mergeVertices();

	// Apply radius

	for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {

		this.vertices[ i ].multiplyScalar( radius );

	}


	// Project vector onto sphere's surface

	function prepare( vector ) {

		var vertex = vector.normalize().clone();
		vertex.index = that.vertices.push( vertex ) - 1;

		// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.

		var u = azimuth( vector ) / 2 / Math.PI + 0.5;
		var v = inclination( vector ) / Math.PI + 0.5;
		vertex.uv = new THREE.Vector2( u, 1 - v );

		return vertex;

	}


	// Approximate a curved face with recursively sub-divided triangles.

	function make( v1, v2, v3, detail ) {

		if ( detail < 1 ) {

			var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );
			face.centroid.add( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );
			face.normal = face.centroid.clone().normalize();
			that.faces.push( face );

			var azi = azimuth( face.centroid );
			that.faceVertexUvs[ 0 ].push( [
				correctUV( v1.uv, v1, azi ),
				correctUV( v2.uv, v2, azi ),
				correctUV( v3.uv, v3, azi )
			] );

		} else {

			detail -= 1;

			// split triangle into 4 smaller triangles

			make( v1, midpoint( v1, v2 ), midpoint( v1, v3 ), detail ); // top quadrant
			make( midpoint( v1, v2 ), v2, midpoint( v2, v3 ), detail ); // left quadrant
			make( midpoint( v1, v3 ), midpoint( v2, v3 ), v3, detail ); // right quadrant
			make( midpoint( v1, v2 ), midpoint( v2, v3 ), midpoint( v1, v3 ), detail ); // center quadrant

		}

	}

	function midpoint( v1, v2 ) {

		if ( !midpoints[ v1.index ] ) midpoints[ v1.index ] = [];
		if ( !midpoints[ v2.index ] ) midpoints[ v2.index ] = [];

		var mid = midpoints[ v1.index ][ v2.index ];

		if ( mid === undefined ) {

			// generate mean point and project to surface with prepare()

			midpoints[ v1.index ][ v2.index ] = midpoints[ v2.index ][ v1.index ] = mid = prepare(
				new THREE.Vector3().addVectors( v1, v2 ).divideScalar( 2 )
			);
		}

		return mid;

	}


	// Angle around the Y axis, counter-clockwise when looking from above.

	function azimuth( vector ) {

		return Math.atan2( vector.z, -vector.x );

	}


	// Angle above the XZ plane.

	function inclination( vector ) {

		return Math.atan2( -vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );

	}


	// Texture fixing helper. Spheres have some odd behaviours.

	function correctUV( uv, vector, azimuth ) {

		if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );
		if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );
		return uv;

	}

	this.computeCentroids();

    this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );

};

THREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author timothypratley / https://github.com/timothypratley
 */

THREE.IcosahedronGeometry = function ( radius, detail ) {

	var t = ( 1 + Math.sqrt( 5 ) ) / 2;

	var vertices = [
		[ -1,  t,  0 ], [  1, t, 0 ], [ -1, -t,  0 ], [  1, -t,  0 ],
		[  0, -1,  t ], [  0, 1, t ], [  0, -1, -t ], [  0,  1, -t ],
		[  t,  0, -1 ], [  t, 0, 1 ], [ -t,  0, -1 ], [ -t,  0,  1 ]
	];

	var faces = [
		[ 0, 11,  5 ], [ 0,  5,  1 ], [  0,  1,  7 ], [  0,  7, 10 ], [  0, 10, 11 ],
		[ 1,  5,  9 ], [ 5, 11,  4 ], [ 11, 10,  2 ], [ 10,  7,  6 ], [  7,  1,  8 ],
		[ 3,  9,  4 ], [ 3,  4,  2 ], [  3,  2,  6 ], [  3,  6,  8 ], [  3,  8,  9 ],
		[ 4,  9,  5 ], [ 2,  4, 11 ], [  6,  2, 10 ], [  8,  6,  7 ], [  9,  8,  1 ]
	];

	THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );

};

THREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author timothypratley / https://github.com/timothypratley
 */

THREE.OctahedronGeometry = function ( radius, detail ) {

	var vertices = [
		[ 1, 0, 0 ], [ -1, 0, 0 ], [ 0, 1, 0 ], [ 0, -1, 0 ], [ 0, 0, 1 ], [ 0, 0, -1 ]
	];

	var faces = [
		[ 0, 2, 4 ], [ 0, 4, 3 ], [ 0, 3, 5 ], [ 0, 5, 2 ], [ 1, 2, 5 ], [ 1, 5, 3 ], [ 1, 3, 4 ], [ 1, 4, 2 ]
	];

	THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );
};

THREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author timothypratley / https://github.com/timothypratley
 */

THREE.TetrahedronGeometry = function ( radius, detail ) {

	var vertices = [
		[ 1,  1,  1 ], [ -1, -1, 1 ], [ -1, 1, -1 ], [ 1, -1, -1 ]
	];

	var faces = [
		[ 2, 1, 0 ], [ 0, 3, 2 ], [ 1, 3, 0 ], [ 2, 3, 1 ]
	];

	THREE.PolyhedronGeometry.call( this, vertices, faces, radius, detail );

};

THREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author zz85 / https://github.com/zz85
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
 *
 * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements, useTris );
 *
 */

THREE.ParametricGeometry = function ( func, slices, stacks, useTris ) {

	THREE.Geometry.call( this );

	var verts = this.vertices;
	var faces = this.faces;
	var uvs = this.faceVertexUvs[ 0 ];

	useTris = (useTris === undefined) ? false : useTris;

	var i, il, j, p;
	var u, v;

	var stackCount = stacks + 1;
	var sliceCount = slices + 1;

	for ( i = 0; i <= stacks; i ++ ) {

		v = i / stacks;

		for ( j = 0; j <= slices; j ++ ) {

			u = j / slices;

			p = func( u, v );
			verts.push( p );

		}
	}

	var a, b, c, d;
	var uva, uvb, uvc, uvd;

	for ( i = 0; i < stacks; i ++ ) {

		for ( j = 0; j < slices; j ++ ) {

			a = i * sliceCount + j;
			b = i * sliceCount + j + 1;
			c = (i + 1) * sliceCount + j;
			d = (i + 1) * sliceCount + j + 1;

			uva = new THREE.Vector2( j / slices, i / stacks );
			uvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );
			uvc = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );
			uvd = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );

			if ( useTris ) {

				faces.push( new THREE.Face3( a, b, c ) );
				faces.push( new THREE.Face3( b, d, c ) );

				uvs.push( [ uva, uvb, uvc ] );
				uvs.push( [ uvb, uvd, uvc ] );

			} else {

				faces.push( new THREE.Face4( a, b, d, c ) );
				uvs.push( [ uva, uvb, uvd, uvc ] );

			}

		}

	}

	// console.log(this);

	// magic bullet
	// var diff = this.mergeVertices();
	// console.log('removed ', diff, ' vertices by merging');

	this.computeCentroids();
	this.computeFaceNormals();
	this.computeVertexNormals();

};

THREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author qiao / https://github.com/qiao
 * @fileoverview This is a convex hull generator using the incremental method. 
 * The complexity is O(n^2) where n is the number of vertices.
 * O(nlogn) algorithms do exist, but they are much more complicated.
 *
 * Benchmark: 
 *
 *  Platform: CPU: P7350 @2.00GHz Engine: V8
 *
 *  Num Vertices	Time(ms)
 *
 *     10           1
 *     20           3
 *     30           19
 *     40           48
 *     50           107
 */

THREE.ConvexGeometry = function( vertices ) {

	THREE.Geometry.call( this );

	var faces = [ [ 0, 1, 2 ], [ 0, 2, 1 ] ]; 

	for ( var i = 3; i < vertices.length; i++ ) {

		addPoint( i );

	}


	function addPoint( vertexId ) {

		var vertex = vertices[ vertexId ].clone();

		var mag = vertex.length();
		vertex.x += mag * randomOffset();
		vertex.y += mag * randomOffset();
		vertex.z += mag * randomOffset();

		var hole = [];

		for ( var f = 0; f < faces.length; ) {

			var face = faces[ f ];

			// for each face, if the vertex can see it,
			// then we try to add the face's edges into the hole.
			if ( visible( face, vertex ) ) {

				for ( var e = 0; e < 3; e++ ) {

					var edge = [ face[ e ], face[ ( e + 1 ) % 3 ] ];
					var boundary = true;

					// remove duplicated edges.
					for ( var h = 0; h < hole.length; h++ ) {

						if ( equalEdge( hole[ h ], edge ) ) {

							hole[ h ] = hole[ hole.length - 1 ];
							hole.pop();
							boundary = false;
							break;

						}

					}

					if ( boundary ) {

						hole.push( edge );

					}

				}

				// remove faces[ f ]
				faces[ f ] = faces[ faces.length - 1 ];
				faces.pop();

			} else { // not visible

				f++;

			}
		}

		// construct the new faces formed by the edges of the hole and the vertex
		for ( var h = 0; h < hole.length; h++ ) {

			faces.push( [ 
				hole[ h ][ 0 ],
				hole[ h ][ 1 ],
				vertexId
			] );

		}
	}

	/**
	 * Whether the face is visible from the vertex
	 */
	function visible( face, vertex ) {

		var va = vertices[ face[ 0 ] ];
		var vb = vertices[ face[ 1 ] ];
		var vc = vertices[ face[ 2 ] ];

		var n = normal( va, vb, vc );

		// distance from face to origin
		var dist = n.dot( va );

		return n.dot( vertex ) >= dist; 

	}

	/**
	 * Face normal
	 */
	function normal( va, vb, vc ) {

		var cb = new THREE.Vector3();
		var ab = new THREE.Vector3();

		cb.subVectors( vc, vb );
		ab.subVectors( va, vb );
		cb.cross( ab );

		cb.normalize();

		return cb;

	}

	/**
	 * Detect whether two edges are equal.
	 * Note that when constructing the convex hull, two same edges can only
	 * be of the negative direction.
	 */
	function equalEdge( ea, eb ) {

		return ea[ 0 ] === eb[ 1 ] && ea[ 1 ] === eb[ 0 ]; 

	}

	/**
	 * Create a random offset between -1e-6 and 1e-6.
	 */
	function randomOffset() {

		return ( Math.random() - 0.5 ) * 2 * 1e-6;

	}


	/**
	 * XXX: Not sure if this is the correct approach. Need someone to review.
	 */
	function vertexUv( vertex ) {

		var mag = vertex.length();
		return new THREE.Vector2( vertex.x / mag, vertex.y / mag );

	}

	// Push vertices into `this.vertices`, skipping those inside the hull
	var id = 0;
	var newId = new Array( vertices.length ); // map from old vertex id to new id

	for ( var i = 0; i < faces.length; i++ ) {

		 var face = faces[ i ];

		 for ( var j = 0; j < 3; j++ ) {

				if ( newId[ face[ j ] ] === undefined ) {

						newId[ face[ j ] ] = id++;
						this.vertices.push( vertices[ face[ j ] ] );

				}

				face[ j ] = newId[ face[ j ] ];

		 }

	}

	// Convert faces into instances of THREE.Face3
	for ( var i = 0; i < faces.length; i++ ) {

		this.faces.push( new THREE.Face3( 
				faces[ i ][ 0 ],
				faces[ i ][ 1 ],
				faces[ i ][ 2 ]
		) );

	}

	// Compute UVs
	for ( var i = 0; i < this.faces.length; i++ ) {

		var face = this.faces[ i ];

		this.faceVertexUvs[ 0 ].push( [
			vertexUv( this.vertices[ face.a ] ),
			vertexUv( this.vertices[ face.b ] ),
			vertexUv( this.vertices[ face.c ])
		] );

	}


	this.computeCentroids();
	this.computeFaceNormals();
	this.computeVertexNormals();

};

THREE.ConvexGeometry.prototype = Object.create( THREE.Geometry.prototype );
/**
 * @author sroucheray / http://sroucheray.org/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.AxisHelper = function ( size ) {

	var geometry = new THREE.Geometry();

	geometry.vertices.push(
		new THREE.Vector3(), new THREE.Vector3( size || 1, 0, 0 ),
		new THREE.Vector3(), new THREE.Vector3( 0, size || 1, 0 ),
		new THREE.Vector3(), new THREE.Vector3( 0, 0, size || 1 )
	);

	geometry.colors.push(
		new THREE.Color( 0xff0000 ), new THREE.Color( 0xffaa00 ),
		new THREE.Color( 0x00ff00 ), new THREE.Color( 0xaaff00 ),
		new THREE.Color( 0x0000ff ), new THREE.Color( 0x00aaff )
	);

	var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );

	THREE.Line.call( this, geometry, material, THREE.LinePieces );

};

THREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );
/**
 * @author WestLangley / http://github.com/WestLangley
 * @author zz85 / https://github.com/zz85
 * @author bhouston / https://exocortex.com
 *
 * Creates an arrow for visualizing directions
 *
 * Parameters:
 *  dir - Vector3
 *  origin - Vector3
 *  length - Number
 *  hex - color in hex value
 */

THREE.ArrowHelper = function ( dir, origin, length, hex ) {

	THREE.Object3D.call( this );

	if ( length === undefined ) length = 20;
	if ( hex === undefined ) hex = 0xffff00;

	var lineGeometry = new THREE.Geometry();
	lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ) );
	lineGeometry.vertices.push( new THREE.Vector3( 0, 1, 0 ) );

	this.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: hex } ) );
	this.add( this.line );

	var coneGeometry = new THREE.CylinderGeometry( 0, 0.05, 0.25, 5, 1 );

	this.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: hex } ) );
	this.cone.position.set( 0, 1, 0 );
	this.add( this.cone );

	if ( origin instanceof THREE.Vector3 ) this.position = origin;

	this.setDirection( dir );
	this.setLength( length );

};

THREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );

THREE.ArrowHelper.prototype.setDirection = function ( dir ) {

    var d = THREE.ArrowHelper.__v1.copy( dir ).normalize();

    if ( d.y > 0.999 ) {

        this.rotation.set( 0, 0, 0 );
 
    } else if ( d.y < - 0.999 ) {

        this.rotation.set( Math.PI, 0, 0 );

    } else {

	    var axis = THREE.ArrowHelper.__v2.set( d.z, 0, - d.x ).normalize();
	    var radians = Math.acos( d.y );
	    var quaternion = THREE.ArrowHelper.__q1.setFromAxisAngle( axis, radians );

	    this.rotation.setEulerFromQuaternion( quaternion, this.eulerOrder );

	}

};

THREE.ArrowHelper.prototype.setLength = function ( length ) {

	this.scale.set( length, length, length );

};

THREE.ArrowHelper.prototype.setColor = function ( hex ) {

	this.line.material.color.setHex( hex );
	this.cone.material.color.setHex( hex );

};

THREE.ArrowHelper.__v1 = new THREE.Vector3();
THREE.ArrowHelper.__v2 = new THREE.Vector3();
THREE.ArrowHelper.__q1 = new THREE.Quaternion();
/**
 * @author alteredq / http://alteredqualia.com/
 *
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
 */

THREE.CameraHelper = function ( camera ) {

	THREE.Line.call( this );

	var scope = this;

	this.geometry = new THREE.Geometry();
	this.material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );
	this.type = THREE.LinePieces;

	this.matrixWorld = camera.matrixWorld;
	this.matrixAutoUpdate = false;

	this.pointMap = {};

	// colors

	var hexFrustum = 0xffaa00;
	var hexCone = 0xff0000;
	var hexUp = 0x00aaff;
	var hexTarget = 0xffffff;
	var hexCross = 0x333333;

	// near

	addLine( "n1", "n2", hexFrustum );
	addLine( "n2", "n4", hexFrustum );
	addLine( "n4", "n3", hexFrustum );
	addLine( "n3", "n1", hexFrustum );

	// far

	addLine( "f1", "f2", hexFrustum );
	addLine( "f2", "f4", hexFrustum );
	addLine( "f4", "f3", hexFrustum );
	addLine( "f3", "f1", hexFrustum );

	// sides

	addLine( "n1", "f1", hexFrustum );
	addLine( "n2", "f2", hexFrustum );
	addLine( "n3", "f3", hexFrustum );
	addLine( "n4", "f4", hexFrustum );

	// cone

	addLine( "p", "n1", hexCone );
	addLine( "p", "n2", hexCone );
	addLine( "p", "n3", hexCone );
	addLine( "p", "n4", hexCone );

	// up

	addLine( "u1", "u2", hexUp );
	addLine( "u2", "u3", hexUp );
	addLine( "u3", "u1", hexUp );

	// target

	addLine( "c", "t", hexTarget );
	addLine( "p", "c", hexCross );

	// cross

	addLine( "cn1", "cn2", hexCross );
	addLine( "cn3", "cn4", hexCross );

	addLine( "cf1", "cf2", hexCross );
	addLine( "cf3", "cf4", hexCross );

	this.camera = camera;

	function addLine( a, b, hex ) {

		addPoint( a, hex );
		addPoint( b, hex );

	}

	function addPoint( id, hex ) {

		scope.geometry.vertices.push( new THREE.Vector3() );
		scope.geometry.colors.push( new THREE.Color( hex ) );

		if ( scope.pointMap[ id ] === undefined ) scope.pointMap[ id ] = [];

		scope.pointMap[ id ].push( scope.geometry.vertices.length - 1 );

	}

	this.update( camera );

};

THREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );

THREE.CameraHelper.prototype.update = function () {

	var scope = this;

	var w = 1, h = 1;

	// we need just camera projection matrix
	// world matrix must be identity

	THREE.CameraHelper.__c.projectionMatrix.copy( this.camera.projectionMatrix );

	// center / target

	setPoint( "c", 0, 0, -1 );
	setPoint( "t", 0, 0,  1 );

	// near

	setPoint( "n1", -w, -h, -1 );
	setPoint( "n2",  w, -h, -1 );
	setPoint( "n3", -w,  h, -1 );
	setPoint( "n4",  w,  h, -1 );

	// far

	setPoint( "f1", -w, -h, 1 );
	setPoint( "f2",  w, -h, 1 );
	setPoint( "f3", -w,  h, 1 );
	setPoint( "f4",  w,  h, 1 );

	// up

	setPoint( "u1",  w * 0.7, h * 1.1, -1 );
	setPoint( "u2", -w * 0.7, h * 1.1, -1 );
	setPoint( "u3",        0, h * 2,   -1 );

	// cross

	setPoint( "cf1", -w,  0, 1 );
	setPoint( "cf2",  w,  0, 1 );
	setPoint( "cf3",  0, -h, 1 );
	setPoint( "cf4",  0,  h, 1 );

	setPoint( "cn1", -w,  0, -1 );
	setPoint( "cn2",  w,  0, -1 );
	setPoint( "cn3",  0, -h, -1 );
	setPoint( "cn4",  0,  h, -1 );

	function setPoint( point, x, y, z ) {

		THREE.CameraHelper.__v.set( x, y, z );
		THREE.CameraHelper.__projector.unprojectVector( THREE.CameraHelper.__v, THREE.CameraHelper.__c );

		var points = scope.pointMap[ point ];

		if ( points !== undefined ) {

			for ( var i = 0, il = points.length; i < il; i ++ ) {

				scope.geometry.vertices[ points[ i ] ].copy( THREE.CameraHelper.__v );

			}

		}

	}

	this.geometry.verticesNeedUpdate = true;

};

THREE.CameraHelper.__projector = new THREE.Projector();
THREE.CameraHelper.__v = new THREE.Vector3();
THREE.CameraHelper.__c = new THREE.Camera();

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.DirectionalLightHelper = function ( light, sphereSize ) {

	THREE.Object3D.call( this );

	this.light = light;

	var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );
	var material = new THREE.MeshBasicMaterial( { fog: false, wireframe: true } );
	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	this.lightSphere = new THREE.Mesh( geometry, material );
	this.lightSphere.position = this.light.position;
	this.add( this.lightSphere );

	/*
	this.targetSphere = new THREE.Mesh( geometry, material );
	this.targetSphere.position = this.light.target.position;
	this.add( this.targetSphere );
	*/

	geometry = new THREE.Geometry();
	geometry.vertices.push( this.light.position );
	geometry.vertices.push( this.light.target.position );
	geometry.computeLineDistances();

	material = new THREE.LineDashedMaterial( { dashSize: 4, gapSize: 4, opacity: 0.75, transparent: true, fog: false } );
	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	this.targetLine = new THREE.Line( geometry, material );
	this.add( this.targetLine );

}

THREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );

THREE.DirectionalLightHelper.prototype.update = function () {

	this.lightSphere.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	this.targetLine.geometry.computeLineDistances();
	this.targetLine.geometry.verticesNeedUpdate = true;
	this.targetLine.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

};

/**
 * @author mrdoob / http://mrdoob.com/
 */

THREE.GridHelper = function ( size, step ) {

	var geometry = new THREE.Geometry();
	var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );
	var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0x888888 );

	for ( var i = - size; i <= size; i += step ) {

		geometry.vertices.push( new THREE.Vector3( -size, 0, i ) );
		geometry.vertices.push( new THREE.Vector3(  size, 0, i ) );

		geometry.vertices.push( new THREE.Vector3( i, 0, -size ) );
		geometry.vertices.push( new THREE.Vector3( i, 0,  size ) );

		var color = i === 0 ? color1 : color2;

		geometry.colors.push( color, color, color, color );

	}

	THREE.Line.call( this, geometry, material, THREE.LinePieces );

};

THREE.GridHelper.prototype = Object.create( THREE.Line.prototype );
/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.HemisphereLightHelper = function ( light, sphereSize, arrowLength, domeSize ) {

	THREE.Object3D.call( this );

	this.light = light;

	var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );
	geometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );

	for ( var i = 0, il = 8; i < il; i ++ ) {

		geometry.faces[ i ].materialIndex = i < 4 ? 0 : 1;

	}

	var materialSky = new THREE.MeshBasicMaterial( { fog: false, wireframe: true } );
	materialSky.color.copy( light.color ).multiplyScalar( light.intensity );

	var materialGround = new THREE.MeshBasicMaterial( { fog: false, wireframe: true } );
	materialGround.color.copy( light.groundColor ).multiplyScalar( light.intensity );

	this.lightSphere = new THREE.Mesh( geometry, new THREE.MeshFaceMaterial( [ materialSky, materialGround ] ) );
	this.lightSphere.position = light.position;
	this.lightSphere.lookAt( new THREE.Vector3() );
	this.add( this.lightSphere );

};

THREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );

THREE.HemisphereLightHelper.prototype.update = function () {

	this.lightSphere.lookAt( new THREE.Vector3() );

	this.lightSphere.material.materials[ 0 ].color.copy( this.light.color ).multiplyScalar( this.light.intensity );
	this.lightSphere.material.materials[ 1 ].color.copy( this.light.groundColor ).multiplyScalar( this.light.intensity );

};

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.PointLightHelper = function ( light, sphereSize ) {

	THREE.Object3D.call( this );

	this.light = light;

	var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );
	var material = new THREE.MeshBasicMaterial( { fog: false, wireframe: true } );
	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	this.lightSphere = new THREE.Mesh( geometry, material );
	this.lightSphere.position = this.light.position;
	this.add( this.lightSphere );

	/*
	var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );
	var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );

	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );

	var d = light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.scale.set( d, d, d );

	}

	this.add( this.lightDistance );
	*/

};

THREE.PointLightHelper.prototype = Object.create( THREE.Object3D.prototype );

THREE.PointLightHelper.prototype.update = function () {

	this.lightSphere.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	/*
	this.lightDistance.material.color.copy( this.color );

	var d = this.light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.visible = true;
		this.lightDistance.scale.set( d, d, d );

	}
	*/

};

/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */

THREE.SpotLightHelper = function ( light, sphereSize ) {

	THREE.Object3D.call( this );

	this.light = light;

	var geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );
	var material = new THREE.MeshBasicMaterial( { fog: false, wireframe: true } );
	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	this.lightSphere = new THREE.Mesh( geometry, material );
	this.lightSphere.position = this.light.position;
	this.add( this.lightSphere );

	geometry = new THREE.CylinderGeometry( 0.0001, 1, 1, 8, 1, true );
	geometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ).translate( new THREE.Vector3( 0, -0.5, 0 ) ) );

	material = new THREE.MeshBasicMaterial( { fog: false, wireframe: true, opacity: 0.3, transparent: true } );
	material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

	this.lightCone = new THREE.Mesh( geometry, material );
	this.lightCone.position = this.light.position;

	var coneLength = light.distance ? light.distance : 10000;
	var coneWidth = coneLength * Math.tan( light.angle * 0.5 ) * 2;

	this.lightCone.scale.set( coneWidth, coneWidth, coneLength );
	this.lightCone.lookAt( this.light.target.position );

	this.add( this.lightCone );

};

THREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );

THREE.SpotLightHelper.prototype.update = function () {

	var coneLength = this.light.distance ? this.light.distance : 10000;
	var coneWidth = coneLength * Math.tan( this.light.angle * 0.5 ) * 2;

	this.lightCone.scale.set( coneWidth, coneWidth, coneLength );
	this.lightCone.lookAt( this.light.target.position );

	this.lightSphere.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );
	this.lightCone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.ImmediateRenderObject = function () {

	THREE.Object3D.call( this );

	this.render = function ( renderCallback ) { };

};

THREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.LensFlare = function ( texture, size, distance, blending, color ) {

	THREE.Object3D.call( this );

	this.lensFlares = [];

	this.positionScreen = new THREE.Vector3();
	this.customUpdateCallback = undefined;

	if( texture !== undefined ) {

		this.add( texture, size, distance, blending, color );

	}

};

THREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );


/*
 * Add: adds another flare
 */

THREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {

	if( size === undefined ) size = -1;
	if( distance === undefined ) distance = 0;
	if( opacity === undefined ) opacity = 1;
	if( color === undefined ) color = new THREE.Color( 0xffffff );
	if( blending === undefined ) blending = THREE.NormalBlending;

	distance = Math.min( distance, Math.max( 0, distance ) );

	this.lensFlares.push( { texture: texture, 			// THREE.Texture
		                    size: size, 				// size in pixels (-1 = use texture.width)
		                    distance: distance, 		// distance (0-1) from light source (0=at light source)
		                    x: 0, y: 0, z: 0,			// screen position (-1 => 1) z = 0 is ontop z = 1 is back
		                    scale: 1, 					// scale
		                    rotation: 1, 				// rotation
		                    opacity: opacity,			// opacity
							color: color,				// color
		                    blending: blending } );		// blending

};


/*
 * Update lens flares update positions on all flares based on the screen position
 * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.
 */

THREE.LensFlare.prototype.updateLensFlares = function () {

	var f, fl = this.lensFlares.length;
	var flare;
	var vecX = -this.positionScreen.x * 2;
	var vecY = -this.positionScreen.y * 2;

	for( f = 0; f < fl; f ++ ) {

		flare = this.lensFlares[ f ];

		flare.x = this.positionScreen.x + vecX * flare.distance;
		flare.y = this.positionScreen.y + vecY * flare.distance;

		flare.wantedRotation = flare.x * Math.PI * 0.25;
		flare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;

	}

};












/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.MorphBlendMesh = function( geometry, material ) {

	THREE.Mesh.call( this, geometry, material );

	this.animationsMap = {};
	this.animationsList = [];

	// prepare default animation
	// (all frames played together in 1 second)

	var numFrames = this.geometry.morphTargets.length;

	var name = "__default";

	var startFrame = 0;
	var endFrame = numFrames - 1;

	var fps = numFrames / 1;

	this.createAnimation( name, startFrame, endFrame, fps );
	this.setAnimationWeight( name, 1 );

};

THREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );

THREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {

	var animation = {

		startFrame: start,
		endFrame: end,

		length: end - start + 1,

		fps: fps,
		duration: ( end - start ) / fps,

		lastFrame: 0,
		currentFrame: 0,

		active: false,

		time: 0,
		direction: 1,
		weight: 1,

		directionBackwards: false,
		mirroredLoop: false

	};

	this.animationsMap[ name ] = animation;
	this.animationsList.push( animation );

};

THREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {

	var pattern = /([a-z]+)(\d+)/;

	var firstAnimation, frameRanges = {};

	var geometry = this.geometry;

	for ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {

		var morph = geometry.morphTargets[ i ];
		var chunks = morph.name.match( pattern );

		if ( chunks && chunks.length > 1 ) {

			var name = chunks[ 1 ];
			var num = chunks[ 2 ];

			if ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: -Infinity };

			var range = frameRanges[ name ];

			if ( i < range.start ) range.start = i;
			if ( i > range.end ) range.end = i;

			if ( ! firstAnimation ) firstAnimation = name;

		}

	}

	for ( var name in frameRanges ) {

		var range = frameRanges[ name ];
		this.createAnimation( name, range.start, range.end, fps );

	}

	this.firstAnimation = firstAnimation;

};

THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.direction = 1;
		animation.directionBackwards = false;

	}

};

THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.direction = -1;
		animation.directionBackwards = true;

	}

};

THREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.fps = fps;
		animation.duration = ( animation.end - animation.start ) / animation.fps;

	}

};

THREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.duration = duration;
		animation.fps = ( animation.end - animation.start ) / animation.duration;

	}

};

THREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.weight = weight;

	}

};

THREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.time = time;

	}

};

THREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {

	var time = 0;

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		time = animation.time;

	}

	return time;

};

THREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {

	var duration = -1;

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		duration = animation.duration;

	}

	return duration;

};

THREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.time = 0;
		animation.active = true;

	} else {

		console.warn( "animation[" + name + "] undefined" );

	}

};

THREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {

	var animation = this.animationsMap[ name ];

	if ( animation ) {

		animation.active = false;

	}

};

THREE.MorphBlendMesh.prototype.update = function ( delta ) {

	for ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {

		var animation = this.animationsList[ i ];

		if ( ! animation.active ) continue;

		var frameTime = animation.duration / animation.length;

		animation.time += animation.direction * delta;

		if ( animation.mirroredLoop ) {

			if ( animation.time > animation.duration || animation.time < 0 ) {

				animation.direction *= -1;

				if ( animation.time > animation.duration ) {

					animation.time = animation.duration;
					animation.directionBackwards = true;

				}

				if ( animation.time < 0 ) {

					animation.time = 0;
					animation.directionBackwards = false;

				}

			}

		} else {

			animation.time = animation.time % animation.duration;

			if ( animation.time < 0 ) animation.time += animation.duration;

		}

		var keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );
		var weight = animation.weight;

		if ( keyframe !== animation.currentFrame ) {

			this.morphTargetInfluences[ animation.lastFrame ] = 0;
			this.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;

			this.morphTargetInfluences[ keyframe ] = 0;

			animation.lastFrame = animation.currentFrame;
			animation.currentFrame = keyframe;

		}

		var mix = ( animation.time % frameTime ) / frameTime;

		if ( animation.directionBackwards ) mix = 1 - mix;

		this.morphTargetInfluences[ animation.currentFrame ] = mix * weight;
		this.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;

	}

};
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.LensFlarePlugin = function () {

	var _gl, _renderer, _precision, _lensFlare = {};

	this.init = function ( renderer ) {

		_gl = renderer.context;
		_renderer = renderer;

		_precision = renderer.getPrecision();

		_lensFlare.vertices = new Float32Array( 8 + 8 );
		_lensFlare.faces = new Uint16Array( 6 );

		var i = 0;
		_lensFlare.vertices[ i++ ] = -1; _lensFlare.vertices[ i++ ] = -1;	// vertex
		_lensFlare.vertices[ i++ ] = 0;  _lensFlare.vertices[ i++ ] = 0;	// uv... etc.

		_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = -1;
		_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 0;

		_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 1;
		_lensFlare.vertices[ i++ ] = 1;  _lensFlare.vertices[ i++ ] = 1;

		_lensFlare.vertices[ i++ ] = -1; _lensFlare.vertices[ i++ ] = 1;
		_lensFlare.vertices[ i++ ] = 0;  _lensFlare.vertices[ i++ ] = 1;

		i = 0;
		_lensFlare.faces[ i++ ] = 0; _lensFlare.faces[ i++ ] = 1; _lensFlare.faces[ i++ ] = 2;
		_lensFlare.faces[ i++ ] = 0; _lensFlare.faces[ i++ ] = 2; _lensFlare.faces[ i++ ] = 3;

		// buffers

		_lensFlare.vertexBuffer     = _gl.createBuffer();
		_lensFlare.elementBuffer    = _gl.createBuffer();

		_gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );
		_gl.bufferData( _gl.ARRAY_BUFFER, _lensFlare.vertices, _gl.STATIC_DRAW );

		_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );
		_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.faces, _gl.STATIC_DRAW );

		// textures

		_lensFlare.tempTexture      = _gl.createTexture();
		_lensFlare.occlusionTexture = _gl.createTexture();

		_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );
		_gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, 16, 16, 0, _gl.RGB, _gl.UNSIGNED_BYTE, null );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );

		_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );
		_gl.texImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, 16, 16, 0, _gl.RGBA, _gl.UNSIGNED_BYTE, null );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, _gl.NEAREST );
		_gl.texParameteri( _gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, _gl.NEAREST );

		if ( _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) <= 0 ) {

			_lensFlare.hasVertexTexture = false;
			_lensFlare.program = createProgram( THREE.ShaderFlares[ "lensFlare" ], _precision );

		} else {

			_lensFlare.hasVertexTexture = true;
			_lensFlare.program = createProgram( THREE.ShaderFlares[ "lensFlareVertexTexture" ], _precision );

		}

		_lensFlare.attributes = {};
		_lensFlare.uniforms = {};

		_lensFlare.attributes.vertex       = _gl.getAttribLocation ( _lensFlare.program, "position" );
		_lensFlare.attributes.uv           = _gl.getAttribLocation ( _lensFlare.program, "uv" );

		_lensFlare.uniforms.renderType     = _gl.getUniformLocation( _lensFlare.program, "renderType" );
		_lensFlare.uniforms.map            = _gl.getUniformLocation( _lensFlare.program, "map" );
		_lensFlare.uniforms.occlusionMap   = _gl.getUniformLocation( _lensFlare.program, "occlusionMap" );
		_lensFlare.uniforms.opacity        = _gl.getUniformLocation( _lensFlare.program, "opacity" );
		_lensFlare.uniforms.color          = _gl.getUniformLocation( _lensFlare.program, "color" );
		_lensFlare.uniforms.scale          = _gl.getUniformLocation( _lensFlare.program, "scale" );
		_lensFlare.uniforms.rotation       = _gl.getUniformLocation( _lensFlare.program, "rotation" );
		_lensFlare.uniforms.screenPosition = _gl.getUniformLocation( _lensFlare.program, "screenPosition" );

	};


	/*
	 * Render lens flares
	 * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,
	 *         reads these back and calculates occlusion.
	 *         Then _lensFlare.update_lensFlares() is called to re-position and
	 *         update transparency of flares. Then they are rendered.
	 *
	 */

	this.render = function ( scene, camera, viewportWidth, viewportHeight ) {

		var flares = scene.__webglFlares,
			nFlares = flares.length;

		if ( ! nFlares ) return;

		var tempPosition = new THREE.Vector3();

		var invAspect = viewportHeight / viewportWidth,
			halfViewportWidth = viewportWidth * 0.5,
			halfViewportHeight = viewportHeight * 0.5;

		var size = 16 / viewportHeight,
			scale = new THREE.Vector2( size * invAspect, size );

		var screenPosition = new THREE.Vector3( 1, 1, 0 ),
			screenPositionPixels = new THREE.Vector2( 1, 1 );

		var uniforms = _lensFlare.uniforms,
			attributes = _lensFlare.attributes;

		// set _lensFlare program and reset blending

		_gl.useProgram( _lensFlare.program );

		_gl.enableVertexAttribArray( _lensFlare.attributes.vertex );
		_gl.enableVertexAttribArray( _lensFlare.attributes.uv );

		// loop through all lens flares to update their occlusion and positions
		// setup gl and common used attribs/unforms

		_gl.uniform1i( uniforms.occlusionMap, 0 );
		_gl.uniform1i( uniforms.map, 1 );

		_gl.bindBuffer( _gl.ARRAY_BUFFER, _lensFlare.vertexBuffer );
		_gl.vertexAttribPointer( attributes.vertex, 2, _gl.FLOAT, false, 2 * 8, 0 );
		_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );

		_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _lensFlare.elementBuffer );

		_gl.disable( _gl.CULL_FACE );
		_gl.depthMask( false );

		var i, j, jl, flare, sprite;

		for ( i = 0; i < nFlares; i ++ ) {

			size = 16 / viewportHeight;
			scale.set( size * invAspect, size );

			// calc object screen position

			flare = flares[ i ];

			tempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );

			tempPosition.applyMatrix4( camera.matrixWorldInverse );
			tempPosition.applyProjection( camera.projectionMatrix );

			// setup arrays for gl programs

			screenPosition.copy( tempPosition )

			screenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;
			screenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;

			// screen cull

			if ( _lensFlare.hasVertexTexture || (
				screenPositionPixels.x > 0 &&
				screenPositionPixels.x < viewportWidth &&
				screenPositionPixels.y > 0 &&
				screenPositionPixels.y < viewportHeight ) ) {

				// save current RGB to temp texture

				_gl.activeTexture( _gl.TEXTURE1 );
				_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );
				_gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );


				// render pink quad

				_gl.uniform1i( uniforms.renderType, 0 );
				_gl.uniform2f( uniforms.scale, scale.x, scale.y );
				_gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );

				_gl.disable( _gl.BLEND );
				_gl.enable( _gl.DEPTH_TEST );

				_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );


				// copy result to occlusionMap

				_gl.activeTexture( _gl.TEXTURE0 );
				_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.occlusionTexture );
				_gl.copyTexImage2D( _gl.TEXTURE_2D, 0, _gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );


				// restore graphics

				_gl.uniform1i( uniforms.renderType, 1 );
				_gl.disable( _gl.DEPTH_TEST );

				_gl.activeTexture( _gl.TEXTURE1 );
				_gl.bindTexture( _gl.TEXTURE_2D, _lensFlare.tempTexture );
				_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );


				// update object positions

				flare.positionScreen.copy( screenPosition )

				if ( flare.customUpdateCallback ) {

					flare.customUpdateCallback( flare );

				} else {

					flare.updateLensFlares();

				}

				// render flares

				_gl.uniform1i( uniforms.renderType, 2 );
				_gl.enable( _gl.BLEND );

				for ( j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {

					sprite = flare.lensFlares[ j ];

					if ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {

						screenPosition.x = sprite.x;
						screenPosition.y = sprite.y;
						screenPosition.z = sprite.z;

						size = sprite.size * sprite.scale / viewportHeight;

						scale.x = size * invAspect;
						scale.y = size;

						_gl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );
						_gl.uniform2f( uniforms.scale, scale.x, scale.y );
						_gl.uniform1f( uniforms.rotation, sprite.rotation );

						_gl.uniform1f( uniforms.opacity, sprite.opacity );
						_gl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );

						_renderer.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );
						_renderer.setTexture( sprite.texture, 1 );

						_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );

					}

				}

			}

		}

		// restore gl

		_gl.enable( _gl.CULL_FACE );
		_gl.enable( _gl.DEPTH_TEST );
		_gl.depthMask( true );

	};

	function createProgram ( shader, precision ) {

		var program = _gl.createProgram();

		var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );
		var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );

		var prefix = "precision " + precision + " float;\n";

		_gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );
		_gl.shaderSource( vertexShader, prefix + shader.vertexShader );

		_gl.compileShader( fragmentShader );
		_gl.compileShader( vertexShader );

		_gl.attachShader( program, fragmentShader );
		_gl.attachShader( program, vertexShader );

		_gl.linkProgram( program );

		return program;

	};

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.ShadowMapPlugin = function () {

	var _gl,
	_renderer,
	_depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,

	_frustum = new THREE.Frustum(),
	_projScreenMatrix = new THREE.Matrix4(),

	_min = new THREE.Vector3(),
	_max = new THREE.Vector3(),

	_matrixPosition = new THREE.Vector3();

	this.init = function ( renderer ) {

		_gl = renderer.context;
		_renderer = renderer;

		var depthShader = THREE.ShaderLib[ "depthRGBA" ];
		var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );

		_depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );
		_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );
		_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );
		_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );

		_depthMaterial._shadowPass = true;
		_depthMaterialMorph._shadowPass = true;
		_depthMaterialSkin._shadowPass = true;
		_depthMaterialMorphSkin._shadowPass = true;

	};

	this.render = function ( scene, camera ) {

		if ( ! ( _renderer.shadowMapEnabled && _renderer.shadowMapAutoUpdate ) ) return;

		this.update( scene, camera );

	};

	this.update = function ( scene, camera ) {

		var i, il, j, jl, n,

		shadowMap, shadowMatrix, shadowCamera,
		program, buffer, material,
		webglObject, object, light,
		renderList,

		lights = [],
		k = 0,

		fog = null;

		// set GL state for depth map

		_gl.clearColor( 1, 1, 1, 1 );
		_gl.disable( _gl.BLEND );

		_gl.enable( _gl.CULL_FACE );
		_gl.frontFace( _gl.CCW );

		if ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {

			_gl.cullFace( _gl.FRONT );

		} else {

			_gl.cullFace( _gl.BACK );

		}

		_renderer.setDepthTest( true );

		// preprocess lights
		// 	- skip lights that are not casting shadows
		//	- create virtual lights for cascaded shadow maps

		for ( i = 0, il = scene.__lights.length; i < il; i ++ ) {

			light = scene.__lights[ i ];

			if ( ! light.castShadow ) continue;

			if ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {

				for ( n = 0; n < light.shadowCascadeCount; n ++ ) {

					var virtualLight;

					if ( ! light.shadowCascadeArray[ n ] ) {

						virtualLight = createVirtualLight( light, n );
						virtualLight.originalCamera = camera;

						var gyro = new THREE.Gyroscope();
						gyro.position = light.shadowCascadeOffset;

						gyro.add( virtualLight );
						gyro.add( virtualLight.target );

						camera.add( gyro );

						light.shadowCascadeArray[ n ] = virtualLight;

						console.log( "Created virtualLight", virtualLight );

					} else {

						virtualLight = light.shadowCascadeArray[ n ];

					}

					updateVirtualLight( light, n );

					lights[ k ] = virtualLight;
					k ++;

				}

			} else {

				lights[ k ] = light;
				k ++;

			}

		}

		// render depth map

		for ( i = 0, il = lights.length; i < il; i ++ ) {

			light = lights[ i ];

			if ( ! light.shadowMap ) {

				var shadowFilter = THREE.LinearFilter;

				if ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {

					shadowFilter = THREE.NearestFilter;

				}

				var pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };

				light.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );
				light.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );

				light.shadowMatrix = new THREE.Matrix4();

			}

			if ( ! light.shadowCamera ) {

				if ( light instanceof THREE.SpotLight ) {

					light.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );

				} else if ( light instanceof THREE.DirectionalLight ) {

					light.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );

				} else {

					console.error( "Unsupported light type for shadow" );
					continue;

				}

				scene.add( light.shadowCamera );

				if ( _renderer.autoUpdateScene ) scene.updateMatrixWorld();

			}

			if ( light.shadowCameraVisible && ! light.cameraHelper ) {

				light.cameraHelper = new THREE.CameraHelper( light.shadowCamera );
				light.shadowCamera.add( light.cameraHelper );

			}

			if ( light.isVirtual && virtualLight.originalCamera == camera ) {

				updateShadowCamera( camera, light );

			}

			shadowMap = light.shadowMap;
			shadowMatrix = light.shadowMatrix;
			shadowCamera = light.shadowCamera;

			shadowCamera.position.getPositionFromMatrix( light.matrixWorld );
			_matrixPosition.getPositionFromMatrix( light.target.matrixWorld );
			shadowCamera.lookAt( _matrixPosition );
			shadowCamera.updateMatrixWorld();

			shadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );

			if ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;
			if ( light.shadowCameraVisible ) light.cameraHelper.update();

			// compute shadow matrix

			shadowMatrix.set( 0.5, 0.0, 0.0, 0.5,
							  0.0, 0.5, 0.0, 0.5,
							  0.0, 0.0, 0.5, 0.5,
							  0.0, 0.0, 0.0, 1.0 );

			shadowMatrix.multiply( shadowCamera.projectionMatrix );
			shadowMatrix.multiply( shadowCamera.matrixWorldInverse );

			// update camera matrices and frustum

			_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );
			_frustum.setFromMatrix( _projScreenMatrix );

			// render shadow map

			_renderer.setRenderTarget( shadowMap );
			_renderer.clear();

			// set object matrices & frustum culling

			renderList = scene.__webglObjects;

			for ( j = 0, jl = renderList.length; j < jl; j ++ ) {

				webglObject = renderList[ j ];
				object = webglObject.object;

				webglObject.render = false;

				if ( object.visible && object.castShadow ) {

					if ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {

						object._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );

						webglObject.render = true;

					}

				}

			}

			// render regular objects

			var objectMaterial, useMorphing, useSkinning;

			for ( j = 0, jl = renderList.length; j < jl; j ++ ) {

				webglObject = renderList[ j ];

				if ( webglObject.render ) {

					object = webglObject.object;
					buffer = webglObject.buffer;

					// culling is overriden globally for all objects
					// while rendering depth map

					// need to deal with MeshFaceMaterial somehow
					// in that case just use the first of material.materials for now
					// (proper solution would require to break objects by materials
					//  similarly to regular rendering and then set corresponding
					//  depth materials per each chunk instead of just once per object)

					objectMaterial = getObjectMaterial( object );

					useMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;
					useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;

					if ( object.customDepthMaterial ) {

						material = object.customDepthMaterial;

					} else if ( useSkinning ) {

						material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;

					} else if ( useMorphing ) {

						material = _depthMaterialMorph;

					} else {

						material = _depthMaterial;

					}

					if ( buffer instanceof THREE.BufferGeometry ) {

						_renderer.renderBufferDirect( shadowCamera, scene.__lights, fog, material, buffer, object );

					} else {

						_renderer.renderBuffer( shadowCamera, scene.__lights, fog, material, buffer, object );

					}

				}

			}

			// set matrices and render immediate objects

			renderList = scene.__webglObjectsImmediate;

			for ( j = 0, jl = renderList.length; j < jl; j ++ ) {

				webglObject = renderList[ j ];
				object = webglObject.object;

				if ( object.visible && object.castShadow ) {

					object._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );

					_renderer.renderImmediateObject( shadowCamera, scene.__lights, fog, _depthMaterial, object );

				}

			}

		}

		// restore GL state

		var clearColor = _renderer.getClearColor(),
		clearAlpha = _renderer.getClearAlpha();

		_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );
		_gl.enable( _gl.BLEND );

		if ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {

			_gl.cullFace( _gl.BACK );

		}

	};

	function createVirtualLight( light, cascade ) {

		var virtualLight = new THREE.DirectionalLight();

		virtualLight.isVirtual = true;

		virtualLight.onlyShadow = true;
		virtualLight.castShadow = true;

		virtualLight.shadowCameraNear = light.shadowCameraNear;
		virtualLight.shadowCameraFar = light.shadowCameraFar;

		virtualLight.shadowCameraLeft = light.shadowCameraLeft;
		virtualLight.shadowCameraRight = light.shadowCameraRight;
		virtualLight.shadowCameraBottom = light.shadowCameraBottom;
		virtualLight.shadowCameraTop = light.shadowCameraTop;

		virtualLight.shadowCameraVisible = light.shadowCameraVisible;

		virtualLight.shadowDarkness = light.shadowDarkness;

		virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];
		virtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];
		virtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];

		virtualLight.pointsWorld = [];
		virtualLight.pointsFrustum = [];

		var pointsWorld = virtualLight.pointsWorld,
			pointsFrustum = virtualLight.pointsFrustum;

		for ( var i = 0; i < 8; i ++ ) {

			pointsWorld[ i ] = new THREE.Vector3();
			pointsFrustum[ i ] = new THREE.Vector3();

		}

		var nearZ = light.shadowCascadeNearZ[ cascade ];
		var farZ = light.shadowCascadeFarZ[ cascade ];

		pointsFrustum[ 0 ].set( -1, -1, nearZ );
		pointsFrustum[ 1 ].set(  1, -1, nearZ );
		pointsFrustum[ 2 ].set( -1,  1, nearZ );
		pointsFrustum[ 3 ].set(  1,  1, nearZ );

		pointsFrustum[ 4 ].set( -1, -1, farZ );
		pointsFrustum[ 5 ].set(  1, -1, farZ );
		pointsFrustum[ 6 ].set( -1,  1, farZ );
		pointsFrustum[ 7 ].set(  1,  1, farZ );

		return virtualLight;

	}

	// Synchronize virtual light with the original light

	function updateVirtualLight( light, cascade ) {

		var virtualLight = light.shadowCascadeArray[ cascade ];

		virtualLight.position.copy( light.position );
		virtualLight.target.position.copy( light.target.position );
		virtualLight.lookAt( virtualLight.target );

		virtualLight.shadowCameraVisible = light.shadowCameraVisible;
		virtualLight.shadowDarkness = light.shadowDarkness;

		virtualLight.shadowBias = light.shadowCascadeBias[ cascade ];

		var nearZ = light.shadowCascadeNearZ[ cascade ];
		var farZ = light.shadowCascadeFarZ[ cascade ];

		var pointsFrustum = virtualLight.pointsFrustum;

		pointsFrustum[ 0 ].z = nearZ;
		pointsFrustum[ 1 ].z = nearZ;
		pointsFrustum[ 2 ].z = nearZ;
		pointsFrustum[ 3 ].z = nearZ;

		pointsFrustum[ 4 ].z = farZ;
		pointsFrustum[ 5 ].z = farZ;
		pointsFrustum[ 6 ].z = farZ;
		pointsFrustum[ 7 ].z = farZ;

	}

	// Fit shadow camera's ortho frustum to camera frustum

	function updateShadowCamera( camera, light ) {

		var shadowCamera = light.shadowCamera,
			pointsFrustum = light.pointsFrustum,
			pointsWorld = light.pointsWorld;

		_min.set( Infinity, Infinity, Infinity );
		_max.set( -Infinity, -Infinity, -Infinity );

		for ( var i = 0; i < 8; i ++ ) {

			var p = pointsWorld[ i ];

			p.copy( pointsFrustum[ i ] );
			THREE.ShadowMapPlugin.__projector.unprojectVector( p, camera );

			p.applyMatrix4( shadowCamera.matrixWorldInverse );

			if ( p.x < _min.x ) _min.x = p.x;
			if ( p.x > _max.x ) _max.x = p.x;

			if ( p.y < _min.y ) _min.y = p.y;
			if ( p.y > _max.y ) _max.y = p.y;

			if ( p.z < _min.z ) _min.z = p.z;
			if ( p.z > _max.z ) _max.z = p.z;

		}

		shadowCamera.left = _min.x;
		shadowCamera.right = _max.x;
		shadowCamera.top = _max.y;
		shadowCamera.bottom = _min.y;

		// can't really fit near/far
		//shadowCamera.near = _min.z;
		//shadowCamera.far = _max.z;

		shadowCamera.updateProjectionMatrix();

	}

	// For the moment just ignore objects that have multiple materials with different animation methods
	// Only the first material will be taken into account for deciding which depth material to use for shadow maps

	function getObjectMaterial( object ) {

		return object.material instanceof THREE.MeshFaceMaterial
			? object.material.materials[ 0 ]
			: object.material;

	};

};

THREE.ShadowMapPlugin.__projector = new THREE.Projector();
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */

THREE.SpritePlugin = function () {

	var _gl, _renderer, _precision, _sprite = {};

	this.init = function ( renderer ) {

		_gl = renderer.context;
		_renderer = renderer;

		_precision = renderer.getPrecision();

		_sprite.vertices = new Float32Array( 8 + 8 );
		_sprite.faces    = new Uint16Array( 6 );

		var i = 0;

		_sprite.vertices[ i++ ] = -1; _sprite.vertices[ i++ ] = -1;	// vertex 0
		_sprite.vertices[ i++ ] = 0;  _sprite.vertices[ i++ ] = 0;	// uv 0

		_sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = -1;	// vertex 1
		_sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 0;	// uv 1

		_sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 1;	// vertex 2
		_sprite.vertices[ i++ ] = 1;  _sprite.vertices[ i++ ] = 1;	// uv 2

		_sprite.vertices[ i++ ] = -1; _sprite.vertices[ i++ ] = 1;	// vertex 3
		_sprite.vertices[ i++ ] = 0;  _sprite.vertices[ i++ ] = 1;	// uv 3

		i = 0;

		_sprite.faces[ i++ ] = 0; _sprite.faces[ i++ ] = 1; _sprite.faces[ i++ ] = 2;
		_sprite.faces[ i++ ] = 0; _sprite.faces[ i++ ] = 2; _sprite.faces[ i++ ] = 3;

		_sprite.vertexBuffer  = _gl.createBuffer();
		_sprite.elementBuffer = _gl.createBuffer();

		_gl.bindBuffer( _gl.ARRAY_BUFFER, _sprite.vertexBuffer );
		_gl.bufferData( _gl.ARRAY_BUFFER, _sprite.vertices, _gl.STATIC_DRAW );

		_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _sprite.elementBuffer );
		_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, _sprite.faces, _gl.STATIC_DRAW );

		_sprite.program = createProgram( THREE.ShaderSprite[ "sprite" ], _precision );

		_sprite.attributes = {};
		_sprite.uniforms = {};

		_sprite.attributes.position           = _gl.getAttribLocation ( _sprite.program, "position" );
		_sprite.attributes.uv                 = _gl.getAttribLocation ( _sprite.program, "uv" );

		_sprite.uniforms.uvOffset             = _gl.getUniformLocation( _sprite.program, "uvOffset" );
		_sprite.uniforms.uvScale              = _gl.getUniformLocation( _sprite.program, "uvScale" );

		_sprite.uniforms.rotation             = _gl.getUniformLocation( _sprite.program, "rotation" );
		_sprite.uniforms.scale                = _gl.getUniformLocation( _sprite.program, "scale" );
		_sprite.uniforms.alignment            = _gl.getUniformLocation( _sprite.program, "alignment" );

		_sprite.uniforms.color                = _gl.getUniformLocation( _sprite.program, "color" );
		_sprite.uniforms.map                  = _gl.getUniformLocation( _sprite.program, "map" );
		_sprite.uniforms.opacity              = _gl.getUniformLocation( _sprite.program, "opacity" );

		_sprite.uniforms.useScreenCoordinates = _gl.getUniformLocation( _sprite.program, "useScreenCoordinates" );
		_sprite.uniforms.sizeAttenuation   	  = _gl.getUniformLocation( _sprite.program, "sizeAttenuation" );
		_sprite.uniforms.screenPosition    	  = _gl.getUniformLocation( _sprite.program, "screenPosition" );
		_sprite.uniforms.modelViewMatrix      = _gl.getUniformLocation( _sprite.program, "modelViewMatrix" );
		_sprite.uniforms.projectionMatrix     = _gl.getUniformLocation( _sprite.program, "projectionMatrix" );

		_sprite.uniforms.fogType 		  	  = _gl.getUniformLocation( _sprite.program, "fogType" );
		_sprite.uniforms.fogDensity 		  = _gl.getUniformLocation( _sprite.program, "fogDensity" );
		_sprite.uniforms.fogNear 		  	  = _gl.getUniformLocation( _sprite.program, "fogNear" );
		_sprite.uniforms.fogFar 		  	  = _gl.getUniformLocation( _sprite.program, "fogFar" );
		_sprite.uniforms.fogColor 		  	  = _gl.getUniformLocation( _sprite.program, "fogColor" );

		_sprite.uniforms.alphaTest 		  	  = _gl.getUniformLocation( _sprite.program, "alphaTest" );

	};

	this.render = function ( scene, camera, viewportWidth, viewportHeight ) {

		var sprites = scene.__webglSprites,
			nSprites = sprites.length;

		if ( ! nSprites ) return;

		var attributes = _sprite.attributes,
			uniforms = _sprite.uniforms;

		var invAspect = viewportHeight / viewportWidth;

		var halfViewportWidth = viewportWidth * 0.5,
			halfViewportHeight = viewportHeight * 0.5;

		// setup gl

		_gl.useProgram( _sprite.program );

		_gl.enableVertexAttribArray( attributes.position );
		_gl.enableVertexAttribArray( attributes.uv );

		_gl.disable( _gl.CULL_FACE );
		_gl.enable( _gl.BLEND );

		_gl.bindBuffer( _gl.ARRAY_BUFFER, _sprite.vertexBuffer );
		_gl.vertexAttribPointer( attributes.position, 2, _gl.FLOAT, false, 2 * 8, 0 );
		_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 2 * 8, 8 );

		_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, _sprite.elementBuffer );

		_gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );

		_gl.activeTexture( _gl.TEXTURE0 );
		_gl.uniform1i( uniforms.map, 0 );

		var oldFogType = 0;
		var sceneFogType = 0;
		var fog = scene.fog;

		if ( fog ) {

			_gl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );

			if ( fog instanceof THREE.Fog ) {

				_gl.uniform1f( uniforms.fogNear, fog.near );
				_gl.uniform1f( uniforms.fogFar, fog.far );

				_gl.uniform1i( uniforms.fogType, 1 );
				oldFogType = 1;
				sceneFogType = 1;

			} else if ( fog instanceof THREE.FogExp2 ) {

				_gl.uniform1f( uniforms.fogDensity, fog.density );

				_gl.uniform1i( uniforms.fogType, 2 );
				oldFogType = 2;
				sceneFogType = 2;

			}

		} else {

			_gl.uniform1i( uniforms.fogType, 0 );
			oldFogType = 0;
			sceneFogType = 0;

		}


		// update positions and sort

		var i, sprite, material, screenPosition, size, fogType, scale = [];

		for( i = 0; i < nSprites; i ++ ) {

			sprite = sprites[ i ];
			material = sprite.material;

			if ( ! sprite.visible || material.opacity === 0 ) continue;

			if ( ! material.useScreenCoordinates ) {

				sprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );
				sprite.z = - sprite._modelViewMatrix.elements[ 14 ];

			} else {

				sprite.z = - sprite.position.z;

			}

		}

		sprites.sort( painterSortStable );

		// render all sprites

		for( i = 0; i < nSprites; i ++ ) {

			sprite = sprites[ i ];
			material = sprite.material;

			if ( ! sprite.visible || material.opacity === 0 ) continue;

			if ( material.map && material.map.image && material.map.image.width ) {

				_gl.uniform1f( uniforms.alphaTest, material.alphaTest );

				if ( material.useScreenCoordinates === true ) {

					_gl.uniform1i( uniforms.useScreenCoordinates, 1 );
					_gl.uniform3f(
						uniforms.screenPosition,
						( ( sprite.position.x * _renderer.devicePixelRatio ) - halfViewportWidth  ) / halfViewportWidth,
						( halfViewportHeight - ( sprite.position.y * _renderer.devicePixelRatio ) ) / halfViewportHeight,
						Math.max( 0, Math.min( 1, sprite.position.z ) )
					);

					scale[ 0 ] = _renderer.devicePixelRatio;
					scale[ 1 ] = _renderer.devicePixelRatio;

				} else {

					_gl.uniform1i( uniforms.useScreenCoordinates, 0 );
					_gl.uniform1i( uniforms.sizeAttenuation, material.sizeAttenuation ? 1 : 0 );
					_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );

					scale[ 0 ] = 1;
					scale[ 1 ] = 1;

				}

				if ( scene.fog && material.fog ) {

					fogType = sceneFogType;

				} else {

					fogType = 0;

				}

				if ( oldFogType !== fogType ) {

					_gl.uniform1i( uniforms.fogType, fogType );
					oldFogType = fogType;

				}

				size = 1 / ( material.scaleByViewport ? viewportHeight : 1 );

				scale[ 0 ] *= size * invAspect * sprite.scale.x
				scale[ 1 ] *= size * sprite.scale.y;

				_gl.uniform2f( uniforms.uvScale, material.uvScale.x, material.uvScale.y );
				_gl.uniform2f( uniforms.uvOffset, material.uvOffset.x, material.uvOffset.y );
				_gl.uniform2f( uniforms.alignment, material.alignment.x, material.alignment.y );

				_gl.uniform1f( uniforms.opacity, material.opacity );
				_gl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );

				_gl.uniform1f( uniforms.rotation, sprite.rotation );
				_gl.uniform2fv( uniforms.scale, scale );

				_renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );
				_renderer.setDepthTest( material.depthTest );
				_renderer.setDepthWrite( material.depthWrite );
				_renderer.setTexture( material.map, 0 );

				_gl.drawElements( _gl.TRIANGLES, 6, _gl.UNSIGNED_SHORT, 0 );

			}

		}

		// restore gl

		_gl.enable( _gl.CULL_FACE );

	};

	function createProgram ( shader, precision ) {

		var program = _gl.createProgram();

		var fragmentShader = _gl.createShader( _gl.FRAGMENT_SHADER );
		var vertexShader = _gl.createShader( _gl.VERTEX_SHADER );

		var prefix = "precision " + precision + " float;\n";

		_gl.shaderSource( fragmentShader, prefix + shader.fragmentShader );
		_gl.shaderSource( vertexShader, prefix + shader.vertexShader );

		_gl.compileShader( fragmentShader );
		_gl.compileShader( vertexShader );

		_gl.attachShader( program, fragmentShader );
		_gl.attachShader( program, vertexShader );

		_gl.linkProgram( program );

		return program;

	};

	function painterSortStable ( a, b ) {

		if ( a.z !== b.z ) {

			return b.z - a.z;

		} else {

			return b.id - a.id;

		}

	};

};
/**
 * @author alteredq / http://alteredqualia.com/
 */

THREE.DepthPassPlugin = function () {

	this.enabled = false;
	this.renderTarget = null;

	var _gl,
	_renderer,
	_depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,

	_frustum = new THREE.Frustum(),
	_projScreenMatrix = new THREE.Matrix4();

	this.init = function ( renderer ) {

		_gl = renderer.context;
		_renderer = renderer;

		var depthShader = THREE.ShaderLib[ "depthRGBA" ];
		var depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );

		_depthMaterial = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms } );
		_depthMaterialMorph = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true } );
		_depthMaterialSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, skinning: true } );
		_depthMaterialMorphSkin = new THREE.ShaderMaterial( { fragmentShader: depthShader.fragmentShader, vertexShader: depthShader.vertexShader, uniforms: depthUniforms, morphTargets: true, skinning: true } );

		_depthMaterial._shadowPass = true;
		_depthMaterialMorph._shadowPass = true;
		_depthMaterialSkin._shadowPass = true;
		_depthMaterialMorphSkin._shadowPass = true;

	};

	this.render = function ( scene, camera ) {

		if ( ! this.enabled ) return;

		this.update( scene, camera );

	};

	this.update = function ( scene, camera ) {

		var i, il, j, jl, n,

		program, buffer, material,
		webglObject, object, light,
		renderList,

		fog = null;

		// set GL state for depth map

		_gl.clearColor( 1, 1, 1, 1 );
		_gl.disable( _gl.BLEND );

		_renderer.setDepthTest( true );

		// update scene

		if ( _renderer.autoUpdateScene ) scene.updateMatrixWorld();

		// update camera matrices and frustum

		camera.matrixWorldInverse.getInverse( camera.matrixWorld );

		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		_frustum.setFromMatrix( _projScreenMatrix );

		// render depth map

		_renderer.setRenderTarget( this.renderTarget );
		_renderer.clear();

		// set object matrices & frustum culling

		renderList = scene.__webglObjects;

		for ( j = 0, jl = renderList.length; j < jl; j ++ ) {

			webglObject = renderList[ j ];
			object = webglObject.object;

			webglObject.render = false;

			if ( object.visible ) {

				if ( ! ( object instanceof THREE.Mesh || object instanceof THREE.ParticleSystem ) || ! ( object.frustumCulled ) || _frustum.intersectsObject( object ) ) {

					object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );

					webglObject.render = true;

				}

			}

		}

		// render regular objects

		var objectMaterial, useMorphing, useSkinning;

		for ( j = 0, jl = renderList.length; j < jl; j ++ ) {

			webglObject = renderList[ j ];

			if ( webglObject.render ) {

				object = webglObject.object;
				buffer = webglObject.buffer;

				// todo: create proper depth material for particles

				if ( object instanceof THREE.ParticleSystem && !object.customDepthMaterial ) continue;

				objectMaterial = getObjectMaterial( object );

				if ( objectMaterial ) _renderer.setMaterialFaces( object.material );

				useMorphing = object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;
				useSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;

				if ( object.customDepthMaterial ) {

					material = object.customDepthMaterial;

				} else if ( useSkinning ) {

					material = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;

				} else if ( useMorphing ) {

					material = _depthMaterialMorph;

				} else {

					material = _depthMaterial;

				}

				if ( buffer instanceof THREE.BufferGeometry ) {

					_renderer.renderBufferDirect( camera, scene.__lights, fog, material, buffer, object );

				} else {

					_renderer.renderBuffer( camera, scene.__lights, fog, material, buffer, object );

				}

			}

		}

		// set matrices and render immediate objects

		renderList = scene.__webglObjectsImmediate;

		for ( j = 0, jl = renderList.length; j < jl; j ++ ) {

			webglObject = renderList[ j ];
			object = webglObject.object;

			if ( object.visible ) {

				object._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );

				_renderer.renderImmediateObject( camera, scene.__lights, fog, _depthMaterial, object );

			}

		}

		// restore GL state

		var clearColor = _renderer.getClearColor(),
		clearAlpha = _renderer.getClearAlpha();

		_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );
		_gl.enable( _gl.BLEND );

	};

	// For the moment just ignore objects that have multiple materials with different animation methods
	// Only the first material will be taken into account for deciding which depth material to use

	function getObjectMaterial( object ) {

		return object.material instanceof THREE.MeshFaceMaterial
			? object.material.materials[ 0 ]
			: object.material;

	};

};

/**
 * @author mikael emtinger / http://gomo.se/
 *
 */

THREE.ShaderFlares = {

	'lensFlareVertexTexture': {

		vertexShader: [

			"uniform lowp int renderType;",

			"uniform vec3 screenPosition;",
			"uniform vec2 scale;",
			"uniform float rotation;",

			"uniform sampler2D occlusionMap;",

			"attribute vec2 position;",
			"attribute vec2 uv;",

			"varying vec2 vUV;",
			"varying float vVisibility;",

			"void main() {",

				"vUV = uv;",

				"vec2 pos = position;",

				"if( renderType == 2 ) {",

					"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +",
									  "texture2D( occlusionMap, vec2( 0.5, 0.5 ) );",

					"vVisibility = (       visibility.r / 9.0 ) *",
								  "( 1.0 - visibility.g / 9.0 ) *",
								  "(       visibility.b / 9.0 ) *",
								  "( 1.0 - visibility.a / 9.0 );",

					"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
					"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",

				"}",

				"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",

			"}"

		].join( "\n" ),

		fragmentShader: [

			"uniform lowp int renderType;",

			"uniform sampler2D map;",
			"uniform float opacity;",
			"uniform vec3 color;",

			"varying vec2 vUV;",
			"varying float vVisibility;",

			"void main() {",

				// pink square

				"if( renderType == 0 ) {",

					"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",

				// restore

				"} else if( renderType == 1 ) {",

					"gl_FragColor = texture2D( map, vUV );",

				// flare

				"} else {",

					"vec4 texture = texture2D( map, vUV );",
					"texture.a *= opacity * vVisibility;",
					"gl_FragColor = texture;",
					"gl_FragColor.rgb *= color;",

				"}",

			"}"
		].join( "\n" )

	},


	'lensFlare': {

		vertexShader: [

			"uniform lowp int renderType;",

			"uniform vec3 screenPosition;",
			"uniform vec2 scale;",
			"uniform float rotation;",

			"attribute vec2 position;",
			"attribute vec2 uv;",

			"varying vec2 vUV;",

			"void main() {",

				"vUV = uv;",

				"vec2 pos = position;",

				"if( renderType == 2 ) {",

					"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;",
					"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;",

				"}",

				"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );",

			"}"

		].join( "\n" ),

		fragmentShader: [

			"precision mediump float;",

			"uniform lowp int renderType;",

			"uniform sampler2D map;",
			"uniform sampler2D occlusionMap;",
			"uniform float opacity;",
			"uniform vec3 color;",

			"varying vec2 vUV;",

			"void main() {",

				// pink square

				"if( renderType == 0 ) {",

					"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );",

				// restore

				"} else if( renderType == 1 ) {",

					"gl_FragColor = texture2D( map, vUV );",

				// flare

				"} else {",

					"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +",
									   "texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +",
									   "texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +",
									   "texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;",

					"visibility = ( 1.0 - visibility / 4.0 );",

					"vec4 texture = texture2D( map, vUV );",
					"texture.a *= opacity * visibility;",
					"gl_FragColor = texture;",
					"gl_FragColor.rgb *= color;",

				"}",

			"}"

		].join( "\n" )

	}

};
/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 *
 */

THREE.ShaderSprite = {

	'sprite': {

		vertexShader: [

			"uniform int useScreenCoordinates;",
			"uniform int sizeAttenuation;",
			"uniform vec3 screenPosition;",
			"uniform mat4 modelViewMatrix;",
			"uniform mat4 projectionMatrix;",
			"uniform float rotation;",
			"uniform vec2 scale;",
			"uniform vec2 alignment;",
			"uniform vec2 uvOffset;",
			"uniform vec2 uvScale;",

			"attribute vec2 position;",
			"attribute vec2 uv;",

			"varying vec2 vUV;",

			"void main() {",

				"vUV = uvOffset + uv * uvScale;",

				"vec2 alignedPosition = position + alignment;",

				"vec2 rotatedPosition;",
				"rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;",
				"rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;",

				"vec4 finalPosition;",

				"if( useScreenCoordinates != 0 ) {",

					"finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );",

				"} else {",

					"finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );",
					"finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );",

				"}",

				"gl_Position = finalPosition;",

			"}"

		].join( "\n" ),

		fragmentShader: [

			"uniform vec3 color;",
			"uniform sampler2D map;",
			"uniform float opacity;",

			"uniform int fogType;",
			"uniform vec3 fogColor;",
			"uniform float fogDensity;",
			"uniform float fogNear;",
			"uniform float fogFar;",
			"uniform float alphaTest;",

			"varying vec2 vUV;",

			"void main() {",

				"vec4 texture = texture2D( map, vUV );",

				"if ( texture.a < alphaTest ) discard;",

				"gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );",

				"if ( fogType > 0 ) {",

					"float depth = gl_FragCoord.z / gl_FragCoord.w;",
					"float fogFactor = 0.0;",

					"if ( fogType == 1 ) {",

						"fogFactor = smoothstep( fogNear, fogFar, depth );",

					"} else {",

						"const float LOG2 = 1.442695;",
						"float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );",
						"fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );",

					"}",

					"gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );",

				"}",

			"}"

		].join( "\n" )

	}

};

// Export the THREE object for **Node.js**, with
// backwards-compatibility for the old `require()` API. If we're in
// the browser, add `_` as a global object via a string identifier,
// for Closure Compiler "advanced" mode.
if (typeof exports !== 'undefined') {
  if (typeof module !== 'undefined' && module.exports) {
    exports = module.exports = THREE;
  }
  exports.THREE = THREE;
} else {
  this['THREE'] = THREE;
}

}).call(this,require('_process'))
},{"_process":4}]},{},[70]);
